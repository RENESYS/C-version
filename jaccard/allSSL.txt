
openssl:     file format elf64-x86-64


Disassembly of section .init:

0000000000412750 <_init>:
  412750:	sub    $0x8,%rsp
  412754:	mov    0x263895(%rip),%rax        # 675ff0 <_fini+0x218aec>
  41275b:	test   %rax,%rax
  41275e:	je     412765 <_init+0x15>
  412760:	callq  416660 <__gmon_start__@plt>
  412765:	add    $0x8,%rsp
  412769:	retq   

Disassembly of section .plt:

0000000000412770 <__printf_chk@plt-0x10>:
  412770:	pushq  0x263892(%rip)        # 676008 <_fini+0x218b04>
  412776:	jmpq   *0x263894(%rip)        # 676010 <_fini+0x218b0c>
  41277c:	nopl   0x0(%rax)

0000000000412780 <__printf_chk@plt>:
  412780:	jmpq   *0x263892(%rip)        # 676018 <_fini+0x218b14>
  412786:	pushq  $0x0
  41278b:	jmpq   412770 <_init+0x20>

0000000000412790 <EVP_PKEY_new_mac_key@plt>:
  412790:	jmpq   *0x26388a(%rip)        # 676020 <_fini+0x218b1c>
  412796:	pushq  $0x1
  41279b:	jmpq   412770 <_init+0x20>

00000000004127a0 <EVP_md2@plt>:
  4127a0:	jmpq   *0x263882(%rip)        # 676028 <_fini+0x218b24>
  4127a6:	pushq  $0x2
  4127ab:	jmpq   412770 <_init+0x20>

00000000004127b0 <SSL_CTX_use_certificate@plt>:
  4127b0:	jmpq   *0x26387a(%rip)        # 676030 <_fini+0x218b2c>
  4127b6:	pushq  $0x3
  4127bb:	jmpq   412770 <_init+0x20>

00000000004127c0 <setvbuf@plt>:
  4127c0:	jmpq   *0x263872(%rip)        # 676038 <_fini+0x218b34>
  4127c6:	pushq  $0x4
  4127cb:	jmpq   412770 <_init+0x20>

00000000004127d0 <RC4_options@plt>:
  4127d0:	jmpq   *0x26386a(%rip)        # 676040 <_fini+0x218b3c>
  4127d6:	pushq  $0x5
  4127db:	jmpq   412770 <_init+0x20>

00000000004127e0 <EC_GROUP_check@plt>:
  4127e0:	jmpq   *0x263862(%rip)        # 676048 <_fini+0x218b44>
  4127e6:	pushq  $0x6
  4127eb:	jmpq   412770 <_init+0x20>

00000000004127f0 <X509_REQ_get_extensions@plt>:
  4127f0:	jmpq   *0x26385a(%rip)        # 676050 <_fini+0x218b4c>
  4127f6:	pushq  $0x7
  4127fb:	jmpq   412770 <_init+0x20>

0000000000412800 <DES_ncbc_encrypt@plt>:
  412800:	jmpq   *0x263852(%rip)        # 676058 <_fini+0x218b54>
  412806:	pushq  $0x8
  41280b:	jmpq   412770 <_init+0x20>

0000000000412810 <TS_REQ_set_nonce@plt>:
  412810:	jmpq   *0x26384a(%rip)        # 676060 <_fini+0x218b5c>
  412816:	pushq  $0x9
  41281b:	jmpq   412770 <_init+0x20>

0000000000412820 <SSL_get_verify_result@plt>:
  412820:	jmpq   *0x263842(%rip)        # 676068 <_fini+0x218b64>
  412826:	pushq  $0xa
  41282b:	jmpq   412770 <_init+0x20>

0000000000412830 <__errno_location@plt>:
  412830:	jmpq   *0x26383a(%rip)        # 676070 <_fini+0x218b6c>
  412836:	pushq  $0xb
  41283b:	jmpq   412770 <_init+0x20>

0000000000412840 <X509_STORE_set_default_paths@plt>:
  412840:	jmpq   *0x263832(%rip)        # 676078 <_fini+0x218b74>
  412846:	pushq  $0xc
  41284b:	jmpq   412770 <_init+0x20>

0000000000412850 <i2d_X509_bio@plt>:
  412850:	jmpq   *0x26382a(%rip)        # 676080 <_fini+0x218b7c>
  412856:	pushq  $0xd
  41285b:	jmpq   412770 <_init+0x20>

0000000000412860 <TS_RESP_CTX_free@plt>:
  412860:	jmpq   *0x263822(%rip)        # 676088 <_fini+0x218b84>
  412866:	pushq  $0xe
  41286b:	jmpq   412770 <_init+0x20>

0000000000412870 <RSA_PKCS1_SSLeay@plt>:
  412870:	jmpq   *0x26381a(%rip)        # 676090 <_fini+0x218b8c>
  412876:	pushq  $0xf
  41287b:	jmpq   412770 <_init+0x20>

0000000000412880 <X509_get_ext_count@plt>:
  412880:	jmpq   *0x263812(%rip)        # 676098 <_fini+0x218b94>
  412886:	pushq  $0x10
  41288b:	jmpq   412770 <_init+0x20>

0000000000412890 <ERR_clear_error@plt>:
  412890:	jmpq   *0x26380a(%rip)        # 6760a0 <_fini+0x218b9c>
  412896:	pushq  $0x11
  41289b:	jmpq   412770 <_init+0x20>

00000000004128a0 <X509_REVOKED_set_serialNumber@plt>:
  4128a0:	jmpq   *0x263802(%rip)        # 6760a8 <_fini+0x218ba4>
  4128a6:	pushq  $0x12
  4128ab:	jmpq   412770 <_init+0x20>

00000000004128b0 <SSL_CTX_load_verify_locations@plt>:
  4128b0:	jmpq   *0x2637fa(%rip)        # 6760b0 <_fini+0x218bac>
  4128b6:	pushq  $0x13
  4128bb:	jmpq   412770 <_init+0x20>

00000000004128c0 <X509_get_serialNumber@plt>:
  4128c0:	jmpq   *0x2637f2(%rip)        # 6760b8 <_fini+0x218bb4>
  4128c6:	pushq  $0x14
  4128cb:	jmpq   412770 <_init+0x20>

00000000004128d0 <X509_check_purpose@plt>:
  4128d0:	jmpq   *0x2637ea(%rip)        # 6760c0 <_fini+0x218bbc>
  4128d6:	pushq  $0x15
  4128db:	jmpq   412770 <_init+0x20>

00000000004128e0 <GENERAL_NAME_print@plt>:
  4128e0:	jmpq   *0x2637e2(%rip)        # 6760c8 <_fini+0x218bc4>
  4128e6:	pushq  $0x16
  4128eb:	jmpq   412770 <_init+0x20>

00000000004128f0 <SSL_get0_next_proto_negotiated@plt>:
  4128f0:	jmpq   *0x2637da(%rip)        # 6760d0 <_fini+0x218bcc>
  4128f6:	pushq  $0x17
  4128fb:	jmpq   412770 <_init+0x20>

0000000000412900 <TS_RESP_print_bio@plt>:
  412900:	jmpq   *0x2637d2(%rip)        # 6760d8 <_fini+0x218bd4>
  412906:	pushq  $0x18
  41290b:	jmpq   412770 <_init+0x20>

0000000000412910 <i2d_PUBKEY_bio@plt>:
  412910:	jmpq   *0x2637ca(%rip)        # 6760e0 <_fini+0x218bdc>
  412916:	pushq  $0x19
  41291b:	jmpq   412770 <_init+0x20>

0000000000412920 <i2d_TS_RESP_bio@plt>:
  412920:	jmpq   *0x2637c2(%rip)        # 6760e8 <_fini+0x218be4>
  412926:	pushq  $0x1a
  41292b:	jmpq   412770 <_init+0x20>

0000000000412930 <X509_STORE_CTX_trusted_stack@plt>:
  412930:	jmpq   *0x2637ba(%rip)        # 6760f0 <_fini+0x218bec>
  412936:	pushq  $0x1b
  41293b:	jmpq   412770 <_init+0x20>

0000000000412940 <X509_get_issuer_name@plt>:
  412940:	jmpq   *0x2637b2(%rip)        # 6760f8 <_fini+0x218bf4>
  412946:	pushq  $0x1c
  41294b:	jmpq   412770 <_init+0x20>

0000000000412950 <X509_print_ex@plt>:
  412950:	jmpq   *0x2637aa(%rip)        # 676100 <_fini+0x218bfc>
  412956:	pushq  $0x1d
  41295b:	jmpq   412770 <_init+0x20>

0000000000412960 <EC_GROUP_get0_generator@plt>:
  412960:	jmpq   *0x2637a2(%rip)        # 676108 <_fini+0x218c04>
  412966:	pushq  $0x1e
  41296b:	jmpq   412770 <_init+0x20>

0000000000412970 <TLSv1_2_server_method@plt>:
  412970:	jmpq   *0x26379a(%rip)        # 676110 <_fini+0x218c0c>
  412976:	pushq  $0x1f
  41297b:	jmpq   412770 <_init+0x20>

0000000000412980 <X509_verify@plt>:
  412980:	jmpq   *0x263792(%rip)        # 676118 <_fini+0x218c14>
  412986:	pushq  $0x20
  41298b:	jmpq   412770 <_init+0x20>

0000000000412990 <private_idea_set_encrypt_key@plt>:
  412990:	jmpq   *0x26378a(%rip)        # 676120 <_fini+0x218c1c>
  412996:	pushq  $0x21
  41299b:	jmpq   412770 <_init+0x20>

00000000004129a0 <TS_CONF_set_digests@plt>:
  4129a0:	jmpq   *0x263782(%rip)        # 676128 <_fini+0x218c24>
  4129a6:	pushq  $0x22
  4129ab:	jmpq   412770 <_init+0x20>

00000000004129b0 <EVP_EncryptInit_ex@plt>:
  4129b0:	jmpq   *0x26377a(%rip)        # 676130 <_fini+0x218c2c>
  4129b6:	pushq  $0x23
  4129bb:	jmpq   412770 <_init+0x20>

00000000004129c0 <EVP_aes_256_cbc@plt>:
  4129c0:	jmpq   *0x263772(%rip)        # 676138 <_fini+0x218c34>
  4129c6:	pushq  $0x24
  4129cb:	jmpq   412770 <_init+0x20>

00000000004129d0 <i2d_PKCS8_PRIV_KEY_INFO_bio@plt>:
  4129d0:	jmpq   *0x26376a(%rip)        # 676140 <_fini+0x218c3c>
  4129d6:	pushq  $0x25
  4129db:	jmpq   412770 <_init+0x20>

00000000004129e0 <CMS_add0_recipient_password@plt>:
  4129e0:	jmpq   *0x263762(%rip)        # 676148 <_fini+0x218c44>
  4129e6:	pushq  $0x26
  4129eb:	jmpq   412770 <_init+0x20>

00000000004129f0 <EVP_DigestInit@plt>:
  4129f0:	jmpq   *0x26375a(%rip)        # 676150 <_fini+0x218c4c>
  4129f6:	pushq  $0x27
  4129fb:	jmpq   412770 <_init+0x20>

0000000000412a00 <kssl_ctx_new@plt>:
  412a00:	jmpq   *0x263752(%rip)        # 676158 <_fini+0x218c54>
  412a06:	pushq  $0x28
  412a0b:	jmpq   412770 <_init+0x20>

0000000000412a10 <__ctype_toupper_loc@plt>:
  412a10:	jmpq   *0x26374a(%rip)        # 676160 <_fini+0x218c5c>
  412a16:	pushq  $0x29
  412a1b:	jmpq   412770 <_init+0x20>

0000000000412a20 <EVP_MD_flags@plt>:
  412a20:	jmpq   *0x263742(%rip)        # 676168 <_fini+0x218c64>
  412a26:	pushq  $0x2a
  412a2b:	jmpq   412770 <_init+0x20>

0000000000412a30 <ASN1_GENERALIZEDTIME_set_string@plt>:
  412a30:	jmpq   *0x26373a(%rip)        # 676170 <_fini+0x218c6c>
  412a36:	pushq  $0x2b
  412a3b:	jmpq   412770 <_init+0x20>

0000000000412a40 <d2i_RSAPrivateKey@plt>:
  412a40:	jmpq   *0x263732(%rip)        # 676178 <_fini+0x218c74>
  412a46:	pushq  $0x2c
  412a4b:	jmpq   412770 <_init+0x20>

0000000000412a50 <CMS_decrypt_set1_pkey@plt>:
  412a50:	jmpq   *0x26372a(%rip)        # 676180 <_fini+0x218c7c>
  412a56:	pushq  $0x2d
  412a5b:	jmpq   412770 <_init+0x20>

0000000000412a60 <HMAC_CTX_cleanup@plt>:
  412a60:	jmpq   *0x263722(%rip)        # 676188 <_fini+0x218c84>
  412a66:	pushq  $0x2e
  412a6b:	jmpq   412770 <_init+0x20>

0000000000412a70 <ENGINE_load_private_key@plt>:
  412a70:	jmpq   *0x26371a(%rip)        # 676190 <_fini+0x218c8c>
  412a76:	pushq  $0x2f
  412a7b:	jmpq   412770 <_init+0x20>

0000000000412a80 <OCSP_CERTID_free@plt>:
  412a80:	jmpq   *0x263712(%rip)        # 676198 <_fini+0x218c94>
  412a86:	pushq  $0x30
  412a8b:	jmpq   412770 <_init+0x20>

0000000000412a90 <ASN1_INTEGER_free@plt>:
  412a90:	jmpq   *0x26370a(%rip)        # 6761a0 <_fini+0x218c9c>
  412a96:	pushq  $0x31
  412a9b:	jmpq   412770 <_init+0x20>

0000000000412aa0 <idea_cbc_encrypt@plt>:
  412aa0:	jmpq   *0x263702(%rip)        # 6761a8 <_fini+0x218ca4>
  412aa6:	pushq  $0x32
  412aab:	jmpq   412770 <_init+0x20>

0000000000412ab0 <SSL_get_servername_type@plt>:
  412ab0:	jmpq   *0x2636fa(%rip)        # 6761b0 <_fini+0x218cac>
  412ab6:	pushq  $0x33
  412abb:	jmpq   412770 <_init+0x20>

0000000000412ac0 <bind@plt>:
  412ac0:	jmpq   *0x2636f2(%rip)        # 6761b8 <_fini+0x218cb4>
  412ac6:	pushq  $0x34
  412acb:	jmpq   412770 <_init+0x20>

0000000000412ad0 <SSL_CTX_check_private_key@plt>:
  412ad0:	jmpq   *0x2636ea(%rip)        # 6761c0 <_fini+0x218cbc>
  412ad6:	pushq  $0x35
  412adb:	jmpq   412770 <_init+0x20>

0000000000412ae0 <OCSP_SINGLERESP_add1_ext_i2d@plt>:
  412ae0:	jmpq   *0x2636e2(%rip)        # 6761c8 <_fini+0x218cc4>
  412ae6:	pushq  $0x36
  412aeb:	jmpq   412770 <_init+0x20>

0000000000412af0 <BIO_ctrl@plt>:
  412af0:	jmpq   *0x2636da(%rip)        # 6761d0 <_fini+0x218ccc>
  412af6:	pushq  $0x37
  412afb:	jmpq   412770 <_init+0x20>

0000000000412b00 <EVP_PKEY_free@plt>:
  412b00:	jmpq   *0x2636d2(%rip)        # 6761d8 <_fini+0x218cd4>
  412b06:	pushq  $0x38
  412b0b:	jmpq   412770 <_init+0x20>

0000000000412b10 <i2d_PKCS12_bio@plt>:
  412b10:	jmpq   *0x2636ca(%rip)        # 6761e0 <_fini+0x218cdc>
  412b16:	pushq  $0x39
  412b1b:	jmpq   412770 <_init+0x20>

0000000000412b20 <CMS_sign@plt>:
  412b20:	jmpq   *0x2636c2(%rip)        # 6761e8 <_fini+0x218ce4>
  412b26:	pushq  $0x3a
  412b2b:	jmpq   412770 <_init+0x20>

0000000000412b30 <sk_value@plt>:
  412b30:	jmpq   *0x2636ba(%rip)        # 6761f0 <_fini+0x218cec>
  412b36:	pushq  $0x3b
  412b3b:	jmpq   412770 <_init+0x20>

0000000000412b40 <EVP_DigestFinal_ex@plt>:
  412b40:	jmpq   *0x2636b2(%rip)        # 6761f8 <_fini+0x218cf4>
  412b46:	pushq  $0x3c
  412b4b:	jmpq   412770 <_init+0x20>

0000000000412b50 <ENGINE_get_pkey_asn1_meth_str@plt>:
  412b50:	jmpq   *0x2636aa(%rip)        # 676200 <_fini+0x218cfc>
  412b56:	pushq  $0x3d
  412b5b:	jmpq   412770 <_init+0x20>

0000000000412b60 <SSL_CTX_set_client_cert_engine@plt>:
  412b60:	jmpq   *0x2636a2(%rip)        # 676208 <_fini+0x218d04>
  412b66:	pushq  $0x3e
  412b6b:	jmpq   412770 <_init+0x20>

0000000000412b70 <TS_REQ_print_bio@plt>:
  412b70:	jmpq   *0x26369a(%rip)        # 676210 <_fini+0x218d0c>
  412b76:	pushq  $0x3f
  412b7b:	jmpq   412770 <_init+0x20>

0000000000412b80 <EC_KEY_set_asn1_flag@plt>:
  412b80:	jmpq   *0x263692(%rip)        # 676218 <_fini+0x218d14>
  412b86:	pushq  $0x40
  412b8b:	jmpq   412770 <_init+0x20>

0000000000412b90 <UI_method_set_closer@plt>:
  412b90:	jmpq   *0x26368a(%rip)        # 676220 <_fini+0x218d1c>
  412b96:	pushq  $0x41
  412b9b:	jmpq   412770 <_init+0x20>

0000000000412ba0 <BIO_new_file@plt>:
  412ba0:	jmpq   *0x263682(%rip)        # 676228 <_fini+0x218d24>
  412ba6:	pushq  $0x42
  412bab:	jmpq   412770 <_init+0x20>

0000000000412bb0 <X509_OBJECT_free_contents@plt>:
  412bb0:	jmpq   *0x26367a(%rip)        # 676230 <_fini+0x218d2c>
  412bb6:	pushq  $0x43
  412bbb:	jmpq   412770 <_init+0x20>

0000000000412bc0 <TS_REQ_set_cert_req@plt>:
  412bc0:	jmpq   *0x263672(%rip)        # 676238 <_fini+0x218d34>
  412bc6:	pushq  $0x44
  412bcb:	jmpq   412770 <_init+0x20>

0000000000412bd0 <ASN1_item_i2d_bio@plt>:
  412bd0:	jmpq   *0x26366a(%rip)        # 676240 <_fini+0x218d3c>
  412bd6:	pushq  $0x45
  412bdb:	jmpq   412770 <_init+0x20>

0000000000412be0 <EVP_DigestVerifyInit@plt>:
  412be0:	jmpq   *0x263662(%rip)        # 676248 <_fini+0x218d44>
  412be6:	pushq  $0x46
  412beb:	jmpq   412770 <_init+0x20>

0000000000412bf0 <DES_ede3_cbc_encrypt@plt>:
  412bf0:	jmpq   *0x26365a(%rip)        # 676250 <_fini+0x218d4c>
  412bf6:	pushq  $0x47
  412bfb:	jmpq   412770 <_init+0x20>

0000000000412c00 <X509_STORE_add_lookup@plt>:
  412c00:	jmpq   *0x263652(%rip)        # 676258 <_fini+0x218d54>
  412c06:	pushq  $0x48
  412c0b:	jmpq   412770 <_init+0x20>

0000000000412c10 <SSL_CTX_set_cipher_list@plt>:
  412c10:	jmpq   *0x26364a(%rip)        # 676260 <_fini+0x218d5c>
  412c16:	pushq  $0x49
  412c1b:	jmpq   412770 <_init+0x20>

0000000000412c20 <private_Camellia_set_key@plt>:
  412c20:	jmpq   *0x263642(%rip)        # 676268 <_fini+0x218d64>
  412c26:	pushq  $0x4a
  412c2b:	jmpq   412770 <_init+0x20>

0000000000412c30 <SSL_get_peer_cert_chain@plt>:
  412c30:	jmpq   *0x26363a(%rip)        # 676270 <_fini+0x218d6c>
  412c36:	pushq  $0x4b
  412c3b:	jmpq   412770 <_init+0x20>

0000000000412c40 <NETSCAPE_X509_free@plt>:
  412c40:	jmpq   *0x263632(%rip)        # 676278 <_fini+0x218d74>
  412c46:	pushq  $0x4c
  412c4b:	jmpq   412770 <_init+0x20>

0000000000412c50 <SSL_CTX_free@plt>:
  412c50:	jmpq   *0x26362a(%rip)        # 676280 <_fini+0x218d7c>
  412c56:	pushq  $0x4d
  412c5b:	jmpq   412770 <_init+0x20>

0000000000412c60 <X509_STORE_load_locations@plt>:
  412c60:	jmpq   *0x263622(%rip)        # 676288 <_fini+0x218d84>
  412c66:	pushq  $0x4e
  412c6b:	jmpq   412770 <_init+0x20>

0000000000412c70 <CMS_final@plt>:
  412c70:	jmpq   *0x26361a(%rip)        # 676290 <_fini+0x218d8c>
  412c76:	pushq  $0x4f
  412c7b:	jmpq   412770 <_init+0x20>

0000000000412c80 <X509_get1_email@plt>:
  412c80:	jmpq   *0x263612(%rip)        # 676298 <_fini+0x218d94>
  412c86:	pushq  $0x50
  412c8b:	jmpq   412770 <_init+0x20>

0000000000412c90 <BF_options@plt>:
  412c90:	jmpq   *0x26360a(%rip)        # 6762a0 <_fini+0x218d9c>
  412c96:	pushq  $0x51
  412c9b:	jmpq   412770 <_init+0x20>

0000000000412ca0 <PEM_write_bio_X509_REQ@plt>:
  412ca0:	jmpq   *0x263602(%rip)        # 6762a8 <_fini+0x218da4>
  412ca6:	pushq  $0x52
  412cab:	jmpq   412770 <_init+0x20>

0000000000412cb0 <UI_get_string_type@plt>:
  412cb0:	jmpq   *0x2635fa(%rip)        # 6762b0 <_fini+0x218dac>
  412cb6:	pushq  $0x53
  412cbb:	jmpq   412770 <_init+0x20>

0000000000412cc0 <X509_REQ_check_private_key@plt>:
  412cc0:	jmpq   *0x2635f2(%rip)        # 6762b8 <_fini+0x218db4>
  412cc6:	pushq  $0x54
  412ccb:	jmpq   412770 <_init+0x20>

0000000000412cd0 <sk_new_null@plt>:
  412cd0:	jmpq   *0x2635ea(%rip)        # 6762c0 <_fini+0x218dbc>
  412cd6:	pushq  $0x55
  412cdb:	jmpq   412770 <_init+0x20>

0000000000412ce0 <strstr@plt>:
  412ce0:	jmpq   *0x2635e2(%rip)        # 6762c8 <_fini+0x218dc4>
  412ce6:	pushq  $0x56
  412ceb:	jmpq   412770 <_init+0x20>

0000000000412cf0 <OPENSSL_add_all_algorithms_noconf@plt>:
  412cf0:	jmpq   *0x2635da(%rip)        # 6762d0 <_fini+0x218dcc>
  412cf6:	pushq  $0x57
  412cfb:	jmpq   412770 <_init+0x20>

0000000000412d00 <X509_to_X509_REQ@plt>:
  412d00:	jmpq   *0x2635d2(%rip)        # 6762d8 <_fini+0x218dd4>
  412d06:	pushq  $0x58
  412d0b:	jmpq   412770 <_init+0x20>

0000000000412d10 <CMS_ReceiptRequest_free@plt>:
  412d10:	jmpq   *0x2635ca(%rip)        # 6762e0 <_fini+0x218ddc>
  412d16:	pushq  $0x59
  412d1b:	jmpq   412770 <_init+0x20>

0000000000412d20 <BIO_f_ssl@plt>:
  412d20:	jmpq   *0x2635c2(%rip)        # 6762e8 <_fini+0x218de4>
  412d26:	pushq  $0x5a
  412d2b:	jmpq   412770 <_init+0x20>

0000000000412d30 <X509_REQ_set_subject_name@plt>:
  412d30:	jmpq   *0x2635ba(%rip)        # 6762f0 <_fini+0x218dec>
  412d36:	pushq  $0x5b
  412d3b:	jmpq   412770 <_init+0x20>

0000000000412d40 <TXT_DB_create_index@plt>:
  412d40:	jmpq   *0x2635b2(%rip)        # 6762f8 <_fini+0x218df4>
  412d46:	pushq  $0x5c
  412d4b:	jmpq   412770 <_init+0x20>

0000000000412d50 <DHparams_print@plt>:
  412d50:	jmpq   *0x2635aa(%rip)        # 676300 <_fini+0x218dfc>
  412d56:	pushq  $0x5d
  412d5b:	jmpq   412770 <_init+0x20>

0000000000412d60 <OCSP_REQUEST_add_ext@plt>:
  412d60:	jmpq   *0x2635a2(%rip)        # 676308 <_fini+0x218e04>
  412d66:	pushq  $0x5e
  412d6b:	jmpq   412770 <_init+0x20>

0000000000412d70 <OCSP_REQUEST_new@plt>:
  412d70:	jmpq   *0x26359a(%rip)        # 676310 <_fini+0x218e0c>
  412d76:	pushq  $0x5f
  412d7b:	jmpq   412770 <_init+0x20>

0000000000412d80 <a2i_GENERAL_NAME@plt>:
  412d80:	jmpq   *0x263592(%rip)        # 676318 <_fini+0x218e14>
  412d86:	pushq  $0x60
  412d8b:	jmpq   412770 <_init+0x20>

0000000000412d90 <EVP_CIPHER_iv_length@plt>:
  412d90:	jmpq   *0x26358a(%rip)        # 676320 <_fini+0x218e1c>
  412d96:	pushq  $0x61
  412d9b:	jmpq   412770 <_init+0x20>

0000000000412da0 <BN_to_ASN1_INTEGER@plt>:
  412da0:	jmpq   *0x263582(%rip)        # 676328 <_fini+0x218e24>
  412da6:	pushq  $0x62
  412dab:	jmpq   412770 <_init+0x20>

0000000000412db0 <BIO_write@plt>:
  412db0:	jmpq   *0x26357a(%rip)        # 676330 <_fini+0x218e2c>
  412db6:	pushq  $0x63
  412dbb:	jmpq   412770 <_init+0x20>

0000000000412dc0 <SSL_cache_hit@plt>:
  412dc0:	jmpq   *0x263572(%rip)        # 676338 <_fini+0x218e34>
  412dc6:	pushq  $0x64
  412dcb:	jmpq   412770 <_init+0x20>

0000000000412dd0 <EC_GROUP_get_point_conversion_form@plt>:
  412dd0:	jmpq   *0x26356a(%rip)        # 676340 <_fini+0x218e3c>
  412dd6:	pushq  $0x65
  412ddb:	jmpq   412770 <_init+0x20>

0000000000412de0 <socket@plt>:
  412de0:	jmpq   *0x263562(%rip)        # 676348 <_fini+0x218e44>
  412de6:	pushq  $0x66
  412deb:	jmpq   412770 <_init+0x20>

0000000000412df0 <X509_STORE_CTX_get0_parent_ctx@plt>:
  412df0:	jmpq   *0x26355a(%rip)        # 676350 <_fini+0x218e4c>
  412df6:	pushq  $0x67
  412dfb:	jmpq   412770 <_init+0x20>

0000000000412e00 <RC4@plt>:
  412e00:	jmpq   *0x263552(%rip)        # 676358 <_fini+0x218e54>
  412e06:	pushq  $0x68
  412e0b:	jmpq   412770 <_init+0x20>

0000000000412e10 <NCONF_load_bio@plt>:
  412e10:	jmpq   *0x26354a(%rip)        # 676360 <_fini+0x218e5c>
  412e16:	pushq  $0x69
  412e1b:	jmpq   412770 <_init+0x20>

0000000000412e20 <UI_free@plt>:
  412e20:	jmpq   *0x263542(%rip)        # 676368 <_fini+0x218e64>
  412e26:	pushq  $0x6a
  412e2b:	jmpq   412770 <_init+0x20>

0000000000412e30 <OCSP_RESPONSE_free@plt>:
  412e30:	jmpq   *0x26353a(%rip)        # 676370 <_fini+0x218e6c>
  412e36:	pushq  $0x6b
  412e3b:	jmpq   412770 <_init+0x20>

0000000000412e40 <X509_set_serialNumber@plt>:
  412e40:	jmpq   *0x263532(%rip)        # 676378 <_fini+0x218e74>
  412e46:	pushq  $0x6c
  412e4b:	jmpq   412770 <_init+0x20>

0000000000412e50 <TLSv1_1_client_method@plt>:
  412e50:	jmpq   *0x26352a(%rip)        # 676380 <_fini+0x218e7c>
  412e56:	pushq  $0x6d
  412e5b:	jmpq   412770 <_init+0x20>

0000000000412e60 <fork@plt>:
  412e60:	jmpq   *0x263522(%rip)        # 676388 <_fini+0x218e84>
  412e66:	pushq  $0x6e
  412e6b:	jmpq   412770 <_init+0x20>

0000000000412e70 <ENGINE_finish@plt>:
  412e70:	jmpq   *0x26351a(%rip)        # 676390 <_fini+0x218e8c>
  412e76:	pushq  $0x6f
  412e7b:	jmpq   412770 <_init+0x20>

0000000000412e80 <TS_RESP_CTX_add_failure_info@plt>:
  412e80:	jmpq   *0x263512(%rip)        # 676398 <_fini+0x218e94>
  412e86:	pushq  $0x70
  412e8b:	jmpq   412770 <_init+0x20>

0000000000412e90 <X509_issuer_name_hash@plt>:
  412e90:	jmpq   *0x26350a(%rip)        # 6763a0 <_fini+0x218e9c>
  412e96:	pushq  $0x71
  412e9b:	jmpq   412770 <_init+0x20>

0000000000412ea0 <ENGINE_load_public_key@plt>:
  412ea0:	jmpq   *0x263502(%rip)        # 6763a8 <_fini+0x218ea4>
  412ea6:	pushq  $0x72
  412eab:	jmpq   412770 <_init+0x20>

0000000000412eb0 <ASN1_UTCTIME_free@plt>:
  412eb0:	jmpq   *0x2634fa(%rip)        # 6763b0 <_fini+0x218eac>
  412eb6:	pushq  $0x73
  412ebb:	jmpq   412770 <_init+0x20>

0000000000412ec0 <EVP_PKEY_keygen@plt>:
  412ec0:	jmpq   *0x2634f2(%rip)        # 6763b8 <_fini+0x218eb4>
  412ec6:	pushq  $0x74
  412ecb:	jmpq   412770 <_init+0x20>

0000000000412ed0 <SSL_CTX_get_cert_store@plt>:
  412ed0:	jmpq   *0x2634ea(%rip)        # 6763c0 <_fini+0x218ebc>
  412ed6:	pushq  $0x75
  412edb:	jmpq   412770 <_init+0x20>

0000000000412ee0 <EVP_rc2_64_cbc@plt>:
  412ee0:	jmpq   *0x2634e2(%rip)        # 6763c8 <_fini+0x218ec4>
  412ee6:	pushq  $0x76
  412eeb:	jmpq   412770 <_init+0x20>

0000000000412ef0 <OPENSSL_uni2asc@plt>:
  412ef0:	jmpq   *0x2634da(%rip)        # 6763d0 <_fini+0x218ecc>
  412ef6:	pushq  $0x77
  412efb:	jmpq   412770 <_init+0x20>

0000000000412f00 <SSL_load_error_strings@plt>:
  412f00:	jmpq   *0x2634d2(%rip)        # 6763d8 <_fini+0x218ed4>
  412f06:	pushq  $0x78
  412f0b:	jmpq   412770 <_init+0x20>

0000000000412f10 <X509_VERIFY_PARAM_free@plt>:
  412f10:	jmpq   *0x2634ca(%rip)        # 6763e0 <_fini+0x218edc>
  412f16:	pushq  $0x79
  412f1b:	jmpq   412770 <_init+0x20>

0000000000412f20 <TS_RESP_CTX_set_status_info@plt>:
  412f20:	jmpq   *0x2634c2(%rip)        # 6763e8 <_fini+0x218ee4>
  412f26:	pushq  $0x7a
  412f2b:	jmpq   412770 <_init+0x20>

0000000000412f30 <SMIME_read_PKCS7@plt>:
  412f30:	jmpq   *0x2634ba(%rip)        # 6763f0 <_fini+0x218eec>
  412f36:	pushq  $0x7b
  412f3b:	jmpq   412770 <_init+0x20>

0000000000412f40 <DH_generate_parameters_ex@plt>:
  412f40:	jmpq   *0x2634b2(%rip)        # 6763f8 <_fini+0x218ef4>
  412f46:	pushq  $0x7c
  412f4b:	jmpq   412770 <_init+0x20>

0000000000412f50 <EVP_md5@plt>:
  412f50:	jmpq   *0x2634aa(%rip)        # 676400 <_fini+0x218efc>
  412f56:	pushq  $0x7d
  412f5b:	jmpq   412770 <_init+0x20>

0000000000412f60 <EVP_aes_128_cbc@plt>:
  412f60:	jmpq   *0x2634a2(%rip)        # 676408 <_fini+0x218f04>
  412f66:	pushq  $0x7e
  412f6b:	jmpq   412770 <_init+0x20>

0000000000412f70 <X509_cmp_time@plt>:
  412f70:	jmpq   *0x26349a(%rip)        # 676410 <_fini+0x218f0c>
  412f76:	pushq  $0x7f
  412f7b:	jmpq   412770 <_init+0x20>

0000000000412f80 <OCSP_response_get1_basic@plt>:
  412f80:	jmpq   *0x263492(%rip)        # 676418 <_fini+0x218f14>
  412f86:	pushq  $0x80
  412f8b:	jmpq   412770 <_init+0x20>

0000000000412f90 <ASN1_INTEGER_to_BN@plt>:
  412f90:	jmpq   *0x26348a(%rip)        # 676420 <_fini+0x218f1c>
  412f96:	pushq  $0x81
  412f9b:	jmpq   412770 <_init+0x20>

0000000000412fa0 <EVP_CIPHER_nid@plt>:
  412fa0:	jmpq   *0x263482(%rip)        # 676428 <_fini+0x218f24>
  412fa6:	pushq  $0x82
  412fab:	jmpq   412770 <_init+0x20>

0000000000412fb0 <i2d_OCSP_RESPONSE@plt>:
  412fb0:	jmpq   *0x26347a(%rip)        # 676430 <_fini+0x218f2c>
  412fb6:	pushq  $0x83
  412fbb:	jmpq   412770 <_init+0x20>

0000000000412fc0 <BIO_snprintf@plt>:
  412fc0:	jmpq   *0x263472(%rip)        # 676438 <_fini+0x218f34>
  412fc6:	pushq  $0x84
  412fcb:	jmpq   412770 <_init+0x20>

0000000000412fd0 <TLSv1_client_method@plt>:
  412fd0:	jmpq   *0x26346a(%rip)        # 676440 <_fini+0x218f3c>
  412fd6:	pushq  $0x85
  412fdb:	jmpq   412770 <_init+0x20>

0000000000412fe0 <sk_push@plt>:
  412fe0:	jmpq   *0x263462(%rip)        # 676448 <_fini+0x218f44>
  412fe6:	pushq  $0x86
  412feb:	jmpq   412770 <_init+0x20>

0000000000412ff0 <PEM_read_bio_ECPrivateKey@plt>:
  412ff0:	jmpq   *0x26345a(%rip)        # 676450 <_fini+0x218f4c>
  412ff6:	pushq  $0x87
  412ffb:	jmpq   412770 <_init+0x20>

0000000000413000 <i2a_ASN1_OBJECT@plt>:
  413000:	jmpq   *0x263452(%rip)        # 676458 <_fini+0x218f54>
  413006:	pushq  $0x88
  41300b:	jmpq   412770 <_init+0x20>

0000000000413010 <RAND_load_file@plt>:
  413010:	jmpq   *0x26344a(%rip)        # 676460 <_fini+0x218f5c>
  413016:	pushq  $0x89
  41301b:	jmpq   412770 <_init+0x20>

0000000000413020 <UI_add_verify_string@plt>:
  413020:	jmpq   *0x263442(%rip)        # 676468 <_fini+0x218f64>
  413026:	pushq  $0x8a
  41302b:	jmpq   412770 <_init+0x20>

0000000000413030 <BN_hex2bn@plt>:
  413030:	jmpq   *0x26343a(%rip)        # 676470 <_fini+0x218f6c>
  413036:	pushq  $0x8b
  41303b:	jmpq   412770 <_init+0x20>

0000000000413040 <private_RC2_set_key@plt>:
  413040:	jmpq   *0x263432(%rip)        # 676478 <_fini+0x218f74>
  413046:	pushq  $0x8c
  41304b:	jmpq   412770 <_init+0x20>

0000000000413050 <SSL_get_current_cipher@plt>:
  413050:	jmpq   *0x26342a(%rip)        # 676480 <_fini+0x218f7c>
  413056:	pushq  $0x8d
  41305b:	jmpq   412770 <_init+0x20>

0000000000413060 <PKCS12_get_attr_gen@plt>:
  413060:	jmpq   *0x263422(%rip)        # 676488 <_fini+0x218f84>
  413066:	pushq  $0x8e
  41306b:	jmpq   412770 <_init+0x20>

0000000000413070 <accept@plt>:
  413070:	jmpq   *0x26341a(%rip)        # 676490 <_fini+0x218f8c>
  413076:	pushq  $0x8f
  41307b:	jmpq   412770 <_init+0x20>

0000000000413080 <d2i_RSA_NET@plt>:
  413080:	jmpq   *0x263412(%rip)        # 676498 <_fini+0x218f94>
  413086:	pushq  $0x90
  41308b:	jmpq   412770 <_init+0x20>

0000000000413090 <ENGINE_get_RSA@plt>:
  413090:	jmpq   *0x26340a(%rip)        # 6764a0 <_fini+0x218f9c>
  413096:	pushq  $0x91
  41309b:	jmpq   412770 <_init+0x20>

00000000004130a0 <EVP_PKEY_derive_set_peer@plt>:
  4130a0:	jmpq   *0x263402(%rip)        # 6764a8 <_fini+0x218fa4>
  4130a6:	pushq  $0x92
  4130ab:	jmpq   412770 <_init+0x20>

00000000004130b0 <EVP_PKEY_verify_init@plt>:
  4130b0:	jmpq   *0x2633fa(%rip)        # 6764b0 <_fini+0x218fac>
  4130b6:	pushq  $0x93
  4130bb:	jmpq   412770 <_init+0x20>

00000000004130c0 <CRYPTO_set_mem_debug_options@plt>:
  4130c0:	jmpq   *0x2633f2(%rip)        # 6764b8 <_fini+0x218fb4>
  4130c6:	pushq  $0x94
  4130cb:	jmpq   412770 <_init+0x20>

00000000004130d0 <EC_KEY_set_conv_form@plt>:
  4130d0:	jmpq   *0x2633ea(%rip)        # 6764c0 <_fini+0x218fbc>
  4130d6:	pushq  $0x95
  4130db:	jmpq   412770 <_init+0x20>

00000000004130e0 <X509_CRL_add0_revoked@plt>:
  4130e0:	jmpq   *0x2633e2(%rip)        # 6764c8 <_fini+0x218fc4>
  4130e6:	pushq  $0x96
  4130eb:	jmpq   412770 <_init+0x20>

00000000004130f0 <ENGINE_get_id@plt>:
  4130f0:	jmpq   *0x2633da(%rip)        # 6764d0 <_fini+0x218fcc>
  4130f6:	pushq  $0x97
  4130fb:	jmpq   412770 <_init+0x20>

0000000000413100 <PEM_write_bio_PKCS7_stream@plt>:
  413100:	jmpq   *0x2633d2(%rip)        # 6764d8 <_fini+0x218fd4>
  413106:	pushq  $0x98
  41310b:	jmpq   412770 <_init+0x20>

0000000000413110 <TS_MSG_IMPRINT_new@plt>:
  413110:	jmpq   *0x2633ca(%rip)        # 6764e0 <_fini+0x218fdc>
  413116:	pushq  $0x99
  41311b:	jmpq   412770 <_init+0x20>

0000000000413120 <SSL_accept@plt>:
  413120:	jmpq   *0x2633c2(%rip)        # 6764e8 <_fini+0x218fe4>
  413126:	pushq  $0x9a
  41312b:	jmpq   412770 <_init+0x20>

0000000000413130 <HMAC_CTX_set_flags@plt>:
  413130:	jmpq   *0x2633ba(%rip)        # 6764f0 <_fini+0x218fec>
  413136:	pushq  $0x9b
  41313b:	jmpq   412770 <_init+0x20>

0000000000413140 <EC_KEY_generate_key@plt>:
  413140:	jmpq   *0x2633b2(%rip)        # 6764f8 <_fini+0x218ff4>
  413146:	pushq  $0x9c
  41314b:	jmpq   412770 <_init+0x20>

0000000000413150 <PKCS7_free@plt>:
  413150:	jmpq   *0x2633aa(%rip)        # 676500 <_fini+0x218ffc>
  413156:	pushq  $0x9d
  41315b:	jmpq   412770 <_init+0x20>

0000000000413160 <NETSCAPE_SPKI_get_pubkey@plt>:
  413160:	jmpq   *0x2633a2(%rip)        # 676508 <_fini+0x219004>
  413166:	pushq  $0x9e
  41316b:	jmpq   412770 <_init+0x20>

0000000000413170 <X509_STORE_CTX_set0_crls@plt>:
  413170:	jmpq   *0x26339a(%rip)        # 676510 <_fini+0x21900c>
  413176:	pushq  $0x9f
  41317b:	jmpq   412770 <_init+0x20>

0000000000413180 <UI_OpenSSL@plt>:
  413180:	jmpq   *0x263392(%rip)        # 676518 <_fini+0x219014>
  413186:	pushq  $0xa0
  41318b:	jmpq   412770 <_init+0x20>

0000000000413190 <NETSCAPE_SPKI_sign@plt>:
  413190:	jmpq   *0x26338a(%rip)        # 676520 <_fini+0x21901c>
  413196:	pushq  $0xa1
  41319b:	jmpq   412770 <_init+0x20>

00000000004131a0 <OCSP_RESPONSE_print@plt>:
  4131a0:	jmpq   *0x263382(%rip)        # 676528 <_fini+0x219024>
  4131a6:	pushq  $0xa2
  4131ab:	jmpq   412770 <_init+0x20>

00000000004131b0 <write@plt>:
  4131b0:	jmpq   *0x26337a(%rip)        # 676530 <_fini+0x21902c>
  4131b6:	pushq  $0xa3
  4131bb:	jmpq   412770 <_init+0x20>

00000000004131c0 <EC_get_builtin_curves@plt>:
  4131c0:	jmpq   *0x263372(%rip)        # 676538 <_fini+0x219034>
  4131c6:	pushq  $0xa4
  4131cb:	jmpq   412770 <_init+0x20>

00000000004131d0 <X509V3_EXT_CRL_add_nconf@plt>:
  4131d0:	jmpq   *0x26336a(%rip)        # 676540 <_fini+0x21903c>
  4131d6:	pushq  $0xa5
  4131db:	jmpq   412770 <_init+0x20>

00000000004131e0 <EVP_aes_192_cbc@plt>:
  4131e0:	jmpq   *0x263362(%rip)        # 676548 <_fini+0x219044>
  4131e6:	pushq  $0xa6
  4131eb:	jmpq   412770 <_init+0x20>

00000000004131f0 <PEM_write_bio_RSA_PUBKEY@plt>:
  4131f0:	jmpq   *0x26335a(%rip)        # 676550 <_fini+0x21904c>
  4131f6:	pushq  $0xa7
  4131fb:	jmpq   412770 <_init+0x20>

0000000000413200 <PEM_read_bio_NETSCAPE_CERT_SEQUENCE@plt>:
  413200:	jmpq   *0x263352(%rip)        # 676558 <_fini+0x219054>
  413206:	pushq  $0xa8
  41320b:	jmpq   412770 <_init+0x20>

0000000000413210 <ECDH_compute_key@plt>:
  413210:	jmpq   *0x26334a(%rip)        # 676560 <_fini+0x21905c>
  413216:	pushq  $0xa9
  41321b:	jmpq   412770 <_init+0x20>

0000000000413220 <strchr@plt>:
  413220:	jmpq   *0x263342(%rip)        # 676568 <_fini+0x219064>
  413226:	pushq  $0xaa
  41322b:	jmpq   412770 <_init+0x20>

0000000000413230 <CMS_get0_signers@plt>:
  413230:	jmpq   *0x26333a(%rip)        # 676570 <_fini+0x21906c>
  413236:	pushq  $0xab
  41323b:	jmpq   412770 <_init+0x20>

0000000000413240 <ENGINE_get_first@plt>:
  413240:	jmpq   *0x263332(%rip)        # 676578 <_fini+0x219074>
  413246:	pushq  $0xac
  41324b:	jmpq   412770 <_init+0x20>

0000000000413250 <SSL_CTX_set_info_callback@plt>:
  413250:	jmpq   *0x26332a(%rip)        # 676580 <_fini+0x21907c>
  413256:	pushq  $0xad
  41325b:	jmpq   412770 <_init+0x20>

0000000000413260 <DSA_sign@plt>:
  413260:	jmpq   *0x263322(%rip)        # 676588 <_fini+0x219084>
  413266:	pushq  $0xae
  41326b:	jmpq   412770 <_init+0x20>

0000000000413270 <X509_trust_clear@plt>:
  413270:	jmpq   *0x26331a(%rip)        # 676590 <_fini+0x21908c>
  413276:	pushq  $0xaf
  41327b:	jmpq   412770 <_init+0x20>

0000000000413280 <HMAC_Final@plt>:
  413280:	jmpq   *0x263312(%rip)        # 676598 <_fini+0x219094>
  413286:	pushq  $0xb0
  41328b:	jmpq   412770 <_init+0x20>

0000000000413290 <TS_CONF_set_certs@plt>:
  413290:	jmpq   *0x26330a(%rip)        # 6765a0 <_fini+0x21909c>
  413296:	pushq  $0xb1
  41329b:	jmpq   412770 <_init+0x20>

00000000004132a0 <NETSCAPE_SPKI_print@plt>:
  4132a0:	jmpq   *0x263302(%rip)        # 6765a8 <_fini+0x2190a4>
  4132a6:	pushq  $0xb2
  4132ab:	jmpq   412770 <_init+0x20>

00000000004132b0 <X509_REQ_verify@plt>:
  4132b0:	jmpq   *0x2632fa(%rip)        # 6765b0 <_fini+0x2190ac>
  4132b6:	pushq  $0xb3
  4132bb:	jmpq   412770 <_init+0x20>

00000000004132c0 <CMS_decrypt@plt>:
  4132c0:	jmpq   *0x2632f2(%rip)        # 6765b8 <_fini+0x2190b4>
  4132c6:	pushq  $0xb4
  4132cb:	jmpq   412770 <_init+0x20>

00000000004132d0 <OCSP_request_sign@plt>:
  4132d0:	jmpq   *0x2632ea(%rip)        # 6765c0 <_fini+0x2190bc>
  4132d6:	pushq  $0xb5
  4132db:	jmpq   412770 <_init+0x20>

00000000004132e0 <EVP_PKEY_CTX_ctrl@plt>:
  4132e0:	jmpq   *0x2632e2(%rip)        # 6765c8 <_fini+0x2190c4>
  4132e6:	pushq  $0xb6
  4132eb:	jmpq   412770 <_init+0x20>

00000000004132f0 <ASN1_UTCTIME_set_string@plt>:
  4132f0:	jmpq   *0x2632da(%rip)        # 6765d0 <_fini+0x2190cc>
  4132f6:	pushq  $0xb7
  4132fb:	jmpq   412770 <_init+0x20>

0000000000413300 <ASN1_item_d2i_bio@plt>:
  413300:	jmpq   *0x2632d2(%rip)        # 6765d8 <_fini+0x2190d4>
  413306:	pushq  $0xb8
  41330b:	jmpq   412770 <_init+0x20>

0000000000413310 <X509_NAME_get_entry@plt>:
  413310:	jmpq   *0x2632ca(%rip)        # 6765e0 <_fini+0x2190dc>
  413316:	pushq  $0xb9
  41331b:	jmpq   412770 <_init+0x20>

0000000000413320 <OCSP_REQ_CTX_set1_req@plt>:
  413320:	jmpq   *0x2632c2(%rip)        # 6765e8 <_fini+0x2190e4>
  413326:	pushq  $0xba
  41332b:	jmpq   412770 <_init+0x20>

0000000000413330 <DSAparams_print@plt>:
  413330:	jmpq   *0x2632ba(%rip)        # 6765f0 <_fini+0x2190ec>
  413336:	pushq  $0xbb
  41333b:	jmpq   412770 <_init+0x20>

0000000000413340 <EC_GROUP_set_point_conversion_form@plt>:
  413340:	jmpq   *0x2632b2(%rip)        # 6765f8 <_fini+0x2190f4>
  413346:	pushq  $0xbc
  41334b:	jmpq   412770 <_init+0x20>

0000000000413350 <SSL_do_handshake@plt>:
  413350:	jmpq   *0x2632aa(%rip)        # 676600 <_fini+0x2190fc>
  413356:	pushq  $0xbd
  41335b:	jmpq   412770 <_init+0x20>

0000000000413360 <ENGINE_free@plt>:
  413360:	jmpq   *0x2632a2(%rip)        # 676608 <_fini+0x219104>
  413366:	pushq  $0xbe
  41336b:	jmpq   412770 <_init+0x20>

0000000000413370 <TLSv1_server_method@plt>:
  413370:	jmpq   *0x26329a(%rip)        # 676610 <_fini+0x21910c>
  413376:	pushq  $0xbf
  41337b:	jmpq   412770 <_init+0x20>

0000000000413380 <X509_STORE_CTX_init@plt>:
  413380:	jmpq   *0x263292(%rip)        # 676618 <_fini+0x219114>
  413386:	pushq  $0xc0
  41338b:	jmpq   412770 <_init+0x20>

0000000000413390 <BN_bn2bin@plt>:
  413390:	jmpq   *0x26328a(%rip)        # 676620 <_fini+0x21911c>
  413396:	pushq  $0xc1
  41339b:	jmpq   412770 <_init+0x20>

00000000004133a0 <TXT_DB_write@plt>:
  4133a0:	jmpq   *0x263282(%rip)        # 676628 <_fini+0x219124>
  4133a6:	pushq  $0xc2
  4133ab:	jmpq   412770 <_init+0x20>

00000000004133b0 <ASN1_GENERALIZEDTIME_free@plt>:
  4133b0:	jmpq   *0x26327a(%rip)        # 676630 <_fini+0x21912c>
  4133b6:	pushq  $0xc3
  4133bb:	jmpq   412770 <_init+0x20>

00000000004133c0 <RAND_seed@plt>:
  4133c0:	jmpq   *0x263272(%rip)        # 676638 <_fini+0x219134>
  4133c6:	pushq  $0xc4
  4133cb:	jmpq   412770 <_init+0x20>

00000000004133d0 <private_SEED_set_key@plt>:
  4133d0:	jmpq   *0x26326a(%rip)        # 676640 <_fini+0x21913c>
  4133d6:	pushq  $0xc5
  4133db:	jmpq   412770 <_init+0x20>

00000000004133e0 <WHIRLPOOL@plt>:
  4133e0:	jmpq   *0x263262(%rip)        # 676648 <_fini+0x219144>
  4133e6:	pushq  $0xc6
  4133eb:	jmpq   412770 <_init+0x20>

00000000004133f0 <X509_sign@plt>:
  4133f0:	jmpq   *0x26325a(%rip)        # 676650 <_fini+0x21914c>
  4133f6:	pushq  $0xc7
  4133fb:	jmpq   412770 <_init+0x20>

0000000000413400 <X509_alias_set1@plt>:
  413400:	jmpq   *0x263252(%rip)        # 676658 <_fini+0x219154>
  413406:	pushq  $0xc8
  41340b:	jmpq   412770 <_init+0x20>

0000000000413410 <SSL_export_keying_material@plt>:
  413410:	jmpq   *0x26324a(%rip)        # 676660 <_fini+0x21915c>
  413416:	pushq  $0xc9
  41341b:	jmpq   412770 <_init+0x20>

0000000000413420 <TXT_DB_get_by_index@plt>:
  413420:	jmpq   *0x263242(%rip)        # 676668 <_fini+0x219164>
  413426:	pushq  $0xca
  41342b:	jmpq   412770 <_init+0x20>

0000000000413430 <i2d_RSAPublicKey_bio@plt>:
  413430:	jmpq   *0x26323a(%rip)        # 676670 <_fini+0x21916c>
  413436:	pushq  $0xcb
  41343b:	jmpq   412770 <_init+0x20>

0000000000413440 <OCSP_REQUEST_print@plt>:
  413440:	jmpq   *0x263232(%rip)        # 676678 <_fini+0x219174>
  413446:	pushq  $0xcc
  41344b:	jmpq   412770 <_init+0x20>

0000000000413450 <ASN1_ENUMERATED_new@plt>:
  413450:	jmpq   *0x26322a(%rip)        # 676680 <_fini+0x21917c>
  413456:	pushq  $0xcd
  41345b:	jmpq   412770 <_init+0x20>

0000000000413460 <EVP_camellia_192_cbc@plt>:
  413460:	jmpq   *0x263222(%rip)        # 676688 <_fini+0x219184>
  413466:	pushq  $0xce
  41346b:	jmpq   412770 <_init+0x20>

0000000000413470 <strlen@plt>:
  413470:	jmpq   *0x26321a(%rip)        # 676690 <_fini+0x21918c>
  413476:	pushq  $0xcf
  41347b:	jmpq   412770 <_init+0x20>

0000000000413480 <X509_CRL_set_version@plt>:
  413480:	jmpq   *0x263212(%rip)        # 676698 <_fini+0x219194>
  413486:	pushq  $0xd0
  41348b:	jmpq   412770 <_init+0x20>

0000000000413490 <PEM_write_bio_X509@plt>:
  413490:	jmpq   *0x26320a(%rip)        # 6766a0 <_fini+0x21919c>
  413496:	pushq  $0xd1
  41349b:	jmpq   412770 <_init+0x20>

00000000004134a0 <SSL_set_debug@plt>:
  4134a0:	jmpq   *0x263202(%rip)        # 6766a8 <_fini+0x2191a4>
  4134a6:	pushq  $0xd2
  4134ab:	jmpq   412770 <_init+0x20>

00000000004134b0 <X509_STORE_free@plt>:
  4134b0:	jmpq   *0x2631fa(%rip)        # 6766b0 <_fini+0x2191ac>
  4134b6:	pushq  $0xd3
  4134bb:	jmpq   412770 <_init+0x20>

00000000004134c0 <i2d_PKCS8_bio@plt>:
  4134c0:	jmpq   *0x2631f2(%rip)        # 6766b8 <_fini+0x2191b4>
  4134c6:	pushq  $0xd4
  4134cb:	jmpq   412770 <_init+0x20>

00000000004134d0 <PEM_write_bio_PKCS8@plt>:
  4134d0:	jmpq   *0x2631ea(%rip)        # 6766c0 <_fini+0x2191bc>
  4134d6:	pushq  $0xd5
  4134db:	jmpq   412770 <_init+0x20>

00000000004134e0 <memcmp@plt>:
  4134e0:	jmpq   *0x2631e2(%rip)        # 6766c8 <_fini+0x2191c4>
  4134e6:	pushq  $0xd6
  4134eb:	jmpq   412770 <_init+0x20>

00000000004134f0 <SSL_get_current_compression@plt>:
  4134f0:	jmpq   *0x2631da(%rip)        # 6766d0 <_fini+0x2191cc>
  4134f6:	pushq  $0xd7
  4134fb:	jmpq   412770 <_init+0x20>

0000000000413500 <ENGINE_register_all_complete@plt>:
  413500:	jmpq   *0x2631d2(%rip)        # 6766d8 <_fini+0x2191d4>
  413506:	pushq  $0xd8
  41350b:	jmpq   412770 <_init+0x20>

0000000000413510 <ASN1_GENERALIZEDTIME_new@plt>:
  413510:	jmpq   *0x2631ca(%rip)        # 6766e0 <_fini+0x2191dc>
  413516:	pushq  $0xd9
  41351b:	jmpq   412770 <_init+0x20>

0000000000413520 <PKCS12_unpack_p7data@plt>:
  413520:	jmpq   *0x2631c2(%rip)        # 6766e8 <_fini+0x2191e4>
  413526:	pushq  $0xda
  41352b:	jmpq   412770 <_init+0x20>

0000000000413530 <SSL_set_verify@plt>:
  413530:	jmpq   *0x2631ba(%rip)        # 6766f0 <_fini+0x2191ec>
  413536:	pushq  $0xdb
  41353b:	jmpq   412770 <_init+0x20>

0000000000413540 <ENGINE_ctrl_cmd_string@plt>:
  413540:	jmpq   *0x2631b2(%rip)        # 6766f8 <_fini+0x2191f4>
  413546:	pushq  $0xdc
  41354b:	jmpq   412770 <_init+0x20>

0000000000413550 <i2b_PVK_bio@plt>:
  413550:	jmpq   *0x2631aa(%rip)        # 676700 <_fini+0x2191fc>
  413556:	pushq  $0xdd
  41355b:	jmpq   412770 <_init+0x20>

0000000000413560 <BUF_strlcpy@plt>:
  413560:	jmpq   *0x2631a2(%rip)        # 676708 <_fini+0x219204>
  413566:	pushq  $0xde
  41356b:	jmpq   412770 <_init+0x20>

0000000000413570 <X509_REVOKED_set_revocationDate@plt>:
  413570:	jmpq   *0x26319a(%rip)        # 676710 <_fini+0x21920c>
  413576:	pushq  $0xdf
  41357b:	jmpq   412770 <_init+0x20>

0000000000413580 <DES_set_key_unchecked@plt>:
  413580:	jmpq   *0x263192(%rip)        # 676718 <_fini+0x219214>
  413586:	pushq  $0xe0
  41358b:	jmpq   412770 <_init+0x20>

0000000000413590 <SSL_get_cipher_list@plt>:
  413590:	jmpq   *0x26318a(%rip)        # 676720 <_fini+0x21921c>
  413596:	pushq  $0xe1
  41359b:	jmpq   412770 <_init+0x20>

00000000004135a0 <TS_CONF_set_serial@plt>:
  4135a0:	jmpq   *0x263182(%rip)        # 676728 <_fini+0x219224>
  4135a6:	pushq  $0xe2
  4135ab:	jmpq   412770 <_init+0x20>

00000000004135b0 <PEM_write_bio_X509_REQ_NEW@plt>:
  4135b0:	jmpq   *0x26317a(%rip)        # 676730 <_fini+0x21922c>
  4135b6:	pushq  $0xe3
  4135bb:	jmpq   412770 <_init+0x20>

00000000004135c0 <EVP_EncryptFinal_ex@plt>:
  4135c0:	jmpq   *0x263172(%rip)        # 676738 <_fini+0x219234>
  4135c6:	pushq  $0xe4
  4135cb:	jmpq   412770 <_init+0x20>

00000000004135d0 <strncmp@plt>:
  4135d0:	jmpq   *0x26316a(%rip)        # 676740 <_fini+0x21923c>
  4135d6:	pushq  $0xe5
  4135db:	jmpq   412770 <_init+0x20>

00000000004135e0 <EVP_PKEY_CTX_new@plt>:
  4135e0:	jmpq   *0x263162(%rip)        # 676748 <_fini+0x219244>
  4135e6:	pushq  $0xe6
  4135eb:	jmpq   412770 <_init+0x20>

00000000004135f0 <EVP_PKEY_size@plt>:
  4135f0:	jmpq   *0x26315a(%rip)        # 676750 <_fini+0x21924c>
  4135f6:	pushq  $0xe7
  4135fb:	jmpq   412770 <_init+0x20>

0000000000413600 <ENGINE_get_DSA@plt>:
  413600:	jmpq   *0x263152(%rip)        # 676758 <_fini+0x219254>
  413606:	pushq  $0xe8
  41360b:	jmpq   412770 <_init+0x20>

0000000000413610 <X509_verify_cert@plt>:
  413610:	jmpq   *0x26314a(%rip)        # 676760 <_fini+0x21925c>
  413616:	pushq  $0xe9
  41361b:	jmpq   412770 <_init+0x20>

0000000000413620 <X509_PURPOSE_get_id@plt>:
  413620:	jmpq   *0x263142(%rip)        # 676768 <_fini+0x219264>
  413626:	pushq  $0xea
  41362b:	jmpq   412770 <_init+0x20>

0000000000413630 <__strncat_chk@plt>:
  413630:	jmpq   *0x26313a(%rip)        # 676770 <_fini+0x21926c>
  413636:	pushq  $0xeb
  41363b:	jmpq   412770 <_init+0x20>

0000000000413640 <EVP_PKEY_asn1_find_str@plt>:
  413640:	jmpq   *0x263132(%rip)        # 676778 <_fini+0x219274>
  413646:	pushq  $0xec
  41364b:	jmpq   412770 <_init+0x20>

0000000000413650 <OCSP_parse_url@plt>:
  413650:	jmpq   *0x26312a(%rip)        # 676780 <_fini+0x21927c>
  413656:	pushq  $0xed
  41365b:	jmpq   412770 <_init+0x20>

0000000000413660 <ERR_remove_thread_state@plt>:
  413660:	jmpq   *0x263122(%rip)        # 676788 <_fini+0x219284>
  413666:	pushq  $0xee
  41366b:	jmpq   412770 <_init+0x20>

0000000000413670 <CMS_uncompress@plt>:
  413670:	jmpq   *0x26311a(%rip)        # 676790 <_fini+0x21928c>
  413676:	pushq  $0xef
  41367b:	jmpq   412770 <_init+0x20>

0000000000413680 <X509_INFO_free@plt>:
  413680:	jmpq   *0x263112(%rip)        # 676798 <_fini+0x219294>
  413686:	pushq  $0xf0
  41368b:	jmpq   412770 <_init+0x20>

0000000000413690 <RSA_public_encrypt@plt>:
  413690:	jmpq   *0x26310a(%rip)        # 6767a0 <_fini+0x21929c>
  413696:	pushq  $0xf1
  41369b:	jmpq   412770 <_init+0x20>

00000000004136a0 <UI_new_method@plt>:
  4136a0:	jmpq   *0x263102(%rip)        # 6767a8 <_fini+0x2192a4>
  4136a6:	pushq  $0xf2
  4136ab:	jmpq   412770 <_init+0x20>

00000000004136b0 <PEM_write_bio_DSAparams@plt>:
  4136b0:	jmpq   *0x2630fa(%rip)        # 6767b0 <_fini+0x2192ac>
  4136b6:	pushq  $0xf3
  4136bb:	jmpq   412770 <_init+0x20>

00000000004136c0 <SSL_write@plt>:
  4136c0:	jmpq   *0x2630f2(%rip)        # 6767b8 <_fini+0x2192b4>
  4136c6:	pushq  $0xf4
  4136cb:	jmpq   412770 <_init+0x20>

00000000004136d0 <TS_MSG_IMPRINT_set_msg@plt>:
  4136d0:	jmpq   *0x2630ea(%rip)        # 6767c0 <_fini+0x2192bc>
  4136d6:	pushq  $0xf5
  4136db:	jmpq   412770 <_init+0x20>

00000000004136e0 <PEM_read_bio_PUBKEY@plt>:
  4136e0:	jmpq   *0x2630e2(%rip)        # 6767c8 <_fini+0x2192c4>
  4136e6:	pushq  $0xf6
  4136eb:	jmpq   412770 <_init+0x20>

00000000004136f0 <CONF_modules_unload@plt>:
  4136f0:	jmpq   *0x2630da(%rip)        # 6767d0 <_fini+0x2192cc>
  4136f6:	pushq  $0xf7
  4136fb:	jmpq   412770 <_init+0x20>

0000000000413700 <X509_PURPOSE_get_count@plt>:
  413700:	jmpq   *0x2630d2(%rip)        # 6767d8 <_fini+0x2192d4>
  413706:	pushq  $0xf8
  41370b:	jmpq   412770 <_init+0x20>

0000000000413710 <X509_digest@plt>:
  413710:	jmpq   *0x2630ca(%rip)        # 6767e0 <_fini+0x2192dc>
  413716:	pushq  $0xf9
  41371b:	jmpq   412770 <_init+0x20>

0000000000413720 <OBJ_txt2nid@plt>:
  413720:	jmpq   *0x2630c2(%rip)        # 6767e8 <_fini+0x2192e4>
  413726:	pushq  $0xfa
  41372b:	jmpq   412770 <_init+0x20>

0000000000413730 <BIO_number_read@plt>:
  413730:	jmpq   *0x2630ba(%rip)        # 6767f0 <_fini+0x2192ec>
  413736:	pushq  $0xfb
  41373b:	jmpq   412770 <_init+0x20>

0000000000413740 <X509V3_parse_list@plt>:
  413740:	jmpq   *0x2630b2(%rip)        # 6767f8 <_fini+0x2192f4>
  413746:	pushq  $0xfc
  41374b:	jmpq   412770 <_init+0x20>

0000000000413750 <d2i_PKCS8_PRIV_KEY_INFO_bio@plt>:
  413750:	jmpq   *0x2630aa(%rip)        # 676800 <_fini+0x2192fc>
  413756:	pushq  $0xfd
  41375b:	jmpq   412770 <_init+0x20>

0000000000413760 <ASN1_parse_dump@plt>:
  413760:	jmpq   *0x2630a2(%rip)        # 676808 <_fini+0x219304>
  413766:	pushq  $0xfe
  41376b:	jmpq   412770 <_init+0x20>

0000000000413770 <d2i_PKCS8_bio@plt>:
  413770:	jmpq   *0x26309a(%rip)        # 676810 <_fini+0x21930c>
  413776:	pushq  $0xff
  41377b:	jmpq   412770 <_init+0x20>

0000000000413780 <X509_STORE_CTX_cleanup@plt>:
  413780:	jmpq   *0x263092(%rip)        # 676818 <_fini+0x219314>
  413786:	pushq  $0x100
  41378b:	jmpq   412770 <_init+0x20>

0000000000413790 <EVP_sha1@plt>:
  413790:	jmpq   *0x26308a(%rip)        # 676820 <_fini+0x21931c>
  413796:	pushq  $0x101
  41379b:	jmpq   412770 <_init+0x20>

00000000004137a0 <TS_REQ_to_TS_VERIFY_CTX@plt>:
  4137a0:	jmpq   *0x263082(%rip)        # 676828 <_fini+0x219324>
  4137a6:	pushq  $0x102
  4137ab:	jmpq   412770 <_init+0x20>

00000000004137b0 <PEM_X509_INFO_read_bio@plt>:
  4137b0:	jmpq   *0x26307a(%rip)        # 676830 <_fini+0x21932c>
  4137b6:	pushq  $0x103
  4137bb:	jmpq   412770 <_init+0x20>

00000000004137c0 <OCSP_REQ_CTX_add1_header@plt>:
  4137c0:	jmpq   *0x263072(%rip)        # 676838 <_fini+0x219334>
  4137c6:	pushq  $0x104
  4137cb:	jmpq   412770 <_init+0x20>

00000000004137d0 <DH_new@plt>:
  4137d0:	jmpq   *0x26306a(%rip)        # 676840 <_fini+0x21933c>
  4137d6:	pushq  $0x105
  4137db:	jmpq   412770 <_init+0x20>

00000000004137e0 <EVP_DigestSignFinal@plt>:
  4137e0:	jmpq   *0x263062(%rip)        # 676848 <_fini+0x219344>
  4137e6:	pushq  $0x106
  4137eb:	jmpq   412770 <_init+0x20>

00000000004137f0 <NCONF_free@plt>:
  4137f0:	jmpq   *0x26305a(%rip)        # 676850 <_fini+0x21934c>
  4137f6:	pushq  $0x107
  4137fb:	jmpq   412770 <_init+0x20>

0000000000413800 <BIO_set_callback@plt>:
  413800:	jmpq   *0x263052(%rip)        # 676858 <_fini+0x219354>
  413806:	pushq  $0x108
  41380b:	jmpq   412770 <_init+0x20>

0000000000413810 <EVP_idea_cbc@plt>:
  413810:	jmpq   *0x26304a(%rip)        # 676860 <_fini+0x21935c>
  413816:	pushq  $0x109
  41381b:	jmpq   412770 <_init+0x20>

0000000000413820 <SSL_free@plt>:
  413820:	jmpq   *0x263042(%rip)        # 676868 <_fini+0x219364>
  413826:	pushq  $0x10a
  41382b:	jmpq   412770 <_init+0x20>

0000000000413830 <EVP_PKEY_id@plt>:
  413830:	jmpq   *0x26303a(%rip)        # 676870 <_fini+0x21936c>
  413836:	pushq  $0x10b
  41383b:	jmpq   412770 <_init+0x20>

0000000000413840 <BIO_f_buffer@plt>:
  413840:	jmpq   *0x263032(%rip)        # 676878 <_fini+0x219374>
  413846:	pushq  $0x10c
  41384b:	jmpq   412770 <_init+0x20>

0000000000413850 <RSA_private_decrypt@plt>:
  413850:	jmpq   *0x26302a(%rip)        # 676880 <_fini+0x21937c>
  413856:	pushq  $0x10d
  41385b:	jmpq   412770 <_init+0x20>

0000000000413860 <SSL_set_SSL_CTX@plt>:
  413860:	jmpq   *0x263022(%rip)        # 676888 <_fini+0x219384>
  413866:	pushq  $0x10e
  41386b:	jmpq   412770 <_init+0x20>

0000000000413870 <EVP_PKEY_print_private@plt>:
  413870:	jmpq   *0x26301a(%rip)        # 676890 <_fini+0x21938c>
  413876:	pushq  $0x10f
  41387b:	jmpq   412770 <_init+0x20>

0000000000413880 <X509_NAME_free@plt>:
  413880:	jmpq   *0x263012(%rip)        # 676898 <_fini+0x219394>
  413886:	pushq  $0x110
  41388b:	jmpq   412770 <_init+0x20>

0000000000413890 <SSL_CTX_new@plt>:
  413890:	jmpq   *0x26300a(%rip)        # 6768a0 <_fini+0x21939c>
  413896:	pushq  $0x111
  41389b:	jmpq   412770 <_init+0x20>

00000000004138a0 <BIO_gets@plt>:
  4138a0:	jmpq   *0x263002(%rip)        # 6768a8 <_fini+0x2193a4>
  4138a6:	pushq  $0x112
  4138ab:	jmpq   412770 <_init+0x20>

00000000004138b0 <EC_KEY_get0_public_key@plt>:
  4138b0:	jmpq   *0x262ffa(%rip)        # 6768b0 <_fini+0x2193ac>
  4138b6:	pushq  $0x113
  4138bb:	jmpq   412770 <_init+0x20>

00000000004138c0 <ENGINE_init@plt>:
  4138c0:	jmpq   *0x262ff2(%rip)        # 6768b8 <_fini+0x2193b4>
  4138c6:	pushq  $0x114
  4138cb:	jmpq   412770 <_init+0x20>

00000000004138d0 <SSL_CTX_set_generate_session_id@plt>:
  4138d0:	jmpq   *0x262fea(%rip)        # 6768c0 <_fini+0x2193bc>
  4138d6:	pushq  $0x115
  4138db:	jmpq   412770 <_init+0x20>

00000000004138e0 <BN_free@plt>:
  4138e0:	jmpq   *0x262fe2(%rip)        # 6768c8 <_fini+0x2193c4>
  4138e6:	pushq  $0x116
  4138eb:	jmpq   412770 <_init+0x20>

00000000004138f0 <lh_insert@plt>:
  4138f0:	jmpq   *0x262fda(%rip)        # 6768d0 <_fini+0x2193cc>
  4138f6:	pushq  $0x117
  4138fb:	jmpq   412770 <_init+0x20>

0000000000413900 <X509_REQ_print_ex@plt>:
  413900:	jmpq   *0x262fd2(%rip)        # 6768d8 <_fini+0x2193d4>
  413906:	pushq  $0x118
  41390b:	jmpq   412770 <_init+0x20>

0000000000413910 <X509V3_set_ctx@plt>:
  413910:	jmpq   *0x262fca(%rip)        # 6768e0 <_fini+0x2193dc>
  413916:	pushq  $0x119
  41391b:	jmpq   412770 <_init+0x20>

0000000000413920 <OBJ_nid2ln@plt>:
  413920:	jmpq   *0x262fc2(%rip)        # 6768e8 <_fini+0x2193e4>
  413926:	pushq  $0x11a
  41392b:	jmpq   412770 <_init+0x20>

0000000000413930 <BIO_read@plt>:
  413930:	jmpq   *0x262fba(%rip)        # 6768f0 <_fini+0x2193ec>
  413936:	pushq  $0x11b
  41393b:	jmpq   412770 <_init+0x20>

0000000000413940 <memset@plt>:
  413940:	jmpq   *0x262fb2(%rip)        # 6768f8 <_fini+0x2193f4>
  413946:	pushq  $0x11c
  41394b:	jmpq   412770 <_init+0x20>

0000000000413950 <abort@plt>:
  413950:	jmpq   *0x262faa(%rip)        # 676900 <_fini+0x2193fc>
  413956:	pushq  $0x11d
  41395b:	jmpq   412770 <_init+0x20>

0000000000413960 <BIO_free@plt>:
  413960:	jmpq   *0x262fa2(%rip)        # 676908 <_fini+0x219404>
  413966:	pushq  $0x11e
  41396b:	jmpq   412770 <_init+0x20>

0000000000413970 <CMS_verify_receipt@plt>:
  413970:	jmpq   *0x262f9a(%rip)        # 676910 <_fini+0x21940c>
  413976:	pushq  $0x11f
  41397b:	jmpq   412770 <_init+0x20>

0000000000413980 <ENGINE_cleanup@plt>:
  413980:	jmpq   *0x262f92(%rip)        # 676918 <_fini+0x219414>
  413986:	pushq  $0x120
  41398b:	jmpq   412770 <_init+0x20>

0000000000413990 <BN_bn2dec@plt>:
  413990:	jmpq   *0x262f8a(%rip)        # 676920 <_fini+0x21941c>
  413996:	pushq  $0x121
  41399b:	jmpq   412770 <_init+0x20>

00000000004139a0 <X509_NAME_oneline@plt>:
  4139a0:	jmpq   *0x262f82(%rip)        # 676928 <_fini+0x219424>
  4139a6:	pushq  $0x122
  4139ab:	jmpq   412770 <_init+0x20>

00000000004139b0 <ASN1_UTCTIME_new@plt>:
  4139b0:	jmpq   *0x262f7a(%rip)        # 676930 <_fini+0x21942c>
  4139b6:	pushq  $0x123
  4139bb:	jmpq   412770 <_init+0x20>

00000000004139c0 <d2i_X509_REQ_bio@plt>:
  4139c0:	jmpq   *0x262f72(%rip)        # 676938 <_fini+0x219434>
  4139c6:	pushq  $0x124
  4139cb:	jmpq   412770 <_init+0x20>

00000000004139d0 <X509_REQ_new@plt>:
  4139d0:	jmpq   *0x262f6a(%rip)        # 676940 <_fini+0x21943c>
  4139d6:	pushq  $0x125
  4139db:	jmpq   412770 <_init+0x20>

00000000004139e0 <SSL_SESSION_get0_peer@plt>:
  4139e0:	jmpq   *0x262f62(%rip)        # 676948 <_fini+0x219444>
  4139e6:	pushq  $0x126
  4139eb:	jmpq   412770 <_init+0x20>

00000000004139f0 <SSLeay@plt>:
  4139f0:	jmpq   *0x262f5a(%rip)        # 676950 <_fini+0x21944c>
  4139f6:	pushq  $0x127
  4139fb:	jmpq   412770 <_init+0x20>

0000000000413a00 <SSL_get_servername@plt>:
  413a00:	jmpq   *0x262f52(%rip)        # 676958 <_fini+0x219454>
  413a06:	pushq  $0x128
  413a0b:	jmpq   412770 <_init+0x20>

0000000000413a10 <RAND_file_name@plt>:
  413a10:	jmpq   *0x262f4a(%rip)        # 676960 <_fini+0x21945c>
  413a16:	pushq  $0x129
  413a1b:	jmpq   412770 <_init+0x20>

0000000000413a20 <d2i_PBEPARAM@plt>:
  413a20:	jmpq   *0x262f42(%rip)        # 676968 <_fini+0x219464>
  413a26:	pushq  $0x12a
  413a2b:	jmpq   412770 <_init+0x20>

0000000000413a30 <TS_STATUS_INFO_new@plt>:
  413a30:	jmpq   *0x262f3a(%rip)        # 676970 <_fini+0x21946c>
  413a36:	pushq  $0x12b
  413a3b:	jmpq   412770 <_init+0x20>

0000000000413a40 <ASN1_generate_nconf@plt>:
  413a40:	jmpq   *0x262f32(%rip)        # 676978 <_fini+0x219474>
  413a46:	pushq  $0x12c
  413a4b:	jmpq   412770 <_init+0x20>

0000000000413a50 <X509_STORE_CTX_get0_policy_tree@plt>:
  413a50:	jmpq   *0x262f2a(%rip)        # 676980 <_fini+0x21947c>
  413a56:	pushq  $0x12d
  413a5b:	jmpq   412770 <_init+0x20>

0000000000413a60 <X509_PURPOSE_get_by_sname@plt>:
  413a60:	jmpq   *0x262f22(%rip)        # 676988 <_fini+0x219484>
  413a66:	pushq  $0x12e
  413a6b:	jmpq   412770 <_init+0x20>

0000000000413a70 <CMS_digest_create@plt>:
  413a70:	jmpq   *0x262f1a(%rip)        # 676990 <_fini+0x21948c>
  413a76:	pushq  $0x12f
  413a7b:	jmpq   412770 <_init+0x20>

0000000000413a80 <i2b_PrivateKey_bio@plt>:
  413a80:	jmpq   *0x262f12(%rip)        # 676998 <_fini+0x219494>
  413a86:	pushq  $0x130
  413a8b:	jmpq   412770 <_init+0x20>

0000000000413a90 <d2i_X509_bio@plt>:
  413a90:	jmpq   *0x262f0a(%rip)        # 6769a0 <_fini+0x21949c>
  413a96:	pushq  $0x131
  413a9b:	jmpq   412770 <_init+0x20>

0000000000413aa0 <OCSP_sendreq_nbio@plt>:
  413aa0:	jmpq   *0x262f02(%rip)        # 6769a8 <_fini+0x2194a4>
  413aa6:	pushq  $0x132
  413aab:	jmpq   412770 <_init+0x20>

0000000000413ab0 <TS_RESP_set_tst_info@plt>:
  413ab0:	jmpq   *0x262efa(%rip)        # 6769b0 <_fini+0x2194ac>
  413ab6:	pushq  $0x133
  413abb:	jmpq   412770 <_init+0x20>

0000000000413ac0 <lh_retrieve@plt>:
  413ac0:	jmpq   *0x262ef2(%rip)        # 6769b8 <_fini+0x2194b4>
  413ac6:	pushq  $0x134
  413acb:	jmpq   412770 <_init+0x20>

0000000000413ad0 <CRYPTO_gcm128_release@plt>:
  413ad0:	jmpq   *0x262eea(%rip)        # 6769c0 <_fini+0x2194bc>
  413ad6:	pushq  $0x135
  413adb:	jmpq   412770 <_init+0x20>

0000000000413ae0 <SSL_new@plt>:
  413ae0:	jmpq   *0x262ee2(%rip)        # 6769c8 <_fini+0x2194c4>
  413ae6:	pushq  $0x136
  413aeb:	jmpq   412770 <_init+0x20>

0000000000413af0 <ASN1_TYPE_free@plt>:
  413af0:	jmpq   *0x262eda(%rip)        # 6769d0 <_fini+0x2194cc>
  413af6:	pushq  $0x137
  413afb:	jmpq   412770 <_init+0x20>

0000000000413b00 <X509_REQ_get_pubkey@plt>:
  413b00:	jmpq   *0x262ed2(%rip)        # 6769d8 <_fini+0x2194d4>
  413b06:	pushq  $0x138
  413b0b:	jmpq   412770 <_init+0x20>

0000000000413b10 <X509_STORE_CTX_free@plt>:
  413b10:	jmpq   *0x262eca(%rip)        # 6769e0 <_fini+0x2194dc>
  413b16:	pushq  $0x139
  413b1b:	jmpq   412770 <_init+0x20>

0000000000413b20 <PKCS12_verify_mac@plt>:
  413b20:	jmpq   *0x262ec2(%rip)        # 6769e8 <_fini+0x2194e4>
  413b26:	pushq  $0x13a
  413b2b:	jmpq   412770 <_init+0x20>

0000000000413b30 <EVP_PKEY_get1_RSA@plt>:
  413b30:	jmpq   *0x262eba(%rip)        # 6769f0 <_fini+0x2194ec>
  413b36:	pushq  $0x13b
  413b3b:	jmpq   412770 <_init+0x20>

0000000000413b40 <PKCS12_set_mac@plt>:
  413b40:	jmpq   *0x262eb2(%rip)        # 6769f8 <_fini+0x2194f4>
  413b46:	pushq  $0x13c
  413b4b:	jmpq   412770 <_init+0x20>

0000000000413b50 <d2i_PKCS7_bio@plt>:
  413b50:	jmpq   *0x262eaa(%rip)        # 676a00 <_fini+0x2194fc>
  413b56:	pushq  $0x13d
  413b5b:	jmpq   412770 <_init+0x20>

0000000000413b60 <NETSCAPE_CERT_SEQUENCE_free@plt>:
  413b60:	jmpq   *0x262ea2(%rip)        # 676a08 <_fini+0x219504>
  413b66:	pushq  $0x13e
  413b6b:	jmpq   412770 <_init+0x20>

0000000000413b70 <BIO_puts@plt>:
  413b70:	jmpq   *0x262e9a(%rip)        # 676a10 <_fini+0x21950c>
  413b76:	pushq  $0x13f
  413b7b:	jmpq   412770 <_init+0x20>

0000000000413b80 <UI_add_input_string@plt>:
  413b80:	jmpq   *0x262e92(%rip)        # 676a18 <_fini+0x219514>
  413b86:	pushq  $0x140
  413b8b:	jmpq   412770 <_init+0x20>

0000000000413b90 <EC_KEY_precompute_mult@plt>:
  413b90:	jmpq   *0x262e8a(%rip)        # 676a20 <_fini+0x21951c>
  413b96:	pushq  $0x141
  413b9b:	jmpq   412770 <_init+0x20>

0000000000413ba0 <X509_CRL_print@plt>:
  413ba0:	jmpq   *0x262e82(%rip)        # 676a28 <_fini+0x219524>
  413ba6:	pushq  $0x142
  413bab:	jmpq   412770 <_init+0x20>

0000000000413bb0 <SSL_set_bio@plt>:
  413bb0:	jmpq   *0x262e7a(%rip)        # 676a30 <_fini+0x21952c>
  413bb6:	pushq  $0x143
  413bbb:	jmpq   412770 <_init+0x20>

0000000000413bc0 <SHA1@plt>:
  413bc0:	jmpq   *0x262e72(%rip)        # 676a38 <_fini+0x219534>
  413bc6:	pushq  $0x144
  413bcb:	jmpq   412770 <_init+0x20>

0000000000413bd0 <OCSP_id_issuer_cmp@plt>:
  413bd0:	jmpq   *0x262e6a(%rip)        # 676a40 <_fini+0x21953c>
  413bd6:	pushq  $0x145
  413bdb:	jmpq   412770 <_init+0x20>

0000000000413be0 <TS_VERIFY_CTX_new@plt>:
  413be0:	jmpq   *0x262e62(%rip)        # 676a48 <_fini+0x219544>
  413be6:	pushq  $0x146
  413beb:	jmpq   412770 <_init+0x20>

0000000000413bf0 <EVP_PKEY_print_params@plt>:
  413bf0:	jmpq   *0x262e5a(%rip)        # 676a50 <_fini+0x21954c>
  413bf6:	pushq  $0x147
  413bfb:	jmpq   412770 <_init+0x20>

0000000000413c00 <SSL_CTX_set_cookie_verify_cb@plt>:
  413c00:	jmpq   *0x262e52(%rip)        # 676a58 <_fini+0x219554>
  413c06:	pushq  $0x148
  413c0b:	jmpq   412770 <_init+0x20>

0000000000413c10 <rename@plt>:
  413c10:	jmpq   *0x262e4a(%rip)        # 676a60 <_fini+0x21955c>
  413c16:	pushq  $0x149
  413c1b:	jmpq   412770 <_init+0x20>

0000000000413c20 <BN_print@plt>:
  413c20:	jmpq   *0x262e42(%rip)        # 676a68 <_fini+0x219564>
  413c26:	pushq  $0x14a
  413c2b:	jmpq   412770 <_init+0x20>

0000000000413c30 <BIO_dump@plt>:
  413c30:	jmpq   *0x262e3a(%rip)        # 676a70 <_fini+0x21956c>
  413c36:	pushq  $0x14b
  413c3b:	jmpq   412770 <_init+0x20>

0000000000413c40 <BIO_printf@plt>:
  413c40:	jmpq   *0x262e32(%rip)        # 676a78 <_fini+0x219574>
  413c46:	pushq  $0x14c
  413c4b:	jmpq   412770 <_init+0x20>

0000000000413c50 <SSL_get_wbio@plt>:
  413c50:	jmpq   *0x262e2a(%rip)        # 676a80 <_fini+0x21957c>
  413c56:	pushq  $0x14d
  413c5b:	jmpq   412770 <_init+0x20>

0000000000413c60 <getnameinfo@plt>:
  413c60:	jmpq   *0x262e22(%rip)        # 676a88 <_fini+0x219584>
  413c66:	pushq  $0x14e
  413c6b:	jmpq   412770 <_init+0x20>

0000000000413c70 <ASN1_i2d_bio@plt>:
  413c70:	jmpq   *0x262e1a(%rip)        # 676a90 <_fini+0x21958c>
  413c76:	pushq  $0x14f
  413c7b:	jmpq   412770 <_init+0x20>

0000000000413c80 <CMS_ReceiptRequest_get0_values@plt>:
  413c80:	jmpq   *0x262e12(%rip)        # 676a98 <_fini+0x219594>
  413c86:	pushq  $0x150
  413c8b:	jmpq   412770 <_init+0x20>

0000000000413c90 <PEM_read_bio_PKCS8_PRIV_KEY_INFO@plt>:
  413c90:	jmpq   *0x262e0a(%rip)        # 676aa0 <_fini+0x21959c>
  413c96:	pushq  $0x151
  413c9b:	jmpq   412770 <_init+0x20>

0000000000413ca0 <PEM_read_bio_RSAPublicKey@plt>:
  413ca0:	jmpq   *0x262e02(%rip)        # 676aa8 <_fini+0x2195a4>
  413ca6:	pushq  $0x152
  413cab:	jmpq   412770 <_init+0x20>

0000000000413cb0 <PKCS12_create@plt>:
  413cb0:	jmpq   *0x262dfa(%rip)        # 676ab0 <_fini+0x2195ac>
  413cb6:	pushq  $0x153
  413cbb:	jmpq   412770 <_init+0x20>

0000000000413cc0 <d2i_RSAPublicKey_bio@plt>:
  413cc0:	jmpq   *0x262df2(%rip)        # 676ab8 <_fini+0x2195b4>
  413cc6:	pushq  $0x154
  413ccb:	jmpq   412770 <_init+0x20>

0000000000413cd0 <NCONF_new@plt>:
  413cd0:	jmpq   *0x262dea(%rip)        # 676ac0 <_fini+0x2195bc>
  413cd6:	pushq  $0x155
  413cdb:	jmpq   412770 <_init+0x20>

0000000000413ce0 <X509_PURPOSE_get0@plt>:
  413ce0:	jmpq   *0x262de2(%rip)        # 676ac8 <_fini+0x2195c4>
  413ce6:	pushq  $0x156
  413ceb:	jmpq   412770 <_init+0x20>

0000000000413cf0 <OCSP_response_create@plt>:
  413cf0:	jmpq   *0x262dda(%rip)        # 676ad0 <_fini+0x2195cc>
  413cf6:	pushq  $0x157
  413cfb:	jmpq   412770 <_init+0x20>

0000000000413d00 <EVP_PKEY_CTX_get_app_data@plt>:
  413d00:	jmpq   *0x262dd2(%rip)        # 676ad8 <_fini+0x2195d4>
  413d06:	pushq  $0x158
  413d0b:	jmpq   412770 <_init+0x20>

0000000000413d10 <X509_CRL_set_nextUpdate@plt>:
  413d10:	jmpq   *0x262dca(%rip)        # 676ae0 <_fini+0x2195dc>
  413d16:	pushq  $0x159
  413d1b:	jmpq   412770 <_init+0x20>

0000000000413d20 <X509_PURPOSE_get0_name@plt>:
  413d20:	jmpq   *0x262dc2(%rip)        # 676ae8 <_fini+0x2195e4>
  413d26:	pushq  $0x15a
  413d2b:	jmpq   412770 <_init+0x20>

0000000000413d30 <sysconf@plt>:
  413d30:	jmpq   *0x262dba(%rip)        # 676af0 <_fini+0x2195ec>
  413d36:	pushq  $0x15b
  413d3b:	jmpq   412770 <_init+0x20>

0000000000413d40 <__assert_fail@plt>:
  413d40:	jmpq   *0x262db2(%rip)        # 676af8 <_fini+0x2195f4>
  413d46:	pushq  $0x15c
  413d4b:	jmpq   412770 <_init+0x20>

0000000000413d50 <CRYPTO_malloc@plt>:
  413d50:	jmpq   *0x262daa(%rip)        # 676b00 <_fini+0x2195fc>
  413d56:	pushq  $0x15d
  413d5b:	jmpq   412770 <_init+0x20>

0000000000413d60 <d2i_PKCS12_bio@plt>:
  413d60:	jmpq   *0x262da2(%rip)        # 676b08 <_fini+0x219604>
  413d66:	pushq  $0x15e
  413d6b:	jmpq   412770 <_init+0x20>

0000000000413d70 <SSL_get_selected_srtp_profile@plt>:
  413d70:	jmpq   *0x262d9a(%rip)        # 676b10 <_fini+0x21960c>
  413d76:	pushq  $0x15f
  413d7b:	jmpq   412770 <_init+0x20>

0000000000413d80 <DH_free@plt>:
  413d80:	jmpq   *0x262d92(%rip)        # 676b18 <_fini+0x219614>
  413d86:	pushq  $0x160
  413d8b:	jmpq   412770 <_init+0x20>

0000000000413d90 <TLSv1_2_client_method@plt>:
  413d90:	jmpq   *0x262d8a(%rip)        # 676b20 <_fini+0x21961c>
  413d96:	pushq  $0x161
  413d9b:	jmpq   412770 <_init+0x20>

0000000000413da0 <EVP_DecryptFinal_ex@plt>:
  413da0:	jmpq   *0x262d82(%rip)        # 676b28 <_fini+0x219624>
  413da6:	pushq  $0x162
  413dab:	jmpq   412770 <_init+0x20>

0000000000413db0 <SSL_CTX_set_cookie_generate_cb@plt>:
  413db0:	jmpq   *0x262d7a(%rip)        # 676b30 <_fini+0x21962c>
  413db6:	pushq  $0x163
  413dbb:	jmpq   412770 <_init+0x20>

0000000000413dc0 <OCSP_check_nonce@plt>:
  413dc0:	jmpq   *0x262d72(%rip)        # 676b38 <_fini+0x219634>
  413dc6:	pushq  $0x164
  413dcb:	jmpq   412770 <_init+0x20>

0000000000413dd0 <TS_TST_INFO_print_bio@plt>:
  413dd0:	jmpq   *0x262d6a(%rip)        # 676b40 <_fini+0x21963c>
  413dd6:	pushq  $0x165
  413ddb:	jmpq   412770 <_init+0x20>

0000000000413de0 <OCSP_cert_id_new@plt>:
  413de0:	jmpq   *0x262d62(%rip)        # 676b48 <_fini+0x219644>
  413de6:	pushq  $0x166
  413deb:	jmpq   412770 <_init+0x20>

0000000000413df0 <ERR_get_string_table@plt>:
  413df0:	jmpq   *0x262d5a(%rip)        # 676b50 <_fini+0x21964c>
  413df6:	pushq  $0x167
  413dfb:	jmpq   412770 <_init+0x20>

0000000000413e00 <SSL_renegotiate@plt>:
  413e00:	jmpq   *0x262d52(%rip)        # 676b58 <_fini+0x219654>
  413e06:	pushq  $0x168
  413e0b:	jmpq   412770 <_init+0x20>

0000000000413e10 <PEM_write_bio_CMS_stream@plt>:
  413e10:	jmpq   *0x262d4a(%rip)        # 676b60 <_fini+0x21965c>
  413e16:	pushq  $0x169
  413e1b:	jmpq   412770 <_init+0x20>

0000000000413e20 <RSA_private_encrypt@plt>:
  413e20:	jmpq   *0x262d42(%rip)        # 676b68 <_fini+0x219664>
  413e26:	pushq  $0x16a
  413e2b:	jmpq   412770 <_init+0x20>

0000000000413e30 <SSL_CTX_ctrl@plt>:
  413e30:	jmpq   *0x262d3a(%rip)        # 676b70 <_fini+0x21966c>
  413e36:	pushq  $0x16b
  413e3b:	jmpq   412770 <_init+0x20>

0000000000413e40 <EVP_CipherInit_ex@plt>:
  413e40:	jmpq   *0x262d32(%rip)        # 676b78 <_fini+0x219674>
  413e46:	pushq  $0x16c
  413e4b:	jmpq   412770 <_init+0x20>

0000000000413e50 <ENGINE_set_default@plt>:
  413e50:	jmpq   *0x262d2a(%rip)        # 676b80 <_fini+0x21967c>
  413e56:	pushq  $0x16d
  413e5b:	jmpq   412770 <_init+0x20>

0000000000413e60 <OCSP_cert_status_str@plt>:
  413e60:	jmpq   *0x262d22(%rip)        # 676b88 <_fini+0x219684>
  413e66:	pushq  $0x16e
  413e6b:	jmpq   412770 <_init+0x20>

0000000000413e70 <CMS_set1_eContentType@plt>:
  413e70:	jmpq   *0x262d1a(%rip)        # 676b90 <_fini+0x21968c>
  413e76:	pushq  $0x16f
  413e7b:	jmpq   412770 <_init+0x20>

0000000000413e80 <d2i_PUBKEY_bio@plt>:
  413e80:	jmpq   *0x262d12(%rip)        # 676b98 <_fini+0x219694>
  413e86:	pushq  $0x170
  413e8b:	jmpq   412770 <_init+0x20>

0000000000413e90 <UI_method_set_reader@plt>:
  413e90:	jmpq   *0x262d0a(%rip)        # 676ba0 <_fini+0x21969c>
  413e96:	pushq  $0x171
  413e9b:	jmpq   412770 <_init+0x20>

0000000000413ea0 <X509_set_subject_name@plt>:
  413ea0:	jmpq   *0x262d02(%rip)        # 676ba8 <_fini+0x2196a4>
  413ea6:	pushq  $0x172
  413eab:	jmpq   412770 <_init+0x20>

0000000000413eb0 <TLSv1_1_server_method@plt>:
  413eb0:	jmpq   *0x262cfa(%rip)        # 676bb0 <_fini+0x2196ac>
  413eb6:	pushq  $0x173
  413ebb:	jmpq   412770 <_init+0x20>

0000000000413ec0 <X509_new@plt>:
  413ec0:	jmpq   *0x262cf2(%rip)        # 676bb8 <_fini+0x2196b4>
  413ec6:	pushq  $0x174
  413ecb:	jmpq   412770 <_init+0x20>

0000000000413ed0 <SSL_CTX_set_tlsext_use_srtp@plt>:
  413ed0:	jmpq   *0x262cea(%rip)        # 676bc0 <_fini+0x2196bc>
  413ed6:	pushq  $0x175
  413edb:	jmpq   412770 <_init+0x20>

0000000000413ee0 <PEM_read_bio_Parameters@plt>:
  413ee0:	jmpq   *0x262ce2(%rip)        # 676bc8 <_fini+0x2196c4>
  413ee6:	pushq  $0x176
  413eeb:	jmpq   412770 <_init+0x20>

0000000000413ef0 <OPENSSL_cleanse@plt>:
  413ef0:	jmpq   *0x262cda(%rip)        # 676bd0 <_fini+0x2196cc>
  413ef6:	pushq  $0x177
  413efb:	jmpq   412770 <_init+0x20>

0000000000413f00 <ECPKParameters_print@plt>:
  413f00:	jmpq   *0x262cd2(%rip)        # 676bd8 <_fini+0x2196d4>
  413f06:	pushq  $0x178
  413f0b:	jmpq   412770 <_init+0x20>

0000000000413f10 <X509_delete_ext@plt>:
  413f10:	jmpq   *0x262cca(%rip)        # 676be0 <_fini+0x2196dc>
  413f16:	pushq  $0x179
  413f1b:	jmpq   412770 <_init+0x20>

0000000000413f20 <X509_VERIFY_PARAM_set_purpose@plt>:
  413f20:	jmpq   *0x262cc2(%rip)        # 676be8 <_fini+0x2196e4>
  413f26:	pushq  $0x17a
  413f2b:	jmpq   412770 <_init+0x20>

0000000000413f30 <EVP_MD_CTX_md@plt>:
  413f30:	jmpq   *0x262cba(%rip)        # 676bf0 <_fini+0x2196ec>
  413f36:	pushq  $0x17b
  413f3b:	jmpq   412770 <_init+0x20>

0000000000413f40 <ERR_print_errors@plt>:
  413f40:	jmpq   *0x262cb2(%rip)        # 676bf8 <_fini+0x2196f4>
  413f46:	pushq  $0x17c
  413f4b:	jmpq   412770 <_init+0x20>

0000000000413f50 <X509_time_adj_ex@plt>:
  413f50:	jmpq   *0x262caa(%rip)        # 676c00 <_fini+0x2196fc>
  413f56:	pushq  $0x17d
  413f5b:	jmpq   412770 <_init+0x20>

0000000000413f60 <X509_VERIFY_PARAM_set_depth@plt>:
  413f60:	jmpq   *0x262ca2(%rip)        # 676c08 <_fini+0x219704>
  413f66:	pushq  $0x17e
  413f6b:	jmpq   412770 <_init+0x20>

0000000000413f70 <PEM_read_bio_DHparams@plt>:
  413f70:	jmpq   *0x262c9a(%rip)        # 676c10 <_fini+0x21970c>
  413f76:	pushq  $0x17f
  413f7b:	jmpq   412770 <_init+0x20>

0000000000413f80 <EC_GROUP_get_curve_name@plt>:
  413f80:	jmpq   *0x262c92(%rip)        # 676c18 <_fini+0x219714>
  413f86:	pushq  $0x180
  413f8b:	jmpq   412770 <_init+0x20>

0000000000413f90 <X509_NAME_get_index_by_NID@plt>:
  413f90:	jmpq   *0x262c8a(%rip)        # 676c20 <_fini+0x21971c>
  413f96:	pushq  $0x181
  413f9b:	jmpq   412770 <_init+0x20>

0000000000413fa0 <SSL_SESSION_set1_id_context@plt>:
  413fa0:	jmpq   *0x262c82(%rip)        # 676c28 <_fini+0x219724>
  413fa6:	pushq  $0x182
  413fab:	jmpq   412770 <_init+0x20>

0000000000413fb0 <sleep@plt>:
  413fb0:	jmpq   *0x262c7a(%rip)        # 676c30 <_fini+0x21972c>
  413fb6:	pushq  $0x183
  413fbb:	jmpq   412770 <_init+0x20>

0000000000413fc0 <TS_RESP_new@plt>:
  413fc0:	jmpq   *0x262c72(%rip)        # 676c38 <_fini+0x219734>
  413fc6:	pushq  $0x184
  413fcb:	jmpq   412770 <_init+0x20>

0000000000413fd0 <NCONF_get_string@plt>:
  413fd0:	jmpq   *0x262c6a(%rip)        # 676c40 <_fini+0x21973c>
  413fd6:	pushq  $0x185
  413fdb:	jmpq   412770 <_init+0x20>

0000000000413fe0 <X509_NAME_ENTRY_free@plt>:
  413fe0:	jmpq   *0x262c62(%rip)        # 676c48 <_fini+0x219744>
  413fe6:	pushq  $0x186
  413feb:	jmpq   412770 <_init+0x20>

0000000000413ff0 <EC_KEY_new@plt>:
  413ff0:	jmpq   *0x262c5a(%rip)        # 676c50 <_fini+0x21974c>
  413ff6:	pushq  $0x187
  413ffb:	jmpq   412770 <_init+0x20>

0000000000414000 <EVP_CIPHER_CTX_init@plt>:
  414000:	jmpq   *0x262c52(%rip)        # 676c58 <_fini+0x219754>
  414006:	pushq  $0x188
  41400b:	jmpq   412770 <_init+0x20>

0000000000414010 <NETSCAPE_SPKI_verify@plt>:
  414010:	jmpq   *0x262c4a(%rip)        # 676c60 <_fini+0x21975c>
  414016:	pushq  $0x189
  41401b:	jmpq   412770 <_init+0x20>

0000000000414020 <EVP_PKEY_verify_recover@plt>:
  414020:	jmpq   *0x262c42(%rip)        # 676c68 <_fini+0x219764>
  414026:	pushq  $0x18a
  41402b:	jmpq   412770 <_init+0x20>

0000000000414030 <X509_REVOKED_new@plt>:
  414030:	jmpq   *0x262c3a(%rip)        # 676c70 <_fini+0x21976c>
  414036:	pushq  $0x18b
  41403b:	jmpq   412770 <_init+0x20>

0000000000414040 <EVP_PKEY_CTX_ctrl_str@plt>:
  414040:	jmpq   *0x262c32(%rip)        # 676c78 <_fini+0x219774>
  414046:	pushq  $0x18c
  41404b:	jmpq   412770 <_init+0x20>

0000000000414050 <PEM_read_bio_SSL_SESSION@plt>:
  414050:	jmpq   *0x262c2a(%rip)        # 676c80 <_fini+0x21977c>
  414056:	pushq  $0x18d
  41405b:	jmpq   412770 <_init+0x20>

0000000000414060 <OBJ_create@plt>:
  414060:	jmpq   *0x262c22(%rip)        # 676c88 <_fini+0x219784>
  414066:	pushq  $0x18e
  41406b:	jmpq   412770 <_init+0x20>

0000000000414070 <ECDSA_verify@plt>:
  414070:	jmpq   *0x262c1a(%rip)        # 676c90 <_fini+0x21978c>
  414076:	pushq  $0x18f
  41407b:	jmpq   412770 <_init+0x20>

0000000000414080 <strtod@plt>:
  414080:	jmpq   *0x262c12(%rip)        # 676c98 <_fini+0x219794>
  414086:	pushq  $0x190
  41408b:	jmpq   412770 <_init+0x20>

0000000000414090 <X509_NAME_ENTRY_get_object@plt>:
  414090:	jmpq   *0x262c0a(%rip)        # 676ca0 <_fini+0x21979c>
  414096:	pushq  $0x191
  41409b:	jmpq   412770 <_init+0x20>

00000000004140a0 <OBJ_sn2nid@plt>:
  4140a0:	jmpq   *0x262c02(%rip)        # 676ca8 <_fini+0x2197a4>
  4140a6:	pushq  $0x192
  4140ab:	jmpq   412770 <_init+0x20>

00000000004140b0 <SSL_set0_kssl_ctx@plt>:
  4140b0:	jmpq   *0x262bfa(%rip)        # 676cb0 <_fini+0x2197ac>
  4140b6:	pushq  $0x193
  4140bb:	jmpq   412770 <_init+0x20>

00000000004140c0 <SSL_get_shared_ciphers@plt>:
  4140c0:	jmpq   *0x262bf2(%rip)        # 676cb8 <_fini+0x2197b4>
  4140c6:	pushq  $0x194
  4140cb:	jmpq   412770 <_init+0x20>

00000000004140d0 <BIO_set_callback_arg@plt>:
  4140d0:	jmpq   *0x262bea(%rip)        # 676cc0 <_fini+0x2197bc>
  4140d6:	pushq  $0x195
  4140db:	jmpq   412770 <_init+0x20>

00000000004140e0 <EVP_PKEY_derive_init@plt>:
  4140e0:	jmpq   *0x262be2(%rip)        # 676cc8 <_fini+0x2197c4>
  4140e6:	pushq  $0x196
  4140eb:	jmpq   412770 <_init+0x20>

00000000004140f0 <DTLSv1_server_method@plt>:
  4140f0:	jmpq   *0x262bda(%rip)        # 676cd0 <_fini+0x2197cc>
  4140f6:	pushq  $0x197
  4140fb:	jmpq   412770 <_init+0x20>

0000000000414100 <BF_cbc_encrypt@plt>:
  414100:	jmpq   *0x262bd2(%rip)        # 676cd8 <_fini+0x2197d4>
  414106:	pushq  $0x198
  41410b:	jmpq   412770 <_init+0x20>

0000000000414110 <TS_CONF_set_accuracy@plt>:
  414110:	jmpq   *0x262bca(%rip)        # 676ce0 <_fini+0x2197dc>
  414116:	pushq  $0x199
  41411b:	jmpq   412770 <_init+0x20>

0000000000414120 <OBJ_cleanup@plt>:
  414120:	jmpq   *0x262bc2(%rip)        # 676ce8 <_fini+0x2197e4>
  414126:	pushq  $0x19a
  41412b:	jmpq   412770 <_init+0x20>

0000000000414130 <private_BF_set_key@plt>:
  414130:	jmpq   *0x262bba(%rip)        # 676cf0 <_fini+0x2197ec>
  414136:	pushq  $0x19b
  41413b:	jmpq   412770 <_init+0x20>

0000000000414140 <EVP_PKEY_get0_asn1@plt>:
  414140:	jmpq   *0x262bb2(%rip)        # 676cf8 <_fini+0x2197f4>
  414146:	pushq  $0x19c
  41414b:	jmpq   412770 <_init+0x20>

0000000000414150 <EVP_PKEY_missing_parameters@plt>:
  414150:	jmpq   *0x262baa(%rip)        # 676d00 <_fini+0x2197fc>
  414156:	pushq  $0x19d
  41415b:	jmpq   412770 <_init+0x20>

0000000000414160 <EVP_PKEY_paramgen@plt>:
  414160:	jmpq   *0x262ba2(%rip)        # 676d08 <_fini+0x219804>
  414166:	pushq  $0x19e
  41416b:	jmpq   412770 <_init+0x20>

0000000000414170 <UI_process@plt>:
  414170:	jmpq   *0x262b9a(%rip)        # 676d10 <_fini+0x21980c>
  414176:	pushq  $0x19f
  41417b:	jmpq   412770 <_init+0x20>

0000000000414180 <EVP_PKEY_paramgen_init@plt>:
  414180:	jmpq   *0x262b92(%rip)        # 676d18 <_fini+0x219814>
  414186:	pushq  $0x1a0
  41418b:	jmpq   412770 <_init+0x20>

0000000000414190 <CRYPTO_set_locking_callback@plt>:
  414190:	jmpq   *0x262b8a(%rip)        # 676d20 <_fini+0x21981c>
  414196:	pushq  $0x1a1
  41419b:	jmpq   412770 <_init+0x20>

00000000004141a0 <ASN1_PRINTABLE_type@plt>:
  4141a0:	jmpq   *0x262b82(%rip)        # 676d28 <_fini+0x219824>
  4141a6:	pushq  $0x1a2
  4141ab:	jmpq   412770 <_init+0x20>

00000000004141b0 <TS_CONF_set_signer_cert@plt>:
  4141b0:	jmpq   *0x262b7a(%rip)        # 676d30 <_fini+0x21982c>
  4141b6:	pushq  $0x1a3
  4141bb:	jmpq   412770 <_init+0x20>

00000000004141c0 <EC_KEY_set_group@plt>:
  4141c0:	jmpq   *0x262b72(%rip)        # 676d38 <_fini+0x219834>
  4141c6:	pushq  $0x1a4
  4141cb:	jmpq   412770 <_init+0x20>

00000000004141d0 <OCSP_response_status@plt>:
  4141d0:	jmpq   *0x262b6a(%rip)        # 676d40 <_fini+0x21983c>
  4141d6:	pushq  $0x1a5
  4141db:	jmpq   412770 <_init+0x20>

00000000004141e0 <ENGINE_by_id@plt>:
  4141e0:	jmpq   *0x262b62(%rip)        # 676d48 <_fini+0x219844>
  4141e6:	pushq  $0x1a6
  4141eb:	jmpq   412770 <_init+0x20>

00000000004141f0 <TS_RESP_verify_token@plt>:
  4141f0:	jmpq   *0x262b5a(%rip)        # 676d50 <_fini+0x21984c>
  4141f6:	pushq  $0x1a7
  4141fb:	jmpq   412770 <_init+0x20>

0000000000414200 <TS_CONF_set_def_policy@plt>:
  414200:	jmpq   *0x262b52(%rip)        # 676d58 <_fini+0x219854>
  414206:	pushq  $0x1a8
  41420b:	jmpq   412770 <_init+0x20>

0000000000414210 <X509_STORE_CTX_set_cert@plt>:
  414210:	jmpq   *0x262b4a(%rip)        # 676d60 <_fini+0x21985c>
  414216:	pushq  $0x1a9
  41421b:	jmpq   412770 <_init+0x20>

0000000000414220 <BN_add_word@plt>:
  414220:	jmpq   *0x262b42(%rip)        # 676d68 <_fini+0x219864>
  414226:	pushq  $0x1aa
  41422b:	jmpq   412770 <_init+0x20>

0000000000414230 <ASN1_OBJECT_free@plt>:
  414230:	jmpq   *0x262b3a(%rip)        # 676d70 <_fini+0x21986c>
  414236:	pushq  $0x1ab
  41423b:	jmpq   412770 <_init+0x20>

0000000000414240 <X509_sign_ctx@plt>:
  414240:	jmpq   *0x262b32(%rip)        # 676d78 <_fini+0x219874>
  414246:	pushq  $0x1ac
  41424b:	jmpq   412770 <_init+0x20>

0000000000414250 <memcpy@plt>:
  414250:	jmpq   *0x262b2a(%rip)        # 676d80 <_fini+0x21987c>
  414256:	pushq  $0x1ad
  41425b:	jmpq   412770 <_init+0x20>

0000000000414260 <BN_generate_prime_ex@plt>:
  414260:	jmpq   *0x262b22(%rip)        # 676d88 <_fini+0x219884>
  414266:	pushq  $0x1ae
  41426b:	jmpq   412770 <_init+0x20>

0000000000414270 <DSA_print@plt>:
  414270:	jmpq   *0x262b1a(%rip)        # 676d90 <_fini+0x21988c>
  414276:	pushq  $0x1af
  41427b:	jmpq   412770 <_init+0x20>

0000000000414280 <EVP_des_cbc@plt>:
  414280:	jmpq   *0x262b12(%rip)        # 676d98 <_fini+0x219894>
  414286:	pushq  $0x1b0
  41428b:	jmpq   412770 <_init+0x20>

0000000000414290 <lh_stats_bio@plt>:
  414290:	jmpq   *0x262b0a(%rip)        # 676da0 <_fini+0x21989c>
  414296:	pushq  $0x1b1
  41429b:	jmpq   412770 <_init+0x20>

00000000004142a0 <SSL_CTX_use_certificate_file@plt>:
  4142a0:	jmpq   *0x262b02(%rip)        # 676da8 <_fini+0x2198a4>
  4142a6:	pushq  $0x1b2
  4142ab:	jmpq   412770 <_init+0x20>

00000000004142b0 <connect@plt>:
  4142b0:	jmpq   *0x262afa(%rip)        # 676db0 <_fini+0x2198ac>
  4142b6:	pushq  $0x1b3
  4142bb:	jmpq   412770 <_init+0x20>

00000000004142c0 <perror@plt>:
  4142c0:	jmpq   *0x262af2(%rip)        # 676db8 <_fini+0x2198b4>
  4142c6:	pushq  $0x1b4
  4142cb:	jmpq   412770 <_init+0x20>

00000000004142d0 <PEM_write_bio_X509_CRL@plt>:
  4142d0:	jmpq   *0x262aea(%rip)        # 676dc0 <_fini+0x2198bc>
  4142d6:	pushq  $0x1b5
  4142db:	jmpq   412770 <_init+0x20>

00000000004142e0 <EVP_MD_CTX_set_flags@plt>:
  4142e0:	jmpq   *0x262ae2(%rip)        # 676dc8 <_fini+0x2198c4>
  4142e6:	pushq  $0x1b6
  4142eb:	jmpq   412770 <_init+0x20>

00000000004142f0 <CMS_ContentInfo_print_ctx@plt>:
  4142f0:	jmpq   *0x262ada(%rip)        # 676dd0 <_fini+0x2198cc>
  4142f6:	pushq  $0x1b7
  4142fb:	jmpq   412770 <_init+0x20>

0000000000414300 <X509_VERIFY_PARAM_set_time@plt>:
  414300:	jmpq   *0x262ad2(%rip)        # 676dd8 <_fini+0x2198d4>
  414306:	pushq  $0x1b8
  41430b:	jmpq   412770 <_init+0x20>

0000000000414310 <CONF_get_section@plt>:
  414310:	jmpq   *0x262aca(%rip)        # 676de0 <_fini+0x2198dc>
  414316:	pushq  $0x1b9
  41431b:	jmpq   412770 <_init+0x20>

0000000000414320 <X509_CRL_get_ext_d2i@plt>:
  414320:	jmpq   *0x262ac2(%rip)        # 676de8 <_fini+0x2198e4>
  414326:	pushq  $0x1ba
  41432b:	jmpq   412770 <_init+0x20>

0000000000414330 <EVP_MD_size@plt>:
  414330:	jmpq   *0x262aba(%rip)        # 676df0 <_fini+0x2198ec>
  414336:	pushq  $0x1bb
  41433b:	jmpq   412770 <_init+0x20>

0000000000414340 <EVP_PKEY_decrypt_init@plt>:
  414340:	jmpq   *0x262ab2(%rip)        # 676df8 <_fini+0x2198f4>
  414346:	pushq  $0x1bc
  41434b:	jmpq   412770 <_init+0x20>

0000000000414350 <EC_GROUP_get_cofactor@plt>:
  414350:	jmpq   *0x262aaa(%rip)        # 676e00 <_fini+0x2198fc>
  414356:	pushq  $0x1bd
  41435b:	jmpq   412770 <_init+0x20>

0000000000414360 <X509_STORE_CTX_set_flags@plt>:
  414360:	jmpq   *0x262aa2(%rip)        # 676e08 <_fini+0x219904>
  414366:	pushq  $0x1be
  41436b:	jmpq   412770 <_init+0x20>

0000000000414370 <ASN1_STRING_data@plt>:
  414370:	jmpq   *0x262a9a(%rip)        # 676e10 <_fini+0x21990c>
  414376:	pushq  $0x1bf
  41437b:	jmpq   412770 <_init+0x20>

0000000000414380 <PKCS12_unpack_p7encdata@plt>:
  414380:	jmpq   *0x262a92(%rip)        # 676e18 <_fini+0x219914>
  414386:	pushq  $0x1c0
  41438b:	jmpq   412770 <_init+0x20>

0000000000414390 <BN_pseudo_rand@plt>:
  414390:	jmpq   *0x262a8a(%rip)        # 676e20 <_fini+0x21991c>
  414396:	pushq  $0x1c1
  41439b:	jmpq   412770 <_init+0x20>

00000000004143a0 <SSL_has_matching_session_id@plt>:
  4143a0:	jmpq   *0x262a82(%rip)        # 676e28 <_fini+0x219924>
  4143a6:	pushq  $0x1c2
  4143ab:	jmpq   412770 <_init+0x20>

00000000004143b0 <EVP_PKEY_CTX_free@plt>:
  4143b0:	jmpq   *0x262a7a(%rip)        # 676e30 <_fini+0x21992c>
  4143b6:	pushq  $0x1c3
  4143bb:	jmpq   412770 <_init+0x20>

00000000004143c0 <CRYPTO_realloc@plt>:
  4143c0:	jmpq   *0x262a72(%rip)        # 676e38 <_fini+0x219934>
  4143c6:	pushq  $0x1c4
  4143cb:	jmpq   412770 <_init+0x20>

00000000004143d0 <X509_NAME_add_entry_by_NID@plt>:
  4143d0:	jmpq   *0x262a6a(%rip)        # 676e40 <_fini+0x21993c>
  4143d6:	pushq  $0x1c5
  4143db:	jmpq   412770 <_init+0x20>

00000000004143e0 <EC_GROUP_get_degree@plt>:
  4143e0:	jmpq   *0x262a62(%rip)        # 676e48 <_fini+0x219944>
  4143e6:	pushq  $0x1c6
  4143eb:	jmpq   412770 <_init+0x20>

00000000004143f0 <sk_free@plt>:
  4143f0:	jmpq   *0x262a5a(%rip)        # 676e50 <_fini+0x21994c>
  4143f6:	pushq  $0x1c7
  4143fb:	jmpq   412770 <_init+0x20>

0000000000414400 <X509_get_subject_name@plt>:
  414400:	jmpq   *0x262a52(%rip)        # 676e58 <_fini+0x219954>
  414406:	pushq  $0x1c8
  41440b:	jmpq   412770 <_init+0x20>

0000000000414410 <CMS_sign_receipt@plt>:
  414410:	jmpq   *0x262a4a(%rip)        # 676e60 <_fini+0x21995c>
  414416:	pushq  $0x1c9
  41441b:	jmpq   412770 <_init+0x20>

0000000000414420 <TS_RESP_verify_response@plt>:
  414420:	jmpq   *0x262a42(%rip)        # 676e68 <_fini+0x219964>
  414426:	pushq  $0x1ca
  41442b:	jmpq   412770 <_init+0x20>

0000000000414430 <CRYPTO_cleanup_all_ex_data@plt>:
  414430:	jmpq   *0x262a3a(%rip)        # 676e70 <_fini+0x21996c>
  414436:	pushq  $0x1cb
  41443b:	jmpq   412770 <_init+0x20>

0000000000414440 <AES_cbc_encrypt@plt>:
  414440:	jmpq   *0x262a32(%rip)        # 676e78 <_fini+0x219974>
  414446:	pushq  $0x1cc
  41444b:	jmpq   412770 <_init+0x20>

0000000000414450 <OCSP_request_add0_id@plt>:
  414450:	jmpq   *0x262a2a(%rip)        # 676e80 <_fini+0x21997c>
  414456:	pushq  $0x1cd
  41445b:	jmpq   412770 <_init+0x20>

0000000000414460 <PEM_write_bio_RSAPrivateKey@plt>:
  414460:	jmpq   *0x262a22(%rip)        # 676e88 <_fini+0x219984>
  414466:	pushq  $0x1ce
  41446b:	jmpq   412770 <_init+0x20>

0000000000414470 <X509_STORE_CTX_get_current_cert@plt>:
  414470:	jmpq   *0x262a1a(%rip)        # 676e90 <_fini+0x21998c>
  414476:	pushq  $0x1cf
  41447b:	jmpq   412770 <_init+0x20>

0000000000414480 <TS_REQ_free@plt>:
  414480:	jmpq   *0x262a12(%rip)        # 676e98 <_fini+0x219994>
  414486:	pushq  $0x1d0
  41448b:	jmpq   412770 <_init+0x20>

0000000000414490 <BIO_dump_indent@plt>:
  414490:	jmpq   *0x262a0a(%rip)        # 676ea0 <_fini+0x21999c>
  414496:	pushq  $0x1d1
  41449b:	jmpq   412770 <_init+0x20>

00000000004144a0 <RSA_new@plt>:
  4144a0:	jmpq   *0x262a02(%rip)        # 676ea8 <_fini+0x2199a4>
  4144a6:	pushq  $0x1d2
  4144ab:	jmpq   412770 <_init+0x20>

00000000004144b0 <PKCS8_decrypt@plt>:
  4144b0:	jmpq   *0x2629fa(%rip)        # 676eb0 <_fini+0x2199ac>
  4144b6:	pushq  $0x1d3
  4144bb:	jmpq   412770 <_init+0x20>

00000000004144c0 <EVP_PKEY_get1_DSA@plt>:
  4144c0:	jmpq   *0x2629f2(%rip)        # 676eb8 <_fini+0x2199b4>
  4144c6:	pushq  $0x1d4
  4144cb:	jmpq   412770 <_init+0x20>

00000000004144d0 <EVP_PKEY_derive@plt>:
  4144d0:	jmpq   *0x2629ea(%rip)        # 676ec0 <_fini+0x2199bc>
  4144d6:	pushq  $0x1d5
  4144db:	jmpq   412770 <_init+0x20>

00000000004144e0 <i2d_RSA_NET@plt>:
  4144e0:	jmpq   *0x2629e2(%rip)        # 676ec8 <_fini+0x2199c4>
  4144e6:	pushq  $0x1d6
  4144eb:	jmpq   412770 <_init+0x20>

00000000004144f0 <BUF_MEM_grow_clean@plt>:
  4144f0:	jmpq   *0x2629da(%rip)        # 676ed0 <_fini+0x2199cc>
  4144f6:	pushq  $0x1d7
  4144fb:	jmpq   412770 <_init+0x20>

0000000000414500 <EVP_PKEY_add1_attr_by_NID@plt>:
  414500:	jmpq   *0x2629d2(%rip)        # 676ed8 <_fini+0x2199d4>
  414506:	pushq  $0x1d8
  41450b:	jmpq   412770 <_init+0x20>

0000000000414510 <private_RC4_set_key@plt>:
  414510:	jmpq   *0x2629ca(%rip)        # 676ee0 <_fini+0x2199dc>
  414516:	pushq  $0x1d9
  41451b:	jmpq   412770 <_init+0x20>

0000000000414520 <BUF_MEM_grow@plt>:
  414520:	jmpq   *0x2629c2(%rip)        # 676ee8 <_fini+0x2199e4>
  414526:	pushq  $0x1da
  41452b:	jmpq   412770 <_init+0x20>

0000000000414530 <CRYPTO_gcm128_new@plt>:
  414530:	jmpq   *0x2629ba(%rip)        # 676ef0 <_fini+0x2199ec>
  414536:	pushq  $0x1db
  41453b:	jmpq   412770 <_init+0x20>

0000000000414540 <i2d_EC_PUBKEY_bio@plt>:
  414540:	jmpq   *0x2629b2(%rip)        # 676ef8 <_fini+0x2199f4>
  414546:	pushq  $0x1dc
  41454b:	jmpq   412770 <_init+0x20>

0000000000414550 <BIO_pop@plt>:
  414550:	jmpq   *0x2629aa(%rip)        # 676f00 <_fini+0x2199fc>
  414556:	pushq  $0x1dd
  41455b:	jmpq   412770 <_init+0x20>

0000000000414560 <time@plt>:
  414560:	jmpq   *0x2629a2(%rip)        # 676f08 <_fini+0x219a04>
  414566:	pushq  $0x1de
  41456b:	jmpq   412770 <_init+0x20>

0000000000414570 <getsockname@plt>:
  414570:	jmpq   *0x26299a(%rip)        # 676f10 <_fini+0x219a0c>
  414576:	pushq  $0x1df
  41457b:	jmpq   412770 <_init+0x20>

0000000000414580 <X509_EXTENSION_get_object@plt>:
  414580:	jmpq   *0x262992(%rip)        # 676f18 <_fini+0x219a14>
  414586:	pushq  $0x1e0
  41458b:	jmpq   412770 <_init+0x20>

0000000000414590 <EVP_PKEY_CTX_set_app_data@plt>:
  414590:	jmpq   *0x26298a(%rip)        # 676f20 <_fini+0x219a1c>
  414596:	pushq  $0x1e1
  41459b:	jmpq   412770 <_init+0x20>

00000000004145a0 <CRYPTO_mem_leaks@plt>:
  4145a0:	jmpq   *0x262982(%rip)        # 676f28 <_fini+0x219a24>
  4145a6:	pushq  $0x1e2
  4145ab:	jmpq   412770 <_init+0x20>

00000000004145b0 <OpenSSLDie@plt>:
  4145b0:	jmpq   *0x26297a(%rip)        # 676f30 <_fini+0x219a2c>
  4145b6:	pushq  $0x1e3
  4145bb:	jmpq   412770 <_init+0x20>

00000000004145c0 <SSL_CTX_set_psk_server_callback@plt>:
  4145c0:	jmpq   *0x262972(%rip)        # 676f38 <_fini+0x219a34>
  4145c6:	pushq  $0x1e4
  4145cb:	jmpq   412770 <_init+0x20>

00000000004145d0 <strcpy@plt>:
  4145d0:	jmpq   *0x26296a(%rip)        # 676f40 <_fini+0x219a3c>
  4145d6:	pushq  $0x1e5
  4145db:	jmpq   412770 <_init+0x20>

00000000004145e0 <SSL_get0_kssl_ctx@plt>:
  4145e0:	jmpq   *0x262962(%rip)        # 676f48 <_fini+0x219a44>
  4145e6:	pushq  $0x1e6
  4145eb:	jmpq   412770 <_init+0x20>

00000000004145f0 <DSA_dup_DH@plt>:
  4145f0:	jmpq   *0x26295a(%rip)        # 676f50 <_fini+0x219a4c>
  4145f6:	pushq  $0x1e7
  4145fb:	jmpq   412770 <_init+0x20>

0000000000414600 <BIO_f_cipher@plt>:
  414600:	jmpq   *0x262952(%rip)        # 676f58 <_fini+0x219a54>
  414606:	pushq  $0x1e8
  41460b:	jmpq   412770 <_init+0x20>

0000000000414610 <PEM_write_bio_PUBKEY@plt>:
  414610:	jmpq   *0x26294a(%rip)        # 676f60 <_fini+0x219a5c>
  414616:	pushq  $0x1e9
  41461b:	jmpq   412770 <_init+0x20>

0000000000414620 <SSL_set_session@plt>:
  414620:	jmpq   *0x262942(%rip)        # 676f68 <_fini+0x219a64>
  414626:	pushq  $0x1ea
  41462b:	jmpq   412770 <_init+0x20>

0000000000414630 <UI_method_get_opener@plt>:
  414630:	jmpq   *0x26293a(%rip)        # 676f70 <_fini+0x219a6c>
  414636:	pushq  $0x1eb
  41463b:	jmpq   412770 <_init+0x20>

0000000000414640 <PKCS7_to_TS_TST_INFO@plt>:
  414640:	jmpq   *0x262932(%rip)        # 676f78 <_fini+0x219a74>
  414646:	pushq  $0x1ec
  41464b:	jmpq   412770 <_init+0x20>

0000000000414650 <BN_dec2bn@plt>:
  414650:	jmpq   *0x26292a(%rip)        # 676f80 <_fini+0x219a7c>
  414656:	pushq  $0x1ed
  41465b:	jmpq   412770 <_init+0x20>

0000000000414660 <lh_free@plt>:
  414660:	jmpq   *0x262922(%rip)        # 676f88 <_fini+0x219a84>
  414666:	pushq  $0x1ee
  41466b:	jmpq   412770 <_init+0x20>

0000000000414670 <NETSCAPE_SPKI_free@plt>:
  414670:	jmpq   *0x26291a(%rip)        # 676f90 <_fini+0x219a8c>
  414676:	pushq  $0x1ef
  41467b:	jmpq   412770 <_init+0x20>

0000000000414680 <SSL_set_connect_state@plt>:
  414680:	jmpq   *0x262912(%rip)        # 676f98 <_fini+0x219a94>
  414686:	pushq  $0x1f0
  41468b:	jmpq   412770 <_init+0x20>

0000000000414690 <BIO_get_callback_arg@plt>:
  414690:	jmpq   *0x26290a(%rip)        # 676fa0 <_fini+0x219a9c>
  414696:	pushq  $0x1f1
  41469b:	jmpq   412770 <_init+0x20>

00000000004146a0 <X509_subject_name_hash@plt>:
  4146a0:	jmpq   *0x262902(%rip)        # 676fa8 <_fini+0x219aa4>
  4146a6:	pushq  $0x1f2
  4146ab:	jmpq   412770 <_init+0x20>

00000000004146b0 <select@plt>:
  4146b0:	jmpq   *0x2628fa(%rip)        # 676fb0 <_fini+0x219aac>
  4146b6:	pushq  $0x1f3
  4146bb:	jmpq   412770 <_init+0x20>

00000000004146c0 <SEED_cbc_encrypt@plt>:
  4146c0:	jmpq   *0x2628f2(%rip)        # 676fb8 <_fini+0x219ab4>
  4146c6:	pushq  $0x1f4
  4146cb:	jmpq   412770 <_init+0x20>

00000000004146d0 <CONF_modules_load@plt>:
  4146d0:	jmpq   *0x2628ea(%rip)        # 676fc0 <_fini+0x219abc>
  4146d6:	pushq  $0x1f5
  4146db:	jmpq   412770 <_init+0x20>

00000000004146e0 <X509_REVOKED_add1_ext_i2d@plt>:
  4146e0:	jmpq   *0x2628e2(%rip)        # 676fc8 <_fini+0x219ac4>
  4146e6:	pushq  $0x1f6
  4146eb:	jmpq   412770 <_init+0x20>

00000000004146f0 <PEM_read_bio_X509_CRL@plt>:
  4146f0:	jmpq   *0x2628da(%rip)        # 676fd0 <_fini+0x219acc>
  4146f6:	pushq  $0x1f7
  4146fb:	jmpq   412770 <_init+0x20>

0000000000414700 <EC_GROUP_method_of@plt>:
  414700:	jmpq   *0x2628d2(%rip)        # 676fd8 <_fini+0x219ad4>
  414706:	pushq  $0x1f8
  41470b:	jmpq   412770 <_init+0x20>

0000000000414710 <X509_CRL_sign_ctx@plt>:
  414710:	jmpq   *0x2628ca(%rip)        # 676fe0 <_fini+0x219adc>
  414716:	pushq  $0x1f9
  41471b:	jmpq   412770 <_init+0x20>

0000000000414720 <SSL_CTX_use_PrivateKey_file@plt>:
  414720:	jmpq   *0x2628c2(%rip)        # 676fe8 <_fini+0x219ae4>
  414726:	pushq  $0x1fa
  41472b:	jmpq   412770 <_init+0x20>

0000000000414730 <lh_node_usage_stats_bio@plt>:
  414730:	jmpq   *0x2628ba(%rip)        # 676ff0 <_fini+0x219aec>
  414736:	pushq  $0x1fb
  41473b:	jmpq   412770 <_init+0x20>

0000000000414740 <NETSCAPE_CERT_SEQUENCE_new@plt>:
  414740:	jmpq   *0x2628b2(%rip)        # 676ff8 <_fini+0x219af4>
  414746:	pushq  $0x1fc
  41474b:	jmpq   412770 <_init+0x20>

0000000000414750 <NCONF_get_section@plt>:
  414750:	jmpq   *0x2628aa(%rip)        # 677000 <_fini+0x219afc>
  414756:	pushq  $0x1fd
  41475b:	jmpq   412770 <_init+0x20>

0000000000414760 <OCSP_BASICRESP_free@plt>:
  414760:	jmpq   *0x2628a2(%rip)        # 677008 <_fini+0x219b04>
  414766:	pushq  $0x1fe
  41476b:	jmpq   412770 <_init+0x20>

0000000000414770 <d2i_OCSP_RESPONSE@plt>:
  414770:	jmpq   *0x26289a(%rip)        # 677010 <_fini+0x219b0c>
  414776:	pushq  $0x1ff
  41477b:	jmpq   412770 <_init+0x20>

0000000000414780 <CMS_decrypt_set1_key@plt>:
  414780:	jmpq   *0x262892(%rip)        # 677018 <_fini+0x219b14>
  414786:	pushq  $0x200
  41478b:	jmpq   412770 <_init+0x20>

0000000000414790 <EVP_CIPHER_CTX_cleanup@plt>:
  414790:	jmpq   *0x26288a(%rip)        # 677020 <_fini+0x219b1c>
  414796:	pushq  $0x201
  41479b:	jmpq   412770 <_init+0x20>

00000000004147a0 <DH_check@plt>:
  4147a0:	jmpq   *0x262882(%rip)        # 677028 <_fini+0x219b24>
  4147a6:	pushq  $0x202
  4147ab:	jmpq   412770 <_init+0x20>

00000000004147b0 <__isoc99_sscanf@plt>:
  4147b0:	jmpq   *0x26287a(%rip)        # 677030 <_fini+0x219b2c>
  4147b6:	pushq  $0x203
  4147bb:	jmpq   412770 <_init+0x20>

00000000004147c0 <CMS_EncryptedData_encrypt@plt>:
  4147c0:	jmpq   *0x262872(%rip)        # 677038 <_fini+0x219b34>
  4147c6:	pushq  $0x204
  4147cb:	jmpq   412770 <_init+0x20>

00000000004147d0 <SSL_CTX_set_quiet_shutdown@plt>:
  4147d0:	jmpq   *0x26286a(%rip)        # 677040 <_fini+0x219b3c>
  4147d6:	pushq  $0x205
  4147db:	jmpq   412770 <_init+0x20>

00000000004147e0 <OBJ_NAME_do_all_sorted@plt>:
  4147e0:	jmpq   *0x262862(%rip)        # 677048 <_fini+0x219b44>
  4147e6:	pushq  $0x206
  4147eb:	jmpq   412770 <_init+0x20>

00000000004147f0 <UI_method_set_opener@plt>:
  4147f0:	jmpq   *0x26285a(%rip)        # 677050 <_fini+0x219b4c>
  4147f6:	pushq  $0x207
  4147fb:	jmpq   412770 <_init+0x20>

0000000000414800 <ENGINE_get_ciphers@plt>:
  414800:	jmpq   *0x262852(%rip)        # 677058 <_fini+0x219b54>
  414806:	pushq  $0x208
  41480b:	jmpq   412770 <_init+0x20>

0000000000414810 <X509_REQ_print@plt>:
  414810:	jmpq   *0x26284a(%rip)        # 677060 <_fini+0x219b5c>
  414816:	pushq  $0x209
  41481b:	jmpq   412770 <_init+0x20>

0000000000414820 <__strcat_chk@plt>:
  414820:	jmpq   *0x262842(%rip)        # 677068 <_fini+0x219b64>
  414826:	pushq  $0x20a
  41482b:	jmpq   412770 <_init+0x20>

0000000000414830 <fclose@plt>:
  414830:	jmpq   *0x26283a(%rip)        # 677070 <_fini+0x219b6c>
  414836:	pushq  $0x20b
  41483b:	jmpq   412770 <_init+0x20>

0000000000414840 <OCSP_request_onereq_count@plt>:
  414840:	jmpq   *0x262832(%rip)        # 677078 <_fini+0x219b74>
  414846:	pushq  $0x20c
  41484b:	jmpq   412770 <_init+0x20>

0000000000414850 <CMS_EncryptedData_decrypt@plt>:
  414850:	jmpq   *0x26282a(%rip)        # 677080 <_fini+0x219b7c>
  414856:	pushq  $0x20d
  41485b:	jmpq   412770 <_init+0x20>

0000000000414860 <__xstat@plt>:
  414860:	jmpq   *0x262822(%rip)        # 677088 <_fini+0x219b84>
  414866:	pushq  $0x20e
  41486b:	jmpq   412770 <_init+0x20>

0000000000414870 <OBJ_txt2obj@plt>:
  414870:	jmpq   *0x26281a(%rip)        # 677090 <_fini+0x219b8c>
  414876:	pushq  $0x20f
  41487b:	jmpq   412770 <_init+0x20>

0000000000414880 <SSLv3_server_method@plt>:
  414880:	jmpq   *0x262812(%rip)        # 677098 <_fini+0x219b94>
  414886:	pushq  $0x210
  41488b:	jmpq   412770 <_init+0x20>

0000000000414890 <SSL_shutdown@plt>:
  414890:	jmpq   *0x26280a(%rip)        # 6770a0 <_fini+0x219b9c>
  414896:	pushq  $0x211
  41489b:	jmpq   412770 <_init+0x20>

00000000004148a0 <EVP_PKEY_encrypt_init@plt>:
  4148a0:	jmpq   *0x262802(%rip)        # 6770a8 <_fini+0x219ba4>
  4148a6:	pushq  $0x212
  4148ab:	jmpq   412770 <_init+0x20>

00000000004148b0 <ASN1_TYPE_new@plt>:
  4148b0:	jmpq   *0x2627fa(%rip)        # 6770b0 <_fini+0x219bac>
  4148b6:	pushq  $0x213
  4148bb:	jmpq   412770 <_init+0x20>

00000000004148c0 <PEM_write_bio_PrivateKey@plt>:
  4148c0:	jmpq   *0x2627f2(%rip)        # 6770b8 <_fini+0x219bb4>
  4148c6:	pushq  $0x214
  4148cb:	jmpq   412770 <_init+0x20>

00000000004148d0 <SSL_CIPHER_get_version@plt>:
  4148d0:	jmpq   *0x2627ea(%rip)        # 6770c0 <_fini+0x219bbc>
  4148d6:	pushq  $0x215
  4148db:	jmpq   412770 <_init+0x20>

00000000004148e0 <SHA256@plt>:
  4148e0:	jmpq   *0x2627e2(%rip)        # 6770c8 <_fini+0x219bc4>
  4148e6:	pushq  $0x216
  4148eb:	jmpq   412770 <_init+0x20>

00000000004148f0 <ASN1_TIME_set_string@plt>:
  4148f0:	jmpq   *0x2627da(%rip)        # 6770d0 <_fini+0x219bcc>
  4148f6:	pushq  $0x217
  4148fb:	jmpq   412770 <_init+0x20>

0000000000414900 <X509_NAME_ENTRY_get_data@plt>:
  414900:	jmpq   *0x2627d2(%rip)        # 6770d8 <_fini+0x219bd4>
  414906:	pushq  $0x218
  41490b:	jmpq   412770 <_init+0x20>

0000000000414910 <ASN1_GENERALIZEDTIME_print@plt>:
  414910:	jmpq   *0x2627ca(%rip)        # 6770e0 <_fini+0x219bdc>
  414916:	pushq  $0x219
  41491b:	jmpq   412770 <_init+0x20>

0000000000414920 <EVP_PKEY_set1_DSA@plt>:
  414920:	jmpq   *0x2627c2(%rip)        # 6770e8 <_fini+0x219be4>
  414926:	pushq  $0x21a
  41492b:	jmpq   412770 <_init+0x20>

0000000000414930 <BN_bn2hex@plt>:
  414930:	jmpq   *0x2627ba(%rip)        # 6770f0 <_fini+0x219bec>
  414936:	pushq  $0x21b
  41493b:	jmpq   412770 <_init+0x20>

0000000000414940 <UI_construct_prompt@plt>:
  414940:	jmpq   *0x2627b2(%rip)        # 6770f8 <_fini+0x219bf4>
  414946:	pushq  $0x21c
  41494b:	jmpq   412770 <_init+0x20>

0000000000414950 <OCSP_basic_sign@plt>:
  414950:	jmpq   *0x2627aa(%rip)        # 677100 <_fini+0x219bfc>
  414956:	pushq  $0x21d
  41495b:	jmpq   412770 <_init+0x20>

0000000000414960 <kssl_ctx_get0_client_princ@plt>:
  414960:	jmpq   *0x2627a2(%rip)        # 677108 <_fini+0x219c04>
  414966:	pushq  $0x21e
  41496b:	jmpq   412770 <_init+0x20>

0000000000414970 <RSA_free@plt>:
  414970:	jmpq   *0x26279a(%rip)        # 677110 <_fini+0x219c0c>
  414976:	pushq  $0x21f
  41497b:	jmpq   412770 <_init+0x20>

0000000000414980 <SSL_CTX_set1_param@plt>:
  414980:	jmpq   *0x262792(%rip)        # 677118 <_fini+0x219c14>
  414986:	pushq  $0x220
  41498b:	jmpq   412770 <_init+0x20>

0000000000414990 <UI_get_input_flags@plt>:
  414990:	jmpq   *0x26278a(%rip)        # 677120 <_fini+0x219c1c>
  414996:	pushq  $0x221
  41499b:	jmpq   412770 <_init+0x20>

00000000004149a0 <fileno@plt>:
  4149a0:	jmpq   *0x262782(%rip)        # 677128 <_fini+0x219c24>
  4149a6:	pushq  $0x222
  4149ab:	jmpq   412770 <_init+0x20>

00000000004149b0 <OCSP_REQUEST_free@plt>:
  4149b0:	jmpq   *0x26277a(%rip)        # 677130 <_fini+0x219c2c>
  4149b6:	pushq  $0x223
  4149bb:	jmpq   412770 <_init+0x20>

00000000004149c0 <X509_add_ext@plt>:
  4149c0:	jmpq   *0x262772(%rip)        # 677138 <_fini+0x219c34>
  4149c6:	pushq  $0x224
  4149cb:	jmpq   412770 <_init+0x20>

00000000004149d0 <fdopen@plt>:
  4149d0:	jmpq   *0x26276a(%rip)        # 677140 <_fini+0x219c3c>
  4149d6:	pushq  $0x225
  4149db:	jmpq   412770 <_init+0x20>

00000000004149e0 <UI_ctrl@plt>:
  4149e0:	jmpq   *0x262762(%rip)        # 677148 <_fini+0x219c44>
  4149e6:	pushq  $0x226
  4149eb:	jmpq   412770 <_init+0x20>

00000000004149f0 <CRYPTO_set_mem_functions@plt>:
  4149f0:	jmpq   *0x26275a(%rip)        # 677150 <_fini+0x219c4c>
  4149f6:	pushq  $0x227
  4149fb:	jmpq   412770 <_init+0x20>

0000000000414a00 <SSL_CTX_set_psk_client_callback@plt>:
  414a00:	jmpq   *0x262752(%rip)        # 677158 <_fini+0x219c54>
  414a06:	pushq  $0x228
  414a0b:	jmpq   412770 <_init+0x20>

0000000000414a10 <PKCS12_free@plt>:
  414a10:	jmpq   *0x26274a(%rip)        # 677160 <_fini+0x219c5c>
  414a16:	pushq  $0x229
  414a1b:	jmpq   412770 <_init+0x20>

0000000000414a20 <BIO_new@plt>:
  414a20:	jmpq   *0x262742(%rip)        # 677168 <_fini+0x219c64>
  414a26:	pushq  $0x22a
  414a2b:	jmpq   412770 <_init+0x20>

0000000000414a30 <i2d_X509_PUBKEY@plt>:
  414a30:	jmpq   *0x26273a(%rip)        # 677170 <_fini+0x219c6c>
  414a36:	pushq  $0x22b
  414a3b:	jmpq   412770 <_init+0x20>

0000000000414a40 <SSL_read@plt>:
  414a40:	jmpq   *0x262732(%rip)        # 677178 <_fini+0x219c74>
  414a46:	pushq  $0x22c
  414a4b:	jmpq   412770 <_init+0x20>

0000000000414a50 <TS_REQ_new@plt>:
  414a50:	jmpq   *0x26272a(%rip)        # 677180 <_fini+0x219c7c>
  414a56:	pushq  $0x22d
  414a5b:	jmpq   412770 <_init+0x20>

0000000000414a60 <SSL_CTX_callback_ctrl@plt>:
  414a60:	jmpq   *0x262722(%rip)        # 677188 <_fini+0x219c84>
  414a66:	pushq  $0x22e
  414a6b:	jmpq   412770 <_init+0x20>

0000000000414a70 <ERR_free_strings@plt>:
  414a70:	jmpq   *0x26271a(%rip)        # 677190 <_fini+0x219c8c>
  414a76:	pushq  $0x22f
  414a7b:	jmpq   412770 <_init+0x20>

0000000000414a80 <EVP_PKCS82PKEY@plt>:
  414a80:	jmpq   *0x262712(%rip)        # 677198 <_fini+0x219c94>
  414a86:	pushq  $0x230
  414a8b:	jmpq   412770 <_init+0x20>

0000000000414a90 <SSLv2_client_method@plt>:
  414a90:	jmpq   *0x26270a(%rip)        # 6771a0 <_fini+0x219c9c>
  414a96:	pushq  $0x231
  414a9b:	jmpq   412770 <_init+0x20>

0000000000414aa0 <BN_bin2bn@plt>:
  414aa0:	jmpq   *0x262702(%rip)        # 6771a8 <_fini+0x219ca4>
  414aa6:	pushq  $0x232
  414aab:	jmpq   412770 <_init+0x20>

0000000000414ab0 <DTLSv1_client_method@plt>:
  414ab0:	jmpq   *0x2626fa(%rip)        # 6771b0 <_fini+0x219cac>
  414ab6:	pushq  $0x233
  414abb:	jmpq   412770 <_init+0x20>

0000000000414ac0 <X509_reject_clear@plt>:
  414ac0:	jmpq   *0x2626f2(%rip)        # 6771b8 <_fini+0x219cb4>
  414ac6:	pushq  $0x234
  414acb:	jmpq   412770 <_init+0x20>

0000000000414ad0 <PEM_write_bio_ECPKParameters@plt>:
  414ad0:	jmpq   *0x2626ea(%rip)        # 6771c0 <_fini+0x219cbc>
  414ad6:	pushq  $0x235
  414adb:	jmpq   412770 <_init+0x20>

0000000000414ae0 <__ctype_b_loc@plt>:
  414ae0:	jmpq   *0x2626e2(%rip)        # 6771c8 <_fini+0x219cc4>
  414ae6:	pushq  $0x236
  414aeb:	jmpq   412770 <_init+0x20>

0000000000414af0 <strcasecmp@plt>:
  414af0:	jmpq   *0x2626da(%rip)        # 6771d0 <_fini+0x219ccc>
  414af6:	pushq  $0x237
  414afb:	jmpq   412770 <_init+0x20>

0000000000414b00 <PEM_read_bio_ECPKParameters@plt>:
  414b00:	jmpq   *0x2626d2(%rip)        # 6771d8 <_fini+0x219cd4>
  414b06:	pushq  $0x238
  414b0b:	jmpq   412770 <_init+0x20>

0000000000414b10 <X509_CRL_new@plt>:
  414b10:	jmpq   *0x2626ca(%rip)        # 6771e0 <_fini+0x219cdc>
  414b16:	pushq  $0x239
  414b1b:	jmpq   412770 <_init+0x20>

0000000000414b20 <PKCS7_new@plt>:
  414b20:	jmpq   *0x2626c2(%rip)        # 6771e8 <_fini+0x219ce4>
  414b26:	pushq  $0x23a
  414b2b:	jmpq   412770 <_init+0x20>

0000000000414b30 <BUF_strlcat@plt>:
  414b30:	jmpq   *0x2626ba(%rip)        # 6771f0 <_fini+0x219cec>
  414b36:	pushq  $0x23b
  414b3b:	jmpq   412770 <_init+0x20>

0000000000414b40 <BUF_MEM_new@plt>:
  414b40:	jmpq   *0x2626b2(%rip)        # 6771f8 <_fini+0x219cf4>
  414b46:	pushq  $0x23c
  414b4b:	jmpq   412770 <_init+0x20>

0000000000414b50 <EVP_PKEY_new@plt>:
  414b50:	jmpq   *0x2626aa(%rip)        # 677200 <_fini+0x219cfc>
  414b56:	pushq  $0x23d
  414b5b:	jmpq   412770 <_init+0x20>

0000000000414b60 <i2d_CMS_bio_stream@plt>:
  414b60:	jmpq   *0x2626a2(%rip)        # 677208 <_fini+0x219d04>
  414b66:	pushq  $0x23e
  414b6b:	jmpq   412770 <_init+0x20>

0000000000414b70 <d2i_TS_RESP_bio@plt>:
  414b70:	jmpq   *0x26269a(%rip)        # 677210 <_fini+0x219d0c>
  414b76:	pushq  $0x23f
  414b7b:	jmpq   412770 <_init+0x20>

0000000000414b80 <ENGINE_ctrl_cmd@plt>:
  414b80:	jmpq   *0x262692(%rip)        # 677218 <_fini+0x219d14>
  414b86:	pushq  $0x240
  414b8b:	jmpq   412770 <_init+0x20>

0000000000414b90 <TS_RESP_CTX_new@plt>:
  414b90:	jmpq   *0x26268a(%rip)        # 677220 <_fini+0x219d1c>
  414b96:	pushq  $0x241
  414b9b:	jmpq   412770 <_init+0x20>

0000000000414ba0 <TS_CONF_set_ordering@plt>:
  414ba0:	jmpq   *0x262682(%rip)        # 677228 <_fini+0x219d24>
  414ba6:	pushq  $0x242
  414bab:	jmpq   412770 <_init+0x20>

0000000000414bb0 <d2i_TS_REQ_bio@plt>:
  414bb0:	jmpq   *0x26267a(%rip)        # 677230 <_fini+0x219d2c>
  414bb6:	pushq  $0x243
  414bbb:	jmpq   412770 <_init+0x20>

0000000000414bc0 <PKCS7_verify@plt>:
  414bc0:	jmpq   *0x262672(%rip)        # 677238 <_fini+0x219d34>
  414bc6:	pushq  $0x244
  414bcb:	jmpq   412770 <_init+0x20>

0000000000414bd0 <X509_NAME_print_ex@plt>:
  414bd0:	jmpq   *0x26266a(%rip)        # 677240 <_fini+0x219d3c>
  414bd6:	pushq  $0x245
  414bdb:	jmpq   412770 <_init+0x20>

0000000000414be0 <DSA_generate_key@plt>:
  414be0:	jmpq   *0x262662(%rip)        # 677248 <_fini+0x219d44>
  414be6:	pushq  $0x246
  414beb:	jmpq   412770 <_init+0x20>

0000000000414bf0 <X509_REQ_add1_attr_by_NID@plt>:
  414bf0:	jmpq   *0x26265a(%rip)        # 677250 <_fini+0x219d4c>
  414bf6:	pushq  $0x247
  414bfb:	jmpq   412770 <_init+0x20>

0000000000414c00 <PEM_write_bio_DHparams@plt>:
  414c00:	jmpq   *0x262652(%rip)        # 677258 <_fini+0x219d54>
  414c06:	pushq  $0x248
  414c0b:	jmpq   412770 <_init+0x20>

0000000000414c10 <strrchr@plt>:
  414c10:	jmpq   *0x26264a(%rip)        # 677260 <_fini+0x219d5c>
  414c16:	pushq  $0x249
  414c1b:	jmpq   412770 <_init+0x20>

0000000000414c20 <EVP_PKEY_asn1_get_count@plt>:
  414c20:	jmpq   *0x262642(%rip)        # 677268 <_fini+0x219d64>
  414c26:	pushq  $0x24a
  414c2b:	jmpq   412770 <_init+0x20>

0000000000414c30 <__stack_chk_fail@plt>:
  414c30:	jmpq   *0x26263a(%rip)        # 677270 <_fini+0x219d6c>
  414c36:	pushq  $0x24b
  414c3b:	jmpq   412770 <_init+0x20>

0000000000414c40 <EC_GROUP_get_order@plt>:
  414c40:	jmpq   *0x262632(%rip)        # 677278 <_fini+0x219d74>
  414c46:	pushq  $0x24c
  414c4b:	jmpq   412770 <_init+0x20>

0000000000414c50 <NCONF_load@plt>:
  414c50:	jmpq   *0x26262a(%rip)        # 677280 <_fini+0x219d7c>
  414c56:	pushq  $0x24d
  414c5b:	jmpq   412770 <_init+0x20>

0000000000414c60 <ASN1_STRING_length@plt>:
  414c60:	jmpq   *0x262622(%rip)        # 677288 <_fini+0x219d84>
  414c66:	pushq  $0x24e
  414c6b:	jmpq   412770 <_init+0x20>

0000000000414c70 <CONF_load@plt>:
  414c70:	jmpq   *0x26261a(%rip)        # 677290 <_fini+0x219d8c>
  414c76:	pushq  $0x24f
  414c7b:	jmpq   412770 <_init+0x20>

0000000000414c80 <DSA_generate_parameters_ex@plt>:
  414c80:	jmpq   *0x262612(%rip)        # 677298 <_fini+0x219d94>
  414c86:	pushq  $0x250
  414c8b:	jmpq   412770 <_init+0x20>

0000000000414c90 <CMS_ContentInfo_free@plt>:
  414c90:	jmpq   *0x26260a(%rip)        # 6772a0 <_fini+0x219d9c>
  414c96:	pushq  $0x251
  414c9b:	jmpq   412770 <_init+0x20>

0000000000414ca0 <fputs@plt>:
  414ca0:	jmpq   *0x262602(%rip)        # 6772a8 <_fini+0x219da4>
  414ca6:	pushq  $0x252
  414cab:	jmpq   412770 <_init+0x20>

0000000000414cb0 <TS_CONF_get_tsa_section@plt>:
  414cb0:	jmpq   *0x2625fa(%rip)        # 6772b0 <_fini+0x219dac>
  414cb6:	pushq  $0x253
  414cbb:	jmpq   412770 <_init+0x20>

0000000000414cc0 <listen@plt>:
  414cc0:	jmpq   *0x2625f2(%rip)        # 6772b8 <_fini+0x219db4>
  414cc6:	pushq  $0x254
  414ccb:	jmpq   412770 <_init+0x20>

0000000000414cd0 <X509V3_EXT_REQ_add_nconf@plt>:
  414cd0:	jmpq   *0x2625ea(%rip)        # 6772c0 <_fini+0x219dbc>
  414cd6:	pushq  $0x255
  414cdb:	jmpq   412770 <_init+0x20>

0000000000414ce0 <SSL_library_init@plt>:
  414ce0:	jmpq   *0x2625e2(%rip)        # 6772c8 <_fini+0x219dc4>
  414ce6:	pushq  $0x256
  414ceb:	jmpq   412770 <_init+0x20>

0000000000414cf0 <HMAC_CTX_init@plt>:
  414cf0:	jmpq   *0x2625da(%rip)        # 6772d0 <_fini+0x219dcc>
  414cf6:	pushq  $0x257
  414cfb:	jmpq   412770 <_init+0x20>

0000000000414d00 <i2d_ECPrivateKey_bio@plt>:
  414d00:	jmpq   *0x2625d2(%rip)        # 6772d8 <_fini+0x219dd4>
  414d06:	pushq  $0x258
  414d0b:	jmpq   412770 <_init+0x20>

0000000000414d10 <EC_METHOD_get_field_type@plt>:
  414d10:	jmpq   *0x2625ca(%rip)        # 6772e0 <_fini+0x219ddc>
  414d16:	pushq  $0x259
  414d1b:	jmpq   412770 <_init+0x20>

0000000000414d20 <BN_set_word@plt>:
  414d20:	jmpq   *0x2625c2(%rip)        # 6772e8 <_fini+0x219de4>
  414d26:	pushq  $0x25a
  414d2b:	jmpq   412770 <_init+0x20>

0000000000414d30 <UI_create_method@plt>:
  414d30:	jmpq   *0x2625ba(%rip)        # 6772f0 <_fini+0x219dec>
  414d36:	pushq  $0x25b
  414d3b:	jmpq   412770 <_init+0x20>

0000000000414d40 <string_to_hex@plt>:
  414d40:	jmpq   *0x2625b2(%rip)        # 6772f8 <_fini+0x219df4>
  414d46:	pushq  $0x25c
  414d4b:	jmpq   412770 <_init+0x20>

0000000000414d50 <HMAC_Init_ex@plt>:
  414d50:	jmpq   *0x2625aa(%rip)        # 677300 <_fini+0x219dfc>
  414d56:	pushq  $0x25d
  414d5b:	jmpq   412770 <_init+0x20>

0000000000414d60 <AES_options@plt>:
  414d60:	jmpq   *0x2625a2(%rip)        # 677308 <_fini+0x219e04>
  414d66:	pushq  $0x25e
  414d6b:	jmpq   412770 <_init+0x20>

0000000000414d70 <OCSP_cert_to_id@plt>:
  414d70:	jmpq   *0x26259a(%rip)        # 677310 <_fini+0x219e0c>
  414d76:	pushq  $0x25f
  414d7b:	jmpq   412770 <_init+0x20>

0000000000414d80 <OCSP_request_onereq_get0@plt>:
  414d80:	jmpq   *0x262592(%rip)        # 677318 <_fini+0x219e14>
  414d86:	pushq  $0x260
  414d8b:	jmpq   412770 <_init+0x20>

0000000000414d90 <EC_POINT_point2bn@plt>:
  414d90:	jmpq   *0x26258a(%rip)        # 677320 <_fini+0x219e1c>
  414d96:	pushq  $0x261
  414d9b:	jmpq   412770 <_init+0x20>

0000000000414da0 <EVP_rc2_cbc@plt>:
  414da0:	jmpq   *0x262582(%rip)        # 677328 <_fini+0x219e24>
  414da6:	pushq  $0x262
  414dab:	jmpq   412770 <_init+0x20>

0000000000414db0 <SSL_COMP_get_name@plt>:
  414db0:	jmpq   *0x26257a(%rip)        # 677330 <_fini+0x219e2c>
  414db6:	pushq  $0x263
  414dbb:	jmpq   412770 <_init+0x20>

0000000000414dc0 <X509_REQ_set_version@plt>:
  414dc0:	jmpq   *0x262572(%rip)        # 677338 <_fini+0x219e34>
  414dc6:	pushq  $0x264
  414dcb:	jmpq   412770 <_init+0x20>

0000000000414dd0 <SMIME_read_CMS@plt>:
  414dd0:	jmpq   *0x26256a(%rip)        # 677340 <_fini+0x219e3c>
  414dd6:	pushq  $0x265
  414ddb:	jmpq   412770 <_init+0x20>

0000000000414de0 <PEM_write_bio_PKCS7@plt>:
  414de0:	jmpq   *0x262562(%rip)        # 677348 <_fini+0x219e44>
  414de6:	pushq  $0x266
  414deb:	jmpq   412770 <_init+0x20>

0000000000414df0 <SSL_get_fd@plt>:
  414df0:	jmpq   *0x26255a(%rip)        # 677350 <_fini+0x219e4c>
  414df6:	pushq  $0x267
  414dfb:	jmpq   412770 <_init+0x20>

0000000000414e00 <SSL_clear@plt>:
  414e00:	jmpq   *0x262552(%rip)        # 677358 <_fini+0x219e54>
  414e06:	pushq  $0x268
  414e0b:	jmpq   412770 <_init+0x20>

0000000000414e10 <SSL_SESSION_free@plt>:
  414e10:	jmpq   *0x26254a(%rip)        # 677360 <_fini+0x219e5c>
  414e16:	pushq  $0x269
  414e1b:	jmpq   412770 <_init+0x20>

0000000000414e20 <X509_get_default_cert_area@plt>:
  414e20:	jmpq   *0x262542(%rip)        # 677368 <_fini+0x219e64>
  414e26:	pushq  $0x26a
  414e2b:	jmpq   412770 <_init+0x20>

0000000000414e30 <X509_print@plt>:
  414e30:	jmpq   *0x26253a(%rip)        # 677370 <_fini+0x219e6c>
  414e36:	pushq  $0x26b
  414e3b:	jmpq   412770 <_init+0x20>

0000000000414e40 <SSL_set_session_id_context@plt>:
  414e40:	jmpq   *0x262532(%rip)        # 677378 <_fini+0x219e74>
  414e46:	pushq  $0x26c
  414e4b:	jmpq   412770 <_init+0x20>

0000000000414e50 <ENGINE_get_DH@plt>:
  414e50:	jmpq   *0x26252a(%rip)        # 677380 <_fini+0x219e7c>
  414e56:	pushq  $0x26d
  414e5b:	jmpq   412770 <_init+0x20>

0000000000414e60 <fflush@plt>:
  414e60:	jmpq   *0x262522(%rip)        # 677388 <_fini+0x219e84>
  414e66:	pushq  $0x26e
  414e6b:	jmpq   412770 <_init+0x20>

0000000000414e70 <fopen@plt>:
  414e70:	jmpq   *0x26251a(%rip)        # 677390 <_fini+0x219e8c>
  414e76:	pushq  $0x26f
  414e7b:	jmpq   412770 <_init+0x20>

0000000000414e80 <EC_GROUP_free@plt>:
  414e80:	jmpq   *0x262512(%rip)        # 677398 <_fini+0x219e94>
  414e86:	pushq  $0x270
  414e8b:	jmpq   412770 <_init+0x20>

0000000000414e90 <EVP_CIPHER_CTX_set_flags@plt>:
  414e90:	jmpq   *0x26250a(%rip)        # 6773a0 <_fini+0x219e9c>
  414e96:	pushq  $0x271
  414e9b:	jmpq   412770 <_init+0x20>

0000000000414ea0 <i2a_ASN1_INTEGER@plt>:
  414ea0:	jmpq   *0x262502(%rip)        # 6773a8 <_fini+0x219ea4>
  414ea6:	pushq  $0x272
  414eab:	jmpq   412770 <_init+0x20>

0000000000414eb0 <ASN1_ENUMERATED_free@plt>:
  414eb0:	jmpq   *0x2624fa(%rip)        # 6773b0 <_fini+0x219eac>
  414eb6:	pushq  $0x273
  414ebb:	jmpq   412770 <_init+0x20>

0000000000414ec0 <EVP_PKEY_asn1_get0_info@plt>:
  414ec0:	jmpq   *0x2624f2(%rip)        # 6773b8 <_fini+0x219eb4>
  414ec6:	pushq  $0x274
  414ecb:	jmpq   412770 <_init+0x20>

0000000000414ed0 <X509_SIG_free@plt>:
  414ed0:	jmpq   *0x2624ea(%rip)        # 6773c0 <_fini+0x219ebc>
  414ed6:	pushq  $0x275
  414edb:	jmpq   412770 <_init+0x20>

0000000000414ee0 <signal@plt>:
  414ee0:	jmpq   *0x2624e2(%rip)        # 6773c8 <_fini+0x219ec4>
  414ee6:	pushq  $0x276
  414eeb:	jmpq   412770 <_init+0x20>

0000000000414ef0 <free@plt>:
  414ef0:	jmpq   *0x2624da(%rip)        # 6773d0 <_fini+0x219ecc>
  414ef6:	pushq  $0x277
  414efb:	jmpq   412770 <_init+0x20>

0000000000414f00 <PEM_write_bio_NETSCAPE_CERT_SEQUENCE@plt>:
  414f00:	jmpq   *0x2624d2(%rip)        # 6773d8 <_fini+0x219ed4>
  414f06:	pushq  $0x278
  414f0b:	jmpq   412770 <_init+0x20>

0000000000414f10 <SHA512@plt>:
  414f10:	jmpq   *0x2624ca(%rip)        # 6773e0 <_fini+0x219edc>
  414f16:	pushq  $0x279
  414f1b:	jmpq   412770 <_init+0x20>

0000000000414f20 <GENERAL_NAME_free@plt>:
  414f20:	jmpq   *0x2624c2(%rip)        # 6773e8 <_fini+0x219ee4>
  414f26:	pushq  $0x27a
  414f2b:	jmpq   412770 <_init+0x20>

0000000000414f30 <OCSP_REQ_CTX_free@plt>:
  414f30:	jmpq   *0x2624ba(%rip)        # 6773f0 <_fini+0x219eec>
  414f36:	pushq  $0x27b
  414f3b:	jmpq   412770 <_init+0x20>

0000000000414f40 <UI_method_get_closer@plt>:
  414f40:	jmpq   *0x2624b2(%rip)        # 6773f8 <_fini+0x219ef4>
  414f46:	pushq  $0x27c
  414f4b:	jmpq   412770 <_init+0x20>

0000000000414f50 <i2d_DSA_PUBKEY_bio@plt>:
  414f50:	jmpq   *0x2624aa(%rip)        # 677400 <_fini+0x219efc>
  414f56:	pushq  $0x27d
  414f5b:	jmpq   412770 <_init+0x20>

0000000000414f60 <DSAparams_dup@plt>:
  414f60:	jmpq   *0x2624a2(%rip)        # 677408 <_fini+0x219f04>
  414f66:	pushq  $0x27e
  414f6b:	jmpq   412770 <_init+0x20>

0000000000414f70 <X509_VERIFY_PARAM_add0_policy@plt>:
  414f70:	jmpq   *0x26249a(%rip)        # 677410 <_fini+0x219f0c>
  414f76:	pushq  $0x27f
  414f7b:	jmpq   412770 <_init+0x20>

0000000000414f80 <SMIME_write_PKCS7@plt>:
  414f80:	jmpq   *0x262492(%rip)        # 677418 <_fini+0x219f14>
  414f86:	pushq  $0x280
  414f8b:	jmpq   412770 <_init+0x20>

0000000000414f90 <X509_add1_reject_object@plt>:
  414f90:	jmpq   *0x26248a(%rip)        # 677420 <_fini+0x219f1c>
  414f96:	pushq  $0x281
  414f9b:	jmpq   412770 <_init+0x20>

0000000000414fa0 <kssl_ctx_setstring@plt>:
  414fa0:	jmpq   *0x262482(%rip)        # 677428 <_fini+0x219f24>
  414fa6:	pushq  $0x282
  414fab:	jmpq   412770 <_init+0x20>

0000000000414fb0 <exit@plt>:
  414fb0:	jmpq   *0x26247a(%rip)        # 677430 <_fini+0x219f2c>
  414fb6:	pushq  $0x283
  414fbb:	jmpq   412770 <_init+0x20>

0000000000414fc0 <getenv@plt>:
  414fc0:	jmpq   *0x262472(%rip)        # 677438 <_fini+0x219f34>
  414fc6:	pushq  $0x284
  414fcb:	jmpq   412770 <_init+0x20>

0000000000414fd0 <PKCS12_decrypt_skey@plt>:
  414fd0:	jmpq   *0x26246a(%rip)        # 677440 <_fini+0x219f3c>
  414fd6:	pushq  $0x285
  414fdb:	jmpq   412770 <_init+0x20>

0000000000414fe0 <X509_get1_ocsp@plt>:
  414fe0:	jmpq   *0x262462(%rip)        # 677448 <_fini+0x219f44>
  414fe6:	pushq  $0x286
  414feb:	jmpq   412770 <_init+0x20>

0000000000414ff0 <EC_GROUP_set_asn1_flag@plt>:
  414ff0:	jmpq   *0x26245a(%rip)        # 677450 <_fini+0x219f4c>
  414ff6:	pushq  $0x287
  414ffb:	jmpq   412770 <_init+0x20>

0000000000415000 <PEM_write_bio_DSAPrivateKey@plt>:
  415000:	jmpq   *0x262452(%rip)        # 677458 <_fini+0x219f54>
  415006:	pushq  $0x288
  41500b:	jmpq   412770 <_init+0x20>

0000000000415010 <RSA_X931_generate_key_ex@plt>:
  415010:	jmpq   *0x26244a(%rip)        # 677460 <_fini+0x219f5c>
  415016:	pushq  $0x289
  41501b:	jmpq   412770 <_init+0x20>

0000000000415020 <CRYPTO_free@plt>:
  415020:	jmpq   *0x262442(%rip)        # 677468 <_fini+0x219f64>
  415026:	pushq  $0x28a
  41502b:	jmpq   412770 <_init+0x20>

0000000000415030 <FIPS_mode@plt>:
  415030:	jmpq   *0x26243a(%rip)        # 677470 <_fini+0x219f6c>
  415036:	pushq  $0x28b
  41503b:	jmpq   412770 <_init+0x20>

0000000000415040 <SSL_pending@plt>:
  415040:	jmpq   *0x262432(%rip)        # 677478 <_fini+0x219f74>
  415046:	pushq  $0x28c
  41504b:	jmpq   412770 <_init+0x20>

0000000000415050 <X509_STORE_CTX_get_error@plt>:
  415050:	jmpq   *0x26242a(%rip)        # 677480 <_fini+0x219f7c>
  415056:	pushq  $0x28d
  41505b:	jmpq   412770 <_init+0x20>

0000000000415060 <BIO_f_base64@plt>:
  415060:	jmpq   *0x262422(%rip)        # 677488 <_fini+0x219f84>
  415066:	pushq  $0x28e
  41506b:	jmpq   412770 <_init+0x20>

0000000000415070 <PKCS8_PRIV_KEY_INFO_free@plt>:
  415070:	jmpq   *0x26241a(%rip)        # 677490 <_fini+0x219f8c>
  415076:	pushq  $0x28f
  41507b:	jmpq   412770 <_init+0x20>

0000000000415080 <ENGINE_get_digests@plt>:
  415080:	jmpq   *0x262412(%rip)        # 677498 <_fini+0x219f94>
  415086:	pushq  $0x290
  41508b:	jmpq   412770 <_init+0x20>

0000000000415090 <PKCS12_certbag2x509@plt>:
  415090:	jmpq   *0x26240a(%rip)        # 6774a0 <_fini+0x219f9c>
  415096:	pushq  $0x291
  41509b:	jmpq   412770 <_init+0x20>

00000000004150a0 <CRYPTO_mem_ctrl@plt>:
  4150a0:	jmpq   *0x262402(%rip)        # 6774a8 <_fini+0x219fa4>
  4150a6:	pushq  $0x292
  4150ab:	jmpq   412770 <_init+0x20>

00000000004150b0 <fputc@plt>:
  4150b0:	jmpq   *0x2623fa(%rip)        # 6774b0 <_fini+0x219fac>
  4150b6:	pushq  $0x293
  4150bb:	jmpq   412770 <_init+0x20>

00000000004150c0 <ERR_error_string_n@plt>:
  4150c0:	jmpq   *0x2623f2(%rip)        # 6774b8 <_fini+0x219fb4>
  4150c6:	pushq  $0x294
  4150cb:	jmpq   412770 <_init+0x20>

00000000004150d0 <i2d_PKCS7_bio_stream@plt>:
  4150d0:	jmpq   *0x2623ea(%rip)        # 6774c0 <_fini+0x219fbc>
  4150d6:	pushq  $0x295
  4150db:	jmpq   412770 <_init+0x20>

00000000004150e0 <TS_CONF_set_crypto_device@plt>:
  4150e0:	jmpq   *0x2623e2(%rip)        # 6774c8 <_fini+0x219fc4>
  4150e6:	pushq  $0x296
  4150eb:	jmpq   412770 <_init+0x20>

00000000004150f0 <RAND_write_file@plt>:
  4150f0:	jmpq   *0x2623da(%rip)        # 6774d0 <_fini+0x219fcc>
  4150f6:	pushq  $0x297
  4150fb:	jmpq   412770 <_init+0x20>

0000000000415100 <getaddrinfo@plt>:
  415100:	jmpq   *0x2623d2(%rip)        # 6774d8 <_fini+0x219fd4>
  415106:	pushq  $0x298
  41510b:	jmpq   412770 <_init+0x20>

0000000000415110 <EVP_MD_CTX_cleanup@plt>:
  415110:	jmpq   *0x2623ca(%rip)        # 6774e0 <_fini+0x219fdc>
  415116:	pushq  $0x299
  41511b:	jmpq   412770 <_init+0x20>

0000000000415120 <X509_ocspid_print@plt>:
  415120:	jmpq   *0x2623c2(%rip)        # 6774e8 <_fini+0x219fe4>
  415126:	pushq  $0x29a
  41512b:	jmpq   412770 <_init+0x20>

0000000000415130 <ERR_get_error@plt>:
  415130:	jmpq   *0x2623ba(%rip)        # 6774f0 <_fini+0x219fec>
  415136:	pushq  $0x29b
  41513b:	jmpq   412770 <_init+0x20>

0000000000415140 <EVP_PKEY_keygen_init@plt>:
  415140:	jmpq   *0x2623b2(%rip)        # 6774f8 <_fini+0x219ff4>
  415146:	pushq  $0x29c
  41514b:	jmpq   412770 <_init+0x20>

0000000000415150 <BUF_MEM_free@plt>:
  415150:	jmpq   *0x2623aa(%rip)        # 677500 <_fini+0x219ffc>
  415156:	pushq  $0x29d
  41515b:	jmpq   412770 <_init+0x20>

0000000000415160 <TS_REQ_set_version@plt>:
  415160:	jmpq   *0x2623a2(%rip)        # 677508 <_fini+0x21a004>
  415166:	pushq  $0x29e
  41516b:	jmpq   412770 <_init+0x20>

0000000000415170 <PEM_read_bio_PKCS8@plt>:
  415170:	jmpq   *0x26239a(%rip)        # 677510 <_fini+0x21a00c>
  415176:	pushq  $0x29f
  41517b:	jmpq   412770 <_init+0x20>

0000000000415180 <X509_VERIFY_PARAM_new@plt>:
  415180:	jmpq   *0x262392(%rip)        # 677518 <_fini+0x21a014>
  415186:	pushq  $0x2a0
  41518b:	jmpq   412770 <_init+0x20>

0000000000415190 <sk_delete@plt>:
  415190:	jmpq   *0x26238a(%rip)        # 677520 <_fini+0x21a01c>
  415196:	pushq  $0x2a1
  41519b:	jmpq   412770 <_init+0x20>

00000000004151a0 <EVP_md4@plt>:
  4151a0:	jmpq   *0x262382(%rip)        # 677528 <_fini+0x21a024>
  4151a6:	pushq  $0x2a2
  4151ab:	jmpq   412770 <_init+0x20>

00000000004151b0 <d2i_PrivateKey_bio@plt>:
  4151b0:	jmpq   *0x26237a(%rip)        # 677530 <_fini+0x21a02c>
  4151b6:	pushq  $0x2a3
  4151bb:	jmpq   412770 <_init+0x20>

00000000004151c0 <ASN1_STRING_cmp@plt>:
  4151c0:	jmpq   *0x262372(%rip)        # 677538 <_fini+0x21a034>
  4151c6:	pushq  $0x2a4
  4151cb:	jmpq   412770 <_init+0x20>

00000000004151d0 <b2i_PublicKey_bio@plt>:
  4151d0:	jmpq   *0x26236a(%rip)        # 677540 <_fini+0x21a03c>
  4151d6:	pushq  $0x2a5
  4151db:	jmpq   412770 <_init+0x20>

00000000004151e0 <EVP_PKEY_verify@plt>:
  4151e0:	jmpq   *0x262362(%rip)        # 677548 <_fini+0x21a044>
  4151e6:	pushq  $0x2a6
  4151eb:	jmpq   412770 <_init+0x20>

00000000004151f0 <SSL_CTX_set_verify@plt>:
  4151f0:	jmpq   *0x26235a(%rip)        # 677550 <_fini+0x21a04c>
  4151f6:	pushq  $0x2a7
  4151fb:	jmpq   412770 <_init+0x20>

0000000000415200 <s2i_ASN1_INTEGER@plt>:
  415200:	jmpq   *0x262352(%rip)        # 677558 <_fini+0x21a054>
  415206:	pushq  $0x2a8
  41520b:	jmpq   412770 <_init+0x20>

0000000000415210 <ENGINE_get_name@plt>:
  415210:	jmpq   *0x26234a(%rip)        # 677560 <_fini+0x21a05c>
  415216:	pushq  $0x2a9
  41521b:	jmpq   412770 <_init+0x20>

0000000000415220 <OCSP_crl_reason_str@plt>:
  415220:	jmpq   *0x262342(%rip)        # 677568 <_fini+0x21a064>
  415226:	pushq  $0x2aa
  41522b:	jmpq   412770 <_init+0x20>

0000000000415230 <X509_alias_get0@plt>:
  415230:	jmpq   *0x26233a(%rip)        # 677570 <_fini+0x21a06c>
  415236:	pushq  $0x2ab
  41523b:	jmpq   412770 <_init+0x20>

0000000000415240 <freeaddrinfo@plt>:
  415240:	jmpq   *0x262332(%rip)        # 677578 <_fini+0x21a074>
  415246:	pushq  $0x2ac
  41524b:	jmpq   412770 <_init+0x20>

0000000000415250 <X509_issuer_name_hash_old@plt>:
  415250:	jmpq   *0x26232a(%rip)        # 677580 <_fini+0x21a07c>
  415256:	pushq  $0x2ad
  41525b:	jmpq   412770 <_init+0x20>

0000000000415260 <TS_CONF_set_tsa_name@plt>:
  415260:	jmpq   *0x262322(%rip)        # 677588 <_fini+0x21a084>
  415266:	pushq  $0x2ae
  41526b:	jmpq   412770 <_init+0x20>

0000000000415270 <X509_CRL_verify@plt>:
  415270:	jmpq   *0x26231a(%rip)        # 677590 <_fini+0x21a08c>
  415276:	pushq  $0x2af
  41527b:	jmpq   412770 <_init+0x20>

0000000000415280 <PEM_read_bio_X509_REQ@plt>:
  415280:	jmpq   *0x262312(%rip)        # 677598 <_fini+0x21a094>
  415286:	pushq  $0x2b0
  41528b:	jmpq   412770 <_init+0x20>

0000000000415290 <EVP_MD_type@plt>:
  415290:	jmpq   *0x26230a(%rip)        # 6775a0 <_fini+0x21a09c>
  415296:	pushq  $0x2b1
  41529b:	jmpq   412770 <_init+0x20>

00000000004152a0 <X509_CRL_digest@plt>:
  4152a0:	jmpq   *0x262302(%rip)        # 6775a8 <_fini+0x21a0a4>
  4152a6:	pushq  $0x2b2
  4152ab:	jmpq   412770 <_init+0x20>

00000000004152b0 <BIO_s_file@plt>:
  4152b0:	jmpq   *0x2622fa(%rip)        # 6775b0 <_fini+0x21a0ac>
  4152b6:	pushq  $0x2b3
  4152bb:	jmpq   412770 <_init+0x20>

00000000004152c0 <BIO_new_accept@plt>:
  4152c0:	jmpq   *0x2622f2(%rip)        # 6775b8 <_fini+0x21a0b4>
  4152c6:	pushq  $0x2b4
  4152cb:	jmpq   412770 <_init+0x20>

00000000004152d0 <EVP_PKEY_asn1_find@plt>:
  4152d0:	jmpq   *0x2622ea(%rip)        # 6775c0 <_fini+0x21a0bc>
  4152d6:	pushq  $0x2b5
  4152db:	jmpq   412770 <_init+0x20>

00000000004152e0 <CMS_digest_verify@plt>:
  4152e0:	jmpq   *0x2622e2(%rip)        # 6775c8 <_fini+0x21a0c4>
  4152e6:	pushq  $0x2b6
  4152eb:	jmpq   412770 <_init+0x20>

00000000004152f0 <EC_KEY_get0_group@plt>:
  4152f0:	jmpq   *0x2622da(%rip)        # 6775d0 <_fini+0x21a0cc>
  4152f6:	pushq  $0x2b7
  4152fb:	jmpq   412770 <_init+0x20>

0000000000415300 <CRYPTO_gcm128_setiv@plt>:
  415300:	jmpq   *0x2622d2(%rip)        # 6775d8 <_fini+0x21a0d4>
  415306:	pushq  $0x2b8
  41530b:	jmpq   412770 <_init+0x20>

0000000000415310 <X509_REQ_sign_ctx@plt>:
  415310:	jmpq   *0x2622ca(%rip)        # 6775e0 <_fini+0x21a0dc>
  415316:	pushq  $0x2b9
  41531b:	jmpq   412770 <_init+0x20>

0000000000415320 <malloc@plt>:
  415320:	jmpq   *0x2622c2(%rip)        # 6775e8 <_fini+0x21a0e4>
  415326:	pushq  $0x2ba
  41532b:	jmpq   412770 <_init+0x20>

0000000000415330 <RAND_egd@plt>:
  415330:	jmpq   *0x2622ba(%rip)        # 6775f0 <_fini+0x21a0ec>
  415336:	pushq  $0x2bb
  41533b:	jmpq   412770 <_init+0x20>

0000000000415340 <X509_NAME_delete_entry@plt>:
  415340:	jmpq   *0x2622b2(%rip)        # 6775f8 <_fini+0x21a0f4>
  415346:	pushq  $0x2bc
  41534b:	jmpq   412770 <_init+0x20>

0000000000415350 <EVP_EncryptUpdate@plt>:
  415350:	jmpq   *0x2622aa(%rip)        # 677600 <_fini+0x21a0fc>
  415356:	pushq  $0x2bd
  41535b:	jmpq   412770 <_init+0x20>

0000000000415360 <RAND_bytes@plt>:
  415360:	jmpq   *0x2622a2(%rip)        # 677608 <_fini+0x21a104>
  415366:	pushq  $0x2be
  41536b:	jmpq   412770 <_init+0x20>

0000000000415370 <EVP_PKEY_bits@plt>:
  415370:	jmpq   *0x26229a(%rip)        # 677610 <_fini+0x21a10c>
  415376:	pushq  $0x2bf
  41537b:	jmpq   412770 <_init+0x20>

0000000000415380 <PEM_read_bio_DSAparams@plt>:
  415380:	jmpq   *0x262292(%rip)        # 677618 <_fini+0x21a114>
  415386:	pushq  $0x2c0
  41538b:	jmpq   412770 <_init+0x20>

0000000000415390 <X509_keyid_set1@plt>:
  415390:	jmpq   *0x26228a(%rip)        # 677620 <_fini+0x21a11c>
  415396:	pushq  $0x2c1
  41539b:	jmpq   412770 <_init+0x20>

00000000004153a0 <X509_free@plt>:
  4153a0:	jmpq   *0x262282(%rip)        # 677628 <_fini+0x21a124>
  4153a6:	pushq  $0x2c2
  4153ab:	jmpq   412770 <_init+0x20>

00000000004153b0 <SSL_alert_type_string_long@plt>:
  4153b0:	jmpq   *0x26227a(%rip)        # 677630 <_fini+0x21a12c>
  4153b6:	pushq  $0x2c3
  4153bb:	jmpq   412770 <_init+0x20>

00000000004153c0 <PKCS7_sign_add_signer@plt>:
  4153c0:	jmpq   *0x262272(%rip)        # 677638 <_fini+0x21a134>
  4153c6:	pushq  $0x2c4
  4153cb:	jmpq   412770 <_init+0x20>

00000000004153d0 <HMAC@plt>:
  4153d0:	jmpq   *0x26226a(%rip)        # 677640 <_fini+0x21a13c>
  4153d6:	pushq  $0x2c5
  4153db:	jmpq   412770 <_init+0x20>

00000000004153e0 <EVP_PKEY_CTX_get_keygen_info@plt>:
  4153e0:	jmpq   *0x262262(%rip)        # 677648 <_fini+0x21a144>
  4153e6:	pushq  $0x2c6
  4153eb:	jmpq   412770 <_init+0x20>

00000000004153f0 <pipe@plt>:
  4153f0:	jmpq   *0x26225a(%rip)        # 677650 <_fini+0x21a14c>
  4153f6:	pushq  $0x2c7
  4153fb:	jmpq   412770 <_init+0x20>

0000000000415400 <X509_get_ext@plt>:
  415400:	jmpq   *0x262252(%rip)        # 677658 <_fini+0x21a154>
  415406:	pushq  $0x2c8
  41540b:	jmpq   412770 <_init+0x20>

0000000000415410 <SSL_CIPHER_get_name@plt>:
  415410:	jmpq   *0x26224a(%rip)        # 677660 <_fini+0x21a15c>
  415416:	pushq  $0x2c9
  41541b:	jmpq   412770 <_init+0x20>

0000000000415420 <PEM_read_bio_CMS@plt>:
  415420:	jmpq   *0x262242(%rip)        # 677668 <_fini+0x21a164>
  415426:	pushq  $0x2ca
  41542b:	jmpq   412770 <_init+0x20>

0000000000415430 <OPENSSL_load_builtin_modules@plt>:
  415430:	jmpq   *0x26223a(%rip)        # 677670 <_fini+0x21a16c>
  415436:	pushq  $0x2cb
  41543b:	jmpq   412770 <_init+0x20>

0000000000415440 <TXT_DB_free@plt>:
  415440:	jmpq   *0x262232(%rip)        # 677678 <_fini+0x21a174>
  415446:	pushq  $0x2cc
  41544b:	jmpq   412770 <_init+0x20>

0000000000415450 <UI_get0_user_data@plt>:
  415450:	jmpq   *0x26222a(%rip)        # 677680 <_fini+0x21a17c>
  415456:	pushq  $0x2cd
  41545b:	jmpq   412770 <_init+0x20>

0000000000415460 <shutdown@plt>:
  415460:	jmpq   *0x262222(%rip)        # 677688 <_fini+0x21a184>
  415466:	pushq  $0x2ce
  41546b:	jmpq   412770 <_init+0x20>

0000000000415470 <CMS_get0_SignerInfos@plt>:
  415470:	jmpq   *0x26221a(%rip)        # 677690 <_fini+0x21a18c>
  415476:	pushq  $0x2cf
  41547b:	jmpq   412770 <_init+0x20>

0000000000415480 <PKCS7_get0_signers@plt>:
  415480:	jmpq   *0x262212(%rip)        # 677698 <_fini+0x21a194>
  415486:	pushq  $0x2d0
  41548b:	jmpq   412770 <_init+0x20>

0000000000415490 <X509V3_add_value@plt>:
  415490:	jmpq   *0x26220a(%rip)        # 6776a0 <_fini+0x21a19c>
  415496:	pushq  $0x2d1
  41549b:	jmpq   412770 <_init+0x20>

00000000004154a0 <X509_REQ_free@plt>:
  4154a0:	jmpq   *0x262202(%rip)        # 6776a8 <_fini+0x21a1a4>
  4154a6:	pushq  $0x2d2
  4154ab:	jmpq   412770 <_init+0x20>

00000000004154b0 <EC_GROUP_set_seed@plt>:
  4154b0:	jmpq   *0x2621fa(%rip)        # 6776b0 <_fini+0x21a1ac>
  4154b6:	pushq  $0x2d3
  4154bb:	jmpq   412770 <_init+0x20>

00000000004154c0 <PEM_read_bio_X509_AUX@plt>:
  4154c0:	jmpq   *0x2621f2(%rip)        # 6776b8 <_fini+0x21a1b4>
  4154c6:	pushq  $0x2d4
  4154cb:	jmpq   412770 <_init+0x20>

00000000004154d0 <UI_method_get_writer@plt>:
  4154d0:	jmpq   *0x2621ea(%rip)        # 6776c0 <_fini+0x21a1bc>
  4154d6:	pushq  $0x2d5
  4154db:	jmpq   412770 <_init+0x20>

00000000004154e0 <X509_get_ext_by_OBJ@plt>:
  4154e0:	jmpq   *0x2621e2(%rip)        # 6776c8 <_fini+0x21a1c4>
  4154e6:	pushq  $0x2d6
  4154eb:	jmpq   412770 <_init+0x20>

00000000004154f0 <gai_strerror@plt>:
  4154f0:	jmpq   *0x2621da(%rip)        # 6776d0 <_fini+0x21a1cc>
  4154f6:	pushq  $0x2d7
  4154fb:	jmpq   412770 <_init+0x20>

0000000000415500 <PKCS12_parse@plt>:
  415500:	jmpq   *0x2621d2(%rip)        # 6776d8 <_fini+0x21a1d4>
  415506:	pushq  $0x2d8
  41550b:	jmpq   412770 <_init+0x20>

0000000000415510 <SSL_connect@plt>:
  415510:	jmpq   *0x2621ca(%rip)        # 6776e0 <_fini+0x21a1dc>
  415516:	pushq  $0x2d9
  41551b:	jmpq   412770 <_init+0x20>

0000000000415520 <ASN1_d2i_bio@plt>:
  415520:	jmpq   *0x2621c2(%rip)        # 6776e8 <_fini+0x21a1e4>
  415526:	pushq  $0x2da
  41552b:	jmpq   412770 <_init+0x20>

0000000000415530 <EVP_PKEY_CTX_new_id@plt>:
  415530:	jmpq   *0x2621ba(%rip)        # 6776f0 <_fini+0x21a1ec>
  415536:	pushq  $0x2db
  41553b:	jmpq   412770 <_init+0x20>

0000000000415540 <ERR_print_errors_fp@plt>:
  415540:	jmpq   *0x2621b2(%rip)        # 6776f8 <_fini+0x21a1f4>
  415546:	pushq  $0x2dc
  41554b:	jmpq   412770 <_init+0x20>

0000000000415550 <d2i_CMS_bio@plt>:
  415550:	jmpq   *0x2621aa(%rip)        # 677700 <_fini+0x21a1fc>
  415556:	pushq  $0x2dd
  41555b:	jmpq   412770 <_init+0x20>

0000000000415560 <RAND_pseudo_bytes@plt>:
  415560:	jmpq   *0x2621a2(%rip)        # 677708 <_fini+0x21a204>
  415566:	pushq  $0x2de
  41556b:	jmpq   412770 <_init+0x20>

0000000000415570 <putchar@plt>:
  415570:	jmpq   *0x26219a(%rip)        # 677710 <_fini+0x21a20c>
  415576:	pushq  $0x2df
  41557b:	jmpq   412770 <_init+0x20>

0000000000415580 <X509_NAME_entry_count@plt>:
  415580:	jmpq   *0x262192(%rip)        # 677718 <_fini+0x21a214>
  415586:	pushq  $0x2e0
  41558b:	jmpq   412770 <_init+0x20>

0000000000415590 <BIO_socket_ioctl@plt>:
  415590:	jmpq   *0x26218a(%rip)        # 677720 <_fini+0x21a21c>
  415596:	pushq  $0x2e1
  41559b:	jmpq   412770 <_init+0x20>

00000000004155a0 <X509V3_set_nconf@plt>:
  4155a0:	jmpq   *0x262182(%rip)        # 677728 <_fini+0x21a224>
  4155a6:	pushq  $0x2e2
  4155ab:	jmpq   412770 <_init+0x20>

00000000004155b0 <ASN1_TIME_free@plt>:
  4155b0:	jmpq   *0x26217a(%rip)        # 677730 <_fini+0x21a22c>
  4155b6:	pushq  $0x2e3
  4155bb:	jmpq   412770 <_init+0x20>

00000000004155c0 <strcmp@plt>:
  4155c0:	jmpq   *0x262172(%rip)        # 677738 <_fini+0x21a234>
  4155c6:	pushq  $0x2e4
  4155cb:	jmpq   412770 <_init+0x20>

00000000004155d0 <strtol@plt>:
  4155d0:	jmpq   *0x26216a(%rip)        # 677740 <_fini+0x21a23c>
  4155d6:	pushq  $0x2e5
  4155db:	jmpq   412770 <_init+0x20>

00000000004155e0 <PKCS7_final@plt>:
  4155e0:	jmpq   *0x262162(%rip)        # 677748 <_fini+0x21a244>
  4155e6:	pushq  $0x2e6
  4155eb:	jmpq   412770 <_init+0x20>

00000000004155f0 <GENERAL_NAMES_free@plt>:
  4155f0:	jmpq   *0x26215a(%rip)        # 677750 <_fini+0x21a24c>
  4155f6:	pushq  $0x2e7
  4155fb:	jmpq   412770 <_init+0x20>

0000000000415600 <SSL_CIPHER_get_id@plt>:
  415600:	jmpq   *0x262152(%rip)        # 677758 <_fini+0x21a254>
  415606:	pushq  $0x2e8
  41560b:	jmpq   412770 <_init+0x20>

0000000000415610 <RC2_cbc_encrypt@plt>:
  415610:	jmpq   *0x26214a(%rip)        # 677760 <_fini+0x21a25c>
  415616:	pushq  $0x2e9
  41561b:	jmpq   412770 <_init+0x20>

0000000000415620 <AES_ige_encrypt@plt>:
  415620:	jmpq   *0x262142(%rip)        # 677768 <_fini+0x21a264>
  415626:	pushq  $0x2ea
  41562b:	jmpq   412770 <_init+0x20>

0000000000415630 <BUF_strdup@plt>:
  415630:	jmpq   *0x26213a(%rip)        # 677770 <_fini+0x21a26c>
  415636:	pushq  $0x2eb
  41563b:	jmpq   412770 <_init+0x20>

0000000000415640 <EVP_DigestFinal@plt>:
  415640:	jmpq   *0x262132(%rip)        # 677778 <_fini+0x21a274>
  415646:	pushq  $0x2ec
  41564b:	jmpq   412770 <_init+0x20>

0000000000415650 <CMS_add1_signer@plt>:
  415650:	jmpq   *0x26212a(%rip)        # 677780 <_fini+0x21a27c>
  415656:	pushq  $0x2ed
  41565b:	jmpq   412770 <_init+0x20>

0000000000415660 <TXT_DB_read@plt>:
  415660:	jmpq   *0x262122(%rip)        # 677788 <_fini+0x21a284>
  415666:	pushq  $0x2ee
  41566b:	jmpq   412770 <_init+0x20>

0000000000415670 <CMS_encrypt@plt>:
  415670:	jmpq   *0x26211a(%rip)        # 677790 <_fini+0x21a28c>
  415676:	pushq  $0x2ef
  41567b:	jmpq   412770 <_init+0x20>

0000000000415680 <NETSCAPE_SPKI_b64_encode@plt>:
  415680:	jmpq   *0x262112(%rip)        # 677798 <_fini+0x21a294>
  415686:	pushq  $0x2f0
  41568b:	jmpq   412770 <_init+0x20>

0000000000415690 <X509_verify_cert_error_string@plt>:
  415690:	jmpq   *0x26210a(%rip)        # 6777a0 <_fini+0x21a29c>
  415696:	pushq  $0x2f1
  41569b:	jmpq   412770 <_init+0x20>

00000000004156a0 <OCSP_basic_add1_status@plt>:
  4156a0:	jmpq   *0x262102(%rip)        # 6777a8 <_fini+0x21a2a4>
  4156a6:	pushq  $0x2f2
  4156ab:	jmpq   412770 <_init+0x20>

00000000004156b0 <read@plt>:
  4156b0:	jmpq   *0x2620fa(%rip)        # 6777b0 <_fini+0x21a2ac>
  4156b6:	pushq  $0x2f3
  4156bb:	jmpq   412770 <_init+0x20>

00000000004156c0 <i2d_PrivateKey_bio@plt>:
  4156c0:	jmpq   *0x2620f2(%rip)        # 6777b8 <_fini+0x21a2b4>
  4156c6:	pushq  $0x2f4
  4156cb:	jmpq   412770 <_init+0x20>

00000000004156d0 <sk_num@plt>:
  4156d0:	jmpq   *0x2620ea(%rip)        # 6777c0 <_fini+0x21a2bc>
  4156d6:	pushq  $0x2f5
  4156db:	jmpq   412770 <_init+0x20>

00000000004156e0 <X509_NAME_new@plt>:
  4156e0:	jmpq   *0x2620e2(%rip)        # 6777c8 <_fini+0x21a2c4>
  4156e6:	pushq  $0x2f6
  4156eb:	jmpq   412770 <_init+0x20>

00000000004156f0 <EVP_PKEY_set1_RSA@plt>:
  4156f0:	jmpq   *0x2620da(%rip)        # 6777d0 <_fini+0x21a2cc>
  4156f6:	pushq  $0x2f7
  4156fb:	jmpq   412770 <_init+0x20>

0000000000415700 <SSL_get_client_CA_list@plt>:
  415700:	jmpq   *0x2620d2(%rip)        # 6777d8 <_fini+0x21a2d4>
  415706:	pushq  $0x2f8
  41570b:	jmpq   412770 <_init+0x20>

0000000000415710 <X509_NAME_add_entry_by_txt@plt>:
  415710:	jmpq   *0x2620ca(%rip)        # 6777e0 <_fini+0x21a2dc>
  415716:	pushq  $0x2f9
  41571b:	jmpq   412770 <_init+0x20>

0000000000415720 <X509_NAME_print_ex_fp@plt>:
  415720:	jmpq   *0x2620c2(%rip)        # 6777e8 <_fini+0x21a2e4>
  415726:	pushq  $0x2fa
  41572b:	jmpq   412770 <_init+0x20>

0000000000415730 <SSLv23_client_method@plt>:
  415730:	jmpq   *0x2620ba(%rip)        # 6777f0 <_fini+0x21a2ec>
  415736:	pushq  $0x2fb
  41573b:	jmpq   412770 <_init+0x20>

0000000000415740 <X509_NAME_get_index_by_OBJ@plt>:
  415740:	jmpq   *0x2620b2(%rip)        # 6777f8 <_fini+0x21a2f4>
  415746:	pushq  $0x2fc
  41574b:	jmpq   412770 <_init+0x20>

0000000000415750 <RSA_public_decrypt@plt>:
  415750:	jmpq   *0x2620aa(%rip)        # 677800 <_fini+0x21a2fc>
  415756:	pushq  $0x2fd
  41575b:	jmpq   412770 <_init+0x20>

0000000000415760 <CMS_data@plt>:
  415760:	jmpq   *0x2620a2(%rip)        # 677808 <_fini+0x21a304>
  415766:	pushq  $0x2fe
  41576b:	jmpq   412770 <_init+0x20>

0000000000415770 <i2d_PKCS7_bio@plt>:
  415770:	jmpq   *0x26209a(%rip)        # 677810 <_fini+0x21a30c>
  415776:	pushq  $0x2ff
  41577b:	jmpq   412770 <_init+0x20>

0000000000415780 <EVP_PKEY_decrypt@plt>:
  415780:	jmpq   *0x262092(%rip)        # 677818 <_fini+0x21a314>
  415786:	pushq  $0x300
  41578b:	jmpq   412770 <_init+0x20>

0000000000415790 <SSL_state_string_long@plt>:
  415790:	jmpq   *0x26208a(%rip)        # 677820 <_fini+0x21a31c>
  415796:	pushq  $0x301
  41579b:	jmpq   412770 <_init+0x20>

00000000004157a0 <NETSCAPE_SPKI_set_pubkey@plt>:
  4157a0:	jmpq   *0x262082(%rip)        # 677828 <_fini+0x21a324>
  4157a6:	pushq  $0x302
  4157ab:	jmpq   412770 <_init+0x20>

00000000004157b0 <ASN1_ENUMERATED_set@plt>:
  4157b0:	jmpq   *0x26207a(%rip)        # 677830 <_fini+0x21a32c>
  4157b6:	pushq  $0x303
  4157bb:	jmpq   412770 <_init+0x20>

00000000004157c0 <DES_options@plt>:
  4157c0:	jmpq   *0x262072(%rip)        # 677838 <_fini+0x21a334>
  4157c6:	pushq  $0x304
  4157cb:	jmpq   412770 <_init+0x20>

00000000004157d0 <PEM_write_bio_EC_PUBKEY@plt>:
  4157d0:	jmpq   *0x26206a(%rip)        # 677840 <_fini+0x21a33c>
  4157d6:	pushq  $0x305
  4157db:	jmpq   412770 <_init+0x20>

00000000004157e0 <EC_KEY_print@plt>:
  4157e0:	jmpq   *0x262062(%rip)        # 677848 <_fini+0x21a344>
  4157e6:	pushq  $0x306
  4157eb:	jmpq   412770 <_init+0x20>

00000000004157f0 <SSL_CTX_set_client_CA_list@plt>:
  4157f0:	jmpq   *0x26205a(%rip)        # 677850 <_fini+0x21a34c>
  4157f6:	pushq  $0x307
  4157fb:	jmpq   412770 <_init+0x20>

0000000000415800 <X509_add1_trust_object@plt>:
  415800:	jmpq   *0x262052(%rip)        # 677858 <_fini+0x21a354>
  415806:	pushq  $0x308
  41580b:	jmpq   412770 <_init+0x20>

0000000000415810 <BN_num_bits@plt>:
  415810:	jmpq   *0x26204a(%rip)        # 677860 <_fini+0x21a35c>
  415816:	pushq  $0x309
  41581b:	jmpq   412770 <_init+0x20>

0000000000415820 <CMS_add1_ReceiptRequest@plt>:
  415820:	jmpq   *0x262042(%rip)        # 677868 <_fini+0x21a364>
  415826:	pushq  $0x30a
  41582b:	jmpq   412770 <_init+0x20>

0000000000415830 <RAND_cleanup@plt>:
  415830:	jmpq   *0x26203a(%rip)        # 677870 <_fini+0x21a36c>
  415836:	pushq  $0x30b
  41583b:	jmpq   412770 <_init+0x20>

0000000000415840 <b2i_PrivateKey_bio@plt>:
  415840:	jmpq   *0x262032(%rip)        # 677878 <_fini+0x21a374>
  415846:	pushq  $0x30c
  41584b:	jmpq   412770 <_init+0x20>

0000000000415850 <sk_shift@plt>:
  415850:	jmpq   *0x26202a(%rip)        # 677880 <_fini+0x21a37c>
  415856:	pushq  $0x30d
  41585b:	jmpq   412770 <_init+0x20>

0000000000415860 <RSA_print@plt>:
  415860:	jmpq   *0x262022(%rip)        # 677888 <_fini+0x21a384>
  415866:	pushq  $0x30e
  41586b:	jmpq   412770 <_init+0x20>

0000000000415870 <CMS_data_create@plt>:
  415870:	jmpq   *0x26201a(%rip)        # 677890 <_fini+0x21a38c>
  415876:	pushq  $0x30f
  41587b:	jmpq   412770 <_init+0x20>

0000000000415880 <ENGINE_get_next@plt>:
  415880:	jmpq   *0x262012(%rip)        # 677898 <_fini+0x21a394>
  415886:	pushq  $0x310
  41588b:	jmpq   412770 <_init+0x20>

0000000000415890 <SSL_load_client_CA_file@plt>:
  415890:	jmpq   *0x26200a(%rip)        # 6778a0 <_fini+0x21a39c>
  415896:	pushq  $0x311
  41589b:	jmpq   412770 <_init+0x20>

00000000004158a0 <PKCS7_decrypt@plt>:
  4158a0:	jmpq   *0x262002(%rip)        # 6778a8 <_fini+0x21a3a4>
  4158a6:	pushq  $0x312
  4158ab:	jmpq   412770 <_init+0x20>

00000000004158b0 <BIO_number_written@plt>:
  4158b0:	jmpq   *0x261ffa(%rip)        # 6778b0 <_fini+0x21a3ac>
  4158b6:	pushq  $0x313
  4158bb:	jmpq   412770 <_init+0x20>

00000000004158c0 <DES_crypt@plt>:
  4158c0:	jmpq   *0x261ff2(%rip)        # 6778b8 <_fini+0x21a3b4>
  4158c6:	pushq  $0x314
  4158cb:	jmpq   412770 <_init+0x20>

00000000004158d0 <FIPS_mode_set@plt>:
  4158d0:	jmpq   *0x261fea(%rip)        # 6778c0 <_fini+0x21a3bc>
  4158d6:	pushq  $0x315
  4158db:	jmpq   412770 <_init+0x20>

00000000004158e0 <d2i_ECPrivateKey_bio@plt>:
  4158e0:	jmpq   *0x261fe2(%rip)        # 6778c8 <_fini+0x21a3c4>
  4158e6:	pushq  $0x316
  4158eb:	jmpq   412770 <_init+0x20>

00000000004158f0 <TS_RESP_free@plt>:
  4158f0:	jmpq   *0x261fda(%rip)        # 6778d0 <_fini+0x21a3cc>
  4158f6:	pushq  $0x317
  4158fb:	jmpq   412770 <_init+0x20>

0000000000415900 <X509_policy_tree_get0_policies@plt>:
  415900:	jmpq   *0x261fd2(%rip)        # 6778d8 <_fini+0x21a3d4>
  415906:	pushq  $0x318
  41590b:	jmpq   412770 <_init+0x20>

0000000000415910 <PEM_write_bio_Parameters@plt>:
  415910:	jmpq   *0x261fca(%rip)        # 6778e0 <_fini+0x21a3dc>
  415916:	pushq  $0x319
  41591b:	jmpq   412770 <_init+0x20>

0000000000415920 <PKCS7_sign@plt>:
  415920:	jmpq   *0x261fc2(%rip)        # 6778e8 <_fini+0x21a3e4>
  415926:	pushq  $0x31a
  41592b:	jmpq   412770 <_init+0x20>

0000000000415930 <EVP_CIPHER_CTX_set_padding@plt>:
  415930:	jmpq   *0x261fba(%rip)        # 6778f0 <_fini+0x21a3ec>
  415936:	pushq  $0x31b
  41593b:	jmpq   412770 <_init+0x20>

0000000000415940 <TS_STATUS_INFO_free@plt>:
  415940:	jmpq   *0x261fb2(%rip)        # 6778f8 <_fini+0x21a3f4>
  415946:	pushq  $0x31c
  41594b:	jmpq   412770 <_init+0x20>

0000000000415950 <OBJ_nid2obj@plt>:
  415950:	jmpq   *0x261faa(%rip)        # 677900 <_fini+0x21a3fc>
  415956:	pushq  $0x31d
  41595b:	jmpq   412770 <_init+0x20>

0000000000415960 <dup@plt>:
  415960:	jmpq   *0x261fa2(%rip)        # 677908 <_fini+0x21a404>
  415966:	pushq  $0x31e
  41596b:	jmpq   412770 <_init+0x20>

0000000000415970 <SSL_state@plt>:
  415970:	jmpq   *0x261f9a(%rip)        # 677910 <_fini+0x21a40c>
  415976:	pushq  $0x31f
  41597b:	jmpq   412770 <_init+0x20>

0000000000415980 <lh_new@plt>:
  415980:	jmpq   *0x261f92(%rip)        # 677918 <_fini+0x21a414>
  415986:	pushq  $0x320
  41598b:	jmpq   412770 <_init+0x20>

0000000000415990 <SSL_get_rbio@plt>:
  415990:	jmpq   *0x261f8a(%rip)        # 677920 <_fini+0x21a41c>
  415996:	pushq  $0x321
  41599b:	jmpq   412770 <_init+0x20>

00000000004159a0 <ASN1_UNIVERSALSTRING_to_string@plt>:
  4159a0:	jmpq   *0x261f82(%rip)        # 677928 <_fini+0x21a424>
  4159a6:	pushq  $0x322
  4159ab:	jmpq   412770 <_init+0x20>

00000000004159b0 <BN_options@plt>:
  4159b0:	jmpq   *0x261f7a(%rip)        # 677930 <_fini+0x21a42c>
  4159b6:	pushq  $0x323
  4159bb:	jmpq   412770 <_init+0x20>

00000000004159c0 <X509_set_issuer_name@plt>:
  4159c0:	jmpq   *0x261f72(%rip)        # 677938 <_fini+0x21a434>
  4159c6:	pushq  $0x324
  4159cb:	jmpq   412770 <_init+0x20>

00000000004159d0 <DSA_free@plt>:
  4159d0:	jmpq   *0x261f6a(%rip)        # 677940 <_fini+0x21a43c>
  4159d6:	pushq  $0x325
  4159db:	jmpq   412770 <_init+0x20>

00000000004159e0 <X509_STORE_set1_param@plt>:
  4159e0:	jmpq   *0x261f62(%rip)        # 677948 <_fini+0x21a444>
  4159e6:	pushq  $0x326
  4159eb:	jmpq   412770 <_init+0x20>

00000000004159f0 <BIO_s_null@plt>:
  4159f0:	jmpq   *0x261f5a(%rip)        # 677950 <_fini+0x21a44c>
  4159f6:	pushq  $0x327
  4159fb:	jmpq   412770 <_init+0x20>

0000000000415a00 <SSL_CTX_set_next_protos_advertised_cb@plt>:
  415a00:	jmpq   *0x261f52(%rip)        # 677958 <_fini+0x21a454>
  415a06:	pushq  $0x328
  415a0b:	jmpq   412770 <_init+0x20>

0000000000415a10 <PEM_read_bio_PrivateKey@plt>:
  415a10:	jmpq   *0x261f4a(%rip)        # 677960 <_fini+0x21a45c>
  415a16:	pushq  $0x329
  415a1b:	jmpq   412770 <_init+0x20>

0000000000415a20 <PEM_read_bio_EC_PUBKEY@plt>:
  415a20:	jmpq   *0x261f42(%rip)        # 677968 <_fini+0x21a464>
  415a26:	pushq  $0x32a
  415a2b:	jmpq   412770 <_init+0x20>

0000000000415a30 <SSL_CIPHER_description@plt>:
  415a30:	jmpq   *0x261f3a(%rip)        # 677970 <_fini+0x21a46c>
  415a36:	pushq  $0x32b
  415a3b:	jmpq   412770 <_init+0x20>

0000000000415a40 <puts@plt>:
  415a40:	jmpq   *0x261f32(%rip)        # 677978 <_fini+0x21a474>
  415a46:	pushq  $0x32c
  415a4b:	jmpq   412770 <_init+0x20>

0000000000415a50 <OCSP_basic_verify@plt>:
  415a50:	jmpq   *0x261f2a(%rip)        # 677980 <_fini+0x21a47c>
  415a56:	pushq  $0x32d
  415a5b:	jmpq   412770 <_init+0x20>

0000000000415a60 <ASN1_INTEGER_get@plt>:
  415a60:	jmpq   *0x261f22(%rip)        # 677988 <_fini+0x21a484>
  415a66:	pushq  $0x32e
  415a6b:	jmpq   412770 <_init+0x20>

0000000000415a70 <EC_GROUP_get_curve_GFp@plt>:
  415a70:	jmpq   *0x261f1a(%rip)        # 677990 <_fini+0x21a48c>
  415a76:	pushq  $0x32f
  415a7b:	jmpq   412770 <_init+0x20>

0000000000415a80 <OCSP_id_get0_info@plt>:
  415a80:	jmpq   *0x261f12(%rip)        # 677998 <_fini+0x21a494>
  415a86:	pushq  $0x330
  415a8b:	jmpq   412770 <_init+0x20>

0000000000415a90 <CMS_get1_certs@plt>:
  415a90:	jmpq   *0x261f0a(%rip)        # 6779a0 <_fini+0x21a49c>
  415a96:	pushq  $0x331
  415a9b:	jmpq   412770 <_init+0x20>

0000000000415aa0 <TS_MSG_IMPRINT_set_algo@plt>:
  415aa0:	jmpq   *0x261f02(%rip)        # 6779a8 <_fini+0x21a4a4>
  415aa6:	pushq  $0x332
  415aab:	jmpq   412770 <_init+0x20>

0000000000415ab0 <PKCS12_unpack_authsafes@plt>:
  415ab0:	jmpq   *0x261efa(%rip)        # 6779b0 <_fini+0x21a4ac>
  415ab6:	pushq  $0x333
  415abb:	jmpq   412770 <_init+0x20>

0000000000415ac0 <BIO_push@plt>:
  415ac0:	jmpq   *0x261ef2(%rip)        # 6779b8 <_fini+0x21a4b4>
  415ac6:	pushq  $0x334
  415acb:	jmpq   412770 <_init+0x20>

0000000000415ad0 <i2d_DSAPrivateKey_bio@plt>:
  415ad0:	jmpq   *0x261eea(%rip)        # 6779c0 <_fini+0x21a4bc>
  415ad6:	pushq  $0x335
  415adb:	jmpq   412770 <_init+0x20>

0000000000415ae0 <X509_CRL_add1_ext_i2d@plt>:
  415ae0:	jmpq   *0x261ee2(%rip)        # 6779c8 <_fini+0x21a4c4>
  415ae6:	pushq  $0x336
  415aeb:	jmpq   412770 <_init+0x20>

0000000000415af0 <fgets@plt>:
  415af0:	jmpq   *0x261eda(%rip)        # 6779d0 <_fini+0x21a4cc>
  415af6:	pushq  $0x337
  415afb:	jmpq   412770 <_init+0x20>

0000000000415b00 <CONF_free@plt>:
  415b00:	jmpq   *0x261ed2(%rip)        # 6779d8 <_fini+0x21a4d4>
  415b06:	pushq  $0x338
  415b0b:	jmpq   412770 <_init+0x20>

0000000000415b10 <CMS_ReceiptRequest_create0@plt>:
  415b10:	jmpq   *0x261eca(%rip)        # 6779e0 <_fini+0x21a4dc>
  415b16:	pushq  $0x339
  415b1b:	jmpq   412770 <_init+0x20>

0000000000415b20 <PKCS8_encrypt@plt>:
  415b20:	jmpq   *0x261ec2(%rip)        # 6779e8 <_fini+0x21a4e4>
  415b26:	pushq  $0x33a
  415b2b:	jmpq   412770 <_init+0x20>

0000000000415b30 <OBJ_nid2sn@plt>:
  415b30:	jmpq   *0x261eba(%rip)        # 6779f0 <_fini+0x21a4ec>
  415b36:	pushq  $0x33b
  415b3b:	jmpq   412770 <_init+0x20>

0000000000415b40 <d2i_X509_CRL_bio@plt>:
  415b40:	jmpq   *0x261eb2(%rip)        # 6779f8 <_fini+0x21a4f4>
  415b46:	pushq  $0x33c
  415b4b:	jmpq   412770 <_init+0x20>

0000000000415b50 <ENGINE_get_pkey_meths@plt>:
  415b50:	jmpq   *0x261eaa(%rip)        # 677a00 <_fini+0x21a4fc>
  415b56:	pushq  $0x33d
  415b5b:	jmpq   412770 <_init+0x20>

0000000000415b60 <PEM_read_bio_PKCS7@plt>:
  415b60:	jmpq   *0x261ea2(%rip)        # 677a08 <_fini+0x21a504>
  415b66:	pushq  $0x33e
  415b6b:	jmpq   412770 <_init+0x20>

0000000000415b70 <BIO_int_ctrl@plt>:
  415b70:	jmpq   *0x261e9a(%rip)        # 677a10 <_fini+0x21a50c>
  415b76:	pushq  $0x33f
  415b7b:	jmpq   412770 <_init+0x20>

0000000000415b80 <PKCS7_SIGNED_new@plt>:
  415b80:	jmpq   *0x261e92(%rip)        # 677a18 <_fini+0x21a514>
  415b86:	pushq  $0x340
  415b8b:	jmpq   412770 <_init+0x20>

0000000000415b90 <X509_LOOKUP_hash_dir@plt>:
  415b90:	jmpq   *0x261e8a(%rip)        # 677a20 <_fini+0x21a51c>
  415b96:	pushq  $0x341
  415b9b:	jmpq   412770 <_init+0x20>

0000000000415ba0 <X509_CRL_set_issuer_name@plt>:
  415ba0:	jmpq   *0x261e82(%rip)        # 677a28 <_fini+0x21a524>
  415ba6:	pushq  $0x342
  415bab:	jmpq   412770 <_init+0x20>

0000000000415bb0 <NETSCAPE_SPKI_new@plt>:
  415bb0:	jmpq   *0x261e7a(%rip)        # 677a30 <_fini+0x21a52c>
  415bb6:	pushq  $0x343
  415bbb:	jmpq   412770 <_init+0x20>

0000000000415bc0 <GENERAL_NAMES_new@plt>:
  415bc0:	jmpq   *0x261e72(%rip)        # 677a38 <_fini+0x21a534>
  415bc6:	pushq  $0x344
  415bcb:	jmpq   412770 <_init+0x20>

0000000000415bd0 <TS_REQ_set_msg_imprint@plt>:
  415bd0:	jmpq   *0x261e6a(%rip)        # 677a40 <_fini+0x21a53c>
  415bd6:	pushq  $0x345
  415bdb:	jmpq   412770 <_init+0x20>

0000000000415be0 <idea_options@plt>:
  415be0:	jmpq   *0x261e62(%rip)        # 677a48 <_fini+0x21a544>
  415be6:	pushq  $0x346
  415beb:	jmpq   412770 <_init+0x20>

0000000000415bf0 <EC_KEY_free@plt>:
  415bf0:	jmpq   *0x261e5a(%rip)        # 677a50 <_fini+0x21a54c>
  415bf6:	pushq  $0x347
  415bfb:	jmpq   412770 <_init+0x20>

0000000000415c00 <EVP_PKEY_CTX_set_cb@plt>:
  415c00:	jmpq   *0x261e52(%rip)        # 677a58 <_fini+0x21a554>
  415c06:	pushq  $0x348
  415c0b:	jmpq   412770 <_init+0x20>

0000000000415c10 <__fdelt_chk@plt>:
  415c10:	jmpq   *0x261e4a(%rip)        # 677a60 <_fini+0x21a55c>
  415c16:	pushq  $0x349
  415c1b:	jmpq   412770 <_init+0x20>

0000000000415c20 <X509_REQ_set_pubkey@plt>:
  415c20:	jmpq   *0x261e42(%rip)        # 677a68 <_fini+0x21a564>
  415c26:	pushq  $0x34a
  415c2b:	jmpq   412770 <_init+0x20>

0000000000415c30 <BIO_test_flags@plt>:
  415c30:	jmpq   *0x261e3a(%rip)        # 677a70 <_fini+0x21a56c>
  415c36:	pushq  $0x34b
  415c3b:	jmpq   412770 <_init+0x20>

0000000000415c40 <EVP_DigestSignInit@plt>:
  415c40:	jmpq   *0x261e32(%rip)        # 677a78 <_fini+0x21a574>
  415c46:	pushq  $0x34c
  415c4b:	jmpq   412770 <_init+0x20>

0000000000415c50 <RSA_set_default_method@plt>:
  415c50:	jmpq   *0x261e2a(%rip)        # 677a80 <_fini+0x21a57c>
  415c56:	pushq  $0x34d
  415c5b:	jmpq   412770 <_init+0x20>

0000000000415c60 <SSL_get_SSL_CTX@plt>:
  415c60:	jmpq   *0x261e22(%rip)        # 677a88 <_fini+0x21a584>
  415c66:	pushq  $0x34e
  415c6b:	jmpq   412770 <_init+0x20>

0000000000415c70 <UI_method_get_reader@plt>:
  415c70:	jmpq   *0x261e1a(%rip)        # 677a90 <_fini+0x21a58c>
  415c76:	pushq  $0x34f
  415c7b:	jmpq   412770 <_init+0x20>

0000000000415c80 <OCSP_copy_nonce@plt>:
  415c80:	jmpq   *0x261e12(%rip)        # 677a98 <_fini+0x21a594>
  415c86:	pushq  $0x350
  415c8b:	jmpq   412770 <_init+0x20>

0000000000415c90 <SSL_version@plt>:
  415c90:	jmpq   *0x261e0a(%rip)        # 677aa0 <_fini+0x21a59c>
  415c96:	pushq  $0x351
  415c9b:	jmpq   412770 <_init+0x20>

0000000000415ca0 <RSA_sign@plt>:
  415ca0:	jmpq   *0x261e02(%rip)        # 677aa8 <_fini+0x21a5a4>
  415ca6:	pushq  $0x352
  415cab:	jmpq   412770 <_init+0x20>

0000000000415cb0 <SMIME_write_CMS@plt>:
  415cb0:	jmpq   *0x261dfa(%rip)        # 677ab0 <_fini+0x21a5ac>
  415cb6:	pushq  $0x353
  415cbb:	jmpq   412770 <_init+0x20>

0000000000415cc0 <X509_NAME_hash@plt>:
  415cc0:	jmpq   *0x261df2(%rip)        # 677ab8 <_fini+0x21a5b4>
  415cc6:	pushq  $0x354
  415ccb:	jmpq   412770 <_init+0x20>

0000000000415cd0 <i2d_X509_REQ_bio@plt>:
  415cd0:	jmpq   *0x261dea(%rip)        # 677ac0 <_fini+0x21a5bc>
  415cd6:	pushq  $0x355
  415cdb:	jmpq   412770 <_init+0x20>

0000000000415ce0 <SSL_CTX_set_session_id_context@plt>:
  415ce0:	jmpq   *0x261de2(%rip)        # 677ac8 <_fini+0x21a5c4>
  415ce6:	pushq  $0x356
  415ceb:	jmpq   412770 <_init+0x20>

0000000000415cf0 <SSLv2_server_method@plt>:
  415cf0:	jmpq   *0x261dda(%rip)        # 677ad0 <_fini+0x21a5cc>
  415cf6:	pushq  $0x357
  415cfb:	jmpq   412770 <_init+0x20>

0000000000415d00 <times@plt>:
  415d00:	jmpq   *0x261dd2(%rip)        # 677ad8 <_fini+0x21a5d4>
  415d06:	pushq  $0x358
  415d0b:	jmpq   412770 <_init+0x20>

0000000000415d10 <CMS_verify@plt>:
  415d10:	jmpq   *0x261dca(%rip)        # 677ae0 <_fini+0x21a5dc>
  415d16:	pushq  $0x359
  415d1b:	jmpq   412770 <_init+0x20>

0000000000415d20 <BIO_new_dgram@plt>:
  415d20:	jmpq   *0x261dc2(%rip)        # 677ae8 <_fini+0x21a5e4>
  415d26:	pushq  $0x35a
  415d2b:	jmpq   412770 <_init+0x20>

0000000000415d30 <EVP_BytesToKey@plt>:
  415d30:	jmpq   *0x261dba(%rip)        # 677af0 <_fini+0x21a5ec>
  415d36:	pushq  $0x35b
  415d3b:	jmpq   412770 <_init+0x20>

0000000000415d40 <EVP_PKEY_save_parameters@plt>:
  415d40:	jmpq   *0x261db2(%rip)        # 677af8 <_fini+0x21a5f4>
  415d46:	pushq  $0x35c
  415d4b:	jmpq   412770 <_init+0x20>

0000000000415d50 <SSL_callback_ctrl@plt>:
  415d50:	jmpq   *0x261daa(%rip)        # 677b00 <_fini+0x21a5fc>
  415d56:	pushq  $0x35d
  415d5b:	jmpq   412770 <_init+0x20>

0000000000415d60 <UI_set_result@plt>:
  415d60:	jmpq   *0x261da2(%rip)        # 677b08 <_fini+0x21a604>
  415d66:	pushq  $0x35e
  415d6b:	jmpq   412770 <_init+0x20>

0000000000415d70 <DSA_verify@plt>:
  415d70:	jmpq   *0x261d9a(%rip)        # 677b10 <_fini+0x21a60c>
  415d76:	pushq  $0x35f
  415d7b:	jmpq   412770 <_init+0x20>

0000000000415d80 <SSLeay_version@plt>:
  415d80:	jmpq   *0x261d92(%rip)        # 677b18 <_fini+0x21a614>
  415d86:	pushq  $0x360
  415d8b:	jmpq   412770 <_init+0x20>

0000000000415d90 <PEM_write_bio_ECPrivateKey@plt>:
  415d90:	jmpq   *0x261d8a(%rip)        # 677b20 <_fini+0x21a61c>
  415d96:	pushq  $0x361
  415d9b:	jmpq   412770 <_init+0x20>

0000000000415da0 <i2d_RSA_PUBKEY_bio@plt>:
  415da0:	jmpq   *0x261d82(%rip)        # 677b28 <_fini+0x21a624>
  415da6:	pushq  $0x362
  415dab:	jmpq   412770 <_init+0x20>

0000000000415db0 <EVP_des_ede3_cbc@plt>:
  415db0:	jmpq   *0x261d7a(%rip)        # 677b30 <_fini+0x21a62c>
  415db6:	pushq  $0x363
  415dbb:	jmpq   412770 <_init+0x20>

0000000000415dc0 <ERR_reason_error_string@plt>:
  415dc0:	jmpq   *0x261d72(%rip)        # 677b38 <_fini+0x21a634>
  415dc6:	pushq  $0x364
  415dcb:	jmpq   412770 <_init+0x20>

0000000000415dd0 <EVP_rc2_40_cbc@plt>:
  415dd0:	jmpq   *0x261d6a(%rip)        # 677b40 <_fini+0x21a63c>
  415dd6:	pushq  $0x365
  415ddb:	jmpq   412770 <_init+0x20>

0000000000415de0 <BIO_new_connect@plt>:
  415de0:	jmpq   *0x261d62(%rip)        # 677b48 <_fini+0x21a644>
  415de6:	pushq  $0x366
  415deb:	jmpq   412770 <_init+0x20>

0000000000415df0 <BIO_f_md@plt>:
  415df0:	jmpq   *0x261d5a(%rip)        # 677b50 <_fini+0x21a64c>
  415df6:	pushq  $0x367
  415dfb:	jmpq   412770 <_init+0x20>

0000000000415e00 <d2i_EC_PUBKEY_bio@plt>:
  415e00:	jmpq   *0x261d52(%rip)        # 677b58 <_fini+0x21a654>
  415e06:	pushq  $0x368
  415e0b:	jmpq   412770 <_init+0x20>

0000000000415e10 <private_AES_set_encrypt_key@plt>:
  415e10:	jmpq   *0x261d4a(%rip)        # 677b60 <_fini+0x21a65c>
  415e16:	pushq  $0x369
  415e1b:	jmpq   412770 <_init+0x20>

0000000000415e20 <__fprintf_chk@plt>:
  415e20:	jmpq   *0x261d42(%rip)        # 677b68 <_fini+0x21a664>
  415e26:	pushq  $0x36a
  415e2b:	jmpq   412770 <_init+0x20>

0000000000415e30 <BN_is_prime_ex@plt>:
  415e30:	jmpq   *0x261d3a(%rip)        # 677b70 <_fini+0x21a66c>
  415e36:	pushq  $0x36b
  415e3b:	jmpq   412770 <_init+0x20>

0000000000415e40 <X509_email_free@plt>:
  415e40:	jmpq   *0x261d32(%rip)        # 677b78 <_fini+0x21a674>
  415e46:	pushq  $0x36c
  415e4b:	jmpq   412770 <_init+0x20>

0000000000415e50 <d2i_ASN1_TYPE@plt>:
  415e50:	jmpq   *0x261d2a(%rip)        # 677b80 <_fini+0x21a67c>
  415e56:	pushq  $0x36d
  415e5b:	jmpq   412770 <_init+0x20>

0000000000415e60 <i2d_X509_NAME@plt>:
  415e60:	jmpq   *0x261d22(%rip)        # 677b88 <_fini+0x21a684>
  415e66:	pushq  $0x36e
  415e6b:	jmpq   412770 <_init+0x20>

0000000000415e70 <OCSP_check_validity@plt>:
  415e70:	jmpq   *0x261d1a(%rip)        # 677b90 <_fini+0x21a68c>
  415e76:	pushq  $0x36f
  415e7b:	jmpq   412770 <_init+0x20>

0000000000415e80 <SSL_alert_desc_string_long@plt>:
  415e80:	jmpq   *0x261d12(%rip)        # 677b98 <_fini+0x21a694>
  415e86:	pushq  $0x370
  415e8b:	jmpq   412770 <_init+0x20>

0000000000415e90 <ENGINE_load_builtin_engines@plt>:
  415e90:	jmpq   *0x261d0a(%rip)        # 677ba0 <_fini+0x21a69c>
  415e96:	pushq  $0x371
  415e9b:	jmpq   412770 <_init+0x20>

0000000000415ea0 <PBEPARAM_free@plt>:
  415ea0:	jmpq   *0x261d02(%rip)        # 677ba8 <_fini+0x21a6a4>
  415ea6:	pushq  $0x372
  415eab:	jmpq   412770 <_init+0x20>

0000000000415eb0 <SSL_select_next_proto@plt>:
  415eb0:	jmpq   *0x261cfa(%rip)        # 677bb0 <_fini+0x21a6ac>
  415eb6:	pushq  $0x373
  415ebb:	jmpq   412770 <_init+0x20>

0000000000415ec0 <BIO_s_connect@plt>:
  415ec0:	jmpq   *0x261cf2(%rip)        # 677bb8 <_fini+0x21a6b4>
  415ec6:	pushq  $0x374
  415ecb:	jmpq   412770 <_init+0x20>

0000000000415ed0 <i2d_TS_REQ_bio@plt>:
  415ed0:	jmpq   *0x261cea(%rip)        # 677bc0 <_fini+0x21a6bc>
  415ed6:	pushq  $0x375
  415edb:	jmpq   412770 <_init+0x20>

0000000000415ee0 <CAST_cbc_encrypt@plt>:
  415ee0:	jmpq   *0x261ce2(%rip)        # 677bc8 <_fini+0x21a6c4>
  415ee6:	pushq  $0x376
  415eeb:	jmpq   412770 <_init+0x20>

0000000000415ef0 <EVP_DigestVerifyFinal@plt>:
  415ef0:	jmpq   *0x261cda(%rip)        # 677bd0 <_fini+0x21a6cc>
  415ef6:	pushq  $0x377
  415efb:	jmpq   412770 <_init+0x20>

0000000000415f00 <EVP_PKEY_get_default_digest_nid@plt>:
  415f00:	jmpq   *0x261cd2(%rip)        # 677bd8 <_fini+0x21a6d4>
  415f06:	pushq  $0x378
  415f0b:	jmpq   412770 <_init+0x20>

0000000000415f10 <RSA_verify@plt>:
  415f10:	jmpq   *0x261cca(%rip)        # 677be0 <_fini+0x21a6dc>
  415f16:	pushq  $0x379
  415f1b:	jmpq   412770 <_init+0x20>

0000000000415f20 <BIO_f_nbio_test@plt>:
  415f20:	jmpq   *0x261cc2(%rip)        # 677be8 <_fini+0x21a6e4>
  415f26:	pushq  $0x37a
  415f2b:	jmpq   412770 <_init+0x20>

0000000000415f30 <EVP_DigestUpdate@plt>:
  415f30:	jmpq   *0x261cba(%rip)        # 677bf0 <_fini+0x21a6ec>
  415f36:	pushq  $0x37b
  415f3b:	jmpq   412770 <_init+0x20>

0000000000415f40 <access@plt>:
  415f40:	jmpq   *0x261cb2(%rip)        # 677bf8 <_fini+0x21a6f4>
  415f46:	pushq  $0x37c
  415f4b:	jmpq   412770 <_init+0x20>

0000000000415f50 <ASN1_TIME_print@plt>:
  415f50:	jmpq   *0x261caa(%rip)        # 677c00 <_fini+0x21a6fc>
  415f56:	pushq  $0x37d
  415f5b:	jmpq   412770 <_init+0x20>

0000000000415f60 <EVP_camellia_128_cbc@plt>:
  415f60:	jmpq   *0x261ca2(%rip)        # 677c08 <_fini+0x21a704>
  415f66:	pushq  $0x37e
  415f6b:	jmpq   412770 <_init+0x20>

0000000000415f70 <X509_STORE_get_by_subject@plt>:
  415f70:	jmpq   *0x261c9a(%rip)        # 677c10 <_fini+0x21a70c>
  415f76:	pushq  $0x37f
  415f7b:	jmpq   412770 <_init+0x20>

0000000000415f80 <EVP_Digest@plt>:
  415f80:	jmpq   *0x261c92(%rip)        # 677c18 <_fini+0x21a714>
  415f86:	pushq  $0x380
  415f8b:	jmpq   412770 <_init+0x20>

0000000000415f90 <TS_REQ_set_policy_id@plt>:
  415f90:	jmpq   *0x261c8a(%rip)        # 677c20 <_fini+0x21a71c>
  415f96:	pushq  $0x381
  415f9b:	jmpq   412770 <_init+0x20>

0000000000415fa0 <EC_GROUP_new_by_curve_name@plt>:
  415fa0:	jmpq   *0x261c82(%rip)        # 677c28 <_fini+0x21a724>
  415fa6:	pushq  $0x382
  415fab:	jmpq   412770 <_init+0x20>

0000000000415fb0 <NETSCAPE_SPKI_b64_decode@plt>:
  415fb0:	jmpq   *0x261c7a(%rip)        # 677c30 <_fini+0x21a72c>
  415fb6:	pushq  $0x383
  415fbb:	jmpq   412770 <_init+0x20>

0000000000415fc0 <EC_KEY_new_by_curve_name@plt>:
  415fc0:	jmpq   *0x261c72(%rip)        # 677c38 <_fini+0x21a734>
  415fc6:	pushq  $0x384
  415fcb:	jmpq   412770 <_init+0x20>

0000000000415fd0 <OBJ_create_objects@plt>:
  415fd0:	jmpq   *0x261c6a(%rip)        # 677c40 <_fini+0x21a73c>
  415fd6:	pushq  $0x385
  415fdb:	jmpq   412770 <_init+0x20>

0000000000415fe0 <PEM_write_bio_DSA_PUBKEY@plt>:
  415fe0:	jmpq   *0x261c62(%rip)        # 677c48 <_fini+0x21a744>
  415fe6:	pushq  $0x386
  415feb:	jmpq   412770 <_init+0x20>

0000000000415ff0 <RSA_generate_key_ex@plt>:
  415ff0:	jmpq   *0x261c5a(%rip)        # 677c50 <_fini+0x21a74c>
  415ff6:	pushq  $0x387
  415ffb:	jmpq   412770 <_init+0x20>

0000000000416000 <TS_RESP_create_response@plt>:
  416000:	jmpq   *0x261c52(%rip)        # 677c58 <_fini+0x21a754>
  416006:	pushq  $0x388
  41600b:	jmpq   412770 <_init+0x20>

0000000000416010 <__memcpy_chk@plt>:
  416010:	jmpq   *0x261c4a(%rip)        # 677c60 <_fini+0x21a75c>
  416016:	pushq  $0x389
  41601b:	jmpq   412770 <_init+0x20>

0000000000416020 <SSL_SESSION_print@plt>:
  416020:	jmpq   *0x261c42(%rip)        # 677c68 <_fini+0x21a764>
  416026:	pushq  $0x38a
  41602b:	jmpq   412770 <_init+0x20>

0000000000416030 <CRYPTO_set_mem_debug_functions@plt>:
  416030:	jmpq   *0x261c3a(%rip)        # 677c70 <_fini+0x21a76c>
  416036:	pushq  $0x38b
  41603b:	jmpq   412770 <_init+0x20>

0000000000416040 <i2d_ASN1_TYPE@plt>:
  416040:	jmpq   *0x261c32(%rip)        # 677c78 <_fini+0x21a774>
  416046:	pushq  $0x38c
  41604b:	jmpq   412770 <_init+0x20>

0000000000416050 <SSL_CTX_set_tmp_rsa_callback@plt>:
  416050:	jmpq   *0x261c2a(%rip)        # 677c80 <_fini+0x21a77c>
  416056:	pushq  $0x38d
  41605b:	jmpq   412770 <_init+0x20>

0000000000416060 <CMS_decrypt_set1_password@plt>:
  416060:	jmpq   *0x261c22(%rip)        # 677c88 <_fini+0x21a784>
  416066:	pushq  $0x38e
  41606b:	jmpq   412770 <_init+0x20>

0000000000416070 <lh_node_stats_bio@plt>:
  416070:	jmpq   *0x261c1a(%rip)        # 677c90 <_fini+0x21a78c>
  416076:	pushq  $0x38f
  41607b:	jmpq   412770 <_init+0x20>

0000000000416080 <ASN1_TIME_new@plt>:
  416080:	jmpq   *0x261c12(%rip)        # 677c98 <_fini+0x21a794>
  416086:	pushq  $0x390
  41608b:	jmpq   412770 <_init+0x20>

0000000000416090 <OCSP_BASICRESP_new@plt>:
  416090:	jmpq   *0x261c0a(%rip)        # 677ca0 <_fini+0x21a79c>
  416096:	pushq  $0x391
  41609b:	jmpq   412770 <_init+0x20>

00000000004160a0 <EVP_MD_CTX_init@plt>:
  4160a0:	jmpq   *0x261c02(%rip)        # 677ca8 <_fini+0x21a7a4>
  4160a6:	pushq  $0x392
  4160ab:	jmpq   412770 <_init+0x20>

00000000004160b0 <EVP_camellia_256_cbc@plt>:
  4160b0:	jmpq   *0x261bfa(%rip)        # 677cb0 <_fini+0x21a7ac>
  4160b6:	pushq  $0x393
  4160bb:	jmpq   412770 <_init+0x20>

00000000004160c0 <SSL_CTX_set_default_verify_paths@plt>:
  4160c0:	jmpq   *0x261bf2(%rip)        # 677cb8 <_fini+0x21a7b4>
  4160c6:	pushq  $0x394
  4160cb:	jmpq   412770 <_init+0x20>

00000000004160d0 <EVP_PKEY2PKCS8_broken@plt>:
  4160d0:	jmpq   *0x261bea(%rip)        # 677cc0 <_fini+0x21a7bc>
  4160d6:	pushq  $0x395
  4160db:	jmpq   412770 <_init+0x20>

00000000004160e0 <CMS_compress@plt>:
  4160e0:	jmpq   *0x261be2(%rip)        # 677cc8 <_fini+0x21a7c4>
  4160e6:	pushq  $0x396
  4160eb:	jmpq   412770 <_init+0x20>

00000000004160f0 <BIO_new_socket@plt>:
  4160f0:	jmpq   *0x261bda(%rip)        # 677cd0 <_fini+0x21a7cc>
  4160f6:	pushq  $0x397
  4160fb:	jmpq   412770 <_init+0x20>

0000000000416100 <X509_EXTENSION_free@plt>:
  416100:	jmpq   *0x261bd2(%rip)        # 677cd8 <_fini+0x21a7d4>
  416106:	pushq  $0x398
  41610b:	jmpq   412770 <_init+0x20>

0000000000416110 <EVP_PKEY_sign@plt>:
  416110:	jmpq   *0x261bca(%rip)        # 677ce0 <_fini+0x21a7dc>
  416116:	pushq  $0x399
  41611b:	jmpq   412770 <_init+0x20>

0000000000416120 <PKCS7_print_ctx@plt>:
  416120:	jmpq   *0x261bc2(%rip)        # 677ce8 <_fini+0x21a7e4>
  416126:	pushq  $0x39a
  41612b:	jmpq   412770 <_init+0x20>

0000000000416130 <EVP_DecryptUpdate@plt>:
  416130:	jmpq   *0x261bba(%rip)        # 677cf0 <_fini+0x21a7ec>
  416136:	pushq  $0x39b
  41613b:	jmpq   412770 <_init+0x20>

0000000000416140 <ERR_peek_last_error@plt>:
  416140:	jmpq   *0x261bb2(%rip)        # 677cf8 <_fini+0x21a7f4>
  416146:	pushq  $0x39c
  41614b:	jmpq   412770 <_init+0x20>

0000000000416150 <i2d_X509@plt>:
  416150:	jmpq   *0x261baa(%rip)        # 677d00 <_fini+0x21a7fc>
  416156:	pushq  $0x39d
  41615b:	jmpq   412770 <_init+0x20>

0000000000416160 <PEM_write_bio_RSAPublicKey@plt>:
  416160:	jmpq   *0x261ba2(%rip)        # 677d08 <_fini+0x21a804>
  416166:	pushq  $0x39e
  41616b:	jmpq   412770 <_init+0x20>

0000000000416170 <X509_set_version@plt>:
  416170:	jmpq   *0x261b9a(%rip)        # 677d10 <_fini+0x21a80c>
  416176:	pushq  $0x39f
  41617b:	jmpq   412770 <_init+0x20>

0000000000416180 <b2i_PVK_bio@plt>:
  416180:	jmpq   *0x261b92(%rip)        # 677d18 <_fini+0x21a814>
  416186:	pushq  $0x3a0
  41618b:	jmpq   412770 <_init+0x20>

0000000000416190 <i2d_RSAPrivateKey_bio@plt>:
  416190:	jmpq   *0x261b8a(%rip)        # 677d20 <_fini+0x21a81c>
  416196:	pushq  $0x3a1
  41619b:	jmpq   412770 <_init+0x20>

00000000004161a0 <UI_method_set_writer@plt>:
  4161a0:	jmpq   *0x261b82(%rip)        # 677d28 <_fini+0x21a824>
  4161a6:	pushq  $0x3a2
  4161ab:	jmpq   412770 <_init+0x20>

00000000004161b0 <X509_get_pubkey@plt>:
  4161b0:	jmpq   *0x261b7a(%rip)        # 677d30 <_fini+0x21a82c>
  4161b6:	pushq  $0x3a3
  4161bb:	jmpq   412770 <_init+0x20>

00000000004161c0 <EVP_PKEY_get1_EC_KEY@plt>:
  4161c0:	jmpq   *0x261b72(%rip)        # 677d38 <_fini+0x21a834>
  4161c6:	pushq  $0x3a4
  4161cb:	jmpq   412770 <_init+0x20>

00000000004161d0 <OCSP_sendreq_new@plt>:
  4161d0:	jmpq   *0x261b6a(%rip)        # 677d40 <_fini+0x21a83c>
  4161d6:	pushq  $0x3a5
  4161db:	jmpq   412770 <_init+0x20>

00000000004161e0 <BIO_new_fp@plt>:
  4161e0:	jmpq   *0x261b62(%rip)        # 677d48 <_fini+0x21a844>
  4161e6:	pushq  $0x3a6
  4161eb:	jmpq   412770 <_init+0x20>

00000000004161f0 <EVP_read_pw_string@plt>:
  4161f0:	jmpq   *0x261b5a(%rip)        # 677d50 <_fini+0x21a84c>
  4161f6:	pushq  $0x3a7
  4161fb:	jmpq   412770 <_init+0x20>

0000000000416200 <BIO_new_fd@plt>:
  416200:	jmpq   *0x261b52(%rip)        # 677d58 <_fini+0x21a854>
  416206:	pushq  $0x3a8
  41620b:	jmpq   412770 <_init+0x20>

0000000000416210 <TS_CONF_load_certs@plt>:
  416210:	jmpq   *0x261b4a(%rip)        # 677d60 <_fini+0x21a85c>
  416216:	pushq  $0x3a9
  41621b:	jmpq   412770 <_init+0x20>

0000000000416220 <CRYPTO_gcm128_aad@plt>:
  416220:	jmpq   *0x261b42(%rip)        # 677d68 <_fini+0x21a864>
  416226:	pushq  $0x3aa
  41622b:	jmpq   412770 <_init+0x20>

0000000000416230 <X509_ALGOR_new@plt>:
  416230:	jmpq   *0x261b3a(%rip)        # 677d70 <_fini+0x21a86c>
  416236:	pushq  $0x3ab
  41623b:	jmpq   412770 <_init+0x20>

0000000000416240 <X509_STORE_CTX_get_explicit_policy@plt>:
  416240:	jmpq   *0x261b32(%rip)        # 677d78 <_fini+0x21a874>
  416246:	pushq  $0x3ac
  41624b:	jmpq   412770 <_init+0x20>

0000000000416250 <sk_pop_free@plt>:
  416250:	jmpq   *0x261b2a(%rip)        # 677d80 <_fini+0x21a87c>
  416256:	pushq  $0x3ad
  41625b:	jmpq   412770 <_init+0x20>

0000000000416260 <SSL_get_current_expansion@plt>:
  416260:	jmpq   *0x261b22(%rip)        # 677d88 <_fini+0x21a884>
  416266:	pushq  $0x3ae
  41626b:	jmpq   412770 <_init+0x20>

0000000000416270 <X509_CRL_sort@plt>:
  416270:	jmpq   *0x261b1a(%rip)        # 677d90 <_fini+0x21a88c>
  416276:	pushq  $0x3af
  41627b:	jmpq   412770 <_init+0x20>

0000000000416280 <SSL_get_certificate@plt>:
  416280:	jmpq   *0x261b12(%rip)        # 677d98 <_fini+0x21a894>
  416286:	pushq  $0x3b0
  41628b:	jmpq   412770 <_init+0x20>

0000000000416290 <setsockopt@plt>:
  416290:	jmpq   *0x261b0a(%rip)        # 677da0 <_fini+0x21a89c>
  416296:	pushq  $0x3b1
  41629b:	jmpq   412770 <_init+0x20>

00000000004162a0 <X509_POLICY_NODE_print@plt>:
  4162a0:	jmpq   *0x261b02(%rip)        # 677da8 <_fini+0x21a8a4>
  4162a6:	pushq  $0x3b2
  4162ab:	jmpq   412770 <_init+0x20>

00000000004162b0 <SSL_ctrl@plt>:
  4162b0:	jmpq   *0x261afa(%rip)        # 677db0 <_fini+0x21a8ac>
  4162b6:	pushq  $0x3b3
  4162bb:	jmpq   412770 <_init+0x20>

00000000004162c0 <BIO_f_zlib@plt>:
  4162c0:	jmpq   *0x261af2(%rip)        # 677db8 <_fini+0x21a8b4>
  4162c6:	pushq  $0x3b4
  4162cb:	jmpq   412770 <_init+0x20>

00000000004162d0 <SSL_set_accept_state@plt>:
  4162d0:	jmpq   *0x261aea(%rip)        # 677dc0 <_fini+0x21a8bc>
  4162d6:	pushq  $0x3b5
  4162db:	jmpq   412770 <_init+0x20>

00000000004162e0 <ASN1_INTEGER_new@plt>:
  4162e0:	jmpq   *0x261ae2(%rip)        # 677dc8 <_fini+0x21a8c4>
  4162e6:	pushq  $0x3b6
  4162eb:	jmpq   412770 <_init+0x20>

00000000004162f0 <SSL_get_ciphers@plt>:
  4162f0:	jmpq   *0x261ada(%rip)        # 677dd0 <_fini+0x21a8cc>
  4162f6:	pushq  $0x3b7
  4162fb:	jmpq   412770 <_init+0x20>

0000000000416300 <SSL_get_peer_certificate@plt>:
  416300:	jmpq   *0x261ad2(%rip)        # 677dd8 <_fini+0x21a8d4>
  416306:	pushq  $0x3b8
  41630b:	jmpq   412770 <_init+0x20>

0000000000416310 <EVP_CIPHER_do_all_sorted@plt>:
  416310:	jmpq   *0x261aca(%rip)        # 677de0 <_fini+0x21a8dc>
  416316:	pushq  $0x3b9
  41631b:	jmpq   412770 <_init+0x20>

0000000000416320 <SSL_CTX_set_next_proto_select_cb@plt>:
  416320:	jmpq   *0x261ac2(%rip)        # 677de8 <_fini+0x21a8e4>
  416326:	pushq  $0x3ba
  41632b:	jmpq   412770 <_init+0x20>

0000000000416330 <EVP_PKEY_copy_parameters@plt>:
  416330:	jmpq   *0x261aba(%rip)        # 677df0 <_fini+0x21a8ec>
  416336:	pushq  $0x3bb
  41633b:	jmpq   412770 <_init+0x20>

0000000000416340 <ASN1_INTEGER_set@plt>:
  416340:	jmpq   *0x261ab2(%rip)        # 677df8 <_fini+0x21a8f4>
  416346:	pushq  $0x3bc
  41634b:	jmpq   412770 <_init+0x20>

0000000000416350 <SSL_CTX_use_psk_identity_hint@plt>:
  416350:	jmpq   *0x261aaa(%rip)        # 677e00 <_fini+0x21a8fc>
  416356:	pushq  $0x3bd
  41635b:	jmpq   412770 <_init+0x20>

0000000000416360 <COMP_zlib_cleanup@plt>:
  416360:	jmpq   *0x261aa2(%rip)        # 677e08 <_fini+0x21a904>
  416366:	pushq  $0x3be
  41636b:	jmpq   412770 <_init+0x20>

0000000000416370 <TS_CONF_set_policies@plt>:
  416370:	jmpq   *0x261a9a(%rip)        # 677e10 <_fini+0x21a90c>
  416376:	pushq  $0x3bf
  41637b:	jmpq   412770 <_init+0x20>

0000000000416380 <ERR_peek_error@plt>:
  416380:	jmpq   *0x261a92(%rip)        # 677e18 <_fini+0x21a914>
  416386:	pushq  $0x3c0
  41638b:	jmpq   412770 <_init+0x20>

0000000000416390 <TS_CONF_set_clock_precision_digits@plt>:
  416390:	jmpq   *0x261a8a(%rip)        # 677e20 <_fini+0x21a91c>
  416396:	pushq  $0x3c1
  41639b:	jmpq   412770 <_init+0x20>

00000000004163a0 <EVP_MD_do_all_sorted@plt>:
  4163a0:	jmpq   *0x261a82(%rip)        # 677e28 <_fini+0x21a924>
  4163a6:	pushq  $0x3c2
  4163ab:	jmpq   412770 <_init+0x20>

00000000004163b0 <EVP_PKEY_base_id@plt>:
  4163b0:	jmpq   *0x261a7a(%rip)        # 677e30 <_fini+0x21a92c>
  4163b6:	pushq  $0x3c3
  4163bb:	jmpq   412770 <_init+0x20>

00000000004163c0 <BIO_set_flags@plt>:
  4163c0:	jmpq   *0x261a72(%rip)        # 677e38 <_fini+0x21a934>
  4163c6:	pushq  $0x3c4
  4163cb:	jmpq   412770 <_init+0x20>

00000000004163d0 <SSLv23_server_method@plt>:
  4163d0:	jmpq   *0x261a6a(%rip)        # 677e40 <_fini+0x21a93c>
  4163d6:	pushq  $0x3c5
  4163db:	jmpq   412770 <_init+0x20>

00000000004163e0 <MD2_options@plt>:
  4163e0:	jmpq   *0x261a62(%rip)        # 677e48 <_fini+0x21a944>
  4163e6:	pushq  $0x3c6
  4163eb:	jmpq   412770 <_init+0x20>

00000000004163f0 <EVP_PKEY_asn1_get0@plt>:
  4163f0:	jmpq   *0x261a5a(%rip)        # 677e50 <_fini+0x21a94c>
  4163f6:	pushq  $0x3c7
  4163fb:	jmpq   412770 <_init+0x20>

0000000000416400 <TS_TST_INFO_free@plt>:
  416400:	jmpq   *0x261a52(%rip)        # 677e58 <_fini+0x21a954>
  416406:	pushq  $0x3c8
  41640b:	jmpq   412770 <_init+0x20>

0000000000416410 <EVP_PKEY_verify_recover_init@plt>:
  416410:	jmpq   *0x261a4a(%rip)        # 677e60 <_fini+0x21a95c>
  416416:	pushq  $0x3c9
  41641b:	jmpq   412770 <_init+0x20>

0000000000416420 <RAND_status@plt>:
  416420:	jmpq   *0x261a42(%rip)        # 677e68 <_fini+0x21a964>
  416426:	pushq  $0x3ca
  41642b:	jmpq   412770 <_init+0x20>

0000000000416430 <X509_check_private_key@plt>:
  416430:	jmpq   *0x261a3a(%rip)        # 677e70 <_fini+0x21a96c>
  416436:	pushq  $0x3cb
  41643b:	jmpq   412770 <_init+0x20>

0000000000416440 <TXT_DB_insert@plt>:
  416440:	jmpq   *0x261a32(%rip)        # 677e78 <_fini+0x21a974>
  416446:	pushq  $0x3cc
  41644b:	jmpq   412770 <_init+0x20>

0000000000416450 <NCONF_get_number_e@plt>:
  416450:	jmpq   *0x261a2a(%rip)        # 677e80 <_fini+0x21a97c>
  416456:	pushq  $0x3cd
  41645b:	jmpq   412770 <_init+0x20>

0000000000416460 <PEM_write_bio_SSL_SESSION@plt>:
  416460:	jmpq   *0x261a22(%rip)        # 677e88 <_fini+0x21a984>
  416466:	pushq  $0x3ce
  41646b:	jmpq   412770 <_init+0x20>

0000000000416470 <X509_STORE_set_verify_cb@plt>:
  416470:	jmpq   *0x261a1a(%rip)        # 677e90 <_fini+0x21a98c>
  416476:	pushq  $0x3cf
  41647b:	jmpq   412770 <_init+0x20>

0000000000416480 <i2d_X509_CRL_bio@plt>:
  416480:	jmpq   *0x261a12(%rip)        # 677e98 <_fini+0x21a994>
  416486:	pushq  $0x3d0
  41648b:	jmpq   412770 <_init+0x20>

0000000000416490 <TS_MSG_IMPRINT_free@plt>:
  416490:	jmpq   *0x261a0a(%rip)        # 677ea0 <_fini+0x21a99c>
  416496:	pushq  $0x3d1
  41649b:	jmpq   412770 <_init+0x20>

00000000004164a0 <OCSP_response_status_str@plt>:
  4164a0:	jmpq   *0x261a02(%rip)        # 677ea8 <_fini+0x21a9a4>
  4164a6:	pushq  $0x3d2
  4164ab:	jmpq   412770 <_init+0x20>

00000000004164b0 <OCSP_onereq_get0_id@plt>:
  4164b0:	jmpq   *0x2619fa(%rip)        # 677eb0 <_fini+0x21a9ac>
  4164b6:	pushq  $0x3d3
  4164bb:	jmpq   412770 <_init+0x20>

00000000004164c0 <RSA_size@plt>:
  4164c0:	jmpq   *0x2619f2(%rip)        # 677eb8 <_fini+0x21a9b4>
  4164c6:	pushq  $0x3d4
  4164cb:	jmpq   412770 <_init+0x20>

00000000004164d0 <EVP_PKEY_print_public@plt>:
  4164d0:	jmpq   *0x2619ea(%rip)        # 677ec0 <_fini+0x21a9bc>
  4164d6:	pushq  $0x3d5
  4164db:	jmpq   412770 <_init+0x20>

00000000004164e0 <CMS_get1_ReceiptRequest@plt>:
  4164e0:	jmpq   *0x2619e2(%rip)        # 677ec8 <_fini+0x21a9c4>
  4164e6:	pushq  $0x3d6
  4164eb:	jmpq   412770 <_init+0x20>

00000000004164f0 <X509_gmtime_adj@plt>:
  4164f0:	jmpq   *0x2619da(%rip)        # 677ed0 <_fini+0x21a9cc>
  4164f6:	pushq  $0x3d7
  4164fb:	jmpq   412770 <_init+0x20>

0000000000416500 <SSL_set_msg_callback@plt>:
  416500:	jmpq   *0x2619d2(%rip)        # 677ed8 <_fini+0x21a9d4>
  416506:	pushq  $0x3d8
  41650b:	jmpq   412770 <_init+0x20>

0000000000416510 <X509_PURPOSE_get0_sname@plt>:
  416510:	jmpq   *0x2619ca(%rip)        # 677ee0 <_fini+0x21a9dc>
  416516:	pushq  $0x3d9
  41651b:	jmpq   412770 <_init+0x20>

0000000000416520 <X509_STORE_set_flags@plt>:
  416520:	jmpq   *0x2619c2(%rip)        # 677ee8 <_fini+0x21a9e4>
  416526:	pushq  $0x3da
  41652b:	jmpq   412770 <_init+0x20>

0000000000416530 <EVP_DecryptInit_ex@plt>:
  416530:	jmpq   *0x2619ba(%rip)        # 677ef0 <_fini+0x21a9ec>
  416536:	pushq  $0x3db
  41653b:	jmpq   412770 <_init+0x20>

0000000000416540 <CMS_add0_recipient_key@plt>:
  416540:	jmpq   *0x2619b2(%rip)        # 677ef8 <_fini+0x21a9f4>
  416546:	pushq  $0x3dc
  41654b:	jmpq   412770 <_init+0x20>

0000000000416550 <ENGINE_get_RAND@plt>:
  416550:	jmpq   *0x2619aa(%rip)        # 677f00 <_fini+0x21a9fc>
  416556:	pushq  $0x3dd
  41655b:	jmpq   412770 <_init+0x20>

0000000000416560 <X509_STORE_CTX_get1_chain@plt>:
  416560:	jmpq   *0x2619a2(%rip)        # 677f08 <_fini+0x21aa04>
  416566:	pushq  $0x3de
  41656b:	jmpq   412770 <_init+0x20>

0000000000416570 <BIO_free_all@plt>:
  416570:	jmpq   *0x26199a(%rip)        # 677f10 <_fini+0x21aa0c>
  416576:	pushq  $0x3df
  41657b:	jmpq   412770 <_init+0x20>

0000000000416580 <PKCS7_encrypt@plt>:
  416580:	jmpq   *0x261992(%rip)        # 677f18 <_fini+0x21aa14>
  416586:	pushq  $0x3e0
  41658b:	jmpq   412770 <_init+0x20>

0000000000416590 <__libc_start_main@plt>:
  416590:	jmpq   *0x26198a(%rip)        # 677f20 <_fini+0x21aa1c>
  416596:	pushq  $0x3e1
  41659b:	jmpq   412770 <_init+0x20>

00000000004165a0 <EVP_PKEY_encrypt@plt>:
  4165a0:	jmpq   *0x261982(%rip)        # 677f28 <_fini+0x21aa24>
  4165a6:	pushq  $0x3e2
  4165ab:	jmpq   412770 <_init+0x20>

00000000004165b0 <DSA_new@plt>:
  4165b0:	jmpq   *0x26197a(%rip)        # 677f30 <_fini+0x21aa2c>
  4165b6:	pushq  $0x3e3
  4165bb:	jmpq   412770 <_init+0x20>

00000000004165c0 <X509_ALGOR_free@plt>:
  4165c0:	jmpq   *0x261972(%rip)        # 677f38 <_fini+0x21aa34>
  4165c6:	pushq  $0x3e4
  4165cb:	jmpq   412770 <_init+0x20>

00000000004165d0 <BIO_sock_should_retry@plt>:
  4165d0:	jmpq   *0x26196a(%rip)        # 677f40 <_fini+0x21aa3c>
  4165d6:	pushq  $0x3e5
  4165db:	jmpq   412770 <_init+0x20>

00000000004165e0 <TS_RESP_get_token@plt>:
  4165e0:	jmpq   *0x261962(%rip)        # 677f48 <_fini+0x21aa44>
  4165e6:	pushq  $0x3e6
  4165eb:	jmpq   412770 <_init+0x20>

00000000004165f0 <X509_LOOKUP_ctrl@plt>:
  4165f0:	jmpq   *0x26195a(%rip)        # 677f50 <_fini+0x21aa4c>
  4165f6:	pushq  $0x3e7
  4165fb:	jmpq   412770 <_init+0x20>

0000000000416600 <ASN1_STRING_set@plt>:
  416600:	jmpq   *0x261952(%rip)        # 677f58 <_fini+0x21aa54>
  416606:	pushq  $0x3e8
  41660b:	jmpq   412770 <_init+0x20>

0000000000416610 <UI_destroy_method@plt>:
  416610:	jmpq   *0x26194a(%rip)        # 677f60 <_fini+0x21aa5c>
  416616:	pushq  $0x3e9
  41661b:	jmpq   412770 <_init+0x20>

0000000000416620 <HMAC_Update@plt>:
  416620:	jmpq   *0x261942(%rip)        # 677f68 <_fini+0x21aa64>
  416626:	pushq  $0x3ea
  41662b:	jmpq   412770 <_init+0x20>

0000000000416630 <PEM_write_bio_X509_AUX@plt>:
  416630:	jmpq   *0x26193a(%rip)        # 677f70 <_fini+0x21aa6c>
  416636:	pushq  $0x3eb
  41663b:	jmpq   412770 <_init+0x20>

0000000000416640 <EVP_cleanup@plt>:
  416640:	jmpq   *0x261932(%rip)        # 677f78 <_fini+0x21aa74>
  416646:	pushq  $0x3ec
  41664b:	jmpq   412770 <_init+0x20>

0000000000416650 <X509_policy_tree_get0_user_policies@plt>:
  416650:	jmpq   *0x26192a(%rip)        # 677f80 <_fini+0x21aa7c>
  416656:	pushq  $0x3ed
  41665b:	jmpq   412770 <_init+0x20>

0000000000416660 <__gmon_start__@plt>:
  416660:	jmpq   *0x261922(%rip)        # 677f88 <_fini+0x21aa84>
  416666:	pushq  $0x3ee
  41666b:	jmpq   412770 <_init+0x20>

0000000000416670 <SSL_get_session@plt>:
  416670:	jmpq   *0x26191a(%rip)        # 677f90 <_fini+0x21aa8c>
  416676:	pushq  $0x3ef
  41667b:	jmpq   412770 <_init+0x20>

0000000000416680 <X509_VERIFY_PARAM_set_flags@plt>:
  416680:	jmpq   *0x261912(%rip)        # 677f98 <_fini+0x21aa94>
  416686:	pushq  $0x3f0
  41668b:	jmpq   412770 <_init+0x20>

0000000000416690 <alarm@plt>:
  416690:	jmpq   *0x26190a(%rip)        # 677fa0 <_fini+0x21aa9c>
  416696:	pushq  $0x3f1
  41669b:	jmpq   412770 <_init+0x20>

00000000004166a0 <PEM_read_bio_X509@plt>:
  4166a0:	jmpq   *0x261902(%rip)        # 677fa8 <_fini+0x21aaa4>
  4166a6:	pushq  $0x3f2
  4166ab:	jmpq   412770 <_init+0x20>

00000000004166b0 <TS_CONF_set_ess_cert_id_chain@plt>:
  4166b0:	jmpq   *0x2618fa(%rip)        # 677fb0 <_fini+0x21aaac>
  4166b6:	pushq  $0x3f3
  4166bb:	jmpq   412770 <_init+0x20>

00000000004166c0 <X509_STORE_new@plt>:
  4166c0:	jmpq   *0x2618f2(%rip)        # 677fb8 <_fini+0x21aab4>
  4166c6:	pushq  $0x3f4
  4166cb:	jmpq   412770 <_init+0x20>

00000000004166d0 <X509_CRL_free@plt>:
  4166d0:	jmpq   *0x2618ea(%rip)        # 677fc0 <_fini+0x21aabc>
  4166d6:	pushq  $0x3f5
  4166db:	jmpq   412770 <_init+0x20>

00000000004166e0 <EVP_seed_cbc@plt>:
  4166e0:	jmpq   *0x2618e2(%rip)        # 677fc8 <_fini+0x21aac4>
  4166e6:	pushq  $0x3f6
  4166eb:	jmpq   412770 <_init+0x20>

00000000004166f0 <i2b_PublicKey_bio@plt>:
  4166f0:	jmpq   *0x2618da(%rip)        # 677fd0 <_fini+0x21aacc>
  4166f6:	pushq  $0x3f7
  4166fb:	jmpq   412770 <_init+0x20>

0000000000416700 <TS_RESP_get_tst_info@plt>:
  416700:	jmpq   *0x2618d2(%rip)        # 677fd8 <_fini+0x21aad4>
  416706:	pushq  $0x3f8
  41670b:	jmpq   412770 <_init+0x20>

0000000000416710 <qsort@plt>:
  416710:	jmpq   *0x2618ca(%rip)        # 677fe0 <_fini+0x21aadc>
  416716:	pushq  $0x3f9
  41671b:	jmpq   412770 <_init+0x20>

0000000000416720 <EVP_get_digestbyname@plt>:
  416720:	jmpq   *0x2618c2(%rip)        # 677fe8 <_fini+0x21aae4>
  416726:	pushq  $0x3fa
  41672b:	jmpq   412770 <_init+0x20>

0000000000416730 <TS_CONF_set_signer_key@plt>:
  416730:	jmpq   *0x2618ba(%rip)        # 677ff0 <_fini+0x21aaec>
  416736:	pushq  $0x3fb
  41673b:	jmpq   412770 <_init+0x20>

0000000000416740 <SSL_set_shutdown@plt>:
  416740:	jmpq   *0x2618b2(%rip)        # 677ff8 <_fini+0x21aaf4>
  416746:	pushq  $0x3fc
  41674b:	jmpq   412770 <_init+0x20>

0000000000416750 <Camellia_cbc_encrypt@plt>:
  416750:	jmpq   *0x2618aa(%rip)        # 678000 <_fini+0x21aafc>
  416756:	pushq  $0x3fd
  41675b:	jmpq   412770 <_init+0x20>

0000000000416760 <BN_new@plt>:
  416760:	jmpq   *0x2618a2(%rip)        # 678008 <_fini+0x21ab04>
  416766:	pushq  $0x3fe
  41676b:	jmpq   412770 <_init+0x20>

0000000000416770 <TS_VERIFY_CTX_free@plt>:
  416770:	jmpq   *0x26189a(%rip)        # 678010 <_fini+0x21ab0c>
  416776:	pushq  $0x3ff
  41677b:	jmpq   412770 <_init+0x20>

0000000000416780 <strcasestr@plt>:
  416780:	jmpq   *0x261892(%rip)        # 678018 <_fini+0x21ab14>
  416786:	pushq  $0x400
  41678b:	jmpq   412770 <_init+0x20>

0000000000416790 <BIO_new_ssl@plt>:
  416790:	jmpq   *0x26188a(%rip)        # 678020 <_fini+0x21ab1c>
  416796:	pushq  $0x401
  41679b:	jmpq   412770 <_init+0x20>

00000000004167a0 <X509_STORE_CTX_get_error_depth@plt>:
  4167a0:	jmpq   *0x261882(%rip)        # 678028 <_fini+0x21ab24>
  4167a6:	pushq  $0x402
  4167ab:	jmpq   412770 <_init+0x20>

00000000004167b0 <SSL_CTX_use_PrivateKey@plt>:
  4167b0:	jmpq   *0x26187a(%rip)        # 678030 <_fini+0x21ab2c>
  4167b6:	pushq  $0x403
  4167bb:	jmpq   412770 <_init+0x20>

00000000004167c0 <X509_STORE_CTX_new@plt>:
  4167c0:	jmpq   *0x261872(%rip)        # 678038 <_fini+0x21ab34>
  4167c6:	pushq  $0x404
  4167cb:	jmpq   412770 <_init+0x20>

00000000004167d0 <a2i_ASN1_INTEGER@plt>:
  4167d0:	jmpq   *0x26186a(%rip)        # 678040 <_fini+0x21ab3c>
  4167d6:	pushq  $0x405
  4167db:	jmpq   412770 <_init+0x20>

00000000004167e0 <EVP_PKEY_sign_init@plt>:
  4167e0:	jmpq   *0x261862(%rip)        # 678048 <_fini+0x21ab44>
  4167e6:	pushq  $0x406
  4167eb:	jmpq   412770 <_init+0x20>

00000000004167f0 <OBJ_obj2nid@plt>:
  4167f0:	jmpq   *0x26185a(%rip)        # 678050 <_fini+0x21ab4c>
  4167f6:	pushq  $0x407
  4167fb:	jmpq   412770 <_init+0x20>

0000000000416800 <EVP_DigestInit_ex@plt>:
  416800:	jmpq   *0x261852(%rip)        # 678058 <_fini+0x21ab54>
  416806:	pushq  $0x408
  41680b:	jmpq   412770 <_init+0x20>

0000000000416810 <EVP_get_cipherbyname@plt>:
  416810:	jmpq   *0x26184a(%rip)        # 678060 <_fini+0x21ab5c>
  416816:	pushq  $0x409
  41681b:	jmpq   412770 <_init+0x20>

0000000000416820 <X509_subject_name_hash_old@plt>:
  416820:	jmpq   *0x261842(%rip)        # 678068 <_fini+0x21ab64>
  416826:	pushq  $0x40a
  41682b:	jmpq   412770 <_init+0x20>

0000000000416830 <OCSP_request_add1_nonce@plt>:
  416830:	jmpq   *0x26183a(%rip)        # 678070 <_fini+0x21ab6c>
  416836:	pushq  $0x40b
  41683b:	jmpq   412770 <_init+0x20>

0000000000416840 <X509_REQ_add1_attr_by_txt@plt>:
  416840:	jmpq   *0x261832(%rip)        # 678078 <_fini+0x21ab74>
  416846:	pushq  $0x40c
  41684b:	jmpq   412770 <_init+0x20>

0000000000416850 <PEM_write_bio_PKCS8_PRIV_KEY_INFO@plt>:
  416850:	jmpq   *0x26182a(%rip)        # 678080 <_fini+0x21ab7c>
  416856:	pushq  $0x40d
  41685b:	jmpq   412770 <_init+0x20>

0000000000416860 <ECDSA_sign@plt>:
  416860:	jmpq   *0x261822(%rip)        # 678088 <_fini+0x21ab84>
  416866:	pushq  $0x40e
  41686b:	jmpq   412770 <_init+0x20>

0000000000416870 <ASN1_STRING_set_default_mask_asc@plt>:
  416870:	jmpq   *0x26181a(%rip)        # 678090 <_fini+0x21ab8c>
  416876:	pushq  $0x40f
  41687b:	jmpq   412770 <_init+0x20>

0000000000416880 <fwrite@plt>:
  416880:	jmpq   *0x261812(%rip)        # 678098 <_fini+0x21ab94>
  416886:	pushq  $0x410
  41688b:	jmpq   412770 <_init+0x20>

0000000000416890 <X509_CRL_set_lastUpdate@plt>:
  416890:	jmpq   *0x26180a(%rip)        # 6780a0 <_fini+0x21ab9c>
  416896:	pushq  $0x411
  41689b:	jmpq   412770 <_init+0x20>

00000000004168a0 <close@plt>:
  4168a0:	jmpq   *0x261802(%rip)        # 6780a8 <_fini+0x21aba4>
  4168a6:	pushq  $0x412
  4168ab:	jmpq   412770 <_init+0x20>

00000000004168b0 <OCSP_resp_find_status@plt>:
  4168b0:	jmpq   *0x2617fa(%rip)        # 6780b0 <_fini+0x21abac>
  4168b6:	pushq  $0x413
  4168bb:	jmpq   412770 <_init+0x20>

00000000004168c0 <ENGINE_ctrl@plt>:
  4168c0:	jmpq   *0x2617f2(%rip)        # 6780b8 <_fini+0x21abb4>
  4168c6:	pushq  $0x414
  4168cb:	jmpq   412770 <_init+0x20>

00000000004168d0 <X509V3_EXT_add_nconf@plt>:
  4168d0:	jmpq   *0x2617ea(%rip)        # 6780c0 <_fini+0x21abbc>
  4168d6:	pushq  $0x415
  4168db:	jmpq   412770 <_init+0x20>

00000000004168e0 <BIO_s_mem@plt>:
  4168e0:	jmpq   *0x2617e2(%rip)        # 6780c8 <_fini+0x21abc4>
  4168e6:	pushq  $0x416
  4168eb:	jmpq   412770 <_init+0x20>

00000000004168f0 <lh_strhash@plt>:
  4168f0:	jmpq   *0x2617da(%rip)        # 6780d0 <_fini+0x21abcc>
  4168f6:	pushq  $0x417
  4168fb:	jmpq   412770 <_init+0x20>

0000000000416900 <EVP_ripemd160@plt>:
  416900:	jmpq   *0x2617d2(%rip)        # 6780d8 <_fini+0x21abd4>
  416906:	pushq  $0x418
  41690b:	jmpq   412770 <_init+0x20>

0000000000416910 <RSA_check_key@plt>:
  416910:	jmpq   *0x2617ca(%rip)        # 6780e0 <_fini+0x21abdc>
  416916:	pushq  $0x419
  41691b:	jmpq   412770 <_init+0x20>

0000000000416920 <SSL_get_error@plt>:
  416920:	jmpq   *0x2617c2(%rip)        # 6780e8 <_fini+0x21abe4>
  416926:	pushq  $0x41a
  41692b:	jmpq   412770 <_init+0x20>

0000000000416930 <X509_set_pubkey@plt>:
  416930:	jmpq   *0x2617ba(%rip)        # 6780f0 <_fini+0x21abec>
  416936:	pushq  $0x41b
  41693b:	jmpq   412770 <_init+0x20>

0000000000416940 <X509_NAME_dup@plt>:
  416940:	jmpq   *0x2617b2(%rip)        # 6780f8 <_fini+0x21abf4>
  416946:	pushq  $0x41c
  41694b:	jmpq   412770 <_init+0x20>

0000000000416950 <ASN1_TYPE_get@plt>:
  416950:	jmpq   *0x2617aa(%rip)        # 678100 <_fini+0x21abfc>
  416956:	pushq  $0x41d
  41695b:	jmpq   412770 <_init+0x20>

0000000000416960 <private_CAST_set_key@plt>:
  416960:	jmpq   *0x2617a2(%rip)        # 678108 <_fini+0x21ac04>
  416966:	pushq  $0x41e
  41696b:	jmpq   412770 <_init+0x20>

0000000000416970 <TS_RESP_set_status_info@plt>:
  416970:	jmpq   *0x26179a(%rip)        # 678110 <_fini+0x21ac0c>
  416976:	pushq  $0x41f
  41697b:	jmpq   412770 <_init+0x20>

0000000000416980 <X509_LOOKUP_file@plt>:
  416980:	jmpq   *0x261792(%rip)        # 678118 <_fini+0x21ac14>
  416986:	pushq  $0x420
  41698b:	jmpq   412770 <_init+0x20>

0000000000416990 <ERR_load_crypto_strings@plt>:
  416990:	jmpq   *0x26178a(%rip)        # 678120 <_fini+0x21ac1c>
  416996:	pushq  $0x421
  41699b:	jmpq   412770 <_init+0x20>

00000000004169a0 <SSLv3_client_method@plt>:
  4169a0:	jmpq   *0x261782(%rip)        # 678128 <_fini+0x21ac24>
  4169a6:	pushq  $0x422
  4169ab:	jmpq   412770 <_init+0x20>

00000000004169b0 <RSA_new_method@plt>:
  4169b0:	jmpq   *0x26177a(%rip)        # 678130 <_fini+0x21ac2c>
  4169b6:	pushq  $0x423
  4169bb:	jmpq   412770 <_init+0x20>

00000000004169c0 <X509_NAME_add_entry@plt>:
  4169c0:	jmpq   *0x261772(%rip)        # 678138 <_fini+0x21ac34>
  4169c6:	pushq  $0x424
  4169cb:	jmpq   412770 <_init+0x20>

00000000004169d0 <X509_get0_pubkey_bitstr@plt>:
  4169d0:	jmpq   *0x26176a(%rip)        # 678140 <_fini+0x21ac3c>
  4169d6:	pushq  $0x425
  4169db:	jmpq   412770 <_init+0x20>

Disassembly of section .text:

00000000004169e0 <.text>:
  4169e0:	or     $0xffffffffffffffff,%r8
  4169e4:	xor    %eax,%eax
  4169e6:	mov    %rdi,%r9
  4169e9:	mov    %r8,%rcx
  4169ec:	mov    %rsi,%rdi
  4169ef:	repnz scas %es:(%rdi),%al
  4169f1:	mov    %r9,%rdi
  4169f4:	not    %rcx
  4169f7:	lea    (%rcx,%r8,1),%rdx
  4169fb:	mov    %r8,%rcx
  4169fe:	repnz scas %es:(%rdi),%al
  416a00:	not    %rcx
  416a03:	add    %r8,%rcx
  416a06:	cmp    %ecx,%edx
  416a08:	jg     416a1c <X509_get0_pubkey_bitstr@plt+0x4c>
  416a0a:	movslq %ecx,%rcx
  416a0d:	movslq %edx,%rdx
  416a10:	sub    %rdx,%rcx
  416a13:	lea    (%r9,%rcx,1),%rdi
  416a17:	jmpq   4155c0 <strcmp@plt>
  416a1c:	mov    $0x1,%eax
  416a21:	retq   
  416a22:	push   %r15
  416a24:	mov    %rsi,%r15
  416a27:	push   %r14
  416a29:	mov    %r9,%r14
  416a2c:	push   %r13
  416a2e:	mov    %rcx,%r13
  416a31:	push   %r12
  416a33:	mov    %r8,%r12
  416a36:	push   %rbp
  416a37:	mov    %rdx,%rbp
  416a3a:	push   %rbx
  416a3b:	sub    $0x48,%rsp
  416a3f:	mov    %fs:0x28,%rax
  416a48:	mov    %rax,0x38(%rsp)
  416a4d:	xor    %eax,%eax
  416a4f:	test   %rsi,%rsi
  416a52:	mov    %rdi,0x8(%rsp)
  416a57:	jne    416a6b <X509_get0_pubkey_bitstr@plt+0x9b>
  416a59:	mov    (%rcx),%rax
  416a5c:	movl   $0x6,(%rdx)
  416a62:	mov    %rax,(%rsp)
  416a66:	jmpq   416cb9 <X509_get0_pubkey_bitstr@plt+0x2e9>
  416a6b:	mov    (%rsi),%al
  416a6d:	sub    $0x30,%eax
  416a70:	cmp    $0x9,%al
  416a72:	ja     416a96 <X509_get0_pubkey_bitstr@plt+0xc6>
  416a74:	movl   $0x6,(%rdx)
  416a7a:	xor    %esi,%esi
  416a7c:	mov    $0xa,%edx
  416a81:	mov    %r15,%rdi
  416a84:	callq  4155d0 <strtol@plt>
  416a89:	mov    %rax,(%rsp)
  416a8d:	mov    %rax,0x0(%r13)
  416a91:	jmpq   416cb9 <X509_get0_pubkey_bitstr@plt+0x2e9>
  416a96:	lea    0x4769b(%rip),%rsi        # 45e138 <_fini+0xc34>
  416a9d:	mov    $0x6,%edx
  416aa2:	mov    %r15,%rdi
  416aa5:	callq  4135d0 <strncmp@plt>
  416aaa:	test   %eax,%eax
  416aac:	jne    416ac4 <X509_get0_pubkey_bitstr@plt+0xf4>
  416aae:	lea    0x6(%r15),%rax
  416ab2:	movq   $0xffffffffffffffff,(%rsp)
  416aba:	mov    %rax,0x10(%rsp)
  416abf:	jmpq   416bab <X509_get0_pubkey_bitstr@plt+0x1db>
  416ac4:	mov    $0x3a,%esi
  416ac9:	mov    %r15,%rdi
  416acc:	callq  413220 <strchr@plt>
  416ad1:	test   %rax,%rax
  416ad4:	mov    %rax,%rbx
  416ad7:	je     416ae1 <X509_get0_pubkey_bitstr@plt+0x111>
  416ad9:	sub    %r15d,%eax
  416adc:	mov    %eax,(%rsp)
  416adf:	jmp    416af8 <X509_get0_pubkey_bitstr@plt+0x128>
  416ae1:	xor    %eax,%eax
  416ae3:	or     $0xffffffffffffffff,%rcx
  416ae7:	mov    %r15,%rdi
  416aea:	repnz scas %es:(%rdi),%al
  416aec:	mov    %rcx,%rdx
  416aef:	not    %rdx
  416af2:	lea    -0x1(%rdx),%eax
  416af5:	mov    %eax,(%rsp)
  416af8:	mov    (%rsp),%edx
  416afb:	lea    0x30(%rsp),%rdi
  416b00:	mov    %r15,%rsi
  416b03:	callq  413640 <EVP_PKEY_asn1_find_str@plt>
  416b08:	test   %rax,%rax
  416b0b:	mov    %rax,%r9
  416b0e:	jne    416b31 <X509_get0_pubkey_bitstr@plt+0x161>
  416b10:	mov    (%rsp),%edx
  416b13:	mov    0x8(%rsp),%rdi
  416b18:	lea    0x47620(%rip),%rsi        # 45e13f <_fini+0xc3b>
  416b1f:	mov    %r15,%rcx
  416b22:	xor    %eax,%eax
  416b24:	xor    %r12d,%r12d
  416b27:	callq  413c40 <BIO_printf@plt>
  416b2c:	jmpq   416dfe <X509_get0_pubkey_bitstr@plt+0x42e>
  416b31:	xor    %edi,%edi
  416b33:	xor    %r8d,%r8d
  416b36:	xor    %ecx,%ecx
  416b38:	xor    %edx,%edx
  416b3a:	mov    %rbp,%rsi
  416b3d:	callq  414ec0 <EVP_PKEY_asn1_get0_info@plt>
  416b42:	mov    0x30(%rsp),%rdi
  416b47:	test   %rdi,%rdi
  416b4a:	je     416b51 <X509_get0_pubkey_bitstr@plt+0x181>
  416b4c:	callq  412e70 <ENGINE_finish@plt>
  416b51:	cmpl   $0x6,0x0(%rbp)
  416b55:	jne    416b86 <X509_get0_pubkey_bitstr@plt+0x1b6>
  416b57:	test   %rbx,%rbx
  416b5a:	je     416b79 <X509_get0_pubkey_bitstr@plt+0x1a9>
  416b5c:	lea    0x1(%rbx),%rdi
  416b60:	mov    $0xa,%edx
  416b65:	xor    %esi,%esi
  416b67:	callq  4155d0 <strtol@plt>
  416b6c:	mov    %rax,(%rsp)
  416b70:	mov    %rax,0x0(%r13)
  416b74:	jmpq   416cb9 <X509_get0_pubkey_bitstr@plt+0x2e9>
  416b79:	mov    0x0(%r13),%rax
  416b7d:	mov    %rax,(%rsp)
  416b81:	jmpq   416cb9 <X509_get0_pubkey_bitstr@plt+0x2e9>
  416b86:	test   %rbx,%rbx
  416b89:	je     416b9e <X509_get0_pubkey_bitstr@plt+0x1ce>
  416b8b:	lea    0x1(%rbx),%rax
  416b8f:	movq   $0xffffffffffffffff,(%rsp)
  416b97:	mov    %rax,0x10(%rsp)
  416b9c:	jmp    416bab <X509_get0_pubkey_bitstr@plt+0x1db>
  416b9e:	movq   $0xffffffffffffffff,(%rsp)
  416ba6:	jmpq   416cb9 <X509_get0_pubkey_bitstr@plt+0x2e9>
  416bab:	mov    0x10(%rsp),%rdi
  416bb0:	test   %rdi,%rdi
  416bb3:	je     416cb9 <X509_get0_pubkey_bitstr@plt+0x2e9>
  416bb9:	lea    0x4766d(%rip),%rsi        # 45e22d <_fini+0xd29>
  416bc0:	callq  412ba0 <BIO_new_file@plt>
  416bc5:	test   %rax,%rax
  416bc8:	mov    %rax,%r15
  416bcb:	jne    416bed <X509_get0_pubkey_bitstr@plt+0x21d>
  416bcd:	mov    0x10(%rsp),%rdx
  416bd2:	mov    0x8(%rsp),%rdi
  416bd7:	lea    0x47579(%rip),%rsi        # 45e157 <_fini+0xc53>
  416bde:	xor    %eax,%eax
  416be0:	xor    %r12d,%r12d
  416be3:	callq  413c40 <BIO_printf@plt>
  416be8:	jmpq   416dfe <X509_get0_pubkey_bitstr@plt+0x42e>
  416bed:	xor    %esi,%esi
  416bef:	mov    %rax,%rdi
  416bf2:	callq  413ee0 <PEM_read_bio_Parameters@plt>
  416bf7:	test   %rax,%rax
  416bfa:	mov    %rax,%rbx
  416bfd:	jne    416c40 <X509_get0_pubkey_bitstr@plt+0x270>
  416bff:	xor    %ecx,%ecx
  416c01:	xor    %edx,%edx
  416c03:	mov    $0x1,%esi
  416c08:	mov    %r15,%rdi
  416c0b:	callq  412af0 <BIO_ctrl@plt>
  416c10:	xor    %ecx,%ecx
  416c12:	xor    %edx,%edx
  416c14:	xor    %esi,%esi
  416c16:	mov    %r15,%rdi
  416c19:	callq  4166a0 <PEM_read_bio_X509@plt>
  416c1e:	test   %rax,%rax
  416c21:	je     416c40 <X509_get0_pubkey_bitstr@plt+0x270>
  416c23:	mov    %rax,%rdi
  416c26:	mov    %rax,0x18(%rsp)
  416c2b:	callq  4161b0 <X509_get_pubkey@plt>
  416c30:	mov    0x18(%rsp),%rdx
  416c35:	mov    %rax,%rbx
  416c38:	mov    %rdx,%rdi
  416c3b:	callq  4153a0 <X509_free@plt>
  416c40:	mov    %r15,%rdi
  416c43:	callq  413960 <BIO_free@plt>
  416c48:	test   %rbx,%rbx
  416c4b:	jne    416c6d <X509_get0_pubkey_bitstr@plt+0x29d>
  416c4d:	mov    0x10(%rsp),%rdx
  416c52:	mov    0x8(%rsp),%rdi
  416c57:	lea    0x4798a(%rip),%rsi        # 45e5e8 <_fini+0x10e4>
  416c5e:	xor    %eax,%eax
  416c60:	xor    %r12d,%r12d
  416c63:	callq  413c40 <BIO_printf@plt>
  416c68:	jmpq   416dfe <X509_get0_pubkey_bitstr@plt+0x42e>
  416c6d:	mov    0x0(%rbp),%edx
  416c70:	cmp    $0xffffffff,%edx
  416c73:	jne    416c82 <X509_get0_pubkey_bitstr@plt+0x2b2>
  416c75:	mov    %rbx,%rdi
  416c78:	callq  413830 <EVP_PKEY_id@plt>
  416c7d:	mov    %eax,0x0(%rbp)
  416c80:	jmp    416cbb <X509_get0_pubkey_bitstr@plt+0x2eb>
  416c82:	mov    %rbx,%rdi
  416c85:	mov    %edx,0x10(%rsp)
  416c89:	callq  4163b0 <EVP_PKEY_base_id@plt>
  416c8e:	mov    0x10(%rsp),%edx
  416c92:	cmp    %eax,%edx
  416c94:	je     416cbb <X509_get0_pubkey_bitstr@plt+0x2eb>
  416c96:	mov    0x8(%rsp),%rdi
  416c9b:	lea    0x4796e(%rip),%rsi        # 45e610 <_fini+0x110c>
  416ca2:	xor    %eax,%eax
  416ca4:	xor    %r12d,%r12d
  416ca7:	callq  413c40 <BIO_printf@plt>
  416cac:	mov    %rbx,%rdi
  416caf:	callq  412b00 <EVP_PKEY_free@plt>
  416cb4:	jmpq   416dfe <X509_get0_pubkey_bitstr@plt+0x42e>
  416cb9:	xor    %ebx,%ebx
  416cbb:	test   %r12,%r12
  416cbe:	je     416d1d <X509_get0_pubkey_bitstr@plt+0x34d>
  416cc0:	mov    0x0(%rbp),%esi
  416cc3:	lea    0x28(%rsp),%rdi
  416cc8:	callq  4152d0 <EVP_PKEY_asn1_find@plt>
  416ccd:	test   %rax,%rax
  416cd0:	mov    %rax,%r9
  416cd3:	jne    416cee <X509_get0_pubkey_bitstr@plt+0x31e>
  416cd5:	mov    0x8(%rsp),%rdi
  416cda:	lea    0x47957(%rip),%rsi        # 45e638 <_fini+0x1134>
  416ce1:	xor    %r12d,%r12d
  416ce4:	callq  413b70 <BIO_puts@plt>
  416ce9:	jmpq   416dfe <X509_get0_pubkey_bitstr@plt+0x42e>
  416cee:	lea    0x30(%rsp),%r8
  416cf3:	xor    %ecx,%ecx
  416cf5:	xor    %edx,%edx
  416cf7:	xor    %esi,%esi
  416cf9:	xor    %edi,%edi
  416cfb:	callq  414ec0 <EVP_PKEY_asn1_get0_info@plt>
  416d00:	mov    0x30(%rsp),%rdi
  416d05:	callq  415630 <BUF_strdup@plt>
  416d0a:	mov    0x28(%rsp),%rdi
  416d0f:	mov    %rax,(%r12)
  416d13:	test   %rdi,%rdi
  416d16:	je     416d1d <X509_get0_pubkey_bitstr@plt+0x34d>
  416d18:	callq  412e70 <ENGINE_finish@plt>
  416d1d:	test   %rbx,%rbx
  416d20:	mov    %r14,%rsi
  416d23:	je     416d48 <X509_get0_pubkey_bitstr@plt+0x378>
  416d25:	mov    %rbx,%rdi
  416d28:	callq  4135e0 <EVP_PKEY_CTX_new@plt>
  416d2d:	mov    %rbx,%rdi
  416d30:	mov    %rax,%r12
  416d33:	callq  415370 <EVP_PKEY_bits@plt>
  416d38:	cltq   
  416d3a:	mov    %rbx,%rdi
  416d3d:	mov    %rax,0x0(%r13)
  416d41:	callq  412b00 <EVP_PKEY_free@plt>
  416d46:	jmp    416d53 <X509_get0_pubkey_bitstr@plt+0x383>
  416d48:	mov    0x0(%rbp),%edi
  416d4b:	callq  415530 <EVP_PKEY_CTX_new_id@plt>
  416d50:	mov    %rax,%r12
  416d53:	test   %r12,%r12
  416d56:	jne    416d79 <X509_get0_pubkey_bitstr@plt+0x3a9>
  416d58:	mov    0x8(%rsp),%rbx
  416d5d:	lea    0x47904(%rip),%rsi        # 45e668 <_fini+0x1164>
  416d64:	mov    %rbx,%rdi
  416d67:	callq  413b70 <BIO_puts@plt>
  416d6c:	mov    %rbx,%rdi
  416d6f:	callq  413f40 <ERR_print_errors@plt>
  416d74:	jmpq   416dfe <X509_get0_pubkey_bitstr@plt+0x42e>
  416d79:	mov    %r12,%rdi
  416d7c:	callq  415140 <EVP_PKEY_keygen_init@plt>
  416d81:	test   %eax,%eax
  416d83:	jg     416da6 <X509_get0_pubkey_bitstr@plt+0x3d6>
  416d85:	mov    0x8(%rsp),%rbx
  416d8a:	lea    0x478ff(%rip),%rsi        # 45e690 <_fini+0x118c>
  416d91:	xor    %r12d,%r12d
  416d94:	mov    %rbx,%rdi
  416d97:	callq  413b70 <BIO_puts@plt>
  416d9c:	mov    %rbx,%rdi
  416d9f:	callq  413f40 <ERR_print_errors@plt>
  416da4:	jmp    416dfe <X509_get0_pubkey_bitstr@plt+0x42e>
  416da6:	cmpl   $0x6,0x0(%rbp)
  416daa:	jne    416dfe <X509_get0_pubkey_bitstr@plt+0x42e>
  416dac:	mov    (%rsp),%rax
  416db0:	cmp    $0xffffffffffffffff,%rax
  416db4:	je     416dfe <X509_get0_pubkey_bitstr@plt+0x42e>
  416db6:	xor    %r9d,%r9d
  416db9:	mov    %eax,%r8d
  416dbc:	mov    $0x1003,%ecx
  416dc1:	mov    $0x4,%edx
  416dc6:	mov    $0x6,%esi
  416dcb:	mov    %r12,%rdi
  416dce:	callq  4132e0 <EVP_PKEY_CTX_ctrl@plt>
  416dd3:	test   %eax,%eax
  416dd5:	jg     416dfe <X509_get0_pubkey_bitstr@plt+0x42e>
  416dd7:	mov    0x8(%rsp),%rbx
  416ddc:	lea    0x47392(%rip),%rsi        # 45e175 <_fini+0xc71>
  416de3:	mov    %rbx,%rdi
  416de6:	callq  413b70 <BIO_puts@plt>
  416deb:	mov    %rbx,%rdi
  416dee:	callq  413f40 <ERR_print_errors@plt>
  416df3:	mov    %r12,%rdi
  416df6:	xor    %r12d,%r12d
  416df9:	callq  4143b0 <EVP_PKEY_CTX_free@plt>
  416dfe:	mov    0x38(%rsp),%rcx
  416e03:	xor    %fs:0x28,%rcx
  416e0c:	mov    %r12,%rax
  416e0f:	je     416e16 <X509_get0_pubkey_bitstr@plt+0x446>
  416e11:	callq  414c30 <__stack_chk_fail@plt>
  416e16:	add    $0x48,%rsp
  416e1a:	pop    %rbx
  416e1b:	pop    %rbp
  416e1c:	pop    %r12
  416e1e:	pop    %r13
  416e20:	pop    %r14
  416e22:	pop    %r15
  416e24:	retq   
  416e25:	push   %rbp
  416e26:	mov    %rdi,%rbp
  416e29:	mov    %rsi,%rdi
  416e2c:	mov    %rdx,%rsi
  416e2f:	mov    %ecx,%edx
  416e31:	push   %rbx
  416e32:	sub    $0x18,%rsp
  416e36:	callq  447b60 <X509_get0_pubkey_bitstr@plt+0x31190>
  416e3b:	test   %rax,%rax
  416e3e:	mov    %rax,%rbx
  416e41:	je     416e73 <X509_get0_pubkey_bitstr@plt+0x4a3>
  416e43:	mov    %rax,%rsi
  416e46:	mov    %rbp,%rdi
  416e49:	callq  412d30 <X509_REQ_set_subject_name@plt>
  416e4e:	test   %eax,%eax
  416e50:	jne    416e64 <X509_get0_pubkey_bitstr@plt+0x494>
  416e52:	mov    %rbx,%rdi
  416e55:	mov    %eax,0xc(%rsp)
  416e59:	callq  413880 <X509_NAME_free@plt>
  416e5e:	mov    0xc(%rsp),%eax
  416e62:	jmp    416e75 <X509_get0_pubkey_bitstr@plt+0x4a5>
  416e64:	mov    %rbx,%rdi
  416e67:	callq  413880 <X509_NAME_free@plt>
  416e6c:	mov    $0x1,%eax
  416e71:	jmp    416e75 <X509_get0_pubkey_bitstr@plt+0x4a5>
  416e73:	xor    %eax,%eax
  416e75:	add    $0x18,%rsp
  416e79:	pop    %rbx
  416e7a:	pop    %rbp
  416e7b:	retq   
  416e7c:	cmp    %esi,%edi
  416e7e:	push   %rcx
  416e7f:	jge    416e90 <X509_get0_pubkey_bitstr@plt+0x4c0>
  416e81:	test   %esi,%esi
  416e83:	jle    416e90 <X509_get0_pubkey_bitstr@plt+0x4c0>
  416e85:	mov    %esi,%edx
  416e87:	lea    0x4782a(%rip),%rsi        # 45e6b8 <_fini+0x11b4>
  416e8e:	jmp    416ea2 <X509_get0_pubkey_bitstr@plt+0x4d2>
  416e90:	cmp    %edx,%edi
  416e92:	jle    416eb7 <X509_get0_pubkey_bitstr@plt+0x4e7>
  416e94:	mov    %edx,%eax
  416e96:	sub    $0x0,%eax
  416e99:	js     416eb7 <X509_get0_pubkey_bitstr@plt+0x4e7>
  416e9b:	lea    0x47856(%rip),%rsi        # 45e6f8 <_fini+0x11f4>
  416ea2:	lea    0x263e97(%rip),%rax        # 67ad40 <_edata+0x38>
  416ea9:	mov    (%rax),%rdi
  416eac:	xor    %eax,%eax
  416eae:	callq  413c40 <BIO_printf@plt>
  416eb3:	xor    %eax,%eax
  416eb5:	jmp    416ebc <X509_get0_pubkey_bitstr@plt+0x4ec>
  416eb7:	mov    $0x1,%eax
  416ebc:	pop    %rdx
  416ebd:	retq   
  416ebe:	push   %r15
  416ec0:	push   %r14
  416ec2:	push   %r13
  416ec4:	push   %r12
  416ec6:	push   %rbp
  416ec7:	push   %rbx
  416ec8:	sub    $0x148,%rsp
  416ecf:	mov    0x180(%rsp),%rax
  416ed7:	mov    %rdi,0x40(%rsp)
  416edc:	mov    %rsi,0x68(%rsp)
  416ee1:	mov    %rdx,0x48(%rsp)
  416ee6:	mov    %rcx,0x80(%rsp)
  416eee:	mov    %r8,0x88(%rsp)
  416ef6:	mov    %rax,0x50(%rsp)
  416efb:	mov    0x188(%rsp),%rax
  416f03:	mov    %r9,0x10(%rsp)
  416f08:	mov    0x190(%rsp),%rbx
  416f10:	mov    0x200(%rsp),%r15d
  416f18:	mov    %rax,0x60(%rsp)
  416f1d:	mov    0x1b0(%rsp),%rax
  416f25:	mov    %rax,0x70(%rsp)
  416f2a:	mov    0x1b8(%rsp),%rax
  416f32:	mov    %rax,0x78(%rsp)
  416f37:	mov    0x1d8(%rsp),%rax
  416f3f:	mov    %rax,0x30(%rsp)
  416f44:	mov    0x1e0(%rsp),%rax
  416f4c:	mov    %rax,0x58(%rsp)
  416f51:	mov    0x1e8(%rsp),%rax
  416f59:	mov    %rax,0x90(%rsp)
  416f61:	mov    %fs:0x28,%rax
  416f6a:	mov    %rax,0x138(%rsp)
  416f72:	xor    %eax,%eax
  416f74:	callq  4139b0 <ASN1_UTCTIME_new@plt>
  416f79:	test   %rax,%rax
  416f7c:	mov    %rax,0x38(%rsp)
  416f81:	jne    416fa2 <X509_get0_pubkey_bitstr@plt+0x5d2>
  416f83:	lea    0x263db6(%rip),%rax        # 67ad40 <_edata+0x38>
  416f8a:	lea    0x49e34(%rip),%rsi        # 460dc5 <_fini+0x38c1>
  416f91:	mov    (%rax),%rdi
  416f94:	xor    %eax,%eax
  416f96:	callq  413c40 <BIO_printf@plt>
  416f9b:	xor    %eax,%eax
  416f9d:	jmpq   4176b1 <X509_get0_pubkey_bitstr@plt+0xce1>
  416fa2:	test   %rbx,%rbx
  416fa5:	movq   $0x0,0xa0(%rsp)
  416fb1:	movq   $0x0,0xa8(%rsp)
  416fbd:	movq   $0x0,0xb0(%rsp)
  416fc9:	movq   $0x0,0xb8(%rsp)
  416fd5:	movq   $0x0,0xc0(%rsp)
  416fe1:	movq   $0x0,0xc8(%rsp)
  416fed:	je     41705c <X509_get0_pubkey_bitstr@plt+0x68c>
  416fef:	mov    0x1a0(%rsp),%edx
  416ff6:	mov    0x198(%rsp),%rsi
  416ffe:	mov    %rbx,%rdi
  417001:	callq  447b60 <X509_get0_pubkey_bitstr@plt+0x31190>
  417006:	test   %rax,%rax
  417009:	mov    %rax,%rbx
  41700c:	jne    41703a <X509_get0_pubkey_bitstr@plt+0x66a>
  41700e:	lea    0x263d2b(%rip),%rax        # 67ad40 <_edata+0x38>
  417015:	or     $0xffffffff,%ebp
  417018:	xor    %r13d,%r13d
  41701b:	mov    (%rax),%rdi
  41701e:	callq  413f40 <ERR_print_errors@plt>
  417023:	movq   $0x0,0x20(%rsp)
  41702c:	movq   $0x0,0x28(%rsp)
  417035:	jmpq   41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  41703a:	mov    0x30(%rsp),%r14
  41703f:	mov    %rax,%rsi
  417042:	mov    %r14,%rdi
  417045:	callq  412d30 <X509_REQ_set_subject_name@plt>
  41704a:	mov    (%r14),%rax
  41704d:	mov    %rbx,%rdi
  417050:	movl   $0x1,0x10(%rax)
  417057:	callq  413880 <X509_NAME_free@plt>
  41705c:	test   %r15d,%r15d
  41705f:	je     417079 <X509_get0_pubkey_bitstr@plt+0x6a9>
  417061:	lea    0x263cd8(%rip),%rax        # 67ad40 <_edata+0x38>
  417068:	lea    0x4a499(%rip),%rsi        # 461508 <_fini+0x4004>
  41706f:	mov    (%rax),%rdi
  417072:	xor    %eax,%eax
  417074:	callq  413c40 <BIO_printf@plt>
  417079:	mov    0x30(%rsp),%rax
  41707e:	xor    %ebp,%ebp
  417080:	mov    (%rax),%rax
  417083:	mov    0x20(%rax),%rbx
  417087:	mov    %rbx,%rdi
  41708a:	callq  415580 <X509_NAME_entry_count@plt>
  41708f:	cmp    %eax,%ebp
  417091:	jge    4171d8 <X509_get0_pubkey_bitstr@plt+0x808>
  417097:	mov    %ebp,%esi
  417099:	mov    %rbx,%rdi
  41709c:	callq  413310 <X509_NAME_get_entry@plt>
  4170a1:	mov    %rax,%r13
  4170a4:	mov    %rax,%rdi
  4170a7:	callq  414900 <X509_NAME_ENTRY_get_data@plt>
  4170ac:	mov    %r13,%rdi
  4170af:	mov    %rax,%r12
  4170b2:	callq  414090 <X509_NAME_ENTRY_get_object@plt>
  4170b7:	cmpl   $0x0,0x264262(%rip)        # 67b320 <_edata+0x618>
  4170be:	mov    %rax,%r14
  4170c1:	je     41710e <X509_get0_pubkey_bitstr@plt+0x73e>
  4170c3:	mov    0x0(%r13),%rdi
  4170c7:	callq  4167f0 <OBJ_obj2nid@plt>
  4170cc:	cmpl   $0x1c,0x4(%r12)
  4170d2:	mov    %eax,%r13d
  4170d5:	jne    4170df <X509_get0_pubkey_bitstr@plt+0x70f>
  4170d7:	mov    %r12,%rdi
  4170da:	callq  4159a0 <ASN1_UNIVERSALSTRING_to_string@plt>
  4170df:	mov    0x4(%r12),%edx
  4170e4:	cmp    $0x16,%edx
  4170e7:	jne    4170fa <X509_get0_pubkey_bitstr@plt+0x72a>
  4170e9:	cmp    $0x30,%r13d
  4170ed:	je     41710e <X509_get0_pubkey_bitstr@plt+0x73e>
  4170ef:	movl   $0x14,0x4(%r12)
  4170f8:	jmp    41710e <X509_get0_pubkey_bitstr@plt+0x73e>
  4170fa:	cmp    $0x30,%r13d
  4170fe:	jne    41710e <X509_get0_pubkey_bitstr@plt+0x73e>
  417100:	cmp    $0x13,%edx
  417103:	jne    41710e <X509_get0_pubkey_bitstr@plt+0x73e>
  417105:	movl   $0x16,0x4(%r12)
  41710e:	mov    %r14,%rdi
  417111:	callq  4167f0 <OBJ_obj2nid@plt>
  417116:	cmp    $0x30,%eax
  417119:	jne    417129 <X509_get0_pubkey_bitstr@plt+0x759>
  41711b:	cmpl   $0x0,0x1a8(%rsp)
  417123:	je     4171d1 <X509_get0_pubkey_bitstr@plt+0x801>
  417129:	mov    %r14,%rdi
  41712c:	callq  4167f0 <OBJ_obj2nid@plt>
  417131:	cmp    $0x30,%eax
  417134:	jne    417147 <X509_get0_pubkey_bitstr@plt+0x777>
  417136:	cmpl   $0x16,0x4(%r12)
  41713c:	je     417147 <X509_get0_pubkey_bitstr@plt+0x777>
  41713e:	lea    0x4a3f3(%rip),%rsi        # 461538 <_fini+0x4034>
  417145:	jmp    417187 <X509_get0_pubkey_bitstr@plt+0x7b7>
  417147:	mov    0x4(%r12),%eax
  41714c:	cmp    $0xc,%eax
  41714f:	je     4171b7 <X509_get0_pubkey_bitstr@plt+0x7e7>
  417151:	cmp    $0x1e,%eax
  417154:	je     4171b7 <X509_get0_pubkey_bitstr@plt+0x7e7>
  417156:	mov    0x8(%r12),%rdi
  41715b:	mov    (%r12),%esi
  41715f:	callq  4141a0 <ASN1_PRINTABLE_type@plt>
  417164:	cmp    $0x14,%eax
  417167:	jne    417173 <X509_get0_pubkey_bitstr@plt+0x7a3>
  417169:	cmpl   $0x14,0x4(%r12)
  41716f:	je     4171b7 <X509_get0_pubkey_bitstr@plt+0x7e7>
  417171:	jmp    417180 <X509_get0_pubkey_bitstr@plt+0x7b0>
  417173:	cmp    $0x16,%eax
  417176:	jne    4171b7 <X509_get0_pubkey_bitstr@plt+0x7e7>
  417178:	cmpl   $0x13,0x4(%r12)
  41717e:	jne    4171b7 <X509_get0_pubkey_bitstr@plt+0x7e7>
  417180:	lea    0x4a3e9(%rip),%rsi        # 461570 <_fini+0x406c>
  417187:	lea    0x263bb2(%rip),%rax        # 67ad40 <_edata+0x38>
  41718e:	or     $0xffffffff,%ebp
  417191:	xor    %ebx,%ebx
  417193:	xor    %r13d,%r13d
  417196:	mov    (%rax),%rdi
  417199:	xor    %eax,%eax
  41719b:	callq  413c40 <BIO_printf@plt>
  4171a0:	movq   $0x0,0x20(%rsp)
  4171a9:	movq   $0x0,0x28(%rsp)
  4171b2:	jmpq   41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  4171b7:	test   %r15d,%r15d
  4171ba:	je     4171d1 <X509_get0_pubkey_bitstr@plt+0x801>
  4171bc:	lea    0x263b7d(%rip),%rax        # 67ad40 <_edata+0x38>
  4171c3:	mov    %r12,%rdx
  4171c6:	mov    %r14,%rsi
  4171c9:	mov    (%rax),%rdi
  4171cc:	callq  424de0 <X509_get0_pubkey_bitstr@plt+0xe410>
  4171d1:	inc    %ebp
  4171d3:	jmpq   417087 <X509_get0_pubkey_bitstr@plt+0x6b7>
  4171d8:	callq  4156e0 <X509_NAME_new@plt>
  4171dd:	test   %rax,%rax
  4171e0:	mov    %rax,0x20(%rsp)
  4171e5:	jne    417215 <X509_get0_pubkey_bitstr@plt+0x845>
  4171e7:	lea    0x263b52(%rip),%rax        # 67ad40 <_edata+0x38>
  4171ee:	lea    0x46acf(%rip),%rsi        # 45dcc4 <_fini+0x7c0>
  4171f5:	xor    %r13d,%r13d
  4171f8:	or     $0xffffffff,%ebp
  4171fb:	xor    %ebx,%ebx
  4171fd:	mov    (%rax),%rdi
  417200:	xor    %eax,%eax
  417202:	callq  413c40 <BIO_printf@plt>
  417207:	movq   $0x0,0x28(%rsp)
  417210:	jmpq   41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  417215:	cmpl   $0x0,0x210(%rsp)
  41721d:	je     41722e <X509_get0_pubkey_bitstr@plt+0x85e>
  41721f:	mov    %rbx,%rdi
  417222:	callq  416940 <X509_NAME_dup@plt>
  417227:	mov    %rax,0x28(%rsp)
  41722c:	jmp    417244 <X509_get0_pubkey_bitstr@plt+0x874>
  41722e:	mov    0x48(%rsp),%rax
  417233:	mov    (%rax),%rax
  417236:	mov    0x28(%rax),%rdi
  41723a:	callq  416940 <X509_NAME_dup@plt>
  41723f:	mov    %rax,0x28(%rsp)
  417244:	cmpq   $0x0,0x28(%rsp)
  41724a:	je     41733f <X509_get0_pubkey_bitstr@plt+0x96f>
  417250:	movl   $0x0,0x98(%rsp)
  41725b:	movq   $0x0,0x8(%rsp)
  417264:	xor    %r13d,%r13d
  417267:	mov    %rbx,(%rsp)
  41726b:	mov    %r15d,0x200(%rsp)
  417273:	jmp    4172e0 <X509_get0_pubkey_bitstr@plt+0x910>
  417275:	mov    %eax,%edi
  417277:	or     $0xffffffff,%r12d
  41727b:	callq  415950 <OBJ_nid2obj@plt>
  417280:	mov    %rax,%rbp
  417283:	mov    (%rsp),%rdi
  417287:	mov    %r12d,%edx
  41728a:	mov    %rbp,%rsi
  41728d:	callq  415740 <X509_NAME_get_index_by_OBJ@plt>
  417292:	test   %eax,%eax
  417294:	mov    %eax,%ebx
  417296:	jns    41734c <X509_get0_pubkey_bitstr@plt+0x97c>
  41729c:	inc    %r12d
  41729f:	jne    4172d9 <X509_get0_pubkey_bitstr@plt+0x909>
  4172a1:	xor    %r15d,%r15d
  4172a4:	mov    0x18(%rsp),%rax
  4172a9:	lea    0x49b23(%rip),%rsi        # 460dd3 <_fini+0x38cf>
  4172b0:	mov    0x10(%rax),%r12
  4172b4:	mov    %r12,%rdi
  4172b7:	callq  4155c0 <strcmp@plt>
  4172bc:	test   %eax,%eax
  4172be:	jne    41735f <X509_get0_pubkey_bitstr@plt+0x98f>
  4172c4:	test   %r15,%r15
  4172c7:	mov    %ebx,%r14d
  4172ca:	jne    417476 <X509_get0_pubkey_bitstr@plt+0xaa6>
  4172d0:	test   %r14d,%r14d
  4172d3:	jns    4174bd <X509_get0_pubkey_bitstr@plt+0xaed>
  4172d9:	incl   0x98(%rsp)
  4172e0:	mov    0x10(%rsp),%rdi
  4172e5:	callq  4156d0 <sk_num@plt>
  4172ea:	cmp    %eax,0x98(%rsp)
  4172f1:	jge    4174c5 <X509_get0_pubkey_bitstr@plt+0xaf5>
  4172f7:	mov    0x98(%rsp),%esi
  4172fe:	mov    0x10(%rsp),%rdi
  417303:	callq  412b30 <sk_value@plt>
  417308:	mov    0x8(%rax),%rdi
  41730c:	mov    %rax,0x18(%rsp)
  417311:	callq  413720 <OBJ_txt2nid@plt>
  417316:	test   %eax,%eax
  417318:	jne    417275 <X509_get0_pubkey_bitstr@plt+0x8a5>
  41731e:	mov    0x18(%rsp),%rax
  417323:	lea    0x4a28e(%rip),%rsi        # 4615b8 <_fini+0x40b4>
  41732a:	mov    0x8(%rax),%rdx
  41732e:	lea    0x263a0b(%rip),%rax        # 67ad40 <_edata+0x38>
  417335:	mov    (%rax),%rdi
  417338:	xor    %eax,%eax
  41733a:	callq  413c40 <BIO_printf@plt>
  41733f:	or     $0xffffffff,%ebp
  417342:	xor    %ebx,%ebx
  417344:	xor    %r13d,%r13d
  417347:	jmpq   41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  41734c:	mov    (%rsp),%rdi
  417350:	mov    %eax,%esi
  417352:	callq  413310 <X509_NAME_get_entry@plt>
  417357:	mov    %rax,%r15
  41735a:	jmpq   4172a4 <X509_get0_pubkey_bitstr@plt+0x8d4>
  41735f:	lea    0x49a76(%rip),%rsi        # 460ddc <_fini+0x38d8>
  417366:	mov    %r12,%rdi
  417369:	callq  4155c0 <strcmp@plt>
  41736e:	test   %eax,%eax
  417370:	jne    41738d <X509_get0_pubkey_bitstr@plt+0x9bd>
  417372:	test   %r15,%r15
  417375:	jne    41745a <X509_get0_pubkey_bitstr@plt+0xa8a>
  41737b:	mov    0x18(%rsp),%rax
  417380:	lea    0x4a269(%rip),%rsi        # 4615f0 <_fini+0x40ec>
  417387:	mov    0x8(%rax),%rdx
  41738b:	jmp    41732e <X509_get0_pubkey_bitstr@plt+0x95e>
  41738d:	lea    0x49a51(%rip),%rsi        # 460de5 <_fini+0x38e1>
  417394:	mov    %r12,%rdi
  417397:	callq  4155c0 <strcmp@plt>
  41739c:	test   %eax,%eax
  41739e:	jne    41744b <X509_get0_pubkey_bitstr@plt+0xa7b>
  4173a4:	test   %r15,%r15
  4173a7:	jne    4173be <X509_get0_pubkey_bitstr@plt+0x9ee>
  4173a9:	mov    0x18(%rsp),%rax
  4173ae:	lea    0x4a273(%rip),%rsi        # 461628 <_fini+0x4124>
  4173b5:	mov    0x8(%rax),%rdx
  4173b9:	jmpq   41732e <X509_get0_pubkey_bitstr@plt+0x95e>
  4173be:	mov    %ebx,0x9c(%rsp)
  4173c5:	mov    0x28(%rsp),%rbx
  4173ca:	or     $0xffffffff,%r12d
  4173ce:	mov    0x8(%rsp),%r14
  4173d3:	mov    %r15,0x8(%rsp)
  4173d8:	mov    %r12d,%edx
  4173db:	mov    %rbp,%rsi
  4173de:	mov    %rbx,%rdi
  4173e1:	callq  415740 <X509_NAME_get_index_by_OBJ@plt>
  4173e6:	inc    %r12d
  4173e9:	mov    %eax,%r15d
  4173ec:	jne    417408 <X509_get0_pubkey_bitstr@plt+0xa38>
  4173ee:	shr    $0x1f,%eax
  4173f1:	je     417408 <X509_get0_pubkey_bitstr@plt+0xa38>
  4173f3:	mov    0x18(%rsp),%rax
  4173f8:	lea    0x4a251(%rip),%rsi        # 461650 <_fini+0x414c>
  4173ff:	mov    0x8(%rax),%rdx
  417403:	jmpq   41732e <X509_get0_pubkey_bitstr@plt+0x95e>
  417408:	test   %r15d,%r15d
  41740b:	js     4176cd <X509_get0_pubkey_bitstr@plt+0xcfd>
  417411:	mov    %r15d,%esi
  417414:	mov    %rbx,%rdi
  417417:	callq  413310 <X509_NAME_get_entry@plt>
  41741c:	mov    0x8(%rsp),%rdi
  417421:	mov    %rax,%r12
  417424:	callq  414900 <X509_NAME_ENTRY_get_data@plt>
  417429:	mov    %r12,%rdi
  41742c:	mov    %rax,%r13
  41742f:	callq  414900 <X509_NAME_ENTRY_get_data@plt>
  417434:	mov    %r13,%rdi
  417437:	mov    %rax,%rsi
  41743a:	mov    %rax,%r14
  41743d:	callq  4151c0 <ASN1_STRING_cmp@plt>
  417442:	test   %eax,%eax
  417444:	je     41745f <X509_get0_pubkey_bitstr@plt+0xa8f>
  417446:	mov    %r15d,%r12d
  417449:	jmp    4173d8 <X509_get0_pubkey_bitstr@plt+0xa08>
  41744b:	mov    %r12,%rdx
  41744e:	lea    0x4a2ab(%rip),%rsi        # 461700 <_fini+0x41fc>
  417455:	jmpq   41732e <X509_get0_pubkey_bitstr@plt+0x95e>
  41745a:	mov    %ebx,%r14d
  41745d:	jmp    417476 <X509_get0_pubkey_bitstr@plt+0xaa6>
  41745f:	test   %r12,%r12
  417462:	mov    %r14,0x8(%rsp)
  417467:	mov    0x9c(%rsp),%ebx
  41746e:	mov    %r15d,%r14d
  417471:	je     4174bd <X509_get0_pubkey_bitstr@plt+0xaed>
  417473:	mov    %r12,%r15
  417476:	mov    0x20(%rsp),%rdi
  41747b:	xor    %ecx,%ecx
  41747d:	or     $0xffffffff,%edx
  417480:	mov    %r15,%rsi
  417483:	callq  4169c0 <X509_NAME_add_entry@plt>
  417488:	test   %eax,%eax
  41748a:	jne    4172d0 <X509_get0_pubkey_bitstr@plt+0x900>
  417490:	mov    %r15,%rdi
  417493:	or     $0xffffffff,%ebp
  417496:	xor    %ebx,%ebx
  417498:	callq  413fe0 <X509_NAME_ENTRY_free@plt>
  41749d:	lea    0x26389c(%rip),%rax        # 67ad40 <_edata+0x38>
  4174a4:	lea    0x46819(%rip),%rsi        # 45dcc4 <_fini+0x7c0>
  4174ab:	xor    %r13d,%r13d
  4174ae:	mov    (%rax),%rdi
  4174b1:	xor    %eax,%eax
  4174b3:	callq  413c40 <BIO_printf@plt>
  4174b8:	jmpq   41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  4174bd:	mov    %ebx,%r12d
  4174c0:	jmpq   417283 <X509_get0_pubkey_bitstr@plt+0x8b3>
  4174c5:	cmpl   $0x0,0x263e58(%rip)        # 67b324 <_edata+0x61c>
  4174cc:	mov    (%rsp),%rbx
  4174d0:	mov    0x200(%rsp),%r15d
  4174d8:	je     4174fa <X509_get0_pubkey_bitstr@plt+0xb2a>
  4174da:	mov    0x20(%rsp),%rdi
  4174df:	callq  413880 <X509_NAME_free@plt>
  4174e4:	mov    %rbx,%rdi
  4174e7:	callq  416940 <X509_NAME_dup@plt>
  4174ec:	test   %rax,%rax
  4174ef:	mov    %rax,0x20(%rsp)
  4174f4:	je     417624 <X509_get0_pubkey_bitstr@plt+0xc54>
  4174fa:	cmpl   $0x0,0x1d0(%rsp)
  417502:	je     41751c <X509_get0_pubkey_bitstr@plt+0xb4c>
  417504:	lea    0x263835(%rip),%rax        # 67ad40 <_edata+0x38>
  41750b:	lea    0x4a21e(%rip),%rsi        # 461730 <_fini+0x422c>
  417512:	mov    (%rax),%rdi
  417515:	xor    %eax,%eax
  417517:	callq  413c40 <BIO_printf@plt>
  41751c:	cmpl   $0x0,0x1a8(%rsp)
  417524:	mov    0x20(%rsp),%r13
  417529:	jne    417572 <X509_get0_pubkey_bitstr@plt+0xba2>
  41752b:	mov    %r13,%rdi
  41752e:	callq  416940 <X509_NAME_dup@plt>
  417533:	test   %rax,%rax
  417536:	mov    %rax,%r13
  417539:	je     4175b0 <X509_get0_pubkey_bitstr@plt+0xbe0>
  41753b:	or     $0xffffffff,%edx
  41753e:	mov    $0x30,%esi
  417543:	mov    %r13,%rdi
  417546:	callq  413f90 <X509_NAME_get_index_by_NID@plt>
  41754b:	test   %eax,%eax
  41754d:	mov    %eax,%ebx
  41754f:	js     417572 <X509_get0_pubkey_bitstr@plt+0xba2>
  417551:	mov    %ebx,%esi
  417553:	mov    %r13,%rdi
  417556:	callq  413310 <X509_NAME_get_entry@plt>
  41755b:	mov    %r13,%rdi
  41755e:	mov    %rax,%rbp
  417561:	mov    %ebx,%esi
  417563:	callq  415340 <X509_NAME_delete_entry@plt>
  417568:	mov    %rbp,%rdi
  41756b:	callq  413fe0 <X509_NAME_ENTRY_free@plt>
  417570:	jmp    41753b <X509_get0_pubkey_bitstr@plt+0xb6b>
  417572:	mov    0x60(%rsp),%rax
  417577:	cmpl   $0x0,0x8(%rax)
  41757b:	jne    417593 <X509_get0_pubkey_bitstr@plt+0xbc3>
  41757d:	lea    0x4d613(%rip),%rdi        # 464b97 <_fini+0x7693>
  417584:	callq  415630 <BUF_strdup@plt>
  417589:	mov    %rax,0xb8(%rsp)
  417591:	jmp    4175a5 <X509_get0_pubkey_bitstr@plt+0xbd5>
  417593:	mov    0x60(%rsp),%rdi
  417598:	callq  414930 <BN_bn2hex@plt>
  41759d:	mov    %rax,0xb8(%rsp)
  4175a5:	cmpq   $0x0,0xb8(%rsp)
  4175ae:	jne    4175cf <X509_get0_pubkey_bitstr@plt+0xbff>
  4175b0:	lea    0x263789(%rip),%rax        # 67ad40 <_edata+0x38>
  4175b7:	lea    0x46706(%rip),%rsi        # 45dcc4 <_fini+0x7c0>
  4175be:	or     $0xffffffff,%ebp
  4175c1:	xor    %ebx,%ebx
  4175c3:	mov    (%rax),%rdi
  4175c6:	xor    %eax,%eax
  4175c8:	callq  413c40 <BIO_printf@plt>
  4175cd:	jmp    41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  4175cf:	mov    0x50(%rsp),%rax
  4175d4:	cmpl   $0x0,(%rax)
  4175d7:	je     417727 <X509_get0_pubkey_bitstr@plt+0xd57>
  4175dd:	mov    0x8(%rax),%rdi
  4175e1:	lea    0xa0(%rsp),%rdx
  4175e9:	mov    $0x5,%esi
  4175ee:	callq  413420 <TXT_DB_get_by_index@plt>
  4175f3:	test   %rax,%rax
  4175f6:	mov    %rax,%rbx
  4175f9:	je     417727 <X509_get0_pubkey_bitstr@plt+0xd57>
  4175ff:	lea    0x26373a(%rip),%rax        # 67ad40 <_edata+0x38>
  417606:	mov    0xc8(%rsp),%rdx
  41760e:	lea    0x4a163(%rip),%rsi        # 461778 <_fini+0x4274>
  417615:	mov    (%rax),%rdi
  417618:	xor    %eax,%eax
  41761a:	callq  413c40 <BIO_printf@plt>
  41761f:	jmpq   417781 <X509_get0_pubkey_bitstr@plt+0xdb1>
  417624:	xor    %r13d,%r13d
  417627:	or     $0xffffffff,%ebp
  41762a:	xor    %ebx,%ebx
  41762c:	xor    %r12d,%r12d
  41762f:	mov    0xa0(%rsp,%r12,1),%rdi
  417637:	test   %rdi,%rdi
  41763a:	je     417641 <X509_get0_pubkey_bitstr@plt+0xc71>
  41763c:	callq  415020 <CRYPTO_free@plt>
  417641:	add    $0x8,%r12
  417645:	cmp    $0x30,%r12
  417649:	jne    41762f <X509_get0_pubkey_bitstr@plt+0xc5f>
  41764b:	mov    0x28(%rsp),%rdi
  417650:	test   %rdi,%rdi
  417653:	je     41765a <X509_get0_pubkey_bitstr@plt+0xc8a>
  417655:	callq  413880 <X509_NAME_free@plt>
  41765a:	mov    0x20(%rsp),%rdi
  41765f:	test   %rdi,%rdi
  417662:	je     417669 <X509_get0_pubkey_bitstr@plt+0xc99>
  417664:	callq  413880 <X509_NAME_free@plt>
  417669:	test   %r13,%r13
  41766c:	je     417680 <X509_get0_pubkey_bitstr@plt+0xcb0>
  41766e:	cmpl   $0x0,0x1a8(%rsp)
  417676:	jne    417680 <X509_get0_pubkey_bitstr@plt+0xcb0>
  417678:	mov    %r13,%rdi
  41767b:	callq  413880 <X509_NAME_free@plt>
  417680:	mov    0x38(%rsp),%rdi
  417685:	callq  412eb0 <ASN1_UTCTIME_free@plt>
  41768a:	cmp    $0x1,%ebp
  41768d:	je     4176a0 <X509_get0_pubkey_bitstr@plt+0xcd0>
  41768f:	test   %rbx,%rbx
  417692:	je     4176af <X509_get0_pubkey_bitstr@plt+0xcdf>
  417694:	mov    %rbx,%rdi
  417697:	callq  4153a0 <X509_free@plt>
  41769c:	mov    %ebp,%eax
  41769e:	jmp    4176b1 <X509_get0_pubkey_bitstr@plt+0xce1>
  4176a0:	mov    0x40(%rsp),%rax
  4176a5:	mov    %rbx,(%rax)
  4176a8:	mov    $0x1,%eax
  4176ad:	jmp    4176b1 <X509_get0_pubkey_bitstr@plt+0xce1>
  4176af:	mov    %ebp,%eax
  4176b1:	mov    0x138(%rsp),%rcx
  4176b9:	xor    %fs:0x28,%rcx
  4176c2:	je     417f31 <X509_get0_pubkey_bitstr@plt+0x1561>
  4176c8:	callq  414c30 <__stack_chk_fail@plt>
  4176cd:	test   %r13,%r13
  4176d0:	mov    %r14,0x8(%rsp)
  4176d5:	lea    0x465dc(%rip),%r8        # 45dcb8 <_fini+0x7b4>
  4176dc:	je     4176e2 <X509_get0_pubkey_bitstr@plt+0xd12>
  4176de:	mov    0x8(%r13),%r8
  4176e2:	mov    0x8(%rsp),%rax
  4176e7:	test   %rax,%rax
  4176ea:	je     4176f2 <X509_get0_pubkey_bitstr@plt+0xd22>
  4176ec:	mov    0x8(%rax),%rcx
  4176f0:	jmp    4176f9 <X509_get0_pubkey_bitstr@plt+0xd29>
  4176f2:	lea    0x465bf(%rip),%rcx        # 45dcb8 <_fini+0x7b4>
  4176f9:	mov    0x18(%rsp),%rax
  4176fe:	lea    0x49fa3(%rip),%rsi        # 4616a8 <_fini+0x41a4>
  417705:	or     $0xffffffff,%ebp
  417708:	xor    %ebx,%ebx
  41770a:	xor    %r13d,%r13d
  41770d:	mov    0x8(%rax),%rdx
  417711:	lea    0x263628(%rip),%rax        # 67ad40 <_edata+0x38>
  417718:	mov    (%rax),%rdi
  41771b:	xor    %eax,%eax
  41771d:	callq  413c40 <BIO_printf@plt>
  417722:	jmpq   41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  417727:	mov    0x50(%rsp),%rax
  41772c:	lea    0xa0(%rsp),%rdx
  417734:	mov    $0x3,%esi
  417739:	mov    0x8(%rax),%rdi
  41773d:	callq  413420 <TXT_DB_get_by_index@plt>
  417742:	test   %rax,%rax
  417745:	mov    %rax,%rbx
  417748:	je     41788c <X509_get0_pubkey_bitstr@plt+0xebc>
  41774e:	lea    0x2635eb(%rip),%rbp        # 67ad40 <_edata+0x38>
  417755:	mov    0xb8(%rsp),%rdx
  41775d:	lea    0x4a044(%rip),%rsi        # 4617a8 <_fini+0x42a4>
  417764:	xor    %eax,%eax
  417766:	mov    0x0(%rbp),%rdi
  41776a:	callq  413c40 <BIO_printf@plt>
  41776f:	mov    0x0(%rbp),%rdi
  417773:	lea    0x4a066(%rip),%rsi        # 4617e0 <_fini+0x42dc>
  41777a:	xor    %eax,%eax
  41777c:	callq  413c40 <BIO_printf@plt>
  417781:	lea    0x2635b8(%rip),%rbp        # 67ad40 <_edata+0x38>
  417788:	lea    0x4a221(%rip),%rsi        # 4619b0 <_fini+0x44ac>
  41778f:	xor    %eax,%eax
  417791:	mov    0x0(%rbp),%rdi
  417795:	callq  413c40 <BIO_printf@plt>
  41779a:	mov    (%rbx),%rax
  41779d:	lea    0x49605(%rip),%rdx        # 460da9 <_fini+0x38a5>
  4177a4:	mov    (%rax),%al
  4177a6:	cmp    $0x45,%al
  4177a8:	je     4177c9 <X509_get0_pubkey_bitstr@plt+0xdf9>
  4177aa:	cmp    $0x52,%al
  4177ac:	lea    0x495fe(%rip),%rdx        # 460db1 <_fini+0x38ad>
  4177b3:	je     4177c9 <X509_get0_pubkey_bitstr@plt+0xdf9>
  4177b5:	cmp    $0x56,%al
  4177b7:	lea    0x495fb(%rip),%rdx        # 460db9 <_fini+0x38b5>
  4177be:	lea    0x49d23(%rip),%rax        # 4614e8 <_fini+0x3fe4>
  4177c5:	cmovne %rax,%rdx
  4177c9:	mov    0x0(%rbp),%rdi
  4177cd:	lea    0x49617(%rip),%rsi        # 460deb <_fini+0x38e7>
  4177d4:	xor    %eax,%eax
  4177d6:	callq  413c40 <BIO_printf@plt>
  4177db:	mov    (%rbx),%rax
  4177de:	cmpb   $0x52,(%rax)
  4177e1:	jne    417807 <X509_get0_pubkey_bitstr@plt+0xe37>
  4177e3:	mov    0x8(%rbx),%rdx
  4177e7:	lea    0x495d1(%rip),%rax        # 460dbf <_fini+0x38bb>
  4177ee:	mov    0x0(%rbp),%rdi
  4177f2:	lea    0x495fe(%rip),%rsi        # 460df7 <_fini+0x38f3>
  4177f9:	test   %rdx,%rdx
  4177fc:	cmove  %rax,%rdx
  417800:	xor    %eax,%eax
  417802:	callq  413c40 <BIO_printf@plt>
  417807:	mov    0x8(%rbx),%rdx
  41780b:	lea    0x495ad(%rip),%r12        # 460dbf <_fini+0x38bb>
  417812:	mov    0x0(%rbp),%rdi
  417816:	lea    0x495ed(%rip),%rsi        # 460e0a <_fini+0x3906>
  41781d:	test   %rdx,%rdx
  417820:	cmove  %r12,%rdx
  417824:	xor    %eax,%eax
  417826:	callq  413c40 <BIO_printf@plt>
  41782b:	mov    0x18(%rbx),%rdx
  41782f:	mov    0x0(%rbp),%rdi
  417833:	lea    0x495e3(%rip),%rsi        # 460e1d <_fini+0x3919>
  41783a:	test   %rdx,%rdx
  41783d:	cmove  %r12,%rdx
  417841:	xor    %eax,%eax
  417843:	callq  413c40 <BIO_printf@plt>
  417848:	mov    0x20(%rbx),%rdx
  41784c:	mov    0x0(%rbp),%rdi
  417850:	lea    0x495d9(%rip),%rsi        # 460e30 <_fini+0x392c>
  417857:	test   %rdx,%rdx
  41785a:	cmove  %r12,%rdx
  41785e:	xor    %eax,%eax
  417860:	callq  413c40 <BIO_printf@plt>
  417865:	mov    0x28(%rbx),%rdx
  417869:	mov    0x0(%rbp),%rdi
  41786d:	lea    0x495cf(%rip),%rsi        # 460e43 <_fini+0x393f>
  417874:	test   %rdx,%rdx
  417877:	cmove  %r12,%rdx
  41787b:	xor    %eax,%eax
  41787d:	or     $0xffffffff,%ebp
  417880:	callq  413c40 <BIO_printf@plt>
  417885:	xor    %ebx,%ebx
  417887:	jmpq   41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  41788c:	cmpl   $0x0,0x1d0(%rsp)
  417894:	je     4178ae <X509_get0_pubkey_bitstr@plt+0xede>
  417896:	lea    0x2634a3(%rip),%rax        # 67ad40 <_edata+0x38>
  41789d:	lea    0x49f74(%rip),%rsi        # 461818 <_fini+0x4314>
  4178a4:	mov    (%rax),%rdi
  4178a7:	xor    %eax,%eax
  4178a9:	callq  413c40 <BIO_printf@plt>
  4178ae:	callq  413ec0 <X509_new@plt>
  4178b3:	or     $0xffffffff,%ebp
  4178b6:	test   %rax,%rax
  4178b9:	mov    %rax,%rbx
  4178bc:	je     41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  4178c2:	mov    (%rax),%r12
  4178c5:	mov    0x60(%rsp),%rdi
  4178ca:	mov    0x8(%r12),%rsi
  4178cf:	callq  412da0 <BN_to_ASN1_INTEGER@plt>
  4178d4:	test   %rax,%rax
  4178d7:	je     41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  4178dd:	cmpl   $0x0,0x210(%rsp)
  4178e5:	je     417924 <X509_get0_pubkey_bitstr@plt+0xf54>
  4178e7:	mov    0x20(%rsp),%rsi
  4178ec:	mov    %rbx,%rdi
  4178ef:	callq  4159c0 <X509_set_issuer_name@plt>
  4178f4:	test   %eax,%eax
  4178f6:	je     41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  4178fc:	mov    0x70(%rsp),%rdi
  417901:	lea    0x4954e(%rip),%rsi        # 460e56 <_fini+0x3952>
  417908:	callq  4155c0 <strcmp@plt>
  41790d:	test   %eax,%eax
  41790f:	mov    (%rbx),%rax
  417912:	jne    417943 <X509_get0_pubkey_bitstr@plt+0xf73>
  417914:	mov    0x20(%rax),%rax
  417918:	xor    %esi,%esi
  41791a:	mov    (%rax),%rdi
  41791d:	callq  4164f0 <X509_gmtime_adj@plt>
  417922:	jmp    417954 <X509_get0_pubkey_bitstr@plt+0xf84>
  417924:	mov    0x48(%rsp),%rdi
  417929:	callq  414400 <X509_get_subject_name@plt>
  41792e:	mov    %rbx,%rdi
  417931:	mov    %rax,%rsi
  417934:	callq  4159c0 <X509_set_issuer_name@plt>
  417939:	test   %eax,%eax
  41793b:	je     41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  417941:	jmp    4178fc <X509_get0_pubkey_bitstr@plt+0xf2c>
  417943:	mov    0x20(%rax),%rax
  417947:	mov    0x70(%rsp),%rsi
  41794c:	mov    (%rax),%rdi
  41794f:	callq  4148f0 <ASN1_TIME_set_string@plt>
  417954:	mov    (%rbx),%rax
  417957:	cmpq   $0x0,0x78(%rsp)
  41795d:	mov    0x20(%rax),%rax
  417961:	mov    0x8(%rax),%rdi
  417965:	jne    417979 <X509_get0_pubkey_bitstr@plt+0xfa9>
  417967:	mov    0x1c0(%rsp),%esi
  41796e:	xor    %ecx,%ecx
  417970:	xor    %edx,%edx
  417972:	callq  413f50 <X509_time_adj_ex@plt>
  417977:	jmp    417983 <X509_get0_pubkey_bitstr@plt+0xfb3>
  417979:	mov    0x78(%rsp),%rsi
  41797e:	callq  4148f0 <ASN1_TIME_set_string@plt>
  417983:	mov    0x20(%rsp),%rsi
  417988:	mov    %rbx,%rdi
  41798b:	or     $0xffffffff,%ebp
  41798e:	callq  413ea0 <X509_set_subject_name@plt>
  417993:	test   %eax,%eax
  417995:	je     41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  41799b:	mov    0x30(%rsp),%rdi
  4179a0:	callq  413b00 <X509_REQ_get_pubkey@plt>
  4179a5:	mov    %rbx,%rdi
  4179a8:	mov    %rax,%r14
  4179ab:	mov    %rax,%rsi
  4179ae:	callq  416930 <X509_set_pubkey@plt>
  4179b3:	mov    %r14,%rdi
  4179b6:	mov    %eax,0x98(%rsp)
  4179bd:	callq  412b00 <EVP_PKEY_free@plt>
  4179c2:	mov    0x98(%rsp),%eax
  4179c9:	test   %eax,%eax
  4179cb:	je     41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  4179d1:	cmpq   $0x0,0x58(%rsp)
  4179d7:	je     417b5e <X509_get0_pubkey_bitstr@plt+0x118e>
  4179dd:	cmpq   $0x0,(%r12)
  4179e2:	je     417a0a <X509_get0_pubkey_bitstr@plt+0x103a>
  4179e4:	mov    (%r12),%rdi
  4179e8:	mov    $0x2,%esi
  4179ed:	callq  416340 <ASN1_INTEGER_set@plt>
  4179f2:	mov    0x48(%r12),%rdi
  4179f7:	test   %rdi,%rdi
  4179fa:	je     417a1d <X509_get0_pubkey_bitstr@plt+0x104d>
  4179fc:	mov    0x25e5bd(%rip),%rsi        # 675fc0 <_fini+0x218abc>
  417a03:	callq  416250 <sk_pop_free@plt>
  417a08:	jmp    417a1d <X509_get0_pubkey_bitstr@plt+0x104d>
  417a0a:	callq  4162e0 <ASN1_INTEGER_new@plt>
  417a0f:	test   %rax,%rax
  417a12:	mov    %rax,(%r12)
  417a16:	jne    4179e4 <X509_get0_pubkey_bitstr@plt+0x1014>
  417a18:	jmpq   417e50 <X509_get0_pubkey_bitstr@plt+0x1480>
  417a1d:	xor    %r9d,%r9d
  417a20:	xor    %r8d,%r8d
  417a23:	cmpl   $0x0,0x210(%rsp)
  417a2b:	movq   $0x0,0x48(%r12)
  417a34:	mov    0x30(%rsp),%rcx
  417a39:	mov    %rbx,%rdx
  417a3c:	lea    0xd0(%rsp),%rdi
  417a44:	je     417a50 <X509_get0_pubkey_bitstr@plt+0x1080>
  417a46:	mov    %rbx,%rsi
  417a49:	callq  413910 <X509V3_set_ctx@plt>
  417a4e:	jmp    417a5a <X509_get0_pubkey_bitstr@plt+0x108a>
  417a50:	mov    0x48(%rsp),%rsi
  417a55:	callq  413910 <X509V3_set_ctx@plt>
  417a5a:	cmpq   $0x0,0x2638ce(%rip)        # 67b330 <_edata+0x628>
  417a62:	je     417ae0 <X509_get0_pubkey_bitstr@plt+0x1110>
  417a64:	cmpl   $0x0,0x1d0(%rsp)
  417a6c:	je     417a86 <X509_get0_pubkey_bitstr@plt+0x10b6>
  417a6e:	lea    0x2632cb(%rip),%rax        # 67ad40 <_edata+0x38>
  417a75:	lea    0x49de4(%rip),%rsi        # 461860 <_fini+0x435c>
  417a7c:	mov    (%rax),%rdi
  417a7f:	xor    %eax,%eax
  417a81:	callq  413c40 <BIO_printf@plt>
  417a86:	lea    0xd0(%rsp),%rbp
  417a8e:	mov    0x26389b(%rip),%rsi        # 67b330 <_edata+0x628>
  417a95:	mov    %rbp,%rdi
  417a98:	callq  4155a0 <X509V3_set_nconf@plt>
  417a9d:	mov    0x58(%rsp),%rdx
  417aa2:	mov    0x263887(%rip),%rdi        # 67b330 <_edata+0x628>
  417aa9:	mov    %rbx,%rcx
  417aac:	mov    %rbp,%rsi
  417aaf:	callq  4168d0 <X509V3_EXT_add_nconf@plt>
  417ab4:	test   %eax,%eax
  417ab6:	je     417b12 <X509_get0_pubkey_bitstr@plt+0x1142>
  417ab8:	cmpl   $0x0,0x1d0(%rsp)
  417ac0:	je     417b5e <X509_get0_pubkey_bitstr@plt+0x118e>
  417ac6:	lea    0x263273(%rip),%rax        # 67ad40 <_edata+0x38>
  417acd:	lea    0x49dd4(%rip),%rsi        # 4618a8 <_fini+0x43a4>
  417ad4:	mov    (%rax),%rdi
  417ad7:	xor    %eax,%eax
  417ad9:	callq  413c40 <BIO_printf@plt>
  417ade:	jmp    417b5e <X509_get0_pubkey_bitstr@plt+0x118e>
  417ae0:	mov    0x90(%rsp),%r14
  417ae8:	lea    0xd0(%rsp),%rbp
  417af0:	mov    %rbp,%rdi
  417af3:	mov    %r14,%rsi
  417af6:	callq  4155a0 <X509V3_set_nconf@plt>
  417afb:	mov    0x58(%rsp),%rdx
  417b00:	mov    %rbx,%rcx
  417b03:	mov    %rbp,%rsi
  417b06:	mov    %r14,%rdi
  417b09:	callq  4168d0 <X509V3_EXT_add_nconf@plt>
  417b0e:	test   %eax,%eax
  417b10:	jne    417b3c <X509_get0_pubkey_bitstr@plt+0x116c>
  417b12:	lea    0x263227(%rip),%rbp        # 67ad40 <_edata+0x38>
  417b19:	mov    0x58(%rsp),%rdx
  417b1e:	lea    0x49d5b(%rip),%rsi        # 461880 <_fini+0x437c>
  417b25:	mov    0x0(%rbp),%rdi
  417b29:	callq  413c40 <BIO_printf@plt>
  417b2e:	mov    0x0(%rbp),%rdi
  417b32:	callq  413f40 <ERR_print_errors@plt>
  417b37:	jmpq   417e50 <X509_get0_pubkey_bitstr@plt+0x1480>
  417b3c:	cmpl   $0x0,0x1d0(%rsp)
  417b44:	je     417b5e <X509_get0_pubkey_bitstr@plt+0x118e>
  417b46:	lea    0x2631f3(%rip),%rax        # 67ad40 <_edata+0x38>
  417b4d:	lea    0x49d84(%rip),%rsi        # 4618d8 <_fini+0x43d4>
  417b54:	mov    (%rax),%rdi
  417b57:	xor    %eax,%eax
  417b59:	callq  413c40 <BIO_printf@plt>
  417b5e:	mov    0x208(%rsp),%edx
  417b65:	mov    0x30(%rsp),%rsi
  417b6a:	mov    %rbx,%rdi
  417b6d:	callq  446690 <X509_get0_pubkey_bitstr@plt+0x2fcc0>
  417b72:	test   %eax,%eax
  417b74:	jne    417b9e <X509_get0_pubkey_bitstr@plt+0x11ce>
  417b76:	lea    0x2631c3(%rip),%rbp        # 67ad40 <_edata+0x38>
  417b7d:	lea    0x49d84(%rip),%rsi        # 461908 <_fini+0x4404>
  417b84:	mov    0x0(%rbp),%rdi
  417b88:	callq  413c40 <BIO_printf@plt>
  417b8d:	mov    0x0(%rbp),%rdi
  417b91:	or     $0xffffffff,%ebp
  417b94:	callq  413f40 <ERR_print_errors@plt>
  417b99:	jmpq   41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  417b9e:	cmpl   $0x0,0x1a8(%rsp)
  417ba6:	je     417beb <X509_get0_pubkey_bitstr@plt+0x121b>
  417ba8:	test   %r15d,%r15d
  417bab:	jne    417c03 <X509_get0_pubkey_bitstr@plt+0x1233>
  417bad:	lea    0x26318c(%rip),%rbp        # 67ad40 <_edata+0x38>
  417bb4:	lea    0x492a1(%rip),%rsi        # 460e5c <_fini+0x3958>
  417bbb:	xor    %eax,%eax
  417bbd:	mov    0x0(%rbp),%rdi
  417bc1:	callq  413c40 <BIO_printf@plt>
  417bc6:	mov    0x1f0(%rsp),%rcx
  417bce:	mov    0x1f8(%rsp),%rdx
  417bd6:	mov    %rbx,%rsi
  417bd9:	mov    0x0(%rbp),%rdi
  417bdd:	or     $0x208,%rcx
  417be4:	callq  412950 <X509_print_ex@plt>
  417be9:	jmp    417c03 <X509_get0_pubkey_bitstr@plt+0x1233>
  417beb:	mov    %r13,%rsi
  417bee:	mov    %rbx,%rdi
  417bf1:	or     $0xffffffff,%ebp
  417bf4:	callq  413ea0 <X509_set_subject_name@plt>
  417bf9:	test   %eax,%eax
  417bfb:	je     41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  417c01:	jmp    417ba8 <X509_get0_pubkey_bitstr@plt+0x11d8>
  417c03:	lea    0x263136(%rip),%rbp        # 67ad40 <_edata+0x38>
  417c0a:	lea    0x49d1f(%rip),%rsi        # 461930 <_fini+0x442c>
  417c11:	xor    %eax,%eax
  417c13:	mov    0x0(%rbp),%rdi
  417c17:	callq  413c40 <BIO_printf@plt>
  417c1c:	mov    (%rbx),%rax
  417c1f:	mov    0x0(%rbp),%rdi
  417c23:	mov    0x20(%rax),%rax
  417c27:	mov    0x8(%rax),%rsi
  417c2b:	callq  415f50 <ASN1_TIME_print@plt>
  417c30:	cmpq   $0x0,0x1c0(%rsp)
  417c39:	je     417c55 <X509_get0_pubkey_bitstr@plt+0x1285>
  417c3b:	mov    0x1c0(%rsp),%rdx
  417c43:	mov    0x0(%rbp),%rdi
  417c47:	lea    0x49224(%rip),%rsi        # 460e72 <_fini+0x396e>
  417c4e:	xor    %eax,%eax
  417c50:	callq  413c40 <BIO_printf@plt>
  417c55:	mov    0x0(%rbp),%rdi
  417c59:	lea    0x4cf3f(%rip),%rsi        # 464b9f <_fini+0x769b>
  417c60:	xor    %eax,%eax
  417c62:	callq  413c40 <BIO_printf@plt>
  417c67:	cmpl   $0x0,0x1c8(%rsp)
  417c6f:	jne    417d00 <X509_get0_pubkey_bitstr@plt+0x1330>
  417c75:	mov    0x0(%rbp),%rdi
  417c79:	lea    0x491fe(%rip),%rsi        # 460e7e <_fini+0x397a>
  417c80:	xor    %eax,%eax
  417c82:	callq  413c40 <BIO_printf@plt>
  417c87:	mov    0x0(%rbp),%rdi
  417c8b:	xor    %ecx,%ecx
  417c8d:	xor    %edx,%edx
  417c8f:	mov    $0xb,%esi
  417c94:	callq  412af0 <BIO_ctrl@plt>
  417c99:	mov    0x25e270(%rip),%rax        # 675f10 <_fini+0x218a0c>
  417ca0:	lea    0x110(%rsp),%rdi
  417ca8:	mov    $0x18,%esi
  417cad:	movb   $0x0,0x110(%rsp)
  417cb5:	mov    (%rax),%rdx
  417cb8:	callq  415af0 <fgets@plt>
  417cbd:	test   %rax,%rax
  417cc0:	jne    417cd9 <X509_get0_pubkey_bitstr@plt+0x1309>
  417cc2:	mov    0x0(%rbp),%rdi
  417cc6:	lea    0x49c8b(%rip),%rsi        # 461958 <_fini+0x4454>
  417ccd:	xor    %ebp,%ebp
  417ccf:	callq  413c40 <BIO_printf@plt>
  417cd4:	jmpq   41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  417cd9:	mov    0x110(%rsp),%al
  417ce0:	and    $0xffffffdf,%eax
  417ce3:	cmp    $0x59,%al
  417ce5:	je     417d00 <X509_get0_pubkey_bitstr@plt+0x1330>
  417ce7:	mov    0x0(%rbp),%rdi
  417ceb:	lea    0x49c96(%rip),%rsi        # 461988 <_fini+0x4484>
  417cf2:	xor    %eax,%eax
  417cf4:	xor    %ebp,%ebp
  417cf6:	callq  413c40 <BIO_printf@plt>
  417cfb:	jmpq   41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  417d00:	mov    %rbx,%rdi
  417d03:	callq  4161b0 <X509_get_pubkey@plt>
  417d08:	mov    %rax,%rdi
  417d0b:	mov    %rax,%rbp
  417d0e:	callq  414150 <EVP_PKEY_missing_parameters@plt>
  417d13:	test   %eax,%eax
  417d15:	je     417d32 <X509_get0_pubkey_bitstr@plt+0x1362>
  417d17:	mov    0x68(%rsp),%rdi
  417d1c:	callq  414150 <EVP_PKEY_missing_parameters@plt>
  417d21:	test   %eax,%eax
  417d23:	jne    417d32 <X509_get0_pubkey_bitstr@plt+0x1362>
  417d25:	mov    0x68(%rsp),%rsi
  417d2a:	mov    %rbp,%rdi
  417d2d:	callq  416330 <EVP_PKEY_copy_parameters@plt>
  417d32:	mov    %rbp,%rdi
  417d35:	or     $0xffffffff,%ebp
  417d38:	callq  412b00 <EVP_PKEY_free@plt>
  417d3d:	lea    0x262ffc(%rip),%r12        # 67ad40 <_edata+0x38>
  417d44:	mov    0x88(%rsp),%r8
  417d4c:	mov    %rbx,%rsi
  417d4f:	mov    0x80(%rsp),%rcx
  417d57:	mov    0x68(%rsp),%rdx
  417d5c:	mov    (%r12),%rdi
  417d60:	callq  41abf0 <X509_get0_pubkey_bitstr@plt+0x4220>
  417d65:	test   %eax,%eax
  417d67:	je     41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  417d6d:	lea    0x48f76(%rip),%rsi        # 460cea <_fini+0x37e6>
  417d74:	mov    $0x881,%edx
  417d79:	mov    $0x2,%edi
  417d7e:	callq  413d50 <CRYPTO_malloc@plt>
  417d83:	mov    %rax,0xa0(%rsp)
  417d8b:	mov    (%rbx),%rax
  417d8e:	lea    0x48f55(%rip),%rsi        # 460cea <_fini+0x37e6>
  417d95:	mov    $0x884,%edx
  417d9a:	mov    0x20(%rax),%rax
  417d9e:	mov    0x8(%rax),%r14
  417da2:	mov    (%r14),%eax
  417da5:	lea    0x1(%rax),%edi
  417da8:	callq  413d50 <CRYPTO_malloc@plt>
  417dad:	movslq (%r14),%rcx
  417db0:	mov    %rax,0xa8(%rsp)
  417db8:	mov    %rax,%rdi
  417dbb:	mov    0x8(%r14),%rsi
  417dbf:	rep movsb %ds:(%rsi),%es:(%rdi)
  417dc1:	lea    0x48f22(%rip),%rsi        # 460cea <_fini+0x37e6>
  417dc8:	mov    $0x8,%edi
  417dcd:	movslq (%r14),%rax
  417dd0:	mov    0xa8(%rsp),%rdx
  417dd8:	movb   $0x0,(%rdx,%rax,1)
  417ddc:	mov    $0x88b,%edx
  417de1:	movq   $0x0,0xb0(%rsp)
  417ded:	callq  413d50 <CRYPTO_malloc@plt>
  417df2:	mov    %rbx,%rdi
  417df5:	mov    %rax,0xc0(%rsp)
  417dfd:	callq  414400 <X509_get_subject_name@plt>
  417e02:	xor    %edx,%edx
  417e04:	xor    %esi,%esi
  417e06:	mov    %rax,%rdi
  417e09:	callq  4139a0 <X509_NAME_oneline@plt>
  417e0e:	cmpq   $0x0,0xa0(%rsp)
  417e17:	mov    %rax,0xc8(%rsp)
  417e1f:	je     417e3e <X509_get0_pubkey_bitstr@plt+0x146e>
  417e21:	cmpq   $0x0,0xa8(%rsp)
  417e2a:	je     417e3e <X509_get0_pubkey_bitstr@plt+0x146e>
  417e2c:	mov    0xc0(%rsp),%rdi
  417e34:	test   %rdi,%rdi
  417e37:	je     417e3e <X509_get0_pubkey_bitstr@plt+0x146e>
  417e39:	test   %rax,%rax
  417e3c:	jne    417e58 <X509_get0_pubkey_bitstr@plt+0x1488>
  417e3e:	mov    (%r12),%rdi
  417e42:	lea    0x45e7b(%rip),%rsi        # 45dcc4 <_fini+0x7c0>
  417e49:	xor    %eax,%eax
  417e4b:	callq  413c40 <BIO_printf@plt>
  417e50:	or     $0xffffffff,%ebp
  417e53:	jmpq   41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  417e58:	lea    0x53b5a(%rip),%rsi        # 46b9b9 <_fini+0xe4b5>
  417e5f:	mov    $0x8,%edx
  417e64:	callq  413560 <BUF_strlcpy@plt>
  417e69:	mov    0xa0(%rsp),%rax
  417e71:	lea    0x48e72(%rip),%rsi        # 460cea <_fini+0x37e6>
  417e78:	mov    $0x898,%edx
  417e7d:	mov    $0x38,%edi
  417e82:	movb   $0x56,(%rax)
  417e85:	mov    0xa0(%rsp),%rax
  417e8d:	movb   $0x0,0x1(%rax)
  417e91:	callq  413d50 <CRYPTO_malloc@plt>
  417e96:	xor    %edx,%edx
  417e98:	test   %rax,%rax
  417e9b:	jne    417eb2 <X509_get0_pubkey_bitstr@plt+0x14e2>
  417e9d:	mov    (%r12),%rdi
  417ea1:	lea    0x45e1c(%rip),%rsi        # 45dcc4 <_fini+0x7c0>
  417ea8:	callq  413c40 <BIO_printf@plt>
  417ead:	jmpq   41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  417eb2:	mov    0xa0(%rsp,%rdx,1),%rcx
  417eba:	mov    %rcx,(%rax,%rdx,1)
  417ebe:	movq   $0x0,0xa0(%rsp,%rdx,1)
  417eca:	add    $0x8,%rdx
  417ece:	cmp    $0x30,%rdx
  417ed2:	jne    417eb2 <X509_get0_pubkey_bitstr@plt+0x14e2>
  417ed4:	mov    0x50(%rsp),%rcx
  417ed9:	movq   $0x0,0x30(%rax)
  417ee1:	mov    %rax,%rsi
  417ee4:	mov    $0x1,%ebp
  417ee9:	mov    0x8(%rcx),%rdi
  417eed:	callq  416440 <TXT_DB_insert@plt>
  417ef2:	test   %eax,%eax
  417ef4:	jne    41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  417efa:	mov    (%r12),%rdi
  417efe:	lea    0x48dea(%rip),%rsi        # 460cef <_fini+0x37eb>
  417f05:	or     $0xffffffff,%ebp
  417f08:	callq  413c40 <BIO_printf@plt>
  417f0d:	mov    0x50(%rsp),%rax
  417f12:	mov    (%r12),%rdi
  417f16:	lea    0x48ded(%rip),%rsi        # 460d0a <_fini+0x3806>
  417f1d:	mov    0x8(%rax),%rax
  417f21:	mov    0x20(%rax),%rdx
  417f25:	xor    %eax,%eax
  417f27:	callq  413c40 <BIO_printf@plt>
  417f2c:	jmpq   41762c <X509_get0_pubkey_bitstr@plt+0xc5c>
  417f31:	add    $0x148,%rsp
  417f38:	pop    %rbx
  417f39:	pop    %rbp
  417f3a:	pop    %r12
  417f3c:	pop    %r13
  417f3e:	pop    %r14
  417f40:	pop    %r15
  417f42:	retq   
  417f43:	push   %r15
  417f45:	mov    %r9,%r15
  417f48:	push   %r14
  417f4a:	mov    %r8,%r14
  417f4d:	push   %r13
  417f4f:	mov    %rdx,%r13
  417f52:	push   %r12
  417f54:	mov    %rsi,%r12
  417f57:	push   %rbp
  417f58:	push   %rbx
  417f59:	sub    $0xb8,%rsp
  417f60:	mov    %rcx,0xa8(%rsp)
  417f68:	mov    %rdi,0xa0(%rsp)
  417f70:	callq  4152b0 <BIO_s_file@plt>
  417f75:	mov    %rax,%rdi
  417f78:	callq  414a20 <BIO_new@plt>
  417f7d:	mov    %r12,%rcx
  417f80:	mov    $0x3,%edx
  417f85:	mov    $0x6c,%esi
  417f8a:	mov    %rax,%rdi
  417f8d:	mov    %rax,%rbp
  417f90:	callq  412af0 <BIO_ctrl@plt>
  417f95:	test   %rax,%rax
  417f98:	jg     417fa7 <X509_get0_pubkey_bitstr@plt+0x15d7>
  417f9a:	mov    %r12,%rdi
  417f9d:	callq  4142c0 <perror@plt>
  417fa2:	jmpq   4181f1 <X509_get0_pubkey_bitstr@plt+0x1821>
  417fa7:	xor    %ecx,%ecx
  417fa9:	xor    %edx,%edx
  417fab:	xor    %esi,%esi
  417fad:	mov    %rbp,%rdi
  417fb0:	callq  415280 <PEM_read_bio_X509_REQ@plt>
  417fb5:	test   %rax,%rax
  417fb8:	mov    %rax,%rbx
  417fbb:	jne    417fdd <X509_get0_pubkey_bitstr@plt+0x160d>
  417fbd:	lea    0x262d7c(%rip),%rax        # 67ad40 <_edata+0x38>
  417fc4:	lea    0x49a15(%rip),%rsi        # 4619e0 <_fini+0x44dc>
  417fcb:	mov    %r12,%rdx
  417fce:	mov    (%rax),%rdi
  417fd1:	xor    %eax,%eax
  417fd3:	callq  413c40 <BIO_printf@plt>
  417fd8:	jmpq   4181f1 <X509_get0_pubkey_bitstr@plt+0x1821>
  417fdd:	cmpl   $0x0,0x158(%rsp)
  417fe5:	je     417ff9 <X509_get0_pubkey_bitstr@plt+0x1629>
  417fe7:	mov    %rax,%rsi
  417fea:	lea    0x262d4f(%rip),%rax        # 67ad40 <_edata+0x38>
  417ff1:	mov    (%rax),%rdi
  417ff4:	callq  414810 <X509_REQ_print@plt>
  417ff9:	lea    0x262d40(%rip),%rax        # 67ad40 <_edata+0x38>
  418000:	lea    0x49a09(%rip),%rsi        # 461a10 <_fini+0x450c>
  418007:	mov    (%rax),%rdi
  41800a:	xor    %eax,%eax
  41800c:	callq  413c40 <BIO_printf@plt>
  418011:	cmpl   $0x0,0x180(%rsp)
  418019:	je     418031 <X509_get0_pubkey_bitstr@plt+0x1661>
  41801b:	mov    %r13,%rsi
  41801e:	mov    %rbx,%rdi
  418021:	callq  412cc0 <X509_REQ_check_private_key@plt>
  418026:	test   %eax,%eax
  418028:	lea    0x49a11(%rip),%rsi        # 461a40 <_fini+0x453c>
  41802f:	je     418097 <X509_get0_pubkey_bitstr@plt+0x16c7>
  418031:	mov    %rbx,%rdi
  418034:	callq  413b00 <X509_REQ_get_pubkey@plt>
  418039:	test   %rax,%rax
  41803c:	mov    %rax,%r12
  41803f:	jne    418062 <X509_get0_pubkey_bitstr@plt+0x1692>
  418041:	lea    0x262cf8(%rip),%rax        # 67ad40 <_edata+0x38>
  418048:	lea    0x48e4c(%rip),%rsi        # 460e9b <_fini+0x3997>
  41804f:	or     $0xffffffff,%r12d
  418053:	mov    (%rax),%rdi
  418056:	xor    %eax,%eax
  418058:	callq  413c40 <BIO_printf@plt>
  41805d:	jmpq   4181da <X509_get0_pubkey_bitstr@plt+0x180a>
  418062:	mov    %rax,%rsi
  418065:	mov    %rbx,%rdi
  418068:	callq  4132b0 <X509_REQ_verify@plt>
  41806d:	mov    %r12,%rdi
  418070:	mov    %eax,0x9c(%rsp)
  418077:	callq  412b00 <EVP_PKEY_free@plt>
  41807c:	mov    0x9c(%rsp),%eax
  418083:	lea    0x499ee(%rip),%rsi        # 461a78 <_fini+0x4574>
  41808a:	test   %eax,%eax
  41808c:	js     418097 <X509_get0_pubkey_bitstr@plt+0x16c7>
  41808e:	jne    4180b0 <X509_get0_pubkey_bitstr@plt+0x16e0>
  418090:	lea    0x49a09(%rip),%rsi        # 461aa0 <_fini+0x459c>
  418097:	lea    0x262ca2(%rip),%rax        # 67ad40 <_edata+0x38>
  41809e:	xor    %r12d,%r12d
  4180a1:	mov    (%rax),%rdi
  4180a4:	xor    %eax,%eax
  4180a6:	callq  413c40 <BIO_printf@plt>
  4180ab:	jmpq   4181da <X509_get0_pubkey_bitstr@plt+0x180a>
  4180b0:	lea    0x262c89(%rip),%rax        # 67ad40 <_edata+0x38>
  4180b7:	lea    0x48df9(%rip),%rsi        # 460eb7 <_fini+0x39b3>
  4180be:	mov    (%rax),%rdi
  4180c1:	xor    %eax,%eax
  4180c3:	callq  413c40 <BIO_printf@plt>
  4180c8:	mov    0x180(%rsp),%eax
  4180cf:	mov    %rbx,0x58(%rsp)
  4180d4:	mov    %r15,%r8
  4180d7:	mov    %r14,%rcx
  4180da:	mov    %r13,%rsi
  4180dd:	mov    %eax,0x90(%rsp)
  4180e4:	mov    0x178(%rsp),%eax
  4180eb:	mov    %eax,0x88(%rsp)
  4180f2:	mov    0x170(%rsp),%eax
  4180f9:	mov    %eax,0x80(%rsp)
  418100:	mov    0x168(%rsp),%rax
  418108:	mov    %rax,0x78(%rsp)
  41810d:	mov    0x160(%rsp),%rax
  418115:	mov    %rax,0x70(%rsp)
  41811a:	mov    0x150(%rsp),%rax
  418122:	mov    %rax,0x68(%rsp)
  418127:	mov    0x148(%rsp),%rax
  41812f:	mov    %rax,0x60(%rsp)
  418134:	mov    0x158(%rsp),%eax
  41813b:	mov    %eax,0x50(%rsp)
  41813f:	mov    0x140(%rsp),%eax
  418146:	mov    %eax,0x48(%rsp)
  41814a:	mov    0x138(%rsp),%rax
  418152:	mov    %rax,0x40(%rsp)
  418157:	mov    0x130(%rsp),%rax
  41815f:	mov    %rax,0x38(%rsp)
  418164:	mov    0x128(%rsp),%rax
  41816c:	mov    %rax,0x30(%rsp)
  418171:	mov    0x120(%rsp),%eax
  418178:	mov    %eax,0x28(%rsp)
  41817c:	mov    0x118(%rsp),%eax
  418183:	mov    %eax,0x20(%rsp)
  418187:	mov    0x110(%rsp),%rax
  41818f:	mov    %rax,0x18(%rsp)
  418194:	mov    0x108(%rsp),%rax
  41819c:	mov    %rax,0x10(%rsp)
  4181a1:	mov    0x100(%rsp),%rax
  4181a9:	mov    %rax,0x8(%rsp)
  4181ae:	mov    0xf8(%rsp),%rax
  4181b6:	mov    0xf0(%rsp),%r9
  4181be:	mov    0xa8(%rsp),%rdx
  4181c6:	mov    0xa0(%rsp),%rdi
  4181ce:	mov    %rax,(%rsp)
  4181d2:	callq  416ebe <X509_get0_pubkey_bitstr@plt+0x4ee>
  4181d7:	mov    %eax,%r12d
  4181da:	mov    %rbx,%rdi
  4181dd:	callq  4154a0 <X509_REQ_free@plt>
  4181e2:	test   %rbp,%rbp
  4181e5:	je     4181f7 <X509_get0_pubkey_bitstr@plt+0x1827>
  4181e7:	mov    %rbp,%rdi
  4181ea:	callq  413960 <BIO_free@plt>
  4181ef:	jmp    4181f7 <X509_get0_pubkey_bitstr@plt+0x1827>
  4181f1:	or     $0xffffffff,%r12d
  4181f5:	jmp    4181e2 <X509_get0_pubkey_bitstr@plt+0x1812>
  4181f7:	add    $0xb8,%rsp
  4181fe:	mov    %r12d,%eax
  418201:	pop    %rbx
  418202:	pop    %rbp
  418203:	pop    %r12
  418205:	pop    %r13
  418207:	pop    %r14
  418209:	pop    %r15
  41820b:	retq   
  41820c:	push   %r14
  41820e:	xor    %eax,%eax
  418210:	push   %r13
  418212:	mov    %r8,%r13
  418215:	push   %r12
  418217:	mov    %rdi,%r12
  41821a:	push   %rbp
  41821b:	push   %rbx
  41821c:	mov    %rsi,%rbx
  41821f:	lea    0x4bf1a(%rip),%rsi        # 464140 <_fini+0x6c3c>
  418226:	callq  413c40 <BIO_printf@plt>
  41822b:	cmpl   $0x0,0x8(%rbx)
  41822f:	jne    418247 <X509_get0_pubkey_bitstr@plt+0x1877>
  418231:	lea    0x4c95b(%rip),%rsi        # 464b93 <_fini+0x768f>
  418238:	mov    %r12,%rdi
  41823b:	xor    %eax,%eax
  41823d:	callq  413c40 <BIO_printf@plt>
  418242:	jmpq   4182c7 <X509_get0_pubkey_bitstr@plt+0x18f7>
  418247:	mov    %rbx,%rdi
  41824a:	mov    %r13,%rsi
  41824d:	xor    %ebx,%ebx
  41824f:	callq  413390 <BN_bn2bin@plt>
  418254:	lea    -0x1(%rax),%r14d
  418258:	movslq %ebx,%rbp
  41825b:	mov    $0xc,%ecx
  418260:	mov    %ebp,%eax
  418262:	cltd   
  418263:	idiv   %ecx
  418265:	cmp    %ebx,%r14d
  418268:	jle    41829b <X509_get0_pubkey_bitstr@plt+0x18cb>
  41826a:	test   %edx,%edx
  41826c:	jne    41827f <X509_get0_pubkey_bitstr@plt+0x18af>
  41826e:	lea    0x4784e(%rip),%rsi        # 45fac3 <_fini+0x25bf>
  418275:	mov    %r12,%rdi
  418278:	xor    %eax,%eax
  41827a:	callq  413c40 <BIO_printf@plt>
  41827f:	movzbl 0x0(%r13,%rbx,1),%edx
  418285:	lea    0x4783a(%rip),%rsi        # 45fac6 <_fini+0x25c2>
  41828c:	mov    %r12,%rdi
  41828f:	xor    %eax,%eax
  418291:	inc    %rbx
  418294:	callq  413c40 <BIO_printf@plt>
  418299:	jmp    418258 <X509_get0_pubkey_bitstr@plt+0x1888>
  41829b:	test   %edx,%edx
  41829d:	jne    4182b0 <X509_get0_pubkey_bitstr@plt+0x18e0>
  41829f:	lea    0x4781d(%rip),%rsi        # 45fac3 <_fini+0x25bf>
  4182a6:	mov    %r12,%rdi
  4182a9:	xor    %eax,%eax
  4182ab:	callq  413c40 <BIO_printf@plt>
  4182b0:	movzbl 0x0(%r13,%rbp,1),%edx
  4182b6:	lea    0x48ae1(%rip),%rsi        # 460d9e <_fini+0x389a>
  4182bd:	mov    %r12,%rdi
  4182c0:	xor    %eax,%eax
  4182c2:	callq  413c40 <BIO_printf@plt>
  4182c7:	lea    0x4c8cc(%rip),%rsi        # 464b9a <_fini+0x7696>
  4182ce:	mov    %r12,%rdi
  4182d1:	xor    %eax,%eax
  4182d3:	callq  413c40 <BIO_printf@plt>
  4182d8:	pop    %rbx
  4182d9:	pop    %rbp
  4182da:	pop    %r12
  4182dc:	pop    %r13
  4182de:	mov    $0x1,%eax
  4182e3:	pop    %r14
  4182e5:	retq   
  4182e6:	push   %r12
  4182e8:	test   %rsi,%rsi
  4182eb:	push   %rbp
  4182ec:	push   %rbx
  4182ed:	mov    %rsi,%rbx
  4182f0:	je     418346 <X509_get0_pubkey_bitstr@plt+0x1976>
  4182f2:	lea    0x4aa7b(%rip),%rsi        # 462d74 <_fini+0x5870>
  4182f9:	mov    %rdi,%r12
  4182fc:	mov    %rbx,%rdi
  4182ff:	callq  4155c0 <strcmp@plt>
  418304:	test   %eax,%eax
  418306:	jne    418317 <X509_get0_pubkey_bitstr@plt+0x1947>
  418308:	movl   $0xffffffff,(%r12)
  418310:	mov    $0x1,%ebp
  418315:	jmp    41834f <X509_get0_pubkey_bitstr@plt+0x197f>
  418317:	mov    %rbx,%rdi
  41831a:	callq  413720 <OBJ_txt2nid@plt>
  41831f:	test   %eax,%eax
  418321:	mov    %eax,%ebp
  418323:	mov    %eax,(%r12)
  418327:	jne    41834a <X509_get0_pubkey_bitstr@plt+0x197a>
  418329:	lea    0x262a10(%rip),%rax        # 67ad40 <_edata+0x38>
  418330:	lea    0x543a4(%rip),%rsi        # 46c6db <_fini+0xf1d7>
  418337:	mov    %rbx,%rdx
  41833a:	mov    (%rax),%rdi
  41833d:	xor    %eax,%eax
  41833f:	callq  413c40 <BIO_printf@plt>
  418344:	jmp    41834f <X509_get0_pubkey_bitstr@plt+0x197f>
  418346:	xor    %ebp,%ebp
  418348:	jmp    41834f <X509_get0_pubkey_bitstr@plt+0x197f>
  41834a:	mov    $0x1,%ebp
  41834f:	pop    %rbx
  418350:	mov    %ebp,%eax
  418352:	pop    %rbp
  418353:	pop    %r12
  418355:	retq   
  418356:	push   %r14
  418358:	push   %r13
  41835a:	mov    %rdi,%r13
  41835d:	push   %r12
  41835f:	push   %rbp
  418360:	push   %rbx
  418361:	callq  412cd0 <sk_new_null@plt>
  418366:	test   %rax,%rax
  418369:	mov    %rax,%r14
  41836c:	je     4183d8 <X509_get0_pubkey_bitstr@plt+0x1a08>
  41836e:	xor    %ebp,%ebp
  418370:	mov    %r13,%rdi
  418373:	callq  4156d0 <sk_num@plt>
  418378:	cmp    %eax,%ebp
  41837a:	jge    4183d3 <X509_get0_pubkey_bitstr@plt+0x1a03>
  41837c:	mov    %ebp,%esi
  41837e:	mov    %r13,%rdi
  418381:	callq  412b30 <sk_value@plt>
  418386:	xor    %r9d,%r9d
  418389:	xor    %edx,%edx
  41838b:	xor    %esi,%esi
  41838d:	xor    %edi,%edi
  41838f:	mov    %rax,%r8
  418392:	mov    $0x1,%ecx
  418397:	callq  412d80 <a2i_GENERAL_NAME@plt>
  41839c:	test   %rax,%rax
  41839f:	mov    %rax,%r12
  4183a2:	je     4183dc <X509_get0_pubkey_bitstr@plt+0x1a0c>
  4183a4:	callq  415bc0 <GENERAL_NAMES_new@plt>
  4183a9:	test   %rax,%rax
  4183ac:	mov    %rax,%rbx
  4183af:	je     4183e3 <X509_get0_pubkey_bitstr@plt+0x1a13>
  4183b1:	mov    %r12,%rsi
  4183b4:	mov    %rax,%rdi
  4183b7:	callq  412fe0 <sk_push@plt>
  4183bc:	test   %eax,%eax
  4183be:	je     4183e3 <X509_get0_pubkey_bitstr@plt+0x1a13>
  4183c0:	mov    %rbx,%rsi
  4183c3:	mov    %r14,%rdi
  4183c6:	callq  412fe0 <sk_push@plt>
  4183cb:	test   %eax,%eax
  4183cd:	je     4183e0 <X509_get0_pubkey_bitstr@plt+0x1a10>
  4183cf:	inc    %ebp
  4183d1:	jmp    418370 <X509_get0_pubkey_bitstr@plt+0x19a0>
  4183d3:	mov    %r14,%rax
  4183d6:	jmp    41840e <X509_get0_pubkey_bitstr@plt+0x1a3e>
  4183d8:	xor    %eax,%eax
  4183da:	jmp    41840e <X509_get0_pubkey_bitstr@plt+0x1a3e>
  4183dc:	xor    %ebx,%ebx
  4183de:	jmp    4183e3 <X509_get0_pubkey_bitstr@plt+0x1a13>
  4183e0:	xor    %r12d,%r12d
  4183e3:	mov    0x25dba6(%rip),%rsi        # 675f90 <_fini+0x218a8c>
  4183ea:	mov    %r14,%rdi
  4183ed:	callq  416250 <sk_pop_free@plt>
  4183f2:	test   %rbx,%rbx
  4183f5:	je     4183ff <X509_get0_pubkey_bitstr@plt+0x1a2f>
  4183f7:	mov    %rbx,%rdi
  4183fa:	callq  4155f0 <GENERAL_NAMES_free@plt>
  4183ff:	test   %r12,%r12
  418402:	je     4183d8 <X509_get0_pubkey_bitstr@plt+0x1a08>
  418404:	mov    %r12,%rdi
  418407:	callq  414f20 <GENERAL_NAME_free@plt>
  41840c:	xor    %eax,%eax
  41840e:	pop    %rbx
  41840f:	pop    %rbp
  418410:	pop    %r12
  418412:	pop    %r13
  418414:	pop    %r14
  418416:	retq   
  418417:	push   %r15
  418419:	push   %r14
  41841b:	mov    %rsi,%r14
  41841e:	push   %r13
  418420:	xor    %r13d,%r13d
  418423:	push   %r12
  418425:	push   %rbp
  418426:	mov    %rdi,%rbp
  418429:	push   %rbx
  41842a:	push   %rdx
  41842b:	mov    %r14,%rdi
  41842e:	callq  4156d0 <sk_num@plt>
  418433:	cmp    %eax,%r13d
  418436:	jge    418493 <X509_get0_pubkey_bitstr@plt+0x1ac3>
  418438:	mov    %r13d,%esi
  41843b:	mov    %r14,%rdi
  41843e:	xor    %ebx,%ebx
  418440:	callq  412b30 <sk_value@plt>
  418445:	mov    %rax,%r12
  418448:	mov    %r12,%rdi
  41844b:	callq  4156d0 <sk_num@plt>
  418450:	cmp    %eax,%ebx
  418452:	jge    41848e <X509_get0_pubkey_bitstr@plt+0x1abe>
  418454:	mov    %ebx,%esi
  418456:	mov    %r12,%rdi
  418459:	inc    %ebx
  41845b:	callq  412b30 <sk_value@plt>
  418460:	lea    0x4fe3e(%rip),%rsi        # 4682a5 <_fini+0xada1>
  418467:	mov    %rax,%r15
  41846a:	mov    %rbp,%rdi
  41846d:	callq  413b70 <BIO_puts@plt>
  418472:	mov    %r15,%rsi
  418475:	mov    %rbp,%rdi
  418478:	callq  4128e0 <GENERAL_NAME_print@plt>
  41847d:	lea    0x4c71b(%rip),%rsi        # 464b9f <_fini+0x769b>
  418484:	mov    %rbp,%rdi
  418487:	callq  413b70 <BIO_puts@plt>
  41848c:	jmp    418448 <X509_get0_pubkey_bitstr@plt+0x1a78>
  41848e:	inc    %r13d
  418491:	jmp    41842b <X509_get0_pubkey_bitstr@plt+0x1a5b>
  418493:	pop    %rax
  418494:	pop    %rbx
  418495:	pop    %rbp
  418496:	pop    %r12
  418498:	pop    %r13
  41849a:	pop    %r14
  41849c:	pop    %r15
  41849e:	retq   
  41849f:	nop
  4184a0:	push   %r15
  4184a2:	mov    %edi,%r15d
  4184a5:	push   %r14
  4184a7:	push   %r13
  4184a9:	push   %r12
  4184ab:	push   %rbp
  4184ac:	push   %rbx
  4184ad:	mov    %rsi,%rbx
  4184b0:	sub    $0x4b8,%rsp
  4184b7:	lea    0x262882(%rip),%rbp        # 67ad40 <_edata+0x38>
  4184be:	mov    %fs:0x28,%rax
  4184c7:	mov    %rax,0x4a8(%rsp)
  4184cf:	xor    %eax,%eax
  4184d1:	movq   $0x0,0x40(%rsp)
  4184da:	movl   $0x0,0x48(%rsp)
  4184e2:	cmpq   $0x0,0x0(%rbp)
  4184e7:	je     418998 <X509_get0_pubkey_bitstr@plt+0x1fc8>
  4184ed:	lea    0x451d4(%rip),%rdi        # 45d6c8 <_fini+0x1c4>
  4184f4:	callq  414fc0 <getenv@plt>
  4184f9:	test   %rax,%rax
  4184fc:	je     418541 <X509_get0_pubkey_bitstr@plt+0x1b71>
  4184fe:	lea    0x451c3(%rip),%rdi        # 45d6c8 <_fini+0x1c4>
  418505:	callq  414fc0 <getenv@plt>
  41850a:	cmpb   $0x6f,(%rax)
  41850d:	jne    4187a1 <X509_get0_pubkey_bitstr@plt+0x1dd1>
  418513:	cmpb   $0x66,0x1(%rax)
  418517:	jne    4187a1 <X509_get0_pubkey_bitstr@plt+0x1dd1>
  41851d:	cmpb   $0x66,0x2(%rax)
  418521:	jne    4187a1 <X509_get0_pubkey_bitstr@plt+0x1dd1>
  418527:	cmpb   $0x0,0x3(%rax)
  41852b:	jne    4187a1 <X509_get0_pubkey_bitstr@plt+0x1dd1>
  418531:	xor    %r8d,%r8d
  418534:	xor    %ecx,%ecx
  418536:	xor    %edx,%edx
  418538:	xor    %esi,%esi
  41853a:	xor    %edi,%edi
  41853c:	callq  416030 <CRYPTO_set_mem_debug_functions@plt>
  418541:	mov    $0x1,%edi
  418546:	callq  4150a0 <CRYPTO_mem_ctrl@plt>
  41854b:	lea    0x5ce(%rip),%rdi        # 418b20 <X509_get0_pubkey_bitstr@plt+0x2150>
  418552:	callq  414190 <CRYPTO_set_locking_callback@plt>
  418557:	lea    0x4517f(%rip),%rdi        # 45d6dd <_fini+0x1d9>
  41855e:	callq  414fc0 <getenv@plt>
  418563:	test   %rax,%rax
  418566:	je     41857a <X509_get0_pubkey_bitstr@plt+0x1baa>
  418568:	mov    $0x1,%edi
  41856d:	callq  4158d0 <FIPS_mode_set@plt>
  418572:	test   %eax,%eax
  418574:	je     4187d8 <X509_get0_pubkey_bitstr@plt+0x1e08>
  41857a:	mov    $0x1,%esi
  41857f:	mov    $0xd,%edi
  418584:	xor    %r14d,%r14d
  418587:	callq  414ee0 <signal@plt>
  41858c:	mov    0x25d9c5(%rip),%rdx        # 675f58 <_fini+0x218a54>
  418593:	mov    0x25da16(%rip),%rsi        # 675fb0 <_fini+0x218aac>
  41859a:	mov    0x25d9c7(%rip),%rdi        # 675f68 <_fini+0x218a64>
  4185a1:	callq  4149f0 <CRYPTO_set_mem_functions@plt>
  4185a6:	callq  416990 <ERR_load_crypto_strings@plt>
  4185ab:	callq  412cf0 <OPENSSL_add_all_algorithms_noconf@plt>
  4185b0:	callq  415e90 <ENGINE_load_builtin_engines@plt>
  4185b5:	callq  445a20 <X509_get0_pubkey_bitstr@plt+0x2f050>
  4185ba:	lea    0x45129(%rip),%rdi        # 45d6ea <_fini+0x1e6>
  4185c1:	callq  414fc0 <getenv@plt>
  4185c6:	test   %rax,%rax
  4185c9:	mov    %rax,%r12
  4185cc:	je     4189da <X509_get0_pubkey_bitstr@plt+0x200a>
  4185d2:	lea    0x262777(%rip),%rax        # 67ad50 <_edata+0x48>
  4185d9:	xor    %edi,%edi
  4185db:	mov    %r12,(%rax)
  4185de:	callq  413cd0 <NCONF_new@plt>
  4185e3:	lea    0x26275e(%rip),%rcx        # 67ad48 <_edata+0x40>
  4185ea:	lea    0x38(%rsp),%rdx
  4185ef:	mov    %r12,%rsi
  4185f2:	mov    %rax,%rdi
  4185f5:	mov    %rax,(%rcx)
  4185f8:	callq  414c50 <NCONF_load@plt>
  4185fd:	test   %eax,%eax
  4185ff:	je     41876c <X509_get0_pubkey_bitstr@plt+0x1d9c>
  418605:	lea    0x25fb74(%rip),%r13        # 678180 <_fini+0x21ac7c>
  41860c:	xor    %esi,%esi
  41860e:	cmpq   $0x0,0x8(%r13)
  418613:	je     41862f <X509_get0_pubkey_bitstr@plt+0x1c5f>
  418615:	mov    %r13,%rax
  418618:	nopl   0x0(%rax,%rax,1)
  418620:	add    $0x18,%rax
  418624:	add    $0x1,%rsi
  418628:	cmpq   $0x0,0x8(%rax)
  41862d:	jne    418620 <X509_get0_pubkey_bitstr@plt+0x1c50>
  41862f:	lea    0xc6a(%rip),%rcx        # 4192a0 <X509_get0_pubkey_bitstr@plt+0x28d0>
  418636:	mov    $0x18,%edx
  41863b:	mov    %r13,%rdi
  41863e:	callq  416710 <qsort@plt>
  418643:	lea    0x5c6(%rip),%rsi        # 418c10 <X509_get0_pubkey_bitstr@plt+0x2240>
  41864a:	lea    0x5df(%rip),%rdi        # 418c30 <X509_get0_pubkey_bitstr@plt+0x2260>
  418651:	callq  415980 <lh_new@plt>
  418656:	test   %rax,%rax
  418659:	mov    %rax,%r12
  41865c:	je     418a17 <X509_get0_pubkey_bitstr@plt+0x2047>
  418662:	cmpq   $0x0,0x8(%r13)
  418667:	je     418686 <X509_get0_pubkey_bitstr@plt+0x1cb6>
  418669:	nopl   0x0(%rax)
  418670:	mov    %r13,%rsi
  418673:	mov    %r12,%rdi
  418676:	add    $0x18,%r13
  41867a:	callq  4138f0 <lh_insert@plt>
  41867f:	cmpq   $0x0,0x8(%r13)
  418684:	jne    418670 <X509_get0_pubkey_bitstr@plt+0x1ca0>
  418686:	lea    0x70(%rsp),%r13
  41868b:	mov    (%rbx),%rdi
  41868e:	mov    $0x28,%edx
  418693:	mov    %r13,%rsi
  418696:	callq  4456d0 <X509_get0_pubkey_bitstr@plt+0x2ed00>
  41869b:	lea    0x50(%rsp),%rsi
  4186a0:	mov    %r12,%rdi
  4186a3:	mov    %r13,0x58(%rsp)
  4186a8:	callq  413ac0 <lh_retrieve@plt>
  4186ad:	test   %rax,%rax
  4186b0:	je     418800 <X509_get0_pubkey_bitstr@plt+0x1e30>
  4186b6:	mov    %r13,(%rbx)
  4186b9:	mov    %rbx,%rsi
  4186bc:	mov    %r15d,%edi
  4186bf:	callq  *0x10(%rax)
  4186c2:	mov    %eax,%ebx
  4186c4:	test   %r14,%r14
  4186c7:	je     4186d1 <X509_get0_pubkey_bitstr@plt+0x1d01>
  4186c9:	mov    %r14,%rdi
  4186cc:	callq  415020 <CRYPTO_free@plt>
  4186d1:	lea    0x262670(%rip),%rax        # 67ad48 <_edata+0x40>
  4186d8:	mov    (%rax),%rdi
  4186db:	test   %rdi,%rdi
  4186de:	je     4186f3 <X509_get0_pubkey_bitstr@plt+0x1d23>
  4186e0:	callq  4137f0 <NCONF_free@plt>
  4186e5:	lea    0x26265c(%rip),%rax        # 67ad48 <_edata+0x40>
  4186ec:	movq   $0x0,(%rax)
  4186f3:	test   %r12,%r12
  4186f6:	je     418700 <X509_get0_pubkey_bitstr@plt+0x1d30>
  4186f8:	mov    %r12,%rdi
  4186fb:	callq  414660 <lh_free@plt>
  418700:	mov    0x40(%rsp),%rdi
  418705:	test   %rdi,%rdi
  418708:	je     41870f <X509_get0_pubkey_bitstr@plt+0x1d3f>
  41870a:	callq  415020 <CRYPTO_free@plt>
  41870f:	mov    $0x1,%edi
  418714:	callq  4136f0 <CONF_modules_unload@plt>
  418719:	callq  445a90 <X509_get0_pubkey_bitstr@plt+0x2f0c0>
  41871e:	callq  414120 <OBJ_cleanup@plt>
  418723:	callq  416640 <EVP_cleanup@plt>
  418728:	callq  413980 <ENGINE_cleanup@plt>
  41872d:	nopl   (%rax)
  418730:	callq  414430 <CRYPTO_cleanup_all_ex_data@plt>
  418735:	xor    %edi,%edi
  418737:	callq  413660 <ERR_remove_thread_state@plt>
  41873c:	callq  414a70 <ERR_free_strings@plt>
  418741:	callq  416360 <COMP_zlib_cleanup@plt>
  418746:	mov    0x0(%rbp),%rdi
  41874a:	callq  4145a0 <CRYPTO_mem_leaks@plt>
  41874f:	mov    0x0(%rbp),%rdi
  418753:	test   %rdi,%rdi
  418756:	je     418765 <X509_get0_pubkey_bitstr@plt+0x1d95>
  418758:	callq  413960 <BIO_free@plt>
  41875d:	movq   $0x0,0x0(%rbp)
  418765:	mov    %ebx,%edi
  418767:	callq  414fb0 <exit@plt>
  41876c:	callq  416140 <ERR_peek_last_error@plt>
  418771:	and    $0xfff,%eax
  418776:	cmp    $0x72,%eax
  418779:	je     418940 <X509_get0_pubkey_bitstr@plt+0x1f70>
  41877f:	mov    0x0(%rbp),%rdi
  418783:	callq  413f40 <ERR_print_errors@plt>
  418788:	lea    0x2625b9(%rip),%rax        # 67ad48 <_edata+0x40>
  41878f:	mov    (%rax),%rdi
  418792:	callq  4137f0 <NCONF_free@plt>
  418797:	mov    $0x1,%edi
  41879c:	callq  414fb0 <exit@plt>
  4187a1:	mov    0x25d810(%rip),%r8        # 675fb8 <_fini+0x218ab4>
  4187a8:	mov    0x25d739(%rip),%rcx        # 675ee8 <_fini+0x2189e4>
  4187af:	mov    0x25d782(%rip),%rdx        # 675f38 <_fini+0x218a34>
  4187b6:	mov    0x25d743(%rip),%rsi        # 675f00 <_fini+0x2189fc>
  4187bd:	mov    0x25d7c4(%rip),%rdi        # 675f88 <_fini+0x218a84>
  4187c4:	callq  416030 <CRYPTO_set_mem_debug_functions@plt>
  4187c9:	mov    $0x3,%edi
  4187ce:	callq  4130c0 <CRYPTO_set_mem_debug_options@plt>
  4187d3:	jmpq   418541 <X509_get0_pubkey_bitstr@plt+0x1b71>
  4187d8:	callq  416990 <ERR_load_crypto_strings@plt>
  4187dd:	mov    0x25d79c(%rip),%rax        # 675f80 <_fini+0x218a7c>
  4187e4:	xor    %esi,%esi
  4187e6:	mov    (%rax),%rdi
  4187e9:	callq  4161e0 <BIO_new_fp@plt>
  4187ee:	mov    %rax,%rdi
  4187f1:	callq  413f40 <ERR_print_errors@plt>
  4187f6:	mov    $0x1,%edi
  4187fb:	callq  414fb0 <exit@plt>
  418800:	cmp    $0x1,%r15d
  418804:	jne    41897c <X509_get0_pubkey_bitstr@plt+0x1fac>
  41880a:	lea    0x30(%rsp),%rcx
  41880f:	lea    0xa0(%rsp),%rax
  418817:	mov    0x25d69a(%rip),%r15        # 675eb8 <_fini+0x2189b4>
  41881e:	mov    $0x400,%r13d
  418824:	mov    %rcx,0x8(%rsp)
  418829:	lea    0x2c(%rsp),%rcx
  41882e:	mov    %rax,(%rsp)
  418832:	mov    %rax,%rbx
  418835:	xor    %eax,%eax
  418837:	mov    %rcx,0x10(%rsp)
  41883c:	lea    0x40(%rsp),%rcx
  418841:	mov    %rcx,0x18(%rsp)
  418846:	nopw   %cs:0x0(%rax,%rax,1)
  418850:	test   %eax,%eax
  418852:	mov    (%r15),%rsi
  418855:	lea    0x44e62(%rip),%rax        # 45d6be <_fini+0x1ba>
  41885c:	lea    0x56c26(%rip),%rdi        # 46f489 <_fini+0x11f85>
  418863:	movb   $0x0,(%rbx)
  418866:	cmove  %rax,%rdi
  41886a:	callq  414ca0 <fputs@plt>
  41886f:	mov    (%r15),%rdi
  418872:	callq  414e60 <fflush@plt>
  418877:	mov    0x25d692(%rip),%rax        # 675f10 <_fini+0x218a0c>
  41887e:	mov    %r13d,%esi
  418881:	mov    %rbx,%rdi
  418884:	mov    (%rax),%rdx
  418887:	callq  415af0 <fgets@plt>
  41888c:	test   %rax,%rax
  41888f:	je     4189d3 <X509_get0_pubkey_bitstr@plt+0x2003>
  418895:	cmpb   $0x0,(%rbx)
  418898:	je     4189d3 <X509_get0_pubkey_bitstr@plt+0x2003>
  41889e:	mov    %rbx,%rdi
  4188a1:	callq  413470 <strlen@plt>
  4188a6:	cmp    $0x1,%eax
  4188a9:	jle    4188b5 <X509_get0_pubkey_bitstr@plt+0x1ee5>
  4188ab:	movslq %eax,%rdx
  4188ae:	cmpb   $0x5c,-0x2(%rbx,%rdx,1)
  4188b3:	je     418913 <X509_get0_pubkey_bitstr@plt+0x1f43>
  4188b5:	mov    0x8(%rsp),%rcx
  4188ba:	mov    0x10(%rsp),%rdx
  4188bf:	mov    (%rsp),%rsi
  4188c3:	mov    0x18(%rsp),%rdi
  4188c8:	callq  445710 <X509_get0_pubkey_bitstr@plt+0x2ed40>
  4188cd:	test   %eax,%eax
  4188cf:	je     4189fb <X509_get0_pubkey_bitstr@plt+0x202b>
  4188d5:	mov    0x30(%rsp),%rdx
  4188da:	mov    0x2c(%rsp),%esi
  4188de:	mov    %r12,%rdi
  4188e1:	callq  418c40 <X509_get0_pubkey_bitstr@plt+0x2270>
  4188e6:	test   %eax,%eax
  4188e8:	js     4189d3 <X509_get0_pubkey_bitstr@plt+0x2003>
  4188ee:	jne    418924 <X509_get0_pubkey_bitstr@plt+0x1f54>
  4188f0:	mov    0x0(%rbp),%rdi
  4188f4:	xor    %ecx,%ecx
  4188f6:	xor    %edx,%edx
  4188f8:	mov    $0xb,%esi
  4188fd:	mov    $0x400,%r13d
  418903:	callq  412af0 <BIO_ctrl@plt>
  418908:	mov    (%rsp),%rbx
  41890c:	xor    %eax,%eax
  41890e:	jmpq   418850 <X509_get0_pubkey_bitstr@plt+0x1e80>
  418913:	sub    $0x2,%eax
  418916:	movslq %eax,%rdx
  418919:	sub    %eax,%r13d
  41891c:	add    %rdx,%rbx
  41891f:	jmpq   418850 <X509_get0_pubkey_bitstr@plt+0x1e80>
  418924:	mov    0x30(%rsp),%rax
  418929:	mov    0x0(%rbp),%rdi
  41892d:	lea    0x52da6(%rip),%rsi        # 46b6da <_fini+0xe1d6>
  418934:	mov    (%rax),%rdx
  418937:	xor    %eax,%eax
  418939:	callq  413c40 <BIO_printf@plt>
  41893e:	jmp    4188f0 <X509_get0_pubkey_bitstr@plt+0x1f20>
  418940:	mov    0x0(%rbp),%rdi
  418944:	lea    0x451b5(%rip),%rsi        # 45db00 <_fini+0x5fc>
  41894b:	mov    %r12,%rdx
  41894e:	xor    %eax,%eax
  418950:	callq  413c40 <BIO_printf@plt>
  418955:	callq  412890 <ERR_clear_error@plt>
  41895a:	lea    0x2623e7(%rip),%rax        # 67ad48 <_edata+0x40>
  418961:	mov    (%rax),%rdi
  418964:	callq  4137f0 <NCONF_free@plt>
  418969:	lea    0x2623d8(%rip),%rax        # 67ad48 <_edata+0x40>
  418970:	movq   $0x0,(%rax)
  418977:	jmpq   418605 <X509_get0_pubkey_bitstr@plt+0x1c35>
  41897c:	lea    0x8(%rbx),%rdx
  418980:	lea    -0x1(%r15),%esi
  418984:	mov    %r12,%rdi
  418987:	xor    %ebx,%ebx
  418989:	callq  418c40 <X509_get0_pubkey_bitstr@plt+0x2270>
  41898e:	test   %eax,%eax
  418990:	cmovns %eax,%ebx
  418993:	jmpq   4186c4 <X509_get0_pubkey_bitstr@plt+0x1cf4>
  418998:	callq  4152b0 <BIO_s_file@plt>
  41899d:	mov    %rax,%rdi
  4189a0:	callq  414a20 <BIO_new@plt>
  4189a5:	test   %rax,%rax
  4189a8:	mov    %rax,0x0(%rbp)
  4189ac:	je     4184ed <X509_get0_pubkey_bitstr@plt+0x1b1d>
  4189b2:	mov    0x25d5c7(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  4189b9:	mov    $0x6a,%esi
  4189be:	mov    %rax,%rdi
  4189c1:	mov    (%rdx),%rcx
  4189c4:	mov    $0x10,%edx
  4189c9:	callq  412af0 <BIO_ctrl@plt>
  4189ce:	jmpq   4184ed <X509_get0_pubkey_bitstr@plt+0x1b1d>
  4189d3:	xor    %ebx,%ebx
  4189d5:	jmpq   4186c4 <X509_get0_pubkey_bitstr@plt+0x1cf4>
  4189da:	lea    0x44d16(%rip),%rdi        # 45d6f7 <_fini+0x1f3>
  4189e1:	callq  414fc0 <getenv@plt>
  4189e6:	test   %rax,%rax
  4189e9:	jne    418a1f <X509_get0_pubkey_bitstr@plt+0x204f>
  4189eb:	callq  446c00 <X509_get0_pubkey_bitstr@plt+0x30230>
  4189f0:	mov    %rax,%r14
  4189f3:	mov    %rax,%r12
  4189f6:	jmpq   4185d2 <X509_get0_pubkey_bitstr@plt+0x1c02>
  4189fb:	mov    0x0(%rbp),%rdi
  4189ff:	lea    0x44cfd(%rip),%rsi        # 45d703 <_fini+0x1ff>
  418a06:	xor    %eax,%eax
  418a08:	mov    $0x1,%ebx
  418a0d:	callq  413c40 <BIO_printf@plt>
  418a12:	jmpq   4186c4 <X509_get0_pubkey_bitstr@plt+0x1cf4>
  418a17:	xor    %r12d,%r12d
  418a1a:	jmpq   418686 <X509_get0_pubkey_bitstr@plt+0x1cb6>
  418a1f:	mov    %r12,%r14
  418a22:	mov    %rax,%r12
  418a25:	jmpq   4185d2 <X509_get0_pubkey_bitstr@plt+0x1c02>
  418a2a:	xchg   %ax,%ax
  418a2c:	xor    %ebp,%ebp
  418a2e:	mov    %rdx,%r9
  418a31:	pop    %rsi
  418a32:	mov    %rsp,%rdx
  418a35:	and    $0xfffffffffffffff0,%rsp
  418a39:	push   %rax
  418a3a:	push   %rsp
  418a3b:	mov    $0x45d500,%r8
  418a42:	mov    $0x45d490,%rcx
  418a49:	mov    $0x4184a0,%rdi
  418a50:	callq  416590 <__libc_start_main@plt>
  418a55:	hlt    
  418a56:	xchg   %ax,%ax
  418a58:	nopl   0x0(%rax,%rax,1)
  418a60:	mov    $0x67ad0f,%eax
  418a65:	push   %rbp
  418a66:	sub    $0x67ad08,%rax
  418a6c:	cmp    $0xe,%rax
  418a70:	mov    %rsp,%rbp
  418a73:	ja     418a77 <X509_get0_pubkey_bitstr@plt+0x20a7>
  418a75:	pop    %rbp
  418a76:	retq   
  418a77:	mov    $0x0,%eax
  418a7c:	test   %rax,%rax
  418a7f:	je     418a75 <X509_get0_pubkey_bitstr@plt+0x20a5>
  418a81:	pop    %rbp
  418a82:	mov    $0x67ad08,%edi
  418a87:	jmpq   *%rax
  418a89:	nopl   0x0(%rax)
  418a90:	mov    $0x67ad08,%eax
  418a95:	push   %rbp
  418a96:	sub    $0x67ad08,%rax
  418a9c:	sar    $0x3,%rax
  418aa0:	mov    %rsp,%rbp
  418aa3:	mov    %rax,%rdx
  418aa6:	shr    $0x3f,%rdx
  418aaa:	add    %rdx,%rax
  418aad:	sar    %rax
  418ab0:	jne    418ab4 <X509_get0_pubkey_bitstr@plt+0x20e4>
  418ab2:	pop    %rbp
  418ab3:	retq   
  418ab4:	mov    $0x0,%edx
  418ab9:	test   %rdx,%rdx
  418abc:	je     418ab2 <X509_get0_pubkey_bitstr@plt+0x20e2>
  418abe:	pop    %rbp
  418abf:	mov    %rax,%rsi
  418ac2:	mov    $0x67ad08,%edi
  418ac7:	jmpq   *%rdx
  418ac9:	nopl   0x0(%rax)
  418ad0:	cmpb   $0x0,0x262249(%rip)        # 67ad20 <_edata+0x18>
  418ad7:	jne    418aea <X509_get0_pubkey_bitstr@plt+0x211a>
  418ad9:	push   %rbp
  418ada:	mov    %rsp,%rbp
  418add:	callq  418a60 <X509_get0_pubkey_bitstr@plt+0x2090>
  418ae2:	pop    %rbp
  418ae3:	movb   $0x1,0x262236(%rip)        # 67ad20 <_edata+0x18>
  418aea:	repz retq 
  418aec:	nopl   0x0(%rax)
  418af0:	cmpq   $0x0,0x25cbf8(%rip)        # 6756f0 <_fini+0x2181ec>
  418af8:	je     418b18 <X509_get0_pubkey_bitstr@plt+0x2148>
  418afa:	mov    $0x0,%eax
  418aff:	test   %rax,%rax
  418b02:	je     418b18 <X509_get0_pubkey_bitstr@plt+0x2148>
  418b04:	push   %rbp
  418b05:	mov    $0x6756f0,%edi
  418b0a:	mov    %rsp,%rbp
  418b0d:	callq  *%rax
  418b0f:	pop    %rbp
  418b10:	jmpq   418a90 <X509_get0_pubkey_bitstr@plt+0x20c0>
  418b15:	nopl   (%rax)
  418b18:	jmpq   418a90 <X509_get0_pubkey_bitstr@plt+0x20c0>
  418b1d:	nopl   (%rax)
  418b20:	mov    %edi,%eax
  418b22:	sub    $0x18,%rsp
  418b26:	mov    %esi,%r9d
  418b29:	and    $0xc,%eax
  418b2c:	mov    %edi,%r8d
  418b2f:	mov    %ecx,%esi
  418b31:	cmp    $0x8,%eax
  418b34:	je     418b70 <X509_get0_pubkey_bitstr@plt+0x21a0>
  418b36:	cmp    $0x4,%eax
  418b39:	je     418b70 <X509_get0_pubkey_bitstr@plt+0x21a0>
  418b3b:	lea    0x449ee(%rip),%rcx        # 45d530 <_fini+0x2c>
  418b42:	mov    0x25d437(%rip),%rax        # 675f80 <_fini+0x218a7c>
  418b49:	mov    %esi,0x8(%rsp)
  418b4d:	mov    $0x1,%esi
  418b52:	mov    %rdx,(%rsp)
  418b56:	lea    0x44e93(%rip),%rdx        # 45d9f0 <_fini+0x4ec>
  418b5d:	mov    (%rax),%rdi
  418b60:	xor    %eax,%eax
  418b62:	callq  415e20 <__fprintf_chk@plt>
  418b67:	add    $0x18,%rsp
  418b6b:	retq   
  418b6c:	nopl   0x0(%rax)
  418b70:	cmp    $0x28,%r9d
  418b74:	jbe    418b80 <X509_get0_pubkey_bitstr@plt+0x21b0>
  418b76:	lea    0x449da(%rip),%rcx        # 45d557 <_fini+0x53>
  418b7d:	jmp    418b42 <X509_get0_pubkey_bitstr@plt+0x2172>
  418b7f:	nop
  418b80:	test   $0x1,%r8b
  418b84:	je     418ba0 <X509_get0_pubkey_bitstr@plt+0x21d0>
  418b86:	lea    0x2621d3(%rip),%rcx        # 67ad60 <_edata+0x58>
  418b8d:	movslq %r9d,%rdi
  418b90:	mov    (%rcx,%rdi,4),%r10d
  418b94:	test   %r10d,%r10d
  418b97:	jne    418be0 <X509_get0_pubkey_bitstr@plt+0x2210>
  418b99:	mov    %eax,(%rcx,%rdi,4)
  418b9c:	jmp    418b67 <X509_get0_pubkey_bitstr@plt+0x2197>
  418b9e:	xchg   %ax,%ax
  418ba0:	test   $0x2,%r8b
  418ba4:	je     418b3b <X509_get0_pubkey_bitstr@plt+0x216b>
  418ba6:	lea    0x2621b3(%rip),%rdi        # 67ad60 <_edata+0x58>
  418bad:	movslq %r9d,%r10
  418bb0:	mov    (%rdi,%r10,4),%ecx
  418bb4:	test   %ecx,%ecx
  418bb6:	je     418bf0 <X509_get0_pubkey_bitstr@plt+0x2220>
  418bb8:	cmp    %ecx,%eax
  418bba:	je     418bfc <X509_get0_pubkey_bitstr@plt+0x222c>
  418bbc:	cmp    $0x4,%eax
  418bbf:	lea    0x449a4(%rip),%rcx        # 45d56a <_fini+0x66>
  418bc6:	lea    0x449bb(%rip),%rax        # 45d588 <_fini+0x84>
  418bcd:	movl   $0x0,(%rdi,%r10,4)
  418bd5:	cmovne %rax,%rcx
  418bd9:	jmpq   418b42 <X509_get0_pubkey_bitstr@plt+0x2172>
  418bde:	xchg   %ax,%ax
  418be0:	lea    0x44961(%rip),%rcx        # 45d548 <_fini+0x44>
  418be7:	jmpq   418b42 <X509_get0_pubkey_bitstr@plt+0x2172>
  418bec:	nopl   0x0(%rax)
  418bf0:	lea    0x44946(%rip),%rcx        # 45d53d <_fini+0x39>
  418bf7:	jmpq   418b42 <X509_get0_pubkey_bitstr@plt+0x2172>
  418bfc:	movl   $0x0,(%rdi,%r10,4)
  418c04:	jmpq   418b67 <X509_get0_pubkey_bitstr@plt+0x2197>
  418c09:	nopl   0x0(%rax)
  418c10:	mov    0x8(%rsi),%rsi
  418c14:	mov    0x8(%rdi),%rdi
  418c18:	mov    $0x8,%edx
  418c1d:	jmpq   4135d0 <strncmp@plt>
  418c22:	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  418c30:	mov    0x8(%rdi),%rdi
  418c34:	jmpq   4168f0 <lh_strhash@plt>
  418c39:	nopl   0x0(%rax)
  418c40:	push   %r15
  418c42:	push   %r14
  418c44:	push   %r13
  418c46:	push   %r12
  418c48:	mov    %esi,%r12d
  418c4b:	push   %rbp
  418c4c:	push   %rbx
  418c4d:	sub    $0x48,%rsp
  418c51:	mov    %fs:0x28,%rax
  418c5a:	mov    %rax,0x38(%rsp)
  418c5f:	xor    %eax,%eax
  418c61:	test   %esi,%esi
  418c63:	jle    418cc0 <X509_get0_pubkey_bitstr@plt+0x22f0>
  418c65:	mov    (%rdx),%rax
  418c68:	xor    %ebx,%ebx
  418c6a:	mov    %rdx,%rbp
  418c6d:	test   %rax,%rax
  418c70:	je     418c9a <X509_get0_pubkey_bitstr@plt+0x22ca>
  418c72:	lea    0x20(%rsp),%rbx
  418c77:	mov    %rdi,%r13
  418c7a:	mov    %rax,0x28(%rsp)
  418c7f:	mov    %rbx,%rsi
  418c82:	callq  413ac0 <lh_retrieve@plt>
  418c87:	test   %rax,%rax
  418c8a:	je     418cc8 <X509_get0_pubkey_bitstr@plt+0x22f8>
  418c8c:	mov    0x10(%rax),%rax
  418c90:	mov    %rbp,%rsi
  418c93:	mov    %r12d,%edi
  418c96:	callq  *%rax
  418c98:	mov    %eax,%ebx
  418c9a:	mov    0x38(%rsp),%rcx
  418c9f:	xor    %fs:0x28,%rcx
  418ca8:	mov    %ebx,%eax
  418caa:	jne    418d10 <X509_get0_pubkey_bitstr@plt+0x2340>
  418cac:	add    $0x48,%rsp
  418cb0:	pop    %rbx
  418cb1:	pop    %rbp
  418cb2:	pop    %r12
  418cb4:	pop    %r13
  418cb6:	pop    %r14
  418cb8:	pop    %r15
  418cba:	retq   
  418cbb:	nopl   0x0(%rax,%rax,1)
  418cc0:	xor    %ebx,%ebx
  418cc2:	jmp    418c9a <X509_get0_pubkey_bitstr@plt+0x22ca>
  418cc4:	nopl   0x0(%rax)
  418cc8:	mov    0x0(%rbp),%rdi
  418ccc:	callq  416720 <EVP_get_digestbyname@plt>
  418cd1:	test   %rax,%rax
  418cd4:	je     418cec <X509_get0_pubkey_bitstr@plt+0x231c>
  418cd6:	lea    0x5643(%rip),%rax        # 41e320 <X509_get0_pubkey_bitstr@plt+0x7950>
  418cdd:	movl   $0x2,0x20(%rsp)
  418ce5:	mov    %rax,0x30(%rsp)
  418cea:	jmp    418c90 <X509_get0_pubkey_bitstr@plt+0x22c0>
  418cec:	mov    0x0(%rbp),%rdi
  418cf0:	callq  416810 <EVP_get_cipherbyname@plt>
  418cf5:	test   %rax,%rax
  418cf8:	je     418d15 <X509_get0_pubkey_bitstr@plt+0x2345>
  418cfa:	lea    0x861f(%rip),%rax        # 421320 <X509_get0_pubkey_bitstr@plt+0xa950>
  418d01:	movl   $0x3,0x20(%rsp)
  418d09:	mov    %rax,0x30(%rsp)
  418d0e:	jmp    418c90 <X509_get0_pubkey_bitstr@plt+0x22c0>
  418d10:	callq  414c30 <__stack_chk_fail@plt>
  418d15:	mov    0x0(%rbp),%r12
  418d19:	lea    0x44984(%rip),%rsi        # 45d6a4 <_fini+0x1a0>
  418d20:	mov    $0x3,%edx
  418d25:	mov    %r12,%rdi
  418d28:	callq  4135d0 <strncmp@plt>
  418d2d:	test   %eax,%eax
  418d2f:	je     418f60 <X509_get0_pubkey_bitstr@plt+0x2590>
  418d35:	lea    0x44881(%rip),%rdi        # 45d5bd <_fini+0xb9>
  418d3c:	mov    $0x5,%ecx
  418d41:	mov    %r12,%rsi
  418d44:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  418d46:	je     419164 <X509_get0_pubkey_bitstr@plt+0x2794>
  418d4c:	movzbl (%r12),%eax
  418d51:	cmp    $0x71,%eax
  418d54:	jne    418e50 <X509_get0_pubkey_bitstr@plt+0x2480>
  418d5a:	cmpb   $0x0,0x1(%r12)
  418d60:	mov    $0xffffffff,%ebx
  418d65:	je     418c9a <X509_get0_pubkey_bitstr@plt+0x22ca>
  418d6b:	lea    0x4fb95(%rip),%rsi        # 468907 <_fini+0xb403>
  418d72:	mov    %r12,%rdi
  418d75:	callq  4155c0 <strcmp@plt>
  418d7a:	test   %eax,%eax
  418d7c:	je     419164 <X509_get0_pubkey_bitstr@plt+0x2794>
  418d82:	nopw   0x0(%rax,%rax,1)
  418d88:	lea    0x44833(%rip),%rdi        # 45d5c2 <_fini+0xbe>
  418d8f:	mov    $0x17,%ecx
  418d94:	mov    %r12,%rsi
  418d97:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  418d99:	je     418f20 <X509_get0_pubkey_bitstr@plt+0x2550>
  418d9f:	lea    0x44833(%rip),%rdi        # 45d5d9 <_fini+0xd5>
  418da6:	mov    $0x1d,%ecx
  418dab:	mov    %r12,%rsi
  418dae:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  418db0:	je     418fc0 <X509_get0_pubkey_bitstr@plt+0x25f0>
  418db6:	lea    0x44c6b(%rip),%rdi        # 45da28 <_fini+0x524>
  418dbd:	mov    $0x1f,%ecx
  418dc2:	mov    %r12,%rsi
  418dc5:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  418dc7:	jne    418fe7 <X509_get0_pubkey_bitstr@plt+0x2617>
  418dcd:	mov    0x25d0e4(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  418dd4:	xor    %esi,%esi
  418dd6:	mov    (%rax),%rdi
  418dd9:	callq  4161e0 <BIO_new_fp@plt>
  418dde:	mov    %rax,%r12
  418de1:	lea    0x261f58(%rip),%rax        # 67ad40 <_edata+0x38>
  418de8:	xor    %esi,%esi
  418dea:	mov    (%rax),%rdi
  418ded:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  418df2:	test   %eax,%eax
  418df4:	je     418f52 <X509_get0_pubkey_bitstr@plt+0x2582>
  418dfa:	lea    0x4bf(%rip),%rdi        # 4192c0 <X509_get0_pubkey_bitstr@plt+0x28f0>
  418e01:	mov    %r12,%rsi
  418e04:	mov    $0x5,%ebp
  418e09:	callq  4163a0 <EVP_MD_do_all_sorted@plt>
  418e0e:	lea    0x25f36b(%rip),%rbx        # 678180 <_fini+0x21ac7c>
  418e15:	mov    0x8(%rbx),%rdx
  418e19:	test   %rdx,%rdx
  418e1c:	jne    418e39 <X509_get0_pubkey_bitstr@plt+0x2469>
  418e1e:	jmpq   418f08 <X509_get0_pubkey_bitstr@plt+0x2538>
  418e23:	nopl   0x0(%rax,%rax,1)
  418e28:	add    $0x18,%rbx
  418e2c:	mov    0x8(%rbx),%rdx
  418e30:	test   %rdx,%rdx
  418e33:	je     418f08 <X509_get0_pubkey_bitstr@plt+0x2538>
  418e39:	cmp    %ebp,(%rbx)
  418e3b:	jne    418e28 <X509_get0_pubkey_bitstr@plt+0x2458>
  418e3d:	lea    0x47975(%rip),%rsi        # 4607b9 <_fini+0x32b5>
  418e44:	mov    %r12,%rdi
  418e47:	xor    %eax,%eax
  418e49:	callq  413c40 <BIO_printf@plt>
  418e4e:	jmp    418e28 <X509_get0_pubkey_bitstr@plt+0x2458>
  418e50:	lea    0x4fab0(%rip),%rdi        # 468907 <_fini+0xb403>
  418e57:	mov    $0x5,%ecx
  418e5c:	mov    %r12,%rsi
  418e5f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  418e61:	je     419164 <X509_get0_pubkey_bitstr@plt+0x2794>
  418e67:	cmp    $0x62,%eax
  418e6a:	jne    418d88 <X509_get0_pubkey_bitstr@plt+0x23b8>
  418e70:	cmpb   $0x79,0x1(%r12)
  418e76:	jne    418d88 <X509_get0_pubkey_bitstr@plt+0x23b8>
  418e7c:	cmpb   $0x65,0x2(%r12)
  418e82:	jne    418d88 <X509_get0_pubkey_bitstr@plt+0x23b8>
  418e88:	cmpb   $0x0,0x3(%r12)
  418e8e:	mov    $0xffffffff,%ebx
  418e93:	jne    418d88 <X509_get0_pubkey_bitstr@plt+0x23b8>
  418e99:	jmpq   418c9a <X509_get0_pubkey_bitstr@plt+0x22ca>
  418e9e:	lea    0x4477d(%rip),%rdi        # 45d622 <_fini+0x11e>
  418ea5:	mov    $0x1b,%ecx
  418eaa:	mov    %r12,%rsi
  418ead:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  418eaf:	je     41902c <X509_get0_pubkey_bitstr@plt+0x265c>
  418eb5:	lea    0x4474f(%rip),%rdi        # 45d60b <_fini+0x107>
  418ebc:	mov    $0x17,%ecx
  418ec1:	mov    %r12,%rsi
  418ec4:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  418ec6:	jne    419189 <X509_get0_pubkey_bitstr@plt+0x27b9>
  418ecc:	mov    0x25cfe5(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  418ed3:	xor    %esi,%esi
  418ed5:	mov    (%rax),%rdi
  418ed8:	callq  4161e0 <BIO_new_fp@plt>
  418edd:	mov    %rax,%r12
  418ee0:	lea    0x261e59(%rip),%rax        # 67ad40 <_edata+0x38>
  418ee7:	xor    %esi,%esi
  418ee9:	mov    (%rax),%rdi
  418eec:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  418ef1:	test   %eax,%eax
  418ef3:	je     418f52 <X509_get0_pubkey_bitstr@plt+0x2582>
  418ef5:	lea    0x424(%rip),%rdi        # 419320 <X509_get0_pubkey_bitstr@plt+0x2950>
  418efc:	mov    %r12,%rsi
  418eff:	callq  416310 <EVP_CIPHER_do_all_sorted@plt>
  418f04:	nopl   0x0(%rax)
  418f08:	mov    %r12,%rdi
  418f0b:	xor    %ebx,%ebx
  418f0d:	callq  416570 <BIO_free_all@plt>
  418f12:	jmpq   418c9a <X509_get0_pubkey_bitstr@plt+0x22ca>
  418f17:	nopw   0x0(%rax,%rax,1)
  418f20:	mov    $0x1,%ebp
  418f25:	mov    0x25cf8c(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  418f2c:	xor    %esi,%esi
  418f2e:	mov    (%rax),%rdi
  418f31:	callq  4161e0 <BIO_new_fp@plt>
  418f36:	mov    %rax,%r12
  418f39:	lea    0x261e00(%rip),%rax        # 67ad40 <_edata+0x38>
  418f40:	xor    %esi,%esi
  418f42:	mov    (%rax),%rdi
  418f45:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  418f4a:	test   %eax,%eax
  418f4c:	jne    418e0e <X509_get0_pubkey_bitstr@plt+0x243e>
  418f52:	mov    $0x1,%ebx
  418f57:	jmpq   418c9a <X509_get0_pubkey_bitstr@plt+0x22ca>
  418f5c:	nopl   0x0(%rax)
  418f60:	mov    0x25cf51(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  418f67:	xor    %esi,%esi
  418f69:	mov    (%rax),%rdi
  418f6c:	callq  4161e0 <BIO_new_fp@plt>
  418f71:	mov    %rax,%r12
  418f74:	mov    0x0(%rbp),%rax
  418f78:	mov    %rbx,%rsi
  418f7b:	mov    %r13,%rdi
  418f7e:	xor    %ebx,%ebx
  418f80:	add    $0x3,%rax
  418f84:	mov    %rax,0x28(%rsp)
  418f89:	callq  413ac0 <lh_retrieve@plt>
  418f8e:	test   %rax,%rax
  418f91:	mov    0x0(%rbp),%rdx
  418f95:	setne  %bl
  418f98:	jne    418fd0 <X509_get0_pubkey_bitstr@plt+0x2600>
  418f9a:	lea    0x47818(%rip),%rsi        # 4607b9 <_fini+0x32b5>
  418fa1:	mov    %r12,%rdi
  418fa4:	callq  413c40 <BIO_printf@plt>
  418fa9:	mov    %r12,%rdi
  418fac:	callq  416570 <BIO_free_all@plt>
  418fb1:	jmpq   418c9a <X509_get0_pubkey_bitstr@plt+0x22ca>
  418fb6:	nopw   %cs:0x0(%rax,%rax,1)
  418fc0:	mov    $0x2,%ebp
  418fc5:	jmpq   418f25 <X509_get0_pubkey_bitstr@plt+0x2555>
  418fca:	nopw   0x0(%rax,%rax,1)
  418fd0:	lea    0x477e2(%rip),%rsi        # 4607b9 <_fini+0x32b5>
  418fd7:	add    $0x3,%rdx
  418fdb:	mov    %r12,%rdi
  418fde:	xor    %eax,%eax
  418fe0:	callq  413c40 <BIO_printf@plt>
  418fe5:	jmp    418fa9 <X509_get0_pubkey_bitstr@plt+0x25d9>
  418fe7:	lea    0x44608(%rip),%rdi        # 45d5f6 <_fini+0xf2>
  418fee:	mov    $0x15,%ecx
  418ff3:	mov    %r12,%rsi
  418ff6:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  418ff8:	je     418e9e <X509_get0_pubkey_bitstr@plt+0x24ce>
  418ffe:	lea    0x44606(%rip),%rdi        # 45d60b <_fini+0x107>
  419005:	mov    $0x17,%ecx
  41900a:	mov    %r12,%rsi
  41900d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41900f:	je     418e9e <X509_get0_pubkey_bitstr@plt+0x24ce>
  419015:	lea    0x44606(%rip),%rdi        # 45d622 <_fini+0x11e>
  41901c:	mov    $0x1b,%ecx
  419021:	mov    %r12,%rsi
  419024:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  419026:	jne    419193 <X509_get0_pubkey_bitstr@plt+0x27c3>
  41902c:	mov    0x25ce85(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  419033:	xor    %esi,%esi
  419035:	mov    (%rax),%rdi
  419038:	callq  4161e0 <BIO_new_fp@plt>
  41903d:	mov    %rax,%r12
  419040:	lea    0x261cf9(%rip),%rax        # 67ad40 <_edata+0x38>
  419047:	xor    %esi,%esi
  419049:	mov    (%rax),%rdi
  41904c:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  419051:	test   %eax,%eax
  419053:	je     418f52 <X509_get0_pubkey_bitstr@plt+0x2582>
  419059:	xor    %ebx,%ebx
  41905b:	lea    0x18(%rsp),%r15
  419060:	lea    0x10(%rsp),%r14
  419065:	lea    0xc(%rsp),%r13
  41906a:	lea    0x8(%rsp),%rbp
  41906f:	jmp    4190b5 <X509_get0_pubkey_bitstr@plt+0x26e5>
  419071:	nopl   0x0(%rax)
  419078:	mov    0x4(%rsp),%edi
  41907c:	callq  413920 <OBJ_nid2ln@plt>
  419081:	lea    0x445b5(%rip),%rsi        # 45d63d <_fini+0x139>
  419088:	mov    %rax,%rdx
  41908b:	mov    %r12,%rdi
  41908e:	xor    %eax,%eax
  419090:	callq  413c40 <BIO_printf@plt>
  419095:	mov    0x8(%rsp),%edi
  419099:	callq  413920 <OBJ_nid2ln@plt>
  41909e:	lea    0x445a2(%rip),%rsi        # 45d647 <_fini+0x143>
  4190a5:	mov    %rax,%rdx
  4190a8:	mov    %r12,%rdi
  4190ab:	xor    %eax,%eax
  4190ad:	callq  413c40 <BIO_printf@plt>
  4190b2:	add    $0x1,%ebx
  4190b5:	callq  414c20 <EVP_PKEY_asn1_get_count@plt>
  4190ba:	cmp    %eax,%ebx
  4190bc:	jge    41916e <X509_get0_pubkey_bitstr@plt+0x279e>
  4190c2:	mov    %ebx,%edi
  4190c4:	callq  4163f0 <EVP_PKEY_asn1_get0@plt>
  4190c9:	lea    0x4(%rsp),%rdi
  4190ce:	mov    %rax,%r9
  4190d1:	mov    %r15,%r8
  4190d4:	mov    %r14,%rcx
  4190d7:	mov    %r13,%rdx
  4190da:	mov    %rbp,%rsi
  4190dd:	callq  414ec0 <EVP_PKEY_asn1_get0_info@plt>
  4190e2:	testb  $0x1,0xc(%rsp)
  4190e7:	jne    419078 <X509_get0_pubkey_bitstr@plt+0x26a8>
  4190e9:	mov    0x10(%rsp),%rdx
  4190ee:	lea    0x44548(%rip),%rsi        # 45d63d <_fini+0x139>
  4190f5:	mov    %r12,%rdi
  4190f8:	xor    %eax,%eax
  4190fa:	callq  413c40 <BIO_printf@plt>
  4190ff:	testb  $0x2,0xc(%rsp)
  419104:	lea    0x444a3(%rip),%rax        # 45d5ae <_fini+0xaa>
  41910b:	lea    0x44493(%rip),%rdx        # 45d5a5 <_fini+0xa1>
  419112:	lea    0x44542(%rip),%rsi        # 45d65b <_fini+0x157>
  419119:	mov    %r12,%rdi
  41911c:	cmove  %rax,%rdx
  419120:	xor    %eax,%eax
  419122:	callq  413c40 <BIO_printf@plt>
  419127:	mov    0x4(%rsp),%edi
  41912b:	callq  413920 <OBJ_nid2ln@plt>
  419130:	lea    0x44539(%rip),%rsi        # 45d670 <_fini+0x16c>
  419137:	mov    %rax,%rdx
  41913a:	mov    %r12,%rdi
  41913d:	xor    %eax,%eax
  41913f:	callq  413c40 <BIO_printf@plt>
  419144:	mov    0x18(%rsp),%rdx
  419149:	test   %rdx,%rdx
  41914c:	je     419178 <X509_get0_pubkey_bitstr@plt+0x27a8>
  41914e:	lea    0x44525(%rip),%rsi        # 45d67a <_fini+0x176>
  419155:	mov    %r12,%rdi
  419158:	xor    %eax,%eax
  41915a:	callq  413c40 <BIO_printf@plt>
  41915f:	jmpq   4190b2 <X509_get0_pubkey_bitstr@plt+0x26e2>
  419164:	mov    $0xffffffff,%ebx
  419169:	jmpq   418c9a <X509_get0_pubkey_bitstr@plt+0x22ca>
  41916e:	mov    $0x4,%ebp
  419173:	jmpq   418e0e <X509_get0_pubkey_bitstr@plt+0x243e>
  419178:	lea    0x44437(%rip),%rax        # 45d5b6 <_fini+0xb2>
  41917f:	mov    %rax,0x18(%rsp)
  419184:	mov    %rax,%rdx
  419187:	jmp    41914e <X509_get0_pubkey_bitstr@plt+0x277e>
  419189:	mov    $0x3,%ebp
  41918e:	jmpq   418f25 <X509_get0_pubkey_bitstr@plt+0x2555>
  419193:	lea    0x261ba6(%rip),%r13        # 67ad40 <_edata+0x38>
  41919a:	lea    0x448a7(%rip),%rsi        # 45da48 <_fini+0x544>
  4191a1:	mov    %r12,%rdx
  4191a4:	xor    %eax,%eax
  4191a6:	xor    %ebp,%ebp
  4191a8:	mov    0x0(%r13),%rdi
  4191ac:	callq  413c40 <BIO_printf@plt>
  4191b1:	mov    0x0(%r13),%rdi
  4191b5:	lea    0x444cf(%rip),%rsi        # 45d68b <_fini+0x187>
  4191bc:	xor    %eax,%eax
  4191be:	callq  413c40 <BIO_printf@plt>
  4191c3:	lea    0x25efb6(%rip),%rbx        # 678180 <_fini+0x21ac7c>
  4191ca:	xor    %eax,%eax
  4191cc:	cmpq   $0x0,0x8(%rbx)
  4191d1:	jne    419220 <X509_get0_pubkey_bitstr@plt+0x2850>
  4191d3:	jmp    419244 <X509_get0_pubkey_bitstr@plt+0x2874>
  4191d5:	mov    (%rbx),%r14d
  4191d8:	cmp    %ebp,%r14d
  4191db:	je     4191fc <X509_get0_pubkey_bitstr@plt+0x282c>
  4191dd:	mov    0x0(%r13),%rdi
  4191e1:	lea    0x4b9b7(%rip),%rsi        # 464b9f <_fini+0x769b>
  4191e8:	xor    %eax,%eax
  4191ea:	mov    %r14d,%ebp
  4191ed:	callq  413c40 <BIO_printf@plt>
  4191f2:	cmp    $0x2,%ebp
  4191f5:	je     41925d <X509_get0_pubkey_bitstr@plt+0x288d>
  4191f7:	cmp    $0x3,%ebp
  4191fa:	je     419277 <X509_get0_pubkey_bitstr@plt+0x28a7>
  4191fc:	mov    0x8(%rbx),%rdx
  419200:	mov    0x0(%r13),%rdi
  419204:	lea    0x44493(%rip),%rsi        # 45d69e <_fini+0x19a>
  41920b:	xor    %eax,%eax
  41920d:	add    $0x18,%rbx
  419211:	callq  413c40 <BIO_printf@plt>
  419216:	cmpq   $0x0,0x8(%rbx)
  41921b:	je     419244 <X509_get0_pubkey_bitstr@plt+0x2874>
  41921d:	mov    %r12d,%eax
  419220:	test   $0x3,%al
  419222:	lea    0x1(%rax),%r12d
  419226:	jne    4191d5 <X509_get0_pubkey_bitstr@plt+0x2805>
  419228:	mov    0x0(%r13),%rdi
  41922c:	lea    0x4b96c(%rip),%rsi        # 464b9f <_fini+0x769b>
  419233:	xor    %eax,%eax
  419235:	callq  413c40 <BIO_printf@plt>
  41923a:	mov    (%rbx),%eax
  41923c:	cmp    %ebp,%eax
  41923e:	je     4191fc <X509_get0_pubkey_bitstr@plt+0x282c>
  419240:	mov    %eax,%ebp
  419242:	jmp    4191f2 <X509_get0_pubkey_bitstr@plt+0x2822>
  419244:	mov    0x0(%r13),%rdi
  419248:	lea    0x4b94f(%rip),%rsi        # 464b9e <_fini+0x769a>
  41924f:	xor    %eax,%eax
  419251:	xor    %ebx,%ebx
  419253:	callq  413c40 <BIO_printf@plt>
  419258:	jmpq   418c9a <X509_get0_pubkey_bitstr@plt+0x22ca>
  41925d:	mov    0x0(%r13),%rdi
  419261:	lea    0x44810(%rip),%rsi        # 45da78 <_fini+0x574>
  419268:	xor    %eax,%eax
  41926a:	mov    $0x1,%r12d
  419270:	callq  413c40 <BIO_printf@plt>
  419275:	jmp    4191fc <X509_get0_pubkey_bitstr@plt+0x282c>
  419277:	mov    0x0(%r13),%rdi
  41927b:	lea    0x4483e(%rip),%rsi        # 45dac0 <_fini+0x5bc>
  419282:	xor    %eax,%eax
  419284:	mov    $0x1,%r12d
  41928a:	callq  413c40 <BIO_printf@plt>
  41928f:	jmpq   4191fc <X509_get0_pubkey_bitstr@plt+0x282c>
  419294:	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4192a0:	mov    (%rdi),%eax
  4192a2:	mov    (%rsi),%edx
  4192a4:	cmp    %edx,%eax
  4192a6:	je     4192b0 <X509_get0_pubkey_bitstr@plt+0x28e0>
  4192a8:	sub    %edx,%eax
  4192aa:	retq   
  4192ab:	nopl   0x0(%rax,%rax,1)
  4192b0:	mov    0x8(%rsi),%rsi
  4192b4:	mov    0x8(%rdi),%rdi
  4192b8:	jmpq   4155c0 <strcmp@plt>
  4192bd:	nopl   (%rax)
  4192c0:	test   %rdi,%rdi
  4192c3:	push   %rbx
  4192c4:	mov    %rcx,%rbx
  4192c7:	je     4192f0 <X509_get0_pubkey_bitstr@plt+0x2920>
  4192c9:	callq  415290 <EVP_MD_type@plt>
  4192ce:	mov    %eax,%edi
  4192d0:	callq  415b30 <OBJ_nid2sn@plt>
  4192d5:	mov    %rbx,%rdi
  4192d8:	lea    0x474da(%rip),%rsi        # 4607b9 <_fini+0x32b5>
  4192df:	mov    %rax,%rdx
  4192e2:	pop    %rbx
  4192e3:	xor    %eax,%eax
  4192e5:	jmpq   413c40 <BIO_printf@plt>
  4192ea:	nopw   0x0(%rax,%rax,1)
  4192f0:	lea    0x443b1(%rip),%rax        # 45d6a8 <_fini+0x1a4>
  4192f7:	test   %rsi,%rsi
  4192fa:	mov    %rbx,%rdi
  4192fd:	pop    %rbx
  4192fe:	cmove  %rax,%rsi
  419302:	test   %rdx,%rdx
  419305:	cmove  %rax,%rdx
  419309:	xor    %eax,%eax
  41930b:	mov    %rdx,%rcx
  41930e:	mov    %rsi,%rdx
  419311:	lea    0x4439c(%rip),%rsi        # 45d6b4 <_fini+0x1b0>
  419318:	jmpq   413c40 <BIO_printf@plt>
  41931d:	nopl   (%rax)
  419320:	test   %rdi,%rdi
  419323:	push   %rbx
  419324:	mov    %rcx,%rbx
  419327:	je     419350 <X509_get0_pubkey_bitstr@plt+0x2980>
  419329:	callq  412fa0 <EVP_CIPHER_nid@plt>
  41932e:	mov    %eax,%edi
  419330:	callq  415b30 <OBJ_nid2sn@plt>
  419335:	mov    %rbx,%rdi
  419338:	lea    0x4747a(%rip),%rsi        # 4607b9 <_fini+0x32b5>
  41933f:	mov    %rax,%rdx
  419342:	pop    %rbx
  419343:	xor    %eax,%eax
  419345:	jmpq   413c40 <BIO_printf@plt>
  41934a:	nopw   0x0(%rax,%rax,1)
  419350:	lea    0x44351(%rip),%rax        # 45d6a8 <_fini+0x1a4>
  419357:	test   %rsi,%rsi
  41935a:	mov    %rbx,%rdi
  41935d:	pop    %rbx
  41935e:	cmove  %rax,%rsi
  419362:	test   %rdx,%rdx
  419365:	cmove  %rax,%rdx
  419369:	xor    %eax,%eax
  41936b:	mov    %rdx,%rcx
  41936e:	mov    %rsi,%rdx
  419371:	lea    0x4433c(%rip),%rsi        # 45d6b4 <_fini+0x1b0>
  419378:	jmpq   413c40 <BIO_printf@plt>
  41937d:	nopl   (%rax)
  419380:	push   %r14
  419382:	push   %r13
  419384:	push   %r12
  419386:	push   %rbp
  419387:	mov    %edi,%ebp
  419389:	mov    %rsi,%rdi
  41938c:	push   %rbx
  41938d:	mov    %rsi,%rbx
  419390:	callq  415050 <X509_STORE_CTX_get_error@plt>
  419395:	mov    %rbx,%rdi
  419398:	mov    %eax,%r12d
  41939b:	callq  414470 <X509_STORE_CTX_get_current_cert@plt>
  4193a0:	test   %ebp,%ebp
  4193a2:	jne    419460 <X509_get0_pubkey_bitstr@plt+0x2a90>
  4193a8:	test   %rax,%rax
  4193ab:	je     4193d8 <X509_get0_pubkey_bitstr@plt+0x2a08>
  4193ad:	mov    %rax,%rdi
  4193b0:	callq  414400 <X509_get_subject_name@plt>
  4193b5:	mov    %rax,%rsi
  4193b8:	mov    0x25caf9(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  4193bf:	mov    $0x82031f,%ecx
  4193c4:	xor    %edx,%edx
  4193c6:	mov    (%rax),%rdi
  4193c9:	callq  415720 <X509_NAME_print_ex_fp@plt>
  4193ce:	mov    $0xa,%edi
  4193d3:	callq  415570 <putchar@plt>
  4193d8:	movslq %r12d,%rdi
  4193db:	callq  415690 <X509_verify_cert_error_string@plt>
  4193e0:	mov    %rbx,%rdi
  4193e3:	mov    %rax,%r14
  4193e6:	callq  4167a0 <X509_STORE_CTX_get_error_depth@plt>
  4193eb:	mov    %rbx,%rdi
  4193ee:	mov    %eax,%r13d
  4193f1:	callq  412df0 <X509_STORE_CTX_get0_parent_ctx@plt>
  4193f6:	lea    0x44728(%rip),%rdx        # 45db25 <_fini+0x621>
  4193fd:	test   %rax,%rax
  419400:	lea    0x469bb(%rip),%rax        # 45fdc2 <_fini+0x28be>
  419407:	lea    0x4481a(%rip),%rsi        # 45dc28 <_fini+0x724>
  41940e:	mov    %r12d,%ecx
  419411:	mov    %r14,%r9
  419414:	cmove  %rax,%rdx
  419418:	mov    %r13d,%r8d
  41941b:	xor    %eax,%eax
  41941d:	mov    $0x1,%edi
  419422:	callq  412780 <__printf_chk@plt>
  419427:	lea    -0xa(%r12),%ecx
  41942c:	cmp    $0x21,%ecx
  41942f:	ja     419450 <X509_get0_pubkey_bitstr@plt+0x2a80>
  419431:	mov    $0x1,%eax
  419436:	shl    %cl,%rax
  419439:	test   $0x901c107,%eax
  41943e:	jne    4194a0 <X509_get0_pubkey_bitstr@plt+0x2ad0>
  419440:	movabs $0x200000000,%rdx
  41944a:	test   %rdx,%rax
  41944d:	jne    4194b0 <X509_get0_pubkey_bitstr@plt+0x2ae0>
  41944f:	nop
  419450:	pop    %rbx
  419451:	mov    %ebp,%eax
  419453:	pop    %rbp
  419454:	pop    %r12
  419456:	pop    %r13
  419458:	pop    %r14
  41945a:	retq   
  41945b:	nopl   0x0(%rax,%rax,1)
  419460:	test   %r12d,%r12d
  419463:	je     419480 <X509_get0_pubkey_bitstr@plt+0x2ab0>
  419465:	mov    0x261999(%rip),%eax        # 67ae04 <_edata+0xfc>
  41946b:	test   %eax,%eax
  41946d:	jne    419450 <X509_get0_pubkey_bitstr@plt+0x2a80>
  41946f:	callq  412890 <ERR_clear_error@plt>
  419474:	pop    %rbx
  419475:	mov    %ebp,%eax
  419477:	pop    %rbp
  419478:	pop    %r12
  41947a:	pop    %r13
  41947c:	pop    %r14
  41947e:	retq   
  41947f:	nop
  419480:	cmp    $0x2,%ebp
  419483:	jne    419465 <X509_get0_pubkey_bitstr@plt+0x2a95>
  419485:	xor    %edi,%edi
  419487:	mov    %rbx,%rsi
  41948a:	callq  4487c0 <X509_get0_pubkey_bitstr@plt+0x31df0>
  41948f:	mov    0x26196f(%rip),%eax        # 67ae04 <_edata+0xfc>
  419495:	test   %eax,%eax
  419497:	jne    419450 <X509_get0_pubkey_bitstr@plt+0x2a80>
  419499:	jmp    41946f <X509_get0_pubkey_bitstr@plt+0x2a9f>
  41949b:	nopl   0x0(%rax,%rax,1)
  4194a0:	pop    %rbx
  4194a1:	mov    $0x1,%ebp
  4194a6:	mov    %ebp,%eax
  4194a8:	pop    %rbp
  4194a9:	pop    %r12
  4194ab:	pop    %r13
  4194ad:	pop    %r14
  4194af:	retq   
  4194b0:	mov    %rbx,%rsi
  4194b3:	xor    %edi,%edi
  4194b5:	mov    $0x1,%ebp
  4194ba:	callq  4487c0 <X509_get0_pubkey_bitstr@plt+0x31df0>
  4194bf:	jmp    419450 <X509_get0_pubkey_bitstr@plt+0x2a80>
  4194c1:	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4194d0:	push   %r15
  4194d2:	mov    %rdx,%r15
  4194d5:	mov    $0x3,%edx
  4194da:	push   %r14
  4194dc:	mov    %rcx,%r14
  4194df:	xor    %ecx,%ecx
  4194e1:	push   %r13
  4194e3:	mov    %r8,%r13
  4194e6:	mov    %r9,%r8
  4194e9:	lea    0x4f1bd(%rip),%r9        # 4686ad <_fini+0xb1a9>
  4194f0:	push   %r12
  4194f2:	mov    %rdi,%r12
  4194f5:	push   %rbp
  4194f6:	push   %rbx
  4194f7:	mov    %rsi,%rbx
  4194fa:	sub    $0x8,%rsp
  4194fe:	lea    0x26183b(%rip),%rax        # 67ad40 <_edata+0x38>
  419505:	mov    (%rax),%rdi
  419508:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  41950d:	test   %rax,%rax
  419510:	mov    %rax,%rbp
  419513:	je     4195ff <X509_get0_pubkey_bitstr@plt+0x2c2f>
  419519:	mov    0x25c998(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  419520:	lea    0x472a4(%rip),%rcx        # 4607cb <_fini+0x32c7>
  419527:	test   %rbx,%rbx
  41952a:	lea    0x445ff(%rip),%rdx        # 45db30 <_fini+0x62c>
  419531:	mov    $0x1,%esi
  419536:	cmovne %rbx,%rcx
  41953a:	mov    (%rax),%rdi
  41953d:	xor    %eax,%eax
  41953f:	callq  415e20 <__fprintf_chk@plt>
  419544:	callq  4167c0 <X509_STORE_CTX_new@plt>
  419549:	test   %rax,%rax
  41954c:	mov    %rax,%rbx
  41954f:	je     4195f0 <X509_get0_pubkey_bitstr@plt+0x2c20>
  419555:	xor    %esi,%esi
  419557:	mov    %r12,%rdi
  41955a:	callq  416520 <X509_STORE_set_flags@plt>
  41955f:	mov    %r15,%rcx
  419562:	mov    %rbp,%rdx
  419565:	mov    %r12,%rsi
  419568:	mov    %rbx,%rdi
  41956b:	callq  413380 <X509_STORE_CTX_init@plt>
  419570:	test   %eax,%eax
  419572:	je     4195f0 <X509_get0_pubkey_bitstr@plt+0x2c20>
  419574:	test   %r14,%r14
  419577:	je     419584 <X509_get0_pubkey_bitstr@plt+0x2bb4>
  419579:	mov    %r14,%rsi
  41957c:	mov    %rbx,%rdi
  41957f:	callq  412930 <X509_STORE_CTX_trusted_stack@plt>
  419584:	test   %r13,%r13
  419587:	je     419594 <X509_get0_pubkey_bitstr@plt+0x2bc4>
  419589:	mov    %r13,%rsi
  41958c:	mov    %rbx,%rdi
  41958f:	callq  413170 <X509_STORE_CTX_set0_crls@plt>
  419594:	mov    %rbx,%rdi
  419597:	callq  413610 <X509_verify_cert@plt>
  41959c:	mov    %rbx,%rdi
  41959f:	mov    %eax,%r12d
  4195a2:	callq  413b10 <X509_STORE_CTX_free@plt>
  4195a7:	test   %r12d,%r12d
  4195aa:	jle    419617 <X509_get0_pubkey_bitstr@plt+0x2c47>
  4195ac:	mov    0x25c905(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  4195b3:	lea    0x46282(%rip),%rdi        # 45f83c <_fini+0x2338>
  4195ba:	mov    $0x3,%edx
  4195bf:	mov    $0x1,%esi
  4195c4:	mov    $0x1,%ebx
  4195c9:	mov    (%rax),%rcx
  4195cc:	callq  416880 <fwrite@plt>
  4195d1:	mov    %rbp,%rdi
  4195d4:	callq  4153a0 <X509_free@plt>
  4195d9:	add    $0x8,%rsp
  4195dd:	mov    %ebx,%eax
  4195df:	pop    %rbx
  4195e0:	pop    %rbp
  4195e1:	pop    %r12
  4195e3:	pop    %r13
  4195e5:	pop    %r14
  4195e7:	pop    %r15
  4195e9:	retq   
  4195ea:	nopw   0x0(%rax,%rax,1)
  4195f0:	lea    0x261749(%rip),%rax        # 67ad40 <_edata+0x38>
  4195f7:	mov    (%rax),%rdi
  4195fa:	callq  413f40 <ERR_print_errors@plt>
  4195ff:	lea    0x26173a(%rip),%rax        # 67ad40 <_edata+0x38>
  419606:	xor    %ebx,%ebx
  419608:	mov    (%rax),%rdi
  41960b:	callq  413f40 <ERR_print_errors@plt>
  419610:	test   %rbp,%rbp
  419613:	je     4195d9 <X509_get0_pubkey_bitstr@plt+0x2c09>
  419615:	jmp    4195d1 <X509_get0_pubkey_bitstr@plt+0x2c01>
  419617:	lea    0x261722(%rip),%rax        # 67ad40 <_edata+0x38>
  41961e:	xor    %ebx,%ebx
  419620:	mov    (%rax),%rdi
  419623:	callq  413f40 <ERR_print_errors@plt>
  419628:	jmp    4195d1 <X509_get0_pubkey_bitstr@plt+0x2c01>
  41962a:	nopw   0x0(%rax,%rax,1)
  419630:	push   %r15
  419632:	push   %r14
  419634:	push   %r13
  419636:	push   %r12
  419638:	push   %rbp
  419639:	push   %rbx
  41963a:	sub    $0x68,%rsp
  41963e:	mov    %fs:0x28,%rax
  419647:	mov    %rax,0x58(%rsp)
  41964c:	xor    %eax,%eax
  41964e:	mov    %edi,0x3c(%rsp)
  419652:	mov    %rsi,0x30(%rsp)
  419657:	movl   $0x0,0x4c(%rsp)
  41965f:	movq   $0x0,0x50(%rsp)
  419668:	callq  4166c0 <X509_STORE_new@plt>
  41966d:	test   %rax,%rax
  419670:	mov    %rax,%rbp
  419673:	je     419788 <X509_get0_pubkey_bitstr@plt+0x2db8>
  419679:	lea    -0x300(%rip),%rsi        # 419380 <X509_get0_pubkey_bitstr@plt+0x29b0>
  419680:	mov    %rax,%rdi
  419683:	callq  416470 <X509_STORE_set_verify_cb@plt>
  419688:	callq  416990 <ERR_load_crypto_strings@plt>
  41968d:	mov    $0xd,%edi
  419692:	mov    $0x1,%esi
  419697:	callq  414ee0 <signal@plt>
  41969c:	lea    0x26169d(%rip),%rbx        # 67ad40 <_edata+0x38>
  4196a3:	mov    (%rbx),%rdi
  4196a6:	test   %rdi,%rdi
  4196a9:	je     419bdb <X509_get0_pubkey_bitstr@plt+0x320b>
  4196af:	xor    %esi,%esi
  4196b1:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  4196b6:	test   %eax,%eax
  4196b8:	je     41978f <X509_get0_pubkey_bitstr@plt+0x2dbf>
  4196be:	mov    0x3c(%rsp),%eax
  4196c2:	addq   $0x8,0x30(%rsp)
  4196c8:	xor    %r12d,%r12d
  4196cb:	movq   $0x0,0x20(%rsp)
  4196d4:	movq   $0x0,0x28(%rsp)
  4196dd:	xor    %r15d,%r15d
  4196e0:	movq   $0x0,0x18(%rsp)
  4196e9:	movq   $0x0,0x10(%rsp)
  4196f2:	lea    0x50(%rsp),%r13
  4196f7:	lea    -0x1(%rax),%edx
  4196fa:	lea    0x4c(%rsp),%rax
  4196ff:	lea    0x30(%rsp),%r14
  419704:	mov    %rax,(%rsp)
  419708:	lea    0x3c(%rsp),%rax
  41970d:	mov    %edx,0x3c(%rsp)
  419711:	mov    %rax,0x8(%rsp)
  419716:	jmp    41973b <X509_get0_pubkey_bitstr@plt+0x2d6b>
  419718:	nopl   0x0(%rax,%rax,1)
  419720:	mov    0x8(%rax),%r15
  419724:	sub    $0x1,%edx
  419727:	add    $0x8,%rax
  41972b:	sub    $0x1,%edx
  41972e:	add    $0x8,%rax
  419732:	mov    %edx,0x3c(%rsp)
  419736:	mov    %rax,0x30(%rsp)
  41973b:	test   %edx,%edx
  41973d:	jle    419980 <X509_get0_pubkey_bitstr@plt+0x2fb0>
  419743:	mov    0x30(%rsp),%rax
  419748:	lea    0x443e6(%rip),%rdi        # 45db35 <_fini+0x631>
  41974f:	mov    $0x8,%ecx
  419754:	mov    (%rax),%r8
  419757:	mov    %r8,%rsi
  41975a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41975c:	je     419720 <X509_get0_pubkey_bitstr@plt+0x2d50>
  41975e:	lea    0x443d8(%rip),%rdi        # 45db3d <_fini+0x639>
  419765:	mov    $0x8,%ecx
  41976a:	mov    %r8,%rsi
  41976d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41976f:	jne    4198c0 <X509_get0_pubkey_bitstr@plt+0x2ef0>
  419775:	mov    0x8(%rax),%r12
  419779:	sub    $0x1,%edx
  41977c:	add    $0x8,%rax
  419780:	jmp    41972b <X509_get0_pubkey_bitstr@plt+0x2d5b>
  419782:	nopw   0x0(%rax,%rax,1)
  419788:	lea    0x2615b1(%rip),%rbx        # 67ad40 <_edata+0x38>
  41978f:	xor    %r12d,%r12d
  419792:	movq   $0x0,(%rsp)
  41979a:	mov    (%rbx),%rdi
  41979d:	lea    0x444ac(%rip),%rsi        # 45dc50 <_fini+0x74c>
  4197a4:	xor    %eax,%eax
  4197a6:	xor    %r13d,%r13d
  4197a9:	callq  413c40 <BIO_printf@plt>
  4197ae:	mov    (%rbx),%rdi
  4197b1:	lea    0x44421(%rip),%rsi        # 45dbd9 <_fini+0x6d5>
  4197b8:	xor    %eax,%eax
  4197ba:	callq  413c40 <BIO_printf@plt>
  4197bf:	mov    (%rbx),%rdi
  4197c2:	lea    0x44425(%rip),%rsi        # 45dbee <_fini+0x6ea>
  4197c9:	xor    %eax,%eax
  4197cb:	callq  413c40 <BIO_printf@plt>
  4197d0:	mov    (%rbx),%rdi
  4197d3:	lea    0x44421(%rip),%rsi        # 45dbfb <_fini+0x6f7>
  4197da:	xor    %eax,%eax
  4197dc:	callq  413c40 <BIO_printf@plt>
  4197e1:	mov    (%rbx),%rdi
  4197e4:	lea    0x44422(%rip),%rsi        # 45dc0d <_fini+0x709>
  4197eb:	xor    %eax,%eax
  4197ed:	callq  413c40 <BIO_printf@plt>
  4197f2:	jmp    419831 <X509_get0_pubkey_bitstr@plt+0x2e61>
  4197f4:	nopl   0x0(%rax)
  4197f8:	mov    %r13d,%edi
  4197fb:	add    $0x1,%r13d
  4197ff:	callq  413ce0 <X509_PURPOSE_get0@plt>
  419804:	mov    %rax,%r14
  419807:	mov    %rax,%rdi
  41980a:	callq  413d20 <X509_PURPOSE_get0_name@plt>
  41980f:	mov    %r14,%rdi
  419812:	mov    %rax,%r15
  419815:	callq  416510 <X509_PURPOSE_get0_sname@plt>
  41981a:	mov    (%rbx),%rdi
  41981d:	lea    0x443aa(%rip),%rsi        # 45dbce <_fini+0x6ca>
  419824:	mov    %rax,%rdx
  419827:	mov    %r15,%rcx
  41982a:	xor    %eax,%eax
  41982c:	callq  413c40 <BIO_printf@plt>
  419831:	callq  413700 <X509_PURPOSE_get_count@plt>
  419836:	cmp    %eax,%r13d
  419839:	jl     4197f8 <X509_get0_pubkey_bitstr@plt+0x2e28>
  41983b:	xor    %r13d,%r13d
  41983e:	mov    $0x1,%ebx
  419843:	mov    0x50(%rsp),%rdi
  419848:	test   %rdi,%rdi
  41984b:	je     419852 <X509_get0_pubkey_bitstr@plt+0x2e82>
  41984d:	callq  412f10 <X509_VERIFY_PARAM_free@plt>
  419852:	test   %rbp,%rbp
  419855:	je     41985f <X509_get0_pubkey_bitstr@plt+0x2e8f>
  419857:	mov    %rbp,%rdi
  41985a:	callq  4134b0 <X509_STORE_free@plt>
  41985f:	mov    0x25c712(%rip),%r14        # 675f78 <_fini+0x218a74>
  419866:	mov    (%rsp),%rdi
  41986a:	mov    %r14,%rsi
  41986d:	callq  416250 <sk_pop_free@plt>
  419872:	mov    %r14,%rsi
  419875:	mov    %r12,%rdi
  419878:	callq  416250 <sk_pop_free@plt>
  41987d:	mov    0x25c774(%rip),%rsi        # 675ff8 <_fini+0x218af4>
  419884:	mov    %r13,%rdi
  419887:	callq  416250 <sk_pop_free@plt>
  41988c:	cmp    $0xffffffff,%ebx
  41988f:	mov    $0x2,%eax
  419894:	cmovne %ebx,%eax
  419897:	mov    0x58(%rsp),%rbx
  41989c:	xor    %fs:0x28,%rbx
  4198a5:	jne    419cc1 <X509_get0_pubkey_bitstr@plt+0x32f1>
  4198ab:	add    $0x68,%rsp
  4198af:	pop    %rbx
  4198b0:	pop    %rbp
  4198b1:	pop    %r12
  4198b3:	pop    %r13
  4198b5:	pop    %r14
  4198b7:	pop    %r15
  4198b9:	retq   
  4198ba:	nopw   0x0(%rax,%rax,1)
  4198c0:	mov    (%rbx),%rcx
  4198c3:	mov    (%rsp),%rdx
  4198c7:	mov    %r13,%r8
  4198ca:	mov    0x8(%rsp),%rsi
  4198cf:	mov    %r14,%rdi
  4198d2:	callq  447ee0 <X509_get0_pubkey_bitstr@plt+0x31510>
  4198d7:	test   %eax,%eax
  4198d9:	je     4198f0 <X509_get0_pubkey_bitstr@plt+0x2f20>
  4198db:	mov    0x4c(%rsp),%edx
  4198df:	test   %edx,%edx
  4198e1:	jne    41978f <X509_get0_pubkey_bitstr@plt+0x2dbf>
  4198e7:	mov    0x3c(%rsp),%edx
  4198eb:	jmpq   41973b <X509_get0_pubkey_bitstr@plt+0x2d6b>
  4198f0:	mov    0x30(%rsp),%rax
  4198f5:	lea    0x44249(%rip),%rdi        # 45db45 <_fini+0x641>
  4198fc:	mov    $0xb,%ecx
  419901:	mov    (%rax),%rdx
  419904:	mov    %rdx,%rsi
  419907:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  419909:	je     419950 <X509_get0_pubkey_bitstr@plt+0x2f80>
  41990b:	lea    0x4423e(%rip),%rdi        # 45db50 <_fini+0x64c>
  419912:	mov    $0x9,%ecx
  419917:	mov    %rdx,%rsi
  41991a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41991c:	jne    419b30 <X509_get0_pubkey_bitstr@plt+0x3160>
  419922:	mov    0x3c(%rsp),%ecx
  419926:	lea    -0x1(%rcx),%edx
  419929:	test   %ecx,%ecx
  41992b:	mov    %edx,0x3c(%rsp)
  41992f:	jle    41978f <X509_get0_pubkey_bitstr@plt+0x2dbf>
  419935:	mov    0x8(%rax),%rcx
  419939:	add    $0x8,%rax
  41993d:	mov    %rcx,0x18(%rsp)
  419942:	jmpq   41972b <X509_get0_pubkey_bitstr@plt+0x2d5b>
  419947:	nopw   0x0(%rax,%rax,1)
  419950:	mov    0x3c(%rsp),%ecx
  419954:	lea    -0x1(%rcx),%edx
  419957:	test   %ecx,%ecx
  419959:	mov    %edx,0x3c(%rsp)
  41995d:	jle    41978f <X509_get0_pubkey_bitstr@plt+0x2dbf>
  419963:	mov    0x8(%rax),%rcx
  419967:	add    $0x8,%rax
  41996b:	mov    %rcx,0x10(%rsp)
  419970:	jmpq   41972b <X509_get0_pubkey_bitstr@plt+0x2d5b>
  419975:	cmpb   $0x2d,(%rdx)
  419978:	je     41978f <X509_get0_pubkey_bitstr@plt+0x2dbf>
  41997e:	xchg   %ax,%ax
  419980:	mov    0x20(%rsp),%rsi
  419985:	mov    (%rbx),%rdi
  419988:	xor    %edx,%edx
  41998a:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  41998f:	mov    0x50(%rsp),%rsi
  419994:	mov    %rax,%r14
  419997:	test   %rsi,%rsi
  41999a:	je     4199a4 <X509_get0_pubkey_bitstr@plt+0x2fd4>
  41999c:	mov    %rbp,%rdi
  41999f:	callq  4159e0 <X509_STORE_set1_param@plt>
  4199a4:	callq  416980 <X509_LOOKUP_file@plt>
  4199a9:	mov    %rbp,%rdi
  4199ac:	mov    %rax,%rsi
  4199af:	callq  412c00 <X509_STORE_add_lookup@plt>
  4199b4:	test   %rax,%rax
  4199b7:	je     419cc6 <X509_get0_pubkey_bitstr@plt+0x32f6>
  4199bd:	xor    %r8d,%r8d
  4199c0:	test   %r12,%r12
  4199c3:	je     419c61 <X509_get0_pubkey_bitstr@plt+0x3291>
  4199c9:	mov    %r12,%rdx
  4199cc:	mov    $0x1,%esi
  4199d1:	mov    $0x1,%ecx
  4199d6:	mov    %rax,%rdi
  4199d9:	callq  4165f0 <X509_LOOKUP_ctrl@plt>
  4199de:	test   %eax,%eax
  4199e0:	mov    %r12,%rdx
  4199e3:	lea    0x4418f(%rip),%rsi        # 45db79 <_fini+0x675>
  4199ea:	je     419bae <X509_get0_pubkey_bitstr@plt+0x31de>
  4199f0:	callq  415b90 <X509_LOOKUP_hash_dir@plt>
  4199f5:	mov    %rbp,%rdi
  4199f8:	mov    %rax,%rsi
  4199fb:	callq  412c00 <X509_STORE_add_lookup@plt>
  419a00:	test   %rax,%rax
  419a03:	je     419cc6 <X509_get0_pubkey_bitstr@plt+0x32f6>
  419a09:	xor    %r8d,%r8d
  419a0c:	test   %r15,%r15
  419a0f:	je     419c82 <X509_get0_pubkey_bitstr@plt+0x32b2>
  419a15:	mov    $0x1,%ecx
  419a1a:	mov    %r15,%rdx
  419a1d:	mov    $0x2,%esi
  419a22:	mov    %rax,%rdi
  419a25:	callq  4165f0 <X509_LOOKUP_ctrl@plt>
  419a2a:	test   %eax,%eax
  419a2c:	je     419ba4 <X509_get0_pubkey_bitstr@plt+0x31d4>
  419a32:	callq  412890 <ERR_clear_error@plt>
  419a37:	mov    0x10(%rsp),%rsi
  419a3c:	test   %rsi,%rsi
  419a3f:	je     419bce <X509_get0_pubkey_bitstr@plt+0x31fe>
  419a45:	mov    (%rbx),%rdi
  419a48:	lea    0x4415d(%rip),%r9        # 45dbac <_fini+0x6a8>
  419a4f:	xor    %ecx,%ecx
  419a51:	mov    %r14,%r8
  419a54:	mov    $0x3,%edx
  419a59:	callq  446530 <X509_get0_pubkey_bitstr@plt+0x2fb60>
  419a5e:	test   %rax,%rax
  419a61:	mov    %rax,(%rsp)
  419a65:	je     41978f <X509_get0_pubkey_bitstr@plt+0x2dbf>
  419a6b:	mov    0x18(%rsp),%rsi
  419a70:	test   %rsi,%rsi
  419a73:	je     419c59 <X509_get0_pubkey_bitstr@plt+0x3289>
  419a79:	mov    (%rbx),%rdi
  419a7c:	lea    0x4412b(%rip),%r9        # 45dbae <_fini+0x6aa>
  419a83:	xor    %ecx,%ecx
  419a85:	mov    %r14,%r8
  419a88:	mov    $0x3,%edx
  419a8d:	callq  446530 <X509_get0_pubkey_bitstr@plt+0x2fb60>
  419a92:	test   %rax,%rax
  419a95:	mov    %rax,%r12
  419a98:	je     41979a <X509_get0_pubkey_bitstr@plt+0x2dca>
  419a9e:	mov    0x28(%rsp),%rsi
  419aa3:	test   %rsi,%rsi
  419aa6:	je     419c7a <X509_get0_pubkey_bitstr@plt+0x32aa>
  419aac:	mov    (%rbx),%rdi
  419aaf:	lea    0x4410d(%rip),%r9        # 45dbc3 <_fini+0x6bf>
  419ab6:	xor    %ecx,%ecx
  419ab8:	mov    %r14,%r8
  419abb:	mov    $0x3,%edx
  419ac0:	callq  446590 <X509_get0_pubkey_bitstr@plt+0x2fbc0>
  419ac5:	test   %rax,%rax
  419ac8:	mov    %rax,%r13
  419acb:	je     41979a <X509_get0_pubkey_bitstr@plt+0x2dca>
  419ad1:	mov    0x3c(%rsp),%eax
  419ad5:	xor    %r15d,%r15d
  419ad8:	xor    %ebx,%ebx
  419ada:	test   %eax,%eax
  419adc:	jle    419c9b <X509_get0_pubkey_bitstr@plt+0x32cb>
  419ae2:	mov    %r14,%rax
  419ae5:	mov    %ebx,%r14d
  419ae8:	mov    %rax,%rbx
  419aeb:	nopl   0x0(%rax,%rax,1)
  419af0:	mov    0x30(%rsp),%rax
  419af5:	mov    (%rsp),%rdx
  419af9:	mov    %rbx,%r9
  419afc:	mov    %r13,%r8
  419aff:	mov    %r12,%rcx
  419b02:	mov    %rbp,%rdi
  419b05:	mov    (%rax,%r15,8),%rsi
  419b09:	callq  4194d0 <X509_get0_pubkey_bitstr@plt+0x2b00>
  419b0e:	cmp    $0x1,%eax
  419b11:	mov    $0xffffffff,%eax
  419b16:	cmovne %eax,%r14d
  419b1a:	lea    0x1(%r15),%eax
  419b1e:	add    $0x1,%r15
  419b22:	cmp    %eax,0x3c(%rsp)
  419b26:	jg     419af0 <X509_get0_pubkey_bitstr@plt+0x3120>
  419b28:	mov    %r14d,%ebx
  419b2b:	jmpq   419843 <X509_get0_pubkey_bitstr@plt+0x2e73>
  419b30:	lea    0x44022(%rip),%rdi        # 45db59 <_fini+0x655>
  419b37:	mov    $0x9,%ecx
  419b3c:	mov    %rdx,%rsi
  419b3f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  419b41:	je     419b7f <X509_get0_pubkey_bitstr@plt+0x31af>
  419b43:	lea    0x44018(%rip),%rdi        # 45db62 <_fini+0x65e>
  419b4a:	mov    $0x8,%ecx
  419b4f:	mov    %rdx,%rsi
  419b52:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  419b54:	jne    419c18 <X509_get0_pubkey_bitstr@plt+0x3248>
  419b5a:	mov    0x3c(%rsp),%ecx
  419b5e:	lea    -0x1(%rcx),%edx
  419b61:	test   %edx,%edx
  419b63:	mov    %edx,0x3c(%rsp)
  419b67:	jle    41978f <X509_get0_pubkey_bitstr@plt+0x2dbf>
  419b6d:	mov    0x8(%rax),%rcx
  419b71:	add    $0x8,%rax
  419b75:	mov    %rcx,0x20(%rsp)
  419b7a:	jmpq   41972b <X509_get0_pubkey_bitstr@plt+0x2d5b>
  419b7f:	mov    0x3c(%rsp),%ecx
  419b83:	lea    -0x1(%rcx),%edx
  419b86:	test   %ecx,%ecx
  419b88:	mov    %edx,0x3c(%rsp)
  419b8c:	jle    41978f <X509_get0_pubkey_bitstr@plt+0x2dbf>
  419b92:	mov    0x8(%rax),%rcx
  419b96:	add    $0x8,%rax
  419b9a:	mov    %rcx,0x28(%rsp)
  419b9f:	jmpq   41972b <X509_get0_pubkey_bitstr@plt+0x2d5b>
  419ba4:	lea    0x43fe5(%rip),%rsi        # 45db90 <_fini+0x68c>
  419bab:	mov    %r15,%rdx
  419bae:	mov    (%rbx),%rdi
  419bb1:	xor    %r12d,%r12d
  419bb4:	callq  413c40 <BIO_printf@plt>
  419bb9:	mov    (%rbx),%rdi
  419bbc:	callq  413f40 <ERR_print_errors@plt>
  419bc1:	movq   $0x0,(%rsp)
  419bc9:	jmpq   41979a <X509_get0_pubkey_bitstr@plt+0x2dca>
  419bce:	movq   $0x0,(%rsp)
  419bd6:	jmpq   419a6b <X509_get0_pubkey_bitstr@plt+0x309b>
  419bdb:	callq  4152b0 <BIO_s_file@plt>
  419be0:	mov    %rax,%rdi
  419be3:	callq  414a20 <BIO_new@plt>
  419be8:	test   %rax,%rax
  419beb:	mov    %rax,%rdi
  419bee:	mov    %rax,(%rbx)
  419bf1:	je     4196af <X509_get0_pubkey_bitstr@plt+0x2cdf>
  419bf7:	mov    0x25c382(%rip),%rax        # 675f80 <_fini+0x218a7c>
  419bfe:	mov    $0x10,%edx
  419c03:	mov    $0x6a,%esi
  419c08:	mov    (%rax),%rcx
  419c0b:	callq  412af0 <BIO_ctrl@plt>
  419c10:	mov    (%rbx),%rdi
  419c13:	jmpq   4196af <X509_get0_pubkey_bitstr@plt+0x2cdf>
  419c18:	lea    0x43f4b(%rip),%rdi        # 45db6a <_fini+0x666>
  419c1f:	mov    $0x6,%ecx
  419c24:	mov    %rdx,%rsi
  419c27:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  419c29:	je     41978f <X509_get0_pubkey_bitstr@plt+0x2dbf>
  419c2f:	lea    0x43f3a(%rip),%rdi        # 45db70 <_fini+0x66c>
  419c36:	mov    $0x9,%ecx
  419c3b:	mov    %rdx,%rsi
  419c3e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  419c40:	jne    419975 <X509_get0_pubkey_bitstr@plt+0x2fa5>
  419c46:	movl   $0x1,0x2611b4(%rip)        # 67ae04 <_edata+0xfc>
  419c50:	mov    0x3c(%rsp),%edx
  419c54:	jmpq   41972b <X509_get0_pubkey_bitstr@plt+0x2d5b>
  419c59:	xor    %r12d,%r12d
  419c5c:	jmpq   419a9e <X509_get0_pubkey_bitstr@plt+0x30ce>
  419c61:	mov    $0x3,%ecx
  419c66:	xor    %edx,%edx
  419c68:	mov    $0x1,%esi
  419c6d:	mov    %rax,%rdi
  419c70:	callq  4165f0 <X509_LOOKUP_ctrl@plt>
  419c75:	jmpq   4199f0 <X509_get0_pubkey_bitstr@plt+0x3020>
  419c7a:	xor    %r13d,%r13d
  419c7d:	jmpq   419ad1 <X509_get0_pubkey_bitstr@plt+0x3101>
  419c82:	mov    $0x3,%ecx
  419c87:	xor    %edx,%edx
  419c89:	mov    $0x2,%esi
  419c8e:	mov    %rax,%rdi
  419c91:	callq  4165f0 <X509_LOOKUP_ctrl@plt>
  419c96:	jmpq   419a32 <X509_get0_pubkey_bitstr@plt+0x3062>
  419c9b:	mov    (%rsp),%rdx
  419c9f:	xor    %esi,%esi
  419ca1:	mov    %r14,%r9
  419ca4:	mov    %r13,%r8
  419ca7:	mov    %r12,%rcx
  419caa:	mov    %rbp,%rdi
  419cad:	xor    %ebx,%ebx
  419caf:	callq  4194d0 <X509_get0_pubkey_bitstr@plt+0x2b00>
  419cb4:	cmp    $0x1,%eax
  419cb7:	setne  %bl
  419cba:	neg    %ebx
  419cbc:	jmpq   419843 <X509_get0_pubkey_bitstr@plt+0x2e73>
  419cc1:	callq  414c30 <__stack_chk_fail@plt>
  419cc6:	callq  413950 <abort@plt>
  419ccb:	nopl   0x0(%rax,%rax,1)
  419cd0:	push   %r15
  419cd2:	push   %r14
  419cd4:	push   %r13
  419cd6:	mov    %edi,%r13d
  419cd9:	mov    $0xd,%edi
  419cde:	push   %r12
  419ce0:	mov    %rsi,%r12
  419ce3:	mov    $0x1,%esi
  419ce8:	push   %rbp
  419ce9:	push   %rbx
  419cea:	sub    $0x88,%rsp
  419cf1:	mov    %fs:0x28,%rax
  419cfa:	mov    %rax,0x78(%rsp)
  419cff:	xor    %eax,%eax
  419d01:	callq  414ee0 <signal@plt>
  419d06:	lea    0x261033(%rip),%rbx        # 67ad40 <_edata+0x38>
  419d0d:	mov    (%rbx),%rdi
  419d10:	test   %rdi,%rdi
  419d13:	je     41a3d0 <X509_get0_pubkey_bitstr@plt+0x3a00>
  419d19:	xor    %esi,%esi
  419d1b:	xor    %ebp,%ebp
  419d1d:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  419d22:	test   %eax,%eax
  419d24:	jne    419da0 <X509_get0_pubkey_bitstr@plt+0x33d0>
  419d26:	xor    %edi,%edi
  419d28:	xor    %r13d,%r13d
  419d2b:	mov    $0x1,%r14d
  419d31:	xor    %r12d,%r12d
  419d34:	callq  413960 <BIO_free@plt>
  419d39:	mov    (%rbx),%rdi
  419d3c:	callq  413f40 <ERR_print_errors@plt>
  419d41:	test   %r12,%r12
  419d44:	je     419d4e <X509_get0_pubkey_bitstr@plt+0x337e>
  419d46:	mov    %r12,%rdi
  419d49:	callq  415150 <BUF_MEM_free@plt>
  419d4e:	test   %r13,%r13
  419d51:	je     419d5b <X509_get0_pubkey_bitstr@plt+0x338b>
  419d53:	mov    %r13,%rdi
  419d56:	callq  413af0 <ASN1_TYPE_free@plt>
  419d5b:	test   %rbp,%rbp
  419d5e:	je     419d68 <X509_get0_pubkey_bitstr@plt+0x3398>
  419d60:	mov    %rbp,%rdi
  419d63:	callq  4143f0 <sk_free@plt>
  419d68:	callq  414120 <OBJ_cleanup@plt>
  419d6d:	mov    0x78(%rsp),%rbx
  419d72:	xor    %fs:0x28,%rbx
  419d7b:	mov    %r14d,%eax
  419d7e:	jne    41a8dc <X509_get0_pubkey_bitstr@plt+0x3f0c>
  419d84:	add    $0x88,%rsp
  419d8b:	pop    %rbx
  419d8c:	pop    %rbp
  419d8d:	pop    %r12
  419d8f:	pop    %r13
  419d91:	pop    %r14
  419d93:	pop    %r15
  419d95:	retq   
  419d96:	nopw   %cs:0x0(%rax,%rax,1)
  419da0:	mov    (%r12),%rax
  419da4:	lea    0x8(%r12),%r9
  419da9:	sub    $0x1,%r13d
  419dad:	mov    %r9,(%rsp)
  419db1:	mov    %rax,0x10(%rsp)
  419db6:	callq  412cd0 <sk_new_null@plt>
  419dbb:	test   %rax,%rax
  419dbe:	mov    %rax,%rbp
  419dc1:	je     41a450 <X509_get0_pubkey_bitstr@plt+0x3a80>
  419dc7:	test   %r13d,%r13d
  419dca:	mov    (%rsp),%r9
  419dce:	movq   $0x0,0x38(%rsp)
  419dd7:	movq   $0x0,0x40(%rsp)
  419de0:	movq   $0x0,(%rsp)
  419de8:	movq   $0x0,0x20(%rsp)
  419df1:	jle    41a4ca <X509_get0_pubkey_bitstr@plt+0x3afa>
  419df7:	xor    %r12d,%r12d
  419dfa:	movl   $0x0,0x50(%rsp)
  419e02:	movl   $0x0,0x30(%rsp)
  419e0a:	movl   $0x0,0x18(%rsp)
  419e12:	mov    $0x3,%r10d
  419e18:	movl   $0x0,0x34(%rsp)
  419e20:	movl   $0x0,0x28(%rsp)
  419e28:	lea    0x43eb0(%rip),%r15        # 45dcdf <_fini+0x7db>
  419e2f:	mov    $0x8,%r14d
  419e35:	mov    %rax,0x8(%rsp)
  419e3a:	jmp    419e67 <X509_get0_pubkey_bitstr@plt+0x3497>
  419e3c:	nopl   0x0(%rax)
  419e40:	sub    $0x1,%r13d
  419e44:	je     41a110 <X509_get0_pubkey_bitstr@plt+0x3740>
  419e4a:	mov    0x8(%r9),%rdi
  419e4e:	lea    0x8(%r9),%rbp
  419e52:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  419e57:	mov    %eax,%r10d
  419e5a:	sub    $0x1,%r13d
  419e5e:	lea    0x8(%rbp),%r9
  419e62:	test   %r13d,%r13d
  419e65:	jle    419ee0 <X509_get0_pubkey_bitstr@plt+0x3510>
  419e67:	mov    (%r9),%rdx
  419e6a:	mov    %r15,%rdi
  419e6d:	mov    %r14,%rcx
  419e70:	mov    %rdx,%rsi
  419e73:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  419e75:	je     419e40 <X509_get0_pubkey_bitstr@plt+0x3470>
  419e77:	cmpb   $0x2d,(%rdx)
  419e7a:	je     419f88 <X509_get0_pubkey_bitstr@plt+0x35b8>
  419e80:	lea    0x43fbf(%rip),%rsi        # 45de46 <_fini+0x942>
  419e87:	mov    %rdx,%rdi
  419e8a:	mov    %r9,0x58(%rsp)
  419e8f:	mov    %r10d,0x54(%rsp)
  419e94:	mov    %rdx,0x48(%rsp)
  419e99:	callq  4155c0 <strcmp@plt>
  419e9e:	test   %eax,%eax
  419ea0:	mov    0x48(%rsp),%rdx
  419ea5:	mov    0x54(%rsp),%r10d
  419eaa:	mov    0x58(%rsp),%r9
  419eaf:	jne    41a008 <X509_get0_pubkey_bitstr@plt+0x3638>
  419eb5:	sub    $0x1,%r13d
  419eb9:	je     41a110 <X509_get0_pubkey_bitstr@plt+0x3740>
  419ebf:	mov    0x8(%r9),%rax
  419ec3:	lea    0x8(%r9),%rbp
  419ec7:	sub    $0x1,%r13d
  419ecb:	test   %r13d,%r13d
  419ece:	lea    0x8(%rbp),%r9
  419ed2:	mov    %rax,(%rsp)
  419ed6:	jg     419e67 <X509_get0_pubkey_bitstr@plt+0x3497>
  419ed8:	nopl   0x0(%rax,%rax,1)
  419ee0:	mov    0x8(%rsp),%rbp
  419ee5:	mov    %r12,%r14
  419ee8:	mov    %r10d,0x10(%rsp)
  419eed:	callq  416990 <ERR_load_crypto_strings@plt>
  419ef2:	callq  4152b0 <BIO_s_file@plt>
  419ef7:	mov    %rax,%rdi
  419efa:	callq  414a20 <BIO_new@plt>
  419eff:	mov    %rax,0x8(%rsp)
  419f04:	callq  4152b0 <BIO_s_file@plt>
  419f09:	mov    %rax,%rdi
  419f0c:	callq  414a20 <BIO_new@plt>
  419f11:	test   %rax,%rax
  419f14:	mov    %rax,%r15
  419f17:	mov    0x10(%rsp),%r10d
  419f1c:	jne    41a240 <X509_get0_pubkey_bitstr@plt+0x3870>
  419f22:	mov    (%rbx),%rdi
  419f25:	callq  413f40 <ERR_print_errors@plt>
  419f2a:	xor    %edi,%edi
  419f2c:	callq  413960 <BIO_free@plt>
  419f31:	cmpq   $0x0,0x8(%rsp)
  419f37:	je     41a97d <X509_get0_pubkey_bitstr@plt+0x3fad>
  419f3d:	xor    %r13d,%r13d
  419f40:	xor    %r12d,%r12d
  419f43:	movq   $0x0,(%rsp)
  419f4b:	mov    $0x1,%r14d
  419f51:	mov    0x8(%rsp),%rdi
  419f56:	callq  413960 <BIO_free@plt>
  419f5b:	test   %r15,%r15
  419f5e:	je     419f68 <X509_get0_pubkey_bitstr@plt+0x3598>
  419f60:	mov    %r15,%rdi
  419f63:	callq  416570 <BIO_free_all@plt>
  419f68:	mov    (%rsp),%rdi
  419f6c:	test   %rdi,%rdi
  419f6f:	je     419f76 <X509_get0_pubkey_bitstr@plt+0x35a6>
  419f71:	callq  413960 <BIO_free@plt>
  419f76:	test   %r14d,%r14d
  419f79:	je     419d41 <X509_get0_pubkey_bitstr@plt+0x3371>
  419f7f:	nop
  419f80:	jmpq   419d39 <X509_get0_pubkey_bitstr@plt+0x3369>
  419f85:	nopl   (%rax)
  419f88:	cmpb   $0x69,0x1(%rdx)
  419f8c:	je     419fe0 <X509_get0_pubkey_bitstr@plt+0x3610>
  419f8e:	lea    0x43eb1(%rip),%rsi        # 45de46 <_fini+0x942>
  419f95:	mov    %rdx,%rdi
  419f98:	mov    %r9,0x58(%rsp)
  419f9d:	mov    %r10d,0x54(%rsp)
  419fa2:	mov    %rdx,0x48(%rsp)
  419fa7:	callq  4155c0 <strcmp@plt>
  419fac:	test   %eax,%eax
  419fae:	mov    0x48(%rsp),%rdx
  419fb3:	mov    0x54(%rsp),%r10d
  419fb8:	mov    0x58(%rsp),%r9
  419fbd:	je     419eb5 <X509_get0_pubkey_bitstr@plt+0x34e5>
  419fc3:	cmpb   $0x69,0x1(%rdx)
  419fc7:	jne    41a008 <X509_get0_pubkey_bitstr@plt+0x3638>
  419fc9:	cmpb   $0x0,0x2(%rdx)
  419fcd:	jne    41a008 <X509_get0_pubkey_bitstr@plt+0x3638>
  419fcf:	mov    %r9,%rbp
  419fd2:	movl   $0x1,0x18(%rsp)
  419fda:	jmpq   419e5a <X509_get0_pubkey_bitstr@plt+0x348a>
  419fdf:	nop
  419fe0:	cmpb   $0x6e,0x2(%rdx)
  419fe4:	jne    419f8e <X509_get0_pubkey_bitstr@plt+0x35be>
  419fe6:	cmpb   $0x0,0x3(%rdx)
  419fea:	jne    419f8e <X509_get0_pubkey_bitstr@plt+0x35be>
  419fec:	sub    $0x1,%r13d
  419ff0:	je     41a110 <X509_get0_pubkey_bitstr@plt+0x3740>
  419ff6:	lea    0x8(%r9),%rbp
  419ffa:	mov    0x8(%r9),%r12
  419ffe:	jmpq   419e5a <X509_get0_pubkey_bitstr@plt+0x348a>
  41a003:	nopl   0x0(%rax,%rax,1)
  41a008:	lea    0x43cd8(%rip),%rdi        # 45dce7 <_fini+0x7e3>
  41a00f:	mov    $0x7,%ecx
  41a014:	mov    %rdx,%rsi
  41a017:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41a019:	je     41a070 <X509_get0_pubkey_bitstr@plt+0x36a0>
  41a01b:	lea    0x43ccc(%rip),%rdi        # 45dcee <_fini+0x7ea>
  41a022:	mov    $0x5,%ecx
  41a027:	mov    %rdx,%rsi
  41a02a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41a02c:	je     41a080 <X509_get0_pubkey_bitstr@plt+0x36b0>
  41a02e:	lea    0x43cbe(%rip),%rdi        # 45dcf3 <_fini+0x7ef>
  41a035:	mov    %rdx,%rsi
  41a038:	mov    %r14,%rcx
  41a03b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41a03d:	jne    41a09c <X509_get0_pubkey_bitstr@plt+0x36cc>
  41a03f:	sub    $0x1,%r13d
  41a043:	mov    %r10d,0x48(%rsp)
  41a048:	je     41a110 <X509_get0_pubkey_bitstr@plt+0x3740>
  41a04e:	mov    0x8(%r9),%rdi
  41a052:	mov    $0xa,%edx
  41a057:	xor    %esi,%esi
  41a059:	lea    0x8(%r9),%rbp
  41a05d:	callq  4155d0 <strtol@plt>
  41a062:	mov    0x48(%rsp),%r10d
  41a067:	mov    %eax,0x28(%rsp)
  41a06b:	jmpq   419e5a <X509_get0_pubkey_bitstr@plt+0x348a>
  41a070:	mov    %r9,%rbp
  41a073:	movl   $0x1,0x30(%rsp)
  41a07b:	jmpq   419e5a <X509_get0_pubkey_bitstr@plt+0x348a>
  41a080:	sub    $0x1,%r13d
  41a084:	je     41a110 <X509_get0_pubkey_bitstr@plt+0x3740>
  41a08a:	mov    0x8(%r9),%rax
  41a08e:	lea    0x8(%r9),%rbp
  41a092:	mov    %rax,0x20(%rsp)
  41a097:	jmpq   419e5a <X509_get0_pubkey_bitstr@plt+0x348a>
  41a09c:	lea    0x43c58(%rip),%rdi        # 45dcfb <_fini+0x7f7>
  41a0a3:	mov    %rdx,%rsi
  41a0a6:	mov    %r14,%rcx
  41a0a9:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41a0ab:	je     41a40d <X509_get0_pubkey_bitstr@plt+0x3a3d>
  41a0b1:	lea    0x43c4b(%rip),%rdi        # 45dd03 <_fini+0x7ff>
  41a0b8:	mov    $0x6,%ecx
  41a0bd:	mov    %rdx,%rsi
  41a0c0:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41a0c2:	je     41a466 <X509_get0_pubkey_bitstr@plt+0x3a96>
  41a0c8:	lea    0x43c3a(%rip),%rdi        # 45dd09 <_fini+0x805>
  41a0cf:	mov    %rdx,%rsi
  41a0d2:	mov    %r14,%rcx
  41a0d5:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41a0d7:	jne    41a48c <X509_get0_pubkey_bitstr@plt+0x3abc>
  41a0dd:	sub    $0x1,%r13d
  41a0e1:	mov    %r10d,0x48(%rsp)
  41a0e6:	je     41a110 <X509_get0_pubkey_bitstr@plt+0x3740>
  41a0e8:	mov    0x8(%r9),%rdi
  41a0ec:	xor    %esi,%esi
  41a0ee:	mov    $0xa,%edx
  41a0f3:	lea    0x8(%r9),%rbp
  41a0f7:	callq  4155d0 <strtol@plt>
  41a0fc:	test   %eax,%eax
  41a0fe:	mov    %eax,0x50(%rsp)
  41a102:	mov    0x48(%rsp),%r10d
  41a107:	jg     419e5a <X509_get0_pubkey_bitstr@plt+0x348a>
  41a10d:	nopl   (%rax)
  41a110:	mov    0x8(%rsp),%rbp
  41a115:	mov    0x10(%rsp),%rdx
  41a11a:	mov    (%rbx),%rdi
  41a11d:	lea    0x43c1b(%rip),%rsi        # 45dd3f <_fini+0x83b>
  41a124:	xor    %eax,%eax
  41a126:	callq  413c40 <BIO_printf@plt>
  41a12b:	mov    (%rbx),%rdi
  41a12e:	lea    0x43c20(%rip),%rsi        # 45dd55 <_fini+0x851>
  41a135:	xor    %eax,%eax
  41a137:	callq  413c40 <BIO_printf@plt>
  41a13c:	mov    (%rbx),%rdi
  41a13f:	lea    0x43d0a(%rip),%rsi        # 45de50 <_fini+0x94c>
  41a146:	xor    %eax,%eax
  41a148:	callq  413c40 <BIO_printf@plt>
  41a14d:	mov    (%rbx),%rdi
  41a150:	lea    0x43c11(%rip),%rsi        # 45dd68 <_fini+0x864>
  41a157:	xor    %eax,%eax
  41a159:	callq  413c40 <BIO_printf@plt>
  41a15e:	mov    (%rbx),%rdi
  41a161:	lea    0x43d18(%rip),%rsi        # 45de80 <_fini+0x97c>
  41a168:	xor    %eax,%eax
  41a16a:	callq  413c40 <BIO_printf@plt>
  41a16f:	mov    (%rbx),%rdi
  41a172:	lea    0x43d47(%rip),%rsi        # 45dec0 <_fini+0x9bc>
  41a179:	xor    %eax,%eax
  41a17b:	callq  413c40 <BIO_printf@plt>
  41a180:	mov    (%rbx),%rdi
  41a183:	lea    0x43d66(%rip),%rsi        # 45def0 <_fini+0x9ec>
  41a18a:	xor    %eax,%eax
  41a18c:	callq  413c40 <BIO_printf@plt>
  41a191:	mov    (%rbx),%rdi
  41a194:	lea    0x43d7d(%rip),%rsi        # 45df18 <_fini+0xa14>
  41a19b:	xor    %eax,%eax
  41a19d:	callq  413c40 <BIO_printf@plt>
  41a1a2:	mov    (%rbx),%rdi
  41a1a5:	lea    0x43d9c(%rip),%rsi        # 45df48 <_fini+0xa44>
  41a1ac:	xor    %eax,%eax
  41a1ae:	callq  413c40 <BIO_printf@plt>
  41a1b3:	mov    (%rbx),%rdi
  41a1b6:	lea    0x43dab(%rip),%rsi        # 45df68 <_fini+0xa64>
  41a1bd:	xor    %eax,%eax
  41a1bf:	callq  413c40 <BIO_printf@plt>
  41a1c4:	mov    (%rbx),%rdi
  41a1c7:	lea    0x43dca(%rip),%rsi        # 45df98 <_fini+0xa94>
  41a1ce:	xor    %eax,%eax
  41a1d0:	callq  413c40 <BIO_printf@plt>
  41a1d5:	mov    (%rbx),%rdi
  41a1d8:	lea    0x43e01(%rip),%rsi        # 45dfe0 <_fini+0xadc>
  41a1df:	xor    %eax,%eax
  41a1e1:	callq  413c40 <BIO_printf@plt>
  41a1e6:	mov    (%rbx),%rdi
  41a1e9:	lea    0x43b93(%rip),%rsi        # 45dd83 <_fini+0x87f>
  41a1f0:	xor    %eax,%eax
  41a1f2:	callq  413c40 <BIO_printf@plt>
  41a1f7:	mov    (%rbx),%rdi
  41a1fa:	lea    0x43e0f(%rip),%rsi        # 45e010 <_fini+0xb0c>
  41a201:	xor    %eax,%eax
  41a203:	callq  413c40 <BIO_printf@plt>
  41a208:	mov    (%rbx),%rdi
  41a20b:	lea    0x43e46(%rip),%rsi        # 45e058 <_fini+0xb54>
  41a212:	xor    %eax,%eax
  41a214:	callq  413c40 <BIO_printf@plt>
  41a219:	mov    (%rbx),%rdi
  41a21c:	lea    0x43e5d(%rip),%rsi        # 45e080 <_fini+0xb7c>
  41a223:	xor    %eax,%eax
  41a225:	callq  413c40 <BIO_printf@plt>
  41a22a:	mov    (%rbx),%rdi
  41a22d:	lea    0x43e84(%rip),%rsi        # 45e0b8 <_fini+0xbb4>
  41a234:	xor    %eax,%eax
  41a236:	callq  413c40 <BIO_printf@plt>
  41a23b:	jmpq   419d26 <X509_get0_pubkey_bitstr@plt+0x3356>
  41a240:	cmpq   $0x0,0x8(%rsp)
  41a246:	je     419f22 <X509_get0_pubkey_bitstr@plt+0x3552>
  41a24c:	mov    0x25bc65(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  41a253:	mov    $0x10,%edx
  41a258:	mov    $0x6a,%esi
  41a25d:	mov    %r15,%rdi
  41a260:	mov    %r10d,0x10(%rsp)
  41a265:	mov    (%rax),%rcx
  41a268:	callq  412af0 <BIO_ctrl@plt>
  41a26d:	mov    0x20(%rsp),%rcx
  41a272:	mov    0x10(%rsp),%r10d
  41a277:	test   %rcx,%rcx
  41a27a:	je     41a2b2 <X509_get0_pubkey_bitstr@plt+0x38e2>
  41a27c:	mov    0x8(%rsp),%rdi
  41a281:	mov    $0x3,%edx
  41a286:	mov    $0x6c,%esi
  41a28b:	callq  412af0 <BIO_ctrl@plt>
  41a290:	test   %rax,%rax
  41a293:	mov    0x10(%rsp),%r10d
  41a298:	jle    41a531 <X509_get0_pubkey_bitstr@plt+0x3b61>
  41a29e:	mov    0x8(%rsp),%rdi
  41a2a3:	mov    %r10d,0x10(%rsp)
  41a2a8:	callq  415fd0 <OBJ_create_objects@plt>
  41a2ad:	mov    0x10(%rsp),%r10d
  41a2b2:	test   %r14,%r14
  41a2b5:	mov    %r10d,0x10(%rsp)
  41a2ba:	je     41a571 <X509_get0_pubkey_bitstr@plt+0x3ba1>
  41a2c0:	mov    0x8(%rsp),%rdi
  41a2c5:	mov    %r14,%rcx
  41a2c8:	mov    $0x3,%edx
  41a2cd:	mov    $0x6c,%esi
  41a2d2:	callq  412af0 <BIO_ctrl@plt>
  41a2d7:	test   %rax,%rax
  41a2da:	mov    0x10(%rsp),%r10d
  41a2df:	jle    41a7b5 <X509_get0_pubkey_bitstr@plt+0x3de5>
  41a2e5:	mov    (%rsp),%rdi
  41a2e9:	test   %rdi,%rdi
  41a2ec:	je     41a7c5 <X509_get0_pubkey_bitstr@plt+0x3df5>
  41a2f2:	lea    0x43ab2(%rip),%rsi        # 45ddab <_fini+0x8a7>
  41a2f9:	mov    %r10d,0x20(%rsp)
  41a2fe:	callq  412ba0 <BIO_new_file@plt>
  41a303:	test   %rax,%rax
  41a306:	mov    %rax,0x10(%rsp)
  41a30b:	mov    0x20(%rsp),%r10d
  41a310:	je     41a850 <X509_get0_pubkey_bitstr@plt+0x3e80>
  41a316:	mov    %r10d,(%rsp)
  41a31a:	callq  414b40 <BUF_MEM_new@plt>
  41a31f:	test   %rax,%rax
  41a322:	mov    %rax,%r12
  41a325:	je     41a476 <X509_get0_pubkey_bitstr@plt+0x3aa6>
  41a32b:	mov    $0x10000,%esi
  41a330:	mov    %rax,%rdi
  41a333:	callq  414520 <BUF_MEM_grow@plt>
  41a338:	test   %eax,%eax
  41a33a:	mov    (%rsp),%r10d
  41a33e:	je     41a476 <X509_get0_pubkey_bitstr@plt+0x3aa6>
  41a344:	cmpq   $0x0,0x38(%rsp)
  41a34a:	setne  %al
  41a34d:	jne    41a596 <X509_get0_pubkey_bitstr@plt+0x3bc6>
  41a353:	cmpq   $0x0,0x40(%rsp)
  41a359:	jne    41a596 <X509_get0_pubkey_bitstr@plt+0x3bc6>
  41a35f:	cmp    $0x3,%r10d
  41a363:	movq   $0x0,(%rsp)
  41a36b:	je     41a884 <X509_get0_pubkey_bitstr@plt+0x3eb4>
  41a371:	xor    %r14d,%r14d
  41a374:	mov    0x8(%rsp),%r13
  41a379:	jmp    41a3a2 <X509_get0_pubkey_bitstr@plt+0x39d2>
  41a37b:	nopl   0x0(%rax,%rax,1)
  41a380:	mov    %r14,%rsi
  41a383:	add    0x8(%r12),%rsi
  41a388:	mov    $0x2000,%edx
  41a38d:	mov    %r13,%rdi
  41a390:	callq  413930 <BIO_read@plt>
  41a395:	test   %eax,%eax
  41a397:	jle    41a641 <X509_get0_pubkey_bitstr@plt+0x3c71>
  41a39d:	cltq   
  41a39f:	add    %rax,%r14
  41a3a2:	lea    0x2000(%r14),%esi
  41a3a9:	mov    %r12,%rdi
  41a3ac:	movslq %esi,%rsi
  41a3af:	callq  414520 <BUF_MEM_grow@plt>
  41a3b4:	test   %eax,%eax
  41a3b6:	jne    41a380 <X509_get0_pubkey_bitstr@plt+0x39b0>
  41a3b8:	xor    %r13d,%r13d
  41a3bb:	mov    $0x1,%r14d
  41a3c1:	mov    0x10(%rsp),%rdi
  41a3c6:	callq  413960 <BIO_free@plt>
  41a3cb:	jmpq   419f51 <X509_get0_pubkey_bitstr@plt+0x3581>
  41a3d0:	callq  4152b0 <BIO_s_file@plt>
  41a3d5:	mov    %rax,%rdi
  41a3d8:	callq  414a20 <BIO_new@plt>
  41a3dd:	test   %rax,%rax
  41a3e0:	mov    %rax,%rdi
  41a3e3:	mov    %rax,(%rbx)
  41a3e6:	je     419d19 <X509_get0_pubkey_bitstr@plt+0x3349>
  41a3ec:	mov    0x25bb8d(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  41a3f3:	mov    $0x6a,%esi
  41a3f8:	mov    (%rdx),%rcx
  41a3fb:	mov    $0x10,%edx
  41a400:	callq  412af0 <BIO_ctrl@plt>
  41a405:	mov    (%rbx),%rdi
  41a408:	jmpq   419d19 <X509_get0_pubkey_bitstr@plt+0x3349>
  41a40d:	sub    $0x1,%r13d
  41a411:	mov    %r10d,0x48(%rsp)
  41a416:	je     41a110 <X509_get0_pubkey_bitstr@plt+0x3740>
  41a41c:	mov    0x8(%r9),%rdi
  41a420:	xor    %esi,%esi
  41a422:	mov    $0xa,%edx
  41a427:	lea    0x8(%r9),%rbp
  41a42b:	callq  4155d0 <strtol@plt>
  41a430:	test   %eax,%eax
  41a432:	mov    %eax,0x34(%rsp)
  41a436:	mov    0x48(%rsp),%r10d
  41a43b:	jne    419e5a <X509_get0_pubkey_bitstr@plt+0x348a>
  41a441:	jmpq   41a110 <X509_get0_pubkey_bitstr@plt+0x3740>
  41a446:	nopw   %cs:0x0(%rax,%rax,1)
  41a450:	mov    (%rbx),%rdi
  41a453:	lea    0x4386a(%rip),%rsi        # 45dcc4 <_fini+0x7c0>
  41a45a:	xor    %eax,%eax
  41a45c:	callq  413c40 <BIO_printf@plt>
  41a461:	jmpq   419d26 <X509_get0_pubkey_bitstr@plt+0x3356>
  41a466:	mov    %r9,%rbp
  41a469:	movl   $0xffffffff,0x50(%rsp)
  41a471:	jmpq   419e5a <X509_get0_pubkey_bitstr@plt+0x348a>
  41a476:	xor    %r13d,%r13d
  41a479:	movq   $0x0,(%rsp)
  41a481:	mov    $0x1,%r14d
  41a487:	jmpq   41a3c1 <X509_get0_pubkey_bitstr@plt+0x39f1>
  41a48c:	lea    0x4387e(%rip),%rdi        # 45dd11 <_fini+0x80d>
  41a493:	mov    $0xa,%ecx
  41a498:	mov    %rdx,%rsi
  41a49b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41a49d:	jne    41a500 <X509_get0_pubkey_bitstr@plt+0x3b30>
  41a49f:	sub    $0x1,%r13d
  41a4a3:	mov    %r10d,0x48(%rsp)
  41a4a8:	je     41a110 <X509_get0_pubkey_bitstr@plt+0x3740>
  41a4ae:	mov    0x8(%r9),%rsi
  41a4b2:	mov    0x8(%rsp),%rdi
  41a4b7:	lea    0x8(%r9),%rbp
  41a4bb:	callq  412fe0 <sk_push@plt>
  41a4c0:	mov    0x48(%rsp),%r10d
  41a4c5:	jmpq   419e5a <X509_get0_pubkey_bitstr@plt+0x348a>
  41a4ca:	xor    %r14d,%r14d
  41a4cd:	movl   $0x0,0x50(%rsp)
  41a4d5:	movl   $0x0,0x30(%rsp)
  41a4dd:	movl   $0x0,0x18(%rsp)
  41a4e5:	mov    $0x3,%r10d
  41a4eb:	movl   $0x0,0x34(%rsp)
  41a4f3:	movl   $0x0,0x28(%rsp)
  41a4fb:	jmpq   419ee8 <X509_get0_pubkey_bitstr@plt+0x3518>
  41a500:	lea    0x43814(%rip),%rdi        # 45dd1b <_fini+0x817>
  41a507:	mov    %rdx,%rsi
  41a50a:	mov    %r14,%rcx
  41a50d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41a50f:	jne    41a7d3 <X509_get0_pubkey_bitstr@plt+0x3e03>
  41a515:	sub    $0x1,%r13d
  41a519:	je     41a110 <X509_get0_pubkey_bitstr@plt+0x3740>
  41a51f:	mov    0x8(%r9),%rax
  41a523:	lea    0x8(%r9),%rbp
  41a527:	mov    %rax,0x40(%rsp)
  41a52c:	jmpq   419e5a <X509_get0_pubkey_bitstr@plt+0x348a>
  41a531:	mov    (%rbx),%rdi
  41a534:	mov    0x20(%rsp),%rdx
  41a539:	lea    0x43856(%rip),%rsi        # 45dd96 <_fini+0x892>
  41a540:	xor    %eax,%eax
  41a542:	callq  413c40 <BIO_printf@plt>
  41a547:	mov    (%rbx),%rdi
  41a54a:	callq  413f40 <ERR_print_errors@plt>
  41a54f:	xor    %r13d,%r13d
  41a552:	xor    %r12d,%r12d
  41a555:	movq   $0x0,0x10(%rsp)
  41a55e:	movq   $0x0,(%rsp)
  41a566:	mov    $0x1,%r14d
  41a56c:	jmpq   41a3c1 <X509_get0_pubkey_bitstr@plt+0x39f1>
  41a571:	mov    0x25b998(%rip),%rax        # 675f10 <_fini+0x218a0c>
  41a578:	mov    0x8(%rsp),%rdi
  41a57d:	xor    %edx,%edx
  41a57f:	mov    $0x6a,%esi
  41a584:	mov    (%rax),%rcx
  41a587:	callq  412af0 <BIO_ctrl@plt>
  41a58c:	mov    0x10(%rsp),%r10d
  41a591:	jmpq   41a2e5 <X509_get0_pubkey_bitstr@plt+0x3915>
  41a596:	test   %al,%al
  41a598:	mov    (%rbx),%r13
  41a59b:	je     41aa2c <X509_get0_pubkey_bitstr@plt+0x405c>
  41a5a1:	xor    %edi,%edi
  41a5a3:	callq  413cd0 <NCONF_new@plt>
  41a5a8:	mov    0x38(%rsp),%rsi
  41a5ad:	lea    0x68(%rsp),%rdx
  41a5b2:	mov    %rax,%rdi
  41a5b5:	mov    %rax,%r14
  41a5b8:	callq  414c50 <NCONF_load@plt>
  41a5bd:	test   %eax,%eax
  41a5bf:	je     41aa04 <X509_get0_pubkey_bitstr@plt+0x4034>
  41a5c5:	cmpq   $0x0,0x40(%rsp)
  41a5cb:	je     41a9c7 <X509_get0_pubkey_bitstr@plt+0x3ff7>
  41a5d1:	mov    0x40(%rsp),%rdi
  41a5d6:	mov    %r14,%rsi
  41a5d9:	callq  413a40 <ASN1_generate_nconf@plt>
  41a5de:	mov    %r14,%rdi
  41a5e1:	mov    %rax,%r13
  41a5e4:	callq  4137f0 <NCONF_free@plt>
  41a5e9:	test   %r13,%r13
  41a5ec:	je     41a9a9 <X509_get0_pubkey_bitstr@plt+0x3fd9>
  41a5f2:	xor    %esi,%esi
  41a5f4:	mov    %r13,%rdi
  41a5f7:	callq  416040 <i2d_ASN1_TYPE@plt>
  41a5fc:	test   %eax,%eax
  41a5fe:	jle    41a996 <X509_get0_pubkey_bitstr@plt+0x3fc6>
  41a604:	movslq %eax,%r14
  41a607:	mov    %r12,%rdi
  41a60a:	mov    %r14,%rsi
  41a60d:	callq  414520 <BUF_MEM_grow@plt>
  41a612:	test   %eax,%eax
  41a614:	je     41a996 <X509_get0_pubkey_bitstr@plt+0x3fc6>
  41a61a:	mov    0x8(%r12),%rax
  41a61f:	lea    0x70(%rsp),%rsi
  41a624:	mov    %r13,%rdi
  41a627:	mov    %rax,0x70(%rsp)
  41a62c:	callq  416040 <i2d_ASN1_TYPE@plt>
  41a631:	mov    %r13,%rdi
  41a634:	callq  413af0 <ASN1_TYPE_free@plt>
  41a639:	movq   $0x0,(%rsp)
  41a641:	mov    0x8(%r12),%rax
  41a646:	mov    %rbp,%rdi
  41a649:	xor    %r13d,%r13d
  41a64c:	mov    %rax,0x20(%rsp)
  41a651:	callq  4156d0 <sk_num@plt>
  41a656:	test   %eax,%eax
  41a658:	je     41a737 <X509_get0_pubkey_bitstr@plt+0x3d67>
  41a65e:	lea    0x70(%rsp),%rax
  41a663:	xor    %edx,%edx
  41a665:	mov    %r15,0x38(%rsp)
  41a66a:	mov    %r12,0x40(%rsp)
  41a66f:	mov    %edx,%r15d
  41a672:	mov    %rax,0x48(%rsp)
  41a677:	jmp    41a69c <X509_get0_pubkey_bitstr@plt+0x3ccc>
  41a679:	mov    %r15d,%esi
  41a67c:	mov    %rbp,%rdi
  41a67f:	callq  412b30 <sk_value@plt>
  41a684:	mov    (%rbx),%rdi
  41a687:	lea    0x43740(%rip),%rsi        # 45ddce <_fini+0x8ca>
  41a68e:	mov    %rax,%rdx
  41a691:	xor    %eax,%eax
  41a693:	callq  413c40 <BIO_printf@plt>
  41a698:	add    $0x1,%r15d
  41a69c:	mov    %rbp,%rdi
  41a69f:	callq  4156d0 <sk_num@plt>
  41a6a4:	cmp    %eax,%r15d
  41a6a7:	jge    41a72d <X509_get0_pubkey_bitstr@plt+0x3d5d>
  41a6ad:	mov    %r15d,%esi
  41a6b0:	mov    %rbp,%rdi
  41a6b3:	callq  412b30 <sk_value@plt>
  41a6b8:	xor    %esi,%esi
  41a6ba:	mov    $0xa,%edx
  41a6bf:	mov    %rax,%rdi
  41a6c2:	callq  4155d0 <strtol@plt>
  41a6c7:	test   %eax,%eax
  41a6c9:	je     41a679 <X509_get0_pubkey_bitstr@plt+0x3ca9>
  41a6cb:	mov    0x20(%rsp),%rdx
  41a6d0:	cltq   
  41a6d2:	mov    0x48(%rsp),%rsi
  41a6d7:	xor    %edi,%edi
  41a6d9:	add    %rax,%rdx
  41a6dc:	mov    %rdx,0x70(%rsp)
  41a6e1:	mov    %r14,%rdx
  41a6e4:	sub    %rax,%rdx
  41a6e7:	callq  415e50 <d2i_ASN1_TYPE@plt>
  41a6ec:	mov    %r13,%rdi
  41a6ef:	mov    %rax,%r12
  41a6f2:	callq  413af0 <ASN1_TYPE_free@plt>
  41a6f7:	test   %r12,%r12
  41a6fa:	je     41a94c <X509_get0_pubkey_bitstr@plt+0x3f7c>
  41a700:	mov    %r12,%rdi
  41a703:	callq  416950 <ASN1_TYPE_get@plt>
  41a708:	lea    -0x5(%rax),%edx
  41a70b:	cmp    $0x1,%edx
  41a70e:	jbe    41a8fc <X509_get0_pubkey_bitstr@plt+0x3f2c>
  41a714:	mov    0x8(%r12),%rax
  41a719:	mov    %r12,%r13
  41a71c:	mov    0x8(%rax),%rdx
  41a720:	movslq (%rax),%r14
  41a723:	mov    %rdx,0x20(%rsp)
  41a728:	jmpq   41a698 <X509_get0_pubkey_bitstr@plt+0x3cc8>
  41a72d:	mov    0x38(%rsp),%r15
  41a732:	mov    0x40(%rsp),%r12
  41a737:	movslq 0x28(%rsp),%rcx
  41a73c:	cmp    %rcx,%r14
  41a73f:	jle    41a8c0 <X509_get0_pubkey_bitstr@plt+0x3ef0>
  41a745:	mov    0x34(%rsp),%edx
  41a749:	sub    %rcx,%r14
  41a74c:	test   %edx,%edx
  41a74e:	je     41a759 <X509_get0_pubkey_bitstr@plt+0x3d89>
  41a750:	mov    0x34(%rsp),%eax
  41a754:	cmp    %rax,%r14
  41a757:	jge    41a75e <X509_get0_pubkey_bitstr@plt+0x3d8e>
  41a759:	mov    %r14d,0x34(%rsp)
  41a75e:	mov    0x10(%rsp),%rdi
  41a763:	test   %rdi,%rdi
  41a766:	je     41a806 <X509_get0_pubkey_bitstr@plt+0x3e36>
  41a76c:	mov    0x20(%rsp),%rax
  41a771:	mov    0x34(%rsp),%r14d
  41a776:	mov    %rcx,0x28(%rsp)
  41a77b:	lea    (%rax,%rcx,1),%rsi
  41a77f:	mov    %r14d,%edx
  41a782:	callq  412db0 <BIO_write@plt>
  41a787:	cmp    %eax,%r14d
  41a78a:	mov    0x28(%rsp),%rcx
  41a78f:	je     41a806 <X509_get0_pubkey_bitstr@plt+0x3e36>
  41a791:	mov    (%rbx),%rdi
  41a794:	lea    0x43695(%rip),%rsi        # 45de30 <_fini+0x92c>
  41a79b:	xor    %eax,%eax
  41a79d:	mov    $0x1,%r14d
  41a7a3:	callq  413c40 <BIO_printf@plt>
  41a7a8:	mov    (%rbx),%rdi
  41a7ab:	callq  413f40 <ERR_print_errors@plt>
  41a7b0:	jmpq   41a3c1 <X509_get0_pubkey_bitstr@plt+0x39f1>
  41a7b5:	mov    %r14,%rdi
  41a7b8:	callq  4142c0 <perror@plt>
  41a7bd:	nopl   (%rax)
  41a7c0:	jmpq   41a54f <X509_get0_pubkey_bitstr@plt+0x3b7f>
  41a7c5:	movq   $0x0,0x10(%rsp)
  41a7ce:	jmpq   41a316 <X509_get0_pubkey_bitstr@plt+0x3946>
  41a7d3:	lea    0x43549(%rip),%rdi        # 45dd23 <_fini+0x81f>
  41a7da:	mov    $0x9,%ecx
  41a7df:	mov    %rdx,%rsi
  41a7e2:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41a7e4:	jne    41a8e1 <X509_get0_pubkey_bitstr@plt+0x3f11>
  41a7ea:	sub    $0x1,%r13d
  41a7ee:	je     41a110 <X509_get0_pubkey_bitstr@plt+0x3740>
  41a7f4:	mov    0x8(%r9),%rax
  41a7f8:	lea    0x8(%r9),%rbp
  41a7fc:	mov    %rax,0x38(%rsp)
  41a801:	jmpq   419e5a <X509_get0_pubkey_bitstr@plt+0x348a>
  41a806:	mov    0x30(%rsp),%eax
  41a80a:	xor    %r14d,%r14d
  41a80d:	test   %eax,%eax
  41a80f:	jne    41a3c1 <X509_get0_pubkey_bitstr@plt+0x39f1>
  41a815:	mov    0x20(%rsp),%rsi
  41a81a:	mov    0x34(%rsp),%edx
  41a81e:	mov    %r15,%rdi
  41a821:	mov    0x50(%rsp),%r8d
  41a826:	add    %rcx,%rsi
  41a829:	mov    0x18(%rsp),%ecx
  41a82d:	callq  413760 <ASN1_parse_dump@plt>
  41a832:	test   %eax,%eax
  41a834:	jne    41a3c1 <X509_get0_pubkey_bitstr@plt+0x39f1>
  41a83a:	mov    (%rbx),%rdi
  41a83d:	mov    $0x1,%r14b
  41a840:	callq  413f40 <ERR_print_errors@plt>
  41a845:	jmpq   41a3c1 <X509_get0_pubkey_bitstr@plt+0x39f1>
  41a84a:	nopw   0x0(%rax,%rax,1)
  41a850:	mov    (%rsp),%rdx
  41a854:	mov    (%rbx),%rdi
  41a857:	lea    0x43538(%rip),%rsi        # 45dd96 <_fini+0x892>
  41a85e:	xor    %r13d,%r13d
  41a861:	xor    %r12d,%r12d
  41a864:	mov    $0x1,%r14d
  41a86a:	callq  413c40 <BIO_printf@plt>
  41a86f:	mov    (%rbx),%rdi
  41a872:	callq  413f40 <ERR_print_errors@plt>
  41a877:	movq   $0x0,(%rsp)
  41a87f:	jmpq   41a3c1 <X509_get0_pubkey_bitstr@plt+0x39f1>
  41a884:	callq  415060 <BIO_f_base64@plt>
  41a889:	mov    %rax,%rdi
  41a88c:	callq  414a20 <BIO_new@plt>
  41a891:	test   %rax,%rax
  41a894:	mov    %rax,%r14
  41a897:	mov    %rax,(%rsp)
  41a89b:	je     41a3b8 <X509_get0_pubkey_bitstr@plt+0x39e8>
  41a8a1:	mov    0x8(%rsp),%r13
  41a8a6:	mov    %rax,%rdi
  41a8a9:	mov    %r13,%rsi
  41a8ac:	callq  415ac0 <BIO_push@plt>
  41a8b1:	mov    %r14,0x8(%rsp)
  41a8b6:	mov    %r13,(%rsp)
  41a8ba:	jmpq   41a371 <X509_get0_pubkey_bitstr@plt+0x39a1>
  41a8bf:	nop
  41a8c0:	mov    (%rbx),%rdi
  41a8c3:	lea    0x4354d(%rip),%rsi        # 45de17 <_fini+0x913>
  41a8ca:	xor    %eax,%eax
  41a8cc:	mov    $0x1,%r14d
  41a8d2:	callq  413c40 <BIO_printf@plt>
  41a8d7:	jmpq   41a3c1 <X509_get0_pubkey_bitstr@plt+0x39f1>
  41a8dc:	callq  414c30 <__stack_chk_fail@plt>
  41a8e1:	mov    (%rbx),%rdi
  41a8e4:	lea    0x43441(%rip),%rsi        # 45dd2c <_fini+0x828>
  41a8eb:	xor    %eax,%eax
  41a8ed:	mov    0x8(%rsp),%rbp
  41a8f2:	callq  413c40 <BIO_printf@plt>
  41a8f7:	jmpq   41a115 <X509_get0_pubkey_bitstr@plt+0x3745>
  41a8fc:	cmp    $0x5,%eax
  41a8ff:	mov    (%rbx),%rdi
  41a902:	lea    0x433b4(%rip),%rax        # 45dcbd <_fini+0x7b9>
  41a909:	lea    0x433a8(%rip),%rdx        # 45dcb8 <_fini+0x7b4>
  41a910:	lea    0x434eb(%rip),%rsi        # 45de02 <_fini+0x8fe>
  41a917:	mov    %r12,0x18(%rsp)
  41a91c:	mov    0x38(%rsp),%r15
  41a921:	mov    0x40(%rsp),%r12
  41a926:	mov    $0x1,%r14d
  41a92c:	cmovne %rax,%rdx
  41a930:	xor    %eax,%eax
  41a932:	callq  413c40 <BIO_printf@plt>
  41a937:	mov    (%rbx),%rdi
  41a93a:	callq  413f40 <ERR_print_errors@plt>
  41a93f:	mov    0x18(%rsp),%rcx
  41a944:	mov    %rcx,%r13
  41a947:	jmpq   41a3c1 <X509_get0_pubkey_bitstr@plt+0x39f1>
  41a94c:	mov    (%rbx),%rdi
  41a94f:	lea    0x43493(%rip),%rsi        # 45dde9 <_fini+0x8e5>
  41a956:	xor    %eax,%eax
  41a958:	mov    0x38(%rsp),%r15
  41a95d:	mov    0x40(%rsp),%r12
  41a962:	xor    %r13d,%r13d
  41a965:	mov    $0x1,%r14d
  41a96b:	callq  413c40 <BIO_printf@plt>
  41a970:	mov    (%rbx),%rdi
  41a973:	callq  413f40 <ERR_print_errors@plt>
  41a978:	jmpq   41a3c1 <X509_get0_pubkey_bitstr@plt+0x39f1>
  41a97d:	movq   $0x0,(%rsp)
  41a985:	xor    %r13d,%r13d
  41a988:	xor    %r12d,%r12d
  41a98b:	mov    $0x1,%r14d
  41a991:	jmpq   419f5b <X509_get0_pubkey_bitstr@plt+0x358b>
  41a996:	xor    %r14d,%r14d
  41a999:	mov    %r14,%rdi
  41a99c:	callq  4137f0 <NCONF_free@plt>
  41a9a1:	mov    %r13,%rdi
  41a9a4:	callq  413af0 <ASN1_TYPE_free@plt>
  41a9a9:	mov    (%rbx),%rdi
  41a9ac:	xor    %r13d,%r13d
  41a9af:	mov    $0x1,%r14d
  41a9b5:	callq  413f40 <ERR_print_errors@plt>
  41a9ba:	movq   $0x0,(%rsp)
  41a9c2:	jmpq   41a3c1 <X509_get0_pubkey_bitstr@plt+0x39f1>
  41a9c7:	lea    0x433e0(%rip),%rdx        # 45ddae <_fini+0x8aa>
  41a9ce:	lea    0x50621(%rip),%rsi        # 46aff6 <_fini+0xdaf2>
  41a9d5:	mov    %r14,%rdi
  41a9d8:	callq  413fd0 <NCONF_get_string@plt>
  41a9dd:	test   %rax,%rax
  41a9e0:	mov    %rax,0x40(%rsp)
  41a9e5:	jne    41a5d1 <X509_get0_pubkey_bitstr@plt+0x3c01>
  41a9eb:	mov    0x38(%rsp),%rdx
  41a9f0:	lea    0x433bc(%rip),%rsi        # 45ddb3 <_fini+0x8af>
  41a9f7:	mov    %r13,%rdi
  41a9fa:	xor    %r13d,%r13d
  41a9fd:	callq  413c40 <BIO_printf@plt>
  41aa02:	jmp    41a999 <X509_get0_pubkey_bitstr@plt+0x3fc9>
  41aa04:	mov    0x68(%rsp),%rdx
  41aa09:	test   %rdx,%rdx
  41aa0c:	jle    41aa34 <X509_get0_pubkey_bitstr@plt+0x4064>
  41aa0e:	mov    0x38(%rsp),%rcx
  41aa13:	lea    0x436d6(%rip),%rsi        # 45e0f0 <_fini+0xbec>
  41aa1a:	mov    %r13,%rdi
  41aa1d:	xor    %eax,%eax
  41aa1f:	xor    %r13d,%r13d
  41aa22:	callq  413c40 <BIO_printf@plt>
  41aa27:	jmpq   41a999 <X509_get0_pubkey_bitstr@plt+0x3fc9>
  41aa2c:	xor    %r14d,%r14d
  41aa2f:	jmpq   41a5d1 <X509_get0_pubkey_bitstr@plt+0x3c01>
  41aa34:	mov    0x38(%rsp),%rdx
  41aa39:	lea    0x436d8(%rip),%rsi        # 45e118 <_fini+0xc14>
  41aa40:	mov    %r13,%rdi
  41aa43:	xor    %eax,%eax
  41aa45:	xor    %r13d,%r13d
  41aa48:	callq  413c40 <BIO_printf@plt>
  41aa4d:	jmpq   41a999 <X509_get0_pubkey_bitstr@plt+0x3fc9>
  41aa52:	nopw   %cs:0x0(%rax,%rax,1)
  41aa5c:	nopl   0x0(%rax)
  41aa60:	push   %rbp
  41aa61:	mov    %rdi,%rbp
  41aa64:	push   %rbx
  41aa65:	sub    $0x18,%rsp
  41aa69:	mov    %fs:0x28,%rax
  41aa72:	mov    %rax,0x8(%rsp)
  41aa77:	xor    %eax,%eax
  41aa79:	movb   $0x2a,0x7(%rsp)
  41aa7e:	callq  413d00 <EVP_PKEY_CTX_get_app_data@plt>
  41aa83:	xor    %esi,%esi
  41aa85:	mov    %rbp,%rdi
  41aa88:	mov    %rax,%rbx
  41aa8b:	callq  4153e0 <EVP_PKEY_CTX_get_keygen_info@plt>
  41aa90:	test   %eax,%eax
  41aa92:	jne    41aae0 <X509_get0_pubkey_bitstr@plt+0x4110>
  41aa94:	movb   $0x2e,0x7(%rsp)
  41aa99:	lea    0x7(%rsp),%rsi
  41aa9e:	mov    $0x1,%edx
  41aaa3:	mov    %rbx,%rdi
  41aaa6:	callq  412db0 <BIO_write@plt>
  41aaab:	xor    %ecx,%ecx
  41aaad:	xor    %edx,%edx
  41aaaf:	mov    $0xb,%esi
  41aab4:	mov    %rbx,%rdi
  41aab7:	callq  412af0 <BIO_ctrl@plt>
  41aabc:	mov    0x8(%rsp),%rcx
  41aac1:	xor    %fs:0x28,%rcx
  41aaca:	mov    $0x1,%eax
  41aacf:	jne    41aafc <X509_get0_pubkey_bitstr@plt+0x412c>
  41aad1:	add    $0x18,%rsp
  41aad5:	pop    %rbx
  41aad6:	pop    %rbp
  41aad7:	retq   
  41aad8:	nopl   0x0(%rax,%rax,1)
  41aae0:	cmp    $0x1,%eax
  41aae3:	jne    41aaf0 <X509_get0_pubkey_bitstr@plt+0x4120>
  41aae5:	movb   $0x2b,0x7(%rsp)
  41aaea:	jmp    41aa99 <X509_get0_pubkey_bitstr@plt+0x40c9>
  41aaec:	nopl   0x0(%rax)
  41aaf0:	cmp    $0x2,%eax
  41aaf3:	jne    41ab01 <X509_get0_pubkey_bitstr@plt+0x4131>
  41aaf5:	movb   $0x2a,0x7(%rsp)
  41aafa:	jmp    41aa99 <X509_get0_pubkey_bitstr@plt+0x40c9>
  41aafc:	callq  414c30 <__stack_chk_fail@plt>
  41ab01:	cmp    $0x3,%eax
  41ab04:	jne    41aa99 <X509_get0_pubkey_bitstr@plt+0x40c9>
  41ab06:	movb   $0xa,0x7(%rsp)
  41ab0b:	jmp    41aa99 <X509_get0_pubkey_bitstr@plt+0x40c9>
  41ab0d:	nopl   (%rax)
  41ab10:	push   %r14
  41ab12:	mov    %rdx,%r14
  41ab15:	push   %r13
  41ab17:	mov    %rdi,%r13
  41ab1a:	mov    %rsi,%rdi
  41ab1d:	push   %r12
  41ab1f:	mov    %rcx,%r12
  41ab22:	push   %rbp
  41ab23:	mov    %r8,%rbp
  41ab26:	push   %rbx
  41ab27:	mov    %rsi,%rbx
  41ab2a:	sub    $0x10,%rsp
  41ab2e:	mov    %fs:0x28,%rax
  41ab37:	mov    %rax,0x8(%rsp)
  41ab3c:	xor    %eax,%eax
  41ab3e:	movq   $0x0,(%rsp)
  41ab46:	callq  4160a0 <EVP_MD_CTX_init@plt>
  41ab4b:	xor    %ecx,%ecx
  41ab4d:	mov    %rbx,%rdi
  41ab50:	mov    %rsp,%rsi
  41ab53:	mov    %r14,%r8
  41ab56:	mov    %r12,%rdx
  41ab59:	xor    %ebx,%ebx
  41ab5b:	callq  415c40 <EVP_DigestSignInit@plt>
  41ab60:	test   %eax,%eax
  41ab62:	jne    41ab90 <X509_get0_pubkey_bitstr@plt+0x41c0>
  41ab64:	jmp    41aba1 <X509_get0_pubkey_bitstr@plt+0x41d1>
  41ab66:	nopw   %cs:0x0(%rax,%rax,1)
  41ab70:	mov    %ebx,%esi
  41ab72:	mov    %rbp,%rdi
  41ab75:	callq  412b30 <sk_value@plt>
  41ab7a:	mov    (%rsp),%rdi
  41ab7e:	mov    %rax,%rsi
  41ab81:	mov    %rax,%r12
  41ab84:	callq  448760 <X509_get0_pubkey_bitstr@plt+0x31d90>
  41ab89:	test   %eax,%eax
  41ab8b:	jle    41abc0 <X509_get0_pubkey_bitstr@plt+0x41f0>
  41ab8d:	add    $0x1,%ebx
  41ab90:	mov    %rbp,%rdi
  41ab93:	callq  4156d0 <sk_num@plt>
  41ab98:	cmp    %eax,%ebx
  41ab9a:	jl     41ab70 <X509_get0_pubkey_bitstr@plt+0x41a0>
  41ab9c:	mov    $0x1,%eax
  41aba1:	mov    0x8(%rsp),%rcx
  41aba6:	xor    %fs:0x28,%rcx
  41abaf:	jne    41abe7 <X509_get0_pubkey_bitstr@plt+0x4217>
  41abb1:	add    $0x10,%rsp
  41abb5:	pop    %rbx
  41abb6:	pop    %rbp
  41abb7:	pop    %r12
  41abb9:	pop    %r13
  41abbb:	pop    %r14
  41abbd:	retq   
  41abbe:	xchg   %ax,%ax
  41abc0:	lea    0x44da7(%rip),%rsi        # 45f96e <_fini+0x246a>
  41abc7:	mov    %r12,%rdx
  41abca:	mov    %r13,%rdi
  41abcd:	xor    %eax,%eax
  41abcf:	callq  413c40 <BIO_printf@plt>
  41abd4:	lea    0x260165(%rip),%rax        # 67ad40 <_edata+0x38>
  41abdb:	mov    (%rax),%rdi
  41abde:	callq  413f40 <ERR_print_errors@plt>
  41abe3:	xor    %eax,%eax
  41abe5:	jmp    41aba1 <X509_get0_pubkey_bitstr@plt+0x41d1>
  41abe7:	callq  414c30 <__stack_chk_fail@plt>
  41abec:	nopl   0x0(%rax)
  41abf0:	push   %r14
  41abf2:	mov    %rsi,%r14
  41abf5:	push   %r13
  41abf7:	mov    %rcx,%r13
  41abfa:	push   %r12
  41abfc:	mov    %rdx,%r12
  41abff:	push   %rbp
  41ac00:	mov    %rdi,%rbp
  41ac03:	push   %rbx
  41ac04:	sub    $0x50,%rsp
  41ac08:	lea    0x10(%rsp),%rbx
  41ac0d:	mov    %r8,0x8(%rsp)
  41ac12:	mov    %fs:0x28,%rax
  41ac1b:	mov    %rax,0x48(%rsp)
  41ac20:	xor    %eax,%eax
  41ac22:	mov    %rbx,%rdi
  41ac25:	callq  4160a0 <EVP_MD_CTX_init@plt>
  41ac2a:	mov    0x8(%rsp),%r8
  41ac2f:	mov    %rbp,%rdi
  41ac32:	mov    %r13,%rcx
  41ac35:	mov    %r12,%rdx
  41ac38:	mov    %rbx,%rsi
  41ac3b:	callq  41ab10 <X509_get0_pubkey_bitstr@plt+0x4140>
  41ac40:	test   %eax,%eax
  41ac42:	mov    %eax,%ebp
  41ac44:	jle    41ac53 <X509_get0_pubkey_bitstr@plt+0x4283>
  41ac46:	mov    %rbx,%rsi
  41ac49:	mov    %r14,%rdi
  41ac4c:	callq  414240 <X509_sign_ctx@plt>
  41ac51:	mov    %eax,%ebp
  41ac53:	mov    %rbx,%rdi
  41ac56:	callq  415110 <EVP_MD_CTX_cleanup@plt>
  41ac5b:	xor    %eax,%eax
  41ac5d:	test   %ebp,%ebp
  41ac5f:	setg   %al
  41ac62:	mov    0x48(%rsp),%rdx
  41ac67:	xor    %fs:0x28,%rdx
  41ac70:	jne    41ac7f <X509_get0_pubkey_bitstr@plt+0x42af>
  41ac72:	add    $0x50,%rsp
  41ac76:	pop    %rbx
  41ac77:	pop    %rbp
  41ac78:	pop    %r12
  41ac7a:	pop    %r13
  41ac7c:	pop    %r14
  41ac7e:	retq   
  41ac7f:	callq  414c30 <__stack_chk_fail@plt>
  41ac84:	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41ac90:	push   %r14
  41ac92:	mov    %rsi,%r14
  41ac95:	push   %r13
  41ac97:	mov    %rcx,%r13
  41ac9a:	push   %r12
  41ac9c:	mov    %rdx,%r12
  41ac9f:	push   %rbp
  41aca0:	mov    %rdi,%rbp
  41aca3:	push   %rbx
  41aca4:	sub    $0x50,%rsp
  41aca8:	lea    0x10(%rsp),%rbx
  41acad:	mov    %r8,0x8(%rsp)
  41acb2:	mov    %fs:0x28,%rax
  41acbb:	mov    %rax,0x48(%rsp)
  41acc0:	xor    %eax,%eax
  41acc2:	mov    %rbx,%rdi
  41acc5:	callq  4160a0 <EVP_MD_CTX_init@plt>
  41acca:	mov    0x8(%rsp),%r8
  41accf:	mov    %rbp,%rdi
  41acd2:	mov    %r13,%rcx
  41acd5:	mov    %r12,%rdx
  41acd8:	mov    %rbx,%rsi
  41acdb:	callq  41ab10 <X509_get0_pubkey_bitstr@plt+0x4140>
  41ace0:	test   %eax,%eax
  41ace2:	mov    %eax,%ebp
  41ace4:	jle    41acf3 <X509_get0_pubkey_bitstr@plt+0x4323>
  41ace6:	mov    %rbx,%rsi
  41ace9:	mov    %r14,%rdi
  41acec:	callq  415310 <X509_REQ_sign_ctx@plt>
  41acf1:	mov    %eax,%ebp
  41acf3:	mov    %rbx,%rdi
  41acf6:	callq  415110 <EVP_MD_CTX_cleanup@plt>
  41acfb:	xor    %eax,%eax
  41acfd:	test   %ebp,%ebp
  41acff:	setg   %al
  41ad02:	mov    0x48(%rsp),%rdx
  41ad07:	xor    %fs:0x28,%rdx
  41ad10:	jne    41ad1f <X509_get0_pubkey_bitstr@plt+0x434f>
  41ad12:	add    $0x50,%rsp
  41ad16:	pop    %rbx
  41ad17:	pop    %rbp
  41ad18:	pop    %r12
  41ad1a:	pop    %r13
  41ad1c:	pop    %r14
  41ad1e:	retq   
  41ad1f:	callq  414c30 <__stack_chk_fail@plt>
  41ad24:	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41ad30:	push   %r15
  41ad32:	push   %r14
  41ad34:	push   %r13
  41ad36:	push   %r12
  41ad38:	push   %rbp
  41ad39:	mov    %edi,%ebp
  41ad3b:	push   %rbx
  41ad3c:	mov    %rsi,%rbx
  41ad3f:	sub    $0x648,%rsp
  41ad46:	movq   $0x0,0x2604d7(%rip)        # 67b228 <_edata+0x520>
  41ad51:	mov    %fs:0x28,%rax
  41ad5a:	mov    %rax,0x638(%rsp)
  41ad62:	xor    %eax,%eax
  41ad64:	movq   $0x0,0x140(%rsp)
  41ad70:	movq   $0x0,0x148(%rsp)
  41ad7c:	movq   $0x0,0x150(%rsp)
  41ad88:	movq   $0x0,0x158(%rsp)
  41ad94:	movl   $0xffffffff,0x13c(%rsp)
  41ad9f:	movq   $0xffffffffffffffff,0x160(%rsp)
  41adab:	movq   $0x0,0x168(%rsp)
  41adb7:	movq   $0x0,0x170(%rsp)
  41adc3:	callq  415db0 <EVP_des_ede3_cbc@plt>
  41adc8:	mov    $0x1,%esi
  41adcd:	mov    $0xd,%edi
  41add2:	mov    %rax,0xb0(%rsp)
  41adda:	callq  414ee0 <signal@plt>
  41addf:	lea    0x25ff5a(%rip),%r15        # 67ad40 <_edata+0x38>
  41ade6:	cmpq   $0x0,(%r15)
  41adea:	je     41b895 <X509_get0_pubkey_bitstr@plt+0x4ec5>
  41adf0:	mov    (%rbx),%rax
  41adf3:	lea    -0x1(%rbp),%r14d
  41adf7:	lea    0x8(%rbx),%rdx
  41adfb:	movq   $0x1001,0x70(%rsp)
  41ae04:	movq   $0x0,0xb8(%rsp)
  41ae10:	test   %r14d,%r14d
  41ae13:	mov    %rax,0x50(%rsp)
  41ae18:	jle    41ba7e <X509_get0_pubkey_bitstr@plt+0x50ae>
  41ae1e:	lea    0x148(%rsp),%rax
  41ae26:	movq   $0x0,0xd8(%rsp)
  41ae32:	movl   $0x0,0xe8(%rsp)
  41ae3d:	movq   $0x0,0xa8(%rsp)
  41ae49:	movq   $0x0,0x38(%rsp)
  41ae52:	mov    $0x3,%r13d
  41ae58:	movq   $0x0,0x30(%rsp)
  41ae61:	movq   $0x0,0x108(%rsp)
  41ae6d:	lea    0x42e6b(%rip),%rbp        # 45dcdf <_fini+0x7db>
  41ae74:	movl   $0x0,0x94(%rsp)
  41ae7f:	movq   $0x0,0x48(%rsp)
  41ae88:	mov    $0x8,%ebx
  41ae8d:	movq   $0x0,0x88(%rsp)
  41ae99:	movq   $0x0,0x78(%rsp)
  41aea2:	movq   $0x0,0x10(%rsp)
  41aeab:	movq   $0x0,0xa0(%rsp)
  41aeb7:	movq   $0x0,0x68(%rsp)
  41aec0:	movq   $0x0,0x58(%rsp)
  41aec9:	movq   $0x0,0x98(%rsp)
  41aed5:	movq   $0x0,0xc8(%rsp)
  41aee1:	movl   $0x0,0x80(%rsp)
  41aeec:	movl   $0x0,0xc0(%rsp)
  41aef7:	movl   $0x0,0x104(%rsp)
  41af02:	movl   $0x0,0xc4(%rsp)
  41af0d:	movl   $0x0,0xe0(%rsp)
  41af18:	movl   $0x3,0xf0(%rsp)
  41af23:	movl   $0x0,0xd4(%rsp)
  41af2e:	movl   $0x0,0xd0(%rsp)
  41af39:	movl   $0x0,0x100(%rsp)
  41af44:	movl   $0x3,0xc(%rsp)
  41af4c:	movl   $0x0,0x90(%rsp)
  41af57:	movl   $0x0,0x60(%rsp)
  41af5f:	movq   $0x0,0x40(%rsp)
  41af68:	movq   $0x0,0x28(%rsp)
  41af71:	movq   $0x0,0xf8(%rsp)
  41af7d:	movl   $0x1e,0xec(%rsp)
  41af88:	movl   $0x0,0x84(%rsp)
  41af93:	movq   $0x0,0x18(%rsp)
  41af9c:	mov    %rax,0x110(%rsp)
  41afa4:	lea    0x140(%rsp),%rax
  41afac:	mov    %rax,0x118(%rsp)
  41afb4:	jmp    41afe8 <X509_get0_pubkey_bitstr@plt+0x4618>
  41afb6:	nopw   %cs:0x0(%rax,%rax,1)
  41afc0:	sub    $0x1,%r14d
  41afc4:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41afca:	mov    0x8(%rdx),%rdi
  41afce:	lea    0x8(%rdx),%r12
  41afd2:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  41afd7:	mov    %eax,%r13d
  41afda:	sub    $0x1,%r14d
  41afde:	lea    0x8(%r12),%rdx
  41afe3:	test   %r14d,%r14d
  41afe6:	jle    41b038 <X509_get0_pubkey_bitstr@plt+0x4668>
  41afe8:	mov    (%rdx),%rax
  41afeb:	mov    %rbp,%rdi
  41afee:	mov    %rbx,%rcx
  41aff1:	mov    %rax,%rsi
  41aff4:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41aff6:	je     41afc0 <X509_get0_pubkey_bitstr@plt+0x45f0>
  41aff8:	lea    0x43191(%rip),%rdi        # 45e190 <_fini+0xc8c>
  41afff:	mov    %rax,%rsi
  41b002:	mov    $0x9,%ecx
  41b007:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41b009:	jne    41b2f8 <X509_get0_pubkey_bitstr@plt+0x4928>
  41b00f:	sub    $0x1,%r14d
  41b013:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41b019:	mov    0x8(%rdx),%rdi
  41b01d:	lea    0x8(%rdx),%r12
  41b021:	sub    $0x1,%r14d
  41b025:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  41b02a:	test   %r14d,%r14d
  41b02d:	mov    %eax,0xc(%rsp)
  41b031:	lea    0x8(%r12),%rdx
  41b036:	jg     41afe8 <X509_get0_pubkey_bitstr@plt+0x4618>
  41b038:	callq  416990 <ERR_load_crypto_strings@plt>
  41b03d:	mov    0x38(%rsp),%rdx
  41b042:	mov    0x30(%rsp),%rsi
  41b047:	lea    0x168(%rsp),%rcx
  41b04f:	mov    (%r15),%rdi
  41b052:	lea    0x170(%rsp),%r8
  41b05a:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  41b05f:	test   %eax,%eax
  41b061:	je     41b9f8 <X509_get0_pubkey_bitstr@plt+0x5028>
  41b067:	cmpq   $0x0,0x68(%rsp)
  41b06d:	je     41bbed <X509_get0_pubkey_bitstr@plt+0x521d>
  41b073:	mov    0x90(%rsp),%edi
  41b07a:	movq   $0xffffffffffffffff,0x180(%rsp)
  41b086:	test   %edi,%edi
  41b088:	jne    41ba63 <X509_get0_pubkey_bitstr@plt+0x5093>
  41b08e:	xor    %edi,%edi
  41b090:	callq  413cd0 <NCONF_new@plt>
  41b095:	mov    0x68(%rsp),%rsi
  41b09a:	lea    0x180(%rsp),%rdx
  41b0a2:	mov    %rax,%rdi
  41b0a5:	mov    %rax,0x26017c(%rip)        # 67b228 <_edata+0x520>
  41b0ac:	callq  414c50 <NCONF_load@plt>
  41b0b1:	test   %eax,%eax
  41b0b3:	je     41ba42 <X509_get0_pubkey_bitstr@plt+0x5072>
  41b0b9:	mov    0x260168(%rip),%rsi        # 67b228 <_edata+0x520>
  41b0c0:	test   %rsi,%rsi
  41b0c3:	je     41bc36 <X509_get0_pubkey_bitstr@plt+0x5266>
  41b0c9:	mov    (%r15),%rdi
  41b0cc:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  41b0d1:	test   %eax,%eax
  41b0d3:	je     41b698 <X509_get0_pubkey_bitstr@plt+0x4cc8>
  41b0d9:	mov    0x260148(%rip),%rdi        # 67b228 <_edata+0x520>
  41b0e0:	lea    0x432c8(%rip),%rdx        # 45e3af <_fini+0xeab>
  41b0e7:	xor    %esi,%esi
  41b0e9:	callq  413fd0 <NCONF_get_string@plt>
  41b0ee:	test   %rax,%rax
  41b0f1:	je     41bcfc <X509_get0_pubkey_bitstr@plt+0x532c>
  41b0f7:	lea    0x4312f(%rip),%rsi        # 45e22d <_fini+0xd29>
  41b0fe:	mov    %rax,%rdi
  41b101:	callq  412ba0 <BIO_new_file@plt>
  41b106:	test   %rax,%rax
  41b109:	mov    %rax,%rbx
  41b10c:	mov    0x260115(%rip),%rsi        # 67b228 <_edata+0x520>
  41b113:	je     41b12c <X509_get0_pubkey_bitstr@plt+0x475c>
  41b115:	mov    %rbx,%rdi
  41b118:	callq  415fd0 <OBJ_create_objects@plt>
  41b11d:	mov    %rbx,%rdi
  41b120:	callq  413960 <BIO_free@plt>
  41b125:	mov    0x2600fc(%rip),%rsi        # 67b228 <_edata+0x520>
  41b12c:	mov    (%r15),%rdi
  41b12f:	callq  445bb0 <X509_get0_pubkey_bitstr@plt+0x2f1e0>
  41b134:	test   %eax,%eax
  41b136:	je     41b698 <X509_get0_pubkey_bitstr@plt+0x4cc8>
  41b13c:	cmpq   $0x0,0xd8(%rsp)
  41b145:	je     41da01 <X509_get0_pubkey_bitstr@plt+0x7031>
  41b14b:	cmpq   $0x0,0x78(%rsp)
  41b151:	je     41d9cf <X509_get0_pubkey_bitstr@plt+0x6fff>
  41b157:	lea    0x180(%rsp),%rbx
  41b15f:	xor    %r8d,%r8d
  41b162:	xor    %ecx,%ecx
  41b164:	xor    %edx,%edx
  41b166:	mov    $0x1,%r9d
  41b16c:	xor    %esi,%esi
  41b16e:	mov    %rbx,%rdi
  41b171:	callq  413910 <X509V3_set_ctx@plt>
  41b176:	mov    0x2600ab(%rip),%rsi        # 67b228 <_edata+0x520>
  41b17d:	mov    %rbx,%rdi
  41b180:	callq  4155a0 <X509V3_set_nconf@plt>
  41b185:	mov    0x78(%rsp),%rdx
  41b18a:	mov    0x260097(%rip),%rdi        # 67b228 <_edata+0x520>
  41b191:	xor    %ecx,%ecx
  41b193:	mov    %rbx,%rsi
  41b196:	callq  4168d0 <X509V3_EXT_add_nconf@plt>
  41b19b:	test   %eax,%eax
  41b19d:	je     41bcee <X509_get0_pubkey_bitstr@plt+0x531e>
  41b1a3:	cmpq   $0x0,0x168(%rsp)
  41b1ac:	je     41d917 <X509_get0_pubkey_bitstr@plt+0x6f47>
  41b1b2:	cmpq   $0x0,0x170(%rsp)
  41b1bb:	je     41d99a <X509_get0_pubkey_bitstr@plt+0x6fca>
  41b1c1:	mov    0x260060(%rip),%rdi        # 67b228 <_edata+0x520>
  41b1c8:	lea    0x43223(%rip),%rdx        # 45e3f2 <_fini+0xeee>
  41b1cf:	lea    0x4a8a0(%rip),%rsi        # 465a76 <_fini+0x8572>
  41b1d6:	callq  413fd0 <NCONF_get_string@plt>
  41b1db:	test   %rax,%rax
  41b1de:	mov    %rax,%rbx
  41b1e1:	je     41d98b <X509_get0_pubkey_bitstr@plt+0x6fbb>
  41b1e7:	mov    %rax,%rdi
  41b1ea:	callq  416870 <ASN1_STRING_set_default_mask_asc@plt>
  41b1ef:	test   %eax,%eax
  41b1f1:	je     41bc9a <X509_get0_pubkey_bitstr@plt+0x52ca>
  41b1f7:	cmpq   $0x1000,0x70(%rsp)
  41b200:	je     41b24a <X509_get0_pubkey_bitstr@plt+0x487a>
  41b202:	mov    0x26001f(%rip),%rdi        # 67b228 <_edata+0x520>
  41b209:	lea    0x43038(%rip),%rdx        # 45e248 <_fini+0xd44>
  41b210:	lea    0x4a85f(%rip),%rsi        # 465a76 <_fini+0x8572>
  41b217:	callq  413fd0 <NCONF_get_string@plt>
  41b21c:	test   %rax,%rax
  41b21f:	je     41d94c <X509_get0_pubkey_bitstr@plt+0x6f7c>
  41b225:	cmpb   $0x79,(%rax)
  41b228:	jne    41b24a <X509_get0_pubkey_bitstr@plt+0x487a>
  41b22a:	cmpb   $0x65,0x1(%rax)
  41b22e:	jne    41b24a <X509_get0_pubkey_bitstr@plt+0x487a>
  41b230:	cmpb   $0x73,0x2(%rax)
  41b234:	jne    41b24a <X509_get0_pubkey_bitstr@plt+0x487a>
  41b236:	cmpb   $0x0,0x3(%rax)
  41b23a:	mov    $0x1000,%eax
  41b23f:	cmovne 0x70(%rsp),%rax
  41b245:	mov    %rax,0x70(%rsp)
  41b24a:	cmpq   $0x0,0x88(%rsp)
  41b253:	je     41bd3f <X509_get0_pubkey_bitstr@plt+0x536f>
  41b259:	lea    0x180(%rsp),%rbx
  41b261:	xor    %r8d,%r8d
  41b264:	xor    %ecx,%ecx
  41b266:	xor    %edx,%edx
  41b268:	mov    $0x1,%r9d
  41b26e:	xor    %esi,%esi
  41b270:	mov    %rbx,%rdi
  41b273:	callq  413910 <X509V3_set_ctx@plt>
  41b278:	mov    0x25ffa9(%rip),%rsi        # 67b228 <_edata+0x520>
  41b27f:	mov    %rbx,%rdi
  41b282:	callq  4155a0 <X509V3_set_nconf@plt>
  41b287:	mov    0x88(%rsp),%rdx
  41b28f:	mov    0x25ff92(%rip),%rdi        # 67b228 <_edata+0x520>
  41b296:	xor    %ecx,%ecx
  41b298:	mov    %rbx,%rsi
  41b29b:	callq  4168d0 <X509V3_EXT_add_nconf@plt>
  41b2a0:	test   %eax,%eax
  41b2a2:	je     41bcdd <X509_get0_pubkey_bitstr@plt+0x530d>
  41b2a8:	callq  4152b0 <BIO_s_file@plt>
  41b2ad:	mov    %rax,%rdi
  41b2b0:	callq  414a20 <BIO_new@plt>
  41b2b5:	mov    %rax,%rbx
  41b2b8:	mov    %rax,0x20(%rsp)
  41b2bd:	callq  4152b0 <BIO_s_file@plt>
  41b2c2:	mov    %rax,%rdi
  41b2c5:	callq  414a20 <BIO_new@plt>
  41b2ca:	test   %rax,%rax
  41b2cd:	mov    %rax,%r12
  41b2d0:	sete   %dl
  41b2d3:	test   %rbx,%rbx
  41b2d6:	sete   %al
  41b2d9:	or     %al,%dl
  41b2db:	mov    %dl,0xd8(%rsp)
  41b2e2:	je     41b8f2 <X509_get0_pubkey_bitstr@plt+0x4f22>
  41b2e8:	xor    %ebx,%ebx
  41b2ea:	xor    %r14d,%r14d
  41b2ed:	xor    %ebp,%ebp
  41b2ef:	jmpq   41b6ab <X509_get0_pubkey_bitstr@plt+0x4cdb>
  41b2f4:	nopl   0x0(%rax)
  41b2f8:	lea    0x42863(%rip),%rdi        # 45db62 <_fini+0x65e>
  41b2ff:	mov    %rax,%rsi
  41b302:	mov    %rbx,%rcx
  41b305:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41b307:	jne    41b328 <X509_get0_pubkey_bitstr@plt+0x4958>
  41b309:	sub    $0x1,%r14d
  41b30d:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41b313:	mov    0x8(%rdx),%rax
  41b317:	lea    0x8(%rdx),%r12
  41b31b:	mov    %rax,0x10(%rsp)
  41b320:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41b325:	nopl   (%rax)
  41b328:	lea    0x42e6a(%rip),%rdi        # 45e199 <_fini+0xc95>
  41b32f:	mov    $0xf,%ecx
  41b334:	mov    %rax,%rsi
  41b337:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41b339:	jne    41b388 <X509_get0_pubkey_bitstr@plt+0x49b8>
  41b33b:	sub    $0x1,%r14d
  41b33f:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41b345:	mov    0x8(%rdx),%rdi
  41b349:	lea    0x8(%rdx),%r12
  41b34d:	mov    %rdx,0x20(%rsp)
  41b352:	callq  4141e0 <ENGINE_by_id@plt>
  41b357:	test   %rax,%rax
  41b35a:	mov    %rax,0x18(%rsp)
  41b35f:	mov    0x20(%rsp),%rdx
  41b364:	jne    41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41b36a:	mov    0x8(%rdx),%rdx
  41b36e:	mov    (%r15),%rdi
  41b371:	lea    0x42e30(%rip),%rsi        # 45e1a8 <_fini+0xca4>
  41b378:	callq  413c40 <BIO_printf@plt>
  41b37d:	jmpq   41b698 <X509_get0_pubkey_bitstr@plt+0x4cc8>
  41b382:	nopw   0x0(%rax,%rax,1)
  41b388:	lea    0x42e36(%rip),%rdi        # 45e1c5 <_fini+0xcc1>
  41b38f:	mov    $0x5,%ecx
  41b394:	mov    %rax,%rsi
  41b397:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41b399:	jne    41b7c0 <X509_get0_pubkey_bitstr@plt+0x4df0>
  41b39f:	sub    $0x1,%r14d
  41b3a3:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41b3a5:	mov    0x8(%rdx),%rax
  41b3a9:	lea    0x8(%rdx),%r12
  41b3ad:	mov    %rax,0x58(%rsp)
  41b3b2:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41b3b7:	mov    (%rdx),%rdx
  41b3ba:	mov    (%r15),%rdi
  41b3bd:	lea    0x42968(%rip),%rsi        # 45dd2c <_fini+0x828>
  41b3c4:	callq  413c40 <BIO_printf@plt>
  41b3c9:	nopl   0x0(%rax)
  41b3d0:	mov    0x50(%rsp),%rdx
  41b3d5:	mov    (%r15),%rdi
  41b3d8:	lea    0x43359(%rip),%rsi        # 45e738 <_fini+0x1234>
  41b3df:	xor    %eax,%eax
  41b3e1:	callq  413c40 <BIO_printf@plt>
  41b3e6:	mov    (%r15),%rdi
  41b3e9:	lea    0x42ed0(%rip),%rsi        # 45e2c0 <_fini+0xdbc>
  41b3f0:	xor    %eax,%eax
  41b3f2:	callq  413c40 <BIO_printf@plt>
  41b3f7:	mov    (%r15),%rdi
  41b3fa:	lea    0x43357(%rip),%rsi        # 45e758 <_fini+0x1254>
  41b401:	xor    %eax,%eax
  41b403:	callq  413c40 <BIO_printf@plt>
  41b408:	mov    (%r15),%rdi
  41b40b:	lea    0x43376(%rip),%rsi        # 45e788 <_fini+0x1284>
  41b412:	xor    %eax,%eax
  41b414:	callq  413c40 <BIO_printf@plt>
  41b419:	mov    (%r15),%rdi
  41b41c:	lea    0x42eb1(%rip),%rsi        # 45e2d4 <_fini+0xdd0>
  41b423:	xor    %eax,%eax
  41b425:	callq  413c40 <BIO_printf@plt>
  41b42a:	mov    (%r15),%rdi
  41b42d:	lea    0x42ebc(%rip),%rsi        # 45e2f0 <_fini+0xdec>
  41b434:	xor    %eax,%eax
  41b436:	callq  413c40 <BIO_printf@plt>
  41b43b:	mov    (%r15),%rdi
  41b43e:	lea    0x43373(%rip),%rsi        # 45e7b8 <_fini+0x12b4>
  41b445:	xor    %eax,%eax
  41b447:	callq  413c40 <BIO_printf@plt>
  41b44c:	mov    (%r15),%rdi
  41b44f:	lea    0x4338a(%rip),%rsi        # 45e7e0 <_fini+0x12dc>
  41b456:	xor    %eax,%eax
  41b458:	callq  413c40 <BIO_printf@plt>
  41b45d:	mov    (%r15),%rdi
  41b460:	lea    0x433a1(%rip),%rsi        # 45e808 <_fini+0x1304>
  41b467:	xor    %eax,%eax
  41b469:	callq  413c40 <BIO_printf@plt>
  41b46e:	mov    (%r15),%rdi
  41b471:	lea    0x433b8(%rip),%rsi        # 45e830 <_fini+0x132c>
  41b478:	xor    %eax,%eax
  41b47a:	callq  413c40 <BIO_printf@plt>
  41b47f:	mov    (%r15),%rdi
  41b482:	lea    0x42e84(%rip),%rsi        # 45e30d <_fini+0xe09>
  41b489:	xor    %eax,%eax
  41b48b:	callq  413c40 <BIO_printf@plt>
  41b490:	mov    (%r15),%rdi
  41b493:	lea    0x433c6(%rip),%rsi        # 45e860 <_fini+0x135c>
  41b49a:	xor    %eax,%eax
  41b49c:	callq  413c40 <BIO_printf@plt>
  41b4a1:	mov    (%r15),%rdi
  41b4a4:	lea    0x433e5(%rip),%rsi        # 45e890 <_fini+0x138c>
  41b4ab:	xor    %eax,%eax
  41b4ad:	callq  413c40 <BIO_printf@plt>
  41b4b2:	mov    (%r15),%rdi
  41b4b5:	lea    0x43414(%rip),%rsi        # 45e8d0 <_fini+0x13cc>
  41b4bc:	xor    %eax,%eax
  41b4be:	callq  413c40 <BIO_printf@plt>
  41b4c3:	mov    (%r15),%rdi
  41b4c6:	lea    0x43433(%rip),%rsi        # 45e900 <_fini+0x13fc>
  41b4cd:	xor    %eax,%eax
  41b4cf:	callq  413c40 <BIO_printf@plt>
  41b4d4:	mov    (%r15),%rdi
  41b4d7:	lea    0x43452(%rip),%rsi        # 45e930 <_fini+0x142c>
  41b4de:	xor    %eax,%eax
  41b4e0:	callq  413c40 <BIO_printf@plt>
  41b4e5:	mov    (%r15),%rdi
  41b4e8:	lea    0x43479(%rip),%rsi        # 45e968 <_fini+0x1464>
  41b4ef:	xor    %eax,%eax
  41b4f1:	callq  413c40 <BIO_printf@plt>
  41b4f6:	mov    (%r15),%rdi
  41b4f9:	lea    0x43490(%rip),%rsi        # 45e990 <_fini+0x148c>
  41b500:	xor    %eax,%eax
  41b502:	callq  413c40 <BIO_printf@plt>
  41b507:	mov    (%r15),%rdi
  41b50a:	lea    0x42e19(%rip),%rsi        # 45e32a <_fini+0xe26>
  41b511:	mov    $0x3a,%ecx
  41b516:	mov    $0x3a,%edx
  41b51b:	xor    %eax,%eax
  41b51d:	callq  413c40 <BIO_printf@plt>
  41b522:	mov    (%r15),%rdi
  41b525:	lea    0x43494(%rip),%rsi        # 45e9c0 <_fini+0x14bc>
  41b52c:	xor    %eax,%eax
  41b52e:	callq  413c40 <BIO_printf@plt>
  41b533:	mov    (%r15),%rdi
  41b536:	lea    0x434cb(%rip),%rsi        # 45ea08 <_fini+0x1504>
  41b53d:	xor    %eax,%eax
  41b53f:	callq  413c40 <BIO_printf@plt>
  41b544:	mov    (%r15),%rdi
  41b547:	lea    0x434ea(%rip),%rsi        # 45ea38 <_fini+0x1534>
  41b54e:	xor    %eax,%eax
  41b550:	callq  413c40 <BIO_printf@plt>
  41b555:	mov    (%r15),%rdi
  41b558:	lea    0x43519(%rip),%rsi        # 45ea78 <_fini+0x1574>
  41b55f:	xor    %eax,%eax
  41b561:	callq  413c40 <BIO_printf@plt>
  41b566:	mov    (%r15),%rdi
  41b569:	lea    0x43558(%rip),%rsi        # 45eac8 <_fini+0x15c4>
  41b570:	xor    %eax,%eax
  41b572:	callq  413c40 <BIO_printf@plt>
  41b577:	mov    (%r15),%rdi
  41b57a:	lea    0x43597(%rip),%rsi        # 45eb18 <_fini+0x1614>
  41b581:	xor    %eax,%eax
  41b583:	callq  413c40 <BIO_printf@plt>
  41b588:	mov    (%r15),%rdi
  41b58b:	lea    0x435ce(%rip),%rsi        # 45eb60 <_fini+0x165c>
  41b592:	xor    %eax,%eax
  41b594:	callq  413c40 <BIO_printf@plt>
  41b599:	mov    (%r15),%rdi
  41b59c:	lea    0x435e5(%rip),%rsi        # 45eb88 <_fini+0x1684>
  41b5a3:	xor    %eax,%eax
  41b5a5:	callq  413c40 <BIO_printf@plt>
  41b5aa:	mov    (%r15),%rdi
  41b5ad:	lea    0x43604(%rip),%rsi        # 45ebb8 <_fini+0x16b4>
  41b5b4:	xor    %eax,%eax
  41b5b6:	callq  413c40 <BIO_printf@plt>
  41b5bb:	mov    (%r15),%rdi
  41b5be:	lea    0x42d7d(%rip),%rsi        # 45e342 <_fini+0xe3e>
  41b5c5:	xor    %eax,%eax
  41b5c7:	callq  413c40 <BIO_printf@plt>
  41b5cc:	mov    (%r15),%rdi
  41b5cf:	lea    0x4361a(%rip),%rsi        # 45ebf0 <_fini+0x16ec>
  41b5d6:	xor    %eax,%eax
  41b5d8:	callq  413c40 <BIO_printf@plt>
  41b5dd:	mov    (%r15),%rdi
  41b5e0:	lea    0x43649(%rip),%rsi        # 45ec30 <_fini+0x172c>
  41b5e7:	xor    %eax,%eax
  41b5e9:	callq  413c40 <BIO_printf@plt>
  41b5ee:	mov    (%r15),%rdi
  41b5f1:	lea    0x43680(%rip),%rsi        # 45ec78 <_fini+0x1774>
  41b5f8:	xor    %eax,%eax
  41b5fa:	callq  413c40 <BIO_printf@plt>
  41b5ff:	mov    (%r15),%rdi
  41b602:	lea    0x436bf(%rip),%rsi        # 45ecc8 <_fini+0x17c4>
  41b609:	xor    %eax,%eax
  41b60b:	callq  413c40 <BIO_printf@plt>
  41b610:	mov    (%r15),%rdi
  41b613:	lea    0x436fe(%rip),%rsi        # 45ed18 <_fini+0x1814>
  41b61a:	xor    %eax,%eax
  41b61c:	callq  413c40 <BIO_printf@plt>
  41b621:	mov    (%r15),%rdi
  41b624:	lea    0x43725(%rip),%rsi        # 45ed50 <_fini+0x184c>
  41b62b:	xor    %eax,%eax
  41b62d:	callq  413c40 <BIO_printf@plt>
  41b632:	mov    (%r15),%rdi
  41b635:	lea    0x43764(%rip),%rsi        # 45eda0 <_fini+0x189c>
  41b63c:	xor    %eax,%eax
  41b63e:	callq  413c40 <BIO_printf@plt>
  41b643:	mov    (%r15),%rdi
  41b646:	lea    0x4378b(%rip),%rsi        # 45edd8 <_fini+0x18d4>
  41b64d:	xor    %eax,%eax
  41b64f:	callq  413c40 <BIO_printf@plt>
  41b654:	mov    (%r15),%rdi
  41b657:	lea    0x437d2(%rip),%rsi        # 45ee30 <_fini+0x192c>
  41b65e:	xor    %eax,%eax
  41b660:	callq  413c40 <BIO_printf@plt>
  41b665:	mov    (%r15),%rdi
  41b668:	lea    0x43819(%rip),%rsi        # 45ee88 <_fini+0x1984>
  41b66f:	xor    %eax,%eax
  41b671:	callq  413c40 <BIO_printf@plt>
  41b676:	mov    (%r15),%rdi
  41b679:	lea    0x43848(%rip),%rsi        # 45eec8 <_fini+0x19c4>
  41b680:	xor    %eax,%eax
  41b682:	callq  413c40 <BIO_printf@plt>
  41b687:	mov    (%r15),%rdi
  41b68a:	lea    0x4386f(%rip),%rsi        # 45ef00 <_fini+0x19fc>
  41b691:	xor    %eax,%eax
  41b693:	callq  413c40 <BIO_printf@plt>
  41b698:	xor    %r12d,%r12d
  41b69b:	movq   $0x0,0x20(%rsp)
  41b6a4:	xor    %ebx,%ebx
  41b6a6:	xor    %r14d,%r14d
  41b6a9:	xor    %ebp,%ebp
  41b6ab:	mov    (%r15),%rdi
  41b6ae:	mov    $0x1,%r13d
  41b6b4:	callq  413f40 <ERR_print_errors@plt>
  41b6b9:	mov    0x25fb68(%rip),%rdi        # 67b228 <_edata+0x520>
  41b6c0:	test   %rdi,%rdi
  41b6c3:	je     41b6d6 <X509_get0_pubkey_bitstr@plt+0x4d06>
  41b6c5:	lea    0x25f67c(%rip),%rax        # 67ad48 <_edata+0x40>
  41b6cc:	cmp    (%rax),%rdi
  41b6cf:	je     41b6d6 <X509_get0_pubkey_bitstr@plt+0x4d06>
  41b6d1:	callq  4137f0 <NCONF_free@plt>
  41b6d6:	mov    0x20(%rsp),%rdi
  41b6db:	callq  413960 <BIO_free@plt>
  41b6e0:	mov    %r12,%rdi
  41b6e3:	callq  416570 <BIO_free_all@plt>
  41b6e8:	mov    0x158(%rsp),%rdi
  41b6f0:	callq  412b00 <EVP_PKEY_free@plt>
  41b6f5:	test   %rbx,%rbx
  41b6f8:	je     41b702 <X509_get0_pubkey_bitstr@plt+0x4d32>
  41b6fa:	mov    %rbx,%rdi
  41b6fd:	callq  4143b0 <EVP_PKEY_CTX_free@plt>
  41b702:	mov    0x28(%rsp),%rdi
  41b707:	test   %rdi,%rdi
  41b70a:	je     41b711 <X509_get0_pubkey_bitstr@plt+0x4d41>
  41b70c:	callq  4143f0 <sk_free@plt>
  41b711:	mov    0x40(%rsp),%rdi
  41b716:	test   %rdi,%rdi
  41b719:	je     41b720 <X509_get0_pubkey_bitstr@plt+0x4d50>
  41b71b:	callq  4143f0 <sk_free@plt>
  41b720:	mov    0x18(%rsp),%rdi
  41b725:	test   %rdi,%rdi
  41b728:	je     41b72f <X509_get0_pubkey_bitstr@plt+0x4d5f>
  41b72a:	callq  413360 <ENGINE_free@plt>
  41b72f:	mov    0x150(%rsp),%rdi
  41b737:	test   %rdi,%rdi
  41b73a:	je     41b741 <X509_get0_pubkey_bitstr@plt+0x4d71>
  41b73c:	callq  415020 <CRYPTO_free@plt>
  41b741:	mov    %r14,%rdi
  41b744:	callq  4154a0 <X509_REQ_free@plt>
  41b749:	mov    %rbp,%rdi
  41b74c:	callq  4153a0 <X509_free@plt>
  41b751:	mov    0x48(%rsp),%rdi
  41b756:	callq  412a90 <ASN1_INTEGER_free@plt>
  41b75b:	cmpq   $0x0,0x30(%rsp)
  41b761:	je     41b775 <X509_get0_pubkey_bitstr@plt+0x4da5>
  41b763:	mov    0x168(%rsp),%rdi
  41b76b:	test   %rdi,%rdi
  41b76e:	je     41b775 <X509_get0_pubkey_bitstr@plt+0x4da5>
  41b770:	callq  415020 <CRYPTO_free@plt>
  41b775:	cmpq   $0x0,0x38(%rsp)
  41b77b:	je     41b78f <X509_get0_pubkey_bitstr@plt+0x4dbf>
  41b77d:	mov    0x170(%rsp),%rdi
  41b785:	test   %rdi,%rdi
  41b788:	je     41b78f <X509_get0_pubkey_bitstr@plt+0x4dbf>
  41b78a:	callq  415020 <CRYPTO_free@plt>
  41b78f:	callq  414120 <OBJ_cleanup@plt>
  41b794:	mov    0x638(%rsp),%rbx
  41b79c:	xor    %fs:0x28,%rbx
  41b7a5:	mov    %r13d,%eax
  41b7a8:	jne    41d986 <X509_get0_pubkey_bitstr@plt+0x6fb6>
  41b7ae:	add    $0x648,%rsp
  41b7b5:	pop    %rbx
  41b7b6:	pop    %rbp
  41b7b7:	pop    %r12
  41b7b9:	pop    %r13
  41b7bb:	pop    %r14
  41b7bd:	pop    %r15
  41b7bf:	retq   
  41b7c0:	lea    0x42a03(%rip),%rdi        # 45e1ca <_fini+0xcc6>
  41b7c7:	mov    %rax,%rsi
  41b7ca:	mov    %rbx,%rcx
  41b7cd:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41b7cf:	jne    41b7e8 <X509_get0_pubkey_bitstr@plt+0x4e18>
  41b7d1:	mov    %rdx,%r12
  41b7d4:	movl   $0x1,0x80(%rsp)
  41b7df:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41b7e4:	nopl   0x0(%rax)
  41b7e8:	lea    0x429e3(%rip),%rdi        # 45e1d2 <_fini+0xcce>
  41b7ef:	mov    $0x5,%ecx
  41b7f4:	mov    %rax,%rsi
  41b7f7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41b7f9:	je     41b828 <X509_get0_pubkey_bitstr@plt+0x4e58>
  41b7fb:	lea    0x429d5(%rip),%rdi        # 45e1d7 <_fini+0xcd3>
  41b802:	mov    %rax,%rsi
  41b805:	mov    %rbx,%rcx
  41b808:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41b80a:	jne    41b838 <X509_get0_pubkey_bitstr@plt+0x4e68>
  41b80c:	sub    $0x1,%r14d
  41b810:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41b816:	mov    0x8(%rdx),%rax
  41b81a:	lea    0x8(%rdx),%r12
  41b81e:	mov    %rax,0x68(%rsp)
  41b823:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41b828:	mov    %rdx,%r12
  41b82b:	movl   $0x1,0x60(%rsp)
  41b833:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41b838:	lea    0x429a0(%rip),%rdi        # 45e1df <_fini+0xcdb>
  41b83f:	mov    %rax,%rsi
  41b842:	mov    $0x9,%ecx
  41b847:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41b849:	je     41b8cf <X509_get0_pubkey_bitstr@plt+0x4eff>
  41b84f:	cmpb   $0x2d,(%rax)
  41b852:	jne    41ba0c <X509_get0_pubkey_bitstr@plt+0x503c>
  41b858:	cmpb   $0x69,0x1(%rax)
  41b85c:	jne    41ba0c <X509_get0_pubkey_bitstr@plt+0x503c>
  41b862:	cmpb   $0x6e,0x2(%rax)
  41b866:	jne    41ba0c <X509_get0_pubkey_bitstr@plt+0x503c>
  41b86c:	cmpb   $0x0,0x3(%rax)
  41b870:	jne    41ba0c <X509_get0_pubkey_bitstr@plt+0x503c>
  41b876:	sub    $0x1,%r14d
  41b87a:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41b880:	mov    0x8(%rdx),%rax
  41b884:	lea    0x8(%rdx),%r12
  41b888:	mov    %rax,0xc8(%rsp)
  41b890:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41b895:	callq  4152b0 <BIO_s_file@plt>
  41b89a:	mov    %rax,%rdi
  41b89d:	callq  414a20 <BIO_new@plt>
  41b8a2:	test   %rax,%rax
  41b8a5:	mov    %rax,(%r15)
  41b8a8:	je     41adf0 <X509_get0_pubkey_bitstr@plt+0x4420>
  41b8ae:	mov    0x25a6cb(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  41b8b5:	mov    $0x6a,%esi
  41b8ba:	mov    %rax,%rdi
  41b8bd:	mov    (%rdx),%rcx
  41b8c0:	mov    $0x10,%edx
  41b8c5:	callq  412af0 <BIO_ctrl@plt>
  41b8ca:	jmpq   41adf0 <X509_get0_pubkey_bitstr@plt+0x4420>
  41b8cf:	sub    $0x1,%r14d
  41b8d3:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41b8d9:	mov    0x8(%rdx),%rdi
  41b8dd:	lea    0x8(%rdx),%r12
  41b8e1:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  41b8e6:	mov    %eax,0xf0(%rsp)
  41b8ed:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41b8f2:	mov    0x10(%rsp),%rsi
  41b8f7:	mov    (%r15),%rdi
  41b8fa:	xor    %edx,%edx
  41b8fc:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  41b901:	mov    0x58(%rsp),%rsi
  41b906:	mov    %rax,%r9
  41b909:	test   %rsi,%rsi
  41b90c:	je     41b977 <X509_get0_pubkey_bitstr@plt+0x4fa7>
  41b90e:	lea    0x4a3e1(%rip),%rax        # 465cf6 <_fini+0x87f2>
  41b915:	mov    0x168(%rsp),%r8
  41b91d:	mov    0xf0(%rsp),%edx
  41b924:	xor    %ecx,%ecx
  41b926:	mov    %rax,(%rsp)
  41b92a:	mov    (%r15),%rdi
  41b92d:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  41b932:	test   %rax,%rax
  41b935:	mov    %rax,0x158(%rsp)
  41b93d:	je     41b2e8 <X509_get0_pubkey_bitstr@plt+0x4918>
  41b943:	mov    0x25f8de(%rip),%rdi        # 67b228 <_edata+0x520>
  41b94a:	lea    0x42abc(%rip),%rdx        # 45e40d <_fini+0xf09>
  41b951:	lea    0x4a11e(%rip),%rsi        # 465a76 <_fini+0x8572>
  41b958:	callq  413fd0 <NCONF_get_string@plt>
  41b95d:	test   %rax,%rax
  41b960:	mov    %rax,%rbx
  41b963:	jne    41b96a <X509_get0_pubkey_bitstr@plt+0x4f9a>
  41b965:	callq  412890 <ERR_clear_error@plt>
  41b96a:	mov    (%r15),%rsi
  41b96d:	xor    %edx,%edx
  41b96f:	mov    %rbx,%rdi
  41b972:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  41b977:	mov    0x60(%rsp),%edx
  41b97b:	test   %edx,%edx
  41b97d:	jne    41d455 <X509_get0_pubkey_bitstr@plt+0x6a85>
  41b983:	mov    0x60(%rsp),%eax
  41b987:	test   %eax,%eax
  41b989:	jne    41d44d <X509_get0_pubkey_bitstr@plt+0x6a7d>
  41b98f:	cmpq   $0x0,0xc8(%rsp)
  41b998:	je     41d42d <X509_get0_pubkey_bitstr@plt+0x6a5d>
  41b99e:	mov    0xc8(%rsp),%rcx
  41b9a6:	mov    0x20(%rsp),%rdi
  41b9ab:	mov    $0x3,%edx
  41b9b0:	mov    $0x6c,%esi
  41b9b5:	callq  412af0 <BIO_ctrl@plt>
  41b9ba:	test   %rax,%rax
  41b9bd:	jle    41d414 <X509_get0_pubkey_bitstr@plt+0x6a44>
  41b9c3:	cmp    $0x1,%r13d
  41b9c7:	je     41d3b4 <X509_get0_pubkey_bitstr@plt+0x69e4>
  41b9cd:	cmp    $0x3,%r13d
  41b9d1:	je     41bdb0 <X509_get0_pubkey_bitstr@plt+0x53e0>
  41b9d7:	mov    (%r15),%rdi
  41b9da:	lea    0x436a7(%rip),%rsi        # 45f088 <_fini+0x1b84>
  41b9e1:	xor    %eax,%eax
  41b9e3:	xor    %ebx,%ebx
  41b9e5:	xor    %r14d,%r14d
  41b9e8:	xor    %ebp,%ebp
  41b9ea:	callq  413c40 <BIO_printf@plt>
  41b9ef:	jmpq   41b6ab <X509_get0_pubkey_bitstr@plt+0x4cdb>
  41b9f4:	nopl   0x0(%rax)
  41b9f8:	mov    (%r15),%rdi
  41b9fb:	lea    0x4295e(%rip),%rsi        # 45e360 <_fini+0xe5c>
  41ba02:	callq  413c40 <BIO_printf@plt>
  41ba07:	jmpq   41b698 <X509_get0_pubkey_bitstr@plt+0x4cc8>
  41ba0c:	lea    0x42433(%rip),%rdi        # 45de46 <_fini+0x942>
  41ba13:	mov    $0x5,%ecx
  41ba18:	mov    %rax,%rsi
  41ba1b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41ba1d:	jne    41bc3d <X509_get0_pubkey_bitstr@plt+0x526d>
  41ba23:	sub    $0x1,%r14d
  41ba27:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41ba2d:	mov    0x8(%rdx),%rax
  41ba31:	lea    0x8(%rdx),%r12
  41ba35:	mov    %rax,0x98(%rsp)
  41ba3d:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41ba42:	mov    0x68(%rsp),%rcx
  41ba47:	mov    0x180(%rsp),%rdx
  41ba4f:	lea    0x42940(%rip),%rsi        # 45e396 <_fini+0xe92>
  41ba56:	mov    (%r15),%rdi
  41ba59:	callq  413c40 <BIO_printf@plt>
  41ba5e:	jmpq   41b698 <X509_get0_pubkey_bitstr@plt+0x4cc8>
  41ba63:	mov    0x68(%rsp),%rdx
  41ba68:	mov    (%r15),%rdi
  41ba6b:	lea    0x42907(%rip),%rsi        # 45e379 <_fini+0xe75>
  41ba72:	xor    %eax,%eax
  41ba74:	callq  413c40 <BIO_printf@plt>
  41ba79:	jmpq   41b08e <X509_get0_pubkey_bitstr@plt+0x46be>
  41ba7e:	movl   $0x0,0xe8(%rsp)
  41ba89:	movq   $0x0,0xa8(%rsp)
  41ba95:	mov    $0x3,%r13d
  41ba9b:	movq   $0x0,0x38(%rsp)
  41baa4:	movq   $0x0,0x30(%rsp)
  41baad:	movq   $0x0,0x108(%rsp)
  41bab9:	movl   $0x0,0x94(%rsp)
  41bac4:	movq   $0x0,0x48(%rsp)
  41bacd:	movq   $0x0,0x88(%rsp)
  41bad9:	movq   $0x0,0x78(%rsp)
  41bae2:	movq   $0x0,0x10(%rsp)
  41baeb:	movq   $0x0,0xa0(%rsp)
  41baf7:	movq   $0x0,0x68(%rsp)
  41bb00:	movq   $0x0,0x58(%rsp)
  41bb09:	movq   $0x0,0x98(%rsp)
  41bb15:	movq   $0x0,0xc8(%rsp)
  41bb21:	movl   $0x0,0x80(%rsp)
  41bb2c:	movl   $0x0,0xc0(%rsp)
  41bb37:	movl   $0x0,0x104(%rsp)
  41bb42:	movl   $0x0,0xc4(%rsp)
  41bb4d:	movl   $0x0,0xe0(%rsp)
  41bb58:	movl   $0x3,0xf0(%rsp)
  41bb63:	movl   $0x0,0xd4(%rsp)
  41bb6e:	movl   $0x0,0xd0(%rsp)
  41bb79:	movl   $0x0,0x100(%rsp)
  41bb84:	movl   $0x3,0xc(%rsp)
  41bb8c:	movl   $0x0,0x90(%rsp)
  41bb97:	movl   $0x0,0x60(%rsp)
  41bb9f:	movq   $0x0,0x40(%rsp)
  41bba8:	movq   $0x0,0x28(%rsp)
  41bbb1:	movq   $0x0,0xf8(%rsp)
  41bbbd:	movl   $0x1e,0xec(%rsp)
  41bbc8:	movl   $0x0,0x84(%rsp)
  41bbd3:	movq   $0x0,0x18(%rsp)
  41bbdc:	movq   $0x0,0xd8(%rsp)
  41bbe8:	jmpq   41b038 <X509_get0_pubkey_bitstr@plt+0x4668>
  41bbed:	lea    0x25f154(%rip),%rax        # 67ad48 <_edata+0x40>
  41bbf4:	mov    (%rax),%rsi
  41bbf7:	test   %rsi,%rsi
  41bbfa:	mov    %rsi,0x25f627(%rip)        # 67b228 <_edata+0x520>
  41bc01:	je     41d95a <X509_get0_pubkey_bitstr@plt+0x6f8a>
  41bc07:	mov    0x90(%rsp),%ecx
  41bc0e:	test   %ecx,%ecx
  41bc10:	je     41b0c9 <X509_get0_pubkey_bitstr@plt+0x46f9>
  41bc16:	lea    0x25f133(%rip),%rax        # 67ad50 <_edata+0x48>
  41bc1d:	mov    (%r15),%rdi
  41bc20:	lea    0x42752(%rip),%rsi        # 45e379 <_fini+0xe75>
  41bc27:	mov    (%rax),%rdx
  41bc2a:	xor    %eax,%eax
  41bc2c:	callq  413c40 <BIO_printf@plt>
  41bc31:	jmpq   41b0b9 <X509_get0_pubkey_bitstr@plt+0x46e9>
  41bc36:	xor    %esi,%esi
  41bc38:	jmpq   41b12c <X509_get0_pubkey_bitstr@plt+0x475c>
  41bc3d:	lea    0x425a4(%rip),%rdi        # 45e1e8 <_fini+0xce4>
  41bc44:	mov    %rax,%rsi
  41bc47:	mov    %rbx,%rcx
  41bc4a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41bc4c:	jne    41bc6d <X509_get0_pubkey_bitstr@plt+0x529d>
  41bc4e:	sub    $0x1,%r14d
  41bc52:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41bc58:	mov    0x8(%rdx),%rax
  41bc5c:	lea    0x8(%rdx),%r12
  41bc60:	mov    %rax,0xa0(%rsp)
  41bc68:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41bc6d:	lea    0x4257c(%rip),%rdi        # 45e1f0 <_fini+0xcec>
  41bc74:	mov    %rax,%rsi
  41bc77:	mov    %rbx,%rcx
  41bc7a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41bc7c:	jne    41bcae <X509_get0_pubkey_bitstr@plt+0x52de>
  41bc7e:	sub    $0x1,%r14d
  41bc82:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41bc88:	mov    0x8(%rdx),%rax
  41bc8c:	lea    0x8(%rdx),%r12
  41bc90:	mov    %rax,0x30(%rsp)
  41bc95:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41bc9a:	lea    0x432e7(%rip),%rsi        # 45ef88 <_fini+0x1a84>
  41bca1:	mov    %rbx,%rdx
  41bca4:	mov    (%r15),%rdi
  41bca7:	xor    %eax,%eax
  41bca9:	jmpq   41b378 <X509_get0_pubkey_bitstr@plt+0x49a8>
  41bcae:	lea    0x42543(%rip),%rdi        # 45e1f8 <_fini+0xcf4>
  41bcb5:	mov    %rax,%rsi
  41bcb8:	mov    $0x9,%ecx
  41bcbd:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41bcbf:	jne    41bd0d <X509_get0_pubkey_bitstr@plt+0x533d>
  41bcc1:	sub    $0x1,%r14d
  41bcc5:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41bccb:	mov    0x8(%rdx),%rax
  41bccf:	lea    0x8(%rdx),%r12
  41bcd3:	mov    %rax,0x38(%rsp)
  41bcd8:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41bcdd:	mov    0x88(%rsp),%rdx
  41bce5:	lea    0x432c4(%rip),%rsi        # 45efb0 <_fini+0x1aac>
  41bcec:	jmp    41bca4 <X509_get0_pubkey_bitstr@plt+0x52d4>
  41bcee:	mov    0x78(%rsp),%rdx
  41bcf3:	lea    0x43266(%rip),%rsi        # 45ef60 <_fini+0x1a5c>
  41bcfa:	jmp    41bca4 <X509_get0_pubkey_bitstr@plt+0x52d4>
  41bcfc:	callq  412890 <ERR_clear_error@plt>
  41bd01:	mov    0x25f520(%rip),%rsi        # 67b228 <_edata+0x520>
  41bd08:	jmpq   41b12c <X509_get0_pubkey_bitstr@plt+0x475c>
  41bd0d:	lea    0x424ed(%rip),%rdi        # 45e201 <_fini+0xcfd>
  41bd14:	mov    $0x6,%ecx
  41bd19:	mov    %rax,%rsi
  41bd1c:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41bd1e:	jne    41bd74 <X509_get0_pubkey_bitstr@plt+0x53a4>
  41bd20:	sub    $0x1,%r14d
  41bd24:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41bd2a:	mov    0x8(%rdx),%rax
  41bd2e:	lea    0x8(%rdx),%r12
  41bd32:	mov    %rax,0x108(%rsp)
  41bd3a:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41bd3f:	mov    0x25f4e2(%rip),%rdi        # 67b228 <_edata+0x520>
  41bd46:	lea    0x426b1(%rip),%rdx        # 45e3fe <_fini+0xefa>
  41bd4d:	lea    0x49d22(%rip),%rsi        # 465a76 <_fini+0x8572>
  41bd54:	callq  413fd0 <NCONF_get_string@plt>
  41bd59:	test   %rax,%rax
  41bd5c:	mov    %rax,0x88(%rsp)
  41bd64:	jne    41b259 <X509_get0_pubkey_bitstr@plt+0x4889>
  41bd6a:	callq  412890 <ERR_clear_error@plt>
  41bd6f:	jmpq   41b2a8 <X509_get0_pubkey_bitstr@plt+0x48d8>
  41bd74:	lea    0x4248c(%rip),%rdi        # 45e207 <_fini+0xd03>
  41bd7b:	mov    %rax,%rsi
  41bd7e:	mov    %rbx,%rcx
  41bd81:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41bd83:	jne    41d3c8 <X509_get0_pubkey_bitstr@plt+0x69f8>
  41bd89:	sub    $0x1,%r14d
  41bd8d:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41bd93:	mov    0x8(%rdx),%rax
  41bd97:	lea    0x8(%rdx),%r12
  41bd9b:	movl   $0x1,0x60(%rsp)
  41bda3:	mov    %rax,0xf8(%rsp)
  41bdab:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41bdb0:	mov    0x20(%rsp),%rdi
  41bdb5:	xor    %ecx,%ecx
  41bdb7:	xor    %edx,%edx
  41bdb9:	xor    %esi,%esi
  41bdbb:	callq  415280 <PEM_read_bio_X509_REQ@plt>
  41bdc0:	mov    %rax,%r14
  41bdc3:	test   %r14,%r14
  41bdc6:	movl   $0xffffffff,0xc4(%rsp)
  41bdd1:	lea    0x42694(%rip),%rsi        # 45e46c <_fini+0xf68>
  41bdd8:	je     41c587 <X509_get0_pubkey_bitstr@plt+0x5bb7>
  41bdde:	mov    0x60(%rsp),%eax
  41bde2:	or     0x84(%rsp),%eax
  41bde9:	je     41c67b <X509_get0_pubkey_bitstr@plt+0x5cab>
  41bdef:	cmpq   $0x0,0x158(%rsp)
  41bdf8:	lea    0x432b9(%rip),%rsi        # 45f0b8 <_fini+0x1bb4>
  41bdff:	je     41c587 <X509_get0_pubkey_bitstr@plt+0x5bb7>
  41be05:	test   %r14,%r14
  41be08:	je     41c3f7 <X509_get0_pubkey_bitstr@plt+0x5a27>
  41be0e:	mov    0x84(%rsp),%edi
  41be15:	test   %edi,%edi
  41be17:	je     41be4e <X509_get0_pubkey_bitstr@plt+0x547e>
  41be19:	callq  413ec0 <X509_new@plt>
  41be1e:	test   %rax,%rax
  41be21:	mov    %rax,%rbp
  41be24:	je     41be47 <X509_get0_pubkey_bitstr@plt+0x5477>
  41be26:	cmpq   $0x0,0x78(%rsp)
  41be2c:	je     41d23c <X509_get0_pubkey_bitstr@plt+0x686c>
  41be32:	mov    $0x2,%esi
  41be37:	mov    %rax,%rdi
  41be3a:	callq  416170 <X509_set_version@plt>
  41be3f:	test   %eax,%eax
  41be41:	jne    41d23c <X509_get0_pubkey_bitstr@plt+0x686c>
  41be47:	xor    %ebx,%ebx
  41be49:	jmpq   41b6ab <X509_get0_pubkey_bitstr@plt+0x4cdb>
  41be4e:	lea    0x180(%rsp),%rbx
  41be56:	xor    %edx,%edx
  41be58:	xor    %r9d,%r9d
  41be5b:	xor    %r8d,%r8d
  41be5e:	xor    %esi,%esi
  41be60:	mov    %r14,%rcx
  41be63:	mov    %rbx,%rdi
  41be66:	callq  413910 <X509V3_set_ctx@plt>
  41be6b:	mov    0x25f3b6(%rip),%rsi        # 67b228 <_edata+0x520>
  41be72:	mov    %rbx,%rdi
  41be75:	callq  4155a0 <X509V3_set_nconf@plt>
  41be7a:	mov    0x88(%rsp),%rdx
  41be82:	test   %rdx,%rdx
  41be85:	je     41bea1 <X509_get0_pubkey_bitstr@plt+0x54d1>
  41be87:	mov    0x25f39a(%rip),%rdi        # 67b228 <_edata+0x520>
  41be8e:	mov    %r14,%rcx
  41be91:	mov    %rbx,%rsi
  41be94:	callq  414cd0 <X509V3_EXT_REQ_add_nconf@plt>
  41be99:	test   %eax,%eax
  41be9b:	je     41c3de <X509_get0_pubkey_bitstr@plt+0x5a0e>
  41bea1:	mov    0x40(%rsp),%r8
  41bea6:	mov    0xb8(%rsp),%rcx
  41beae:	mov    %r14,%rsi
  41beb1:	mov    0x158(%rsp),%rdx
  41beb9:	mov    (%r15),%rdi
  41bebc:	callq  41ac90 <X509_get0_pubkey_bitstr@plt+0x42c0>
  41bec1:	test   %eax,%eax
  41bec3:	je     41c3cd <X509_get0_pubkey_bitstr@plt+0x59fd>
  41bec9:	cmpq   $0x0,0xa8(%rsp)
  41bed2:	setne  %al
  41bed5:	xor    %ebp,%ebp
  41bed7:	mov    0x84(%rsp),%esi
  41bede:	test   %esi,%esi
  41bee0:	sete   %bl
  41bee3:	test   %al,%al
  41bee5:	je     41bf81 <X509_get0_pubkey_bitstr@plt+0x55b1>
  41beeb:	test   %bl,%bl
  41beed:	je     41bf81 <X509_get0_pubkey_bitstr@plt+0x55b1>
  41bef3:	mov    0x90(%rsp),%ecx
  41befa:	test   %ecx,%ecx
  41befc:	je     41bf2d <X509_get0_pubkey_bitstr@plt+0x555d>
  41befe:	mov    (%r15),%rdi
  41bf01:	lea    0x4261f(%rip),%rsi        # 45e527 <_fini+0x1023>
  41bf08:	xor    %eax,%eax
  41bf0a:	callq  413c40 <BIO_printf@plt>
  41bf0f:	mov    (%r14),%rax
  41bf12:	mov    0x140(%rsp),%rcx
  41bf1a:	lea    0x42623(%rip),%rsi        # 45e544 <_fini+0x1040>
  41bf21:	mov    (%r15),%rdi
  41bf24:	mov    0x20(%rax),%rdx
  41bf28:	callq  4467d0 <X509_get0_pubkey_bitstr@plt+0x2fe00>
  41bf2d:	mov    0xe8(%rsp),%ecx
  41bf34:	mov    0x70(%rsp),%rdx
  41bf39:	mov    %r14,%rdi
  41bf3c:	mov    0xa8(%rsp),%rsi
  41bf44:	callq  416e25 <X509_get0_pubkey_bitstr@plt+0x455>
  41bf49:	test   %eax,%eax
  41bf4b:	je     41c618 <X509_get0_pubkey_bitstr@plt+0x5c48>
  41bf51:	mov    0x90(%rsp),%edx
  41bf58:	mov    (%r14),%rax
  41bf5b:	test   %edx,%edx
  41bf5d:	movl   $0x1,0x10(%rax)
  41bf64:	je     41bf81 <X509_get0_pubkey_bitstr@plt+0x55b1>
  41bf66:	mov    0x20(%rax),%rdx
  41bf6a:	mov    0x140(%rsp),%rcx
  41bf72:	lea    0x425f6(%rip),%rsi        # 45e56f <_fini+0x106b>
  41bf79:	mov    (%r15),%rdi
  41bf7c:	callq  4467d0 <X509_get0_pubkey_bitstr@plt+0x2fe00>
  41bf81:	mov    0x100(%rsp),%eax
  41bf88:	test   %eax,%eax
  41bf8a:	je     41bfd2 <X509_get0_pubkey_bitstr@plt+0x5602>
  41bf8c:	test   %bl,%bl
  41bf8e:	je     41bfd2 <X509_get0_pubkey_bitstr@plt+0x5602>
  41bf90:	mov    0x158(%rsp),%rsi
  41bf98:	mov    %r14,%rdi
  41bf9b:	test   %rsi,%rsi
  41bf9e:	je     41c62e <X509_get0_pubkey_bitstr@plt+0x5c5e>
  41bfa4:	callq  4132b0 <X509_REQ_verify@plt>
  41bfa9:	mov    %eax,%ebx
  41bfab:	test   %ebx,%ebx
  41bfad:	js     41be47 <X509_get0_pubkey_bitstr@plt+0x5477>
  41bfb3:	jne    41c602 <X509_get0_pubkey_bitstr@plt+0x5c32>
  41bfb9:	mov    (%r15),%rdi
  41bfbc:	lea    0x4de26(%rip),%rsi        # 469de9 <_fini+0xc8e5>
  41bfc3:	xor    %eax,%eax
  41bfc5:	callq  413c40 <BIO_printf@plt>
  41bfca:	mov    (%r15),%rdi
  41bfcd:	callq  413f40 <ERR_print_errors@plt>
  41bfd2:	mov    0xd0(%rsp),%eax
  41bfd9:	test   %eax,%eax
  41bfdb:	je     41c003 <X509_get0_pubkey_bitstr@plt+0x5633>
  41bfdd:	mov    0xd4(%rsp),%eax
  41bfe4:	test   %eax,%eax
  41bfe6:	jne    41c003 <X509_get0_pubkey_bitstr@plt+0x5633>
  41bfe8:	mov    0x80(%rsp),%eax
  41bfef:	or     0xc0(%rsp),%eax
  41bff6:	or     0x94(%rsp),%eax
  41bffd:	je     41c1e5 <X509_get0_pubkey_bitstr@plt+0x5815>
  41c003:	cmpq   $0x0,0x98(%rsp)
  41c00c:	je     41c356 <X509_get0_pubkey_bitstr@plt+0x5986>
  41c012:	mov    0xa0(%rsp),%rsi
  41c01a:	test   %rsi,%rsi
  41c01d:	je     41c034 <X509_get0_pubkey_bitstr@plt+0x5664>
  41c01f:	mov    0x98(%rsp),%rdi
  41c027:	callq  4155c0 <strcmp@plt>
  41c02c:	test   %eax,%eax
  41c02e:	je     41c374 <X509_get0_pubkey_bitstr@plt+0x59a4>
  41c034:	mov    0x98(%rsp),%rcx
  41c03c:	mov    $0x5,%edx
  41c041:	mov    $0x6c,%esi
  41c046:	mov    %r12,%rdi
  41c049:	callq  412af0 <BIO_ctrl@plt>
  41c04e:	test   %eax,%eax
  41c050:	je     41c324 <X509_get0_pubkey_bitstr@plt+0x5954>
  41c056:	mov    0x80(%rsp),%eax
  41c05d:	test   %eax,%eax
  41c05f:	jne    41c2fc <X509_get0_pubkey_bitstr@plt+0x592c>
  41c065:	mov    0xd4(%rsp),%eax
  41c06c:	test   %eax,%eax
  41c06e:	je     41c2ae <X509_get0_pubkey_bitstr@plt+0x58de>
  41c074:	cmpb   $0x0,0xd8(%rsp)
  41c07c:	mov    0x148(%rsp),%rcx
  41c084:	mov    0x140(%rsp),%rdx
  41c08c:	je     41c259 <X509_get0_pubkey_bitstr@plt+0x5889>
  41c092:	mov    %rbp,%rsi
  41c095:	mov    %r12,%rdi
  41c098:	callq  412950 <X509_print_ex@plt>
  41c09d:	mov    0xc0(%rsp),%eax
  41c0a4:	test   %eax,%eax
  41c0a6:	je     41c235 <X509_get0_pubkey_bitstr@plt+0x5865>
  41c0ac:	mov    0x140(%rsp),%rbx
  41c0b4:	mov    %rbp,%rdi
  41c0b7:	callq  414400 <X509_get_subject_name@plt>
  41c0bc:	lea    0x42485(%rip),%rsi        # 45e548 <_fini+0x1044>
  41c0c3:	mov    %rax,%rdx
  41c0c6:	mov    %r12,%rdi
  41c0c9:	mov    %rbx,%rcx
  41c0cc:	callq  4467d0 <X509_get0_pubkey_bitstr@plt+0x2fe00>
  41c0d1:	mov    0x94(%rsp),%r13d
  41c0d9:	test   %r13d,%r13d
  41c0dc:	je     41c154 <X509_get0_pubkey_bitstr@plt+0x5784>
  41c0de:	mov    %rbp,%rdi
  41c0e1:	callq  4161b0 <X509_get_pubkey@plt>
  41c0e6:	mov    %rax,%rbx
  41c0e9:	test   %rbx,%rbx
  41c0ec:	je     41c3a8 <X509_get0_pubkey_bitstr@plt+0x59d8>
  41c0f2:	mov    0x259dbf(%rip),%r13        # 675eb8 <_fini+0x2189b4>
  41c0f9:	lea    0x424ab(%rip),%rdi        # 45e5ab <_fini+0x10a7>
  41c100:	mov    $0x8,%edx
  41c105:	mov    $0x1,%esi
  41c10a:	mov    0x0(%r13),%rcx
  41c10e:	callq  416880 <fwrite@plt>
  41c113:	mov    %rbx,%rdi
  41c116:	callq  4163b0 <EVP_PKEY_base_id@plt>
  41c11b:	cmp    $0x6,%eax
  41c11e:	je     41c393 <X509_get0_pubkey_bitstr@plt+0x59c3>
  41c124:	mov    0x0(%r13),%rcx
  41c128:	lea    0x42485(%rip),%rdi        # 45e5b4 <_fini+0x10b0>
  41c12f:	mov    $0x14,%edx
  41c134:	mov    $0x1,%esi
  41c139:	callq  416880 <fwrite@plt>
  41c13e:	mov    %rbx,%rdi
  41c141:	callq  412b00 <EVP_PKEY_free@plt>
  41c146:	mov    0x0(%r13),%rsi
  41c14a:	mov    $0xa,%edi
  41c14f:	callq  4150b0 <fputc@plt>
  41c154:	mov    0x84(%rsp),%eax
  41c15b:	or     0xd0(%rsp),%eax
  41c162:	jne    41c196 <X509_get0_pubkey_bitstr@plt+0x57c6>
  41c164:	cmpl   $0x1,0xc(%rsp)
  41c169:	je     41c249 <X509_get0_pubkey_bitstr@plt+0x5879>
  41c16f:	cmpl   $0x3,0xc(%rsp)
  41c174:	jne    41c1be <X509_get0_pubkey_bitstr@plt+0x57ee>
  41c176:	mov    0x104(%rsp),%r8d
  41c17e:	mov    %r14,%rsi
  41c181:	mov    %r12,%rdi
  41c184:	test   %r8d,%r8d
  41c187:	je     41c228 <X509_get0_pubkey_bitstr@plt+0x5858>
  41c18d:	callq  4135b0 <PEM_write_bio_X509_REQ_NEW@plt>
  41c192:	test   %eax,%eax
  41c194:	je     41c212 <X509_get0_pubkey_bitstr@plt+0x5842>
  41c196:	cmpb   $0x0,0xd8(%rsp)
  41c19e:	je     41c1e5 <X509_get0_pubkey_bitstr@plt+0x5815>
  41c1a0:	mov    0xd0(%rsp),%ecx
  41c1a7:	test   %ecx,%ecx
  41c1a9:	jne    41c1e5 <X509_get0_pubkey_bitstr@plt+0x5815>
  41c1ab:	test   %rbp,%rbp
  41c1ae:	je     41c1e5 <X509_get0_pubkey_bitstr@plt+0x5815>
  41c1b0:	cmpl   $0x1,0xc(%rsp)
  41c1b5:	je     41c205 <X509_get0_pubkey_bitstr@plt+0x5835>
  41c1b7:	cmpl   $0x3,0xc(%rsp)
  41c1bc:	je     41c1d6 <X509_get0_pubkey_bitstr@plt+0x5806>
  41c1be:	mov    (%r15),%rdi
  41c1c1:	lea    0x431a8(%rip),%rsi        # 45f370 <_fini+0x1e6c>
  41c1c8:	xor    %eax,%eax
  41c1ca:	xor    %ebx,%ebx
  41c1cc:	callq  413c40 <BIO_printf@plt>
  41c1d1:	jmpq   41b6ab <X509_get0_pubkey_bitstr@plt+0x4cdb>
  41c1d6:	mov    %rbp,%rsi
  41c1d9:	mov    %r12,%rdi
  41c1dc:	callq  413490 <PEM_write_bio_X509@plt>
  41c1e1:	test   %eax,%eax
  41c1e3:	je     41c1ef <X509_get0_pubkey_bitstr@plt+0x581f>
  41c1e5:	xor    %ebx,%ebx
  41c1e7:	xor    %r13d,%r13d
  41c1ea:	jmpq   41b6b9 <X509_get0_pubkey_bitstr@plt+0x4ce9>
  41c1ef:	mov    (%r15),%rdi
  41c1f2:	lea    0x431a7(%rip),%rsi        # 45f3a0 <_fini+0x1e9c>
  41c1f9:	xor    %ebx,%ebx
  41c1fb:	callq  413c40 <BIO_printf@plt>
  41c200:	jmpq   41b6ab <X509_get0_pubkey_bitstr@plt+0x4cdb>
  41c205:	mov    %rbp,%rsi
  41c208:	mov    %r12,%rdi
  41c20b:	callq  412850 <i2d_X509_bio@plt>
  41c210:	jmp    41c1e1 <X509_get0_pubkey_bitstr@plt+0x5811>
  41c212:	mov    (%r15),%rdi
  41c215:	lea    0x423ad(%rip),%rsi        # 45e5c9 <_fini+0x10c5>
  41c21c:	xor    %ebx,%ebx
  41c21e:	callq  413c40 <BIO_printf@plt>
  41c223:	jmpq   41b6ab <X509_get0_pubkey_bitstr@plt+0x4cdb>
  41c228:	callq  412ca0 <PEM_write_bio_X509_REQ@plt>
  41c22d:	nopl   (%rax)
  41c230:	jmpq   41c192 <X509_get0_pubkey_bitstr@plt+0x57c2>
  41c235:	mov    0x94(%rsp),%eax
  41c23c:	test   %eax,%eax
  41c23e:	jne    41c0de <X509_get0_pubkey_bitstr@plt+0x570e>
  41c244:	jmpq   41c154 <X509_get0_pubkey_bitstr@plt+0x5784>
  41c249:	mov    %r14,%rsi
  41c24c:	mov    %r12,%rdi
  41c24f:	callq  415cd0 <i2d_X509_REQ_bio@plt>
  41c254:	jmpq   41c192 <X509_get0_pubkey_bitstr@plt+0x57c2>
  41c259:	mov    %r14,%rsi
  41c25c:	mov    %r12,%rdi
  41c25f:	callq  413900 <X509_REQ_print_ex@plt>
  41c264:	mov    0xc0(%rsp),%ebx
  41c26b:	test   %ebx,%ebx
  41c26d:	je     41c2cb <X509_get0_pubkey_bitstr@plt+0x58fb>
  41c26f:	mov    (%r14),%rax
  41c272:	mov    0x140(%rsp),%rcx
  41c27a:	lea    0x422c7(%rip),%rsi        # 45e548 <_fini+0x1044>
  41c281:	mov    %r12,%rdi
  41c284:	mov    0x20(%rax),%rdx
  41c288:	callq  4467d0 <X509_get0_pubkey_bitstr@plt+0x2fe00>
  41c28d:	mov    0x94(%rsp),%r10d
  41c295:	test   %r10d,%r10d
  41c298:	je     41c154 <X509_get0_pubkey_bitstr@plt+0x5784>
  41c29e:	mov    %r14,%rdi
  41c2a1:	callq  413b00 <X509_REQ_get_pubkey@plt>
  41c2a6:	mov    %rax,%rbx
  41c2a9:	jmpq   41c0e9 <X509_get0_pubkey_bitstr@plt+0x5719>
  41c2ae:	mov    0xc0(%rsp),%r11d
  41c2b6:	test   %r11d,%r11d
  41c2b9:	je     41c2db <X509_get0_pubkey_bitstr@plt+0x590b>
  41c2bb:	cmpb   $0x0,0xd8(%rsp)
  41c2c3:	jne    41c0ac <X509_get0_pubkey_bitstr@plt+0x56dc>
  41c2c9:	jmp    41c26f <X509_get0_pubkey_bitstr@plt+0x589f>
  41c2cb:	mov    0x94(%rsp),%edx
  41c2d2:	test   %edx,%edx
  41c2d4:	jne    41c29e <X509_get0_pubkey_bitstr@plt+0x58ce>
  41c2d6:	jmpq   41c154 <X509_get0_pubkey_bitstr@plt+0x5784>
  41c2db:	mov    0x94(%rsp),%r9d
  41c2e3:	test   %r9d,%r9d
  41c2e6:	je     41c154 <X509_get0_pubkey_bitstr@plt+0x5784>
  41c2ec:	cmpb   $0x0,0xd8(%rsp)
  41c2f4:	jne    41c0de <X509_get0_pubkey_bitstr@plt+0x570e>
  41c2fa:	jmp    41c29e <X509_get0_pubkey_bitstr@plt+0x58ce>
  41c2fc:	mov    %r14,%rdi
  41c2ff:	callq  413b00 <X509_REQ_get_pubkey@plt>
  41c304:	test   %rax,%rax
  41c307:	mov    %rax,%rbx
  41c30a:	je     41c338 <X509_get0_pubkey_bitstr@plt+0x5968>
  41c30c:	mov    %r12,%rdi
  41c30f:	mov    %rax,%rsi
  41c312:	callq  414610 <PEM_write_bio_PUBKEY@plt>
  41c317:	mov    %rbx,%rdi
  41c31a:	callq  412b00 <EVP_PKEY_free@plt>
  41c31f:	jmpq   41c065 <X509_get0_pubkey_bitstr@plt+0x5695>
  41c324:	mov    0x98(%rsp),%rdi
  41c32c:	xor    %ebx,%ebx
  41c32e:	callq  4142c0 <perror@plt>
  41c333:	jmpq   41b6ab <X509_get0_pubkey_bitstr@plt+0x4cdb>
  41c338:	mov    (%r15),%rdi
  41c33b:	lea    0x4223a(%rip),%rsi        # 45e57c <_fini+0x1078>
  41c342:	xor    %eax,%eax
  41c344:	callq  413c40 <BIO_printf@plt>
  41c349:	mov    (%r15),%rdi
  41c34c:	callq  413f40 <ERR_print_errors@plt>
  41c351:	jmpq   41b6ab <X509_get0_pubkey_bitstr@plt+0x4cdb>
  41c356:	mov    0x259b5b(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  41c35d:	xor    %edx,%edx
  41c35f:	mov    $0x6a,%esi
  41c364:	mov    %r12,%rdi
  41c367:	mov    (%rax),%rcx
  41c36a:	callq  412af0 <BIO_ctrl@plt>
  41c36f:	jmpq   41c056 <X509_get0_pubkey_bitstr@plt+0x5686>
  41c374:	mov    0x98(%rsp),%rcx
  41c37c:	mov    $0x9,%edx
  41c381:	mov    $0x6c,%esi
  41c386:	mov    %r12,%rdi
  41c389:	callq  412af0 <BIO_ctrl@plt>
  41c38e:	jmpq   41c04e <X509_get0_pubkey_bitstr@plt+0x567e>
  41c393:	mov    0x20(%rbx),%rax
  41c397:	mov    %r12,%rdi
  41c39a:	mov    0x20(%rax),%rsi
  41c39e:	callq  413c20 <BN_print@plt>
  41c3a3:	jmpq   41c13e <X509_get0_pubkey_bitstr@plt+0x576e>
  41c3a8:	mov    0x259b09(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  41c3af:	lea    0x421e0(%rip),%rdi        # 45e596 <_fini+0x1092>
  41c3b6:	mov    $0x14,%edx
  41c3bb:	mov    $0x1,%esi
  41c3c0:	mov    (%rax),%rcx
  41c3c3:	callq  416880 <fwrite@plt>
  41c3c8:	jmpq   41b6ab <X509_get0_pubkey_bitstr@plt+0x4cdb>
  41c3cd:	mov    (%r15),%rdi
  41c3d0:	callq  413f40 <ERR_print_errors@plt>
  41c3d5:	xor    %ebx,%ebx
  41c3d7:	xor    %ebp,%ebp
  41c3d9:	jmpq   41b6ab <X509_get0_pubkey_bitstr@plt+0x4cdb>
  41c3de:	mov    0x88(%rsp),%rdx
  41c3e6:	mov    (%r15),%rdi
  41c3e9:	lea    0x42b70(%rip),%rsi        # 45ef60 <_fini+0x1a5c>
  41c3f0:	callq  413c40 <BIO_printf@plt>
  41c3f5:	jmp    41c3d5 <X509_get0_pubkey_bitstr@plt+0x5a05>
  41c3f7:	callq  4139d0 <X509_REQ_new@plt>
  41c3fc:	test   %rax,%rax
  41c3ff:	mov    %rax,%r14
  41c402:	je     41c3d5 <X509_get0_pubkey_bitstr@plt+0x5a05>
  41c404:	mov    0x84(%rsp),%eax
  41c40b:	mov    0x25ee16(%rip),%rdi        # 67b228 <_edata+0x520>
  41c412:	lea    0x42070(%rip),%rdx        # 45e489 <_fini+0xf85>
  41c419:	lea    0x49656(%rip),%rsi        # 465a76 <_fini+0x8572>
  41c420:	xor    $0x1,%eax
  41c423:	mov    %eax,0xc8(%rsp)
  41c42a:	mov    0x158(%rsp),%rax
  41c432:	mov    %rax,0x108(%rsp)
  41c43a:	callq  413fd0 <NCONF_get_string@plt>
  41c43f:	test   %rax,%rax
  41c442:	je     41c66f <X509_get0_pubkey_bitstr@plt+0x5c9f>
  41c448:	movzbl (%rax),%edx
  41c44b:	sub    $0x6e,%edx
  41c44e:	jne    41c45d <X509_get0_pubkey_bitstr@plt+0x5a8d>
  41c450:	movzbl 0x1(%rax),%edx
  41c454:	sub    $0x6f,%edx
  41c457:	jne    41c45d <X509_get0_pubkey_bitstr@plt+0x5a8d>
  41c459:	movzbl 0x2(%rax),%edx
  41c45d:	test   %edx,%edx
  41c45f:	sete   %bl
  41c462:	mov    0x25edbf(%rip),%rdi        # 67b228 <_edata+0x520>
  41c469:	lea    0x42020(%rip),%rdx        # 45e490 <_fini+0xf8c>
  41c470:	lea    0x495ff(%rip),%rsi        # 465a76 <_fini+0x8572>
  41c477:	callq  413fd0 <NCONF_get_string@plt>
  41c47c:	test   %rax,%rax
  41c47f:	mov    %rax,0x58(%rsp)
  41c484:	je     41c5c4 <X509_get0_pubkey_bitstr@plt+0x5bf4>
  41c48a:	mov    0x58(%rsp),%rsi
  41c48f:	mov    0x25ed92(%rip),%rdi        # 67b228 <_edata+0x520>
  41c496:	callq  414750 <NCONF_get_section@plt>
  41c49b:	test   %rax,%rax
  41c49e:	mov    %rax,0xb0(%rsp)
  41c4a6:	je     41c5a9 <X509_get0_pubkey_bitstr@plt+0x5bd9>
  41c4ac:	mov    0x25ed75(%rip),%rdi        # 67b228 <_edata+0x520>
  41c4b3:	lea    0x4ebc7(%rip),%rdx        # 46b081 <_fini+0xdb7d>
  41c4ba:	lea    0x495b5(%rip),%rsi        # 465a76 <_fini+0x8572>
  41c4c1:	callq  413fd0 <NCONF_get_string@plt>
  41c4c6:	test   %rax,%rax
  41c4c9:	mov    %rax,0x60(%rsp)
  41c4ce:	je     41c596 <X509_get0_pubkey_bitstr@plt+0x5bc6>
  41c4d4:	mov    0x60(%rsp),%rsi
  41c4d9:	mov    0x25ed48(%rip),%rdi        # 67b228 <_edata+0x520>
  41c4e0:	callq  414750 <NCONF_get_section@plt>
  41c4e5:	test   %rax,%rax
  41c4e8:	mov    %rax,0x10(%rsp)
  41c4ed:	je     41d221 <X509_get0_pubkey_bitstr@plt+0x6851>
  41c4f3:	xor    %esi,%esi
  41c4f5:	mov    %r14,%rdi
  41c4f8:	callq  414dc0 <X509_REQ_set_version@plt>
  41c4fd:	test   %eax,%eax
  41c4ff:	je     41c536 <X509_get0_pubkey_bitstr@plt+0x5b66>
  41c501:	test   %bl,%bl
  41c503:	jne    41cb34 <X509_get0_pubkey_bitstr@plt+0x6164>
  41c509:	mov    0xa8(%rsp),%rsi
  41c511:	test   %rsi,%rsi
  41c514:	je     41c6c0 <X509_get0_pubkey_bitstr@plt+0x5cf0>
  41c51a:	mov    0xe8(%rsp),%ecx
  41c521:	mov    0x70(%rsp),%rdx
  41c526:	mov    %r14,%rdi
  41c529:	callq  416e25 <X509_get0_pubkey_bitstr@plt+0x455>
  41c52e:	test   %eax,%eax
  41c530:	jne    41c5e6 <X509_get0_pubkey_bitstr@plt+0x5c16>
  41c536:	xor    %ebx,%ebx
  41c538:	mov    0xc4(%rsp),%r8d
  41c540:	test   %r8d,%r8d
  41c543:	jle    41c56c <X509_get0_pubkey_bitstr@plt+0x5b9c>
  41c545:	mov    (%r14),%rax
  41c548:	mov    0x30(%rax),%rdi
  41c54c:	callq  4156d0 <sk_num@plt>
  41c551:	test   %eax,%eax
  41c553:	jne    41c56c <X509_get0_pubkey_bitstr@plt+0x5b9c>
  41c555:	mov    (%r14),%rax
  41c558:	mov    0x30(%rax),%rdi
  41c55c:	callq  4143f0 <sk_free@plt>
  41c561:	mov    (%r14),%rax
  41c564:	movq   $0x0,0x30(%rax)
  41c56c:	test   %ebx,%ebx
  41c56e:	movq   $0x0,0xa8(%rsp)
  41c57a:	jne    41be0e <X509_get0_pubkey_bitstr@plt+0x543e>
  41c580:	lea    0x42d99(%rip),%rsi        # 45f320 <_fini+0x1e1c>
  41c587:	mov    (%r15),%rdi
  41c58a:	xor    %eax,%eax
  41c58c:	callq  413c40 <BIO_printf@plt>
  41c591:	jmpq   41c3d5 <X509_get0_pubkey_bitstr@plt+0x5a05>
  41c596:	callq  412890 <ERR_clear_error@plt>
  41c59b:	movq   $0x0,0x10(%rsp)
  41c5a4:	jmpq   41c4f3 <X509_get0_pubkey_bitstr@plt+0x5b23>
  41c5a9:	mov    0x58(%rsp),%rdx
  41c5ae:	mov    (%r15),%rdi
  41c5b1:	lea    0x41eeb(%rip),%rsi        # 45e4a3 <_fini+0xf9f>
  41c5b8:	xor    %ebx,%ebx
  41c5ba:	callq  413c40 <BIO_printf@plt>
  41c5bf:	jmpq   41c538 <X509_get0_pubkey_bitstr@plt+0x5b68>
  41c5c4:	mov    (%r15),%rdi
  41c5c7:	lea    0x41ec2(%rip),%rdx        # 45e490 <_fini+0xf8c>
  41c5ce:	lea    0x42b0b(%rip),%rsi        # 45f0e0 <_fini+0x1bdc>
  41c5d5:	xor    %ebx,%ebx
  41c5d7:	callq  413c40 <BIO_printf@plt>
  41c5dc:	jmpq   41c538 <X509_get0_pubkey_bitstr@plt+0x5b68>
  41c5e1:	mov    0x50(%rsp),%r12
  41c5e6:	mov    0x108(%rsp),%rsi
  41c5ee:	mov    %r14,%rdi
  41c5f1:	xor    %ebx,%ebx
  41c5f3:	callq  415c20 <X509_REQ_set_pubkey@plt>
  41c5f8:	test   %eax,%eax
  41c5fa:	setne  %bl
  41c5fd:	jmpq   41c538 <X509_get0_pubkey_bitstr@plt+0x5b68>
  41c602:	mov    (%r15),%rdi
  41c605:	lea    0x5335c(%rip),%rsi        # 46f968 <_fini+0x12464>
  41c60c:	xor    %eax,%eax
  41c60e:	callq  413c40 <BIO_printf@plt>
  41c613:	jmpq   41bfd2 <X509_get0_pubkey_bitstr@plt+0x5602>
  41c618:	mov    (%r15),%rdi
  41c61b:	lea    0x41f2f(%rip),%rsi        # 45e551 <_fini+0x104d>
  41c622:	xor    %ebx,%ebx
  41c624:	callq  413c40 <BIO_printf@plt>
  41c629:	jmpq   41b6ab <X509_get0_pubkey_bitstr@plt+0x4cdb>
  41c62e:	callq  413b00 <X509_REQ_get_pubkey@plt>
  41c633:	test   %rax,%rax
  41c636:	mov    %rax,0x158(%rsp)
  41c63e:	je     41be47 <X509_get0_pubkey_bitstr@plt+0x5477>
  41c644:	mov    %rax,%rsi
  41c647:	mov    %r14,%rdi
  41c64a:	callq  4132b0 <X509_REQ_verify@plt>
  41c64f:	mov    0x158(%rsp),%rdi
  41c657:	mov    %eax,%ebx
  41c659:	callq  412b00 <EVP_PKEY_free@plt>
  41c65e:	movq   $0x0,0x158(%rsp)
  41c66a:	jmpq   41bfab <X509_get0_pubkey_bitstr@plt+0x55db>
  41c66f:	callq  412890 <ERR_clear_error@plt>
  41c674:	xor    %ebx,%ebx
  41c676:	jmpq   41c462 <X509_get0_pubkey_bitstr@plt+0x5a92>
  41c67b:	xor    %ebp,%ebp
  41c67d:	cmpq   $0x0,0xa8(%rsp)
  41c686:	movzbl 0x84(%rsp),%edx
  41c68e:	setne  %al
  41c691:	mov    %dl,0xd8(%rsp)
  41c698:	test   %al,%al
  41c69a:	je     41bed7 <X509_get0_pubkey_bitstr@plt+0x5507>
  41c6a0:	test   %dl,%dl
  41c6a2:	je     41bed7 <X509_get0_pubkey_bitstr@plt+0x5507>
  41c6a8:	mov    (%r15),%rdi
  41c6ab:	lea    0x42c96(%rip),%rsi        # 45f348 <_fini+0x1e44>
  41c6b2:	xor    %eax,%eax
  41c6b4:	xor    %ebx,%ebx
  41c6b6:	callq  413c40 <BIO_printf@plt>
  41c6bb:	jmpq   41b6ab <X509_get0_pubkey_bitstr@plt+0x4cdb>
  41c6c0:	mov    (%r14),%rax
  41c6c3:	mov    0x20(%rax),%rax
  41c6c7:	mov    %rax,0xe0(%rsp)
  41c6cf:	mov    0x25eb4b(%rip),%eax        # 67b220 <_edata+0x518>
  41c6d5:	test   %eax,%eax
  41c6d7:	jne    41c750 <X509_get0_pubkey_bitstr@plt+0x5d80>
  41c6d9:	mov    (%r15),%rdi
  41c6dc:	lea    0x42a4d(%rip),%rsi        # 45f130 <_fini+0x1c2c>
  41c6e3:	xor    %eax,%eax
  41c6e5:	callq  413c40 <BIO_printf@plt>
  41c6ea:	mov    (%r15),%rdi
  41c6ed:	lea    0x42a8c(%rip),%rsi        # 45f180 <_fini+0x1c7c>
  41c6f4:	xor    %eax,%eax
  41c6f6:	callq  413c40 <BIO_printf@plt>
  41c6fb:	mov    (%r15),%rdi
  41c6fe:	lea    0x42a9b(%rip),%rsi        # 45f1a0 <_fini+0x1c9c>
  41c705:	xor    %eax,%eax
  41c707:	callq  413c40 <BIO_printf@plt>
  41c70c:	mov    (%r15),%rdi
  41c70f:	lea    0x42ada(%rip),%rsi        # 45f1f0 <_fini+0x1cec>
  41c716:	xor    %eax,%eax
  41c718:	callq  413c40 <BIO_printf@plt>
  41c71d:	mov    (%r15),%rdi
  41c720:	lea    0x42b09(%rip),%rsi        # 45f230 <_fini+0x1d2c>
  41c727:	xor    %eax,%eax
  41c729:	callq  413c40 <BIO_printf@plt>
  41c72e:	mov    (%r15),%rdi
  41c731:	lea    0x42b28(%rip),%rsi        # 45f260 <_fini+0x1d5c>
  41c738:	xor    %eax,%eax
  41c73a:	callq  413c40 <BIO_printf@plt>
  41c73f:	mov    (%r15),%rdi
  41c742:	lea    0x41d1c(%rip),%rsi        # 45e465 <_fini+0xf61>
  41c749:	xor    %eax,%eax
  41c74b:	callq  413c40 <BIO_printf@plt>
  41c750:	mov    0xb0(%rsp),%rdi
  41c758:	callq  4156d0 <sk_num@plt>
  41c75d:	test   %eax,%eax
  41c75f:	je     41ce56 <X509_get0_pubkey_bitstr@plt+0x6486>
  41c765:	lea    0x1c0(%rsp),%rax
  41c76d:	lea    0x230(%rsp),%rbp
  41c775:	movl   $0xffffffff,0xf0(%rsp)
  41c780:	mov    %r14,0x68(%rsp)
  41c785:	mov    %r12,0xa8(%rsp)
  41c78d:	mov    %rax,0x50(%rsp)
  41c792:	lea    0x178(%rsp),%rax
  41c79a:	mov    %rax,0x120(%rsp)
  41c7a2:	lea    0x180(%rsp),%rax
  41c7aa:	mov    %rax,0x128(%rsp)
  41c7b2:	mov    0xb0(%rsp),%rbx
  41c7ba:	addl   $0x1,0xf0(%rsp)
  41c7c2:	mov    %rbx,%rdi
  41c7c5:	callq  4156d0 <sk_num@plt>
  41c7ca:	mov    0xf0(%rsp),%esi
  41c7d1:	cmp    %eax,%esi
  41c7d3:	jge    41cd7a <X509_get0_pubkey_bitstr@plt+0x63aa>
  41c7d9:	mov    %rbx,%rdi
  41c7dc:	callq  412b30 <sk_value@plt>
  41c7e1:	mov    0x8(%rax),%rbx
  41c7e5:	lea    0x41cfd(%rip),%rsi        # 45e4e9 <_fini+0xfe5>
  41c7ec:	mov    %rax,%r13
  41c7ef:	mov    %rbx,%rdi
  41c7f2:	callq  4169e0 <X509_get0_pubkey_bitstr@plt+0x10>
  41c7f7:	test   %eax,%eax
  41c7f9:	je     41c7b2 <X509_get0_pubkey_bitstr@plt+0x5de2>
  41c7fb:	lea    0x41cee(%rip),%rsi        # 45e4f0 <_fini+0xfec>
  41c802:	mov    %rbx,%rdi
  41c805:	callq  4169e0 <X509_get0_pubkey_bitstr@plt+0x10>
  41c80a:	test   %eax,%eax
  41c80c:	je     41c7b2 <X509_get0_pubkey_bitstr@plt+0x5de2>
  41c80e:	lea    0x4e7e0(%rip),%rsi        # 46aff5 <_fini+0xdaf1>
  41c815:	mov    %rbx,%rdi
  41c818:	callq  4169e0 <X509_get0_pubkey_bitstr@plt+0x10>
  41c81d:	test   %eax,%eax
  41c81f:	je     41c7b2 <X509_get0_pubkey_bitstr@plt+0x5de2>
  41c821:	lea    0x4f080(%rip),%rsi        # 46b8a8 <_fini+0xe3a4>
  41c828:	mov    %rbx,%rdi
  41c82b:	callq  4169e0 <X509_get0_pubkey_bitstr@plt+0x10>
  41c830:	test   %eax,%eax
  41c832:	je     41c7b2 <X509_get0_pubkey_bitstr@plt+0x5de2>
  41c838:	movzbl (%rbx),%eax
  41c83b:	test   %al,%al
  41c83d:	je     41cd72 <X509_get0_pubkey_bitstr@plt+0x63a2>
  41c843:	mov    %eax,%edx
  41c845:	and    $0xfffffffd,%edx
  41c848:	cmp    $0x2c,%dl
  41c84b:	je     41cd6a <X509_get0_pubkey_bitstr@plt+0x639a>
  41c851:	cmp    $0x3a,%al
  41c853:	mov    %rbx,%rdx
  41c856:	je     41cd6a <X509_get0_pubkey_bitstr@plt+0x639a>
  41c85c:	add    $0x1,%rdx
  41c860:	movzbl (%rdx),%ecx
  41c863:	test   %cl,%cl
  41c865:	je     41c888 <X509_get0_pubkey_bitstr@plt+0x5eb8>
  41c867:	mov    %ecx,%esi
  41c869:	and    $0xfffffffd,%esi
  41c86c:	cmp    $0x2c,%sil
  41c870:	je     41c877 <X509_get0_pubkey_bitstr@plt+0x5ea7>
  41c872:	cmp    $0x3a,%cl
  41c875:	jne    41c85c <X509_get0_pubkey_bitstr@plt+0x5e8c>
  41c877:	lea    0x1(%rdx),%rcx
  41c87b:	movzbl 0x1(%rdx),%edx
  41c87f:	test   %dl,%dl
  41c881:	cmovne %edx,%eax
  41c884:	cmovne %rcx,%rbx
  41c888:	xor    %r14d,%r14d
  41c88b:	cmp    $0x2b,%al
  41c88d:	jne    41c899 <X509_get0_pubkey_bitstr@plt+0x5ec9>
  41c88f:	add    $0x1,%rbx
  41c893:	mov    $0xffffffff,%r14d
  41c899:	mov    %rbx,%rdi
  41c89c:	callq  413720 <OBJ_txt2nid@plt>
  41c8a1:	test   %eax,%eax
  41c8a3:	mov    %eax,0x110(%rsp)
  41c8aa:	je     41c7b2 <X509_get0_pubkey_bitstr@plt+0x5de2>
  41c8b0:	mov    0x8(%r13),%rcx
  41c8b4:	mov    0x50(%rsp),%rdi
  41c8b9:	lea    0x41bff(%rip),%rdx        # 45e4bf <_fini+0xfbb>
  41c8c0:	xor    %eax,%eax
  41c8c2:	mov    $0x64,%esi
  41c8c7:	callq  412fc0 <BIO_snprintf@plt>
  41c8cc:	cmp    $0x63,%eax
  41c8cf:	jg     41cc06 <X509_get0_pubkey_bitstr@plt+0x6236>
  41c8d5:	mov    0x50(%rsp),%rdx
  41c8da:	mov    0x58(%rsp),%rsi
  41c8df:	mov    0x25e942(%rip),%rdi        # 67b228 <_edata+0x520>
  41c8e6:	callq  413fd0 <NCONF_get_string@plt>
  41c8eb:	test   %rax,%rax
  41c8ee:	mov    %rax,%rbx
  41c8f1:	jne    41c8ff <X509_get0_pubkey_bitstr@plt+0x5f2f>
  41c8f3:	lea    0x434c8(%rip),%rbx        # 45fdc2 <_fini+0x28be>
  41c8fa:	callq  412890 <ERR_clear_error@plt>
  41c8ff:	mov    0x50(%rsp),%r12
  41c904:	mov    0x8(%r13),%rcx
  41c908:	lea    0x41bcf(%rip),%rdx        # 45e4de <_fini+0xfda>
  41c90f:	mov    $0x64,%esi
  41c914:	xor    %eax,%eax
  41c916:	mov    %r12,%rdi
  41c919:	callq  412fc0 <BIO_snprintf@plt>
  41c91e:	mov    0x58(%rsp),%rsi
  41c923:	mov    0x25e8fe(%rip),%rdi        # 67b228 <_edata+0x520>
  41c92a:	mov    %r12,%rdx
  41c92d:	callq  413fd0 <NCONF_get_string@plt>
  41c932:	test   %rax,%rax
  41c935:	mov    %rax,%r12
  41c938:	jne    41c93f <X509_get0_pubkey_bitstr@plt+0x5f6f>
  41c93a:	callq  412890 <ERR_clear_error@plt>
  41c93f:	mov    0x8(%r13),%rcx
  41c943:	mov    0x50(%rsp),%rdi
  41c948:	lea    0x41b98(%rip),%rdx        # 45e4e7 <_fini+0xfe3>
  41c94f:	mov    $0x64,%esi
  41c954:	xor    %eax,%eax
  41c956:	callq  412fc0 <BIO_snprintf@plt>
  41c95b:	mov    0x120(%rsp),%rcx
  41c963:	mov    0x50(%rsp),%rdx
  41c968:	mov    0x58(%rsp),%rsi
  41c96d:	mov    0x25e8b4(%rip),%rdi        # 67b228 <_edata+0x520>
  41c974:	callq  416450 <NCONF_get_number_e@plt>
  41c979:	test   %eax,%eax
  41c97b:	jne    41c98e <X509_get0_pubkey_bitstr@plt+0x5fbe>
  41c97d:	callq  412890 <ERR_clear_error@plt>
  41c982:	movq   $0xffffffffffffffff,0x178(%rsp)
  41c98e:	mov    0x8(%r13),%rcx
  41c992:	mov    0x50(%rsp),%rdi
  41c997:	lea    0x41b50(%rip),%rdx        # 45e4ee <_fini+0xfea>
  41c99e:	mov    $0x64,%esi
  41c9a3:	xor    %eax,%eax
  41c9a5:	callq  412fc0 <BIO_snprintf@plt>
  41c9aa:	mov    0x128(%rsp),%rcx
  41c9b2:	mov    0x50(%rsp),%rdx
  41c9b7:	mov    0x58(%rsp),%rsi
  41c9bc:	mov    0x25e865(%rip),%rdi        # 67b228 <_edata+0x520>
  41c9c3:	callq  416450 <NCONF_get_number_e@plt>
  41c9c8:	test   %eax,%eax
  41c9ca:	je     41cbe5 <X509_get0_pubkey_bitstr@plt+0x6215>
  41c9d0:	mov    0x180(%rsp),%eax
  41c9d7:	mov    %eax,0xf8(%rsp)
  41c9de:	mov    0x178(%rsp),%eax
  41c9e5:	mov    0x10(%r13),%r13
  41c9e9:	mov    %eax,0x118(%rsp)
  41c9f0:	mov    0x25e82a(%rip),%eax        # 67b220 <_edata+0x518>
  41c9f6:	test   %eax,%eax
  41c9f8:	jne    41ca11 <X509_get0_pubkey_bitstr@plt+0x6041>
  41c9fa:	mov    (%r15),%rdi
  41c9fd:	lea    0x41af1(%rip),%rsi        # 45e4f5 <_fini+0xff1>
  41ca04:	mov    %rbx,%rcx
  41ca07:	mov    %r13,%rdx
  41ca0a:	xor    %eax,%eax
  41ca0c:	callq  413c40 <BIO_printf@plt>
  41ca11:	mov    (%r15),%rdi
  41ca14:	xor    %ecx,%ecx
  41ca16:	xor    %edx,%edx
  41ca18:	mov    $0xb,%esi
  41ca1d:	callq  412af0 <BIO_ctrl@plt>
  41ca22:	test   %r12,%r12
  41ca25:	je     41cc40 <X509_get0_pubkey_bitstr@plt+0x6270>
  41ca2b:	mov    $0x400,%edx
  41ca30:	mov    %r12,%rsi
  41ca33:	mov    %rbp,%rdi
  41ca36:	callq  413560 <BUF_strlcpy@plt>
  41ca3b:	lea    0x4815d(%rip),%rsi        # 464b9f <_fini+0x769b>
  41ca42:	mov    $0x400,%edx
  41ca47:	mov    %rbp,%rdi
  41ca4a:	callq  414b30 <BUF_strlcat@plt>
  41ca4f:	mov    (%r15),%rdi
  41ca52:	lea    0x43d60(%rip),%rsi        # 4607b9 <_fini+0x32b5>
  41ca59:	mov    %r12,%rdx
  41ca5c:	xor    %eax,%eax
  41ca5e:	callq  413c40 <BIO_printf@plt>
  41ca63:	movzbl 0x230(%rsp),%eax
  41ca6b:	test   %al,%al
  41ca6d:	je     41cb22 <X509_get0_pubkey_bitstr@plt+0x6152>
  41ca73:	cmp    $0xa,%al
  41ca75:	je     41cc66 <X509_get0_pubkey_bitstr@plt+0x6296>
  41ca7b:	cmp    $0x2e,%al
  41ca7d:	je     41cc2d <X509_get0_pubkey_bitstr@plt+0x625d>
  41ca83:	mov    %rbp,%rdx
  41ca86:	mov    (%rdx),%ecx
  41ca88:	add    $0x4,%rdx
  41ca8c:	lea    -0x1010101(%rcx),%eax
  41ca92:	not    %ecx
  41ca94:	and    %ecx,%eax
  41ca96:	and    $0x80808080,%eax
  41ca9b:	je     41ca86 <X509_get0_pubkey_bitstr@plt+0x60b6>
  41ca9d:	mov    %eax,%ecx
  41ca9f:	shr    $0x10,%ecx
  41caa2:	test   $0x8080,%eax
  41caa7:	cmove  %ecx,%eax
  41caaa:	lea    0x2(%rdx),%rcx
  41caae:	cmove  %rcx,%rdx
  41cab2:	add    %al,%al
  41cab4:	sbb    $0x3,%rdx
  41cab8:	sub    %rbp,%rdx
  41cabb:	lea    -0x1(%rdx),%edi
  41cabe:	movslq %edi,%rax
  41cac1:	cmpb   $0xa,0x230(%rsp,%rax,1)
  41cac9:	jne    41cc98 <X509_get0_pubkey_bitstr@plt+0x62c8>
  41cacf:	mov    0xf8(%rsp),%edx
  41cad6:	mov    0x118(%rsp),%esi
  41cadd:	movb   $0x0,0x230(%rsp,%rax,1)
  41cae5:	callq  416e7c <X509_get0_pubkey_bitstr@plt+0x4ac>
  41caea:	test   %eax,%eax
  41caec:	je     41c9f0 <X509_get0_pubkey_bitstr@plt+0x6020>
  41caf2:	mov    0x70(%rsp),%edx
  41caf6:	mov    0x110(%rsp),%esi
  41cafd:	mov    $0xffffffff,%r9d
  41cb03:	mov    0xe0(%rsp),%rdi
  41cb0b:	mov    %r14d,(%rsp)
  41cb0f:	mov    %r9d,%r8d
  41cb12:	mov    %rbp,%rcx
  41cb15:	callq  4143d0 <X509_NAME_add_entry_by_NID@plt>
  41cb1a:	test   %eax,%eax
  41cb1c:	jne    41c7b2 <X509_get0_pubkey_bitstr@plt+0x5de2>
  41cb22:	mov    0x68(%rsp),%r14
  41cb27:	mov    0xa8(%rsp),%r12
  41cb2f:	jmpq   41c536 <X509_get0_pubkey_bitstr@plt+0x5b66>
  41cb34:	mov    (%r14),%rax
  41cb37:	xor    %ebx,%ebx
  41cb39:	mov    0x20(%rax),%rbp
  41cb3d:	mov    0xb0(%rsp),%rdi
  41cb45:	callq  4156d0 <sk_num@plt>
  41cb4a:	cmp    %eax,%ebx
  41cb4c:	jge    41ccbb <X509_get0_pubkey_bitstr@plt+0x62eb>
  41cb52:	mov    0xb0(%rsp),%rdi
  41cb5a:	mov    %ebx,%esi
  41cb5c:	callq  412b30 <sk_value@plt>
  41cb61:	mov    0x8(%rax),%rsi
  41cb65:	movzbl (%rsi),%edx
  41cb68:	test   %dl,%dl
  41cb6a:	je     41cbaf <X509_get0_pubkey_bitstr@plt+0x61df>
  41cb6c:	mov    %edx,%ecx
  41cb6e:	and    $0xfffffffd,%ecx
  41cb71:	cmp    $0x2c,%cl
  41cb74:	je     41cd21 <X509_get0_pubkey_bitstr@plt+0x6351>
  41cb7a:	cmp    $0x3a,%dl
  41cb7d:	mov    %rsi,%rcx
  41cb80:	je     41cd21 <X509_get0_pubkey_bitstr@plt+0x6351>
  41cb86:	add    $0x1,%rcx
  41cb8a:	movzbl (%rcx),%edx
  41cb8d:	test   %dl,%dl
  41cb8f:	je     41cbaf <X509_get0_pubkey_bitstr@plt+0x61df>
  41cb91:	mov    %edx,%edi
  41cb93:	and    $0xfffffffd,%edi
  41cb96:	cmp    $0x2c,%dil
  41cb9a:	je     41cba1 <X509_get0_pubkey_bitstr@plt+0x61d1>
  41cb9c:	cmp    $0x3a,%dl
  41cb9f:	jne    41cb86 <X509_get0_pubkey_bitstr@plt+0x61b6>
  41cba1:	movzbl 0x1(%rcx),%edx
  41cba5:	lea    0x1(%rcx),%rdi
  41cba9:	test   %dl,%dl
  41cbab:	cmovne %rdi,%rsi
  41cbaf:	mov    0x10(%rax),%rcx
  41cbb3:	xor    %eax,%eax
  41cbb5:	cmp    $0x2b,%dl
  41cbb8:	sete   %al
  41cbbb:	mov    0x70(%rsp),%edx
  41cbbf:	mov    $0xffffffff,%r9d
  41cbc5:	neg    %eax
  41cbc7:	mov    %r9d,%r8d
  41cbca:	mov    %rbp,%rdi
  41cbcd:	mov    %eax,(%rsp)
  41cbd0:	callq  415710 <X509_NAME_add_entry_by_txt@plt>
  41cbd5:	test   %eax,%eax
  41cbd7:	je     41c536 <X509_get0_pubkey_bitstr@plt+0x5b66>
  41cbdd:	add    $0x1,%ebx
  41cbe0:	jmpq   41cb3d <X509_get0_pubkey_bitstr@plt+0x616d>
  41cbe5:	callq  412890 <ERR_clear_error@plt>
  41cbea:	movq   $0xffffffffffffffff,0x180(%rsp)
  41cbf6:	movl   $0xffffffff,0xf8(%rsp)
  41cc01:	jmpq   41c9de <X509_get0_pubkey_bitstr@plt+0x600e>
  41cc06:	mov    0x8(%r13),%rdx
  41cc0a:	mov    (%r15),%rdi
  41cc0d:	lea    0x418b6(%rip),%rsi        # 45e4ca <_fini+0xfc6>
  41cc14:	xor    %eax,%eax
  41cc16:	mov    0x68(%rsp),%r14
  41cc1b:	mov    0xa8(%rsp),%r12
  41cc23:	callq  413c40 <BIO_printf@plt>
  41cc28:	jmpq   41c536 <X509_get0_pubkey_bitstr@plt+0x5b66>
  41cc2d:	cmpb   $0xa,0x231(%rsp)
  41cc35:	jne    41ca83 <X509_get0_pubkey_bitstr@plt+0x60b3>
  41cc3b:	jmpq   41c7b2 <X509_get0_pubkey_bitstr@plt+0x5de2>
  41cc40:	mov    0x25e5da(%rip),%eax        # 67b220 <_edata+0x518>
  41cc46:	movb   $0x0,0x230(%rsp)
  41cc4e:	test   %eax,%eax
  41cc50:	je     41cd29 <X509_get0_pubkey_bitstr@plt+0x6359>
  41cc56:	movb   $0xa,0x230(%rsp)
  41cc5e:	movb   $0x0,0x231(%rsp)
  41cc66:	cmpb   $0x0,(%rbx)
  41cc69:	je     41c7b2 <X509_get0_pubkey_bitstr@plt+0x5de2>
  41cc6f:	mov    %rbx,%rsi
  41cc72:	mov    %rbp,%rdi
  41cc75:	mov    $0x400,%edx
  41cc7a:	callq  413560 <BUF_strlcpy@plt>
  41cc7f:	lea    0x47f19(%rip),%rsi        # 464b9f <_fini+0x769b>
  41cc86:	mov    $0x400,%edx
  41cc8b:	mov    %rbp,%rdi
  41cc8e:	callq  414b30 <BUF_strlcat@plt>
  41cc93:	jmpq   41ca83 <X509_get0_pubkey_bitstr@plt+0x60b3>
  41cc98:	mov    (%r15),%rdi
  41cc9b:	lea    0x4185c(%rip),%rsi        # 45e4fe <_fini+0xffa>
  41cca2:	xor    %eax,%eax
  41cca4:	mov    0x68(%rsp),%r14
  41cca9:	mov    0xa8(%rsp),%r12
  41ccb1:	callq  413c40 <BIO_printf@plt>
  41ccb6:	jmpq   41c536 <X509_get0_pubkey_bitstr@plt+0x5b66>
  41ccbb:	mov    %rbp,%rdi
  41ccbe:	callq  415580 <X509_NAME_entry_count@plt>
  41ccc3:	test   %eax,%eax
  41ccc5:	je     41cd56 <X509_get0_pubkey_bitstr@plt+0x6386>
  41cccb:	mov    0xc8(%rsp),%eax
  41ccd2:	xor    %ebx,%ebx
  41ccd4:	test   %eax,%eax
  41ccd6:	je     41c5e6 <X509_get0_pubkey_bitstr@plt+0x5c16>
  41ccdc:	mov    0x10(%rsp),%rdi
  41cce1:	callq  4156d0 <sk_num@plt>
  41cce6:	cmp    %eax,%ebx
  41cce8:	jge    41c5e6 <X509_get0_pubkey_bitstr@plt+0x5c16>
  41ccee:	mov    0x10(%rsp),%rdi
  41ccf3:	mov    %ebx,%esi
  41ccf5:	callq  412b30 <sk_value@plt>
  41ccfa:	mov    0x70(%rsp),%edx
  41ccfe:	mov    0x10(%rax),%rcx
  41cd02:	mov    $0xffffffff,%r8d
  41cd08:	mov    0x8(%rax),%rsi
  41cd0c:	mov    %r14,%rdi
  41cd0f:	callq  416840 <X509_REQ_add1_attr_by_txt@plt>
  41cd14:	test   %eax,%eax
  41cd16:	je     41c536 <X509_get0_pubkey_bitstr@plt+0x5b66>
  41cd1c:	add    $0x1,%ebx
  41cd1f:	jmp    41ccdc <X509_get0_pubkey_bitstr@plt+0x630c>
  41cd21:	mov    %rsi,%rcx
  41cd24:	jmpq   41cba1 <X509_get0_pubkey_bitstr@plt+0x61d1>
  41cd29:	mov    0x2591e0(%rip),%rax        # 675f10 <_fini+0x218a0c>
  41cd30:	mov    $0x400,%esi
  41cd35:	mov    %rbp,%rdi
  41cd38:	mov    (%rax),%rdx
  41cd3b:	callq  415af0 <fgets@plt>
  41cd40:	test   %rax,%rax
  41cd43:	je     41cb22 <X509_get0_pubkey_bitstr@plt+0x6152>
  41cd49:	movzbl 0x230(%rsp),%eax
  41cd51:	jmpq   41ca6b <X509_get0_pubkey_bitstr@plt+0x609b>
  41cd56:	mov    (%r15),%rdi
  41cd59:	lea    0x423a0(%rip),%rsi        # 45f100 <_fini+0x1bfc>
  41cd60:	callq  413c40 <BIO_printf@plt>
  41cd65:	jmpq   41c536 <X509_get0_pubkey_bitstr@plt+0x5b66>
  41cd6a:	mov    %rbx,%rdx
  41cd6d:	jmpq   41c877 <X509_get0_pubkey_bitstr@plt+0x5ea7>
  41cd72:	xor    %r14d,%r14d
  41cd75:	jmpq   41c899 <X509_get0_pubkey_bitstr@plt+0x5ec9>
  41cd7a:	mov    0xe0(%rsp),%rdi
  41cd82:	mov    0x68(%rsp),%r14
  41cd87:	mov    0xa8(%rsp),%r12
  41cd8f:	callq  415580 <X509_NAME_entry_count@plt>
  41cd94:	test   %eax,%eax
  41cd96:	je     41cd56 <X509_get0_pubkey_bitstr@plt+0x6386>
  41cd98:	mov    0xc8(%rsp),%ebx
  41cd9f:	test   %ebx,%ebx
  41cda1:	je     41c5e6 <X509_get0_pubkey_bitstr@plt+0x5c16>
  41cda7:	cmpq   $0x0,0x10(%rsp)
  41cdad:	je     41c5e6 <X509_get0_pubkey_bitstr@plt+0x5c16>
  41cdb3:	mov    0x10(%rsp),%rdi
  41cdb8:	callq  4156d0 <sk_num@plt>
  41cdbd:	test   %eax,%eax
  41cdbf:	jle    41cdd1 <X509_get0_pubkey_bitstr@plt+0x6401>
  41cdc1:	mov    0x25e458(%rip),%r11d        # 67b220 <_edata+0x518>
  41cdc8:	test   %r11d,%r11d
  41cdcb:	je     41ce6c <X509_get0_pubkey_bitstr@plt+0x649c>
  41cdd1:	cmpq   $0x0,0x10(%rsp)
  41cdd7:	je     41c5e6 <X509_get0_pubkey_bitstr@plt+0x5c16>
  41cddd:	lea    0x178(%rsp),%rax
  41cde5:	lea    0x1c0(%rsp),%rbp
  41cded:	movl   $0x0,0x58(%rsp)
  41cdf5:	mov    %r12,0x50(%rsp)
  41cdfa:	mov    %rax,0xc8(%rsp)
  41ce02:	lea    0x180(%rsp),%rax
  41ce0a:	mov    %rax,0xe0(%rsp)
  41ce12:	mov    0x10(%rsp),%rbx
  41ce17:	mov    %rbx,%rdi
  41ce1a:	callq  4156d0 <sk_num@plt>
  41ce1f:	mov    0x58(%rsp),%esi
  41ce23:	cmp    %eax,%esi
  41ce25:	jge    41c5e1 <X509_get0_pubkey_bitstr@plt+0x5c11>
  41ce2b:	mov    %rbx,%rdi
  41ce2e:	callq  412b30 <sk_value@plt>
  41ce33:	mov    0x8(%rax),%r12
  41ce37:	mov    %rax,0x68(%rsp)
  41ce3c:	mov    %r12,%rdi
  41ce3f:	callq  413720 <OBJ_txt2nid@plt>
  41ce44:	test   %eax,%eax
  41ce46:	mov    %eax,0xa8(%rsp)
  41ce4d:	jne    41ce93 <X509_get0_pubkey_bitstr@plt+0x64c3>
  41ce4f:	addl   $0x1,0x58(%rsp)
  41ce54:	jmp    41ce12 <X509_get0_pubkey_bitstr@plt+0x6442>
  41ce56:	mov    (%r15),%rdi
  41ce59:	lea    0x42498(%rip),%rsi        # 45f2f8 <_fini+0x1df4>
  41ce60:	xor    %eax,%eax
  41ce62:	callq  413c40 <BIO_printf@plt>
  41ce67:	jmpq   41c536 <X509_get0_pubkey_bitstr@plt+0x5b66>
  41ce6c:	mov    (%r15),%rdi
  41ce6f:	lea    0x42422(%rip),%rsi        # 45f298 <_fini+0x1d94>
  41ce76:	xor    %eax,%eax
  41ce78:	callq  413c40 <BIO_printf@plt>
  41ce7d:	mov    (%r15),%rdi
  41ce80:	lea    0x42441(%rip),%rsi        # 45f2c8 <_fini+0x1dc4>
  41ce87:	xor    %eax,%eax
  41ce89:	callq  413c40 <BIO_printf@plt>
  41ce8e:	jmpq   41cddd <X509_get0_pubkey_bitstr@plt+0x640d>
  41ce93:	lea    0x41625(%rip),%rdx        # 45e4bf <_fini+0xfbb>
  41ce9a:	xor    %eax,%eax
  41ce9c:	mov    %r12,%rcx
  41ce9f:	mov    $0x64,%esi
  41cea4:	mov    %rbp,%rdi
  41cea7:	callq  412fc0 <BIO_snprintf@plt>
  41ceac:	cmp    $0x63,%eax
  41ceaf:	jg     41d1d1 <X509_get0_pubkey_bitstr@plt+0x6801>
  41ceb5:	mov    0x60(%rsp),%rsi
  41ceba:	mov    0x25e367(%rip),%rdi        # 67b228 <_edata+0x520>
  41cec1:	mov    %rbp,%rdx
  41cec4:	callq  413fd0 <NCONF_get_string@plt>
  41cec9:	test   %rax,%rax
  41cecc:	mov    %rax,%rbx
  41cecf:	jne    41cedd <X509_get0_pubkey_bitstr@plt+0x650d>
  41ced1:	lea    0x42eea(%rip),%rbx        # 45fdc2 <_fini+0x28be>
  41ced8:	callq  412890 <ERR_clear_error@plt>
  41cedd:	lea    0x415fa(%rip),%rdx        # 45e4de <_fini+0xfda>
  41cee4:	mov    %r12,%rcx
  41cee7:	mov    $0x64,%esi
  41ceec:	mov    %rbp,%rdi
  41ceef:	xor    %eax,%eax
  41cef1:	callq  412fc0 <BIO_snprintf@plt>
  41cef6:	mov    0x60(%rsp),%rsi
  41cefb:	mov    0x25e326(%rip),%rdi        # 67b228 <_edata+0x520>
  41cf02:	mov    %rbp,%rdx
  41cf05:	callq  413fd0 <NCONF_get_string@plt>
  41cf0a:	test   %rax,%rax
  41cf0d:	mov    %rax,%r13
  41cf10:	jne    41cf17 <X509_get0_pubkey_bitstr@plt+0x6547>
  41cf12:	callq  412890 <ERR_clear_error@plt>
  41cf17:	lea    0x415c9(%rip),%rdx        # 45e4e7 <_fini+0xfe3>
  41cf1e:	mov    %r12,%rcx
  41cf21:	mov    $0x64,%esi
  41cf26:	mov    %rbp,%rdi
  41cf29:	xor    %eax,%eax
  41cf2b:	callq  412fc0 <BIO_snprintf@plt>
  41cf30:	mov    0xc8(%rsp),%rcx
  41cf38:	mov    0x60(%rsp),%rsi
  41cf3d:	mov    %rbp,%rdx
  41cf40:	mov    0x25e2e1(%rip),%rdi        # 67b228 <_edata+0x520>
  41cf47:	callq  416450 <NCONF_get_number_e@plt>
  41cf4c:	test   %eax,%eax
  41cf4e:	jne    41cf61 <X509_get0_pubkey_bitstr@plt+0x6591>
  41cf50:	callq  412890 <ERR_clear_error@plt>
  41cf55:	movq   $0xffffffffffffffff,0x178(%rsp)
  41cf61:	lea    0x41586(%rip),%rdx        # 45e4ee <_fini+0xfea>
  41cf68:	mov    %r12,%rcx
  41cf6b:	mov    $0x64,%esi
  41cf70:	mov    %rbp,%rdi
  41cf73:	xor    %eax,%eax
  41cf75:	callq  412fc0 <BIO_snprintf@plt>
  41cf7a:	mov    0xe0(%rsp),%rcx
  41cf82:	mov    0x60(%rsp),%rsi
  41cf87:	mov    %rbp,%rdx
  41cf8a:	mov    0x25e297(%rip),%rdi        # 67b228 <_edata+0x520>
  41cf91:	callq  416450 <NCONF_get_number_e@plt>
  41cf96:	test   %eax,%eax
  41cf98:	je     41d123 <X509_get0_pubkey_bitstr@plt+0x6753>
  41cf9e:	mov    0x180(%rsp),%r12d
  41cfa6:	mov    0x178(%rsp),%eax
  41cfad:	mov    %eax,0xb0(%rsp)
  41cfb4:	mov    0x68(%rsp),%rax
  41cfb9:	mov    0x10(%rax),%rax
  41cfbd:	mov    %rax,0x68(%rsp)
  41cfc2:	mov    0x25e257(%rip),%r10d        # 67b220 <_edata+0x518>
  41cfc9:	test   %r10d,%r10d
  41cfcc:	jne    41cfe7 <X509_get0_pubkey_bitstr@plt+0x6617>
  41cfce:	mov    0x68(%rsp),%rdx
  41cfd3:	mov    (%r15),%rdi
  41cfd6:	lea    0x41518(%rip),%rsi        # 45e4f5 <_fini+0xff1>
  41cfdd:	mov    %rbx,%rcx
  41cfe0:	xor    %eax,%eax
  41cfe2:	callq  413c40 <BIO_printf@plt>
  41cfe7:	mov    (%r15),%rdi
  41cfea:	xor    %ecx,%ecx
  41cfec:	xor    %edx,%edx
  41cfee:	mov    $0xb,%esi
  41cff3:	callq  412af0 <BIO_ctrl@plt>
  41cff8:	test   %r13,%r13
  41cffb:	je     41d16c <X509_get0_pubkey_bitstr@plt+0x679c>
  41d001:	lea    0x25de18(%rip),%rdi        # 67ae20 <_edata+0x118>
  41d008:	mov    $0x400,%edx
  41d00d:	mov    %r13,%rsi
  41d010:	callq  413560 <BUF_strlcpy@plt>
  41d015:	lea    0x47b83(%rip),%rsi        # 464b9f <_fini+0x769b>
  41d01c:	lea    0x25ddfd(%rip),%rdi        # 67ae20 <_edata+0x118>
  41d023:	mov    $0x400,%edx
  41d028:	callq  414b30 <BUF_strlcat@plt>
  41d02d:	mov    (%r15),%rdi
  41d030:	lea    0x43782(%rip),%rsi        # 4607b9 <_fini+0x32b5>
  41d037:	mov    %r13,%rdx
  41d03a:	xor    %eax,%eax
  41d03c:	callq  413c40 <BIO_printf@plt>
  41d041:	movzbl 0x25ddd8(%rip),%eax        # 67ae20 <_edata+0x118>
  41d048:	test   %al,%al
  41d04a:	je     41d1c7 <X509_get0_pubkey_bitstr@plt+0x67f7>
  41d050:	cmp    $0xa,%al
  41d052:	je     41d18d <X509_get0_pubkey_bitstr@plt+0x67bd>
  41d058:	cmp    $0x2e,%al
  41d05a:	je     41d15a <X509_get0_pubkey_bitstr@plt+0x678a>
  41d060:	lea    0x25ddb9(%rip),%rsi        # 67ae20 <_edata+0x118>
  41d067:	mov    %rsi,%rdx
  41d06a:	mov    (%rdx),%ecx
  41d06c:	add    $0x4,%rdx
  41d070:	lea    -0x1010101(%rcx),%eax
  41d076:	not    %ecx
  41d078:	and    %ecx,%eax
  41d07a:	and    $0x80808080,%eax
  41d07f:	je     41d06a <X509_get0_pubkey_bitstr@plt+0x669a>
  41d081:	mov    %eax,%ecx
  41d083:	shr    $0x10,%ecx
  41d086:	test   $0x8080,%eax
  41d08b:	cmove  %ecx,%eax
  41d08e:	lea    0x2(%rdx),%rcx
  41d092:	cmove  %rcx,%rdx
  41d096:	add    %al,%al
  41d098:	lea    0x25dd81(%rip),%rcx        # 67ae20 <_edata+0x118>
  41d09f:	sbb    $0x3,%rdx
  41d0a3:	sub    %rsi,%rdx
  41d0a6:	lea    -0x1(%rdx),%edi
  41d0a9:	movslq %edi,%rax
  41d0ac:	cmpb   $0xa,(%rsi,%rax,1)
  41d0b0:	jne    41d13f <X509_get0_pubkey_bitstr@plt+0x676f>
  41d0b6:	mov    0xb0(%rsp),%esi
  41d0bd:	mov    %r12d,%edx
  41d0c0:	movb   $0x0,(%rcx,%rax,1)
  41d0c4:	mov    %rcx,0xf0(%rsp)
  41d0cc:	callq  416e7c <X509_get0_pubkey_bitstr@plt+0x4ac>
  41d0d1:	test   %eax,%eax
  41d0d3:	mov    0xf0(%rsp),%rcx
  41d0db:	je     41cfc2 <X509_get0_pubkey_bitstr@plt+0x65f2>
  41d0e1:	mov    0x70(%rsp),%edx
  41d0e5:	mov    0xa8(%rsp),%esi
  41d0ec:	mov    $0xffffffff,%r8d
  41d0f2:	mov    %r14,%rdi
  41d0f5:	callq  414bf0 <X509_REQ_add1_attr_by_NID@plt>
  41d0fa:	test   %eax,%eax
  41d0fc:	jne    41ce4f <X509_get0_pubkey_bitstr@plt+0x647f>
  41d102:	mov    (%r15),%rdi
  41d105:	lea    0x41403(%rip),%rsi        # 45e50f <_fini+0x100b>
  41d10c:	mov    0x50(%rsp),%r12
  41d111:	callq  413c40 <BIO_printf@plt>
  41d116:	mov    (%r15),%rdi
  41d119:	callq  413f40 <ERR_print_errors@plt>
  41d11e:	jmpq   41c536 <X509_get0_pubkey_bitstr@plt+0x5b66>
  41d123:	callq  412890 <ERR_clear_error@plt>
  41d128:	mov    $0xffffffff,%r12d
  41d12e:	movq   $0xffffffffffffffff,0x180(%rsp)
  41d13a:	jmpq   41cfa6 <X509_get0_pubkey_bitstr@plt+0x65d6>
  41d13f:	mov    (%r15),%rdi
  41d142:	lea    0x413b5(%rip),%rsi        # 45e4fe <_fini+0xffa>
  41d149:	xor    %eax,%eax
  41d14b:	mov    0x50(%rsp),%r12
  41d150:	callq  413c40 <BIO_printf@plt>
  41d155:	jmpq   41c536 <X509_get0_pubkey_bitstr@plt+0x5b66>
  41d15a:	cmpb   $0xa,0x25dcc0(%rip)        # 67ae21 <_edata+0x119>
  41d161:	jne    41d060 <X509_get0_pubkey_bitstr@plt+0x6690>
  41d167:	jmpq   41ce4f <X509_get0_pubkey_bitstr@plt+0x647f>
  41d16c:	mov    0x25e0ad(%rip),%r9d        # 67b220 <_edata+0x518>
  41d173:	movb   $0x0,0x25dca6(%rip)        # 67ae20 <_edata+0x118>
  41d17a:	test   %r9d,%r9d
  41d17d:	je     41d1f5 <X509_get0_pubkey_bitstr@plt+0x6825>
  41d17f:	movb   $0xa,0x25dc9a(%rip)        # 67ae20 <_edata+0x118>
  41d186:	movb   $0x0,0x25dc94(%rip)        # 67ae21 <_edata+0x119>
  41d18d:	cmpb   $0x0,(%rbx)
  41d190:	je     41ce4f <X509_get0_pubkey_bitstr@plt+0x647f>
  41d196:	lea    0x25dc83(%rip),%rdi        # 67ae20 <_edata+0x118>
  41d19d:	mov    %rbx,%rsi
  41d1a0:	mov    $0x400,%edx
  41d1a5:	callq  413560 <BUF_strlcpy@plt>
  41d1aa:	lea    0x479ee(%rip),%rsi        # 464b9f <_fini+0x769b>
  41d1b1:	lea    0x25dc68(%rip),%rdi        # 67ae20 <_edata+0x118>
  41d1b8:	mov    $0x400,%edx
  41d1bd:	callq  414b30 <BUF_strlcat@plt>
  41d1c2:	jmpq   41d060 <X509_get0_pubkey_bitstr@plt+0x6690>
  41d1c7:	mov    0x50(%rsp),%r12
  41d1cc:	jmpq   41c536 <X509_get0_pubkey_bitstr@plt+0x5b66>
  41d1d1:	mov    0x68(%rsp),%rax
  41d1d6:	mov    (%r15),%rdi
  41d1d9:	lea    0x412ea(%rip),%rsi        # 45e4ca <_fini+0xfc6>
  41d1e0:	mov    0x50(%rsp),%r12
  41d1e5:	mov    0x8(%rax),%rdx
  41d1e9:	xor    %eax,%eax
  41d1eb:	callq  413c40 <BIO_printf@plt>
  41d1f0:	jmpq   41c536 <X509_get0_pubkey_bitstr@plt+0x5b66>
  41d1f5:	mov    0x258d14(%rip),%rax        # 675f10 <_fini+0x218a0c>
  41d1fc:	lea    0x25dc1d(%rip),%rdi        # 67ae20 <_edata+0x118>
  41d203:	mov    $0x400,%esi
  41d208:	mov    (%rax),%rdx
  41d20b:	callq  415af0 <fgets@plt>
  41d210:	test   %rax,%rax
  41d213:	je     41d1c7 <X509_get0_pubkey_bitstr@plt+0x67f7>
  41d215:	movzbl 0x25dc04(%rip),%eax        # 67ae20 <_edata+0x118>
  41d21c:	jmpq   41d048 <X509_get0_pubkey_bitstr@plt+0x6678>
  41d221:	mov    0x60(%rsp),%rdx
  41d226:	mov    (%r15),%rdi
  41d229:	lea    0x41273(%rip),%rsi        # 45e4a3 <_fini+0xf9f>
  41d230:	xor    %ebx,%ebx
  41d232:	callq  413c40 <BIO_printf@plt>
  41d237:	jmpq   41c538 <X509_get0_pubkey_bitstr@plt+0x5b68>
  41d23c:	cmpq   $0x0,0x48(%rsp)
  41d242:	je     41d37c <X509_get0_pubkey_bitstr@plt+0x69ac>
  41d248:	mov    0x48(%rsp),%rsi
  41d24d:	mov    %rbp,%rdi
  41d250:	callq  412e40 <X509_set_serialNumber@plt>
  41d255:	test   %eax,%eax
  41d257:	je     41be47 <X509_get0_pubkey_bitstr@plt+0x5477>
  41d25d:	mov    (%r14),%rax
  41d260:	mov    %rbp,%rdi
  41d263:	mov    0x20(%rax),%rsi
  41d267:	callq  4159c0 <X509_set_issuer_name@plt>
  41d26c:	test   %eax,%eax
  41d26e:	je     41be47 <X509_get0_pubkey_bitstr@plt+0x5477>
  41d274:	mov    0x0(%rbp),%rax
  41d278:	xor    %esi,%esi
  41d27a:	mov    0x20(%rax),%rax
  41d27e:	mov    (%rax),%rdi
  41d281:	callq  4164f0 <X509_gmtime_adj@plt>
  41d286:	test   %rax,%rax
  41d289:	je     41be47 <X509_get0_pubkey_bitstr@plt+0x5477>
  41d28f:	mov    0x0(%rbp),%rax
  41d293:	mov    0xec(%rsp),%esi
  41d29a:	xor    %ecx,%ecx
  41d29c:	xor    %edx,%edx
  41d29e:	mov    0x20(%rax),%rax
  41d2a2:	mov    0x8(%rax),%rdi
  41d2a6:	callq  413f50 <X509_time_adj_ex@plt>
  41d2ab:	test   %rax,%rax
  41d2ae:	je     41be47 <X509_get0_pubkey_bitstr@plt+0x5477>
  41d2b4:	mov    (%r14),%rax
  41d2b7:	mov    %rbp,%rdi
  41d2ba:	mov    0x20(%rax),%rsi
  41d2be:	callq  413ea0 <X509_set_subject_name@plt>
  41d2c3:	test   %eax,%eax
  41d2c5:	je     41be47 <X509_get0_pubkey_bitstr@plt+0x5477>
  41d2cb:	mov    %r14,%rdi
  41d2ce:	callq  413b00 <X509_REQ_get_pubkey@plt>
  41d2d3:	test   %rax,%rax
  41d2d6:	mov    %rax,%rbx
  41d2d9:	je     41be47 <X509_get0_pubkey_bitstr@plt+0x5477>
  41d2df:	mov    %rax,%rsi
  41d2e2:	mov    %rbp,%rdi
  41d2e5:	callq  416930 <X509_set_pubkey@plt>
  41d2ea:	test   %eax,%eax
  41d2ec:	je     41be47 <X509_get0_pubkey_bitstr@plt+0x5477>
  41d2f2:	mov    %rbx,%rdi
  41d2f5:	lea    0x180(%rsp),%rbx
  41d2fd:	callq  412b00 <EVP_PKEY_free@plt>
  41d302:	xor    %r9d,%r9d
  41d305:	xor    %r8d,%r8d
  41d308:	xor    %ecx,%ecx
  41d30a:	mov    %rbp,%rdx
  41d30d:	mov    %rbp,%rsi
  41d310:	mov    %rbx,%rdi
  41d313:	callq  413910 <X509V3_set_ctx@plt>
  41d318:	mov    0x25df09(%rip),%rsi        # 67b228 <_edata+0x520>
  41d31f:	mov    %rbx,%rdi
  41d322:	callq  4155a0 <X509V3_set_nconf@plt>
  41d327:	mov    0x78(%rsp),%rdx
  41d32c:	test   %rdx,%rdx
  41d32f:	je     41d347 <X509_get0_pubkey_bitstr@plt+0x6977>
  41d331:	mov    0x25def0(%rip),%rdi        # 67b228 <_edata+0x520>
  41d338:	mov    %rbp,%rcx
  41d33b:	mov    %rbx,%rsi
  41d33e:	callq  4168d0 <X509V3_EXT_add_nconf@plt>
  41d343:	test   %eax,%eax
  41d345:	je     41d39b <X509_get0_pubkey_bitstr@plt+0x69cb>
  41d347:	mov    0x40(%rsp),%r8
  41d34c:	mov    0xb8(%rsp),%rcx
  41d354:	mov    %rbp,%rsi
  41d357:	mov    0x158(%rsp),%rdx
  41d35f:	mov    (%r15),%rdi
  41d362:	callq  41abf0 <X509_get0_pubkey_bitstr@plt+0x4220>
  41d367:	test   %eax,%eax
  41d369:	jne    41c67d <X509_get0_pubkey_bitstr@plt+0x5cad>
  41d36f:	mov    (%r15),%rdi
  41d372:	callq  413f40 <ERR_print_errors@plt>
  41d377:	jmpq   41be47 <X509_get0_pubkey_bitstr@plt+0x5477>
  41d37c:	mov    %rbp,%rdi
  41d37f:	callq  4128c0 <X509_get_serialNumber@plt>
  41d384:	xor    %edi,%edi
  41d386:	mov    %rax,%rsi
  41d389:	callq  447000 <X509_get0_pubkey_bitstr@plt+0x30630>
  41d38e:	test   %eax,%eax
  41d390:	je     41be47 <X509_get0_pubkey_bitstr@plt+0x5477>
  41d396:	jmpq   41d25d <X509_get0_pubkey_bitstr@plt+0x688d>
  41d39b:	mov    0x78(%rsp),%rdx
  41d3a0:	mov    (%r15),%rdi
  41d3a3:	lea    0x41bb6(%rip),%rsi        # 45ef60 <_fini+0x1a5c>
  41d3aa:	callq  413c40 <BIO_printf@plt>
  41d3af:	jmpq   41be47 <X509_get0_pubkey_bitstr@plt+0x5477>
  41d3b4:	mov    0x20(%rsp),%rdi
  41d3b9:	xor    %esi,%esi
  41d3bb:	callq  4139c0 <d2i_X509_REQ_bio@plt>
  41d3c0:	mov    %rax,%r14
  41d3c3:	jmpq   41bdc3 <X509_get0_pubkey_bitstr@plt+0x53f3>
  41d3c8:	lea    0x40e40(%rip),%rdi        # 45e20f <_fini+0xd0b>
  41d3cf:	mov    %rax,%rsi
  41d3d2:	mov    $0x9,%ecx
  41d3d7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41d3d9:	jne    41d8cd <X509_get0_pubkey_bitstr@plt+0x6efd>
  41d3df:	sub    $0x1,%r14d
  41d3e3:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41d3e9:	cmpq   $0x0,0x28(%rsp)
  41d3ef:	je     41d8ab <X509_get0_pubkey_bitstr@plt+0x6edb>
  41d3f5:	mov    0x8(%rdx),%rsi
  41d3f9:	mov    0x28(%rsp),%rdi
  41d3fe:	lea    0x8(%rdx),%r12
  41d402:	callq  412fe0 <sk_push@plt>
  41d407:	test   %eax,%eax
  41d409:	jne    41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41d40f:	jmpq   41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41d414:	mov    0xc8(%rsp),%rdi
  41d41c:	xor    %ebx,%ebx
  41d41e:	xor    %r14d,%r14d
  41d421:	xor    %ebp,%ebp
  41d423:	callq  4142c0 <perror@plt>
  41d428:	jmpq   41b6ab <X509_get0_pubkey_bitstr@plt+0x4cdb>
  41d42d:	mov    0x258adc(%rip),%rax        # 675f10 <_fini+0x218a0c>
  41d434:	mov    0x20(%rsp),%rdi
  41d439:	xor    %edx,%edx
  41d43b:	mov    $0x6a,%esi
  41d440:	mov    (%rax),%rcx
  41d443:	callq  412af0 <BIO_ctrl@plt>
  41d448:	jmpq   41b9c3 <X509_get0_pubkey_bitstr@plt+0x4ff3>
  41d44d:	xor    %r14d,%r14d
  41d450:	jmpq   41bdde <X509_get0_pubkey_bitstr@plt+0x540e>
  41d455:	cmpq   $0x0,0x158(%rsp)
  41d45e:	jne    41b983 <X509_get0_pubkey_bitstr@plt+0x4fb3>
  41d464:	mov    0x25ddbd(%rip),%rdi        # 67b228 <_edata+0x520>
  41d46b:	lea    0x40f9b(%rip),%rdx        # 45e40d <_fini+0xf09>
  41d472:	lea    0x485fd(%rip),%rsi        # 465a76 <_fini+0x8572>
  41d479:	callq  413fd0 <NCONF_get_string@plt>
  41d47e:	test   %rax,%rax
  41d481:	mov    %rax,%rbp
  41d484:	jne    41d48b <X509_get0_pubkey_bitstr@plt+0x6abb>
  41d486:	callq  412890 <ERR_clear_error@plt>
  41d48b:	mov    (%r15),%rsi
  41d48e:	xor    %edx,%edx
  41d490:	mov    %rbp,%rdi
  41d493:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  41d498:	mov    0x108(%rsp),%rdi
  41d4a0:	test   %rdi,%rdi
  41d4a3:	je     41d4aa <X509_get0_pubkey_bitstr@plt+0x6ada>
  41d4a5:	callq  44a710 <X509_get0_pubkey_bitstr@plt+0x33d40>
  41d4aa:	cmpq   $0x0,0x160(%rsp)
  41d4b3:	jle    41d837 <X509_get0_pubkey_bitstr@plt+0x6e67>
  41d4b9:	mov    0xf8(%rsp),%rsi
  41d4c1:	test   %rsi,%rsi
  41d4c4:	je     41d6f2 <X509_get0_pubkey_bitstr@plt+0x6d22>
  41d4ca:	mov    0x18(%rsp),%r9
  41d4cf:	mov    (%r15),%rdi
  41d4d2:	lea    0x160(%rsp),%rcx
  41d4da:	lea    0x13c(%rsp),%rdx
  41d4e2:	lea    0x150(%rsp),%r8
  41d4ea:	callq  416a22 <X509_get0_pubkey_bitstr@plt+0x52>
  41d4ef:	test   %rax,%rax
  41d4f2:	mov    %rax,%rbx
  41d4f5:	je     41b2ea <X509_get0_pubkey_bitstr@plt+0x491a>
  41d4fb:	cmpq   $0x17f,0x160(%rsp)
  41d507:	jg     41d522 <X509_get0_pubkey_bitstr@plt+0x6b52>
  41d509:	mov    0x13c(%rsp),%eax
  41d510:	cmp    $0x74,%eax
  41d513:	je     41d872 <X509_get0_pubkey_bitstr@plt+0x6ea2>
  41d519:	cmp    $0x6,%eax
  41d51c:	je     41d872 <X509_get0_pubkey_bitstr@plt+0x6ea2>
  41d522:	test   %rbx,%rbx
  41d525:	je     41d7ff <X509_get0_pubkey_bitstr@plt+0x6e2f>
  41d52b:	xor    %r14d,%r14d
  41d52e:	cmpq   $0x0,0x28(%rsp)
  41d534:	je     41d57b <X509_get0_pubkey_bitstr@plt+0x6bab>
  41d536:	mov    0x28(%rsp),%rdi
  41d53b:	callq  4156d0 <sk_num@plt>
  41d540:	cmp    %eax,%r14d
  41d543:	jge    41d57b <X509_get0_pubkey_bitstr@plt+0x6bab>
  41d545:	mov    0x28(%rsp),%rdi
  41d54a:	mov    %r14d,%esi
  41d54d:	callq  412b30 <sk_value@plt>
  41d552:	mov    %rbx,%rdi
  41d555:	mov    %rax,%rsi
  41d558:	mov    %rax,%r13
  41d55b:	callq  448760 <X509_get0_pubkey_bitstr@plt+0x31d90>
  41d560:	test   %eax,%eax
  41d562:	jle    41d6f9 <X509_get0_pubkey_bitstr@plt+0x6d29>
  41d568:	mov    0x28(%rsp),%rdi
  41d56d:	add    $0x1,%r14d
  41d571:	callq  4156d0 <sk_num@plt>
  41d576:	cmp    %eax,%r14d
  41d579:	jl     41d545 <X509_get0_pubkey_bitstr@plt+0x6b75>
  41d57b:	mov    0x150(%rsp),%rcx
  41d583:	mov    0x160(%rsp),%rdx
  41d58b:	lea    0x41aa6(%rip),%rsi        # 45f038 <_fini+0x1b34>
  41d592:	mov    (%r15),%rdi
  41d595:	xor    %eax,%eax
  41d597:	callq  413c40 <BIO_printf@plt>
  41d59c:	lea    -0x2b43(%rip),%rsi        # 41aa60 <X509_get0_pubkey_bitstr@plt+0x4090>
  41d5a3:	mov    %rbx,%rdi
  41d5a6:	callq  415c00 <EVP_PKEY_CTX_set_cb@plt>
  41d5ab:	mov    (%r15),%rsi
  41d5ae:	mov    %rbx,%rdi
  41d5b1:	callq  414590 <EVP_PKEY_CTX_set_app_data@plt>
  41d5b6:	lea    0x158(%rsp),%rsi
  41d5be:	mov    %rbx,%rdi
  41d5c1:	callq  412ec0 <EVP_PKEY_keygen@plt>
  41d5c6:	test   %eax,%eax
  41d5c8:	jle    41d7e6 <X509_get0_pubkey_bitstr@plt+0x6e16>
  41d5ce:	mov    %rbx,%rdi
  41d5d1:	callq  4143b0 <EVP_PKEY_CTX_free@plt>
  41d5d6:	mov    (%r15),%rsi
  41d5d9:	mov    %rbp,%rdi
  41d5dc:	callq  44a660 <X509_get0_pubkey_bitstr@plt+0x33c90>
  41d5e1:	cmpq   $0x0,0xa0(%rsp)
  41d5ea:	je     41d787 <X509_get0_pubkey_bitstr@plt+0x6db7>
  41d5f0:	mov    0xa0(%rsp),%rbx
  41d5f8:	mov    (%r15),%rdi
  41d5fb:	lea    0x41dc6(%rip),%rsi        # 45f3c8 <_fini+0x1ec4>
  41d602:	xor    %eax,%eax
  41d604:	mov    %rbx,%rdx
  41d607:	callq  413c40 <BIO_printf@plt>
  41d60c:	mov    %rbx,%rcx
  41d60f:	mov    $0x5,%edx
  41d614:	mov    $0x6c,%esi
  41d619:	mov    %r12,%rdi
  41d61c:	callq  412af0 <BIO_ctrl@plt>
  41d621:	test   %rax,%rax
  41d624:	jle    41d76e <X509_get0_pubkey_bitstr@plt+0x6d9e>
  41d62a:	mov    0x25dbf7(%rip),%rdi        # 67b228 <_edata+0x520>
  41d631:	lea    0x40e11(%rip),%rdx        # 45e449 <_fini+0xf45>
  41d638:	lea    0x48437(%rip),%rsi        # 465a76 <_fini+0x8572>
  41d63f:	callq  413fd0 <NCONF_get_string@plt>
  41d644:	test   %rax,%rax
  41d647:	je     41d71f <X509_get0_pubkey_bitstr@plt+0x6d4f>
  41d64d:	cmpb   $0x6e,(%rax)
  41d650:	jne    41d672 <X509_get0_pubkey_bitstr@plt+0x6ca2>
  41d652:	cmpb   $0x6f,0x1(%rax)
  41d656:	jne    41d672 <X509_get0_pubkey_bitstr@plt+0x6ca2>
  41d658:	cmpb   $0x0,0x2(%rax)
  41d65c:	mov    $0x0,%eax
  41d661:	cmovne 0xb0(%rsp),%rax
  41d66a:	mov    %rax,0xb0(%rsp)
  41d672:	mov    0xe0(%rsp),%eax
  41d679:	mov    $0x4,%ebx
  41d67e:	test   %eax,%eax
  41d680:	mov    $0x0,%eax
  41d685:	cmove  0xb0(%rsp),%rax
  41d68e:	mov    %rax,0xb0(%rsp)
  41d696:	mov    0x170(%rsp),%rax
  41d69e:	mov    0xb0(%rsp),%rdx
  41d6a6:	xor    %r9d,%r9d
  41d6a9:	mov    0x158(%rsp),%rsi
  41d6b1:	xor    %r8d,%r8d
  41d6b4:	xor    %ecx,%ecx
  41d6b6:	mov    %r12,%rdi
  41d6b9:	mov    %rax,(%rsp)
  41d6bd:	callq  4148c0 <PEM_write_bio_PrivateKey@plt>
  41d6c2:	test   %eax,%eax
  41d6c4:	jne    41d755 <X509_get0_pubkey_bitstr@plt+0x6d85>
  41d6ca:	callq  416380 <ERR_peek_error@plt>
  41d6cf:	and    $0xfff,%eax
  41d6d4:	cmp    $0x6d,%eax
  41d6d7:	jne    41b2e8 <X509_get0_pubkey_bitstr@plt+0x4918>
  41d6dd:	sub    $0x1,%ebx
  41d6e0:	je     41b2e8 <X509_get0_pubkey_bitstr@plt+0x4918>
  41d6e6:	callq  412890 <ERR_clear_error@plt>
  41d6eb:	nopl   0x0(%rax,%rax,1)
  41d6f0:	jmp    41d696 <X509_get0_pubkey_bitstr@plt+0x6cc6>
  41d6f2:	xor    %ebx,%ebx
  41d6f4:	jmpq   41d4fb <X509_get0_pubkey_bitstr@plt+0x6b2b>
  41d6f9:	mov    (%r15),%rdi
  41d6fc:	lea    0x4226b(%rip),%rsi        # 45f96e <_fini+0x246a>
  41d703:	mov    %r13,%rdx
  41d706:	xor    %eax,%eax
  41d708:	xor    %r14d,%r14d
  41d70b:	xor    %ebp,%ebp
  41d70d:	callq  413c40 <BIO_printf@plt>
  41d712:	mov    (%r15),%rdi
  41d715:	callq  413f40 <ERR_print_errors@plt>
  41d71a:	jmpq   41b6ab <X509_get0_pubkey_bitstr@plt+0x4cdb>
  41d71f:	nop
  41d720:	callq  412890 <ERR_clear_error@plt>
  41d725:	mov    0x25dafc(%rip),%rdi        # 67b228 <_edata+0x520>
  41d72c:	lea    0x40d26(%rip),%rdx        # 45e459 <_fini+0xf55>
  41d733:	lea    0x4833c(%rip),%rsi        # 465a76 <_fini+0x8572>
  41d73a:	callq  413fd0 <NCONF_get_string@plt>
  41d73f:	test   %rax,%rax
  41d742:	jne    41d64d <X509_get0_pubkey_bitstr@plt+0x6c7d>
  41d748:	callq  412890 <ERR_clear_error@plt>
  41d74d:	nopl   (%rax)
  41d750:	jmpq   41d672 <X509_get0_pubkey_bitstr@plt+0x6ca2>
  41d755:	mov    (%r15),%rdi
  41d758:	lea    0x40d06(%rip),%rsi        # 45e465 <_fini+0xf61>
  41d75f:	xor    %eax,%eax
  41d761:	xor    %r14d,%r14d
  41d764:	callq  413c40 <BIO_printf@plt>
  41d769:	jmpq   41bdde <X509_get0_pubkey_bitstr@plt+0x540e>
  41d76e:	mov    0xa0(%rsp),%rdi
  41d776:	xor    %ebx,%ebx
  41d778:	xor    %r14d,%r14d
  41d77b:	xor    %ebp,%ebp
  41d77d:	callq  4142c0 <perror@plt>
  41d782:	jmpq   41b6ab <X509_get0_pubkey_bitstr@plt+0x4cdb>
  41d787:	mov    0x25da9a(%rip),%rdi        # 67b228 <_edata+0x520>
  41d78e:	lea    0x40ca4(%rip),%rdx        # 45e439 <_fini+0xf35>
  41d795:	lea    0x482da(%rip),%rsi        # 465a76 <_fini+0x8572>
  41d79c:	callq  413fd0 <NCONF_get_string@plt>
  41d7a1:	test   %rax,%rax
  41d7a4:	mov    %rax,0xa0(%rsp)
  41d7ac:	jne    41d5f0 <X509_get0_pubkey_bitstr@plt+0x6c20>
  41d7b2:	callq  412890 <ERR_clear_error@plt>
  41d7b7:	mov    (%r15),%rdi
  41d7ba:	lea    0x4189f(%rip),%rsi        # 45f060 <_fini+0x1b5c>
  41d7c1:	xor    %eax,%eax
  41d7c3:	callq  413c40 <BIO_printf@plt>
  41d7c8:	mov    0x2586e9(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  41d7cf:	xor    %edx,%edx
  41d7d1:	mov    $0x6a,%esi
  41d7d6:	mov    %r12,%rdi
  41d7d9:	mov    (%rax),%rcx
  41d7dc:	callq  412af0 <BIO_ctrl@plt>
  41d7e1:	jmpq   41d62a <X509_get0_pubkey_bitstr@plt+0x6c5a>
  41d7e6:	mov    (%r15),%rdi
  41d7e9:	lea    0x40c33(%rip),%rsi        # 45e423 <_fini+0xf1f>
  41d7f0:	xor    %r14d,%r14d
  41d7f3:	xor    %ebp,%ebp
  41d7f5:	callq  413b70 <BIO_puts@plt>
  41d7fa:	jmpq   41b6ab <X509_get0_pubkey_bitstr@plt+0x4cdb>
  41d7ff:	mov    0x18(%rsp),%r9
  41d804:	mov    (%r15),%rdi
  41d807:	lea    0x160(%rsp),%rcx
  41d80f:	lea    0x13c(%rsp),%rdx
  41d817:	lea    0x150(%rsp),%r8
  41d81f:	xor    %esi,%esi
  41d821:	callq  416a22 <X509_get0_pubkey_bitstr@plt+0x52>
  41d826:	test   %rax,%rax
  41d829:	mov    %rax,%rbx
  41d82c:	jne    41d52b <X509_get0_pubkey_bitstr@plt+0x6b5b>
  41d832:	jmpq   41b2ea <X509_get0_pubkey_bitstr@plt+0x491a>
  41d837:	mov    0x25d9ea(%rip),%rdi        # 67b228 <_edata+0x520>
  41d83e:	lea    0x160(%rsp),%rcx
  41d846:	lea    0x40bc9(%rip),%rdx        # 45e416 <_fini+0xf12>
  41d84d:	lea    0x48222(%rip),%rsi        # 465a76 <_fini+0x8572>
  41d854:	callq  416450 <NCONF_get_number_e@plt>
  41d859:	test   %eax,%eax
  41d85b:	jne    41d4b9 <X509_get0_pubkey_bitstr@plt+0x6ae9>
  41d861:	movq   $0x200,0x160(%rsp)
  41d86d:	jmpq   41d4b9 <X509_get0_pubkey_bitstr@plt+0x6ae9>
  41d872:	mov    (%r15),%rdi
  41d875:	lea    0x41764(%rip),%rsi        # 45efe0 <_fini+0x1adc>
  41d87c:	xor    %eax,%eax
  41d87e:	xor    %r14d,%r14d
  41d881:	xor    %ebp,%ebp
  41d883:	callq  413c40 <BIO_printf@plt>
  41d888:	mov    0x160(%rsp),%rcx
  41d890:	mov    (%r15),%rdi
  41d893:	lea    0x4176e(%rip),%rsi        # 45f008 <_fini+0x1b04>
  41d89a:	mov    $0x180,%edx
  41d89f:	xor    %eax,%eax
  41d8a1:	callq  413c40 <BIO_printf@plt>
  41d8a6:	jmpq   41b6ab <X509_get0_pubkey_bitstr@plt+0x4cdb>
  41d8ab:	mov    %rdx,0x20(%rsp)
  41d8b0:	callq  412cd0 <sk_new_null@plt>
  41d8b5:	test   %rax,%rax
  41d8b8:	mov    %rax,0x28(%rsp)
  41d8bd:	mov    0x20(%rsp),%rdx
  41d8c2:	jne    41d3f5 <X509_get0_pubkey_bitstr@plt+0x6a25>
  41d8c8:	jmpq   41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41d8cd:	lea    0x40944(%rip),%rdi        # 45e218 <_fini+0xd14>
  41d8d4:	mov    %rax,%rsi
  41d8d7:	mov    %rbx,%rcx
  41d8da:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41d8dc:	jne    41da63 <X509_get0_pubkey_bitstr@plt+0x7093>
  41d8e2:	sub    $0x1,%r14d
  41d8e6:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41d8ec:	cmpq   $0x0,0x40(%rsp)
  41d8f2:	je     41da41 <X509_get0_pubkey_bitstr@plt+0x7071>
  41d8f8:	mov    0x8(%rdx),%rsi
  41d8fc:	mov    0x40(%rsp),%rdi
  41d901:	lea    0x8(%rdx),%r12
  41d905:	callq  412fe0 <sk_push@plt>
  41d90a:	test   %eax,%eax
  41d90c:	jne    41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41d912:	jmpq   41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41d917:	mov    0x25d90a(%rip),%rdi        # 67b228 <_edata+0x520>
  41d91e:	lea    0x40aae(%rip),%rdx        # 45e3d3 <_fini+0xecf>
  41d925:	lea    0x4814a(%rip),%rsi        # 465a76 <_fini+0x8572>
  41d92c:	callq  413fd0 <NCONF_get_string@plt>
  41d931:	test   %rax,%rax
  41d934:	mov    %rax,0x168(%rsp)
  41d93c:	jne    41b1b2 <X509_get0_pubkey_bitstr@plt+0x47e2>
  41d942:	callq  412890 <ERR_clear_error@plt>
  41d947:	jmpq   41b1b2 <X509_get0_pubkey_bitstr@plt+0x47e2>
  41d94c:	nopl   0x0(%rax)
  41d950:	callq  412890 <ERR_clear_error@plt>
  41d955:	jmpq   41b24a <X509_get0_pubkey_bitstr@plt+0x487a>
  41d95a:	lea    0x25d3ef(%rip),%rax        # 67ad50 <_edata+0x48>
  41d961:	mov    (%r15),%rdi
  41d964:	lea    0x415cd(%rip),%rsi        # 45ef38 <_fini+0x1a34>
  41d96b:	mov    (%rax),%rdx
  41d96e:	xor    %eax,%eax
  41d970:	callq  413c40 <BIO_printf@plt>
  41d975:	mov    0x60(%rsp),%esi
  41d979:	test   %esi,%esi
  41d97b:	jne    41b698 <X509_get0_pubkey_bitstr@plt+0x4cc8>
  41d981:	jmpq   41b0b9 <X509_get0_pubkey_bitstr@plt+0x46e9>
  41d986:	callq  414c30 <__stack_chk_fail@plt>
  41d98b:	nopl   0x0(%rax,%rax,1)
  41d990:	callq  412890 <ERR_clear_error@plt>
  41d995:	jmpq   41b1f7 <X509_get0_pubkey_bitstr@plt+0x4827>
  41d99a:	mov    0x25d887(%rip),%rdi        # 67b228 <_edata+0x520>
  41d9a1:	lea    0x40a3a(%rip),%rdx        # 45e3e2 <_fini+0xede>
  41d9a8:	lea    0x480c7(%rip),%rsi        # 465a76 <_fini+0x8572>
  41d9af:	callq  413fd0 <NCONF_get_string@plt>
  41d9b4:	test   %rax,%rax
  41d9b7:	mov    %rax,0x170(%rsp)
  41d9bf:	jne    41b1c1 <X509_get0_pubkey_bitstr@plt+0x47f1>
  41d9c5:	callq  412890 <ERR_clear_error@plt>
  41d9ca:	jmpq   41b1c1 <X509_get0_pubkey_bitstr@plt+0x47f1>
  41d9cf:	mov    0x25d852(%rip),%rdi        # 67b228 <_edata+0x520>
  41d9d6:	lea    0x409e6(%rip),%rdx        # 45e3c3 <_fini+0xebf>
  41d9dd:	lea    0x48092(%rip),%rsi        # 465a76 <_fini+0x8572>
  41d9e4:	callq  413fd0 <NCONF_get_string@plt>
  41d9e9:	test   %rax,%rax
  41d9ec:	mov    %rax,0x78(%rsp)
  41d9f1:	jne    41b157 <X509_get0_pubkey_bitstr@plt+0x4787>
  41d9f7:	callq  412890 <ERR_clear_error@plt>
  41d9fc:	jmpq   41b1a3 <X509_get0_pubkey_bitstr@plt+0x47d3>
  41da01:	mov    0x25d820(%rip),%rdi        # 67b228 <_edata+0x520>
  41da08:	lea    0x409a9(%rip),%rdx        # 45e3b8 <_fini+0xeb4>
  41da0f:	lea    0x48060(%rip),%rsi        # 465a76 <_fini+0x8572>
  41da16:	callq  413fd0 <NCONF_get_string@plt>
  41da1b:	test   %rax,%rax
  41da1e:	je     41da88 <X509_get0_pubkey_bitstr@plt+0x70b8>
  41da20:	mov    %rax,%rdi
  41da23:	callq  416720 <EVP_get_digestbyname@plt>
  41da28:	test   %rax,%rax
  41da2b:	cmove  0xb8(%rsp),%rax
  41da34:	mov    %rax,0xb8(%rsp)
  41da3c:	jmpq   41b14b <X509_get0_pubkey_bitstr@plt+0x477b>
  41da41:	mov    %rdx,0x20(%rsp)
  41da46:	callq  412cd0 <sk_new_null@plt>
  41da4b:	test   %rax,%rax
  41da4e:	mov    %rax,0x40(%rsp)
  41da53:	mov    0x20(%rsp),%rdx
  41da58:	jne    41d8f8 <X509_get0_pubkey_bitstr@plt+0x6f28>
  41da5e:	jmpq   41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41da63:	lea    0x407b6(%rip),%rdi        # 45e220 <_fini+0xd1c>
  41da6a:	mov    $0x7,%ecx
  41da6f:	mov    %rax,%rsi
  41da72:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41da74:	jne    41da92 <X509_get0_pubkey_bitstr@plt+0x70c2>
  41da76:	movl   $0x1,0x25d7a0(%rip)        # 67b220 <_edata+0x518>
  41da80:	mov    %rdx,%r12
  41da83:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41da88:	callq  412890 <ERR_clear_error@plt>
  41da8d:	jmpq   41b14b <X509_get0_pubkey_bitstr@plt+0x477b>
  41da92:	lea    0x4078e(%rip),%rdi        # 45e227 <_fini+0xd23>
  41da99:	mov    %rax,%rsi
  41da9c:	mov    %rbx,%rcx
  41da9f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41daa1:	je     41db6e <X509_get0_pubkey_bitstr@plt+0x719e>
  41daa7:	lea    0x40781(%rip),%rdi        # 45e22f <_fini+0xd2b>
  41daae:	mov    %rax,%rsi
  41dab1:	mov    $0x9,%ecx
  41dab6:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41dab8:	je     41dcc0 <X509_get0_pubkey_bitstr@plt+0x72f0>
  41dabe:	lea    0x40773(%rip),%rdi        # 45e238 <_fini+0xd34>
  41dac5:	mov    %rax,%rsi
  41dac8:	mov    %rbx,%rcx
  41dacb:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41dacd:	je     41dcad <X509_get0_pubkey_bitstr@plt+0x72dd>
  41dad3:	lea    0x40766(%rip),%rdi        # 45e240 <_fini+0xd3c>
  41dada:	mov    $0x7,%ecx
  41dadf:	mov    %rax,%rsi
  41dae2:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41dae4:	je     41dc9a <X509_get0_pubkey_bitstr@plt+0x72ca>
  41daea:	lea    0x401f6(%rip),%rdi        # 45dce7 <_fini+0x7e3>
  41daf1:	mov    $0x7,%ecx
  41daf6:	mov    %rax,%rsi
  41daf9:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41dafb:	je     41dc87 <X509_get0_pubkey_bitstr@plt+0x72b7>
  41db01:	lea    0x40068(%rip),%rdi        # 45db70 <_fini+0x66c>
  41db08:	mov    %rax,%rsi
  41db0b:	mov    $0x9,%ecx
  41db10:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41db12:	je     41dbcf <X509_get0_pubkey_bitstr@plt+0x71ff>
  41db18:	lea    0x40728(%rip),%rdi        # 45e247 <_fini+0xd43>
  41db1f:	mov    $0x6,%ecx
  41db24:	mov    %rax,%rsi
  41db27:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41db29:	je     41dbbe <X509_get0_pubkey_bitstr@plt+0x71ee>
  41db2f:	lea    0x40717(%rip),%rdi        # 45e24d <_fini+0xd49>
  41db36:	mov    %rax,%rsi
  41db39:	mov    $0x9,%ecx
  41db3e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41db40:	jne    41db81 <X509_get0_pubkey_bitstr@plt+0x71b1>
  41db42:	sub    $0x1,%r14d
  41db46:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41db4c:	mov    0x8(%rdx),%rsi
  41db50:	mov    0x118(%rsp),%rdi
  41db58:	lea    0x8(%rdx),%r12
  41db5c:	callq  446600 <X509_get0_pubkey_bitstr@plt+0x2fc30>
  41db61:	test   %eax,%eax
  41db63:	jne    41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41db69:	jmpq   41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41db6e:	mov    %rdx,%r12
  41db71:	movl   $0x1,0x104(%rsp)
  41db7c:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41db81:	lea    0x406ce(%rip),%rdi        # 45e256 <_fini+0xd52>
  41db88:	mov    %rax,%rsi
  41db8b:	mov    %rbx,%rcx
  41db8e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41db90:	jne    41dbe2 <X509_get0_pubkey_bitstr@plt+0x7212>
  41db92:	sub    $0x1,%r14d
  41db96:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41db9c:	mov    0x8(%rdx),%rsi
  41dba0:	mov    0x110(%rsp),%rdi
  41dba8:	lea    0x8(%rdx),%r12
  41dbac:	callq  4465f0 <X509_get0_pubkey_bitstr@plt+0x2fc20>
  41dbb1:	test   %eax,%eax
  41dbb3:	jne    41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41dbb9:	jmpq   41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41dbbe:	mov    %rdx,%r12
  41dbc1:	movq   $0x1000,0x70(%rsp)
  41dbca:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41dbcf:	mov    %rdx,%r12
  41dbd2:	movl   $0x1,0x90(%rsp)
  41dbdd:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41dbe2:	lea    0x40675(%rip),%rdi        # 45e25e <_fini+0xd5a>
  41dbe9:	mov    %rax,%rsi
  41dbec:	mov    $0x9,%ecx
  41dbf1:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41dbf3:	je     41ddeb <X509_get0_pubkey_bitstr@plt+0x741b>
  41dbf9:	lea    0x40667(%rip),%rdi        # 45e267 <_fini+0xd63>
  41dc00:	mov    $0x6,%ecx
  41dc05:	mov    %rax,%rsi
  41dc08:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41dc0a:	je     41ddd8 <X509_get0_pubkey_bitstr@plt+0x7408>
  41dc10:	lea    0x40656(%rip),%rdi        # 45e26d <_fini+0xd69>
  41dc17:	mov    $0x6,%ecx
  41dc1c:	mov    %rax,%rsi
  41dc1f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41dc21:	je     41ddfe <X509_get0_pubkey_bitstr@plt+0x742e>
  41dc27:	lea    0x40648(%rip),%rdi        # 45e276 <_fini+0xd72>
  41dc2e:	mov    $0xd,%ecx
  41dc33:	mov    %rax,%rsi
  41dc36:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41dc38:	je     41ddc5 <X509_get0_pubkey_bitstr@plt+0x73f5>
  41dc3e:	lea    0x4062e(%rip),%rdi        # 45e273 <_fini+0xd6f>
  41dc45:	mov    $0x10,%ecx
  41dc4a:	mov    %rax,%rsi
  41dc4d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41dc4f:	je     41dd31 <X509_get0_pubkey_bitstr@plt+0x7361>
  41dc55:	lea    0x40627(%rip),%rdi        # 45e283 <_fini+0xd7f>
  41dc5c:	mov    $0x6,%ecx
  41dc61:	mov    %rax,%rsi
  41dc64:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41dc66:	jne    41dcd3 <X509_get0_pubkey_bitstr@plt+0x7303>
  41dc68:	sub    $0x1,%r14d
  41dc6c:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41dc72:	mov    0x8(%rdx),%rax
  41dc76:	lea    0x8(%rdx),%r12
  41dc7a:	mov    %rax,0xa8(%rsp)
  41dc82:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41dc87:	mov    %rdx,%r12
  41dc8a:	movl   $0x1,0xd0(%rsp)
  41dc95:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41dc9a:	mov    %rdx,%r12
  41dc9d:	movl   $0x1,0xe0(%rsp)
  41dca8:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41dcad:	mov    %rdx,%r12
  41dcb0:	movl   $0x1,0x100(%rsp)
  41dcbb:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41dcc0:	mov    %rdx,%r12
  41dcc3:	movl   $0x1,0x94(%rsp)
  41dcce:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41dcd3:	lea    0x405af(%rip),%rdi        # 45e289 <_fini+0xd85>
  41dcda:	mov    $0x10,%ecx
  41dcdf:	mov    %rax,%rsi
  41dce2:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41dce4:	je     41dd83 <X509_get0_pubkey_bitstr@plt+0x73b3>
  41dcea:	lea    0x405a8(%rip),%rdi        # 45e299 <_fini+0xd95>
  41dcf1:	mov    $0x6,%ecx
  41dcf6:	mov    %rax,%rsi
  41dcf9:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41dcfb:	jne    41dd44 <X509_get0_pubkey_bitstr@plt+0x7374>
  41dcfd:	sub    $0x1,%r14d
  41dd01:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41dd07:	mov    0x8(%rdx),%rdi
  41dd0b:	xor    %esi,%esi
  41dd0d:	lea    0x8(%rdx),%r12
  41dd11:	mov    $0xa,%edx
  41dd16:	callq  4155d0 <strtol@plt>
  41dd1b:	mov    $0x1e,%edx
  41dd20:	test   %eax,%eax
  41dd22:	cmove  %edx,%eax
  41dd25:	mov    %eax,0xec(%rsp)
  41dd2c:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41dd31:	mov    %rdx,%r12
  41dd34:	movl   $0x0,0xc4(%rsp)
  41dd3f:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41dd44:	lea    0x40554(%rip),%rdi        # 45e29f <_fini+0xd9b>
  41dd4b:	mov    $0xc,%ecx
  41dd50:	mov    %rax,%rsi
  41dd53:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41dd55:	jne    41dd96 <X509_get0_pubkey_bitstr@plt+0x73c6>
  41dd57:	sub    $0x1,%r14d
  41dd5b:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41dd61:	mov    0x8(%rdx),%rsi
  41dd65:	xor    %edi,%edi
  41dd67:	lea    0x8(%rdx),%r12
  41dd6b:	callq  415200 <s2i_ASN1_INTEGER@plt>
  41dd70:	test   %rax,%rax
  41dd73:	mov    %rax,0x48(%rsp)
  41dd78:	jne    41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41dd7e:	jmpq   41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41dd83:	mov    %rdx,%r12
  41dd86:	movl   $0x1,0xe8(%rsp)
  41dd91:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41dd96:	lea    0x4050e(%rip),%rdi        # 45e2ab <_fini+0xda7>
  41dd9d:	mov    $0xc,%ecx
  41dda2:	mov    %rax,%rsi
  41dda5:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41dda7:	jne    41de11 <X509_get0_pubkey_bitstr@plt+0x7441>
  41dda9:	sub    $0x1,%r14d
  41ddad:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41ddb3:	mov    0x8(%rdx),%rax
  41ddb7:	lea    0x8(%rdx),%r12
  41ddbb:	mov    %rax,0x78(%rsp)
  41ddc0:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41ddc5:	mov    %rdx,%r12
  41ddc8:	movl   $0x1,0xc4(%rsp)
  41ddd3:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41ddd8:	mov    %rdx,%r12
  41dddb:	movl   $0x1,0xd4(%rsp)
  41dde6:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41ddeb:	mov    %rdx,%r12
  41ddee:	movl   $0x1,0xc0(%rsp)
  41ddf9:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41ddfe:	mov    %rdx,%r12
  41de01:	movl   $0x1,0x84(%rsp)
  41de0c:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41de11:	lea    0x4049f(%rip),%rdi        # 45e2b7 <_fini+0xdb3>
  41de18:	mov    %rax,%rsi
  41de1b:	mov    $0x9,%ecx
  41de20:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41de22:	jne    41de43 <X509_get0_pubkey_bitstr@plt+0x7473>
  41de24:	sub    $0x1,%r14d
  41de28:	je     41b3d0 <X509_get0_pubkey_bitstr@plt+0x4a00>
  41de2e:	mov    0x8(%rdx),%rax
  41de32:	lea    0x8(%rdx),%r12
  41de36:	mov    %rax,0x88(%rsp)
  41de3e:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41de43:	lea    0x1(%rax),%rdi
  41de47:	mov    %rdx,0x20(%rsp)
  41de4c:	callq  416720 <EVP_get_digestbyname@plt>
  41de51:	test   %rax,%rax
  41de54:	mov    %rax,0xd8(%rsp)
  41de5c:	mov    0x20(%rsp),%rdx
  41de61:	je     41b3b7 <X509_get0_pubkey_bitstr@plt+0x49e7>
  41de67:	mov    0xd8(%rsp),%rax
  41de6f:	mov    %rdx,%r12
  41de72:	mov    %rax,0xb8(%rsp)
  41de7a:	jmpq   41afda <X509_get0_pubkey_bitstr@plt+0x460a>
  41de7f:	nop
  41de80:	push   %r14
  41de82:	mov    %rsi,%r14
  41de85:	push   %r13
  41de87:	mov    %rcx,%r13
  41de8a:	push   %r12
  41de8c:	mov    %rdx,%r12
  41de8f:	push   %rbp
  41de90:	mov    %rdi,%rbp
  41de93:	push   %rbx
  41de94:	sub    $0x50,%rsp
  41de98:	lea    0x10(%rsp),%rbx
  41de9d:	mov    %r8,0x8(%rsp)
  41dea2:	mov    %fs:0x28,%rax
  41deab:	mov    %rax,0x48(%rsp)
  41deb0:	xor    %eax,%eax
  41deb2:	mov    %rbx,%rdi
  41deb5:	callq  4160a0 <EVP_MD_CTX_init@plt>
  41deba:	mov    0x8(%rsp),%r8
  41debf:	mov    %rbp,%rdi
  41dec2:	mov    %r13,%rcx
  41dec5:	mov    %r12,%rdx
  41dec8:	mov    %rbx,%rsi
  41decb:	callq  41ab10 <X509_get0_pubkey_bitstr@plt+0x4140>
  41ded0:	test   %eax,%eax
  41ded2:	mov    %eax,%ebp
  41ded4:	jle    41dee3 <X509_get0_pubkey_bitstr@plt+0x7513>
  41ded6:	mov    %rbx,%rsi
  41ded9:	mov    %r14,%rdi
  41dedc:	callq  414710 <X509_CRL_sign_ctx@plt>
  41dee1:	mov    %eax,%ebp
  41dee3:	mov    %rbx,%rdi
  41dee6:	callq  415110 <EVP_MD_CTX_cleanup@plt>
  41deeb:	xor    %eax,%eax
  41deed:	test   %ebp,%ebp
  41deef:	setg   %al
  41def2:	mov    0x48(%rsp),%rdx
  41def7:	xor    %fs:0x28,%rdx
  41df00:	jne    41df0f <X509_get0_pubkey_bitstr@plt+0x753f>
  41df02:	add    $0x50,%rsp
  41df06:	pop    %rbx
  41df07:	pop    %rbp
  41df08:	pop    %r12
  41df0a:	pop    %r13
  41df0c:	pop    %r14
  41df0e:	retq   
  41df0f:	callq  414c30 <__stack_chk_fail@plt>
  41df14:	nopw   %cs:0x0(%rax,%rax,1)
  41df1e:	xchg   %ax,%ax
  41df20:	push   %r13
  41df22:	push   %r12
  41df24:	push   %rbp
  41df25:	push   %rbx
  41df26:	mov    %rdi,%rbx
  41df29:	sub    $0x8,%rsp
  41df2d:	test   %rdi,%rdi
  41df30:	je     41df56 <X509_get0_pubkey_bitstr@plt+0x7586>
  41df32:	mov    %rsi,%r12
  41df35:	mov    %rcx,%r13
  41df38:	callq  415290 <EVP_MD_type@plt>
  41df3d:	mov    %eax,%edi
  41df3f:	callq  413920 <OBJ_nid2ln@plt>
  41df44:	mov    %r12,%rdi
  41df47:	mov    %rax,%rsi
  41df4a:	mov    %rax,%rbp
  41df4d:	callq  4155c0 <strcmp@plt>
  41df52:	test   %eax,%eax
  41df54:	je     41df68 <X509_get0_pubkey_bitstr@plt+0x7598>
  41df56:	add    $0x8,%rsp
  41df5a:	pop    %rbx
  41df5b:	pop    %rbp
  41df5c:	pop    %r12
  41df5e:	pop    %r13
  41df60:	retq   
  41df61:	nopl   0x0(%rax)
  41df68:	mov    %rbx,%rdi
  41df6b:	callq  412a20 <EVP_MD_flags@plt>
  41df70:	test   $0x2,%al
  41df72:	jne    41df56 <X509_get0_pubkey_bitstr@plt+0x7586>
  41df74:	mov    $0x20,%esi
  41df79:	mov    %rbp,%rdi
  41df7c:	callq  413220 <strchr@plt>
  41df81:	test   %rax,%rax
  41df84:	je     41df98 <X509_get0_pubkey_bitstr@plt+0x75c8>
  41df86:	mov    %rbx,%rdi
  41df89:	callq  415290 <EVP_MD_type@plt>
  41df8e:	mov    %eax,%edi
  41df90:	callq  415b30 <OBJ_nid2sn@plt>
  41df95:	mov    %rax,%rbp
  41df98:	add    $0x8,%rsp
  41df9c:	mov    %rbp,%rcx
  41df9f:	mov    %rbp,%rdx
  41dfa2:	pop    %rbx
  41dfa3:	pop    %rbp
  41dfa4:	pop    %r12
  41dfa6:	mov    %r13,%rdi
  41dfa9:	lea    0x41440(%rip),%rsi        # 45f3f0 <_fini+0x1eec>
  41dfb0:	xor    %eax,%eax
  41dfb2:	pop    %r13
  41dfb4:	jmpq   413c40 <BIO_printf@plt>
  41dfb9:	nopl   0x0(%rax)
  41dfc0:	push   %r15
  41dfc2:	push   %r14
  41dfc4:	mov    %ecx,%r14d
  41dfc7:	push   %r13
  41dfc9:	push   %r12
  41dfcb:	mov    %rdi,%r12
  41dfce:	push   %rbp
  41dfcf:	mov    %rdx,%rbp
  41dfd2:	push   %rbx
  41dfd3:	mov    %rsi,%rbx
  41dfd6:	sub    $0x48,%rsp
  41dfda:	mov    0x90(%rsp),%rax
  41dfe2:	mov    %r8d,0xc(%rsp)
  41dfe7:	mov    %r9,(%rsp)
  41dfeb:	mov    0x80(%rsp),%r13
  41dff3:	mov    0xa0(%rsp),%r15
  41dffb:	mov    %rax,0x10(%rsp)
  41e000:	mov    0x98(%rsp),%rax
  41e008:	mov    %rax,0x18(%rsp)
  41e00d:	mov    %fs:0x28,%rax
  41e016:	mov    %rax,0x38(%rsp)
  41e01b:	xor    %eax,%eax
  41e01d:	jmp    41e022 <X509_get0_pubkey_bitstr@plt+0x7652>
  41e01f:	nop
  41e020:	je     41e088 <X509_get0_pubkey_bitstr@plt+0x76b8>
  41e022:	mov    $0x2000,%edx
  41e027:	mov    %rbx,%rsi
  41e02a:	mov    %rbp,%rdi
  41e02d:	callq  413930 <BIO_read@plt>
  41e032:	test   %eax,%eax
  41e034:	jns    41e020 <X509_get0_pubkey_bitstr@plt+0x7650>
  41e036:	lea    0x25cd03(%rip),%rbx        # 67ad40 <_edata+0x38>
  41e03d:	lea    0x417dd(%rip),%rsi        # 45f821 <_fini+0x231d>
  41e044:	mov    %r15,%rdx
  41e047:	xor    %eax,%eax
  41e049:	mov    (%rbx),%rdi
  41e04c:	callq  413c40 <BIO_printf@plt>
  41e051:	mov    (%rbx),%rdi
  41e054:	callq  413f40 <ERR_print_errors@plt>
  41e059:	mov    $0x1,%eax
  41e05e:	mov    0x38(%rsp),%rcx
  41e063:	xor    %fs:0x28,%rcx
  41e06c:	jne    41e30d <X509_get0_pubkey_bitstr@plt+0x793d>
  41e072:	add    $0x48,%rsp
  41e076:	pop    %rbx
  41e077:	pop    %rbp
  41e078:	pop    %r12
  41e07a:	pop    %r13
  41e07c:	pop    %r14
  41e07e:	pop    %r15
  41e080:	retq   
  41e081:	nopl   0x0(%rax)
  41e088:	test   %r13,%r13
  41e08b:	je     41e0f8 <X509_get0_pubkey_bitstr@plt+0x7728>
  41e08d:	lea    0x30(%rsp),%rcx
  41e092:	xor    %edx,%edx
  41e094:	mov    $0x78,%esi
  41e099:	mov    %rbp,%rdi
  41e09c:	callq  412af0 <BIO_ctrl@plt>
  41e0a1:	mov    0x88(%rsp),%edx
  41e0a8:	mov    0x30(%rsp),%rdi
  41e0ad:	mov    %r13,%rsi
  41e0b0:	callq  415ef0 <EVP_DigestVerifyFinal@plt>
  41e0b5:	cmp    $0x0,%eax
  41e0b8:	jle    41e0d0 <X509_get0_pubkey_bitstr@plt+0x7700>
  41e0ba:	lea    0x41772(%rip),%rsi        # 45f833 <_fini+0x232f>
  41e0c1:	mov    %r12,%rdi
  41e0c4:	xor    %eax,%eax
  41e0c6:	callq  413c40 <BIO_printf@plt>
  41e0cb:	xor    %eax,%eax
  41e0cd:	jmp    41e05e <X509_get0_pubkey_bitstr@plt+0x768e>
  41e0cf:	nop
  41e0d0:	jne    41e1cd <X509_get0_pubkey_bitstr@plt+0x77fd>
  41e0d6:	lea    0x41763(%rip),%rsi        # 45f840 <_fini+0x233c>
  41e0dd:	mov    %r12,%rdi
  41e0e0:	xor    %eax,%eax
  41e0e2:	callq  413c40 <BIO_printf@plt>
  41e0e7:	mov    $0x1,%eax
  41e0ec:	jmpq   41e05e <X509_get0_pubkey_bitstr@plt+0x768e>
  41e0f1:	nopl   0x0(%rax)
  41e0f8:	cmpq   $0x0,(%rsp)
  41e0fd:	je     41e2bb <X509_get0_pubkey_bitstr@plt+0x78eb>
  41e103:	lea    0x30(%rsp),%rcx
  41e108:	xor    %edx,%edx
  41e10a:	mov    $0x78,%esi
  41e10f:	mov    %rbp,%rdi
  41e112:	callq  412af0 <BIO_ctrl@plt>
  41e117:	mov    0x30(%rsp),%rdi
  41e11c:	lea    0x28(%rsp),%rdx
  41e121:	mov    %rbx,%rsi
  41e124:	movq   $0x2000,0x28(%rsp)
  41e12d:	callq  4137e0 <EVP_DigestSignFinal@plt>
  41e132:	test   %eax,%eax
  41e134:	je     41e27d <X509_get0_pubkey_bitstr@plt+0x78ad>
  41e13a:	mov    0xc(%rsp),%ecx
  41e13e:	test   %ecx,%ecx
  41e140:	jne    41e2a5 <X509_get0_pubkey_bitstr@plt+0x78d5>
  41e146:	cmp    $0x2,%r14d
  41e14a:	je     41e236 <X509_get0_pubkey_bitstr@plt+0x7866>
  41e150:	mov    0x10(%rsp),%rdx
  41e155:	test   %rdx,%rdx
  41e158:	je     41e1f7 <X509_get0_pubkey_bitstr@plt+0x7827>
  41e15e:	mov    0x18(%rsp),%rcx
  41e163:	lea    0x4171c(%rip),%rsi        # 45f886 <_fini+0x2382>
  41e16a:	mov    %r15,%r8
  41e16d:	mov    %r12,%rdi
  41e170:	xor    %eax,%eax
  41e172:	callq  413c40 <BIO_printf@plt>
  41e177:	mov    0x28(%rsp),%eax
  41e17b:	xor    %ebp,%ebp
  41e17d:	test   %eax,%eax
  41e17f:	jg     41e194 <X509_get0_pubkey_bitstr@plt+0x77c4>
  41e181:	jmpq   41e21e <X509_get0_pubkey_bitstr@plt+0x784e>
  41e186:	nopw   %cs:0x0(%rax,%rax,1)
  41e190:	add    $0x1,%rbx
  41e194:	movzbl (%rbx),%edx
  41e197:	lea    0x4da08(%rip),%rsi        # 46bba6 <_fini+0xe6a2>
  41e19e:	xor    %eax,%eax
  41e1a0:	mov    %r12,%rdi
  41e1a3:	add    $0x1,%ebp
  41e1a6:	callq  413c40 <BIO_printf@plt>
  41e1ab:	cmp    0x28(%rsp),%ebp
  41e1af:	jge    41e21e <X509_get0_pubkey_bitstr@plt+0x784e>
  41e1b1:	test   %r14d,%r14d
  41e1b4:	je     41e190 <X509_get0_pubkey_bitstr@plt+0x77c0>
  41e1b6:	test   %ebp,%ebp
  41e1b8:	je     41e190 <X509_get0_pubkey_bitstr@plt+0x77c0>
  41e1ba:	lea    0x4bb96(%rip),%rsi        # 469d57 <_fini+0xc853>
  41e1c1:	mov    %r12,%rdi
  41e1c4:	xor    %eax,%eax
  41e1c6:	callq  413c40 <BIO_printf@plt>
  41e1cb:	jmp    41e190 <X509_get0_pubkey_bitstr@plt+0x77c0>
  41e1cd:	lea    0x25cb6c(%rip),%rbx        # 67ad40 <_edata+0x38>
  41e1d4:	lea    0x4167b(%rip),%rsi        # 45f856 <_fini+0x2352>
  41e1db:	xor    %eax,%eax
  41e1dd:	mov    (%rbx),%rdi
  41e1e0:	callq  413c40 <BIO_printf@plt>
  41e1e5:	mov    (%rbx),%rdi
  41e1e8:	callq  413f40 <ERR_print_errors@plt>
  41e1ed:	mov    $0x1,%eax
  41e1f2:	jmpq   41e05e <X509_get0_pubkey_bitstr@plt+0x768e>
  41e1f7:	mov    0x18(%rsp),%rdx
  41e1fc:	test   %rdx,%rdx
  41e1ff:	je     41e2f4 <X509_get0_pubkey_bitstr@plt+0x7924>
  41e205:	lea    0x4167d(%rip),%rsi        # 45f889 <_fini+0x2385>
  41e20c:	mov    %r15,%rcx
  41e20f:	mov    %r12,%rdi
  41e212:	xor    %eax,%eax
  41e214:	callq  413c40 <BIO_printf@plt>
  41e219:	jmpq   41e177 <X509_get0_pubkey_bitstr@plt+0x77a7>
  41e21e:	lea    0x4697a(%rip),%rsi        # 464b9f <_fini+0x769b>
  41e225:	mov    %r12,%rdi
  41e228:	xor    %eax,%eax
  41e22a:	callq  413c40 <BIO_printf@plt>
  41e22f:	xor    %eax,%eax
  41e231:	jmpq   41e05e <X509_get0_pubkey_bitstr@plt+0x768e>
  41e236:	mov    0x28(%rsp),%edx
  41e23a:	xor    %ebp,%ebp
  41e23c:	test   %edx,%edx
  41e23e:	jle    41e262 <X509_get0_pubkey_bitstr@plt+0x7892>
  41e240:	movzbl (%rbx,%rbp,1),%edx
  41e244:	lea    0x4d95b(%rip),%rsi        # 46bba6 <_fini+0xe6a2>
  41e24b:	xor    %eax,%eax
  41e24d:	mov    %r12,%rdi
  41e250:	callq  413c40 <BIO_printf@plt>
  41e255:	lea    0x1(%rbp),%eax
  41e258:	add    $0x1,%rbp
  41e25c:	cmp    0x28(%rsp),%eax
  41e260:	jl     41e240 <X509_get0_pubkey_bitstr@plt+0x7870>
  41e262:	lea    0x41617(%rip),%rsi        # 45f880 <_fini+0x237c>
  41e269:	mov    %r15,%rdx
  41e26c:	mov    %r12,%rdi
  41e26f:	xor    %eax,%eax
  41e271:	callq  413c40 <BIO_printf@plt>
  41e276:	xor    %eax,%eax
  41e278:	jmpq   41e05e <X509_get0_pubkey_bitstr@plt+0x768e>
  41e27d:	lea    0x25cabc(%rip),%rbx        # 67ad40 <_edata+0x38>
  41e284:	lea    0x415e1(%rip),%rsi        # 45f86c <_fini+0x2368>
  41e28b:	mov    (%rbx),%rdi
  41e28e:	callq  413c40 <BIO_printf@plt>
  41e293:	mov    (%rbx),%rdi
  41e296:	callq  413f40 <ERR_print_errors@plt>
  41e29b:	mov    $0x1,%eax
  41e2a0:	jmpq   41e05e <X509_get0_pubkey_bitstr@plt+0x768e>
  41e2a5:	mov    0x28(%rsp),%edx
  41e2a9:	mov    %rbx,%rsi
  41e2ac:	mov    %r12,%rdi
  41e2af:	callq  412db0 <BIO_write@plt>
  41e2b4:	xor    %eax,%eax
  41e2b6:	jmpq   41e05e <X509_get0_pubkey_bitstr@plt+0x768e>
  41e2bb:	mov    $0x2000,%edx
  41e2c0:	mov    %rbx,%rsi
  41e2c3:	mov    %rbp,%rdi
  41e2c6:	callq  4138a0 <BIO_gets@plt>
  41e2cb:	movslq %eax,%rdx
  41e2ce:	test   %eax,%eax
  41e2d0:	mov    %rdx,0x28(%rsp)
  41e2d5:	jns    41e13a <X509_get0_pubkey_bitstr@plt+0x776a>
  41e2db:	lea    0x25ca5e(%rip),%rax        # 67ad40 <_edata+0x38>
  41e2e2:	mov    (%rax),%rdi
  41e2e5:	callq  413f40 <ERR_print_errors@plt>
  41e2ea:	mov    $0x1,%eax
  41e2ef:	jmpq   41e05e <X509_get0_pubkey_bitstr@plt+0x768e>
  41e2f4:	lea    0x41590(%rip),%rsi        # 45f88b <_fini+0x2387>
  41e2fb:	mov    %r15,%rdx
  41e2fe:	mov    %r12,%rdi
  41e301:	xor    %eax,%eax
  41e303:	callq  413c40 <BIO_printf@plt>
  41e308:	jmpq   41e177 <X509_get0_pubkey_bitstr@plt+0x77a7>
  41e30d:	callq  414c30 <__stack_chk_fail@plt>
  41e312:	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41e320:	push   %r15
  41e322:	push   %r14
  41e324:	push   %r13
  41e326:	mov    %edi,%r13d
  41e329:	mov    $0xd,%edi
  41e32e:	push   %r12
  41e330:	push   %rbp
  41e331:	mov    %rsi,%rbp
  41e334:	mov    $0x1,%esi
  41e339:	push   %rbx
  41e33a:	sub    $0x108,%rsp
  41e341:	mov    %fs:0x28,%rax
  41e34a:	mov    %rax,0xf8(%rsp)
  41e352:	xor    %eax,%eax
  41e354:	movq   $0x0,0xb0(%rsp)
  41e360:	movq   $0x0,0xb8(%rsp)
  41e36c:	callq  414ee0 <signal@plt>
  41e371:	lea    0x41534(%rip),%rsi        # 45f8ac <_fini+0x23a8>
  41e378:	mov    $0x87,%edx
  41e37d:	mov    $0x2000,%edi
  41e382:	callq  413d50 <CRYPTO_malloc@plt>
  41e387:	test   %rax,%rax
  41e38a:	mov    %rax,%rbx
  41e38d:	je     41e8b0 <X509_get0_pubkey_bitstr@plt+0x7ee0>
  41e393:	lea    0x25c9a6(%rip),%rax        # 67ad40 <_edata+0x38>
  41e39a:	mov    (%rax),%rdi
  41e39d:	test   %rdi,%rdi
  41e3a0:	je     41e8f0 <X509_get0_pubkey_bitstr@plt+0x7f20>
  41e3a6:	xor    %esi,%esi
  41e3a8:	xor    %r12d,%r12d
  41e3ab:	xor    %r15d,%r15d
  41e3ae:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  41e3b3:	test   %eax,%eax
  41e3b5:	jne    41e470 <X509_get0_pubkey_bitstr@plt+0x7aa0>
  41e3bb:	mov    $0x2000,%esi
  41e3c0:	mov    %rbx,%rdi
  41e3c3:	mov    $0x1,%r14d
  41e3c9:	callq  413ef0 <OPENSSL_cleanse@plt>
  41e3ce:	mov    %rbx,%rdi
  41e3d1:	xor    %ebp,%ebp
  41e3d3:	xor    %r13d,%r13d
  41e3d6:	callq  415020 <CRYPTO_free@plt>
  41e3db:	movq   $0x0,0x38(%rsp)
  41e3e4:	mov    0xb8(%rsp),%rdi
  41e3ec:	test   %rdi,%rdi
  41e3ef:	je     41e3f6 <X509_get0_pubkey_bitstr@plt+0x7a26>
  41e3f1:	callq  415020 <CRYPTO_free@plt>
  41e3f6:	mov    0x38(%rsp),%rdi
  41e3fb:	callq  416570 <BIO_free_all@plt>
  41e400:	mov    0xb0(%rsp),%rdi
  41e408:	callq  412b00 <EVP_PKEY_free@plt>
  41e40d:	test   %r15,%r15
  41e410:	je     41e41a <X509_get0_pubkey_bitstr@plt+0x7a4a>
  41e412:	mov    %r15,%rdi
  41e415:	callq  4143f0 <sk_free@plt>
  41e41a:	test   %r12,%r12
  41e41d:	je     41e427 <X509_get0_pubkey_bitstr@plt+0x7a57>
  41e41f:	mov    %r12,%rdi
  41e422:	callq  4143f0 <sk_free@plt>
  41e427:	test   %r13,%r13
  41e42a:	je     41e434 <X509_get0_pubkey_bitstr@plt+0x7a64>
  41e42c:	mov    %r13,%rdi
  41e42f:	callq  415020 <CRYPTO_free@plt>
  41e434:	test   %rbp,%rbp
  41e437:	je     41e441 <X509_get0_pubkey_bitstr@plt+0x7a71>
  41e439:	mov    %rbp,%rdi
  41e43c:	callq  413960 <BIO_free@plt>
  41e441:	mov    0xf8(%rsp),%rbx
  41e449:	xor    %fs:0x28,%rbx
  41e452:	mov    %r14d,%eax
  41e455:	jne    41f71e <X509_get0_pubkey_bitstr@plt+0x8d4e>
  41e45b:	add    $0x108,%rsp
  41e462:	pop    %rbx
  41e463:	pop    %rbp
  41e464:	pop    %r12
  41e466:	pop    %r13
  41e468:	pop    %r14
  41e46a:	pop    %r15
  41e46c:	retq   
  41e46d:	nopl   (%rax)
  41e470:	lea    0xd0(%rsp),%rax
  41e478:	mov    0x0(%rbp),%rdi
  41e47c:	mov    $0x28,%edx
  41e481:	mov    %rax,%r14
  41e484:	mov    %rax,%rsi
  41e487:	mov    %rax,0xa8(%rsp)
  41e48f:	callq  4456d0 <X509_get0_pubkey_bitstr@plt+0x2ed00>
  41e494:	mov    %r14,%rdi
  41e497:	lea    -0x1(%r13),%r14d
  41e49b:	callq  416720 <EVP_get_digestbyname@plt>
  41e4a0:	test   %r14d,%r14d
  41e4a3:	mov    %rax,0x98(%rsp)
  41e4ab:	lea    0x8(%rbp),%r11
  41e4af:	jle    41f1cc <X509_get0_pubkey_bitstr@plt+0x87fc>
  41e4b5:	mov    0x8(%rbp),%rbp
  41e4b9:	cmpb   $0x2d,0x0(%rbp)
  41e4bd:	jne    41f1cc <X509_get0_pubkey_bitstr@plt+0x87fc>
  41e4c3:	movl   $0x0,0xa4(%rsp)
  41e4ce:	movq   $0x0,0x78(%rsp)
  41e4d7:	xor    %r8d,%r8d
  41e4da:	movq   $0x0,0x70(%rsp)
  41e4e3:	movq   $0x0,0x38(%rsp)
  41e4ec:	xor    %r13d,%r13d
  41e4ef:	movl   $0x0,0x8c(%rsp)
  41e4fa:	movl   $0xffffffff,0x68(%rsp)
  41e502:	xor    %r10d,%r10d
  41e505:	movq   $0x0,0x50(%rsp)
  41e50e:	movq   $0x0,0x58(%rsp)
  41e517:	mov    $0x6,%r9d
  41e51d:	movq   $0x0,0x48(%rsp)
  41e526:	movl   $0x3,0xa0(%rsp)
  41e531:	movl   $0x0,0x60(%rsp)
  41e539:	movq   $0x0,0x80(%rsp)
  41e545:	jmp    41e58f <X509_get0_pubkey_bitstr@plt+0x7bbf>
  41e547:	nopw   0x0(%rax,%rax,1)
  41e550:	lea    0x3fcaa(%rip),%rdi        # 45e201 <_fini+0xcfd>
  41e557:	mov    %rbp,%rsi
  41e55a:	mov    %r9,%rcx
  41e55d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41e55f:	jne    41e600 <X509_get0_pubkey_bitstr@plt+0x7c30>
  41e565:	sub    $0x1,%r14d
  41e569:	je     41e690 <X509_get0_pubkey_bitstr@plt+0x7cc0>
  41e56f:	mov    0x8(%r11),%r13
  41e573:	lea    0x8(%r11),%rbp
  41e577:	sub    $0x1,%r14d
  41e57b:	lea    0x8(%rbp),%r11
  41e57f:	je     41e5c0 <X509_get0_pubkey_bitstr@plt+0x7bf0>
  41e581:	mov    0x8(%rbp),%rbp
  41e585:	cmpb   $0x2d,0x0(%rbp)
  41e589:	jne    41e690 <X509_get0_pubkey_bitstr@plt+0x7cc0>
  41e58f:	movzbl 0x0(%rbp),%edx
  41e593:	sub    $0x2d,%edx
  41e596:	jne    41e550 <X509_get0_pubkey_bitstr@plt+0x7b80>
  41e598:	movzbl 0x1(%rbp),%eax
  41e59c:	cmp    $0x63,%al
  41e59e:	je     41e5e0 <X509_get0_pubkey_bitstr@plt+0x7c10>
  41e5a0:	cmp    $0x72,%al
  41e5a2:	jne    41e550 <X509_get0_pubkey_bitstr@plt+0x7b80>
  41e5a4:	cmpb   $0x0,0x2(%rbp)
  41e5a8:	jne    41e550 <X509_get0_pubkey_bitstr@plt+0x7b80>
  41e5aa:	mov    %r11,%rbp
  41e5ad:	sub    $0x1,%r14d
  41e5b1:	mov    $0x2,%r10d
  41e5b7:	lea    0x8(%rbp),%r11
  41e5bb:	jne    41e581 <X509_get0_pubkey_bitstr@plt+0x7bb1>
  41e5bd:	nopl   (%rax)
  41e5c0:	mov    %r10d,0x6c(%rsp)
  41e5c5:	cmpq   $0x0,0x50(%rsp)
  41e5cb:	mov    %r8d,%esi
  41e5ce:	mov    %r8b,0x88(%rsp)
  41e5d6:	sete   %al
  41e5d9:	and    %esi,%eax
  41e5db:	jmpq   41e6ab <X509_get0_pubkey_bitstr@plt+0x7cdb>
  41e5e0:	cmpb   $0x0,0x2(%rbp)
  41e5e4:	jne    41e550 <X509_get0_pubkey_bitstr@plt+0x7b80>
  41e5ea:	mov    %r11,%rbp
  41e5ed:	mov    $0x1,%r10d
  41e5f3:	jmpq   41e577 <X509_get0_pubkey_bitstr@plt+0x7ba7>
  41e5f8:	nopl   0x0(%rax,%rax,1)
  41e600:	lea    0x3f83f(%rip),%rdi        # 45de46 <_fini+0x942>
  41e607:	mov    $0x5,%ecx
  41e60c:	mov    %rbp,%rsi
  41e60f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41e611:	jne    41e630 <X509_get0_pubkey_bitstr@plt+0x7c60>
  41e613:	sub    $0x1,%r14d
  41e617:	je     41e690 <X509_get0_pubkey_bitstr@plt+0x7cc0>
  41e619:	mov    0x8(%r11),%rax
  41e61d:	lea    0x8(%r11),%rbp
  41e621:	mov    %rax,0x48(%rsp)
  41e626:	jmpq   41e577 <X509_get0_pubkey_bitstr@plt+0x7ba7>
  41e62b:	nopl   0x0(%rax,%rax,1)
  41e630:	lea    0x4128b(%rip),%rdi        # 45f8c2 <_fini+0x23be>
  41e637:	mov    %rbp,%rsi
  41e63a:	mov    %r9,%rcx
  41e63d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41e63f:	je     41e670 <X509_get0_pubkey_bitstr@plt+0x7ca0>
  41e641:	lea    0x3fba8(%rip),%rdi        # 45e1f0 <_fini+0xcec>
  41e648:	mov    $0x8,%ecx
  41e64d:	mov    %rbp,%rsi
  41e650:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41e652:	jne    41e840 <X509_get0_pubkey_bitstr@plt+0x7e70>
  41e658:	sub    $0x1,%r14d
  41e65c:	je     41e690 <X509_get0_pubkey_bitstr@plt+0x7cc0>
  41e65e:	mov    0x8(%r11),%rax
  41e662:	lea    0x8(%r11),%rbp
  41e666:	mov    %rax,0x38(%rsp)
  41e66b:	jmpq   41e577 <X509_get0_pubkey_bitstr@plt+0x7ba7>
  41e670:	sub    $0x1,%r14d
  41e674:	je     41e690 <X509_get0_pubkey_bitstr@plt+0x7cc0>
  41e676:	mov    0x8(%r11),%rax
  41e67a:	lea    0x8(%r11),%rbp
  41e67e:	mov    %rax,0x58(%rsp)
  41e683:	jmpq   41e577 <X509_get0_pubkey_bitstr@plt+0x7ba7>
  41e688:	nopl   0x0(%rax,%rax,1)
  41e690:	mov    %r10d,0x6c(%rsp)
  41e695:	cmpq   $0x0,0x50(%rsp)
  41e69b:	mov    %r8d,%ecx
  41e69e:	mov    %r8b,0x88(%rsp)
  41e6a6:	sete   %al
  41e6a9:	and    %ecx,%eax
  41e6ab:	test   %al,%al
  41e6ad:	jne    41e890 <X509_get0_pubkey_bitstr@plt+0x7ec0>
  41e6b3:	test   %r14d,%r14d
  41e6b6:	jle    41e6c4 <X509_get0_pubkey_bitstr@plt+0x7cf4>
  41e6b8:	mov    (%r11),%rdx
  41e6bb:	cmpb   $0x2d,(%rdx)
  41e6be:	je     41ef6c <X509_get0_pubkey_bitstr@plt+0x859c>
  41e6c4:	mov    %r11,0x90(%rsp)
  41e6cc:	callq  4152b0 <BIO_s_file@plt>
  41e6d1:	mov    %rax,%rdi
  41e6d4:	callq  414a20 <BIO_new@plt>
  41e6d9:	mov    %rax,0x40(%rsp)
  41e6de:	callq  415df0 <BIO_f_md@plt>
  41e6e3:	mov    %rax,%rdi
  41e6e6:	callq  414a20 <BIO_new@plt>
  41e6eb:	mov    0x60(%rsp),%r8d
  41e6f0:	mov    %rax,%rbp
  41e6f3:	mov    0x90(%rsp),%r11
  41e6fb:	test   %r8d,%r8d
  41e6fe:	jne    41e9e0 <X509_get0_pubkey_bitstr@plt+0x8010>
  41e704:	lea    0x25c635(%rip),%rax        # 67ad40 <_edata+0x38>
  41e70b:	mov    0x38(%rsp),%rsi
  41e710:	lea    0xb8(%rsp),%rcx
  41e718:	xor    %r8d,%r8d
  41e71b:	xor    %edx,%edx
  41e71d:	mov    %r11,0x60(%rsp)
  41e722:	mov    (%rax),%rdi
  41e725:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  41e72a:	test   %eax,%eax
  41e72c:	mov    0x60(%rsp),%r11
  41e731:	je     41e988 <X509_get0_pubkey_bitstr@plt+0x7fb8>
  41e737:	test   %rbp,%rbp
  41e73a:	je     41ea18 <X509_get0_pubkey_bitstr@plt+0x8048>
  41e740:	cmpq   $0x0,0x40(%rsp)
  41e746:	je     41ea18 <X509_get0_pubkey_bitstr@plt+0x8048>
  41e74c:	cmpl   $0xffffffff,0x68(%rsp)
  41e751:	je     41ef25 <X509_get0_pubkey_bitstr@plt+0x8555>
  41e757:	test   %r13,%r13
  41e75a:	je     41e77a <X509_get0_pubkey_bitstr@plt+0x7daa>
  41e75c:	lea    0x25c5dd(%rip),%rax        # 67ad40 <_edata+0x38>
  41e763:	xor    %edx,%edx
  41e765:	mov    %r13,%rdi
  41e768:	mov    %r11,0x38(%rsp)
  41e76d:	mov    (%rax),%rsi
  41e770:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  41e775:	mov    0x38(%rsp),%r11
  41e77a:	cmpq   $0x0,0x48(%rsp)
  41e780:	je     41f2dc <X509_get0_pubkey_bitstr@plt+0x890c>
  41e786:	mov    0x68(%rsp),%edi
  41e78a:	mov    %r11,0x60(%rsp)
  41e78f:	test   %edi,%edi
  41e791:	je     41e968 <X509_get0_pubkey_bitstr@plt+0x7f98>
  41e797:	mov    0x48(%rsp),%rdi
  41e79c:	lea    0x3f608(%rip),%rsi        # 45ddab <_fini+0x8a7>
  41e7a3:	callq  412ba0 <BIO_new_file@plt>
  41e7a8:	mov    0x60(%rsp),%r11
  41e7ad:	mov    %rax,0x38(%rsp)
  41e7b2:	cmpq   $0x0,0x38(%rsp)
  41e7b8:	je     41f736 <X509_get0_pubkey_bitstr@plt+0x8d66>
  41e7be:	cmpq   $0x0,0x78(%rsp)
  41e7c4:	setne  %r13b
  41e7c8:	cmpq   $0x0,0x58(%rsp)
  41e7ce:	movzbl %r13b,%ecx
  41e7d2:	setne  %al
  41e7d5:	cmpq   $0x0,0x70(%rsp)
  41e7db:	movzbl %al,%edx
  41e7de:	setne  %sil
  41e7e2:	add    %edx,%ecx
  41e7e4:	movzbl %sil,%edx
  41e7e8:	mov    %sil,0x48(%rsp)
  41e7ed:	add    %ecx,%edx
  41e7ef:	cmp    $0x1,%edx
  41e7f2:	jle    41ea2c <X509_get0_pubkey_bitstr@plt+0x805c>
  41e7f8:	lea    0x25c541(%rip),%rax        # 67ad40 <_edata+0x38>
  41e7ff:	lea    0x40fa2(%rip),%rsi        # 45f7a8 <_fini+0x22a4>
  41e806:	xor    %r13d,%r13d
  41e809:	mov    $0x1,%r14d
  41e80f:	mov    (%rax),%rdi
  41e812:	xor    %eax,%eax
  41e814:	callq  413c40 <BIO_printf@plt>
  41e819:	mov    %rbx,%rdi
  41e81c:	mov    $0x2000,%esi
  41e821:	callq  413ef0 <OPENSSL_cleanse@plt>
  41e826:	mov    %rbx,%rdi
  41e829:	callq  415020 <CRYPTO_free@plt>
  41e82e:	mov    0x40(%rsp),%rdi
  41e833:	callq  413960 <BIO_free@plt>
  41e838:	jmpq   41e3e4 <X509_get0_pubkey_bitstr@plt+0x7a14>
  41e83d:	nopl   (%rax)
  41e840:	lea    0x3f9f1(%rip),%rdi        # 45e238 <_fini+0xd34>
  41e847:	mov    $0x8,%ecx
  41e84c:	mov    %rbp,%rsi
  41e84f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41e851:	je     41e93b <X509_get0_pubkey_bitstr@plt+0x7f6b>
  41e857:	lea    0x4106a(%rip),%rdi        # 45f8c8 <_fini+0x23c4>
  41e85e:	mov    $0xa,%ecx
  41e863:	mov    %rbp,%rsi
  41e866:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41e868:	jne    41ef39 <X509_get0_pubkey_bitstr@plt+0x8569>
  41e86e:	sub    $0x1,%r14d
  41e872:	je     41e690 <X509_get0_pubkey_bitstr@plt+0x7cc0>
  41e878:	mov    0x8(%r11),%rax
  41e87c:	lea    0x8(%r11),%rbp
  41e880:	mov    $0x1,%r8d
  41e886:	mov    %rax,0x58(%rsp)
  41e88b:	jmpq   41e577 <X509_get0_pubkey_bitstr@plt+0x7ba7>
  41e890:	lea    0x25c4a9(%rip),%rax        # 67ad40 <_edata+0x38>
  41e897:	lea    0x40b82(%rip),%rsi        # 45f420 <_fini+0x1f1c>
  41e89e:	mov    (%rax),%rdi
  41e8a1:	xor    %eax,%eax
  41e8a3:	callq  413c40 <BIO_printf@plt>
  41e8a8:	jmpq   41e3bb <X509_get0_pubkey_bitstr@plt+0x79eb>
  41e8ad:	nopl   (%rax)
  41e8b0:	lea    0x25c489(%rip),%rax        # 67ad40 <_edata+0x38>
  41e8b7:	lea    0x40ff5(%rip),%rsi        # 45f8b3 <_fini+0x23af>
  41e8be:	xor    %r15d,%r15d
  41e8c1:	mov    $0x1,%r14d
  41e8c7:	xor    %ebp,%ebp
  41e8c9:	xor    %r13d,%r13d
  41e8cc:	xor    %r12d,%r12d
  41e8cf:	mov    (%rax),%rdi
  41e8d2:	xor    %eax,%eax
  41e8d4:	callq  413c40 <BIO_printf@plt>
  41e8d9:	movq   $0x0,0x38(%rsp)
  41e8e2:	jmpq   41e3e4 <X509_get0_pubkey_bitstr@plt+0x7a14>
  41e8e7:	nopw   0x0(%rax,%rax,1)
  41e8f0:	callq  4152b0 <BIO_s_file@plt>
  41e8f5:	mov    %rax,%rdi
  41e8f8:	callq  414a20 <BIO_new@plt>
  41e8fd:	mov    %rax,%rdi
  41e900:	lea    0x25c439(%rip),%rax        # 67ad40 <_edata+0x38>
  41e907:	test   %rdi,%rdi
  41e90a:	mov    %rdi,(%rax)
  41e90d:	je     41e3a6 <X509_get0_pubkey_bitstr@plt+0x79d6>
  41e913:	mov    0x257666(%rip),%rax        # 675f80 <_fini+0x218a7c>
  41e91a:	mov    $0x10,%edx
  41e91f:	mov    $0x6a,%esi
  41e924:	mov    (%rax),%rcx
  41e927:	callq  412af0 <BIO_ctrl@plt>
  41e92c:	lea    0x25c40d(%rip),%rax        # 67ad40 <_edata+0x38>
  41e933:	mov    (%rax),%rdi
  41e936:	jmpq   41e3a6 <X509_get0_pubkey_bitstr@plt+0x79d6>
  41e93b:	sub    $0x1,%r14d
  41e93f:	je     41e690 <X509_get0_pubkey_bitstr@plt+0x7cc0>
  41e945:	mov    0x8(%r11),%rax
  41e949:	lea    0x8(%r11),%rbp
  41e94d:	mov    $0x1,%r8d
  41e953:	movl   $0x1,0x8c(%rsp)
  41e95e:	mov    %rax,0x58(%rsp)
  41e963:	jmpq   41e577 <X509_get0_pubkey_bitstr@plt+0x7ba7>
  41e968:	mov    0x48(%rsp),%rdi
  41e96d:	lea    0x44ca4(%rip),%rsi        # 463618 <_fini+0x6114>
  41e974:	callq  412ba0 <BIO_new_file@plt>
  41e979:	mov    0x60(%rsp),%r11
  41e97e:	mov    %rax,0x38(%rsp)
  41e983:	jmpq   41e7b2 <X509_get0_pubkey_bitstr@plt+0x7de2>
  41e988:	lea    0x25c3b1(%rip),%rax        # 67ad40 <_edata+0x38>
  41e98f:	lea    0x40f9e(%rip),%rsi        # 45f934 <_fini+0x2430>
  41e996:	mov    (%rax),%rdi
  41e999:	xor    %eax,%eax
  41e99b:	callq  413c40 <BIO_printf@plt>
  41e9a0:	mov    $0x2000,%esi
  41e9a5:	mov    %rbx,%rdi
  41e9a8:	xor    %r13d,%r13d
  41e9ab:	callq  413ef0 <OPENSSL_cleanse@plt>
  41e9b0:	mov    %rbx,%rdi
  41e9b3:	mov    $0x1,%r14d
  41e9b9:	callq  415020 <CRYPTO_free@plt>
  41e9be:	cmpq   $0x0,0x40(%rsp)
  41e9c4:	movq   $0x0,0x38(%rsp)
  41e9cd:	jne    41e82e <X509_get0_pubkey_bitstr@plt+0x7e5e>
  41e9d3:	jmpq   41e3e4 <X509_get0_pubkey_bitstr@plt+0x7a14>
  41e9d8:	nopl   0x0(%rax,%rax,1)
  41e9e0:	mov    0x257601(%rip),%rsi        # 675fe8 <_fini+0x218ae4>
  41e9e7:	mov    0x40(%rsp),%rdi
  41e9ec:	mov    %r11,0x60(%rsp)
  41e9f1:	callq  413800 <BIO_set_callback@plt>
  41e9f6:	lea    0x25c343(%rip),%rax        # 67ad40 <_edata+0x38>
  41e9fd:	mov    0x40(%rsp),%rdi
  41ea02:	mov    (%rax),%rsi
  41ea05:	callq  4140d0 <BIO_set_callback_arg@plt>
  41ea0a:	mov    0x60(%rsp),%r11
  41ea0f:	jmpq   41e704 <X509_get0_pubkey_bitstr@plt+0x7d34>
  41ea14:	nopl   0x0(%rax)
  41ea18:	lea    0x25c321(%rip),%rax        # 67ad40 <_edata+0x38>
  41ea1f:	mov    (%rax),%rdi
  41ea22:	callq  413f40 <ERR_print_errors@plt>
  41ea27:	jmpq   41e9a0 <X509_get0_pubkey_bitstr@plt+0x7fd0>
  41ea2c:	test   %al,%al
  41ea2e:	je     41ea8d <X509_get0_pubkey_bitstr@plt+0x80bd>
  41ea30:	mov    0x8c(%rsp),%esi
  41ea37:	lea    0x4f47b(%rip),%rax        # 46deb9 <_fini+0x109b5>
  41ea3e:	mov    %r11,0x60(%rsp)
  41ea43:	mov    0x80(%rsp),%r9
  41ea4b:	mov    %rax,(%rsp)
  41ea4f:	test   %esi,%esi
  41ea51:	je     41f137 <X509_get0_pubkey_bitstr@plt+0x8767>
  41ea57:	lea    0x25c2e2(%rip),%rax        # 67ad40 <_edata+0x38>
  41ea5e:	mov    0xa0(%rsp),%edx
  41ea65:	xor    %r8d,%r8d
  41ea68:	mov    0x58(%rsp),%rsi
  41ea6d:	xor    %ecx,%ecx
  41ea6f:	mov    (%rax),%rdi
  41ea72:	callq  446250 <X509_get0_pubkey_bitstr@plt+0x2f880>
  41ea77:	mov    0x60(%rsp),%r11
  41ea7c:	mov    %rax,0xb0(%rsp)
  41ea84:	test   %rax,%rax
  41ea87:	je     41ef17 <X509_get0_pubkey_bitstr@plt+0x8547>
  41ea8d:	test   %r13b,%r13b
  41ea90:	je     41eb83 <X509_get0_pubkey_bitstr@plt+0x81b3>
  41ea96:	lea    0x25c2a3(%rip),%rax        # 67ad40 <_edata+0x38>
  41ea9d:	mov    0x80(%rsp),%rcx
  41eaa5:	lea    0xc8(%rsp),%rsi
  41eaad:	mov    0x78(%rsp),%rdx
  41eab2:	xor    %r8d,%r8d
  41eab5:	mov    %r11,0x58(%rsp)
  41eaba:	movq   $0x0,0xc8(%rsp)
  41eac6:	xor    %r13d,%r13d
  41eac9:	mov    (%rax),%rdi
  41eacc:	callq  434520 <X509_get0_pubkey_bitstr@plt+0x1db50>
  41ead1:	test   %eax,%eax
  41ead3:	mov    0x58(%rsp),%r11
  41ead8:	je     41eb5e <X509_get0_pubkey_bitstr@plt+0x818e>
  41eade:	test   %r12,%r12
  41eae1:	je     41eb31 <X509_get0_pubkey_bitstr@plt+0x8161>
  41eae3:	mov    %rbp,0x58(%rsp)
  41eae8:	mov    %r11,0x60(%rsp)
  41eaed:	jmp    41eb1a <X509_get0_pubkey_bitstr@plt+0x814a>
  41eaef:	nop
  41eaf0:	mov    %r13d,%esi
  41eaf3:	mov    %r12,%rdi
  41eaf6:	callq  412b30 <sk_value@plt>
  41eafb:	mov    0xc8(%rsp),%rdi
  41eb03:	mov    %rax,%rsi
  41eb06:	mov    %rax,%rbp
  41eb09:	callq  448760 <X509_get0_pubkey_bitstr@plt+0x31d90>
  41eb0e:	test   %eax,%eax
  41eb10:	jle    41f3ed <X509_get0_pubkey_bitstr@plt+0x8a1d>
  41eb16:	add    $0x1,%r13d
  41eb1a:	mov    %r12,%rdi
  41eb1d:	callq  4156d0 <sk_num@plt>
  41eb22:	cmp    %eax,%r13d
  41eb25:	jl     41eaf0 <X509_get0_pubkey_bitstr@plt+0x8120>
  41eb27:	mov    0x58(%rsp),%rbp
  41eb2c:	mov    0x60(%rsp),%r11
  41eb31:	mov    0xc8(%rsp),%rdi
  41eb39:	lea    0xb0(%rsp),%rsi
  41eb41:	mov    %r11,0x58(%rsp)
  41eb46:	callq  412ec0 <EVP_PKEY_keygen@plt>
  41eb4b:	test   %eax,%eax
  41eb4d:	mov    0x58(%rsp),%r11
  41eb52:	jle    41f5b4 <X509_get0_pubkey_bitstr@plt+0x8be4>
  41eb58:	mov    $0x1,%r13d
  41eb5e:	mov    0xc8(%rsp),%rdi
  41eb66:	test   %rdi,%rdi
  41eb69:	je     41eb7a <X509_get0_pubkey_bitstr@plt+0x81aa>
  41eb6b:	mov    %r11,0x58(%rsp)
  41eb70:	callq  4143b0 <EVP_PKEY_CTX_free@plt>
  41eb75:	mov    0x58(%rsp),%r11
  41eb7a:	test   %r13d,%r13d
  41eb7d:	je     41ef17 <X509_get0_pubkey_bitstr@plt+0x8547>
  41eb83:	mov    0xa4(%rsp),%ecx
  41eb8a:	test   %ecx,%ecx
  41eb8c:	jne    41f3b5 <X509_get0_pubkey_bitstr@plt+0x89e5>
  41eb92:	cmpb   $0x0,0x48(%rsp)
  41eb97:	je     41f257 <X509_get0_pubkey_bitstr@plt+0x8887>
  41eb9d:	mov    0x70(%rsp),%rdx
  41eba2:	mov    0x80(%rsp),%rsi
  41ebaa:	mov    $0xffffffff,%ecx
  41ebaf:	mov    $0x357,%edi
  41ebb4:	mov    %r11,0x48(%rsp)
  41ebb9:	callq  412790 <EVP_PKEY_new_mac_key@plt>
  41ebbe:	test   %rax,%rax
  41ebc1:	mov    %rax,0xb0(%rsp)
  41ebc9:	mov    0x48(%rsp),%r11
  41ebce:	je     41ef17 <X509_get0_pubkey_bitstr@plt+0x8547>
  41ebd4:	lea    0xc0(%rsp),%rcx
  41ebdc:	xor    %edx,%edx
  41ebde:	mov    $0x78,%esi
  41ebe3:	mov    %rbp,%rdi
  41ebe6:	mov    %r11,0x48(%rsp)
  41ebeb:	movq   $0x0,0xc0(%rsp)
  41ebf7:	movq   $0x0,0xc8(%rsp)
  41ec03:	callq  412af0 <BIO_ctrl@plt>
  41ec08:	test   %rax,%rax
  41ec0b:	mov    0x48(%rsp),%r11
  41ec10:	je     41eef0 <X509_get0_pubkey_bitstr@plt+0x8520>
  41ec16:	cmpb   $0x0,0x88(%rsp)
  41ec1e:	mov    %r11,0x48(%rsp)
  41ec23:	lea    0xc8(%rsp),%rsi
  41ec2b:	mov    0xb0(%rsp),%r8
  41ec33:	mov    0x80(%rsp),%rcx
  41ec3b:	mov    0x98(%rsp),%rdx
  41ec43:	mov    0xc0(%rsp),%rdi
  41ec4b:	je     41f429 <X509_get0_pubkey_bitstr@plt+0x8a59>
  41ec51:	callq  412be0 <EVP_DigestVerifyInit@plt>
  41ec56:	mov    0x48(%rsp),%r11
  41ec5b:	test   %eax,%eax
  41ec5d:	je     41f4ec <X509_get0_pubkey_bitstr@plt+0x8b1c>
  41ec63:	xor    %r13d,%r13d
  41ec66:	test   %r15,%r15
  41ec69:	je     41ecc1 <X509_get0_pubkey_bitstr@plt+0x82f1>
  41ec6b:	mov    %rbp,0x48(%rsp)
  41ec70:	mov    %r11,0x58(%rsp)
  41ec75:	jmp    41ecaa <X509_get0_pubkey_bitstr@plt+0x82da>
  41ec77:	nopw   0x0(%rax,%rax,1)
  41ec80:	mov    %r13d,%esi
  41ec83:	mov    %r15,%rdi
  41ec86:	callq  412b30 <sk_value@plt>
  41ec8b:	mov    0xc8(%rsp),%rdi
  41ec93:	mov    %rax,%rsi
  41ec96:	mov    %rax,%rbp
  41ec99:	callq  448760 <X509_get0_pubkey_bitstr@plt+0x31d90>
  41ec9e:	test   %eax,%eax
  41eca0:	jle    41f4a8 <X509_get0_pubkey_bitstr@plt+0x8ad8>
  41eca6:	add    $0x1,%r13d
  41ecaa:	mov    %r15,%rdi
  41ecad:	callq  4156d0 <sk_num@plt>
  41ecb2:	cmp    %eax,%r13d
  41ecb5:	jl     41ec80 <X509_get0_pubkey_bitstr@plt+0x82b0>
  41ecb7:	mov    0x48(%rsp),%rbp
  41ecbc:	mov    0x58(%rsp),%r11
  41ecc1:	mov    0x50(%rsp),%rdi
  41ecc6:	test   %rdi,%rdi
  41ecc9:	je     41f4dc <X509_get0_pubkey_bitstr@plt+0x8b0c>
  41eccf:	cmpq   $0x0,0xb0(%rsp)
  41ecd8:	je     41f4dc <X509_get0_pubkey_bitstr@plt+0x8b0c>
  41ecde:	lea    0x40cfc(%rip),%rsi        # 45f9e1 <_fini+0x24dd>
  41ece5:	mov    %r11,0x60(%rsp)
  41ecea:	callq  412ba0 <BIO_new_file@plt>
  41ecef:	mov    0xb0(%rsp),%rdi
  41ecf7:	mov    %rax,0x58(%rsp)
  41ecfc:	callq  4135f0 <EVP_PKEY_size@plt>
  41ed01:	lea    0x40ba4(%rip),%rsi        # 45f8ac <_fini+0x23a8>
  41ed08:	mov    $0x1d9,%edx
  41ed0d:	mov    %eax,%edi
  41ed0f:	mov    %eax,0x48(%rsp)
  41ed13:	callq  413d50 <CRYPTO_malloc@plt>
  41ed18:	cmpq   $0x0,0x58(%rsp)
  41ed1e:	mov    %rax,%r13
  41ed21:	mov    0x50(%rsp),%rdx
  41ed26:	lea    0x40aab(%rip),%rsi        # 45f7d8 <_fini+0x22d4>
  41ed2d:	mov    0x48(%rsp),%ecx
  41ed31:	mov    0x60(%rsp),%r11
  41ed36:	je     41f589 <X509_get0_pubkey_bitstr@plt+0x8bb9>
  41ed3c:	mov    0x58(%rsp),%rdi
  41ed41:	mov    %ecx,%edx
  41ed43:	mov    %rax,%rsi
  41ed46:	mov    %r11,0x60(%rsp)
  41ed4b:	callq  413930 <BIO_read@plt>
  41ed50:	mov    0x58(%rsp),%rdi
  41ed55:	mov    %eax,0x48(%rsp)
  41ed59:	callq  413960 <BIO_free@plt>
  41ed5e:	mov    0x48(%rsp),%edx
  41ed62:	mov    0x60(%rsp),%r11
  41ed67:	test   %edx,%edx
  41ed69:	jle    41f57d <X509_get0_pubkey_bitstr@plt+0x8bad>
  41ed6f:	mov    0x40(%rsp),%rsi
  41ed74:	mov    %rbp,%rdi
  41ed77:	mov    %r11,0x50(%rsp)
  41ed7c:	callq  415ac0 <BIO_push@plt>
  41ed81:	cmpq   $0x0,0x98(%rsp)
  41ed8a:	mov    %rax,0x58(%rsp)
  41ed8f:	mov    0x50(%rsp),%r11
  41ed94:	je     41f6e0 <X509_get0_pubkey_bitstr@plt+0x8d10>
  41ed9a:	test   %r14d,%r14d
  41ed9d:	je     41f508 <X509_get0_pubkey_bitstr@plt+0x8b38>
  41eda3:	mov    0x68(%rsp),%eax
  41eda7:	movq   $0x0,0xc8(%rsp)
  41edb3:	movq   $0x0,0x50(%rsp)
  41edbc:	test   %eax,%eax
  41edbe:	jne    41ee21 <X509_get0_pubkey_bitstr@plt+0x8451>
  41edc0:	mov    0xb0(%rsp),%rdi
  41edc8:	test   %rdi,%rdi
  41edcb:	je     41edfe <X509_get0_pubkey_bitstr@plt+0x842e>
  41edcd:	mov    %r11,0x50(%rsp)
  41edd2:	callq  414140 <EVP_PKEY_get0_asn1@plt>
  41edd7:	test   %rax,%rax
  41edda:	mov    %rax,%r9
  41eddd:	mov    0x50(%rsp),%r11
  41ede2:	je     41edfe <X509_get0_pubkey_bitstr@plt+0x842e>
  41ede4:	lea    0xc8(%rsp),%r8
  41edec:	xor    %ecx,%ecx
  41edee:	xor    %edx,%edx
  41edf0:	xor    %esi,%esi
  41edf2:	xor    %edi,%edi
  41edf4:	callq  414ec0 <EVP_PKEY_asn1_get0_info@plt>
  41edf9:	mov    0x50(%rsp),%r11
  41edfe:	mov    0x98(%rsp),%rdi
  41ee06:	mov    %r11,0x60(%rsp)
  41ee0b:	callq  415290 <EVP_MD_type@plt>
  41ee10:	mov    %eax,%edi
  41ee12:	callq  415b30 <OBJ_nid2sn@plt>
  41ee17:	mov    0x60(%rsp),%r11
  41ee1c:	mov    %rax,0x50(%rsp)
  41ee21:	test   %r14d,%r14d
  41ee24:	jle    41f716 <X509_get0_pubkey_bitstr@plt+0x8d46>
  41ee2a:	lea    -0x1(%r14),%r10d
  41ee2e:	mov    %r12,0x60(%rsp)
  41ee33:	mov    %r15,0x70(%rsp)
  41ee38:	xor    %r14d,%r14d
  41ee3b:	mov    %r11,%r12
  41ee3e:	lea    0x8(%r11,%r10,8),%rax
  41ee43:	mov    %rax,%r15
  41ee46:	jmp    41eec0 <X509_get0_pubkey_bitstr@plt+0x84f0>
  41ee48:	mov    %rbp,0x28(%rsp)
  41ee4d:	mov    (%r12),%rax
  41ee51:	mov    %rbx,%rsi
  41ee54:	mov    0x6c(%rsp),%ecx
  41ee58:	mov    0x58(%rsp),%rdx
  41ee5d:	mov    0x38(%rsp),%rdi
  41ee62:	mov    0xb0(%rsp),%r9
  41ee6a:	mov    %rax,0x20(%rsp)
  41ee6f:	mov    0x50(%rsp),%rax
  41ee74:	mov    0x68(%rsp),%r8d
  41ee79:	mov    %r13,(%rsp)
  41ee7d:	mov    %rax,0x18(%rsp)
  41ee82:	mov    0xc8(%rsp),%rax
  41ee8a:	mov    %rax,0x10(%rsp)
  41ee8f:	mov    0x48(%rsp),%eax
  41ee93:	mov    %eax,0x8(%rsp)
  41ee97:	callq  41dfc0 <X509_get0_pubkey_bitstr@plt+0x75f0>
  41ee9c:	test   %eax,%eax
  41ee9e:	mov    $0x1,%esi
  41eea3:	mov    %rbp,%rdi
  41eea6:	cmovne %eax,%r14d
  41eeaa:	xor    %ecx,%ecx
  41eeac:	xor    %edx,%edx
  41eeae:	callq  412af0 <BIO_ctrl@plt>
  41eeb3:	add    $0x8,%r12
  41eeb7:	cmp    %r15,%r12
  41eeba:	je     41f438 <X509_get0_pubkey_bitstr@plt+0x8a68>
  41eec0:	mov    (%r12),%rcx
  41eec4:	mov    0x40(%rsp),%rdi
  41eec9:	mov    $0x3,%edx
  41eece:	mov    $0x6c,%esi
  41eed3:	callq  412af0 <BIO_ctrl@plt>
  41eed8:	test   %rax,%rax
  41eedb:	jg     41ee48 <X509_get0_pubkey_bitstr@plt+0x8478>
  41eee1:	mov    (%r12),%rdi
  41eee5:	add    $0x1,%r14d
  41eee9:	callq  4142c0 <perror@plt>
  41eeee:	jmp    41eeb3 <X509_get0_pubkey_bitstr@plt+0x84e3>
  41eef0:	lea    0x40aa3(%rip),%rsi        # 45f99a <_fini+0x2496>
  41eef7:	lea    0x25be42(%rip),%rax        # 67ad40 <_edata+0x38>
  41eefe:	mov    (%rax),%rdi
  41ef01:	xor    %eax,%eax
  41ef03:	callq  413c40 <BIO_printf@plt>
  41ef08:	lea    0x25be31(%rip),%rax        # 67ad40 <_edata+0x38>
  41ef0f:	mov    (%rax),%rdi
  41ef12:	callq  413f40 <ERR_print_errors@plt>
  41ef17:	xor    %r13d,%r13d
  41ef1a:	mov    $0x1,%r14d
  41ef20:	jmpq   41e819 <X509_get0_pubkey_bitstr@plt+0x7e49>
  41ef25:	xor    %eax,%eax
  41ef27:	cmpq   $0x0,0x58(%rsp)
  41ef2d:	setne  %al
  41ef30:	mov    %eax,0x68(%rsp)
  41ef34:	jmpq   41e757 <X509_get0_pubkey_bitstr@plt+0x7d87>
  41ef39:	lea    0x40992(%rip),%rdi        # 45f8d2 <_fini+0x23ce>
  41ef40:	mov    $0xb,%ecx
  41ef45:	mov    %rbp,%rsi
  41ef48:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41ef4a:	jne    41f16e <X509_get0_pubkey_bitstr@plt+0x879e>
  41ef50:	sub    $0x1,%r14d
  41ef54:	je     41e690 <X509_get0_pubkey_bitstr@plt+0x7cc0>
  41ef5a:	mov    0x8(%r11),%rax
  41ef5e:	lea    0x8(%r11),%rbp
  41ef62:	mov    %rax,0x50(%rsp)
  41ef67:	jmpq   41e577 <X509_get0_pubkey_bitstr@plt+0x7ba7>
  41ef6c:	lea    0x25bdcd(%rip),%rax        # 67ad40 <_edata+0x38>
  41ef73:	lea    0x409a5(%rip),%rsi        # 45f91f <_fini+0x241b>
  41ef7a:	mov    (%rax),%rdi
  41ef7d:	xor    %eax,%eax
  41ef7f:	callq  413c40 <BIO_printf@plt>
  41ef84:	lea    0x25bdb5(%rip),%rax        # 67ad40 <_edata+0x38>
  41ef8b:	lea    0x3edc9(%rip),%rsi        # 45dd5b <_fini+0x857>
  41ef92:	mov    (%rax),%rdi
  41ef95:	xor    %eax,%eax
  41ef97:	callq  413c40 <BIO_printf@plt>
  41ef9c:	lea    0x25bd9d(%rip),%rax        # 67ad40 <_edata+0x38>
  41efa3:	lea    0x404ae(%rip),%rsi        # 45f458 <_fini+0x1f54>
  41efaa:	mov    (%rax),%rdi
  41efad:	xor    %eax,%eax
  41efaf:	callq  413c40 <BIO_printf@plt>
  41efb4:	lea    0x25bd85(%rip),%rax        # 67ad40 <_edata+0x38>
  41efbb:	lea    0x404d6(%rip),%rsi        # 45f498 <_fini+0x1f94>
  41efc2:	mov    (%rax),%rdi
  41efc5:	xor    %eax,%eax
  41efc7:	callq  413c40 <BIO_printf@plt>
  41efcc:	lea    0x25bd6d(%rip),%rax        # 67ad40 <_edata+0x38>
  41efd3:	lea    0x404fe(%rip),%rsi        # 45f4d8 <_fini+0x1fd4>
  41efda:	mov    (%rax),%rdi
  41efdd:	xor    %eax,%eax
  41efdf:	callq  413c40 <BIO_printf@plt>
  41efe4:	lea    0x25bd55(%rip),%rax        # 67ad40 <_edata+0x38>
  41efeb:	lea    0x4050e(%rip),%rsi        # 45f500 <_fini+0x1ffc>
  41eff2:	mov    (%rax),%rdi
  41eff5:	xor    %eax,%eax
  41eff7:	callq  413c40 <BIO_printf@plt>
  41effc:	lea    0x25bd3d(%rip),%rax        # 67ad40 <_edata+0x38>
  41f003:	lea    0x4051e(%rip),%rsi        # 45f528 <_fini+0x2024>
  41f00a:	mov    (%rax),%rdi
  41f00d:	xor    %eax,%eax
  41f00f:	callq  413c40 <BIO_printf@plt>
  41f014:	lea    0x25bd25(%rip),%rax        # 67ad40 <_edata+0x38>
  41f01b:	lea    0x4052e(%rip),%rsi        # 45f550 <_fini+0x204c>
  41f022:	mov    (%rax),%rdi
  41f025:	xor    %eax,%eax
  41f027:	callq  413c40 <BIO_printf@plt>
  41f02c:	lea    0x25bd0d(%rip),%rax        # 67ad40 <_edata+0x38>
  41f033:	lea    0x4054e(%rip),%rsi        # 45f588 <_fini+0x2084>
  41f03a:	mov    (%rax),%rdi
  41f03d:	xor    %eax,%eax
  41f03f:	callq  413c40 <BIO_printf@plt>
  41f044:	lea    0x25bcf5(%rip),%rax        # 67ad40 <_edata+0x38>
  41f04b:	lea    0x40576(%rip),%rsi        # 45f5c8 <_fini+0x20c4>
  41f052:	mov    (%rax),%rdi
  41f055:	xor    %eax,%eax
  41f057:	callq  413c40 <BIO_printf@plt>
  41f05c:	lea    0x25bcdd(%rip),%rax        # 67ad40 <_edata+0x38>
  41f063:	lea    0x4059e(%rip),%rsi        # 45f608 <_fini+0x2104>
  41f06a:	mov    (%rax),%rdi
  41f06d:	xor    %eax,%eax
  41f06f:	callq  413c40 <BIO_printf@plt>
  41f074:	lea    0x25bcc5(%rip),%rax        # 67ad40 <_edata+0x38>
  41f07b:	lea    0x405be(%rip),%rsi        # 45f640 <_fini+0x213c>
  41f082:	mov    (%rax),%rdi
  41f085:	xor    %eax,%eax
  41f087:	callq  413c40 <BIO_printf@plt>
  41f08c:	lea    0x25bcad(%rip),%rax        # 67ad40 <_edata+0x38>
  41f093:	lea    0x405de(%rip),%rsi        # 45f678 <_fini+0x2174>
  41f09a:	mov    (%rax),%rdi
  41f09d:	xor    %eax,%eax
  41f09f:	callq  413c40 <BIO_printf@plt>
  41f0a4:	lea    0x25bc95(%rip),%rax        # 67ad40 <_edata+0x38>
  41f0ab:	lea    0x405ee(%rip),%rsi        # 45f6a0 <_fini+0x219c>
  41f0b2:	mov    (%rax),%rdi
  41f0b5:	xor    %eax,%eax
  41f0b7:	callq  413c40 <BIO_printf@plt>
  41f0bc:	lea    0x25bc7d(%rip),%rax        # 67ad40 <_edata+0x38>
  41f0c3:	lea    0x405fe(%rip),%rsi        # 45f6c8 <_fini+0x21c4>
  41f0ca:	mov    (%rax),%rdi
  41f0cd:	xor    %eax,%eax
  41f0cf:	callq  413c40 <BIO_printf@plt>
  41f0d4:	lea    0x25bc65(%rip),%rax        # 67ad40 <_edata+0x38>
  41f0db:	lea    0x40616(%rip),%rsi        # 45f6f8 <_fini+0x21f4>
  41f0e2:	mov    (%rax),%rdi
  41f0e5:	xor    %eax,%eax
  41f0e7:	callq  413c40 <BIO_printf@plt>
  41f0ec:	lea    0x25bc4d(%rip),%rax        # 67ad40 <_edata+0x38>
  41f0f3:	lea    0x40636(%rip),%rsi        # 45f730 <_fini+0x222c>
  41f0fa:	mov    (%rax),%rdi
  41f0fd:	xor    %eax,%eax
  41f0ff:	callq  413c40 <BIO_printf@plt>
  41f104:	lea    0x25bc35(%rip),%rax        # 67ad40 <_edata+0x38>
  41f10b:	lea    0x40656(%rip),%rsi        # 45f768 <_fini+0x2264>
  41f112:	mov    (%rax),%rdi
  41f115:	xor    %eax,%eax
  41f117:	callq  413c40 <BIO_printf@plt>
  41f11c:	lea    0x25bc1d(%rip),%rax        # 67ad40 <_edata+0x38>
  41f123:	lea    -0x120a(%rip),%rdi        # 41df20 <X509_get0_pubkey_bitstr@plt+0x7550>
  41f12a:	mov    (%rax),%rsi
  41f12d:	callq  4163a0 <EVP_MD_do_all_sorted@plt>
  41f132:	jmpq   41e3bb <X509_get0_pubkey_bitstr@plt+0x79eb>
  41f137:	lea    0x25bc02(%rip),%rax        # 67ad40 <_edata+0x38>
  41f13e:	mov    0xb8(%rsp),%r8
  41f146:	xor    %ecx,%ecx
  41f148:	mov    0xa0(%rsp),%edx
  41f14f:	mov    0x58(%rsp),%rsi
  41f154:	mov    (%rax),%rdi
  41f157:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  41f15c:	mov    0x60(%rsp),%r11
  41f161:	mov    %rax,0xb0(%rsp)
  41f169:	jmpq   41ea84 <X509_get0_pubkey_bitstr@plt+0x80b4>
  41f16e:	lea    0x3f06a(%rip),%rdi        # 45e1df <_fini+0xcdb>
  41f175:	mov    $0x9,%ecx
  41f17a:	mov    %rbp,%rsi
  41f17d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41f17f:	jne    41f34a <X509_get0_pubkey_bitstr@plt+0x897a>
  41f185:	sub    $0x1,%r14d
  41f189:	je     41e690 <X509_get0_pubkey_bitstr@plt+0x7cc0>
  41f18f:	mov    0x8(%r11),%rdi
  41f193:	mov    %r8d,0x88(%rsp)
  41f19b:	lea    0x8(%r11),%rbp
  41f19f:	mov    %r10d,0x6c(%rsp)
  41f1a4:	mov    %r9,0x40(%rsp)
  41f1a9:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  41f1ae:	mov    0x40(%rsp),%r9
  41f1b3:	mov    %eax,0xa0(%rsp)
  41f1ba:	mov    0x6c(%rsp),%r10d
  41f1bf:	mov    0x88(%rsp),%r8d
  41f1c7:	jmpq   41e577 <X509_get0_pubkey_bitstr@plt+0x7ba7>
  41f1cc:	movb   $0x0,0x88(%rsp)
  41f1d4:	movl   $0x0,0xa4(%rsp)
  41f1df:	xor    %r13d,%r13d
  41f1e2:	movq   $0x0,0x78(%rsp)
  41f1eb:	movq   $0x0,0x70(%rsp)
  41f1f4:	movq   $0x0,0x38(%rsp)
  41f1fd:	movl   $0x0,0x8c(%rsp)
  41f208:	movl   $0xffffffff,0x68(%rsp)
  41f210:	movq   $0x0,0x50(%rsp)
  41f219:	movq   $0x0,0x58(%rsp)
  41f222:	movq   $0x0,0x48(%rsp)
  41f22b:	movl   $0x3,0xa0(%rsp)
  41f236:	movl   $0x0,0x60(%rsp)
  41f23e:	movl   $0x0,0x6c(%rsp)
  41f246:	movq   $0x0,0x80(%rsp)
  41f252:	jmpq   41e6b3 <X509_get0_pubkey_bitstr@plt+0x7ce3>
  41f257:	cmpq   $0x0,0xb0(%rsp)
  41f260:	jne    41ebd4 <X509_get0_pubkey_bitstr@plt+0x8204>
  41f266:	cmpq   $0x0,0x98(%rsp)
  41f26f:	je     41f6a0 <X509_get0_pubkey_bitstr@plt+0x8cd0>
  41f275:	mov    0x98(%rsp),%rcx
  41f27d:	xor    %edx,%edx
  41f27f:	mov    $0x6f,%esi
  41f284:	mov    %rbp,%rdi
  41f287:	mov    %r11,0x48(%rsp)
  41f28c:	callq  412af0 <BIO_ctrl@plt>
  41f291:	test   %rax,%rax
  41f294:	mov    0x48(%rsp),%r11
  41f299:	jne    41ecc1 <X509_get0_pubkey_bitstr@plt+0x82f1>
  41f29f:	lea    0x25ba9a(%rip),%rax        # 67ad40 <_edata+0x38>
  41f2a6:	mov    0xa8(%rsp),%rdx
  41f2ae:	lea    0x40713(%rip),%rsi        # 45f9c8 <_fini+0x24c4>
  41f2b5:	xor    %r13d,%r13d
  41f2b8:	mov    $0x1,%r14d
  41f2be:	mov    (%rax),%rdi
  41f2c1:	xor    %eax,%eax
  41f2c3:	callq  413c40 <BIO_printf@plt>
  41f2c8:	lea    0x25ba71(%rip),%rax        # 67ad40 <_edata+0x38>
  41f2cf:	mov    (%rax),%rdi
  41f2d2:	callq  413f40 <ERR_print_errors@plt>
  41f2d7:	jmpq   41e819 <X509_get0_pubkey_bitstr@plt+0x7e49>
  41f2dc:	mov    0x256bd5(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  41f2e3:	xor    %esi,%esi
  41f2e5:	mov    %r11,0x48(%rsp)
  41f2ea:	mov    (%rax),%rdi
  41f2ed:	callq  4161e0 <BIO_new_fp@plt>
  41f2f2:	test   %rax,%rax
  41f2f5:	mov    %rax,0x38(%rsp)
  41f2fa:	lea    0x405a2(%rip),%rdx        # 45f8a3 <_fini+0x239f>
  41f301:	mov    0x48(%rsp),%r11
  41f306:	jne    41e7be <X509_get0_pubkey_bitstr@plt+0x7dee>
  41f30c:	lea    0x25ba2d(%rip),%rax        # 67ad40 <_edata+0x38>
  41f313:	lea    0x40632(%rip),%rsi        # 45f94c <_fini+0x2448>
  41f31a:	xor    %r13d,%r13d
  41f31d:	mov    $0x1,%r14d
  41f323:	mov    (%rax),%rdi
  41f326:	xor    %eax,%eax
  41f328:	callq  413c40 <BIO_printf@plt>
  41f32d:	lea    0x25ba0c(%rip),%rax        # 67ad40 <_edata+0x38>
  41f334:	mov    (%rax),%rdi
  41f337:	callq  413f40 <ERR_print_errors@plt>
  41f33c:	movq   $0x0,0x38(%rsp)
  41f345:	jmpq   41e819 <X509_get0_pubkey_bitstr@plt+0x7e49>
  41f34a:	lea    0x3e811(%rip),%rdi        # 45db62 <_fini+0x65e>
  41f351:	mov    $0x8,%ecx
  41f356:	mov    %rbp,%rsi
  41f359:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41f35b:	jne    41f447 <X509_get0_pubkey_bitstr@plt+0x8a77>
  41f361:	sub    $0x1,%r14d
  41f365:	je     41e690 <X509_get0_pubkey_bitstr@plt+0x7cc0>
  41f36b:	lea    0x25b9ce(%rip),%rax        # 67ad40 <_edata+0x38>
  41f372:	mov    0x8(%r11),%rsi
  41f376:	xor    %edx,%edx
  41f378:	mov    %r8d,0x88(%rsp)
  41f380:	mov    %r10d,0x6c(%rsp)
  41f385:	lea    0x8(%r11),%rbp
  41f389:	mov    %r9,0x40(%rsp)
  41f38e:	mov    (%rax),%rdi
  41f391:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  41f396:	mov    0x40(%rsp),%r9
  41f39b:	mov    %rax,0x80(%rsp)
  41f3a3:	mov    0x6c(%rsp),%r10d
  41f3a8:	mov    0x88(%rsp),%r8d
  41f3b0:	jmpq   41e577 <X509_get0_pubkey_bitstr@plt+0x7ba7>
  41f3b5:	lea    0xc8(%rsp),%rcx
  41f3bd:	xor    %edx,%edx
  41f3bf:	mov    $0x78,%esi
  41f3c4:	mov    %rbp,%rdi
  41f3c7:	mov    %r11,0x58(%rsp)
  41f3cc:	callq  412af0 <BIO_ctrl@plt>
  41f3d1:	mov    0xc8(%rsp),%rdi
  41f3d9:	mov    $0x8,%esi
  41f3de:	callq  4142e0 <EVP_MD_CTX_set_flags@plt>
  41f3e3:	mov    0x58(%rsp),%r11
  41f3e8:	jmpq   41eb92 <X509_get0_pubkey_bitstr@plt+0x81c2>
  41f3ed:	lea    0x25b94c(%rip),%rax        # 67ad40 <_edata+0x38>
  41f3f4:	lea    0x4056f(%rip),%rsi        # 45f96a <_fini+0x2466>
  41f3fb:	mov    %rbp,%rdx
  41f3fe:	mov    0x58(%rsp),%rbp
  41f403:	xor    %r13d,%r13d
  41f406:	mov    (%rax),%rdi
  41f409:	xor    %eax,%eax
  41f40b:	callq  413c40 <BIO_printf@plt>
  41f410:	lea    0x25b929(%rip),%rax        # 67ad40 <_edata+0x38>
  41f417:	mov    (%rax),%rdi
  41f41a:	callq  413f40 <ERR_print_errors@plt>
  41f41f:	mov    0x60(%rsp),%r11
  41f424:	jmpq   41eb5e <X509_get0_pubkey_bitstr@plt+0x818e>
  41f429:	callq  415c40 <EVP_DigestSignInit@plt>
  41f42e:	mov    0x48(%rsp),%r11
  41f433:	jmpq   41ec5b <X509_get0_pubkey_bitstr@plt+0x828b>
  41f438:	mov    0x60(%rsp),%r12
  41f43d:	mov    0x70(%rsp),%r15
  41f442:	jmpq   41e819 <X509_get0_pubkey_bitstr@plt+0x7e49>
  41f447:	lea    0x4048f(%rip),%rdi        # 45f8dd <_fini+0x23d9>
  41f44e:	mov    $0x5,%ecx
  41f453:	mov    %rbp,%rsi
  41f456:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41f458:	je     41f4f8 <X509_get0_pubkey_bitstr@plt+0x8b28>
  41f45e:	lea    0x4047d(%rip),%rdi        # 45f8e2 <_fini+0x23de>
  41f465:	mov    $0x8,%ecx
  41f46a:	mov    %rbp,%rsi
  41f46d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41f46f:	je     41f6d0 <X509_get0_pubkey_bitstr@plt+0x8d00>
  41f475:	test   %edx,%edx
  41f477:	jne    41f5eb <X509_get0_pubkey_bitstr@plt+0x8c1b>
  41f47d:	cmpb   $0x64,0x1(%rbp)
  41f481:	jne    41f5eb <X509_get0_pubkey_bitstr@plt+0x8c1b>
  41f487:	cmpb   $0x0,0x2(%rbp)
  41f48b:	jne    41f5eb <X509_get0_pubkey_bitstr@plt+0x8c1b>
  41f491:	mov    %r11,%rbp
  41f494:	movl   $0x1,0x60(%rsp)
  41f49c:	jmpq   41e577 <X509_get0_pubkey_bitstr@plt+0x7ba7>
  41f4a1:	nopl   0x0(%rax)
  41f4a8:	lea    0x25b891(%rip),%rax        # 67ad40 <_edata+0x38>
  41f4af:	lea    0x404b8(%rip),%rsi        # 45f96e <_fini+0x246a>
  41f4b6:	mov    %rbp,%rdx
  41f4b9:	mov    0x48(%rsp),%rbp
  41f4be:	mov    (%rax),%rdi
  41f4c1:	xor    %eax,%eax
  41f4c3:	callq  413c40 <BIO_printf@plt>
  41f4c8:	lea    0x25b871(%rip),%rax        # 67ad40 <_edata+0x38>
  41f4cf:	mov    (%rax),%rdi
  41f4d2:	callq  413f40 <ERR_print_errors@plt>
  41f4d7:	jmpq   41ef17 <X509_get0_pubkey_bitstr@plt+0x8547>
  41f4dc:	movl   $0x0,0x48(%rsp)
  41f4e4:	xor    %r13d,%r13d
  41f4e7:	jmpq   41ed6f <X509_get0_pubkey_bitstr@plt+0x839f>
  41f4ec:	lea    0x404be(%rip),%rsi        # 45f9b1 <_fini+0x24ad>
  41f4f3:	jmpq   41eef7 <X509_get0_pubkey_bitstr@plt+0x8527>
  41f4f8:	mov    %r11,%rbp
  41f4fb:	movl   $0x0,0x68(%rsp)
  41f503:	jmpq   41e577 <X509_get0_pubkey_bitstr@plt+0x7ba7>
  41f508:	mov    0x256a01(%rip),%rax        # 675f10 <_fini+0x218a0c>
  41f50f:	mov    0x40(%rsp),%rdi
  41f514:	xor    %edx,%edx
  41f516:	mov    $0x6a,%esi
  41f51b:	mov    (%rax),%rcx
  41f51e:	callq  412af0 <BIO_ctrl@plt>
  41f523:	lea    0x412a1(%rip),%rax        # 4607cb <_fini+0x32c7>
  41f52a:	mov    0xb0(%rsp),%r9
  41f532:	mov    0x68(%rsp),%r8d
  41f537:	mov    0x6c(%rsp),%ecx
  41f53b:	mov    0x58(%rsp),%rdx
  41f540:	mov    %rbx,%rsi
  41f543:	mov    %rax,0x20(%rsp)
  41f548:	mov    0x48(%rsp),%eax
  41f54c:	mov    0x38(%rsp),%rdi
  41f551:	mov    %rbp,0x28(%rsp)
  41f556:	movq   $0x0,0x18(%rsp)
  41f55f:	movq   $0x0,0x10(%rsp)
  41f568:	mov    %eax,0x8(%rsp)
  41f56c:	mov    %r13,(%rsp)
  41f570:	callq  41dfc0 <X509_get0_pubkey_bitstr@plt+0x75f0>
  41f575:	mov    %eax,%r14d
  41f578:	jmpq   41e819 <X509_get0_pubkey_bitstr@plt+0x7e49>
  41f57d:	mov    0x50(%rsp),%rdx
  41f582:	lea    0x40277(%rip),%rsi        # 45f800 <_fini+0x22fc>
  41f589:	lea    0x25b7b0(%rip),%rax        # 67ad40 <_edata+0x38>
  41f590:	mov    $0x1,%r14d
  41f596:	mov    (%rax),%rdi
  41f599:	xor    %eax,%eax
  41f59b:	callq  413c40 <BIO_printf@plt>
  41f5a0:	lea    0x25b799(%rip),%rax        # 67ad40 <_edata+0x38>
  41f5a7:	mov    (%rax),%rdi
  41f5aa:	callq  413f40 <ERR_print_errors@plt>
  41f5af:	jmpq   41e819 <X509_get0_pubkey_bitstr@plt+0x7e49>
  41f5b4:	lea    0x25b785(%rip),%rax        # 67ad40 <_edata+0x38>
  41f5bb:	lea    0x403c2(%rip),%rsi        # 45f984 <_fini+0x2480>
  41f5c2:	mov    %r11,0x58(%rsp)
  41f5c7:	xor    %r13d,%r13d
  41f5ca:	mov    (%rax),%rdi
  41f5cd:	callq  413b70 <BIO_puts@plt>
  41f5d2:	lea    0x25b767(%rip),%rax        # 67ad40 <_edata+0x38>
  41f5d9:	mov    (%rax),%rdi
  41f5dc:	callq  413f40 <ERR_print_errors@plt>
  41f5e1:	mov    0x58(%rsp),%r11
  41f5e6:	jmpq   41eb5e <X509_get0_pubkey_bitstr@plt+0x818e>
  41f5eb:	lea    0x402f8(%rip),%rdi        # 45f8ea <_fini+0x23e6>
  41f5f2:	mov    $0x12,%ecx
  41f5f7:	mov    %rbp,%rsi
  41f5fa:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41f5fc:	je     41f6bc <X509_get0_pubkey_bitstr@plt+0x8cec>
  41f602:	lea    0x402f3(%rip),%rsi        # 45f8fc <_fini+0x23f8>
  41f609:	mov    %rbp,%rdi
  41f60c:	mov    %r11,0x90(%rsp)
  41f614:	mov    %r8d,0x88(%rsp)
  41f61c:	mov    %r10d,0x6c(%rsp)
  41f621:	mov    %r9,0x40(%rsp)
  41f626:	callq  4155c0 <strcmp@plt>
  41f62b:	test   %eax,%eax
  41f62d:	mov    0x40(%rsp),%r9
  41f632:	mov    0x6c(%rsp),%r10d
  41f637:	mov    0x88(%rsp),%r8d
  41f63f:	mov    0x90(%rsp),%r11
  41f647:	je     41f723 <X509_get0_pubkey_bitstr@plt+0x8d53>
  41f64d:	lea    0x402b8(%rip),%rsi        # 45f90c <_fini+0x2408>
  41f654:	mov    %rbp,%rdi
  41f657:	callq  4155c0 <strcmp@plt>
  41f65c:	test   %eax,%eax
  41f65e:	mov    0x40(%rsp),%r9
  41f663:	mov    0x6c(%rsp),%r10d
  41f668:	mov    0x88(%rsp),%r8d
  41f670:	mov    0x90(%rsp),%r11
  41f678:	jne    41f740 <X509_get0_pubkey_bitstr@plt+0x8d70>
  41f67e:	sub    $0x1,%r14d
  41f682:	je     41e695 <X509_get0_pubkey_bitstr@plt+0x7cc5>
  41f688:	mov    0x8(%r11),%rax
  41f68c:	lea    0x8(%r11),%rbp
  41f690:	mov    %rax,0x70(%rsp)
  41f695:	jmpq   41e577 <X509_get0_pubkey_bitstr@plt+0x7ba7>
  41f69a:	nopw   0x0(%rax,%rax,1)
  41f6a0:	mov    %r11,0x48(%rsp)
  41f6a5:	callq  412f50 <EVP_md5@plt>
  41f6aa:	mov    0x48(%rsp),%r11
  41f6af:	mov    %rax,0x98(%rsp)
  41f6b7:	jmpq   41f275 <X509_get0_pubkey_bitstr@plt+0x88a5>
  41f6bc:	lea    0x401cf(%rip),%rax        # 45f892 <_fini+0x238e>
  41f6c3:	mov    %r11,%rbp
  41f6c6:	mov    %rax,0x70(%rsp)
  41f6cb:	jmpq   41e577 <X509_get0_pubkey_bitstr@plt+0x7ba7>
  41f6d0:	mov    %r11,%rbp
  41f6d3:	movl   $0x1,0x68(%rsp)
  41f6db:	jmpq   41e577 <X509_get0_pubkey_bitstr@plt+0x7ba7>
  41f6e0:	lea    0xc8(%rsp),%rcx
  41f6e8:	xor    %edx,%edx
  41f6ea:	mov    $0x78,%esi
  41f6ef:	mov    %rbp,%rdi
  41f6f2:	callq  412af0 <BIO_ctrl@plt>
  41f6f7:	mov    0xc8(%rsp),%rdi
  41f6ff:	callq  413f30 <EVP_MD_CTX_md@plt>
  41f704:	mov    0x50(%rsp),%r11
  41f709:	mov    %rax,0x98(%rsp)
  41f711:	jmpq   41ed9a <X509_get0_pubkey_bitstr@plt+0x83ca>
  41f716:	xor    %r14d,%r14d
  41f719:	jmpq   41e819 <X509_get0_pubkey_bitstr@plt+0x7e49>
  41f71e:	callq  414c30 <__stack_chk_fail@plt>
  41f723:	mov    %r11,%rbp
  41f726:	movl   $0x1,0xa4(%rsp)
  41f731:	jmpq   41e577 <X509_get0_pubkey_bitstr@plt+0x7ba7>
  41f736:	mov    0x48(%rsp),%rdx
  41f73b:	jmpq   41f30c <X509_get0_pubkey_bitstr@plt+0x893c>
  41f740:	lea    0x401cb(%rip),%rsi        # 45f912 <_fini+0x240e>
  41f747:	mov    %rbp,%rdi
  41f74a:	mov    %r11,0x90(%rsp)
  41f752:	mov    %r8d,0x88(%rsp)
  41f75a:	mov    %r10d,0x6c(%rsp)
  41f75f:	mov    %r9,0x40(%rsp)
  41f764:	callq  4155c0 <strcmp@plt>
  41f769:	test   %eax,%eax
  41f76b:	mov    0x40(%rsp),%r9
  41f770:	mov    0x6c(%rsp),%r10d
  41f775:	mov    0x88(%rsp),%r8d
  41f77d:	mov    0x90(%rsp),%r11
  41f785:	jne    41f7a3 <X509_get0_pubkey_bitstr@plt+0x8dd3>
  41f787:	sub    $0x1,%r14d
  41f78b:	je     41e695 <X509_get0_pubkey_bitstr@plt+0x7cc5>
  41f791:	mov    0x8(%r11),%rax
  41f795:	lea    0x8(%r11),%rbp
  41f799:	mov    %rax,0x78(%rsp)
  41f79e:	jmpq   41e577 <X509_get0_pubkey_bitstr@plt+0x7ba7>
  41f7a3:	lea    0x3ea6e(%rip),%rsi        # 45e218 <_fini+0xd14>
  41f7aa:	mov    %rbp,%rdi
  41f7ad:	mov    %r11,0x90(%rsp)
  41f7b5:	mov    %r8d,0x88(%rsp)
  41f7bd:	mov    %r10d,0x6c(%rsp)
  41f7c2:	mov    %r9,0x40(%rsp)
  41f7c7:	callq  4155c0 <strcmp@plt>
  41f7cc:	test   %eax,%eax
  41f7ce:	mov    0x40(%rsp),%r9
  41f7d3:	mov    0x6c(%rsp),%r10d
  41f7d8:	mov    0x88(%rsp),%r8d
  41f7e0:	mov    0x90(%rsp),%r11
  41f7e8:	jne    41f857 <X509_get0_pubkey_bitstr@plt+0x8e87>
  41f7ea:	sub    $0x1,%r14d
  41f7ee:	je     41e5c5 <X509_get0_pubkey_bitstr@plt+0x7bf5>
  41f7f4:	test   %r15,%r15
  41f7f7:	je     41f90f <X509_get0_pubkey_bitstr@plt+0x8f3f>
  41f7fd:	mov    0x8(%r11),%rsi
  41f801:	mov    %r15,%rdi
  41f804:	mov    %r8d,0x88(%rsp)
  41f80c:	mov    %r10d,0x6c(%rsp)
  41f811:	mov    %r9,0x40(%rsp)
  41f816:	lea    0x8(%r11),%rbp
  41f81a:	callq  412fe0 <sk_push@plt>
  41f81f:	test   %eax,%eax
  41f821:	mov    0x40(%rsp),%r9
  41f826:	mov    0x6c(%rsp),%r10d
  41f82b:	mov    0x88(%rsp),%r8d
  41f833:	jne    41e577 <X509_get0_pubkey_bitstr@plt+0x7ba7>
  41f839:	cmpq   $0x0,0x50(%rsp)
  41f83f:	mov    %r8d,%esi
  41f842:	mov    %r8b,0x88(%rsp)
  41f84a:	mov    %rbp,%r11
  41f84d:	sete   %al
  41f850:	and    %esi,%eax
  41f852:	jmpq   41e6ab <X509_get0_pubkey_bitstr@plt+0x7cdb>
  41f857:	lea    0x400b9(%rip),%rsi        # 45f917 <_fini+0x2413>
  41f85e:	mov    %rbp,%rdi
  41f861:	mov    %r11,0x90(%rsp)
  41f869:	mov    %r8d,0x88(%rsp)
  41f871:	mov    %r10d,0x6c(%rsp)
  41f876:	mov    %r9,0x40(%rsp)
  41f87b:	callq  4155c0 <strcmp@plt>
  41f880:	test   %eax,%eax
  41f882:	mov    0x40(%rsp),%r9
  41f887:	mov    0x6c(%rsp),%r10d
  41f88c:	mov    0x88(%rsp),%r8d
  41f894:	mov    0x90(%rsp),%r11
  41f89c:	jne    41f9a3 <X509_get0_pubkey_bitstr@plt+0x8fd3>
  41f8a2:	sub    $0x1,%r14d
  41f8a6:	je     41e695 <X509_get0_pubkey_bitstr@plt+0x7cc5>
  41f8ac:	test   %r12,%r12
  41f8af:	je     41f959 <X509_get0_pubkey_bitstr@plt+0x8f89>
  41f8b5:	mov    0x8(%r11),%rsi
  41f8b9:	mov    %r12,%rdi
  41f8bc:	mov    %r8d,0x88(%rsp)
  41f8c4:	mov    %r10d,0x6c(%rsp)
  41f8c9:	mov    %r9,0x40(%rsp)
  41f8ce:	lea    0x8(%r11),%rbp
  41f8d2:	callq  412fe0 <sk_push@plt>
  41f8d7:	test   %eax,%eax
  41f8d9:	mov    0x40(%rsp),%r9
  41f8de:	mov    0x6c(%rsp),%r10d
  41f8e3:	mov    0x88(%rsp),%r8d
  41f8eb:	jne    41e577 <X509_get0_pubkey_bitstr@plt+0x7ba7>
  41f8f1:	cmpq   $0x0,0x50(%rsp)
  41f8f7:	mov    %r8d,%ecx
  41f8fa:	mov    %r8b,0x88(%rsp)
  41f902:	mov    %rbp,%r11
  41f905:	sete   %al
  41f908:	and    %ecx,%eax
  41f90a:	jmpq   41e6ab <X509_get0_pubkey_bitstr@plt+0x7cdb>
  41f90f:	mov    %r11,0x90(%rsp)
  41f917:	mov    %r8d,0x88(%rsp)
  41f91f:	mov    %r10d,0x6c(%rsp)
  41f924:	mov    %r9,0x40(%rsp)
  41f929:	callq  412cd0 <sk_new_null@plt>
  41f92e:	test   %rax,%rax
  41f931:	mov    %rax,%r15
  41f934:	mov    0x40(%rsp),%r9
  41f939:	mov    0x6c(%rsp),%r10d
  41f93e:	mov    0x88(%rsp),%r8d
  41f946:	mov    0x90(%rsp),%r11
  41f94e:	jne    41f7fd <X509_get0_pubkey_bitstr@plt+0x8e2d>
  41f954:	jmpq   41e695 <X509_get0_pubkey_bitstr@plt+0x7cc5>
  41f959:	mov    %r11,0x90(%rsp)
  41f961:	mov    %r8d,0x88(%rsp)
  41f969:	mov    %r10d,0x6c(%rsp)
  41f96e:	mov    %r9,0x40(%rsp)
  41f973:	callq  412cd0 <sk_new_null@plt>
  41f978:	test   %rax,%rax
  41f97b:	mov    %rax,%r12
  41f97e:	mov    0x40(%rsp),%r9
  41f983:	mov    0x6c(%rsp),%r10d
  41f988:	mov    0x88(%rsp),%r8d
  41f990:	mov    0x90(%rsp),%r11
  41f998:	jne    41f8b5 <X509_get0_pubkey_bitstr@plt+0x8ee5>
  41f99e:	jmpq   41e5c5 <X509_get0_pubkey_bitstr@plt+0x7bf5>
  41f9a3:	lea    0x1(%rbp),%rdi
  41f9a7:	mov    %r11,0x90(%rsp)
  41f9af:	mov    %r8d,0x88(%rsp)
  41f9b7:	mov    %r10d,0x6c(%rsp)
  41f9bc:	mov    %r9,0x40(%rsp)
  41f9c1:	callq  416720 <EVP_get_digestbyname@plt>
  41f9c6:	test   %rax,%rax
  41f9c9:	mov    0x40(%rsp),%r9
  41f9ce:	mov    0x6c(%rsp),%r10d
  41f9d3:	mov    0x88(%rsp),%r8d
  41f9db:	mov    0x90(%rsp),%r11
  41f9e3:	je     41e5c5 <X509_get0_pubkey_bitstr@plt+0x7bf5>
  41f9e9:	mov    %rax,0x98(%rsp)
  41f9f1:	mov    %r11,%rbp
  41f9f4:	jmpq   41e577 <X509_get0_pubkey_bitstr@plt+0x7ba7>
  41f9f9:	nopl   0x0(%rax)
  41fa00:	push   %r15
  41fa02:	push   %r14
  41fa04:	push   %r13
  41fa06:	push   %r12
  41fa08:	push   %rbp
  41fa09:	mov    %edi,%ebp
  41fa0b:	mov    $0xd,%edi
  41fa10:	push   %rbx
  41fa11:	mov    %rsi,%rbx
  41fa14:	mov    $0x1,%esi
  41fa19:	sub    $0x58,%rsp
  41fa1d:	mov    %fs:0x28,%rax
  41fa26:	mov    %rax,0x48(%rsp)
  41fa2b:	xor    %eax,%eax
  41fa2d:	callq  414ee0 <signal@plt>
  41fa32:	lea    0x25b307(%rip),%r15        # 67ad40 <_edata+0x38>
  41fa39:	mov    (%r15),%rdi
  41fa3c:	test   %rdi,%rdi
  41fa3f:	je     41fe38 <X509_get0_pubkey_bitstr@plt+0x9468>
  41fa45:	xor    %esi,%esi
  41fa47:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  41fa4c:	test   %eax,%eax
  41fa4e:	je     41fcf0 <X509_get0_pubkey_bitstr@plt+0x9320>
  41fa54:	mov    (%rbx),%rax
  41fa57:	lea    -0x1(%rbp),%r13d
  41fa5b:	movq   $0x0,0x20(%rsp)
  41fa64:	movq   $0x0,0x18(%rsp)
  41fa6d:	movq   $0x0,0x10(%rsp)
  41fa76:	mov    $0x3,%r12d
  41fa7c:	test   %r13d,%r13d
  41fa7f:	movl   $0x0,0x3c(%rsp)
  41fa87:	movl   $0x0,0x38(%rsp)
  41fa8f:	mov    %rax,0x28(%rsp)
  41fa94:	movl   $0x0,0x30(%rsp)
  41fa9c:	lea    0x8(%rbx),%rax
  41faa0:	movl   $0x3,0xc(%rsp)
  41faa8:	movl   $0x0,0x34(%rsp)
  41fab0:	jle    41fb46 <X509_get0_pubkey_bitstr@plt+0x9176>
  41fab6:	lea    0x3e222(%rip),%rbp        # 45dcdf <_fini+0x7db>
  41fabd:	mov    $0x8,%ebx
  41fac2:	mov    %rax,%r8
  41fac5:	jmp    41faf7 <X509_get0_pubkey_bitstr@plt+0x9127>
  41fac7:	nopw   0x0(%rax,%rax,1)
  41fad0:	sub    $0x1,%r13d
  41fad4:	je     41fc30 <X509_get0_pubkey_bitstr@plt+0x9260>
  41fada:	mov    0x8(%r8),%rdi
  41fade:	lea    0x8(%r8),%r14
  41fae2:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  41fae7:	mov    %eax,%r12d
  41faea:	sub    $0x1,%r13d
  41faee:	lea    0x8(%r14),%r8
  41faf2:	test   %r13d,%r13d
  41faf5:	jle    41fb46 <X509_get0_pubkey_bitstr@plt+0x9176>
  41faf7:	mov    (%r8),%rdx
  41fafa:	mov    %rbp,%rdi
  41fafd:	mov    %rbx,%rcx
  41fb00:	mov    %rdx,%rsi
  41fb03:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41fb05:	je     41fad0 <X509_get0_pubkey_bitstr@plt+0x9100>
  41fb07:	lea    0x3e682(%rip),%rdi        # 45e190 <_fini+0xc8c>
  41fb0e:	mov    $0x9,%ecx
  41fb13:	mov    %rdx,%rsi
  41fb16:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41fb18:	jne    41fd20 <X509_get0_pubkey_bitstr@plt+0x9350>
  41fb1e:	sub    $0x1,%r13d
  41fb22:	je     41fc30 <X509_get0_pubkey_bitstr@plt+0x9260>
  41fb28:	mov    0x8(%r8),%rdi
  41fb2c:	lea    0x8(%r8),%r14
  41fb30:	sub    $0x1,%r13d
  41fb34:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  41fb39:	test   %r13d,%r13d
  41fb3c:	mov    %eax,0xc(%rsp)
  41fb40:	lea    0x8(%r14),%r8
  41fb44:	jg     41faf7 <X509_get0_pubkey_bitstr@plt+0x9127>
  41fb46:	callq  416990 <ERR_load_crypto_strings@plt>
  41fb4b:	mov    0x20(%rsp),%rsi
  41fb50:	mov    (%r15),%rdi
  41fb53:	xor    %edx,%edx
  41fb55:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  41fb5a:	callq  4152b0 <BIO_s_file@plt>
  41fb5f:	mov    %rax,%rdi
  41fb62:	callq  414a20 <BIO_new@plt>
  41fb67:	mov    %rax,%rbp
  41fb6a:	callq  4152b0 <BIO_s_file@plt>
  41fb6f:	mov    %rax,%rdi
  41fb72:	callq  414a20 <BIO_new@plt>
  41fb77:	test   %rax,%rax
  41fb7a:	mov    %rax,%rbx
  41fb7d:	je     41fe78 <X509_get0_pubkey_bitstr@plt+0x94a8>
  41fb83:	test   %rbp,%rbp
  41fb86:	je     41fe78 <X509_get0_pubkey_bitstr@plt+0x94a8>
  41fb8c:	cmpq   $0x0,0x10(%rsp)
  41fb92:	je     41fee0 <X509_get0_pubkey_bitstr@plt+0x9510>
  41fb98:	mov    0x10(%rsp),%rcx
  41fb9d:	mov    $0x3,%edx
  41fba2:	mov    $0x6c,%esi
  41fba7:	mov    %rbp,%rdi
  41fbaa:	callq  412af0 <BIO_ctrl@plt>
  41fbaf:	test   %rax,%rax
  41fbb2:	jle    41ff9b <X509_get0_pubkey_bitstr@plt+0x95cb>
  41fbb8:	cmpq   $0x0,0x18(%rsp)
  41fbbe:	je     41ff7d <X509_get0_pubkey_bitstr@plt+0x95ad>
  41fbc4:	mov    0x18(%rsp),%rcx
  41fbc9:	mov    $0x5,%edx
  41fbce:	mov    $0x6c,%esi
  41fbd3:	mov    %rbx,%rdi
  41fbd6:	callq  412af0 <BIO_ctrl@plt>
  41fbdb:	test   %rax,%rax
  41fbde:	jle    41ffd3 <X509_get0_pubkey_bitstr@plt+0x9603>
  41fbe4:	cmp    $0x1,%r12d
  41fbe8:	je     41ffb3 <X509_get0_pubkey_bitstr@plt+0x95e3>
  41fbee:	cmp    $0x3,%r12d
  41fbf2:	je     41fefe <X509_get0_pubkey_bitstr@plt+0x952e>
  41fbf8:	mov    (%r15),%rdi
  41fbfb:	lea    0x3fe3d(%rip),%rsi        # 45fa3f <_fini+0x253b>
  41fc02:	xor    %eax,%eax
  41fc04:	mov    $0x1,%r13d
  41fc0a:	xor    %r12d,%r12d
  41fc0d:	callq  413c40 <BIO_printf@plt>
  41fc12:	jmpq   41fe8e <X509_get0_pubkey_bitstr@plt+0x94be>
  41fc17:	mov    (%r15),%rdi
  41fc1a:	lea    0x3e10b(%rip),%rsi        # 45dd2c <_fini+0x828>
  41fc21:	xor    %eax,%eax
  41fc23:	callq  413c40 <BIO_printf@plt>
  41fc28:	nopl   0x0(%rax,%rax,1)
  41fc30:	mov    0x28(%rsp),%rdx
  41fc35:	mov    (%r15),%rdi
  41fc38:	lea    0x3eaf9(%rip),%rsi        # 45e738 <_fini+0x1234>
  41fc3f:	xor    %eax,%eax
  41fc41:	callq  413c40 <BIO_printf@plt>
  41fc46:	mov    (%r15),%rdi
  41fc49:	lea    0x3e105(%rip),%rsi        # 45dd55 <_fini+0x851>
  41fc50:	xor    %eax,%eax
  41fc52:	callq  413c40 <BIO_printf@plt>
  41fc57:	mov    (%r15),%rdi
  41fc5a:	lea    0x3e1ef(%rip),%rsi        # 45de50 <_fini+0x94c>
  41fc61:	xor    %eax,%eax
  41fc63:	callq  413c40 <BIO_printf@plt>
  41fc68:	mov    (%r15),%rdi
  41fc6b:	lea    0x3fea6(%rip),%rsi        # 45fb18 <_fini+0x2614>
  41fc72:	xor    %eax,%eax
  41fc74:	callq  413c40 <BIO_printf@plt>
  41fc79:	mov    (%r15),%rdi
  41fc7c:	lea    0x3e0e5(%rip),%rsi        # 45dd68 <_fini+0x864>
  41fc83:	xor    %eax,%eax
  41fc85:	callq  413c40 <BIO_printf@plt>
  41fc8a:	mov    (%r15),%rdi
  41fc8d:	lea    0x3fd57(%rip),%rsi        # 45f9eb <_fini+0x24e7>
  41fc94:	xor    %eax,%eax
  41fc96:	callq  413c40 <BIO_printf@plt>
  41fc9b:	mov    (%r15),%rdi
  41fc9e:	lea    0x3fea3(%rip),%rsi        # 45fb48 <_fini+0x2644>
  41fca5:	xor    %eax,%eax
  41fca7:	callq  413c40 <BIO_printf@plt>
  41fcac:	mov    (%r15),%rdi
  41fcaf:	lea    0x3feba(%rip),%rsi        # 45fb70 <_fini+0x266c>
  41fcb6:	xor    %eax,%eax
  41fcb8:	callq  413c40 <BIO_printf@plt>
  41fcbd:	mov    (%r15),%rdi
  41fcc0:	lea    0x3fd40(%rip),%rsi        # 45fa07 <_fini+0x2503>
  41fcc7:	xor    %eax,%eax
  41fcc9:	callq  413c40 <BIO_printf@plt>
  41fcce:	mov    (%r15),%rdi
  41fcd1:	lea    0x3fd4d(%rip),%rsi        # 45fa25 <_fini+0x2521>
  41fcd8:	xor    %eax,%eax
  41fcda:	callq  413c40 <BIO_printf@plt>
  41fcdf:	mov    (%r15),%rdi
  41fce2:	lea    0x3febf(%rip),%rsi        # 45fba8 <_fini+0x26a4>
  41fce9:	xor    %eax,%eax
  41fceb:	callq  413c40 <BIO_printf@plt>
  41fcf0:	mov    $0x1,%r13d
  41fcf6:	mov    0x48(%rsp),%rbx
  41fcfb:	xor    %fs:0x28,%rbx
  41fd04:	mov    %r13d,%eax
  41fd07:	jne    4202e6 <X509_get0_pubkey_bitstr@plt+0x9916>
  41fd0d:	add    $0x58,%rsp
  41fd11:	pop    %rbx
  41fd12:	pop    %rbp
  41fd13:	pop    %r12
  41fd15:	pop    %r13
  41fd17:	pop    %r14
  41fd19:	pop    %r15
  41fd1b:	retq   
  41fd1c:	nopl   0x0(%rax)
  41fd20:	movzbl (%rdx),%eax
  41fd23:	sub    $0x2d,%eax
  41fd26:	jne    41fd60 <X509_get0_pubkey_bitstr@plt+0x9390>
  41fd28:	cmpb   $0x69,0x1(%rdx)
  41fd2c:	jne    41fd60 <X509_get0_pubkey_bitstr@plt+0x9390>
  41fd2e:	cmpb   $0x6e,0x2(%rdx)
  41fd32:	jne    41fd60 <X509_get0_pubkey_bitstr@plt+0x9390>
  41fd34:	cmpb   $0x0,0x3(%rdx)
  41fd38:	jne    41fd60 <X509_get0_pubkey_bitstr@plt+0x9390>
  41fd3a:	sub    $0x1,%r13d
  41fd3e:	je     41fc30 <X509_get0_pubkey_bitstr@plt+0x9260>
  41fd44:	mov    0x8(%r8),%rax
  41fd48:	lea    0x8(%r8),%r14
  41fd4c:	mov    %rax,0x10(%rsp)
  41fd51:	jmpq   41faea <X509_get0_pubkey_bitstr@plt+0x911a>
  41fd56:	nopw   %cs:0x0(%rax,%rax,1)
  41fd60:	lea    0x3e0df(%rip),%rdi        # 45de46 <_fini+0x942>
  41fd67:	mov    $0x5,%ecx
  41fd6c:	mov    %rdx,%rsi
  41fd6f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41fd71:	jne    41fd90 <X509_get0_pubkey_bitstr@plt+0x93c0>
  41fd73:	sub    $0x1,%r13d
  41fd77:	je     41fc30 <X509_get0_pubkey_bitstr@plt+0x9260>
  41fd7d:	mov    0x8(%r8),%rax
  41fd81:	lea    0x8(%r8),%r14
  41fd85:	mov    %rax,0x18(%rsp)
  41fd8a:	jmpq   41faea <X509_get0_pubkey_bitstr@plt+0x911a>
  41fd8f:	nop
  41fd90:	lea    0x3ddcb(%rip),%rdi        # 45db62 <_fini+0x65e>
  41fd97:	mov    %rdx,%rsi
  41fd9a:	mov    %rbx,%rcx
  41fd9d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41fd9f:	jne    41fdc0 <X509_get0_pubkey_bitstr@plt+0x93f0>
  41fda1:	sub    $0x1,%r13d
  41fda5:	je     41fc30 <X509_get0_pubkey_bitstr@plt+0x9260>
  41fdab:	mov    0x8(%r8),%rax
  41fdaf:	lea    0x8(%r8),%r14
  41fdb3:	mov    %rax,0x20(%rsp)
  41fdb8:	jmpq   41faea <X509_get0_pubkey_bitstr@plt+0x911a>
  41fdbd:	nopl   (%rax)
  41fdc0:	lea    0x3fc1d(%rip),%rdi        # 45f9e4 <_fini+0x24e0>
  41fdc7:	mov    $0x7,%ecx
  41fdcc:	mov    %rdx,%rsi
  41fdcf:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41fdd1:	je     41fe18 <X509_get0_pubkey_bitstr@plt+0x9448>
  41fdd3:	lea    0x3e48d(%rip),%rdi        # 45e267 <_fini+0xd63>
  41fdda:	mov    $0x6,%ecx
  41fddf:	mov    %rdx,%rsi
  41fde2:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41fde4:	je     41fe28 <X509_get0_pubkey_bitstr@plt+0x9458>
  41fde6:	test   %eax,%eax
  41fde8:	jne    41feb9 <X509_get0_pubkey_bitstr@plt+0x94e9>
  41fdee:	cmpb   $0x43,0x1(%rdx)
  41fdf2:	jne    41feb9 <X509_get0_pubkey_bitstr@plt+0x94e9>
  41fdf8:	cmpb   $0x0,0x2(%rdx)
  41fdfc:	jne    41feb9 <X509_get0_pubkey_bitstr@plt+0x94e9>
  41fe02:	mov    %r8,%r14
  41fe05:	movl   $0x1,0x3c(%rsp)
  41fe0d:	jmpq   41faea <X509_get0_pubkey_bitstr@plt+0x911a>
  41fe12:	nopw   0x0(%rax,%rax,1)
  41fe18:	mov    %r8,%r14
  41fe1b:	movl   $0x1,0x30(%rsp)
  41fe23:	jmpq   41faea <X509_get0_pubkey_bitstr@plt+0x911a>
  41fe28:	mov    %r8,%r14
  41fe2b:	movl   $0x1,0x34(%rsp)
  41fe33:	jmpq   41faea <X509_get0_pubkey_bitstr@plt+0x911a>
  41fe38:	callq  4152b0 <BIO_s_file@plt>
  41fe3d:	mov    %rax,%rdi
  41fe40:	callq  414a20 <BIO_new@plt>
  41fe45:	test   %rax,%rax
  41fe48:	mov    %rax,%rdi
  41fe4b:	mov    %rax,(%r15)
  41fe4e:	je     41fa45 <X509_get0_pubkey_bitstr@plt+0x9075>
  41fe54:	mov    0x256125(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  41fe5b:	mov    $0x6a,%esi
  41fe60:	mov    (%rdx),%rcx
  41fe63:	mov    $0x10,%edx
  41fe68:	callq  412af0 <BIO_ctrl@plt>
  41fe6d:	mov    (%r15),%rdi
  41fe70:	jmpq   41fa45 <X509_get0_pubkey_bitstr@plt+0x9075>
  41fe75:	nopl   (%rax)
  41fe78:	mov    (%r15),%rdi
  41fe7b:	xor    %r12d,%r12d
  41fe7e:	mov    $0x1,%r13d
  41fe84:	callq  413f40 <ERR_print_errors@plt>
  41fe89:	test   %rbp,%rbp
  41fe8c:	je     41fe96 <X509_get0_pubkey_bitstr@plt+0x94c6>
  41fe8e:	mov    %rbp,%rdi
  41fe91:	callq  413960 <BIO_free@plt>
  41fe96:	test   %rbx,%rbx
  41fe99:	je     41fea3 <X509_get0_pubkey_bitstr@plt+0x94d3>
  41fe9b:	mov    %rbx,%rdi
  41fe9e:	callq  416570 <BIO_free_all@plt>
  41fea3:	test   %r12,%r12
  41fea6:	je     41fcf6 <X509_get0_pubkey_bitstr@plt+0x9326>
  41feac:	mov    %r12,%rdi
  41feaf:	callq  413d80 <DH_free@plt>
  41feb4:	jmpq   41fcf6 <X509_get0_pubkey_bitstr@plt+0x9326>
  41feb9:	lea    0x3de27(%rip),%rdi        # 45dce7 <_fini+0x7e3>
  41fec0:	mov    $0x7,%ecx
  41fec5:	mov    %rdx,%rsi
  41fec8:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  41feca:	jne    41fc17 <X509_get0_pubkey_bitstr@plt+0x9247>
  41fed0:	mov    %r8,%r14
  41fed3:	movl   $0x1,0x38(%rsp)
  41fedb:	jmpq   41faea <X509_get0_pubkey_bitstr@plt+0x911a>
  41fee0:	mov    0x256029(%rip),%rax        # 675f10 <_fini+0x218a0c>
  41fee7:	xor    %edx,%edx
  41fee9:	mov    $0x6a,%esi
  41feee:	mov    %rbp,%rdi
  41fef1:	mov    (%rax),%rcx
  41fef4:	callq  412af0 <BIO_ctrl@plt>
  41fef9:	jmpq   41fbb8 <X509_get0_pubkey_bitstr@plt+0x91e8>
  41fefe:	xor    %ecx,%ecx
  41ff00:	xor    %edx,%edx
  41ff02:	xor    %esi,%esi
  41ff04:	mov    %rbp,%rdi
  41ff07:	callq  413f70 <PEM_read_bio_DHparams@plt>
  41ff0c:	mov    %rax,%r12
  41ff0f:	test   %r12,%r12
  41ff12:	je     4202c2 <X509_get0_pubkey_bitstr@plt+0x98f2>
  41ff18:	mov    0x34(%rsp),%esi
  41ff1c:	test   %esi,%esi
  41ff1e:	jne    420153 <X509_get0_pubkey_bitstr@plt+0x9783>
  41ff24:	mov    0x30(%rsp),%ecx
  41ff28:	test   %ecx,%ecx
  41ff2a:	jne    4200d1 <X509_get0_pubkey_bitstr@plt+0x9701>
  41ff30:	mov    0x3c(%rsp),%edx
  41ff34:	test   %edx,%edx
  41ff36:	jne    41ffeb <X509_get0_pubkey_bitstr@plt+0x961b>
  41ff3c:	mov    0x38(%rsp),%eax
  41ff40:	xor    %r13d,%r13d
  41ff43:	test   %eax,%eax
  41ff45:	jne    41fe8e <X509_get0_pubkey_bitstr@plt+0x94be>
  41ff4b:	cmpl   $0x1,0xc(%rsp)
  41ff50:	je     420324 <X509_get0_pubkey_bitstr@plt+0x9954>
  41ff56:	cmpl   $0x3,0xc(%rsp)
  41ff5b:	je     4202eb <X509_get0_pubkey_bitstr@plt+0x991b>
  41ff61:	mov    (%r15),%rdi
  41ff64:	lea    0x3f405(%rip),%rsi        # 45f370 <_fini+0x1e6c>
  41ff6b:	xor    %eax,%eax
  41ff6d:	mov    $0x1,%r13d
  41ff73:	callq  413c40 <BIO_printf@plt>
  41ff78:	jmpq   41fe8e <X509_get0_pubkey_bitstr@plt+0x94be>
  41ff7d:	mov    0x255f34(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  41ff84:	xor    %edx,%edx
  41ff86:	mov    $0x6a,%esi
  41ff8b:	mov    %rbx,%rdi
  41ff8e:	mov    (%rax),%rcx
  41ff91:	callq  412af0 <BIO_ctrl@plt>
  41ff96:	jmpq   41fbe4 <X509_get0_pubkey_bitstr@plt+0x9214>
  41ff9b:	mov    0x10(%rsp),%rdi
  41ffa0:	mov    $0x1,%r13d
  41ffa6:	xor    %r12d,%r12d
  41ffa9:	callq  4142c0 <perror@plt>
  41ffae:	jmpq   41fe8e <X509_get0_pubkey_bitstr@plt+0x94be>
  41ffb3:	mov    0x255fe6(%rip),%rsi        # 675fa0 <_fini+0x218a9c>
  41ffba:	mov    0x255f1f(%rip),%rdi        # 675ee0 <_fini+0x2189dc>
  41ffc1:	xor    %ecx,%ecx
  41ffc3:	mov    %rbp,%rdx
  41ffc6:	callq  415520 <ASN1_d2i_bio@plt>
  41ffcb:	mov    %rax,%r12
  41ffce:	jmpq   41ff0f <X509_get0_pubkey_bitstr@plt+0x953f>
  41ffd3:	mov    0x18(%rsp),%rdi
  41ffd8:	mov    $0x1,%r13d
  41ffde:	xor    %r12d,%r12d
  41ffe1:	callq  4142c0 <perror@plt>
  41ffe6:	jmpq   41fe8e <X509_get0_pubkey_bitstr@plt+0x94be>
  41ffeb:	mov    0x8(%r12),%rdi
  41fff0:	callq  415810 <BN_num_bits@plt>
  41fff5:	mov    0x8(%r12),%rdi
  41fffa:	mov    %eax,%r13d
  41fffd:	callq  415810 <BN_num_bits@plt>
  420002:	lea    0xe(%r13),%edi
  420006:	add    $0x7,%r13d
  42000a:	lea    0x3fa99(%rip),%rsi        # 45faaa <_fini+0x25a6>
  420011:	mov    $0x11e,%edx
  420016:	mov    %eax,0x10(%rsp)
  42001a:	cmovns %r13d,%edi
  42001e:	sar    $0x3,%edi
  420021:	callq  413d50 <CRYPTO_malloc@plt>
  420026:	test   %rax,%rax
  420029:	mov    %rax,%r13
  42002c:	je     42033c <X509_get0_pubkey_bitstr@plt+0x996c>
  420032:	mov    0x8(%r12),%rdi
  420037:	mov    %rax,%rsi
  42003a:	callq  413390 <BN_bn2bin@plt>
  42003f:	mov    0x10(%rsp),%edx
  420043:	lea    0x3fc06(%rip),%rsi        # 45fc50 <_fini+0x274c>
  42004a:	mov    %eax,%r14d
  42004d:	mov    $0x1,%edi
  420052:	xor    %eax,%eax
  420054:	callq  412780 <__printf_chk@plt>
  420059:	xor    %ecx,%ecx
  42005b:	test   %r14d,%r14d
  42005e:	movl   $0x0,0x44(%rsp)
  420066:	jg     4200a2 <X509_get0_pubkey_bitstr@plt+0x96d2>
  420068:	jmpq   420165 <X509_get0_pubkey_bitstr@plt+0x9795>
  42006d:	nopl   (%rax)
  420070:	movslq 0x44(%rsp),%rax
  420075:	lea    0x3fa4a(%rip),%rsi        # 45fac6 <_fini+0x25c2>
  42007c:	mov    $0x1,%edi
  420081:	movzbl 0x0(%r13,%rax,1),%edx
  420087:	xor    %eax,%eax
  420089:	callq  412780 <__printf_chk@plt>
  42008e:	mov    0x44(%rsp),%eax
  420092:	lea    0x1(%rax),%ecx
  420095:	cmp    %ecx,%r14d
  420098:	mov    %ecx,0x44(%rsp)
  42009c:	jle    420165 <X509_get0_pubkey_bitstr@plt+0x9795>
  4200a2:	mov    $0x2aaaaaab,%eax
  4200a7:	imul   %ecx
  4200a9:	mov    %ecx,%eax
  4200ab:	sar    $0x1f,%eax
  4200ae:	sar    %edx
  4200b0:	sub    %eax,%edx
  4200b2:	lea    (%rdx,%rdx,2),%eax
  4200b5:	shl    $0x2,%eax
  4200b8:	cmp    %eax,%ecx
  4200ba:	jne    420070 <X509_get0_pubkey_bitstr@plt+0x96a0>
  4200bc:	lea    0x3fa00(%rip),%rsi        # 45fac3 <_fini+0x25bf>
  4200c3:	mov    $0x1,%edi
  4200c8:	xor    %eax,%eax
  4200ca:	callq  412780 <__printf_chk@plt>
  4200cf:	jmp    420070 <X509_get0_pubkey_bitstr@plt+0x96a0>
  4200d1:	lea    0x44(%rsp),%rsi
  4200d6:	mov    %r12,%rdi
  4200d9:	callq  4147a0 <DH_check@plt>
  4200de:	test   %eax,%eax
  4200e0:	je     4202af <X509_get0_pubkey_bitstr@plt+0x98df>
  4200e6:	mov    0x44(%rsp),%eax
  4200ea:	test   $0x1,%al
  4200ec:	je     4200fe <X509_get0_pubkey_bitstr@plt+0x972e>
  4200ee:	lea    0x3f984(%rip),%rdi        # 45fa79 <_fini+0x2575>
  4200f5:	callq  415a40 <puts@plt>
  4200fa:	mov    0x44(%rsp),%eax
  4200fe:	test   $0x2,%al
  420100:	je     420112 <X509_get0_pubkey_bitstr@plt+0x9742>
  420102:	lea    0x3f985(%rip),%rdi        # 45fa8e <_fini+0x258a>
  420109:	callq  415a40 <puts@plt>
  42010e:	mov    0x44(%rsp),%eax
  420112:	test   $0x4,%al
  420114:	je     420126 <X509_get0_pubkey_bitstr@plt+0x9756>
  420116:	lea    0x3facb(%rip),%rdi        # 45fbe8 <_fini+0x26e4>
  42011d:	callq  415a40 <puts@plt>
  420122:	mov    0x44(%rsp),%eax
  420126:	test   $0x8,%al
  420128:	je     42013a <X509_get0_pubkey_bitstr@plt+0x976a>
  42012a:	lea    0x3fadf(%rip),%rdi        # 45fc10 <_fini+0x270c>
  420131:	callq  415a40 <puts@plt>
  420136:	mov    0x44(%rsp),%eax
  42013a:	test   %eax,%eax
  42013c:	jne    41ff30 <X509_get0_pubkey_bitstr@plt+0x9560>
  420142:	lea    0x3fae7(%rip),%rdi        # 45fc30 <_fini+0x272c>
  420149:	callq  415a40 <puts@plt>
  42014e:	jmpq   41ff30 <X509_get0_pubkey_bitstr@plt+0x9560>
  420153:	mov    %r12,%rsi
  420156:	mov    %rbx,%rdi
  420159:	callq  412d50 <DHparams_print@plt>
  42015e:	xchg   %ax,%ax
  420160:	jmpq   41ff24 <X509_get0_pubkey_bitstr@plt+0x9554>
  420165:	lea    0x3f952(%rip),%rdi        # 45fabe <_fini+0x25ba>
  42016c:	callq  415a40 <puts@plt>
  420171:	mov    0x10(%r12),%rdi
  420176:	mov    %r13,%rsi
  420179:	callq  413390 <BN_bn2bin@plt>
  42017e:	mov    0x10(%rsp),%edx
  420182:	lea    0x3fae7(%rip),%rsi        # 45fc70 <_fini+0x276c>
  420189:	mov    %eax,%r14d
  42018c:	mov    $0x1,%edi
  420191:	xor    %eax,%eax
  420193:	callq  412780 <__printf_chk@plt>
  420198:	xor    %ecx,%ecx
  42019a:	test   %r14d,%r14d
  42019d:	movl   $0x0,0x44(%rsp)
  4201a5:	jg     4201de <X509_get0_pubkey_bitstr@plt+0x980e>
  4201a7:	jmp    42020d <X509_get0_pubkey_bitstr@plt+0x983d>
  4201a9:	nopl   0x0(%rax)
  4201b0:	movslq 0x44(%rsp),%rax
  4201b5:	lea    0x3f90a(%rip),%rsi        # 45fac6 <_fini+0x25c2>
  4201bc:	mov    $0x1,%edi
  4201c1:	movzbl 0x0(%r13,%rax,1),%edx
  4201c7:	xor    %eax,%eax
  4201c9:	callq  412780 <__printf_chk@plt>
  4201ce:	mov    0x44(%rsp),%eax
  4201d2:	lea    0x1(%rax),%ecx
  4201d5:	cmp    %ecx,%r14d
  4201d8:	mov    %ecx,0x44(%rsp)
  4201dc:	jle    42020d <X509_get0_pubkey_bitstr@plt+0x983d>
  4201de:	mov    $0x2aaaaaab,%eax
  4201e3:	imul   %ecx
  4201e5:	mov    %ecx,%eax
  4201e7:	sar    $0x1f,%eax
  4201ea:	sar    %edx
  4201ec:	sub    %eax,%edx
  4201ee:	lea    (%rdx,%rdx,2),%eax
  4201f1:	shl    $0x2,%eax
  4201f4:	cmp    %eax,%ecx
  4201f6:	jne    4201b0 <X509_get0_pubkey_bitstr@plt+0x97e0>
  4201f8:	lea    0x3f8c4(%rip),%rsi        # 45fac3 <_fini+0x25bf>
  4201ff:	mov    $0x1,%edi
  420204:	xor    %eax,%eax
  420206:	callq  412780 <__printf_chk@plt>
  42020b:	jmp    4201b0 <X509_get0_pubkey_bitstr@plt+0x97e0>
  42020d:	lea    0x3f8ba(%rip),%rdi        # 45face <_fini+0x25ca>
  420214:	callq  415a40 <puts@plt>
  420219:	mov    0x10(%rsp),%r14d
  42021e:	lea    0x3f8af(%rip),%rsi        # 45fad4 <_fini+0x25d0>
  420225:	mov    $0x1,%edi
  42022a:	xor    %eax,%eax
  42022c:	mov    %r14d,%edx
  42022f:	callq  412780 <__printf_chk@plt>
  420234:	lea    0x3f8ac(%rip),%rdi        # 45fae7 <_fini+0x25e3>
  42023b:	callq  415a40 <puts@plt>
  420240:	lea    0x3fa49(%rip),%rdi        # 45fc90 <_fini+0x278c>
  420247:	callq  415a40 <puts@plt>
  42024c:	lea    0x3fa6d(%rip),%rsi        # 45fcc0 <_fini+0x27bc>
  420253:	mov    %r14d,%ecx
  420256:	mov    %r14d,%edx
  420259:	mov    $0x1,%edi
  42025e:	xor    %eax,%eax
  420260:	callq  412780 <__printf_chk@plt>
  420265:	lea    0x3fa84(%rip),%rsi        # 45fcf0 <_fini+0x27ec>
  42026c:	mov    %r14d,%ecx
  42026f:	mov    %r14d,%edx
  420272:	mov    $0x1,%edi
  420277:	xor    %eax,%eax
  420279:	callq  412780 <__printf_chk@plt>
  42027e:	lea    0x3fa9b(%rip),%rdi        # 45fd20 <_fini+0x281c>
  420285:	callq  415a40 <puts@plt>
  42028a:	lea    0x3f860(%rip),%rdi        # 45faf1 <_fini+0x25ed>
  420291:	callq  415a40 <puts@plt>
  420296:	lea    0x3f864(%rip),%rdi        # 45fb01 <_fini+0x25fd>
  42029d:	callq  415a40 <puts@plt>
  4202a2:	mov    %r13,%rdi
  4202a5:	callq  415020 <CRYPTO_free@plt>
  4202aa:	jmpq   41ff3c <X509_get0_pubkey_bitstr@plt+0x956c>
  4202af:	mov    (%r15),%rdi
  4202b2:	mov    $0x1,%r13d
  4202b8:	callq  413f40 <ERR_print_errors@plt>
  4202bd:	jmpq   41fe8e <X509_get0_pubkey_bitstr@plt+0x94be>
  4202c2:	mov    (%r15),%rdi
  4202c5:	lea    0x3f78f(%rip),%rsi        # 45fa5b <_fini+0x2557>
  4202cc:	xor    %eax,%eax
  4202ce:	mov    $0x1,%r13d
  4202d4:	callq  413c40 <BIO_printf@plt>
  4202d9:	mov    (%r15),%rdi
  4202dc:	callq  413f40 <ERR_print_errors@plt>
  4202e1:	jmpq   41fe8e <X509_get0_pubkey_bitstr@plt+0x94be>
  4202e6:	callq  414c30 <__stack_chk_fail@plt>
  4202eb:	mov    %r12,%rsi
  4202ee:	mov    %rbx,%rdi
  4202f1:	callq  414c00 <PEM_write_bio_DHparams@plt>
  4202f6:	mov    %eax,0x44(%rsp)
  4202fa:	xor    %r13d,%r13d
  4202fd:	test   %eax,%eax
  4202ff:	jne    41fe8e <X509_get0_pubkey_bitstr@plt+0x94be>
  420305:	mov    (%r15),%rdi
  420308:	lea    0x3fa41(%rip),%rsi        # 45fd50 <_fini+0x284c>
  42030f:	mov    $0x1,%r13b
  420312:	callq  413c40 <BIO_printf@plt>
  420317:	mov    (%r15),%rdi
  42031a:	callq  413f40 <ERR_print_errors@plt>
  42031f:	jmpq   41fe8e <X509_get0_pubkey_bitstr@plt+0x94be>
  420324:	mov    0x255ca5(%rip),%rdi        # 675fd0 <_fini+0x218acc>
  42032b:	mov    %r12,%rdx
  42032e:	mov    %rbx,%rsi
  420331:	callq  413c70 <ASN1_i2d_bio@plt>
  420336:	mov    %eax,0x44(%rsp)
  42033a:	jmp    4202fa <X509_get0_pubkey_bitstr@plt+0x992a>
  42033c:	lea    0x3f76c(%rip),%rdi        # 45faaf <_fini+0x25ab>
  420343:	mov    $0x1,%r13b
  420346:	callq  4142c0 <perror@plt>
  42034b:	jmpq   41fe8e <X509_get0_pubkey_bitstr@plt+0x94be>
  420350:	push   %rbx
  420351:	mov    %rdx,%rbx
  420354:	sub    $0x10,%rsp
  420358:	mov    %fs:0x28,%rax
  420361:	mov    %rax,0x8(%rsp)
  420366:	xor    %eax,%eax
  420368:	test   %edi,%edi
  42036a:	movb   $0x2a,0x7(%rsp)
  42036f:	jne    4203c0 <X509_get0_pubkey_bitstr@plt+0x99f0>
  420371:	movb   $0x2e,0x7(%rsp)
  420376:	mov    0x8(%rbx),%rdi
  42037a:	lea    0x7(%rsp),%rsi
  42037f:	mov    $0x1,%edx
  420384:	callq  412db0 <BIO_write@plt>
  420389:	mov    0x8(%rbx),%rdi
  42038d:	xor    %ecx,%ecx
  42038f:	xor    %edx,%edx
  420391:	mov    $0xb,%esi
  420396:	callq  412af0 <BIO_ctrl@plt>
  42039b:	mov    0x8(%rsp),%rcx
  4203a0:	xor    %fs:0x28,%rcx
  4203a9:	mov    $0x1,%eax
  4203ae:	jne    4203e1 <X509_get0_pubkey_bitstr@plt+0x9a11>
  4203b0:	add    $0x10,%rsp
  4203b4:	pop    %rbx
  4203b5:	retq   
  4203b6:	nopw   %cs:0x0(%rax,%rax,1)
  4203c0:	cmp    $0x1,%edi
  4203c3:	jne    4203d0 <X509_get0_pubkey_bitstr@plt+0x9a00>
  4203c5:	movb   $0x2b,0x7(%rsp)
  4203ca:	jmp    420376 <X509_get0_pubkey_bitstr@plt+0x99a6>
  4203cc:	nopl   0x0(%rax)
  4203d0:	cmp    $0x2,%edi
  4203d3:	je     420376 <X509_get0_pubkey_bitstr@plt+0x99a6>
  4203d5:	cmp    $0x3,%edi
  4203d8:	jne    420376 <X509_get0_pubkey_bitstr@plt+0x99a6>
  4203da:	movb   $0xa,0x7(%rsp)
  4203df:	jmp    420376 <X509_get0_pubkey_bitstr@plt+0x99a6>
  4203e1:	callq  414c30 <__stack_chk_fail@plt>
  4203e6:	nopw   %cs:0x0(%rax,%rax,1)
  4203f0:	push   %r15
  4203f2:	push   %r14
  4203f4:	push   %r13
  4203f6:	push   %r12
  4203f8:	push   %rbp
  4203f9:	mov    %edi,%ebp
  4203fb:	mov    $0xd,%edi
  420400:	push   %rbx
  420401:	mov    %rsi,%rbx
  420404:	mov    $0x1,%esi
  420409:	sub    $0x98,%rsp
  420410:	mov    %fs:0x28,%rax
  420419:	mov    %rax,0x88(%rsp)
  420421:	xor    %eax,%eax
  420423:	movl   $0x0,0x6c(%rsp)
  42042b:	callq  414ee0 <signal@plt>
  420430:	lea    0x25a909(%rip),%r14        # 67ad40 <_edata+0x38>
  420437:	mov    (%r14),%rdi
  42043a:	test   %rdi,%rdi
  42043d:	je     420a4b <X509_get0_pubkey_bitstr@plt+0xa07b>
  420443:	xor    %esi,%esi
  420445:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  42044a:	test   %eax,%eax
  42044c:	je     4205b0 <X509_get0_pubkey_bitstr@plt+0x9be0>
  420452:	mov    (%rbx),%rax
  420455:	lea    -0x1(%rbp),%r13d
  420459:	lea    0x8(%rbx),%r9
  42045d:	movl   $0x0,0x28(%rsp)
  420465:	movq   $0x0,0x20(%rsp)
  42046e:	mov    $0x3,%r15d
  420474:	test   %r13d,%r13d
  420477:	movq   $0x0,0x38(%rsp)
  420480:	movq   $0x0,0x18(%rsp)
  420489:	mov    %rax,0x30(%rsp)
  42048e:	movq   $0x0,0x10(%rsp)
  420497:	mov    $0x3,%ebx
  42049c:	movl   $0x0,0x4c(%rsp)
  4204a4:	movl   $0x0,0x48(%rsp)
  4204ac:	movl   $0x0,0x2c(%rsp)
  4204b4:	movl   $0x0,0x40(%rsp)
  4204bc:	movl   $0x0,0x44(%rsp)
  4204c4:	jle    420556 <X509_get0_pubkey_bitstr@plt+0x9b86>
  4204ca:	lea    0x6c(%rsp),%rax
  4204cf:	lea    0x3d809(%rip),%r12        # 45dcdf <_fini+0x7db>
  4204d6:	mov    %rax,0x50(%rsp)
  4204db:	jmp    420506 <X509_get0_pubkey_bitstr@plt+0x9b36>
  4204dd:	nopl   (%rax)
  4204e0:	sub    $0x1,%r13d
  4204e4:	je     420738 <X509_get0_pubkey_bitstr@plt+0x9d68>
  4204ea:	mov    0x8(%r9),%rdi
  4204ee:	lea    0x8(%r9),%rbp
  4204f2:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  4204f7:	mov    %eax,%ebx
  4204f9:	sub    $0x1,%r13d
  4204fd:	lea    0x8(%rbp),%r9
  420501:	test   %r13d,%r13d
  420504:	jle    420556 <X509_get0_pubkey_bitstr@plt+0x9b86>
  420506:	mov    (%r9),%r8
  420509:	mov    $0x8,%ecx
  42050e:	mov    %r12,%rdi
  420511:	mov    %r8,%rsi
  420514:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  420516:	je     4204e0 <X509_get0_pubkey_bitstr@plt+0x9b10>
  420518:	lea    0x3dc71(%rip),%rdi        # 45e190 <_fini+0xc8c>
  42051f:	mov    $0x9,%ecx
  420524:	mov    %r8,%rsi
  420527:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  420529:	jne    4205f8 <X509_get0_pubkey_bitstr@plt+0x9c28>
  42052f:	sub    $0x1,%r13d
  420533:	je     420738 <X509_get0_pubkey_bitstr@plt+0x9d68>
  420539:	mov    0x8(%r9),%rdi
  42053d:	lea    0x8(%r9),%rbp
  420541:	sub    $0x1,%r13d
  420545:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  42054a:	test   %r13d,%r13d
  42054d:	mov    %eax,%r15d
  420550:	lea    0x8(%rbp),%r9
  420554:	jg     420506 <X509_get0_pubkey_bitstr@plt+0x9b36>
  420556:	callq  416990 <ERR_load_crypto_strings@plt>
  42055b:	mov    0x20(%rsp),%rsi
  420560:	mov    (%r14),%rdi
  420563:	xor    %edx,%edx
  420565:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  42056a:	mov    0x28(%rsp),%eax
  42056e:	test   %eax,%eax
  420570:	je     420960 <X509_get0_pubkey_bitstr@plt+0x9f90>
  420576:	mov    0x6c(%rsp),%eax
  42057a:	test   %eax,%eax
  42057c:	jne    420586 <X509_get0_pubkey_bitstr@plt+0x9bb6>
  42057e:	movl   $0x200,0x6c(%rsp)
  420586:	mov    0x40(%rsp),%edx
  42058a:	test   %edx,%edx
  42058c:	je     4208a0 <X509_get0_pubkey_bitstr@plt+0x9ed0>
  420592:	mov    (%r14),%rdi
  420595:	lea    0x3f9c4(%rip),%rsi        # 45ff60 <_fini+0x2a5c>
  42059c:	xor    %eax,%eax
  42059e:	xor    %ebx,%ebx
  4205a0:	callq  413c40 <BIO_printf@plt>
  4205a5:	jmp    4205b2 <X509_get0_pubkey_bitstr@plt+0x9be2>
  4205a7:	nopw   0x0(%rax,%rax,1)
  4205b0:	xor    %ebx,%ebx
  4205b2:	mov    $0x1,%r13d
  4205b8:	test   %rbx,%rbx
  4205bb:	je     4205c5 <X509_get0_pubkey_bitstr@plt+0x9bf5>
  4205bd:	mov    %rbx,%rdi
  4205c0:	callq  413d80 <DH_free@plt>
  4205c5:	mov    0x88(%rsp),%rbx
  4205cd:	xor    %fs:0x28,%rbx
  4205d6:	mov    %r13d,%eax
  4205d9:	jne    421197 <X509_get0_pubkey_bitstr@plt+0xa7c7>
  4205df:	add    $0x98,%rsp
  4205e6:	pop    %rbx
  4205e7:	pop    %rbp
  4205e8:	pop    %r12
  4205ea:	pop    %r13
  4205ec:	pop    %r14
  4205ee:	pop    %r15
  4205f0:	retq   
  4205f1:	nopl   0x0(%rax)
  4205f8:	movzbl (%r8),%eax
  4205fc:	sub    $0x2d,%eax
  4205ff:	jne    420638 <X509_get0_pubkey_bitstr@plt+0x9c68>
  420601:	cmpb   $0x69,0x1(%r8)
  420606:	jne    420638 <X509_get0_pubkey_bitstr@plt+0x9c68>
  420608:	cmpb   $0x6e,0x2(%r8)
  42060d:	jne    420638 <X509_get0_pubkey_bitstr@plt+0x9c68>
  42060f:	cmpb   $0x0,0x3(%r8)
  420614:	jne    420638 <X509_get0_pubkey_bitstr@plt+0x9c68>
  420616:	sub    $0x1,%r13d
  42061a:	je     420738 <X509_get0_pubkey_bitstr@plt+0x9d68>
  420620:	mov    0x8(%r9),%rax
  420624:	lea    0x8(%r9),%rbp
  420628:	mov    %rax,0x10(%rsp)
  42062d:	jmpq   4204f9 <X509_get0_pubkey_bitstr@plt+0x9b29>
  420632:	nopw   0x0(%rax,%rax,1)
  420638:	lea    0x3d807(%rip),%rdi        # 45de46 <_fini+0x942>
  42063f:	mov    $0x5,%ecx
  420644:	mov    %r8,%rsi
  420647:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  420649:	jne    420670 <X509_get0_pubkey_bitstr@plt+0x9ca0>
  42064b:	sub    $0x1,%r13d
  42064f:	je     420738 <X509_get0_pubkey_bitstr@plt+0x9d68>
  420655:	mov    0x8(%r9),%rax
  420659:	lea    0x8(%r9),%rbp
  42065d:	mov    %rax,0x18(%rsp)
  420662:	jmpq   4204f9 <X509_get0_pubkey_bitstr@plt+0x9b29>
  420667:	nopw   0x0(%rax,%rax,1)
  420670:	lea    0x3d4eb(%rip),%rdi        # 45db62 <_fini+0x65e>
  420677:	mov    $0x8,%ecx
  42067c:	mov    %r8,%rsi
  42067f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  420681:	jne    4206a0 <X509_get0_pubkey_bitstr@plt+0x9cd0>
  420683:	sub    $0x1,%r13d
  420687:	je     420738 <X509_get0_pubkey_bitstr@plt+0x9d68>
  42068d:	mov    0x8(%r9),%rax
  420691:	lea    0x8(%r9),%rbp
  420695:	mov    %rax,0x20(%rsp)
  42069a:	jmpq   4204f9 <X509_get0_pubkey_bitstr@plt+0x9b29>
  42069f:	nop
  4206a0:	lea    0x3f33d(%rip),%rdi        # 45f9e4 <_fini+0x24e0>
  4206a7:	mov    $0x7,%ecx
  4206ac:	mov    %r8,%rsi
  4206af:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4206b1:	je     420880 <X509_get0_pubkey_bitstr@plt+0x9eb0>
  4206b7:	lea    0x3dba9(%rip),%rdi        # 45e267 <_fini+0xd63>
  4206be:	mov    $0x6,%ecx
  4206c3:	mov    %r8,%rsi
  4206c6:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4206c8:	je     420890 <X509_get0_pubkey_bitstr@plt+0x9ec0>
  4206ce:	lea    0x3f69a(%rip),%rdi        # 45fd6f <_fini+0x286b>
  4206d5:	mov    $0xa,%ecx
  4206da:	mov    %r8,%rsi
  4206dd:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4206df:	je     420bc6 <X509_get0_pubkey_bitstr@plt+0xa1f6>
  4206e5:	test   %eax,%eax
  4206e7:	je     420c20 <X509_get0_pubkey_bitstr@plt+0xa250>
  4206ed:	lea    0x3d5f3(%rip),%rdi        # 45dce7 <_fini+0x7e3>
  4206f4:	mov    $0x7,%ecx
  4206f9:	mov    %r8,%rsi
  4206fc:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4206fe:	je     420c42 <X509_get0_pubkey_bitstr@plt+0xa272>
  420704:	lea    0x3daf6(%rip),%rdi        # 45e201 <_fini+0xcfd>
  42070b:	mov    $0x6,%ecx
  420710:	mov    %r8,%rsi
  420713:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  420715:	jne    42115b <X509_get0_pubkey_bitstr@plt+0xa78b>
  42071b:	sub    $0x1,%r13d
  42071f:	je     420738 <X509_get0_pubkey_bitstr@plt+0x9d68>
  420721:	mov    0x8(%r9),%rax
  420725:	lea    0x8(%r9),%rbp
  420729:	mov    %rax,0x38(%rsp)
  42072e:	jmpq   4204f9 <X509_get0_pubkey_bitstr@plt+0x9b29>
  420733:	nopl   0x0(%rax,%rax,1)
  420738:	mov    0x30(%rsp),%rdx
  42073d:	mov    (%r14),%rdi
  420740:	lea    0x3f632(%rip),%rsi        # 45fd79 <_fini+0x2875>
  420747:	xor    %eax,%eax
  420749:	callq  413c40 <BIO_printf@plt>
  42074e:	mov    (%r14),%rdi
  420751:	lea    0x3d5fd(%rip),%rsi        # 45dd55 <_fini+0x851>
  420758:	xor    %eax,%eax
  42075a:	callq  413c40 <BIO_printf@plt>
  42075f:	mov    (%r14),%rdi
  420762:	lea    0x3d6e7(%rip),%rsi        # 45de50 <_fini+0x94c>
  420769:	xor    %eax,%eax
  42076b:	callq  413c40 <BIO_printf@plt>
  420770:	mov    (%r14),%rdi
  420773:	lea    0x3f39e(%rip),%rsi        # 45fb18 <_fini+0x2614>
  42077a:	xor    %eax,%eax
  42077c:	callq  413c40 <BIO_printf@plt>
  420781:	mov    (%r14),%rdi
  420784:	lea    0x3d5dd(%rip),%rsi        # 45dd68 <_fini+0x864>
  42078b:	xor    %eax,%eax
  42078d:	callq  413c40 <BIO_printf@plt>
  420792:	mov    (%r14),%rdi
  420795:	lea    0x3f24f(%rip),%rsi        # 45f9eb <_fini+0x24e7>
  42079c:	xor    %eax,%eax
  42079e:	callq  413c40 <BIO_printf@plt>
  4207a3:	mov    (%r14),%rdi
  4207a6:	lea    0x3f62b(%rip),%rsi        # 45fdd8 <_fini+0x28d4>
  4207ad:	xor    %eax,%eax
  4207af:	callq  413c40 <BIO_printf@plt>
  4207b4:	mov    (%r14),%rdi
  4207b7:	lea    0x3f38a(%rip),%rsi        # 45fb48 <_fini+0x2644>
  4207be:	xor    %eax,%eax
  4207c0:	callq  413c40 <BIO_printf@plt>
  4207c5:	mov    (%r14),%rdi
  4207c8:	lea    0x3f3a1(%rip),%rsi        # 45fb70 <_fini+0x266c>
  4207cf:	xor    %eax,%eax
  4207d1:	callq  413c40 <BIO_printf@plt>
  4207d6:	mov    (%r14),%rdi
  4207d9:	lea    0x3f227(%rip),%rsi        # 45fa07 <_fini+0x2503>
  4207e0:	xor    %eax,%eax
  4207e2:	callq  413c40 <BIO_printf@plt>
  4207e7:	mov    (%r14),%rdi
  4207ea:	lea    0x3f627(%rip),%rsi        # 45fe18 <_fini+0x2914>
  4207f1:	xor    %eax,%eax
  4207f3:	callq  413c40 <BIO_printf@plt>
  4207f8:	mov    (%r14),%rdi
  4207fb:	lea    0x3f65e(%rip),%rsi        # 45fe60 <_fini+0x295c>
  420802:	xor    %eax,%eax
  420804:	callq  413c40 <BIO_printf@plt>
  420809:	mov    (%r14),%rdi
  42080c:	lea    0x3f695(%rip),%rsi        # 45fea8 <_fini+0x29a4>
  420813:	xor    %eax,%eax
  420815:	callq  413c40 <BIO_printf@plt>
  42081a:	mov    (%r14),%rdi
  42081d:	lea    0x3f384(%rip),%rsi        # 45fba8 <_fini+0x26a4>
  420824:	xor    %eax,%eax
  420826:	callq  413c40 <BIO_printf@plt>
  42082b:	mov    (%r14),%rdi
  42082e:	lea    0x3daf5(%rip),%rsi        # 45e32a <_fini+0xe26>
  420835:	mov    $0x3a,%ecx
  42083a:	mov    $0x3a,%edx
  42083f:	xor    %eax,%eax
  420841:	callq  413c40 <BIO_printf@plt>
  420846:	mov    (%r14),%rdi
  420849:	lea    0x3f698(%rip),%rsi        # 45fee8 <_fini+0x29e4>
  420850:	xor    %eax,%eax
  420852:	callq  413c40 <BIO_printf@plt>
  420857:	mov    (%r14),%rdi
  42085a:	lea    0x3f6cf(%rip),%rsi        # 45ff30 <_fini+0x2a2c>
  420861:	xor    %eax,%eax
  420863:	callq  413c40 <BIO_printf@plt>
  420868:	mov    (%r14),%rdi
  42086b:	lea    0x3f1b3(%rip),%rsi        # 45fa25 <_fini+0x2521>
  420872:	xor    %eax,%eax
  420874:	xor    %ebx,%ebx
  420876:	callq  413c40 <BIO_printf@plt>
  42087b:	jmpq   4205b2 <X509_get0_pubkey_bitstr@plt+0x9be2>
  420880:	mov    %r9,%rbp
  420883:	movl   $0x1,0x2c(%rsp)
  42088b:	jmpq   4204f9 <X509_get0_pubkey_bitstr@plt+0x9b29>
  420890:	mov    %r9,%rbp
  420893:	movl   $0x1,0x44(%rsp)
  42089b:	jmpq   4204f9 <X509_get0_pubkey_bitstr@plt+0x9b29>
  4208a0:	mov    0x6c(%rsp),%r13d
  4208a5:	test   %r13d,%r13d
  4208a8:	jne    420980 <X509_get0_pubkey_bitstr@plt+0x9fb0>
  4208ae:	callq  4152b0 <BIO_s_file@plt>
  4208b3:	mov    %rax,%rdi
  4208b6:	callq  414a20 <BIO_new@plt>
  4208bb:	test   %rax,%rax
  4208be:	mov    %rax,%r12
  4208c1:	je     420a3c <X509_get0_pubkey_bitstr@plt+0xa06c>
  4208c7:	cmpq   $0x0,0x10(%rsp)
  4208cd:	je     420f5e <X509_get0_pubkey_bitstr@plt+0xa58e>
  4208d3:	mov    0x10(%rsp),%rcx
  4208d8:	mov    $0x3,%edx
  4208dd:	mov    $0x6c,%esi
  4208e2:	mov    %rax,%rdi
  4208e5:	callq  412af0 <BIO_ctrl@plt>
  4208ea:	test   %rax,%rax
  4208ed:	jle    420fc8 <X509_get0_pubkey_bitstr@plt+0xa5f8>
  4208f3:	mov    %ebx,%eax
  4208f5:	and    $0xfffffffd,%eax
  4208f8:	cmp    $0x1,%eax
  4208fb:	jne    420c7e <X509_get0_pubkey_bitstr@plt+0xa2ae>
  420901:	mov    0x40(%rsp),%ebp
  420905:	xor    %ecx,%ecx
  420907:	test   %ebp,%ebp
  420909:	jne    420bd6 <X509_get0_pubkey_bitstr@plt+0xa206>
  42090f:	cmp    $0x1,%ebx
  420912:	je     420fd7 <X509_get0_pubkey_bitstr@plt+0xa607>
  420918:	xor    %edx,%edx
  42091a:	xor    %esi,%esi
  42091c:	mov    %r12,%rdi
  42091f:	callq  413f70 <PEM_read_bio_DHparams@plt>
  420924:	mov    %rax,%rbx
  420927:	test   %rbx,%rbx
  42092a:	jne    420aed <X509_get0_pubkey_bitstr@plt+0xa11d>
  420930:	lea    0x3f124(%rip),%rsi        # 45fa5b <_fini+0x2557>
  420937:	mov    (%r14),%rdi
  42093a:	xor    %eax,%eax
  42093c:	callq  413c40 <BIO_printf@plt>
  420941:	mov    (%r14),%rdi
  420944:	callq  413f40 <ERR_print_errors@plt>
  420949:	mov    $0x1,%r13d
  42094f:	xor    %ebp,%ebp
  420951:	xor    %ebx,%ebx
  420953:	jmpq   420b97 <X509_get0_pubkey_bitstr@plt+0xa1c7>
  420958:	nopl   0x0(%rax,%rax,1)
  420960:	mov    0x40(%rsp),%ecx
  420964:	test   %ecx,%ecx
  420966:	jne    4208a0 <X509_get0_pubkey_bitstr@plt+0x9ed0>
  42096c:	mov    0x6c(%rsp),%eax
  420970:	test   %eax,%eax
  420972:	je     4208ae <X509_get0_pubkey_bitstr@plt+0x9ede>
  420978:	movl   $0x2,0x28(%rsp)
  420980:	mov    (%r14),%rsi
  420983:	lea    -0x63a(%rip),%rax        # 420350 <X509_get0_pubkey_bitstr@plt+0x9980>
  42098a:	xor    %edi,%edi
  42098c:	mov    $0x1,%edx
  420991:	movl   $0x2,0x70(%rsp)
  420999:	mov    %rax,0x80(%rsp)
  4209a1:	mov    %rsi,0x78(%rsp)
  4209a6:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  4209ab:	test   %eax,%eax
  4209ad:	jne    420bb5 <X509_get0_pubkey_bitstr@plt+0xa1e5>
  4209b3:	cmpq   $0x0,0x38(%rsp)
  4209b9:	je     4210a9 <X509_get0_pubkey_bitstr@plt+0xa6d9>
  4209bf:	mov    0x38(%rsp),%rdi
  4209c4:	callq  44a710 <X509_get0_pubkey_bitstr@plt+0x33d40>
  4209c9:	mov    (%r14),%rdi
  4209cc:	lea    0x3f3be(%rip),%rsi        # 45fd91 <_fini+0x288d>
  4209d3:	mov    %rax,%rdx
  4209d6:	xor    %eax,%eax
  4209d8:	callq  413c40 <BIO_printf@plt>
  4209dd:	mov    0x40(%rsp),%r12d
  4209e2:	test   %r12d,%r12d
  4209e5:	je     420a88 <X509_get0_pubkey_bitstr@plt+0xa0b8>
  4209eb:	callq  4165b0 <DSA_new@plt>
  4209f0:	mov    0x6c(%rsp),%edx
  4209f4:	mov    (%r14),%rdi
  4209f7:	lea    0x3f5da(%rip),%rsi        # 45ffd8 <_fini+0x2ad4>
  4209fe:	mov    %rax,%rbp
  420a01:	xor    %eax,%eax
  420a03:	callq  413c40 <BIO_printf@plt>
  420a08:	test   %rbp,%rbp
  420a0b:	je     420a3c <X509_get0_pubkey_bitstr@plt+0xa06c>
  420a0d:	lea    0x70(%rsp),%rax
  420a12:	mov    0x6c(%rsp),%esi
  420a16:	xor    %r9d,%r9d
  420a19:	xor    %r8d,%r8d
  420a1c:	xor    %ecx,%ecx
  420a1e:	xor    %edx,%edx
  420a20:	mov    %rbp,%rdi
  420a23:	mov    %rax,(%rsp)
  420a27:	callq  414c80 <DSA_generate_parameters_ex@plt>
  420a2c:	test   %eax,%eax
  420a2e:	mov    %rbp,%rdi
  420a31:	jne    420c58 <X509_get0_pubkey_bitstr@plt+0xa288>
  420a37:	callq  4159d0 <DSA_free@plt>
  420a3c:	mov    (%r14),%rdi
  420a3f:	xor    %ebx,%ebx
  420a41:	callq  413f40 <ERR_print_errors@plt>
  420a46:	jmpq   4205b2 <X509_get0_pubkey_bitstr@plt+0x9be2>
  420a4b:	callq  4152b0 <BIO_s_file@plt>
  420a50:	mov    %rax,%rdi
  420a53:	callq  414a20 <BIO_new@plt>
  420a58:	test   %rax,%rax
  420a5b:	mov    %rax,%rdi
  420a5e:	mov    %rax,(%r14)
  420a61:	je     420443 <X509_get0_pubkey_bitstr@plt+0x9a73>
  420a67:	mov    0x255512(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  420a6e:	mov    $0x6a,%esi
  420a73:	mov    (%rdx),%rcx
  420a76:	mov    $0x10,%edx
  420a7b:	callq  412af0 <BIO_ctrl@plt>
  420a80:	mov    (%r14),%rdi
  420a83:	jmpq   420443 <X509_get0_pubkey_bitstr@plt+0x9a73>
  420a88:	callq  4137d0 <DH_new@plt>
  420a8d:	mov    0x28(%rsp),%ecx
  420a91:	mov    0x6c(%rsp),%edx
  420a95:	lea    0x3f56c(%rip),%rsi        # 460008 <_fini+0x2b04>
  420a9c:	mov    (%r14),%rdi
  420a9f:	mov    %rax,%rbx
  420aa2:	xor    %eax,%eax
  420aa4:	callq  413c40 <BIO_printf@plt>
  420aa9:	mov    (%r14),%rdi
  420aac:	lea    0x3f595(%rip),%rsi        # 460048 <_fini+0x2b44>
  420ab3:	xor    %eax,%eax
  420ab5:	callq  413c40 <BIO_printf@plt>
  420aba:	test   %rbx,%rbx
  420abd:	je     420c71 <X509_get0_pubkey_bitstr@plt+0xa2a1>
  420ac3:	mov    0x28(%rsp),%edx
  420ac7:	mov    0x6c(%rsp),%esi
  420acb:	lea    0x70(%rsp),%rcx
  420ad0:	mov    %rbx,%rdi
  420ad3:	callq  412f40 <DH_generate_parameters_ex@plt>
  420ad8:	test   %eax,%eax
  420ada:	je     420c71 <X509_get0_pubkey_bitstr@plt+0xa2a1>
  420ae0:	mov    (%r14),%rsi
  420ae3:	xor    %edi,%edi
  420ae5:	xor    %r12d,%r12d
  420ae8:	callq  44a660 <X509_get0_pubkey_bitstr@plt+0x33c90>
  420aed:	callq  4152b0 <BIO_s_file@plt>
  420af2:	mov    %rax,%rdi
  420af5:	callq  414a20 <BIO_new@plt>
  420afa:	test   %rax,%rax
  420afd:	mov    %rax,%rbp
  420b00:	je     420fb5 <X509_get0_pubkey_bitstr@plt+0xa5e5>
  420b06:	cmpq   $0x0,0x18(%rsp)
  420b0c:	je     420f7c <X509_get0_pubkey_bitstr@plt+0xa5ac>
  420b12:	mov    0x18(%rsp),%rcx
  420b17:	mov    $0x5,%edx
  420b1c:	mov    $0x6c,%esi
  420b21:	mov    %rax,%rdi
  420b24:	callq  412af0 <BIO_ctrl@plt>
  420b29:	test   %rax,%rax
  420b2c:	jle    420ff5 <X509_get0_pubkey_bitstr@plt+0xa625>
  420b32:	mov    0x44(%rsp),%r11d
  420b37:	test   %r11d,%r11d
  420b3a:	jne    420ce7 <X509_get0_pubkey_bitstr@plt+0xa317>
  420b40:	mov    0x2c(%rsp),%r10d
  420b45:	test   %r10d,%r10d
  420b48:	jne    420c94 <X509_get0_pubkey_bitstr@plt+0xa2c4>
  420b4e:	mov    0x4c(%rsp),%r9d
  420b53:	test   %r9d,%r9d
  420b56:	jne    420cf7 <X509_get0_pubkey_bitstr@plt+0xa327>
  420b5c:	mov    0x48(%rsp),%esi
  420b60:	xor    %r13d,%r13d
  420b63:	test   %esi,%esi
  420b65:	jne    420b92 <X509_get0_pubkey_bitstr@plt+0xa1c2>
  420b67:	cmp    $0x1,%r15d
  420b6b:	je     421111 <X509_get0_pubkey_bitstr@plt+0xa741>
  420b71:	cmp    $0x3,%r15d
  420b75:	je     421028 <X509_get0_pubkey_bitstr@plt+0xa658>
  420b7b:	mov    (%r14),%rdi
  420b7e:	lea    0x3e7eb(%rip),%rsi        # 45f370 <_fini+0x1e6c>
  420b85:	xor    %eax,%eax
  420b87:	mov    $0x1,%r13d
  420b8d:	callq  413c40 <BIO_printf@plt>
  420b92:	test   %r12,%r12
  420b95:	je     420b9f <X509_get0_pubkey_bitstr@plt+0xa1cf>
  420b97:	mov    %r12,%rdi
  420b9a:	callq  413960 <BIO_free@plt>
  420b9f:	test   %rbp,%rbp
  420ba2:	je     4205b8 <X509_get0_pubkey_bitstr@plt+0x9be8>
  420ba8:	mov    %rbp,%rdi
  420bab:	callq  416570 <BIO_free_all@plt>
  420bb0:	jmpq   4205b8 <X509_get0_pubkey_bitstr@plt+0x9be8>
  420bb5:	cmpq   $0x0,0x38(%rsp)
  420bbb:	je     4209dd <X509_get0_pubkey_bitstr@plt+0xa00d>
  420bc1:	jmpq   4209bf <X509_get0_pubkey_bitstr@plt+0x9fef>
  420bc6:	mov    %r9,%rbp
  420bc9:	movl   $0x1,0x40(%rsp)
  420bd1:	jmpq   4204f9 <X509_get0_pubkey_bitstr@plt+0x9b29>
  420bd6:	cmp    $0x1,%ebx
  420bd9:	je     42100a <X509_get0_pubkey_bitstr@plt+0xa63a>
  420bdf:	xor    %edx,%edx
  420be1:	xor    %esi,%esi
  420be3:	mov    %r12,%rdi
  420be6:	callq  415380 <PEM_read_bio_DSAparams@plt>
  420beb:	mov    %rax,%rbp
  420bee:	test   %rbp,%rbp
  420bf1:	lea    0x3f478(%rip),%rsi        # 460070 <_fini+0x2b6c>
  420bf8:	je     420937 <X509_get0_pubkey_bitstr@plt+0x9f67>
  420bfe:	mov    %rbp,%rdi
  420c01:	callq  4145f0 <DSA_dup_DH@plt>
  420c06:	mov    %rbp,%rdi
  420c09:	mov    %rax,%rbx
  420c0c:	callq  4159d0 <DSA_free@plt>
  420c11:	test   %rbx,%rbx
  420c14:	jne    420aed <X509_get0_pubkey_bitstr@plt+0xa11d>
  420c1a:	jmpq   420941 <X509_get0_pubkey_bitstr@plt+0x9f71>
  420c1f:	nop
  420c20:	cmpb   $0x43,0x1(%r8)
  420c25:	je     420f9a <X509_get0_pubkey_bitstr@plt+0xa5ca>
  420c2b:	lea    0x3d0b5(%rip),%rdi        # 45dce7 <_fini+0x7e3>
  420c32:	mov    $0x7,%ecx
  420c37:	mov    %r8,%rsi
  420c3a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  420c3c:	jne    421061 <X509_get0_pubkey_bitstr@plt+0xa691>
  420c42:	mov    %r9,%rbp
  420c45:	movl   $0x1,0x48(%rsp)
  420c4d:	jmpq   4204f9 <X509_get0_pubkey_bitstr@plt+0x9b29>
  420c52:	nopw   0x0(%rax,%rax,1)
  420c58:	callq  4145f0 <DSA_dup_DH@plt>
  420c5d:	mov    %rbp,%rdi
  420c60:	mov    %rax,%rbx
  420c63:	callq  4159d0 <DSA_free@plt>
  420c68:	test   %rbx,%rbx
  420c6b:	jne    420ae0 <X509_get0_pubkey_bitstr@plt+0xa110>
  420c71:	mov    (%r14),%rdi
  420c74:	callq  413f40 <ERR_print_errors@plt>
  420c79:	jmpq   4205b2 <X509_get0_pubkey_bitstr@plt+0x9be2>
  420c7e:	mov    (%r14),%rdi
  420c81:	lea    0x3edb7(%rip),%rsi        # 45fa3f <_fini+0x253b>
  420c88:	xor    %eax,%eax
  420c8a:	callq  413c40 <BIO_printf@plt>
  420c8f:	jmpq   420949 <X509_get0_pubkey_bitstr@plt+0x9f79>
  420c94:	lea    0x70(%rsp),%rsi
  420c99:	mov    %rbx,%rdi
  420c9c:	callq  4147a0 <DH_check@plt>
  420ca1:	test   %eax,%eax
  420ca3:	je     420fb5 <X509_get0_pubkey_bitstr@plt+0xa5e5>
  420ca9:	mov    0x70(%rsp),%eax
  420cad:	test   $0x1,%al
  420caf:	jne    4210fc <X509_get0_pubkey_bitstr@plt+0xa72c>
  420cb5:	test   $0x2,%al
  420cb7:	jne    4210e7 <X509_get0_pubkey_bitstr@plt+0xa717>
  420cbd:	test   $0x4,%al
  420cbf:	jne    4210d2 <X509_get0_pubkey_bitstr@plt+0xa702>
  420cc5:	test   $0x8,%al
  420cc7:	jne    4210bd <X509_get0_pubkey_bitstr@plt+0xa6ed>
  420ccd:	test   %eax,%eax
  420ccf:	nop
  420cd0:	jne    420b4e <X509_get0_pubkey_bitstr@plt+0xa17e>
  420cd6:	lea    0x3ef53(%rip),%rdi        # 45fc30 <_fini+0x272c>
  420cdd:	callq  415a40 <puts@plt>
  420ce2:	jmpq   420b4e <X509_get0_pubkey_bitstr@plt+0xa17e>
  420ce7:	mov    %rbx,%rsi
  420cea:	mov    %rbp,%rdi
  420ced:	callq  412d50 <DHparams_print@plt>
  420cf2:	jmpq   420b40 <X509_get0_pubkey_bitstr@plt+0xa170>
  420cf7:	mov    0x8(%rbx),%rdi
  420cfb:	callq  415810 <BN_num_bits@plt>
  420d00:	mov    0x8(%rbx),%rdi
  420d04:	mov    %eax,%r13d
  420d07:	callq  415810 <BN_num_bits@plt>
  420d0c:	lea    0xe(%r13),%edi
  420d10:	add    $0x7,%r13d
  420d14:	lea    0x3f094(%rip),%rsi        # 45fdaf <_fini+0x28ab>
  420d1b:	mov    $0x1d2,%edx
  420d20:	mov    %eax,0x10(%rsp)
  420d24:	cmovns %r13d,%edi
  420d28:	sar    $0x3,%edi
  420d2b:	callq  413d50 <CRYPTO_malloc@plt>
  420d30:	test   %rax,%rax
  420d33:	mov    %rax,%r13
  420d36:	je     42112c <X509_get0_pubkey_bitstr@plt+0xa75c>
  420d3c:	lea    0x3f34d(%rip),%rdi        # 460090 <_fini+0x2b8c>
  420d43:	callq  415a40 <puts@plt>
  420d48:	mov    0x10(%rsp),%edx
  420d4c:	lea    0x3ed81(%rip),%rsi        # 45fad4 <_fini+0x25d0>
  420d53:	mov    $0x1,%edi
  420d58:	xor    %eax,%eax
  420d5a:	callq  412780 <__printf_chk@plt>
  420d5f:	mov    0x8(%rbx),%rdi
  420d63:	mov    %r13,%rsi
  420d66:	callq  413390 <BN_bn2bin@plt>
  420d6b:	mov    0x10(%rsp),%edx
  420d6f:	lea    0x3f352(%rip),%rsi        # 4600c8 <_fini+0x2bc4>
  420d76:	mov    %eax,0x18(%rsp)
  420d7a:	mov    $0x1,%edi
  420d7f:	xor    %eax,%eax
  420d81:	callq  412780 <__printf_chk@plt>
  420d86:	mov    0x18(%rsp),%r8d
  420d8b:	xor    %ecx,%ecx
  420d8d:	movl   $0x0,0x70(%rsp)
  420d95:	test   %r8d,%r8d
  420d98:	jle    420e12 <X509_get0_pubkey_bitstr@plt+0xa442>
  420d9a:	mov    %r12,0x20(%rsp)
  420d9f:	mov    0x18(%rsp),%r12d
  420da4:	jmp    420dde <X509_get0_pubkey_bitstr@plt+0xa40e>
  420da6:	nopw   %cs:0x0(%rax,%rax,1)
  420db0:	movslq 0x70(%rsp),%rax
  420db5:	lea    0x3ed0a(%rip),%rsi        # 45fac6 <_fini+0x25c2>
  420dbc:	mov    $0x1,%edi
  420dc1:	movzbl 0x0(%r13,%rax,1),%edx
  420dc7:	xor    %eax,%eax
  420dc9:	callq  412780 <__printf_chk@plt>
  420dce:	mov    0x70(%rsp),%eax
  420dd2:	lea    0x1(%rax),%ecx
  420dd5:	cmp    %ecx,%r12d
  420dd8:	mov    %ecx,0x70(%rsp)
  420ddc:	jle    420e0d <X509_get0_pubkey_bitstr@plt+0xa43d>
  420dde:	mov    $0x2aaaaaab,%eax
  420de3:	imul   %ecx
  420de5:	mov    %ecx,%eax
  420de7:	sar    $0x1f,%eax
  420dea:	sar    %edx
  420dec:	sub    %eax,%edx
  420dee:	lea    (%rdx,%rdx,2),%eax
  420df1:	shl    $0x2,%eax
  420df4:	cmp    %eax,%ecx
  420df6:	jne    420db0 <X509_get0_pubkey_bitstr@plt+0xa3e0>
  420df8:	lea    0x3efc0(%rip),%rsi        # 45fdbf <_fini+0x28bb>
  420dff:	mov    $0x1,%edi
  420e04:	xor    %eax,%eax
  420e06:	callq  412780 <__printf_chk@plt>
  420e0b:	jmp    420db0 <X509_get0_pubkey_bitstr@plt+0xa3e0>
  420e0d:	mov    0x20(%rsp),%r12
  420e12:	lea    0x3efa0(%rip),%rdi        # 45fdb9 <_fini+0x28b5>
  420e19:	callq  415a40 <puts@plt>
  420e1e:	mov    0x10(%rbx),%rdi
  420e22:	mov    %r13,%rsi
  420e25:	callq  413390 <BN_bn2bin@plt>
  420e2a:	mov    0x10(%rsp),%edx
  420e2e:	lea    0x3f2bb(%rip),%rsi        # 4600f0 <_fini+0x2bec>
  420e35:	mov    %eax,0x18(%rsp)
  420e39:	mov    $0x1,%edi
  420e3e:	xor    %eax,%eax
  420e40:	callq  412780 <__printf_chk@plt>
  420e45:	mov    0x18(%rsp),%edi
  420e49:	xor    %ecx,%ecx
  420e4b:	movl   $0x0,0x70(%rsp)
  420e53:	test   %edi,%edi
  420e55:	jle    420eca <X509_get0_pubkey_bitstr@plt+0xa4fa>
  420e57:	mov    %r12,0x20(%rsp)
  420e5c:	mov    0x18(%rsp),%r12d
  420e61:	jmp    420e96 <X509_get0_pubkey_bitstr@plt+0xa4c6>
  420e63:	nopl   0x0(%rax,%rax,1)
  420e68:	movslq 0x70(%rsp),%rax
  420e6d:	lea    0x3ec52(%rip),%rsi        # 45fac6 <_fini+0x25c2>
  420e74:	mov    $0x1,%edi
  420e79:	movzbl 0x0(%r13,%rax,1),%edx
  420e7f:	xor    %eax,%eax
  420e81:	callq  412780 <__printf_chk@plt>
  420e86:	mov    0x70(%rsp),%eax
  420e8a:	lea    0x1(%rax),%ecx
  420e8d:	cmp    %ecx,%r12d
  420e90:	mov    %ecx,0x70(%rsp)
  420e94:	jle    420ec5 <X509_get0_pubkey_bitstr@plt+0xa4f5>
  420e96:	mov    $0x2aaaaaab,%eax
  420e9b:	imul   %ecx
  420e9d:	mov    %ecx,%eax
  420e9f:	sar    $0x1f,%eax
  420ea2:	sar    %edx
  420ea4:	sub    %eax,%edx
  420ea6:	lea    (%rdx,%rdx,2),%eax
  420ea9:	shl    $0x2,%eax
  420eac:	cmp    %eax,%ecx
  420eae:	jne    420e68 <X509_get0_pubkey_bitstr@plt+0xa498>
  420eb0:	lea    0x3ef08(%rip),%rsi        # 45fdbf <_fini+0x28bb>
  420eb7:	mov    $0x1,%edi
  420ebc:	xor    %eax,%eax
  420ebe:	callq  412780 <__printf_chk@plt>
  420ec3:	jmp    420e68 <X509_get0_pubkey_bitstr@plt+0xa498>
  420ec5:	mov    0x20(%rsp),%r12
  420eca:	lea    0x3eee8(%rip),%rdi        # 45fdb9 <_fini+0x28b5>
  420ed1:	callq  415a40 <puts@plt>
  420ed6:	lea    0x3ec0a(%rip),%rdi        # 45fae7 <_fini+0x25e3>
  420edd:	callq  415a40 <puts@plt>
  420ee2:	lea    0x3eda7(%rip),%rdi        # 45fc90 <_fini+0x278c>
  420ee9:	callq  415a40 <puts@plt>
  420eee:	mov    0x10(%rsp),%edx
  420ef2:	lea    0x3edc7(%rip),%rsi        # 45fcc0 <_fini+0x27bc>
  420ef9:	mov    $0x1,%edi
  420efe:	xor    %eax,%eax
  420f00:	mov    %edx,%ecx
  420f02:	callq  412780 <__printf_chk@plt>
  420f07:	mov    0x10(%rsp),%edx
  420f0b:	lea    0x3edde(%rip),%rsi        # 45fcf0 <_fini+0x27ec>
  420f12:	mov    $0x1,%edi
  420f17:	xor    %eax,%eax
  420f19:	mov    %edx,%ecx
  420f1b:	callq  412780 <__printf_chk@plt>
  420f20:	lea    0x3edf9(%rip),%rdi        # 45fd20 <_fini+0x281c>
  420f27:	callq  415a40 <puts@plt>
  420f2c:	lea    0x3f1e5(%rip),%rdi        # 460118 <_fini+0x2c14>
  420f33:	callq  415a40 <puts@plt>
  420f38:	mov    0x18(%rbx),%rdx
  420f3c:	test   %rdx,%rdx
  420f3f:	jne    421091 <X509_get0_pubkey_bitstr@plt+0xa6c1>
  420f45:	lea    0x3ebb5(%rip),%rdi        # 45fb01 <_fini+0x25fd>
  420f4c:	callq  415a40 <puts@plt>
  420f51:	mov    %r13,%rdi
  420f54:	callq  415020 <CRYPTO_free@plt>
  420f59:	jmpq   420b5c <X509_get0_pubkey_bitstr@plt+0xa18c>
  420f5e:	mov    0x254fab(%rip),%rax        # 675f10 <_fini+0x218a0c>
  420f65:	xor    %edx,%edx
  420f67:	mov    $0x6a,%esi
  420f6c:	mov    %r12,%rdi
  420f6f:	mov    (%rax),%rcx
  420f72:	callq  412af0 <BIO_ctrl@plt>
  420f77:	jmpq   4208f3 <X509_get0_pubkey_bitstr@plt+0x9f23>
  420f7c:	mov    0x254f35(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  420f83:	xor    %edx,%edx
  420f85:	mov    $0x6a,%esi
  420f8a:	mov    %rbp,%rdi
  420f8d:	mov    (%rax),%rcx
  420f90:	callq  412af0 <BIO_ctrl@plt>
  420f95:	jmpq   420b32 <X509_get0_pubkey_bitstr@plt+0xa162>
  420f9a:	cmpb   $0x0,0x2(%r8)
  420f9f:	jne    420c2b <X509_get0_pubkey_bitstr@plt+0xa25b>
  420fa5:	mov    %r9,%rbp
  420fa8:	movl   $0x1,0x4c(%rsp)
  420fb0:	jmpq   4204f9 <X509_get0_pubkey_bitstr@plt+0x9b29>
  420fb5:	mov    (%r14),%rdi
  420fb8:	mov    $0x1,%r13d
  420fbe:	callq  413f40 <ERR_print_errors@plt>
  420fc3:	jmpq   420b92 <X509_get0_pubkey_bitstr@plt+0xa1c2>
  420fc8:	mov    0x10(%rsp),%rdi
  420fcd:	callq  4142c0 <perror@plt>
  420fd2:	jmpq   420949 <X509_get0_pubkey_bitstr@plt+0x9f79>
  420fd7:	mov    0x254fc2(%rip),%rsi        # 675fa0 <_fini+0x218a9c>
  420fde:	mov    0x254efb(%rip),%rdi        # 675ee0 <_fini+0x2189dc>
  420fe5:	mov    %r12,%rdx
  420fe8:	callq  415520 <ASN1_d2i_bio@plt>
  420fed:	mov    %rax,%rbx
  420ff0:	jmpq   420927 <X509_get0_pubkey_bitstr@plt+0x9f57>
  420ff5:	mov    0x18(%rsp),%rdi
  420ffa:	mov    $0x1,%r13d
  421000:	callq  4142c0 <perror@plt>
  421005:	jmpq   420b92 <X509_get0_pubkey_bitstr@plt+0xa1c2>
  42100a:	mov    0x254f2f(%rip),%rsi        # 675f40 <_fini+0x218a3c>
  421011:	mov    0x254fc8(%rip),%rdi        # 675fe0 <_fini+0x218adc>
  421018:	mov    %r12,%rdx
  42101b:	callq  415520 <ASN1_d2i_bio@plt>
  421020:	mov    %rax,%rbp
  421023:	jmpq   420bee <X509_get0_pubkey_bitstr@plt+0xa21e>
  421028:	mov    %rbx,%rsi
  42102b:	mov    %rbp,%rdi
  42102e:	callq  414c00 <PEM_write_bio_DHparams@plt>
  421033:	mov    %eax,0x70(%rsp)
  421037:	xor    %r13d,%r13d
  42103a:	test   %eax,%eax
  42103c:	jne    420b92 <X509_get0_pubkey_bitstr@plt+0xa1c2>
  421042:	mov    (%r14),%rdi
  421045:	lea    0x3ed04(%rip),%rsi        # 45fd50 <_fini+0x284c>
  42104c:	mov    $0x1,%r13b
  42104f:	callq  413c40 <BIO_printf@plt>
  421054:	mov    (%r14),%rdi
  421057:	callq  413f40 <ERR_print_errors@plt>
  42105c:	jmpq   420b92 <X509_get0_pubkey_bitstr@plt+0xa1c2>
  421061:	movzbl 0x1(%r8),%eax
  421066:	cmp    $0x32,%al
  421068:	je     421140 <X509_get0_pubkey_bitstr@plt+0xa770>
  42106e:	cmp    $0x35,%al
  421070:	jne    420704 <X509_get0_pubkey_bitstr@plt+0x9d34>
  421076:	cmpb   $0x0,0x2(%r8)
  42107b:	jne    420704 <X509_get0_pubkey_bitstr@plt+0x9d34>
  421081:	mov    %r9,%rbp
  421084:	movl   $0x5,0x28(%rsp)
  42108c:	jmpq   4204f9 <X509_get0_pubkey_bitstr@plt+0x9b29>
  421091:	lea    0x3ed2b(%rip),%rsi        # 45fdc3 <_fini+0x28bf>
  421098:	mov    $0x1,%edi
  42109d:	xor    %eax,%eax
  42109f:	callq  412780 <__printf_chk@plt>
  4210a4:	jmpq   420f45 <X509_get0_pubkey_bitstr@plt+0xa575>
  4210a9:	mov    (%r14),%rdi
  4210ac:	lea    0x3eedd(%rip),%rsi        # 45ff90 <_fini+0x2a8c>
  4210b3:	callq  413c40 <BIO_printf@plt>
  4210b8:	jmpq   4209dd <X509_get0_pubkey_bitstr@plt+0xa00d>
  4210bd:	lea    0x3eb4c(%rip),%rdi        # 45fc10 <_fini+0x270c>
  4210c4:	callq  415a40 <puts@plt>
  4210c9:	mov    0x70(%rsp),%eax
  4210cd:	jmpq   420ccd <X509_get0_pubkey_bitstr@plt+0xa2fd>
  4210d2:	lea    0x3eb0f(%rip),%rdi        # 45fbe8 <_fini+0x26e4>
  4210d9:	callq  415a40 <puts@plt>
  4210de:	mov    0x70(%rsp),%eax
  4210e2:	jmpq   420cc5 <X509_get0_pubkey_bitstr@plt+0xa2f5>
  4210e7:	lea    0x3e9a0(%rip),%rdi        # 45fa8e <_fini+0x258a>
  4210ee:	callq  415a40 <puts@plt>
  4210f3:	mov    0x70(%rsp),%eax
  4210f7:	jmpq   420cbd <X509_get0_pubkey_bitstr@plt+0xa2ed>
  4210fc:	lea    0x3e976(%rip),%rdi        # 45fa79 <_fini+0x2575>
  421103:	callq  415a40 <puts@plt>
  421108:	mov    0x70(%rsp),%eax
  42110c:	jmpq   420cb5 <X509_get0_pubkey_bitstr@plt+0xa2e5>
  421111:	mov    0x254eb8(%rip),%rdi        # 675fd0 <_fini+0x218acc>
  421118:	mov    %rbx,%rdx
  42111b:	mov    %rbp,%rsi
  42111e:	callq  413c70 <ASN1_i2d_bio@plt>
  421123:	mov    %eax,0x70(%rsp)
  421127:	jmpq   421037 <X509_get0_pubkey_bitstr@plt+0xa667>
  42112c:	lea    0x3e97c(%rip),%rdi        # 45faaf <_fini+0x25ab>
  421133:	mov    $0x1,%r13b
  421136:	callq  4142c0 <perror@plt>
  42113b:	jmpq   420b92 <X509_get0_pubkey_bitstr@plt+0xa1c2>
  421140:	cmpb   $0x0,0x2(%r8)
  421145:	jne    420704 <X509_get0_pubkey_bitstr@plt+0x9d34>
  42114b:	mov    %r9,%rbp
  42114e:	movl   $0x2,0x28(%rsp)
  421156:	jmpq   4204f9 <X509_get0_pubkey_bitstr@plt+0x9b29>
  42115b:	mov    0x50(%rsp),%rdx
  421160:	lea    0x488e0(%rip),%rsi        # 469a47 <_fini+0xc543>
  421167:	xor    %eax,%eax
  421169:	mov    %r8,%rdi
  42116c:	mov    %r9,0x58(%rsp)
  421171:	callq  4147b0 <__isoc99_sscanf@plt>
  421176:	test   %eax,%eax
  421178:	je     420738 <X509_get0_pubkey_bitstr@plt+0x9d68>
  42117e:	mov    0x6c(%rsp),%eax
  421182:	test   %eax,%eax
  421184:	jle    420738 <X509_get0_pubkey_bitstr@plt+0x9d68>
  42118a:	mov    0x58(%rsp),%r9
  42118f:	mov    %r9,%rbp
  421192:	jmpq   4204f9 <X509_get0_pubkey_bitstr@plt+0x9b29>
  421197:	callq  414c30 <__stack_chk_fail@plt>
  42119c:	nopl   0x0(%rax)
  4211a0:	push   %rbp
  4211a1:	mov    %rsi,%rbp
  4211a4:	push   %rbx
  4211a5:	mov    %rdi,%rbx
  4211a8:	sub    $0x8,%rsp
  4211ac:	callq  414ae0 <__ctype_b_loc@plt>
  4211b1:	mov    0x8(%rbx),%rdx
  4211b5:	mov    (%rax),%rax
  4211b8:	movzbl (%rdx),%ecx
  4211bb:	testb  $0x2,0x1(%rax,%rcx,2)
  4211c0:	jne    4211d0 <X509_get0_pubkey_bitstr@plt+0xa800>
  4211c2:	add    $0x8,%rsp
  4211c6:	pop    %rbx
  4211c7:	pop    %rbp
  4211c8:	retq   
  4211c9:	nopl   0x0(%rax)
  4211d0:	lea    0x3ef62(%rip),%rsi        # 460139 <_fini+0x2c35>
  4211d7:	xor    %eax,%eax
  4211d9:	mov    %rbp,%rdi
  4211dc:	callq  413c40 <BIO_printf@plt>
  4211e1:	mov    0x25a059(%rip),%eax        # 67b240 <_edata+0x538>
  4211e7:	add    $0x1,%eax
  4211ea:	cmp    $0x3,%eax
  4211ed:	mov    %eax,0x25a04d(%rip)        # 67b240 <_edata+0x538>
  4211f3:	je     421210 <X509_get0_pubkey_bitstr@plt+0xa840>
  4211f5:	add    $0x8,%rsp
  4211f9:	mov    %rbp,%rdi
  4211fc:	lea    0x4a9a0(%rip),%rsi        # 46bba3 <_fini+0xe69f>
  421203:	pop    %rbx
  421204:	pop    %rbp
  421205:	xor    %eax,%eax
  421207:	jmpq   413c40 <BIO_printf@plt>
  42120c:	nopl   0x0(%rax)
  421210:	lea    0x43988(%rip),%rsi        # 464b9f <_fini+0x769b>
  421217:	mov    %rbp,%rdi
  42121a:	xor    %eax,%eax
  42121c:	callq  413c40 <BIO_printf@plt>
  421221:	movl   $0x0,0x25a015(%rip)        # 67b240 <_edata+0x538>
  42122b:	jmp    4211c2 <X509_get0_pubkey_bitstr@plt+0xa7f2>
  42122d:	nopl   (%rax)
  421230:	push   %r14
  421232:	mov    %edx,%r14d
  421235:	push   %r13
  421237:	push   %r12
  421239:	mov    %rdi,%r12
  42123c:	push   %rbp
  42123d:	push   %rbx
  42123e:	mov    %rsi,%rbx
  421241:	callq  413470 <strlen@plt>
  421246:	mov    %rax,%r13
  421249:	lea    (%r14,%r14,1),%eax
  42124d:	lea    0x3eeec(%rip),%rsi        # 460140 <_fini+0x2c3c>
  421254:	cmp    %eax,%r13d
  421257:	jg     421300 <X509_get0_pubkey_bitstr@plt+0xa930>
  42125d:	xor    %esi,%esi
  42125f:	movslq %r14d,%rdx
  421262:	mov    %rbx,%rdi
  421265:	callq  413940 <memset@plt>
  42126a:	test   %r13d,%r13d
  42126d:	jle    4212e8 <X509_get0_pubkey_bitstr@plt+0xa918>
  42126f:	movzbl (%r12),%edx
  421274:	lea    0x1(%r12),%rcx
  421279:	movb   $0x0,(%r12)
  42127e:	test   %dl,%dl
  421280:	je     4212e8 <X509_get0_pubkey_bitstr@plt+0xa918>
  421282:	mov    %r13d,%ebp
  421285:	xor    %eax,%eax
  421287:	jmp    4212aa <X509_get0_pubkey_bitstr@plt+0xa8da>
  421289:	nopl   0x0(%rax)
  421290:	add    $0x1,%eax
  421293:	or     %r8b,(%rbx,%rdx,1)
  421297:	cmp    %eax,%ebp
  421299:	jle    4212e8 <X509_get0_pubkey_bitstr@plt+0xa918>
  42129b:	movzbl (%rcx),%edx
  42129e:	add    $0x1,%rcx
  4212a2:	test   %dl,%dl
  4212a4:	movb   $0x0,-0x1(%rcx)
  4212a8:	je     4212e8 <X509_get0_pubkey_bitstr@plt+0xa918>
  4212aa:	lea    -0x30(%rdx),%r8d
  4212ae:	cmp    $0x9,%r8b
  4212b2:	jbe    4212ce <X509_get0_pubkey_bitstr@plt+0xa8fe>
  4212b4:	lea    -0x41(%rdx),%esi
  4212b7:	lea    -0x37(%rdx),%r8d
  4212bb:	cmp    $0x5,%sil
  4212bf:	jbe    4212ce <X509_get0_pubkey_bitstr@plt+0xa8fe>
  4212c1:	lea    -0x61(%rdx),%esi
  4212c4:	cmp    $0x5,%sil
  4212c8:	ja     4212f6 <X509_get0_pubkey_bitstr@plt+0xa926>
  4212ca:	lea    -0x57(%rdx),%r8d
  4212ce:	mov    %eax,%edx
  4212d0:	sar    %edx
  4212d2:	test   $0x1,%al
  4212d4:	movslq %edx,%rdx
  4212d7:	jne    421290 <X509_get0_pubkey_bitstr@plt+0xa8c0>
  4212d9:	add    $0x1,%eax
  4212dc:	shl    $0x4,%r8d
  4212e0:	cmp    %eax,%ebp
  4212e2:	mov    %r8b,(%rbx,%rdx,1)
  4212e6:	jg     42129b <X509_get0_pubkey_bitstr@plt+0xa8cb>
  4212e8:	pop    %rbx
  4212e9:	pop    %rbp
  4212ea:	pop    %r12
  4212ec:	pop    %r13
  4212ee:	mov    $0x1,%eax
  4212f3:	pop    %r14
  4212f5:	retq   
  4212f6:	lea    0x3ee5b(%rip),%rsi        # 460158 <_fini+0x2c54>
  4212fd:	nopl   (%rax)
  421300:	lea    0x259a39(%rip),%rax        # 67ad40 <_edata+0x38>
  421307:	mov    (%rax),%rdi
  42130a:	xor    %eax,%eax
  42130c:	callq  413c40 <BIO_printf@plt>
  421311:	pop    %rbx
  421312:	pop    %rbp
  421313:	pop    %r12
  421315:	pop    %r13
  421317:	xor    %eax,%eax
  421319:	pop    %r14
  42131b:	retq   
  42131c:	nopl   0x0(%rax)
  421320:	push   %r15
  421322:	push   %r14
  421324:	push   %r13
  421326:	push   %r12
  421328:	push   %rbp
  421329:	mov    %rsi,%rbp
  42132c:	mov    $0x1,%esi
  421331:	push   %rbx
  421332:	mov    %edi,%ebx
  421334:	mov    $0xd,%edi
  421339:	sub    $0x1f8,%rsp
  421340:	mov    %fs:0x28,%rax
  421349:	mov    %rax,0x1e8(%rsp)
  421351:	xor    %eax,%eax
  421353:	movq   $0x0,0xb0(%rsp)
  42135f:	movq   $0x0,0xb8(%rsp)
  42136b:	callq  414ee0 <signal@plt>
  421370:	lea    0x2599c9(%rip),%r14        # 67ad40 <_edata+0x38>
  421377:	mov    (%r14),%rdi
  42137a:	test   %rdi,%rdi
  42137d:	je     421d32 <X509_get0_pubkey_bitstr@plt+0xb362>
  421383:	xor    %esi,%esi
  421385:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  42138a:	test   %eax,%eax
  42138c:	jne    4213e0 <X509_get0_pubkey_bitstr@plt+0xaa10>
  42138e:	mov    (%r14),%rdi
  421391:	mov    $0x1,%ebx
  421396:	callq  413f40 <ERR_print_errors@plt>
  42139b:	mov    0xb0(%rsp),%rdi
  4213a3:	test   %rdi,%rdi
  4213a6:	je     4213ad <X509_get0_pubkey_bitstr@plt+0xa9dd>
  4213a8:	callq  415020 <CRYPTO_free@plt>
  4213ad:	mov    0x1e8(%rsp),%rcx
  4213b5:	xor    %fs:0x28,%rcx
  4213be:	mov    %ebx,%eax
  4213c0:	jne    422794 <X509_get0_pubkey_bitstr@plt+0xbdc4>
  4213c6:	add    $0x1f8,%rsp
  4213cd:	pop    %rbx
  4213ce:	pop    %rbp
  4213cf:	pop    %r12
  4213d1:	pop    %r13
  4213d3:	pop    %r14
  4213d5:	pop    %r15
  4213d7:	retq   
  4213d8:	nopl   0x0(%rax,%rax,1)
  4213e0:	lea    0xf0(%rsp),%r12
  4213e8:	mov    0x0(%rbp),%rdi
  4213ec:	mov    $0x28,%edx
  4213f1:	mov    %r12,%rsi
  4213f4:	callq  4456d0 <X509_get0_pubkey_bitstr@plt+0x2ed00>
  4213f9:	lea    0x3ee7f(%rip),%rdi        # 46027f <_fini+0x2d7b>
  421400:	mov    $0x7,%ecx
  421405:	mov    %r12,%rsi
  421408:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42140a:	lea    0x3c470(%rip),%rdi        # 45d881 <_fini+0x37d>
  421411:	mov    $0x5,%ecx
  421416:	mov    %r12,%rsi
  421419:	sete   %r13b
  42141d:	movzbl %r13b,%eax
  421421:	mov    %eax,0x40(%rsp)
  421425:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  421427:	mov    %r12,%rdi
  42142a:	sete   %r15b
  42142e:	movzbl %r15b,%eax
  421432:	mov    %eax,0x70(%rsp)
  421436:	callq  416810 <EVP_get_cipherbyname@plt>
  42143b:	test   %r15b,%r15b
  42143e:	mov    %rax,0x28(%rsp)
  421443:	je     4217c0 <X509_get0_pubkey_bitstr@plt+0xadf0>
  421449:	sub    $0x1,%ebx
  42144c:	add    $0x8,%rbp
  421450:	xor    %r9d,%r9d
  421453:	xor    %r8d,%r8d
  421456:	test   %ebx,%ebx
  421458:	movl   $0x0,0x8c(%rsp)
  421463:	movq   $0x0,0x10(%rsp)
  42146c:	movl   $0x0,0x64(%rsp)
  421474:	movl   $0x0,0x88(%rsp)
  42147f:	movl   $0x0,0x54(%rsp)
  421487:	movl   $0x0,0x60(%rsp)
  42148f:	jle    422375 <X509_get0_pubkey_bitstr@plt+0xb9a5>
  421495:	mov    $0x1,%eax
  42149a:	xor    %r15d,%r15d
  42149d:	movq   $0x0,0x18(%rsp)
  4214a6:	movq   $0x0,0x80(%rsp)
  4214b2:	movq   $0x0,0x78(%rsp)
  4214bb:	mov    $0x5,%r10d
  4214c1:	movq   $0x0,0x68(%rsp)
  4214ca:	movq   $0x0,0x20(%rsp)
  4214d3:	mov    $0x6,%r11d
  4214d9:	movq   $0x0,0x38(%rsp)
  4214e2:	movl   $0x0,0x74(%rsp)
  4214ea:	mov    %eax,%r8d
  4214ed:	movl   $0x0,0x50(%rsp)
  4214f5:	mov    %r15,0x30(%rsp)
  4214fa:	jmp    421536 <X509_get0_pubkey_bitstr@plt+0xab66>
  4214fc:	nopl   0x0(%rax)
  421500:	lea    0x3c93f(%rip),%rdi        # 45de46 <_fini+0x942>
  421507:	mov    %r12,%rsi
  42150a:	mov    %r10,%rcx
  42150d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42150f:	jne    421660 <X509_get0_pubkey_bitstr@plt+0xac90>
  421515:	sub    $0x1,%ebx
  421518:	je     4217f4 <X509_get0_pubkey_bitstr@plt+0xae24>
  42151e:	mov    0x8(%rbp),%rax
  421522:	add    $0x8,%rbp
  421526:	mov    %rax,0x10(%rsp)
  42152b:	sub    $0x1,%ebx
  42152e:	add    $0x8,%rbp
  421532:	test   %ebx,%ebx
  421534:	jle    421588 <X509_get0_pubkey_bitstr@plt+0xabb8>
  421536:	mov    0x0(%rbp),%r12
  42153a:	movzbl (%r12),%r13d
  42153f:	movzbl %r13b,%eax
  421543:	sub    $0x2d,%eax
  421546:	jne    421500 <X509_get0_pubkey_bitstr@plt+0xab30>
  421548:	movzbl 0x1(%r12),%edx
  42154e:	cmp    $0x65,%dl
  421551:	je     421640 <X509_get0_pubkey_bitstr@plt+0xac70>
  421557:	cmp    $0x69,%dl
  42155a:	jne    421500 <X509_get0_pubkey_bitstr@plt+0xab30>
  42155c:	cmpb   $0x6e,0x2(%r12)
  421562:	jne    421500 <X509_get0_pubkey_bitstr@plt+0xab30>
  421564:	cmpb   $0x0,0x3(%r12)
  42156a:	jne    421500 <X509_get0_pubkey_bitstr@plt+0xab30>
  42156c:	sub    $0x1,%ebx
  42156f:	je     4217f4 <X509_get0_pubkey_bitstr@plt+0xae24>
  421575:	mov    0x8(%rbp),%r15
  421579:	sub    $0x1,%ebx
  42157c:	add    $0x8,%rbp
  421580:	add    $0x8,%rbp
  421584:	test   %ebx,%ebx
  421586:	jg     421536 <X509_get0_pubkey_bitstr@plt+0xab66>
  421588:	mov    %r8d,0x90(%rsp)
  421590:	mov    %r15,%r8
  421593:	mov    0x30(%rsp),%r15
  421598:	mov    (%r14),%rdi
  42159b:	xor    %edx,%edx
  42159d:	mov    %r9,%rsi
  4215a0:	mov    %r8,0x30(%rsp)
  4215a5:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  4215aa:	mov    0x18(%rsp),%rdi
  4215af:	mov    0x30(%rsp),%r8
  4215b4:	test   %rdi,%rdi
  4215b7:	je     421d6f <X509_get0_pubkey_bitstr@plt+0xb39f>
  4215bd:	callq  416720 <EVP_get_digestbyname@plt>
  4215c2:	test   %rax,%rax
  4215c5:	mov    %rax,%rbp
  4215c8:	mov    0x30(%rsp),%r8
  4215cd:	je     422320 <X509_get0_pubkey_bitstr@plt+0xb950>
  4215d3:	test   %r15,%r15
  4215d6:	je     422222 <X509_get0_pubkey_bitstr@plt+0xb852>
  4215dc:	movzbl (%r15),%edx
  4215e0:	xor    %esi,%esi
  4215e2:	test   %dl,%dl
  4215e4:	jne    421609 <X509_get0_pubkey_bitstr@plt+0xac39>
  4215e6:	jmpq   4219db <X509_get0_pubkey_bitstr@plt+0xb00b>
  4215eb:	nopl   0x0(%rax,%rax,1)
  4215f0:	lea    (%rsi,%rsi,4),%rax
  4215f4:	lea    -0x30(%rdx,%rax,2),%rsi
  4215f9:	add    $0x1,%r15
  4215fd:	movzbl (%r15),%edx
  421601:	test   %dl,%dl
  421603:	je     4219d0 <X509_get0_pubkey_bitstr@plt+0xb000>
  421609:	movzbl %dl,%eax
  42160c:	sub    $0x30,%eax
  42160f:	cmp    $0x9,%eax
  421612:	jbe    4215f0 <X509_get0_pubkey_bitstr@plt+0xac20>
  421614:	cmp    $0x6b,%dl
  421617:	jne    4215f9 <X509_get0_pubkey_bitstr@plt+0xac29>
  421619:	cmpb   $0x0,0x1(%r15)
  42161e:	je     4219c0 <X509_get0_pubkey_bitstr@plt+0xaff0>
  421624:	mov    (%r14),%rdi
  421627:	lea    0x3ecae(%rip),%rsi        # 4602dc <_fini+0x2dd8>
  42162e:	xor    %eax,%eax
  421630:	callq  413c40 <BIO_printf@plt>
  421635:	jmpq   42138e <X509_get0_pubkey_bitstr@plt+0xa9be>
  42163a:	nopw   0x0(%rax,%rax,1)
  421640:	cmpb   $0x0,0x2(%r12)
  421646:	jne    421500 <X509_get0_pubkey_bitstr@plt+0xab30>
  42164c:	mov    $0x1,%r8d
  421652:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  421657:	nopw   0x0(%rax,%rax,1)
  421660:	lea    0x3eb2f(%rip),%rdi        # 460196 <_fini+0x2c92>
  421667:	mov    %r12,%rsi
  42166a:	mov    %r11,%rcx
  42166d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42166f:	jne    421690 <X509_get0_pubkey_bitstr@plt+0xacc0>
  421671:	sub    $0x1,%ebx
  421674:	je     4217f4 <X509_get0_pubkey_bitstr@plt+0xae24>
  42167a:	mov    0x8(%rbp),%rax
  42167e:	add    $0x8,%rbp
  421682:	mov    %rax,0x20(%rsp)
  421687:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  42168c:	nopl   0x0(%rax)
  421690:	lea    0x3c4cb(%rip),%rdi        # 45db62 <_fini+0x65e>
  421697:	mov    $0x8,%ecx
  42169c:	mov    %r12,%rsi
  42169f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4216a1:	jne    4216c0 <X509_get0_pubkey_bitstr@plt+0xacf0>
  4216a3:	sub    $0x1,%ebx
  4216a6:	je     4217f4 <X509_get0_pubkey_bitstr@plt+0xae24>
  4216ac:	mov    0x8(%rbp),%r9
  4216b0:	add    $0x8,%rbp
  4216b4:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  4216b9:	nopl   0x0(%rax)
  4216c0:	test   %eax,%eax
  4216c2:	je     421788 <X509_get0_pubkey_bitstr@plt+0xadb8>
  4216c8:	lea    0x3eacd(%rip),%rdi        # 46019c <_fini+0x2c98>
  4216cf:	mov    $0x7,%ecx
  4216d4:	mov    %r12,%rsi
  4216d7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4216d9:	je     421dc7 <X509_get0_pubkey_bitstr@plt+0xb3f7>
  4216df:	lea    0x3eabd(%rip),%rdi        # 4601a3 <_fini+0x2c9f>
  4216e6:	mov    %r12,%rsi
  4216e9:	mov    %r11,%rcx
  4216ec:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4216ee:	je     422270 <X509_get0_pubkey_bitstr@plt+0xb8a0>
  4216f4:	lea    0x3eaae(%rip),%rdi        # 4601a9 <_fini+0x2ca5>
  4216fb:	mov    $0x8,%ecx
  421700:	mov    %r12,%rsi
  421703:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  421705:	je     42242c <X509_get0_pubkey_bitstr@plt+0xba5c>
  42170b:	lea    0x3ea9f(%rip),%rdi        # 4601b1 <_fini+0x2cad>
  421712:	mov    $0x7,%ecx
  421717:	mov    %r12,%rsi
  42171a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42171c:	je     4224fd <X509_get0_pubkey_bitstr@plt+0xbb2d>
  421722:	test   %eax,%eax
  421724:	je     422750 <X509_get0_pubkey_bitstr@plt+0xbd80>
  42172a:	lea    0x3eb4d(%rip),%rsi        # 46027e <_fini+0x2d7a>
  421731:	mov    %r12,%rdi
  421734:	mov    %r9,0x98(%rsp)
  42173c:	mov    %r8d,0x90(%rsp)
  421744:	mov    %r11,0x58(%rsp)
  421749:	mov    %r10,0x48(%rsp)
  42174e:	callq  4155c0 <strcmp@plt>
  421753:	test   %eax,%eax
  421755:	mov    0x48(%rsp),%r10
  42175a:	mov    0x58(%rsp),%r11
  42175f:	mov    0x90(%rsp),%r8d
  421767:	mov    0x98(%rsp),%r9
  42176f:	jne    4228bb <X509_get0_pubkey_bitstr@plt+0xbeeb>
  421775:	movl   $0x1,0x40(%rsp)
  42177d:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  421782:	nopw   0x0(%rax,%rax,1)
  421788:	movzbl 0x1(%r12),%edx
  42178e:	cmp    $0x64,%dl
  421791:	je     421d1e <X509_get0_pubkey_bitstr@plt+0xb34e>
  421797:	cmp    $0x70,%dl
  42179a:	jne    422ba4 <X509_get0_pubkey_bitstr@plt+0xc1d4>
  4217a0:	cmpb   $0x0,0x2(%r12)
  4217a6:	jne    4216c8 <X509_get0_pubkey_bitstr@plt+0xacf8>
  4217ac:	movl   $0x1,0x60(%rsp)
  4217b4:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  4217b9:	nopl   0x0(%rax)
  4217c0:	test   %r13b,%r13b
  4217c3:	jne    421449 <X509_get0_pubkey_bitstr@plt+0xaa79>
  4217c9:	test   %rax,%rax
  4217cc:	jne    421449 <X509_get0_pubkey_bitstr@plt+0xaa79>
  4217d2:	cmpb   $0x65,0xf0(%rsp)
  4217da:	je     422237 <X509_get0_pubkey_bitstr@plt+0xb867>
  4217e0:	mov    (%r14),%rdi
  4217e3:	lea    0x3e993(%rip),%rsi        # 46017d <_fini+0x2c79>
  4217ea:	mov    %r12,%rdx
  4217ed:	xor    %eax,%eax
  4217ef:	callq  413c40 <BIO_printf@plt>
  4217f4:	mov    (%r14),%rdi
  4217f7:	lea    0x3c55d(%rip),%rsi        # 45dd5b <_fini+0x857>
  4217fe:	xor    %eax,%eax
  421800:	callq  413c40 <BIO_printf@plt>
  421805:	mov    (%r14),%rdi
  421808:	lea    0x3e9e6(%rip),%rdx        # 4601f5 <_fini+0x2cf1>
  42180f:	lea    0x3e9ea(%rip),%rsi        # 460200 <_fini+0x2cfc>
  421816:	xor    %eax,%eax
  421818:	callq  413c40 <BIO_printf@plt>
  42181d:	mov    (%r14),%rdi
  421820:	lea    0x3e9eb(%rip),%rdx        # 460212 <_fini+0x2d0e>
  421827:	lea    0x3e9f0(%rip),%rsi        # 46021e <_fini+0x2d1a>
  42182e:	xor    %eax,%eax
  421830:	callq  413c40 <BIO_printf@plt>
  421835:	mov    (%r14),%rdi
  421838:	lea    0x3e9f2(%rip),%rdx        # 460231 <_fini+0x2d2d>
  42183f:	lea    0x3e9f7(%rip),%rsi        # 46023d <_fini+0x2d39>
  421846:	xor    %eax,%eax
  421848:	callq  413c40 <BIO_printf@plt>
  42184d:	mov    (%r14),%rdi
  421850:	lea    0x3ea00(%rip),%rdx        # 460257 <_fini+0x2d53>
  421857:	lea    0x3e9fc(%rip),%rsi        # 46025a <_fini+0x2d56>
  42185e:	xor    %eax,%eax
  421860:	callq  413c40 <BIO_printf@plt>
  421865:	mov    (%r14),%rdi
  421868:	lea    0x3e9fa(%rip),%rdx        # 460269 <_fini+0x2d65>
  42186f:	lea    0x3e9f6(%rip),%rsi        # 46026c <_fini+0x2d68>
  421876:	xor    %eax,%eax
  421878:	callq  413c40 <BIO_printf@plt>
  42187d:	mov    (%r14),%rdi
  421880:	lea    0x3e9f4(%rip),%rdx        # 46027b <_fini+0x2d77>
  421887:	lea    0x3ebc2(%rip),%rsi        # 460450 <_fini+0x2f4c>
  42188e:	xor    %eax,%eax
  421890:	callq  413c40 <BIO_printf@plt>
  421895:	mov    (%r14),%rdi
  421898:	lea    0x3e9e7(%rip),%rdx        # 460286 <_fini+0x2d82>
  42189f:	lea    0x3ebea(%rip),%rsi        # 460490 <_fini+0x2f8c>
  4218a6:	xor    %eax,%eax
  4218a8:	callq  413c40 <BIO_printf@plt>
  4218ad:	mov    (%r14),%rdi
  4218b0:	lea    0x3e9d2(%rip),%rdx        # 460289 <_fini+0x2d85>
  4218b7:	lea    0x3ebfa(%rip),%rsi        # 4604b8 <_fini+0x2fb4>
  4218be:	xor    %eax,%eax
  4218c0:	callq  413c40 <BIO_printf@plt>
  4218c5:	mov    (%r14),%rdi
  4218c8:	lea    0x3e9c1(%rip),%rdx        # 460290 <_fini+0x2d8c>
  4218cf:	lea    0x3ec22(%rip),%rsi        # 4604f8 <_fini+0x2ff4>
  4218d6:	xor    %eax,%eax
  4218d8:	callq  413c40 <BIO_printf@plt>
  4218dd:	mov    (%r14),%rdi
  4218e0:	lea    0x3e4db(%rip),%rdx        # 45fdc2 <_fini+0x28be>
  4218e7:	lea    0x3ec4a(%rip),%rsi        # 460538 <_fini+0x3034>
  4218ee:	xor    %eax,%eax
  4218f0:	callq  413c40 <BIO_printf@plt>
  4218f5:	mov    (%r14),%rdi
  4218f8:	lea    0x3e995(%rip),%rdx        # 460294 <_fini+0x2d90>
  4218ff:	lea    0x3ec72(%rip),%rsi        # 460578 <_fini+0x3074>
  421906:	xor    %eax,%eax
  421908:	callq  413c40 <BIO_printf@plt>
  42190d:	mov    (%r14),%rdi
  421910:	lea    0x3e980(%rip),%rdx        # 460297 <_fini+0x2d93>
  421917:	lea    0x3ec82(%rip),%rsi        # 4605a0 <_fini+0x309c>
  42191e:	xor    %eax,%eax
  421920:	callq  413c40 <BIO_printf@plt>
  421925:	mov    (%r14),%rdi
  421928:	lea    0x3e96f(%rip),%rdx        # 46029e <_fini+0x2d9a>
  42192f:	lea    0x3ec9a(%rip),%rsi        # 4605d0 <_fini+0x30cc>
  421936:	xor    %eax,%eax
  421938:	callq  413c40 <BIO_printf@plt>
  42193d:	mov    (%r14),%rdi
  421940:	lea    0x3e95d(%rip),%rdx        # 4602a4 <_fini+0x2da0>
  421947:	lea    0x3e963(%rip),%rsi        # 4602b1 <_fini+0x2dad>
  42194e:	xor    %eax,%eax
  421950:	callq  413c40 <BIO_printf@plt>
  421955:	mov    (%r14),%rdi
  421958:	lea    0x3e83d(%rip),%rdx        # 46019c <_fini+0x2c98>
  42195f:	lea    0x3ec9a(%rip),%rsi        # 460600 <_fini+0x30fc>
  421966:	xor    %eax,%eax
  421968:	callq  413c40 <BIO_printf@plt>
  42196d:	mov    (%r14),%rdi
  421970:	lea    0x3e94d(%rip),%rdx        # 4602c4 <_fini+0x2dc0>
  421977:	lea    0x3ecaa(%rip),%rsi        # 460628 <_fini+0x3124>
  42197e:	xor    %eax,%eax
  421980:	callq  413c40 <BIO_printf@plt>
  421985:	mov    (%r14),%rdi
  421988:	lea    0x3e93f(%rip),%rsi        # 4602ce <_fini+0x2dca>
  42198f:	xor    %eax,%eax
  421991:	callq  413c40 <BIO_printf@plt>
  421996:	mov    (%r14),%rdx
  421999:	lea    -0x800(%rip),%rsi        # 4211a0 <X509_get0_pubkey_bitstr@plt+0xa7d0>
  4219a0:	mov    $0x2,%edi
  4219a5:	callq  4147e0 <OBJ_NAME_do_all_sorted@plt>
  4219aa:	mov    (%r14),%rdi
  4219ad:	lea    0x431eb(%rip),%rsi        # 464b9f <_fini+0x769b>
  4219b4:	xor    %eax,%eax
  4219b6:	callq  413c40 <BIO_printf@plt>
  4219bb:	jmpq   42138e <X509_get0_pubkey_bitstr@plt+0xa9be>
  4219c0:	shl    $0xa,%rsi
  4219c4:	add    $0x1,%r15
  4219c8:	nopl   0x0(%rax,%rax,1)
  4219d0:	cmp    $0x4f,%rsi
  4219d4:	setbe  %al
  4219d7:	test   %al,%al
  4219d9:	je     4219e7 <X509_get0_pubkey_bitstr@plt+0xb017>
  4219db:	mov    0x40(%rsp),%edi
  4219df:	test   %edi,%edi
  4219e1:	jne    421d09 <X509_get0_pubkey_bitstr@plt+0xb339>
  4219e7:	lea    0x2(%rsi),%ecx
  4219ea:	mov    $0x55555556,%edi
  4219ef:	mov    %esi,0x98(%rsp)
  4219f6:	mov    %ecx,%eax
  4219f8:	sar    $0x1f,%ecx
  4219fb:	imul   %edi
  4219fd:	mov    %esi,%eax
  4219ff:	mov    %edx,%edi
  421a01:	sub    %ecx,%edi
  421a03:	mov    $0x2aaaaaab,%ecx
  421a08:	imul   %ecx
  421a0a:	mov    %esi,%eax
  421a0c:	sar    $0x1f,%eax
  421a0f:	sar    $0x3,%edx
  421a12:	sub    %eax,%edx
  421a14:	lea    0x29(%rdx,%rdi,2),%ebx
  421a18:	add    %ebx,%ebx
  421a1a:	mov    0x50(%rsp),%esi
  421a1e:	test   %esi,%esi
  421a20:	jne    421da0 <X509_get0_pubkey_bitstr@plt+0xb3d0>
  421a26:	lea    0x3e8d9(%rip),%rsi        # 460306 <_fini+0x2e02>
  421a2d:	mov    $0x176,%edx
  421a32:	mov    $0x200,%edi
  421a37:	mov    %r8,0x30(%rsp)
  421a3c:	callq  413d50 <CRYPTO_malloc@plt>
  421a41:	lea    0x3e8be(%rip),%rsi        # 460306 <_fini+0x2e02>
  421a48:	mov    %rax,%r13
  421a4b:	mov    $0x177,%edx
  421a50:	mov    %ebx,%edi
  421a52:	mov    %rax,0x18(%rsp)
  421a57:	callq  413d50 <CRYPTO_malloc@plt>
  421a5c:	test   %r13,%r13
  421a5f:	mov    %rax,0x58(%rsp)
  421a64:	mov    0x30(%rsp),%r8
  421a69:	je     421a74 <X509_get0_pubkey_bitstr@plt+0xb0a4>
  421a6b:	test   %rax,%rax
  421a6e:	jne    421b21 <X509_get0_pubkey_bitstr@plt+0xb151>
  421a74:	mov    (%r14),%rdi
  421a77:	lea    0x3e88e(%rip),%rsi        # 46030c <_fini+0x2e08>
  421a7e:	movslq %ebx,%rdx
  421a81:	xor    %eax,%eax
  421a83:	xor    %ebp,%ebp
  421a85:	xor    %r12d,%r12d
  421a88:	mov    $0x0,%r13d
  421a8e:	mov    $0x1,%ebx
  421a93:	callq  413c40 <BIO_printf@plt>
  421a98:	mov    (%r14),%rdi
  421a9b:	callq  413f40 <ERR_print_errors@plt>
  421aa0:	cmpq   $0x0,0x18(%rsp)
  421aa6:	movq   $0x0,0x30(%rsp)
  421aaf:	movq   $0x0,0x48(%rsp)
  421ab8:	je     421ac4 <X509_get0_pubkey_bitstr@plt+0xb0f4>
  421aba:	mov    0x18(%rsp),%rdi
  421abf:	callq  415020 <CRYPTO_free@plt>
  421ac4:	mov    0x58(%rsp),%rdi
  421ac9:	test   %rdi,%rdi
  421acc:	je     421ad3 <X509_get0_pubkey_bitstr@plt+0xb103>
  421ace:	callq  415020 <CRYPTO_free@plt>
  421ad3:	mov    0x48(%rsp),%rdi
  421ad8:	test   %rdi,%rdi
  421adb:	je     421ae2 <X509_get0_pubkey_bitstr@plt+0xb112>
  421add:	callq  413960 <BIO_free@plt>
  421ae2:	mov    0x30(%rsp),%rdi
  421ae7:	test   %rdi,%rdi
  421aea:	je     421af1 <X509_get0_pubkey_bitstr@plt+0xb121>
  421aec:	callq  416570 <BIO_free_all@plt>
  421af1:	test   %rbp,%rbp
  421af4:	je     421afe <X509_get0_pubkey_bitstr@plt+0xb12e>
  421af6:	mov    %rbp,%rdi
  421af9:	callq  413960 <BIO_free@plt>
  421afe:	test   %r12,%r12
  421b01:	je     421b0b <X509_get0_pubkey_bitstr@plt+0xb13b>
  421b03:	mov    %r12,%rdi
  421b06:	callq  413960 <BIO_free@plt>
  421b0b:	test   %r13,%r13
  421b0e:	je     42139b <X509_get0_pubkey_bitstr@plt+0xa9cb>
  421b14:	mov    %r13,%rdi
  421b17:	callq  413960 <BIO_free@plt>
  421b1c:	jmpq   42139b <X509_get0_pubkey_bitstr@plt+0xa9cb>
  421b21:	mov    %r8,0xa0(%rsp)
  421b29:	callq  4152b0 <BIO_s_file@plt>
  421b2e:	mov    %rax,%rdi
  421b31:	callq  414a20 <BIO_new@plt>
  421b36:	mov    %rax,%rbx
  421b39:	mov    %rax,0x48(%rsp)
  421b3e:	callq  4152b0 <BIO_s_file@plt>
  421b43:	mov    %rax,%rdi
  421b46:	callq  414a20 <BIO_new@plt>
  421b4b:	test   %rax,%rax
  421b4e:	mov    %rax,0x30(%rsp)
  421b53:	je     421d86 <X509_get0_pubkey_bitstr@plt+0xb3b6>
  421b59:	test   %rbx,%rbx
  421b5c:	mov    0xa0(%rsp),%r8
  421b64:	je     421d86 <X509_get0_pubkey_bitstr@plt+0xb3b6>
  421b6a:	mov    0x54(%rsp),%ecx
  421b6e:	test   %ecx,%ecx
  421b70:	jne    42218e <X509_get0_pubkey_bitstr@plt+0xb7be>
  421b76:	test   %r8,%r8
  421b79:	je     422158 <X509_get0_pubkey_bitstr@plt+0xb788>
  421b7f:	mov    0x48(%rsp),%rdi
  421b84:	mov    %r8,%rcx
  421b87:	mov    $0x3,%edx
  421b8c:	mov    $0x6c,%esi
  421b91:	mov    %r8,0xa0(%rsp)
  421b99:	callq  412af0 <BIO_ctrl@plt>
  421b9e:	test   %rax,%rax
  421ba1:	mov    0xa0(%rsp),%r8
  421ba9:	jle    422439 <X509_get0_pubkey_bitstr@plt+0xba69>
  421baf:	cmpq   $0x0,0x38(%rsp)
  421bb5:	sete   %al
  421bb8:	cmpq   $0x0,0x20(%rsp)
  421bbe:	jne    4221e0 <X509_get0_pubkey_bitstr@plt+0xb810>
  421bc4:	cmpq   $0x0,0x28(%rsp)
  421bca:	setne  0xa0(%rsp)
  421bd2:	test   %al,%al
  421bd4:	je     421bf5 <X509_get0_pubkey_bitstr@plt+0xb225>
  421bd6:	cmpb   $0x0,0xa0(%rsp)
  421bde:	je     421bf5 <X509_get0_pubkey_bitstr@plt+0xb225>
  421be0:	cmpq   $0x0,0x68(%rsp)
  421be6:	movq   $0x0,0x38(%rsp)
  421bef:	je     42250a <X509_get0_pubkey_bitstr@plt+0xbb3a>
  421bf5:	cmpq   $0x0,0x10(%rsp)
  421bfb:	je     42233b <X509_get0_pubkey_bitstr@plt+0xb96b>
  421c01:	mov    0x10(%rsp),%rcx
  421c06:	mov    0x30(%rsp),%rdi
  421c0b:	mov    $0x5,%edx
  421c10:	mov    $0x6c,%esi
  421c15:	callq  412af0 <BIO_ctrl@plt>
  421c1a:	test   %rax,%rax
  421c1d:	jle    4224be <X509_get0_pubkey_bitstr@plt+0xbaee>
  421c23:	mov    0x70(%rsp),%edx
  421c27:	test   %edx,%edx
  421c29:	jne    4222d7 <X509_get0_pubkey_bitstr@plt+0xb907>
  421c2f:	mov    0x30(%rsp),%rax
  421c34:	xor    %r13d,%r13d
  421c37:	mov    %rax,0x10(%rsp)
  421c3c:	mov    0x48(%rsp),%rax
  421c41:	mov    %rax,0x20(%rsp)
  421c46:	mov    0x40(%rsp),%eax
  421c4a:	xor    %r12d,%r12d
  421c4d:	test   %eax,%eax
  421c4f:	jne    42227d <X509_get0_pubkey_bitstr@plt+0xb8ad>
  421c55:	cmpb   $0x0,0xa0(%rsp)
  421c5d:	je     422400 <X509_get0_pubkey_bitstr@plt+0xba30>
  421c63:	cmpq   $0x0,0x38(%rsp)
  421c69:	je     421e3e <X509_get0_pubkey_bitstr@plt+0xb46e>
  421c6f:	mov    0x64(%rsp),%eax
  421c73:	test   %eax,%eax
  421c75:	jne    421dd4 <X509_get0_pubkey_bitstr@plt+0xb404>
  421c7b:	mov    0x90(%rsp),%r15d
  421c83:	test   %r15d,%r15d
  421c86:	je     4223d1 <X509_get0_pubkey_bitstr@plt+0xba01>
  421c8c:	mov    0x80(%rsp),%rdi
  421c94:	lea    0xd0(%rsp),%rbx
  421c9c:	test   %rdi,%rdi
  421c9f:	je     4225c2 <X509_get0_pubkey_bitstr@plt+0xbbf2>
  421ca5:	mov    $0x8,%edx
  421caa:	mov    %rbx,%rsi
  421cad:	callq  421230 <X509_get0_pubkey_bitstr@plt+0xa860>
  421cb2:	test   %eax,%eax
  421cb4:	je     4225e3 <X509_get0_pubkey_bitstr@plt+0xbc13>
  421cba:	cmpl   $0x2,0x60(%rsp)
  421cbf:	je     421dd6 <X509_get0_pubkey_bitstr@plt+0xb406>
  421cc5:	mov    0x10(%rsp),%rdi
  421cca:	lea    0x3e9b9(%rip),%rsi        # 46068a <_fini+0x3186>
  421cd1:	mov    $0x8,%edx
  421cd6:	callq  412db0 <BIO_write@plt>
  421cdb:	cmp    $0x8,%eax
  421cde:	je     4226c1 <X509_get0_pubkey_bitstr@plt+0xbcf1>
  421ce4:	lea    0x3e67e(%rip),%rsi        # 460369 <_fini+0x2e65>
  421ceb:	mov    (%r14),%rdi
  421cee:	xor    %eax,%eax
  421cf0:	xor    %ebp,%ebp
  421cf2:	mov    $0x1,%ebx
  421cf7:	callq  413c40 <BIO_printf@plt>
  421cfc:	mov    (%r14),%rdi
  421cff:	callq  413f40 <ERR_print_errors@plt>
  421d04:	jmpq   421aba <X509_get0_pubkey_bitstr@plt+0xb0ea>
  421d09:	mov    $0xc0,%ebx
  421d0e:	movl   $0x50,0x98(%rsp)
  421d19:	jmpq   421a1a <X509_get0_pubkey_bitstr@plt+0xb04a>
  421d1e:	cmpb   $0x0,0x2(%r12)
  421d24:	jne    4216c8 <X509_get0_pubkey_bitstr@plt+0xacf8>
  421d2a:	xor    %r8d,%r8d
  421d2d:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  421d32:	callq  4152b0 <BIO_s_file@plt>
  421d37:	mov    %rax,%rdi
  421d3a:	callq  414a20 <BIO_new@plt>
  421d3f:	test   %rax,%rax
  421d42:	mov    %rax,%rdi
  421d45:	mov    %rax,(%r14)
  421d48:	je     421383 <X509_get0_pubkey_bitstr@plt+0xa9b3>
  421d4e:	mov    0x25422b(%rip),%rax        # 675f80 <_fini+0x218a7c>
  421d55:	mov    $0x10,%edx
  421d5a:	mov    $0x6a,%esi
  421d5f:	mov    (%rax),%rcx
  421d62:	callq  412af0 <BIO_ctrl@plt>
  421d67:	mov    (%r14),%rdi
  421d6a:	jmpq   421383 <X509_get0_pubkey_bitstr@plt+0xa9b3>
  421d6f:	mov    %r8,0x18(%rsp)
  421d74:	callq  412f50 <EVP_md5@plt>
  421d79:	mov    0x18(%rsp),%r8
  421d7e:	mov    %rax,%rbp
  421d81:	jmpq   4215d3 <X509_get0_pubkey_bitstr@plt+0xac03>
  421d86:	mov    (%r14),%rdi
  421d89:	xor    %ebp,%ebp
  421d8b:	xor    %r12d,%r12d
  421d8e:	xor    %r13d,%r13d
  421d91:	mov    $0x1,%ebx
  421d96:	callq  413f40 <ERR_print_errors@plt>
  421d9b:	jmpq   421cfc <X509_get0_pubkey_bitstr@plt+0xb32c>
  421da0:	mov    0x98(%rsp),%edx
  421da7:	mov    (%r14),%rdi
  421daa:	lea    0x3e549(%rip),%rsi        # 4602fa <_fini+0x2df6>
  421db1:	xor    %eax,%eax
  421db3:	mov    %r8,0x18(%rsp)
  421db8:	callq  413c40 <BIO_printf@plt>
  421dbd:	mov    0x18(%rsp),%r8
  421dc2:	jmpq   421a26 <X509_get0_pubkey_bitstr@plt+0xb056>
  421dc7:	movl   $0x1,0x74(%rsp)
  421dcf:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  421dd4:	xor    %ebx,%ebx
  421dd6:	mov    0x38(%rsp),%r15
  421ddb:	mov    %r15,%rdi
  421dde:	callq  413470 <strlen@plt>
  421de3:	lea    0xe0(%rsp),%rdx
  421deb:	mov    0x28(%rsp),%rdi
  421df0:	mov    $0x1,%r9d
  421df6:	mov    %eax,%r8d
  421df9:	mov    %r15,%rcx
  421dfc:	mov    %rbp,%rsi
  421dff:	mov    %rdx,0x8(%rsp)
  421e04:	lea    0x120(%rsp),%rdx
  421e0c:	mov    %rdx,(%rsp)
  421e10:	mov    %rbx,%rdx
  421e13:	callq  415d30 <EVP_BytesToKey@plt>
  421e18:	mov    0x18(%rsp),%rax
  421e1d:	cmp    %rax,%r15
  421e20:	je     42269e <X509_get0_pubkey_bitstr@plt+0xbcce>
  421e26:	mov    0x38(%rsp),%rbx
  421e2b:	mov    %rbx,%rdi
  421e2e:	callq  413470 <strlen@plt>
  421e33:	mov    %rbx,%rdi
  421e36:	mov    %rax,%rsi
  421e39:	callq  413ef0 <OPENSSL_cleanse@plt>
  421e3e:	mov    0x78(%rsp),%rdi
  421e43:	test   %rdi,%rdi
  421e46:	je     422494 <X509_get0_pubkey_bitstr@plt+0xbac4>
  421e4c:	lea    0xe0(%rsp),%rsi
  421e54:	mov    $0x10,%edx
  421e59:	callq  421230 <X509_get0_pubkey_bitstr@plt+0xa860>
  421e5e:	test   %eax,%eax
  421e60:	je     422641 <X509_get0_pubkey_bitstr@plt+0xbc71>
  421e66:	mov    0x68(%rsp),%rdi
  421e6b:	test   %rdi,%rdi
  421e6e:	je     421e8a <X509_get0_pubkey_bitstr@plt+0xb4ba>
  421e70:	lea    0x120(%rsp),%rsi
  421e78:	mov    $0x40,%edx
  421e7d:	callq  421230 <X509_get0_pubkey_bitstr@plt+0xa860>
  421e82:	test   %eax,%eax
  421e84:	je     4225ef <X509_get0_pubkey_bitstr@plt+0xbc1f>
  421e8a:	callq  414600 <BIO_f_cipher@plt>
  421e8f:	mov    %rax,%rdi
  421e92:	mov    $0x1,%ebx
  421e97:	callq  414a20 <BIO_new@plt>
  421e9c:	test   %rax,%rax
  421e9f:	mov    %rax,%rbp
  421ea2:	je     421cfc <X509_get0_pubkey_bitstr@plt+0xb32c>
  421ea8:	lea    0xb8(%rsp),%rcx
  421eb0:	xor    %edx,%edx
  421eb2:	mov    $0x81,%esi
  421eb7:	mov    %rax,%rdi
  421eba:	callq  412af0 <BIO_ctrl@plt>
  421ebf:	mov    0x8c(%rsp),%ebx
  421ec6:	test   %ebx,%ebx
  421ec8:	je     421edc <X509_get0_pubkey_bitstr@plt+0xb50c>
  421eca:	mov    0xb8(%rsp),%rdi
  421ed2:	mov    $0x800,%esi
  421ed7:	callq  414e90 <EVP_CIPHER_CTX_set_flags@plt>
  421edc:	mov    0x90(%rsp),%r9d
  421ee4:	mov    0x28(%rsp),%rsi
  421ee9:	xor    %r8d,%r8d
  421eec:	mov    0xb8(%rsp),%rdi
  421ef4:	xor    %ecx,%ecx
  421ef6:	xor    %edx,%edx
  421ef8:	callq  413e40 <EVP_CipherInit_ex@plt>
  421efd:	test   %eax,%eax
  421eff:	je     42260a <X509_get0_pubkey_bitstr@plt+0xbc3a>
  421f05:	mov    0x74(%rsp),%r11d
  421f0a:	test   %r11d,%r11d
  421f0d:	jne    422780 <X509_get0_pubkey_bitstr@plt+0xbdb0>
  421f13:	lea    0xe0(%rsp),%rax
  421f1b:	lea    0x120(%rsp),%rbx
  421f23:	mov    0x90(%rsp),%r9d
  421f2b:	mov    0xb8(%rsp),%rdi
  421f33:	xor    %edx,%edx
  421f35:	xor    %esi,%esi
  421f37:	mov    %rax,%r8
  421f3a:	mov    %rbx,%rcx
  421f3d:	mov    %rax,0x40(%rsp)
  421f42:	callq  413e40 <EVP_CipherInit_ex@plt>
  421f47:	test   %eax,%eax
  421f49:	je     42260a <X509_get0_pubkey_bitstr@plt+0xbc3a>
  421f4f:	mov    0x54(%rsp),%r10d
  421f54:	test   %r10d,%r10d
  421f57:	je     421f73 <X509_get0_pubkey_bitstr@plt+0xb5a3>
  421f59:	mov    0x254088(%rip),%rsi        # 675fe8 <_fini+0x218ae4>
  421f60:	mov    %rbp,%rdi
  421f63:	callq  413800 <BIO_set_callback@plt>
  421f68:	mov    (%r14),%rsi
  421f6b:	mov    %rbp,%rdi
  421f6e:	callq  4140d0 <BIO_set_callback_arg@plt>
  421f73:	mov    0x60(%rsp),%r9d
  421f78:	test   %r9d,%r9d
  421f7b:	je     422076 <X509_get0_pubkey_bitstr@plt+0xb6a6>
  421f81:	mov    0x64(%rsp),%r8d
  421f86:	test   %r8d,%r8d
  421f89:	je     422bc6 <X509_get0_pubkey_bitstr@plt+0xc1f6>
  421f8f:	mov    0x28(%rsp),%r15
  421f94:	mov    0x8(%r15),%edi
  421f98:	test   %edi,%edi
  421f9a:	jle    422008 <X509_get0_pubkey_bitstr@plt+0xb638>
  421f9c:	lea    0x3e467(%rip),%rsi        # 46040a <_fini+0x2f06>
  421fa3:	xor    %eax,%eax
  421fa5:	mov    $0x1,%edi
  421faa:	callq  412780 <__printf_chk@plt>
  421faf:	mov    0x8(%r15),%esi
  421fb3:	test   %esi,%esi
  421fb5:	jle    421ffe <X509_get0_pubkey_bitstr@plt+0xb62e>
  421fb7:	xor    %r15d,%r15d
  421fba:	mov    %rbx,%rax
  421fbd:	mov    %r15,%rbx
  421fc0:	mov    %r13,%r15
  421fc3:	mov    %r12,%r13
  421fc6:	mov    %rbp,%r12
  421fc9:	mov    %rax,%rbp
  421fcc:	movzbl 0x0(%rbp,%rbx,1),%edx
  421fd1:	lea    0x3edc8(%rip),%rsi        # 460da0 <_fini+0x389c>
  421fd8:	xor    %eax,%eax
  421fda:	mov    $0x1,%edi
  421fdf:	callq  412780 <__printf_chk@plt>
  421fe4:	mov    0x28(%rsp),%rcx
  421fe9:	lea    0x1(%rbx),%eax
  421fec:	add    $0x1,%rbx
  421ff0:	cmp    %eax,0x8(%rcx)
  421ff3:	jg     421fcc <X509_get0_pubkey_bitstr@plt+0xb5fc>
  421ff5:	mov    %r12,%rbp
  421ff8:	mov    %r13,%r12
  421ffb:	mov    %r15,%r13
  421ffe:	mov    $0xa,%edi
  422003:	callq  415570 <putchar@plt>
  422008:	mov    0x28(%rsp),%r15
  42200d:	mov    0xc(%r15),%ecx
  422011:	test   %ecx,%ecx
  422013:	jle    422069 <X509_get0_pubkey_bitstr@plt+0xb699>
  422015:	lea    0x3e3f3(%rip),%rsi        # 46040f <_fini+0x2f0b>
  42201c:	xor    %eax,%eax
  42201e:	mov    $0x1,%edi
  422023:	xor    %ebx,%ebx
  422025:	callq  412780 <__printf_chk@plt>
  42202a:	mov    0xc(%r15),%edx
  42202e:	test   %edx,%edx
  422030:	jle    42205f <X509_get0_pubkey_bitstr@plt+0xb68f>
  422032:	mov    0x40(%rsp),%rax
  422037:	lea    0x3ed62(%rip),%rsi        # 460da0 <_fini+0x389c>
  42203e:	mov    $0x1,%edi
  422043:	movzbl (%rax,%rbx,1),%edx
  422047:	xor    %eax,%eax
  422049:	callq  412780 <__printf_chk@plt>
  42204e:	mov    0x28(%rsp),%rcx
  422053:	lea    0x1(%rbx),%eax
  422056:	add    $0x1,%rbx
  42205a:	cmp    0xc(%rcx),%eax
  42205d:	jl     422032 <X509_get0_pubkey_bitstr@plt+0xb662>
  42205f:	mov    $0xa,%edi
  422064:	callq  415570 <putchar@plt>
  422069:	xor    %ebx,%ebx
  42206b:	cmpl   $0x2,0x60(%rsp)
  422070:	je     421cfc <X509_get0_pubkey_bitstr@plt+0xb32c>
  422076:	mov    0x10(%rsp),%rsi
  42207b:	mov    %rbp,%rdi
  42207e:	callq  415ac0 <BIO_push@plt>
  422083:	mov    0x20(%rsp),%r15
  422088:	mov    %r12,0x28(%rsp)
  42208d:	mov    %rax,%r12
  422090:	mov    %rbp,0x20(%rsp)
  422095:	mov    %rax,0x10(%rsp)
  42209a:	mov    0x58(%rsp),%rbx
  42209f:	mov    0x98(%rsp),%ebp
  4220a6:	mov    %r13,0x38(%rsp)
  4220ab:	jmp    4220c6 <X509_get0_pubkey_bitstr@plt+0xb6f6>
  4220ad:	nopl   (%rax)
  4220b0:	mov    %eax,%edx
  4220b2:	mov    %rbx,%rsi
  4220b5:	mov    %r12,%rdi
  4220b8:	callq  412db0 <BIO_write@plt>
  4220bd:	cmp    %eax,%r13d
  4220c0:	jne    422453 <X509_get0_pubkey_bitstr@plt+0xba83>
  4220c6:	mov    %ebp,%edx
  4220c8:	mov    %rbx,%rsi
  4220cb:	mov    %r15,%rdi
  4220ce:	callq  413930 <BIO_read@plt>
  4220d3:	test   %eax,%eax
  4220d5:	mov    %eax,%r13d
  4220d8:	jg     4220b0 <X509_get0_pubkey_bitstr@plt+0xb6e0>
  4220da:	mov    0x10(%rsp),%rdi
  4220df:	xor    %ecx,%ecx
  4220e1:	xor    %edx,%edx
  4220e3:	mov    $0xb,%esi
  4220e8:	mov    0x20(%rsp),%rbp
  4220ed:	mov    0x28(%rsp),%r12
  4220f2:	mov    0x38(%rsp),%r13
  4220f7:	callq  412af0 <BIO_ctrl@plt>
  4220fc:	test   %eax,%eax
  4220fe:	je     4226e8 <X509_get0_pubkey_bitstr@plt+0xbd18>
  422104:	mov    0x50(%rsp),%eax
  422108:	xor    %ebx,%ebx
  42210a:	test   %eax,%eax
  42210c:	je     421cfc <X509_get0_pubkey_bitstr@plt+0xb32c>
  422112:	mov    0x48(%rsp),%rdi
  422117:	callq  413730 <BIO_number_read@plt>
  42211c:	mov    (%r14),%rdi
  42211f:	lea    0x3e2fb(%rip),%rsi        # 460421 <_fini+0x2f1d>
  422126:	mov    %rax,%rdx
  422129:	xor    %eax,%eax
  42212b:	callq  413c40 <BIO_printf@plt>
  422130:	mov    0x30(%rsp),%rdi
  422135:	callq  4158b0 <BIO_number_written@plt>
  42213a:	mov    (%r14),%rdi
  42213d:	lea    0x3e2f1(%rip),%rsi        # 460435 <_fini+0x2f31>
  422144:	mov    %rax,%rdx
  422147:	xor    %eax,%eax
  422149:	callq  413c40 <BIO_printf@plt>
  42214e:	jmpq   421cfc <X509_get0_pubkey_bitstr@plt+0xb32c>
  422153:	nopl   0x0(%rax,%rax,1)
  422158:	test   %r15,%r15
  42215b:	mov    0x253dae(%rip),%rbx        # 675f10 <_fini+0x218a0c>
  422162:	je     422175 <X509_get0_pubkey_bitstr@plt+0xb7a5>
  422164:	mov    (%rbx),%rdi
  422167:	xor    %ecx,%ecx
  422169:	mov    $0x2,%edx
  42216e:	xor    %esi,%esi
  422170:	callq  4127c0 <setvbuf@plt>
  422175:	mov    (%rbx),%rcx
  422178:	mov    0x48(%rsp),%rdi
  42217d:	xor    %edx,%edx
  42217f:	mov    $0x6a,%esi
  422184:	callq  412af0 <BIO_ctrl@plt>
  422189:	jmpq   421baf <X509_get0_pubkey_bitstr@plt+0xb1df>
  42218e:	mov    0x253e53(%rip),%rbx        # 675fe8 <_fini+0x218ae4>
  422195:	mov    0x48(%rsp),%r13
  42219a:	mov    %r8,0xa0(%rsp)
  4221a2:	mov    %rbx,%rsi
  4221a5:	mov    %r13,%rdi
  4221a8:	callq  413800 <BIO_set_callback@plt>
  4221ad:	mov    %rbx,%rsi
  4221b0:	mov    0x30(%rsp),%rbx
  4221b5:	mov    %rbx,%rdi
  4221b8:	callq  413800 <BIO_set_callback@plt>
  4221bd:	mov    (%r14),%rsi
  4221c0:	mov    %r13,%rdi
  4221c3:	callq  4140d0 <BIO_set_callback_arg@plt>
  4221c8:	mov    (%r14),%rsi
  4221cb:	mov    %rbx,%rdi
  4221ce:	callq  4140d0 <BIO_set_callback_arg@plt>
  4221d3:	mov    0xa0(%rsp),%r8
  4221db:	jmpq   421b76 <X509_get0_pubkey_bitstr@plt+0xb1a6>
  4221e0:	test   %al,%al
  4221e2:	je     421bc4 <X509_get0_pubkey_bitstr@plt+0xb1f4>
  4221e8:	mov    0x20(%rsp),%rsi
  4221ed:	mov    (%r14),%rdi
  4221f0:	lea    0xb0(%rsp),%rcx
  4221f8:	xor    %r8d,%r8d
  4221fb:	xor    %edx,%edx
  4221fd:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  422202:	test   %eax,%eax
  422204:	je     4224c8 <X509_get0_pubkey_bitstr@plt+0xbaf8>
  42220a:	mov    0xb0(%rsp),%rax
  422212:	test   %rax,%rax
  422215:	mov    %rax,0x38(%rsp)
  42221a:	sete   %al
  42221d:	jmpq   421bc4 <X509_get0_pubkey_bitstr@plt+0xb1f4>
  422222:	mov    $0x2c52,%ebx
  422227:	movl   $0x2000,0x98(%rsp)
  422232:	jmpq   421a26 <X509_get0_pubkey_bitstr@plt+0xb056>
  422237:	cmpb   $0x6e,0xf1(%rsp)
  42223f:	jne    4217e0 <X509_get0_pubkey_bitstr@plt+0xae10>
  422245:	cmpb   $0x63,0xf2(%rsp)
  42224d:	jne    4217e0 <X509_get0_pubkey_bitstr@plt+0xae10>
  422253:	cmpb   $0x0,0xf3(%rsp)
  42225b:	je     421449 <X509_get0_pubkey_bitstr@plt+0xaa79>
  422261:	jmpq   4217e0 <X509_get0_pubkey_bitstr@plt+0xae10>
  422266:	nopw   %cs:0x0(%rax,%rax,1)
  422270:	movl   $0x0,0x64(%rsp)
  422278:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  42227d:	callq  415060 <BIO_f_base64@plt>
  422282:	mov    %rax,%rdi
  422285:	callq  414a20 <BIO_new@plt>
  42228a:	test   %rax,%rax
  42228d:	mov    %rax,%r12
  422290:	je     4225d7 <X509_get0_pubkey_bitstr@plt+0xbc07>
  422296:	mov    0x54(%rsp),%eax
  42229a:	test   %eax,%eax
  42229c:	jne    42267f <X509_get0_pubkey_bitstr@plt+0xbcaf>
  4222a2:	mov    0x88(%rsp),%eax
  4222a9:	test   %eax,%eax
  4222ab:	jne    42265c <X509_get0_pubkey_bitstr@plt+0xbc8c>
  4222b1:	mov    0x90(%rsp),%eax
  4222b8:	test   %eax,%eax
  4222ba:	je     42247d <X509_get0_pubkey_bitstr@plt+0xbaad>
  4222c0:	mov    0x10(%rsp),%rsi
  4222c5:	mov    %r12,%rdi
  4222c8:	callq  415ac0 <BIO_push@plt>
  4222cd:	mov    %rax,0x10(%rsp)
  4222d2:	jmpq   421c55 <X509_get0_pubkey_bitstr@plt+0xb285>
  4222d7:	callq  4162c0 <BIO_f_zlib@plt>
  4222dc:	mov    %rax,%rdi
  4222df:	callq  414a20 <BIO_new@plt>
  4222e4:	test   %rax,%rax
  4222e7:	mov    %rax,%r13
  4222ea:	je     4226b2 <X509_get0_pubkey_bitstr@plt+0xbce2>
  4222f0:	mov    0x90(%rsp),%eax
  4222f7:	test   %eax,%eax
  4222f9:	je     4224dc <X509_get0_pubkey_bitstr@plt+0xbb0c>
  4222ff:	mov    0x30(%rsp),%rsi
  422304:	mov    %r13,%rdi
  422307:	callq  415ac0 <BIO_push@plt>
  42230c:	mov    %rax,0x10(%rsp)
  422311:	mov    0x48(%rsp),%rax
  422316:	mov    %rax,0x20(%rsp)
  42231b:	jmpq   421c46 <X509_get0_pubkey_bitstr@plt+0xb276>
  422320:	mov    0x18(%rsp),%rdx
  422325:	mov    (%r14),%rdi
  422328:	lea    0x3e331(%rip),%rsi        # 460660 <_fini+0x315c>
  42232f:	xor    %eax,%eax
  422331:	callq  413c40 <BIO_printf@plt>
  422336:	jmpq   42138e <X509_get0_pubkey_bitstr@plt+0xa9be>
  42233b:	mov    0x253b76(%rip),%rbx        # 675eb8 <_fini+0x2189b4>
  422342:	mov    0x30(%rsp),%rdi
  422347:	xor    %edx,%edx
  422349:	mov    $0x6a,%esi
  42234e:	mov    (%rbx),%rcx
  422351:	callq  412af0 <BIO_ctrl@plt>
  422356:	test   %r15,%r15
  422359:	je     421c23 <X509_get0_pubkey_bitstr@plt+0xb253>
  42235f:	mov    (%rbx),%rdi
  422362:	xor    %ecx,%ecx
  422364:	mov    $0x2,%edx
  422369:	xor    %esi,%esi
  42236b:	callq  4127c0 <setvbuf@plt>
  422370:	jmpq   421c23 <X509_get0_pubkey_bitstr@plt+0xb253>
  422375:	movl   $0x1,0x90(%rsp)
  422380:	movq   $0x0,0x18(%rsp)
  422389:	xor    %r15d,%r15d
  42238c:	movq   $0x0,0x80(%rsp)
  422398:	movq   $0x0,0x78(%rsp)
  4223a1:	movq   $0x0,0x68(%rsp)
  4223aa:	movq   $0x0,0x20(%rsp)
  4223b3:	movq   $0x0,0x38(%rsp)
  4223bc:	movl   $0x0,0x74(%rsp)
  4223c4:	movl   $0x0,0x50(%rsp)
  4223cc:	jmpq   421598 <X509_get0_pubkey_bitstr@plt+0xabc8>
  4223d1:	lea    0xc0(%rsp),%r15
  4223d9:	mov    0x20(%rsp),%rdi
  4223de:	mov    $0x8,%edx
  4223e3:	mov    %r15,%rsi
  4223e6:	callq  413930 <BIO_read@plt>
  4223eb:	cmp    $0x8,%eax
  4223ee:	je     422701 <X509_get0_pubkey_bitstr@plt+0xbd31>
  4223f4:	lea    0x3df89(%rip),%rsi        # 460384 <_fini+0x2e80>
  4223fb:	jmpq   421ceb <X509_get0_pubkey_bitstr@plt+0xb31b>
  422400:	xor    %ebp,%ebp
  422402:	mov    0x20(%rsp),%r15
  422407:	mov    %r12,0x28(%rsp)
  42240c:	mov    %rbp,0x20(%rsp)
  422411:	mov    0x58(%rsp),%rbx
  422416:	mov    0x98(%rsp),%ebp
  42241d:	mov    0x10(%rsp),%r12
  422422:	mov    %r13,0x38(%rsp)
  422427:	jmpq   4220c6 <X509_get0_pubkey_bitstr@plt+0xb6f6>
  42242c:	movl   $0x1,0x64(%rsp)
  422434:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  422439:	mov    %r8,%rdi
  42243c:	callq  4142c0 <perror@plt>
  422441:	xor    %ebp,%ebp
  422443:	xor    %r12d,%r12d
  422446:	xor    %r13d,%r13d
  422449:	mov    $0x1,%ebx
  42244e:	jmpq   421cfc <X509_get0_pubkey_bitstr@plt+0xb32c>
  422453:	mov    (%r14),%rdi
  422456:	lea    0x3df0c(%rip),%rsi        # 460369 <_fini+0x2e65>
  42245d:	xor    %eax,%eax
  42245f:	mov    0x20(%rsp),%rbp
  422464:	mov    0x28(%rsp),%r12
  422469:	mov    $0x1,%ebx
  42246e:	mov    0x38(%rsp),%r13
  422473:	callq  413c40 <BIO_printf@plt>
  422478:	jmpq   421cfc <X509_get0_pubkey_bitstr@plt+0xb32c>
  42247d:	mov    0x20(%rsp),%rsi
  422482:	mov    %r12,%rdi
  422485:	callq  415ac0 <BIO_push@plt>
  42248a:	mov    %rax,0x20(%rsp)
  42248f:	jmpq   421c55 <X509_get0_pubkey_bitstr@plt+0xb285>
  422494:	cmpq   $0x0,0x38(%rsp)
  42249a:	jne    421e66 <X509_get0_pubkey_bitstr@plt+0xb496>
  4224a0:	mov    0x28(%rsp),%rdi
  4224a5:	callq  412d90 <EVP_CIPHER_iv_length@plt>
  4224aa:	test   %eax,%eax
  4224ac:	je     421e66 <X509_get0_pubkey_bitstr@plt+0xb496>
  4224b2:	lea    0x3df0d(%rip),%rsi        # 4603c6 <_fini+0x2ec2>
  4224b9:	jmpq   421ceb <X509_get0_pubkey_bitstr@plt+0xb31b>
  4224be:	mov    0x10(%rsp),%rdi
  4224c3:	jmpq   42243c <X509_get0_pubkey_bitstr@plt+0xba6c>
  4224c8:	mov    (%r14),%rdi
  4224cb:	lea    0x3d462(%rip),%rsi        # 45f934 <_fini+0x2430>
  4224d2:	callq  413c40 <BIO_printf@plt>
  4224d7:	jmpq   422441 <X509_get0_pubkey_bitstr@plt+0xba71>
  4224dc:	mov    0x48(%rsp),%rsi
  4224e1:	mov    %r13,%rdi
  4224e4:	callq  415ac0 <BIO_push@plt>
  4224e9:	mov    %rax,0x20(%rsp)
  4224ee:	mov    0x30(%rsp),%rax
  4224f3:	mov    %rax,0x10(%rsp)
  4224f8:	jmpq   421c46 <X509_get0_pubkey_bitstr@plt+0xb276>
  4224fd:	movl   $0x1,0x54(%rsp)
  422505:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  42250a:	mov    %r15,0x38(%rsp)
  42250f:	mov    %rbp,0xa8(%rsp)
  422517:	lea    0x120(%rsp),%rbx
  42251f:	lea    0x3dc4c(%rip),%r12        # 460172 <_fini+0x2c6e>
  422526:	lea    0x3dc3a(%rip),%r13        # 460167 <_fini+0x2c63>
  42252d:	mov    0x90(%rsp),%ebp
  422534:	mov    0x18(%rsp),%r15
  422539:	jmp    422546 <X509_get0_pubkey_bitstr@plt+0xbb76>
  42253b:	nopl   0x0(%rax,%rax,1)
  422540:	js     42266e <X509_get0_pubkey_bitstr@plt+0xbc9e>
  422546:	mov    0x28(%rsp),%rdi
  42254b:	test   %ebp,%ebp
  42254d:	mov    %r13,%r8
  422550:	cmove  %r12,%r8
  422554:	mov    %r8,0x20(%rsp)
  422559:	callq  412fa0 <EVP_CIPHER_nid@plt>
  42255e:	mov    %eax,%edi
  422560:	callq  413920 <OBJ_nid2ln@plt>
  422565:	mov    0x20(%rsp),%r8
  42256a:	lea    0x3ddb7(%rip),%rdx        # 460328 <_fini+0x2e24>
  422571:	mov    %rax,%rcx
  422574:	mov    $0xc8,%esi
  422579:	mov    %rbx,%rdi
  42257c:	xor    %eax,%eax
  42257e:	callq  412fc0 <BIO_snprintf@plt>
  422583:	movb   $0x0,(%r15)
  422587:	mov    %ebp,%ecx
  422589:	mov    %rbx,%rdx
  42258c:	mov    $0x200,%esi
  422591:	mov    %r15,%rdi
  422594:	callq  4161f0 <EVP_read_pw_string@plt>
  422599:	test   %eax,%eax
  42259b:	jne    422540 <X509_get0_pubkey_bitstr@plt+0xbb70>
  42259d:	mov    0x18(%rsp),%rax
  4225a2:	mov    0x38(%rsp),%r15
  4225a7:	mov    0xa8(%rsp),%rbp
  4225af:	cmpb   $0x0,(%rax)
  4225b2:	je     422441 <X509_get0_pubkey_bitstr@plt+0xba71>
  4225b8:	mov    %rax,0x38(%rsp)
  4225bd:	jmpq   421bf5 <X509_get0_pubkey_bitstr@plt+0xb225>
  4225c2:	mov    $0x8,%esi
  4225c7:	mov    %rbx,%rdi
  4225ca:	callq  415560 <RAND_pseudo_bytes@plt>
  4225cf:	test   %eax,%eax
  4225d1:	jns    421cba <X509_get0_pubkey_bitstr@plt+0xb2ea>
  4225d7:	xor    %ebp,%ebp
  4225d9:	mov    $0x1,%ebx
  4225de:	jmpq   421cfc <X509_get0_pubkey_bitstr@plt+0xb32c>
  4225e3:	lea    0x3dd67(%rip),%rsi        # 460351 <_fini+0x2e4d>
  4225ea:	jmpq   421ceb <X509_get0_pubkey_bitstr@plt+0xb31b>
  4225ef:	mov    (%r14),%rdi
  4225f2:	lea    0x3dddb(%rip),%rsi        # 4603d4 <_fini+0x2ed0>
  4225f9:	xor    %ebp,%ebp
  4225fb:	mov    $0x1,%ebx
  422600:	callq  413c40 <BIO_printf@plt>
  422605:	jmpq   421cfc <X509_get0_pubkey_bitstr@plt+0xb32c>
  42260a:	mov    0x28(%rsp),%rdi
  42260f:	mov    $0x1,%ebx
  422614:	callq  412fa0 <EVP_CIPHER_nid@plt>
  422619:	mov    %eax,%edi
  42261b:	callq  415b30 <OBJ_nid2sn@plt>
  422620:	mov    (%r14),%rdi
  422623:	lea    0x3ddc1(%rip),%rsi        # 4603eb <_fini+0x2ee7>
  42262a:	mov    %rax,%rdx
  42262d:	xor    %eax,%eax
  42262f:	callq  413c40 <BIO_printf@plt>
  422634:	mov    (%r14),%rdi
  422637:	callq  413f40 <ERR_print_errors@plt>
  42263c:	jmpq   421cfc <X509_get0_pubkey_bitstr@plt+0xb32c>
  422641:	mov    (%r14),%rdi
  422644:	lea    0x3dd65(%rip),%rsi        # 4603b0 <_fini+0x2eac>
  42264b:	xor    %ebp,%ebp
  42264d:	mov    $0x1,%ebx
  422652:	callq  413c40 <BIO_printf@plt>
  422657:	jmpq   421cfc <X509_get0_pubkey_bitstr@plt+0xb32c>
  42265c:	mov    $0x100,%esi
  422661:	mov    %r12,%rdi
  422664:	callq  4163c0 <BIO_set_flags@plt>
  422669:	jmpq   4222b1 <X509_get0_pubkey_bitstr@plt+0xb8e1>
  42266e:	lea    0x3dcc9(%rip),%rsi        # 46033e <_fini+0x2e3a>
  422675:	mov    (%r14),%rdi
  422678:	xor    %eax,%eax
  42267a:	jmpq   4224d2 <X509_get0_pubkey_bitstr@plt+0xbb02>
  42267f:	mov    0x253962(%rip),%rsi        # 675fe8 <_fini+0x218ae4>
  422686:	mov    %r12,%rdi
  422689:	callq  413800 <BIO_set_callback@plt>
  42268e:	mov    (%r14),%rsi
  422691:	mov    %r12,%rdi
  422694:	callq  4140d0 <BIO_set_callback_arg@plt>
  422699:	jmpq   4222a2 <X509_get0_pubkey_bitstr@plt+0xb8d2>
  42269e:	mov    0x38(%rsp),%rdi
  4226a3:	mov    $0x200,%esi
  4226a8:	callq  413ef0 <OPENSSL_cleanse@plt>
  4226ad:	jmpq   421e3e <X509_get0_pubkey_bitstr@plt+0xb46e>
  4226b2:	xor    %ebp,%ebp
  4226b4:	xor    %r12d,%r12d
  4226b7:	mov    $0x1,%ebx
  4226bc:	jmpq   421cfc <X509_get0_pubkey_bitstr@plt+0xb32c>
  4226c1:	mov    0x10(%rsp),%rdi
  4226c6:	mov    $0x8,%edx
  4226cb:	mov    %rbx,%rsi
  4226ce:	callq  412db0 <BIO_write@plt>
  4226d3:	cmp    $0x8,%eax
  4226d6:	jne    421ce4 <X509_get0_pubkey_bitstr@plt+0xb314>
  4226dc:	jmpq   421dd6 <X509_get0_pubkey_bitstr@plt+0xb406>
  4226e1:	nopl   0x0(%rax)
  4226e8:	mov    (%r14),%rdi
  4226eb:	lea    0x3dd22(%rip),%rsi        # 460414 <_fini+0x2f10>
  4226f2:	mov    $0x1,%ebx
  4226f7:	callq  413c40 <BIO_printf@plt>
  4226fc:	jmpq   421cfc <X509_get0_pubkey_bitstr@plt+0xb32c>
  422701:	lea    0xd0(%rsp),%rbx
  422709:	mov    0x20(%rsp),%rdi
  42270e:	mov    $0x8,%edx
  422713:	mov    %rbx,%rsi
  422716:	callq  413930 <BIO_read@plt>
  42271b:	cmp    $0x8,%eax
  42271e:	jne    4223f4 <X509_get0_pubkey_bitstr@plt+0xba24>
  422724:	lea    0x3df5f(%rip),%rsi        # 46068a <_fini+0x3186>
  42272b:	mov    $0x8,%edx
  422730:	mov    %r15,%rdi
  422733:	callq  4134e0 <memcmp@plt>
  422738:	test   %eax,%eax
  42273a:	lea    0x3dc5d(%rip),%rsi        # 46039e <_fini+0x2e9a>
  422741:	je     421dd6 <X509_get0_pubkey_bitstr@plt+0xb406>
  422747:	jmpq   421ceb <X509_get0_pubkey_bitstr@plt+0xb31b>
  42274c:	nopl   0x0(%rax)
  422750:	movzbl 0x1(%r12),%edx
  422756:	cmp    $0x50,%dl
  422759:	je     422799 <X509_get0_pubkey_bitstr@plt+0xbdc9>
  42275b:	cmp    $0x41,%dl
  42275e:	jne    42282d <X509_get0_pubkey_bitstr@plt+0xbe5d>
  422764:	cmpb   $0x0,0x2(%r12)
  42276a:	jne    4227a2 <X509_get0_pubkey_bitstr@plt+0xbdd2>
  42276c:	movl   $0x1,0x88(%rsp)
  422777:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  42277c:	nopl   0x0(%rax)
  422780:	mov    0xb8(%rsp),%rdi
  422788:	xor    %esi,%esi
  42278a:	callq  415930 <EVP_CIPHER_CTX_set_padding@plt>
  42278f:	jmpq   421f13 <X509_get0_pubkey_bitstr@plt+0xb543>
  422794:	callq  414c30 <__stack_chk_fail@plt>
  422799:	cmpb   $0x0,0x2(%r12)
  42279f:	nop
  4227a0:	je     422820 <X509_get0_pubkey_bitstr@plt+0xbe50>
  4227a2:	lea    0x3dad5(%rip),%rsi        # 46027e <_fini+0x2d7a>
  4227a9:	mov    %r12,%rdi
  4227ac:	mov    %r9,0xa0(%rsp)
  4227b4:	mov    %r8d,0x98(%rsp)
  4227bc:	mov    %r11,0x90(%rsp)
  4227c4:	mov    %r10,0x58(%rsp)
  4227c9:	mov    %edx,0x48(%rsp)
  4227cd:	callq  4155c0 <strcmp@plt>
  4227d2:	test   %eax,%eax
  4227d4:	mov    0x48(%rsp),%edx
  4227d8:	mov    0x58(%rsp),%r10
  4227dd:	mov    0x90(%rsp),%r11
  4227e5:	mov    0x98(%rsp),%r8d
  4227ed:	mov    0xa0(%rsp),%r9
  4227f5:	je     421775 <X509_get0_pubkey_bitstr@plt+0xada5>
  4227fb:	cmpb   $0x7a,0x1(%r12)
  422801:	jne    422847 <X509_get0_pubkey_bitstr@plt+0xbe77>
  422803:	cmpb   $0x0,0x2(%r12)
  422809:	jne    422847 <X509_get0_pubkey_bitstr@plt+0xbe77>
  42280b:	movl   $0x1,0x70(%rsp)
  422813:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  422818:	nopl   0x0(%rax,%rax,1)
  422820:	movl   $0x2,0x60(%rsp)
  422828:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  42282d:	cmp    $0x61,%dl
  422830:	jne    4227a2 <X509_get0_pubkey_bitstr@plt+0xbdd2>
  422836:	cmpb   $0x0,0x2(%r12)
  42283c:	je     421775 <X509_get0_pubkey_bitstr@plt+0xada5>
  422842:	jmpq   4227a2 <X509_get0_pubkey_bitstr@plt+0xbdd2>
  422847:	lea    0x3d96a(%rip),%rsi        # 4601b8 <_fini+0x2cb4>
  42284e:	mov    %r12,%rdi
  422851:	mov    %r9,0xa0(%rsp)
  422859:	mov    %r8d,0x98(%rsp)
  422861:	mov    %r11,0x90(%rsp)
  422869:	mov    %r10,0x58(%rsp)
  42286e:	mov    %edx,0x48(%rsp)
  422872:	callq  4155c0 <strcmp@plt>
  422877:	test   %eax,%eax
  422879:	mov    0x48(%rsp),%edx
  42287d:	mov    0x58(%rsp),%r10
  422882:	mov    0x90(%rsp),%r11
  42288a:	mov    0x98(%rsp),%r8d
  422892:	mov    0xa0(%rsp),%r9
  42289a:	jne    422c2c <X509_get0_pubkey_bitstr@plt+0xc25c>
  4228a0:	sub    $0x1,%ebx
  4228a3:	je     4217f4 <X509_get0_pubkey_bitstr@plt+0xae24>
  4228a9:	mov    0x8(%rbp),%rax
  4228ad:	add    $0x8,%rbp
  4228b1:	mov    %rax,0x30(%rsp)
  4228b6:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  4228bb:	lea    0x3d8f6(%rip),%rsi        # 4601b8 <_fini+0x2cb4>
  4228c2:	mov    %r12,%rdi
  4228c5:	mov    %r9,0x98(%rsp)
  4228cd:	mov    %r8d,0x90(%rsp)
  4228d5:	mov    %r11,0x58(%rsp)
  4228da:	mov    %r10,0x48(%rsp)
  4228df:	callq  4155c0 <strcmp@plt>
  4228e4:	test   %eax,%eax
  4228e6:	mov    0x48(%rsp),%r10
  4228eb:	mov    0x58(%rsp),%r11
  4228f0:	mov    0x90(%rsp),%r8d
  4228f8:	mov    0x98(%rsp),%r9
  422900:	je     4228a0 <X509_get0_pubkey_bitstr@plt+0xbed0>
  422902:	lea    0x3d980(%rip),%rsi        # 460289 <_fini+0x2d85>
  422909:	mov    %r12,%rdi
  42290c:	mov    %r9,0x98(%rsp)
  422914:	mov    %r8d,0x90(%rsp)
  42291c:	mov    %r11,0x58(%rsp)
  422921:	mov    %r10,0x48(%rsp)
  422926:	callq  4155c0 <strcmp@plt>
  42292b:	test   %eax,%eax
  42292d:	mov    0x48(%rsp),%r10
  422932:	mov    0x58(%rsp),%r11
  422937:	mov    0x90(%rsp),%r8d
  42293f:	mov    0x98(%rsp),%r9
  422947:	jne    422afc <X509_get0_pubkey_bitstr@plt+0xc12c>
  42294d:	sub    $0x1,%ebx
  422950:	mov    %r9,0x90(%rsp)
  422958:	mov    %r8d,0x58(%rsp)
  42295d:	mov    %r11,0x48(%rsp)
  422962:	mov    %r10,0x38(%rsp)
  422967:	je     4217f4 <X509_get0_pubkey_bitstr@plt+0xae24>
  42296d:	lea    0x8(%rbp),%r13
  422971:	mov    0x8(%rbp),%rbp
  422975:	lea    0x3b8b1(%rip),%rsi        # 45e22d <_fini+0xd29>
  42297c:	mov    %rbp,%rdi
  42297f:	callq  414e70 <fopen@plt>
  422984:	test   %rax,%rax
  422987:	mov    0x38(%rsp),%r10
  42298c:	mov    0x48(%rsp),%r11
  422991:	mov    0x58(%rsp),%r8d
  422996:	mov    0x90(%rsp),%r9
  42299e:	je     422ae3 <X509_get0_pubkey_bitstr@plt+0xc113>
  4229a4:	lea    0x2588b5(%rip),%r12        # 67b260 <_edata+0x558>
  4229ab:	mov    %rax,%rdx
  4229ae:	mov    $0x80,%esi
  4229b3:	mov    %r9,0x98(%rsp)
  4229bb:	mov    %r8d,0x90(%rsp)
  4229c3:	mov    %r12,%rdi
  4229c6:	mov    %r11,0x58(%rsp)
  4229cb:	mov    %r10,0x48(%rsp)
  4229d0:	movb   $0x0,0x258889(%rip)        # 67b260 <_edata+0x558>
  4229d7:	mov    %rax,0x38(%rsp)
  4229dc:	callq  415af0 <fgets@plt>
  4229e1:	test   %rax,%rax
  4229e4:	mov    0x38(%rsp),%rcx
  4229e9:	mov    0x48(%rsp),%r10
  4229ee:	mov    0x58(%rsp),%r11
  4229f3:	mov    0x90(%rsp),%r8d
  4229fb:	mov    0x98(%rsp),%r9
  422a03:	je     422acc <X509_get0_pubkey_bitstr@plt+0xc0fc>
  422a09:	mov    %rcx,%rdi
  422a0c:	mov    %r9,0x90(%rsp)
  422a14:	mov    %r8d,0x58(%rsp)
  422a19:	mov    %r11,0x48(%rsp)
  422a1e:	mov    %r10,0x38(%rsp)
  422a23:	callq  414830 <fclose@plt>
  422a28:	xor    %eax,%eax
  422a2a:	or     $0xffffffffffffffff,%rcx
  422a2e:	mov    %r12,%rdi
  422a31:	repnz scas %es:(%rdi),%al
  422a33:	not    %rcx
  422a36:	sub    $0x1,%rcx
  422a3a:	test   %ecx,%ecx
  422a3c:	jle    422ab6 <X509_get0_pubkey_bitstr@plt+0xc0e6>
  422a3e:	lea    -0x1(%rcx),%eax
  422a41:	mov    0x38(%rsp),%r10
  422a46:	mov    0x48(%rsp),%r11
  422a4b:	mov    0x58(%rsp),%r8d
  422a50:	mov    0x90(%rsp),%r9
  422a58:	movslq %eax,%rdx
  422a5b:	movzbl (%r12,%rdx,1),%esi
  422a60:	cmp    $0xd,%sil
  422a64:	je     422a70 <X509_get0_pubkey_bitstr@plt+0xc0a0>
  422a66:	cmp    $0xa,%sil
  422a6a:	jne    422c1f <X509_get0_pubkey_bitstr@plt+0xc24f>
  422a70:	lea    0x2587e9(%rip),%rsi        # 67b260 <_edata+0x558>
  422a77:	test   %eax,%eax
  422a79:	movb   $0x0,(%rsi,%rdx,1)
  422a7d:	je     422ab6 <X509_get0_pubkey_bitstr@plt+0xc0e6>
  422a7f:	sub    $0x2,%ecx
  422a82:	movslq %ecx,%rax
  422a85:	movzbl (%rsi,%rax,1),%edx
  422a89:	cmp    $0xd,%dl
  422a8c:	je     422a93 <X509_get0_pubkey_bitstr@plt+0xc0c3>
  422a8e:	cmp    $0xa,%dl
  422a91:	jne    422aa2 <X509_get0_pubkey_bitstr@plt+0xc0d2>
  422a93:	lea    0x2587c6(%rip),%rsi        # 67b260 <_edata+0x558>
  422a9a:	test   %ecx,%ecx
  422a9c:	movb   $0x0,(%rsi,%rax,1)
  422aa0:	jle    422ab6 <X509_get0_pubkey_bitstr@plt+0xc0e6>
  422aa2:	lea    0x2587b7(%rip),%rax        # 67b260 <_edata+0x558>
  422aa9:	mov    %r13,%rbp
  422aac:	mov    %rax,0x38(%rsp)
  422ab1:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  422ab6:	mov    (%r14),%rdi
  422ab9:	lea    0x3d71f(%rip),%rsi        # 4601df <_fini+0x2cdb>
  422ac0:	xor    %eax,%eax
  422ac2:	callq  413c40 <BIO_printf@plt>
  422ac7:	jmpq   4217f4 <X509_get0_pubkey_bitstr@plt+0xae24>
  422acc:	mov    (%r14),%rdi
  422acf:	lea    0x3d6eb(%rip),%rsi        # 4601c1 <_fini+0x2cbd>
  422ad6:	mov    %rbp,%rdx
  422ad9:	callq  413c40 <BIO_printf@plt>
  422ade:	jmpq   4217f4 <X509_get0_pubkey_bitstr@plt+0xae24>
  422ae3:	mov    (%r14),%rdi
  422ae6:	lea    0x3d6d4(%rip),%rsi        # 4601c1 <_fini+0x2cbd>
  422aed:	mov    %rbp,%rdx
  422af0:	xor    %eax,%eax
  422af2:	callq  413c40 <BIO_printf@plt>
  422af7:	jmpq   4217f4 <X509_get0_pubkey_bitstr@plt+0xae24>
  422afc:	lea    0x3cdf9(%rip),%rsi        # 45f8fc <_fini+0x23f8>
  422b03:	mov    %r12,%rdi
  422b06:	mov    %r9,0x98(%rsp)
  422b0e:	mov    %r8d,0x90(%rsp)
  422b16:	mov    %r11,0x58(%rsp)
  422b1b:	mov    %r10,0x48(%rsp)
  422b20:	callq  4155c0 <strcmp@plt>
  422b25:	test   %eax,%eax
  422b27:	mov    0x48(%rsp),%r10
  422b2c:	mov    0x58(%rsp),%r11
  422b31:	mov    0x90(%rsp),%r8d
  422b39:	mov    0x98(%rsp),%r9
  422b41:	je     422d4e <X509_get0_pubkey_bitstr@plt+0xc37e>
  422b47:	cmp    $0x2d,%r13b
  422b4b:	je     422cf9 <X509_get0_pubkey_bitstr@plt+0xc329>
  422b51:	lea    0x4062e(%rip),%rsi        # 463186 <_fini+0x5c82>
  422b58:	mov    %r12,%rdi
  422b5b:	mov    %r9,0x90(%rsp)
  422b63:	mov    %r8d,0x58(%rsp)
  422b68:	mov    %r11,0x48(%rsp)
  422b6d:	mov    %r10,0x28(%rsp)
  422b72:	callq  4155c0 <strcmp@plt>
  422b77:	test   %eax,%eax
  422b79:	mov    0x28(%rsp),%r10
  422b7e:	mov    0x48(%rsp),%r11
  422b83:	mov    0x58(%rsp),%r8d
  422b88:	mov    0x90(%rsp),%r9
  422b90:	jne    422c57 <X509_get0_pubkey_bitstr@plt+0xc287>
  422b96:	movq   $0x0,0x28(%rsp)
  422b9f:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  422ba4:	cmp    $0x76,%dl
  422ba7:	jne    4216c8 <X509_get0_pubkey_bitstr@plt+0xacf8>
  422bad:	cmpb   $0x0,0x2(%r12)
  422bb3:	jne    4216c8 <X509_get0_pubkey_bitstr@plt+0xacf8>
  422bb9:	movl   $0x1,0x50(%rsp)
  422bc1:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  422bc6:	lea    0x3d837(%rip),%rsi        # 460404 <_fini+0x2f00>
  422bcd:	mov    $0x1,%edi
  422bd2:	xor    %eax,%eax
  422bd4:	lea    0xd0(%rsp),%r15
  422bdc:	callq  412780 <__printf_chk@plt>
  422be1:	lea    0xd8(%rsp),%rax
  422be9:	mov    %rax,0x38(%rsp)
  422bee:	movzbl (%r15),%edx
  422bf2:	lea    0x3e1a7(%rip),%rsi        # 460da0 <_fini+0x389c>
  422bf9:	xor    %eax,%eax
  422bfb:	mov    $0x1,%edi
  422c00:	add    $0x1,%r15
  422c04:	callq  412780 <__printf_chk@plt>
  422c09:	cmp    0x38(%rsp),%r15
  422c0e:	jne    422bee <X509_get0_pubkey_bitstr@plt+0xc21e>
  422c10:	mov    $0xa,%edi
  422c15:	callq  415570 <putchar@plt>
  422c1a:	jmpq   421f8f <X509_get0_pubkey_bitstr@plt+0xb5bf>
  422c1f:	mov    %r13,%rbp
  422c22:	mov    %r12,0x38(%rsp)
  422c27:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  422c2c:	cmpb   $0x6b,0x1(%r12)
  422c32:	jne    422c70 <X509_get0_pubkey_bitstr@plt+0xc2a0>
  422c34:	cmpb   $0x0,0x2(%r12)
  422c3a:	jne    422c70 <X509_get0_pubkey_bitstr@plt+0xc2a0>
  422c3c:	sub    $0x1,%ebx
  422c3f:	je     4217f4 <X509_get0_pubkey_bitstr@plt+0xae24>
  422c45:	mov    0x8(%rbp),%rax
  422c49:	add    $0x8,%rbp
  422c4d:	mov    %rax,0x38(%rsp)
  422c52:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  422c57:	mov    (%r14),%rdi
  422c5a:	lea    0x3ccbe(%rip),%rsi        # 45f91f <_fini+0x241b>
  422c61:	mov    %r12,%rdx
  422c64:	xor    %eax,%eax
  422c66:	callq  413c40 <BIO_printf@plt>
  422c6b:	jmpq   4217f4 <X509_get0_pubkey_bitstr@plt+0xae24>
  422c70:	lea    0x3d612(%rip),%rsi        # 460289 <_fini+0x2d85>
  422c77:	mov    %r12,%rdi
  422c7a:	mov    %r9,0xa0(%rsp)
  422c82:	mov    %r8d,0x98(%rsp)
  422c8a:	mov    %r11,0x90(%rsp)
  422c92:	mov    %r10,0x58(%rsp)
  422c97:	mov    %edx,0x48(%rsp)
  422c9b:	callq  4155c0 <strcmp@plt>
  422ca0:	test   %eax,%eax
  422ca2:	mov    0x48(%rsp),%edx
  422ca6:	mov    0x58(%rsp),%r10
  422cab:	mov    0x90(%rsp),%r11
  422cb3:	mov    0x98(%rsp),%r8d
  422cbb:	mov    0xa0(%rsp),%r9
  422cc3:	je     42294d <X509_get0_pubkey_bitstr@plt+0xbf7d>
  422cc9:	cmp    $0x4b,%dl
  422ccc:	jne    422d5e <X509_get0_pubkey_bitstr@plt+0xc38e>
  422cd2:	cmpb   $0x0,0x2(%r12)
  422cd8:	jne    422afc <X509_get0_pubkey_bitstr@plt+0xc12c>
  422cde:	sub    $0x1,%ebx
  422ce1:	je     4217f4 <X509_get0_pubkey_bitstr@plt+0xae24>
  422ce7:	mov    0x8(%rbp),%rax
  422ceb:	add    $0x8,%rbp
  422cef:	mov    %rax,0x68(%rsp)
  422cf4:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  422cf9:	lea    0x1(%r12),%rdi
  422cfe:	mov    %r9,0x98(%rsp)
  422d06:	mov    %r8d,0x90(%rsp)
  422d0e:	mov    %r11,0x58(%rsp)
  422d13:	mov    %r10,0x48(%rsp)
  422d18:	callq  416810 <EVP_get_cipherbyname@plt>
  422d1d:	test   %rax,%rax
  422d20:	mov    %rax,0x28(%rsp)
  422d25:	mov    0x48(%rsp),%r10
  422d2a:	mov    0x58(%rsp),%r11
  422d2f:	mov    0x90(%rsp),%r8d
  422d37:	mov    0x98(%rsp),%r9
  422d3f:	jne    42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  422d45:	mov    0x0(%rbp),%r12
  422d49:	jmpq   422b51 <X509_get0_pubkey_bitstr@plt+0xc181>
  422d4e:	movl   $0x1,0x8c(%rsp)
  422d59:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  422d5e:	cmp    $0x53,%dl
  422d61:	jne    422d8d <X509_get0_pubkey_bitstr@plt+0xc3bd>
  422d63:	cmpb   $0x0,0x2(%r12)
  422d69:	jne    422afc <X509_get0_pubkey_bitstr@plt+0xc12c>
  422d6f:	sub    $0x1,%ebx
  422d72:	je     4217f4 <X509_get0_pubkey_bitstr@plt+0xae24>
  422d78:	mov    0x8(%rbp),%rax
  422d7c:	add    $0x8,%rbp
  422d80:	mov    %rax,0x80(%rsp)
  422d88:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  422d8d:	cmp    $0x69,%dl
  422d90:	jne    422dc5 <X509_get0_pubkey_bitstr@plt+0xc3f5>
  422d92:	cmpb   $0x76,0x2(%r12)
  422d98:	jne    422afc <X509_get0_pubkey_bitstr@plt+0xc12c>
  422d9e:	cmpb   $0x0,0x3(%r12)
  422da4:	jne    422afc <X509_get0_pubkey_bitstr@plt+0xc12c>
  422daa:	sub    $0x1,%ebx
  422dad:	je     4217f4 <X509_get0_pubkey_bitstr@plt+0xae24>
  422db3:	mov    0x8(%rbp),%rax
  422db7:	add    $0x8,%rbp
  422dbb:	mov    %rax,0x78(%rsp)
  422dc0:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  422dc5:	cmp    $0x6d,%dl
  422dc8:	jne    422afc <X509_get0_pubkey_bitstr@plt+0xc12c>
  422dce:	cmpb   $0x64,0x2(%r12)
  422dd4:	jne    422afc <X509_get0_pubkey_bitstr@plt+0xc12c>
  422dda:	cmpb   $0x0,0x3(%r12)
  422de0:	jne    422afc <X509_get0_pubkey_bitstr@plt+0xc12c>
  422de6:	sub    $0x1,%ebx
  422de9:	je     4217f4 <X509_get0_pubkey_bitstr@plt+0xae24>
  422def:	mov    0x8(%rbp),%rax
  422df3:	add    $0x8,%rbp
  422df7:	mov    %rax,0x18(%rsp)
  422dfc:	jmpq   42152b <X509_get0_pubkey_bitstr@plt+0xab5b>
  422e01:	nopw   %cs:0x0(%rax,%rax,1)
  422e0b:	nopl   0x0(%rax,%rax,1)
  422e10:	push   %r15
  422e12:	mov    %rsi,%r15
  422e15:	push   %r14
  422e17:	push   %r13
  422e19:	push   %r12
  422e1b:	push   %rbp
  422e1c:	push   %rbx
  422e1d:	sub    $0xb8,%rsp
  422e24:	mov    %fs:0x28,%rax
  422e2d:	mov    %rax,0xa8(%rsp)
  422e35:	xor    %eax,%eax
  422e37:	test   %rsi,%rsi
  422e3a:	mov    %r8,0x18(%rsp)
  422e3f:	mov    0x100(%rsp),%rbx
  422e47:	mov    0x108(%rsp),%ebp
  422e4e:	je     4236cd <X509_get0_pubkey_bitstr@plt+0xccfd>
  422e54:	test   %rdx,%rdx
  422e57:	mov    %rdx,%r12
  422e5a:	je     4236ae <X509_get0_pubkey_bitstr@plt+0xccde>
  422e60:	test   %edi,%edi
  422e62:	mov    %rcx,%r14
  422e65:	mov    %r9d,%r13d
  422e68:	jne    422f28 <X509_get0_pubkey_bitstr@plt+0xc558>
  422e6e:	test   %ebp,%ebp
  422e70:	je     422ebf <X509_get0_pubkey_bitstr@plt+0xc4ef>
  422e72:	cmpq   $0x0,(%rdx)
  422e76:	je     423591 <X509_get0_pubkey_bitstr@plt+0xcbc1>
  422e7c:	mov    (%rsi),%rdi
  422e7f:	mov    $0x2,%esi
  422e84:	callq  415560 <RAND_pseudo_bytes@plt>
  422e89:	test   %eax,%eax
  422e8b:	js     4235bc <X509_get0_pubkey_bitstr@plt+0xcbec>
  422e91:	mov    (%r15),%rax
  422e94:	lea    0x3d845(%rip),%rcx        # 4606e0 <_fini+0x31dc>
  422e9b:	movzbl (%rax),%edx
  422e9e:	and    $0x3f,%edx
  422ea1:	movzbl (%rcx,%rdx,1),%edx
  422ea5:	mov    %dl,(%rax)
  422ea7:	mov    (%r15),%rax
  422eaa:	movzbl 0x1(%rax),%edx
  422eae:	and    $0x3f,%edx
  422eb1:	movzbl (%rcx,%rdx,1),%edx
  422eb5:	mov    %dl,0x1(%rax)
  422eb8:	mov    (%r15),%rax
  422ebb:	movb   $0x0,0x2(%rax)
  422ebf:	mov    0x110(%rsp),%eax
  422ec6:	or     0x118(%rsp),%eax
  422ecd:	je     422f28 <X509_get0_pubkey_bitstr@plt+0xc558>
  422ecf:	cmpq   $0x0,(%r12)
  422ed4:	je     4235c3 <X509_get0_pubkey_bitstr@plt+0xcbf3>
  422eda:	mov    (%r15),%rdi
  422edd:	mov    $0x8,%esi
  422ee2:	callq  415560 <RAND_pseudo_bytes@plt>
  422ee7:	test   %eax,%eax
  422ee9:	js     4235bc <X509_get0_pubkey_bitstr@plt+0xcbec>
  422eef:	lea    0x3d7ea(%rip),%rcx        # 4606e0 <_fini+0x31dc>
  422ef6:	xor    %eax,%eax
  422ef8:	nopl   0x0(%rax,%rax,1)
  422f00:	mov    %rax,%rdx
  422f03:	add    (%r15),%rdx
  422f06:	add    $0x1,%rax
  422f0a:	movzbl (%rdx),%esi
  422f0d:	and    $0x3f,%esi
  422f10:	cmp    $0x8,%rax
  422f14:	movzbl (%rcx,%rsi,1),%esi
  422f18:	mov    %sil,(%rdx)
  422f1b:	jne    422f00 <X509_get0_pubkey_bitstr@plt+0xc530>
  422f1d:	mov    (%r15),%rax
  422f20:	movb   $0x0,0x8(%rax)
  422f24:	nopl   0x0(%rax)
  422f28:	cmpq   $0x0,(%r15)
  422f2c:	je     42368f <X509_get0_pubkey_bitstr@plt+0xccbf>
  422f32:	mov    %r14,%rdi
  422f35:	callq  413470 <strlen@plt>
  422f3a:	cmp    %rbx,%rax
  422f3d:	jbe    422f5e <X509_get0_pubkey_bitstr@plt+0xc58e>
  422f3f:	test   %r13d,%r13d
  422f42:	je     423572 <X509_get0_pubkey_bitstr@plt+0xcba2>
  422f48:	movb   $0x0,(%r14,%rbx,1)
  422f4d:	mov    %r14,%rdi
  422f50:	callq  413470 <strlen@plt>
  422f55:	cmp    %rax,%rbx
  422f58:	jb     42360e <X509_get0_pubkey_bitstr@plt+0xcc3e>
  422f5e:	test   %ebp,%ebp
  422f60:	jne    4234e7 <X509_get0_pubkey_bitstr@plt+0xcb17>
  422f66:	mov    0x110(%rsp),%eax
  422f6d:	or     0x118(%rsp),%eax
  422f74:	je     42350e <X509_get0_pubkey_bitstr@plt+0xcb3e>
  422f7a:	mov    0x110(%rsp),%edi
  422f81:	lea    0x46c03(%rip),%rax        # 469b8b <_fini+0xc687>
  422f88:	lea    0x3d836(%rip),%rbx        # 4607c5 <_fini+0x32c1>
  422f8f:	lea    0x25834a(%rip),%r12        # 67b2e0 <_edata+0x5d8>
  422f96:	mov    (%r15),%rbp
  422f99:	test   %edi,%edi
  422f9b:	mov    %r14,%rdi
  422f9e:	mov    %r12,%r13
  422fa1:	cmovne %rax,%rbx
  422fa5:	callq  413470 <strlen@plt>
  422faa:	mov    $0x29,%ecx
  422faf:	mov    $0x4,%edx
  422fb4:	mov    %rbx,%rsi
  422fb7:	mov    %r12,%rdi
  422fba:	mov    %rax,%r15
  422fbd:	movb   $0x24,0x25831c(%rip)        # 67b2e0 <_edata+0x5d8>
  422fc4:	movb   $0x0,0x258316(%rip)        # 67b2e1 <_edata+0x5d9>
  422fcb:	callq  413630 <__strncat_chk@plt>
  422fd0:	lea    0x3d7c9(%rip),%rsi        # 4607a0 <_fini+0x329c>
  422fd7:	mov    $0x29,%edx
  422fdc:	mov    %r12,%rdi
  422fdf:	callq  414820 <__strcat_chk@plt>
  422fe4:	mov    $0x8,%edx
  422fe9:	mov    $0x29,%ecx
  422fee:	mov    %rbp,%rsi
  422ff1:	mov    %r12,%rdi
  422ff4:	callq  413630 <__strncat_chk@plt>
  422ff9:	mov    %r12,%rdx
  422ffc:	mov    (%rdx),%ecx
  422ffe:	add    $0x4,%rdx
  423002:	lea    -0x1010101(%rcx),%eax
  423008:	not    %ecx
  42300a:	and    %ecx,%eax
  42300c:	and    $0x80808080,%eax
  423011:	je     422ffc <X509_get0_pubkey_bitstr@plt+0xc62c>
  423013:	mov    %eax,%ecx
  423015:	shr    $0x10,%ecx
  423018:	test   $0x8080,%eax
  42301d:	cmove  %ecx,%eax
  423020:	lea    0x2(%rdx),%rcx
  423024:	cmove  %rcx,%rdx
  423028:	add    %al,%al
  42302a:	sbb    $0x3,%rdx
  42302e:	sub    %r12,%rdx
  423031:	cmp    $0xe,%rdx
  423035:	ja     42366b <X509_get0_pubkey_bitstr@plt+0xcc9b>
  42303b:	mov    %rbx,%rdi
  42303e:	callq  413470 <strlen@plt>
  423043:	mov    %rax,%rbp
  423046:	lea    0x2(%r13,%rax,1),%rax
  42304b:	mov    %rax,%rdi
  42304e:	mov    %rax,(%rsp)
  423052:	callq  413470 <strlen@plt>
  423057:	cmp    $0x8,%rax
  42305b:	mov    %rax,0x8(%rsp)
  423060:	ja     42364c <X509_get0_pubkey_bitstr@plt+0xcc7c>
  423066:	lea    0x20(%rsp),%r12
  42306b:	mov    %r12,%rdi
  42306e:	mov    %r12,0x10(%rsp)
  423073:	callq  4160a0 <EVP_MD_CTX_init@plt>
  423078:	callq  412f50 <EVP_md5@plt>
  42307d:	xor    %edx,%edx
  42307f:	mov    %r12,%rdi
  423082:	mov    %rax,%rsi
  423085:	callq  416800 <EVP_DigestInit_ex@plt>
  42308a:	mov    %r12,%rdi
  42308d:	mov    %r15,%rdx
  423090:	mov    %r14,%rsi
  423093:	callq  415f30 <EVP_DigestUpdate@plt>
  423098:	lea    0x3d701(%rip),%rsi        # 4607a0 <_fini+0x329c>
  42309f:	mov    %r12,%rdi
  4230a2:	mov    $0x1,%edx
  4230a7:	callq  415f30 <EVP_DigestUpdate@plt>
  4230ac:	mov    %rbp,%rdx
  4230af:	mov    %rbx,%rsi
  4230b2:	mov    %r12,%rdi
  4230b5:	callq  415f30 <EVP_DigestUpdate@plt>
  4230ba:	lea    0x3d6df(%rip),%rsi        # 4607a0 <_fini+0x329c>
  4230c1:	mov    %r12,%rdi
  4230c4:	mov    $0x1,%edx
  4230c9:	mov    %r12,%rbx
  4230cc:	lea    0x50(%rsp),%rbp
  4230d1:	callq  415f30 <EVP_DigestUpdate@plt>
  4230d6:	mov    (%rsp),%r12
  4230da:	mov    0x8(%rsp),%r13
  4230df:	mov    %rbx,%rdi
  4230e2:	mov    %r12,%rsi
  4230e5:	mov    %r13,%rdx
  4230e8:	callq  415f30 <EVP_DigestUpdate@plt>
  4230ed:	mov    %rbp,%rdi
  4230f0:	callq  4160a0 <EVP_MD_CTX_init@plt>
  4230f5:	callq  412f50 <EVP_md5@plt>
  4230fa:	xor    %edx,%edx
  4230fc:	mov    %rax,%rsi
  4230ff:	mov    %rbp,%rdi
  423102:	callq  416800 <EVP_DigestInit_ex@plt>
  423107:	mov    %r15,%rdx
  42310a:	mov    %r14,%rsi
  42310d:	mov    %rbp,%rdi
  423110:	callq  415f30 <EVP_DigestUpdate@plt>
  423115:	mov    %r12,%rsi
  423118:	mov    %r13,%rdx
  42311b:	mov    %rbp,%rdi
  42311e:	lea    0x80(%rsp),%r12
  423126:	callq  415f30 <EVP_DigestUpdate@plt>
  42312b:	mov    %r15,%rdx
  42312e:	mov    %r14,%rsi
  423131:	mov    %rbp,%rdi
  423134:	callq  415f30 <EVP_DigestUpdate@plt>
  423139:	xor    %edx,%edx
  42313b:	mov    %r12,%rsi
  42313e:	mov    %rbp,%rdi
  423141:	callq  412b40 <EVP_DigestFinal_ex@plt>
  423146:	cmp    $0x10,%r15d
  42314a:	mov    %r15d,%eax
  42314d:	jbe    42317f <X509_get0_pubkey_bitstr@plt+0xc7af>
  42314f:	mov    %r15d,%ebx
  423152:	nopw   0x0(%rax,%rax,1)
  423158:	mov    0x10(%rsp),%rdi
  42315d:	mov    $0x10,%edx
  423162:	mov    %r12,%rsi
  423165:	sub    $0x10,%ebx
  423168:	callq  415f30 <EVP_DigestUpdate@plt>
  42316d:	cmp    $0x10,%ebx
  423170:	ja     423158 <X509_get0_pubkey_bitstr@plt+0xc788>
  423172:	lea    -0x11(%r15),%edx
  423176:	lea    -0x10(%r15),%eax
  42317a:	and    $0xfffffff0,%edx
  42317d:	sub    %edx,%eax
  42317f:	mov    0x10(%rsp),%rdi
  423184:	mov    %eax,%edx
  423186:	mov    %r12,%rsi
  423189:	mov    %r15d,%r13d
  42318c:	lea    0x3d50d(%rip),%rbx        # 4606a0 <_fini+0x319c>
  423193:	callq  415f30 <EVP_DigestUpdate@plt>
  423198:	test   %r15d,%r15d
  42319b:	je     4231bf <X509_get0_pubkey_bitstr@plt+0xc7ef>
  42319d:	nopl   (%rax)
  4231a0:	mov    0x10(%rsp),%rdi
  4231a5:	test   $0x1,%r13b
  4231a9:	mov    %rbx,%rsi
  4231ac:	cmove  %r14,%rsi
  4231b0:	mov    $0x1,%edx
  4231b5:	callq  415f30 <EVP_DigestUpdate@plt>
  4231ba:	sar    %r13d
  4231bd:	jne    4231a0 <X509_get0_pubkey_bitstr@plt+0xc7d0>
  4231bf:	mov    0x10(%rsp),%rdi
  4231c4:	xor    %edx,%edx
  4231c6:	mov    %r12,%rsi
  4231c9:	xor    %ebx,%ebx
  4231cb:	callq  412b40 <EVP_DigestFinal_ex@plt>
  4231d0:	jmp    423248 <X509_get0_pubkey_bitstr@plt+0xc878>
  4231d2:	nopw   0x0(%rax,%rax,1)
  4231d8:	mov    $0x10,%edx
  4231dd:	mov    %r12,%rsi
  4231e0:	mov    %rbp,%rdi
  4231e3:	callq  415f30 <EVP_DigestUpdate@plt>
  4231e8:	mov    $0xaaaaaaab,%eax
  4231ed:	mul    %ebx
  4231ef:	shr    %edx
  4231f1:	lea    (%rdx,%rdx,2),%eax
  4231f4:	cmp    %eax,%ebx
  4231f6:	jne    4232a0 <X509_get0_pubkey_bitstr@plt+0xc8d0>
  4231fc:	mov    %ebx,%eax
  4231fe:	mov    $0x24924925,%edx
  423203:	mul    %edx
  423205:	mov    %ebx,%eax
  423207:	sub    %edx,%eax
  423209:	shr    %eax
  42320b:	add    %eax,%edx
  42320d:	shr    $0x2,%edx
  423210:	lea    0x0(,%rdx,8),%eax
  423217:	sub    %edx,%eax
  423219:	cmp    %eax,%ebx
  42321b:	jne    423288 <X509_get0_pubkey_bitstr@plt+0xc8b8>
  42321d:	test   %r13d,%r13d
  423220:	jne    423278 <X509_get0_pubkey_bitstr@plt+0xc8a8>
  423222:	mov    %r15,%rdx
  423225:	mov    %r14,%rsi
  423228:	mov    %rbp,%rdi
  42322b:	add    $0x1,%ebx
  42322e:	callq  415f30 <EVP_DigestUpdate@plt>
  423233:	xor    %edx,%edx
  423235:	mov    %r12,%rsi
  423238:	mov    %rbp,%rdi
  42323b:	callq  412b40 <EVP_DigestFinal_ex@plt>
  423240:	cmp    $0x3e8,%ebx
  423246:	je     4232c0 <X509_get0_pubkey_bitstr@plt+0xc8f0>
  423248:	callq  412f50 <EVP_md5@plt>
  42324d:	mov    %ebx,%r13d
  423250:	xor    %edx,%edx
  423252:	mov    %rax,%rsi
  423255:	mov    %rbp,%rdi
  423258:	callq  416800 <EVP_DigestInit_ex@plt>
  42325d:	and    $0x1,%r13d
  423261:	je     4231d8 <X509_get0_pubkey_bitstr@plt+0xc808>
  423267:	mov    %r15,%rdx
  42326a:	mov    %r14,%rsi
  42326d:	jmpq   4231e0 <X509_get0_pubkey_bitstr@plt+0xc810>
  423272:	nopw   0x0(%rax,%rax,1)
  423278:	mov    $0x10,%edx
  42327d:	mov    %r12,%rsi
  423280:	jmp    423228 <X509_get0_pubkey_bitstr@plt+0xc858>
  423282:	nopw   0x0(%rax,%rax,1)
  423288:	mov    %r15,%rdx
  42328b:	mov    %r14,%rsi
  42328e:	mov    %rbp,%rdi
  423291:	callq  415f30 <EVP_DigestUpdate@plt>
  423296:	jmp    42321d <X509_get0_pubkey_bitstr@plt+0xc84d>
  423298:	nopl   0x0(%rax,%rax,1)
  4232a0:	mov    0x8(%rsp),%rdx
  4232a5:	mov    (%rsp),%rsi
  4232a9:	mov    %rbp,%rdi
  4232ac:	callq  415f30 <EVP_DigestUpdate@plt>
  4232b1:	jmpq   4231fc <X509_get0_pubkey_bitstr@plt+0xc82c>
  4232b6:	nopw   %cs:0x0(%rax,%rax,1)
  4232c0:	mov    %rbp,%rdi
  4232c3:	callq  415110 <EVP_MD_CTX_cleanup@plt>
  4232c8:	lea    0x90(%rsp),%r8
  4232d0:	xor    %edx,%edx
  4232d2:	mov    $0x78787879,%edi
  4232d7:	lea    0xe(%r8),%r9
  4232db:	mov    %r8,%rcx
  4232de:	xchg   %ax,%ax
  4232e0:	movslq %edx,%rax
  4232e3:	lea    0x6(%rdx),%esi
  4232e6:	add    $0x1,%rcx
  4232ea:	movzbl 0x80(%rsp,%rax,1),%eax
  4232f2:	mov    %al,-0x1(%rcx)
  4232f5:	mov    %esi,%eax
  4232f7:	imul   %edi
  4232f9:	mov    %esi,%eax
  4232fb:	sar    $0x1f,%eax
  4232fe:	sar    $0x3,%edx
  423301:	sub    %eax,%edx
  423303:	mov    %edx,%eax
  423305:	shl    $0x4,%eax
  423308:	add    %eax,%edx
  42330a:	sub    %edx,%esi
  42330c:	cmp    %r9,%rcx
  42330f:	mov    %esi,%edx
  423311:	jne    4232e0 <X509_get0_pubkey_bitstr@plt+0xc910>
  423313:	movzbl 0x85(%rsp),%eax
  42331b:	movzbl 0x8b(%rsp),%r9d
  423324:	lea    0x257fb5(%rip),%rsi        # 67b2e0 <_edata+0x5d8>
  42332b:	mov    (%rsp),%r10
  42332f:	add    0x8(%rsp),%r10
  423334:	mov    %rsi,%r13
  423337:	mov    %rsi,%rdx
  42333a:	mov    %al,0x9e(%rsp)
  423341:	mov    %r9b,0x9f(%rsp)
  423349:	mov    (%rdx),%ecx
  42334b:	add    $0x4,%rdx
  42334f:	lea    -0x1010101(%rcx),%eax
  423355:	not    %ecx
  423357:	and    %ecx,%eax
  423359:	and    $0x80808080,%eax
  42335e:	je     423349 <X509_get0_pubkey_bitstr@plt+0xc979>
  423360:	mov    %eax,%ecx
  423362:	shr    $0x10,%ecx
  423365:	test   $0x8080,%eax
  42336a:	cmove  %ecx,%eax
  42336d:	lea    0x2(%rdx),%rcx
  423371:	cmove  %rcx,%rdx
  423375:	add    %al,%al
  423377:	sbb    $0x3,%rdx
  42337b:	sub    %rsi,%rdx
  42337e:	add    %r13,%rdx
  423381:	cmp    %rdx,%r10
  423384:	jne    42362d <X509_get0_pubkey_bitstr@plt+0xcc5d>
  42338a:	lea    0x1(%r10),%rax
  42338e:	lea    0x15(%r10),%rbx
  423392:	lea    0x3d347(%rip),%rcx        # 4606e0 <_fini+0x31dc>
  423399:	movb   $0x24,(%r10)
  42339d:	add    $0x2,%r8
  4233a1:	movzbl (%r8),%esi
  4233a5:	movzbl -0x1(%r8),%edi
  4233aa:	add    $0x4,%rax
  4233ae:	add    $0x3,%r8
  4233b2:	lea    0x3d327(%rip),%r11        # 4606e0 <_fini+0x31dc>
  4233b9:	mov    %rsi,%rdx
  4233bc:	shr    $0x6,%sil
  4233c0:	and    $0x3f,%edx
  4233c3:	movzbl %sil,%esi
  4233c7:	movzbl (%rcx,%rdx,1),%edx
  4233cb:	mov    %dl,-0x4(%rax)
  4233ce:	mov    %edi,%edx
  4233d0:	shr    $0x4,%dil
  4233d4:	and    $0xf,%edx
  4233d7:	movzbl %dil,%edi
  4233db:	shl    $0x2,%edx
  4233de:	or     %esi,%edx
  4233e0:	movzbl -0x5(%r8),%esi
  4233e5:	movslq %edx,%rdx
  4233e8:	movzbl (%rcx,%rdx,1),%edx
  4233ec:	mov    %dl,-0x3(%rax)
  4233ef:	mov    %esi,%edx
  4233f1:	shr    $0x2,%sil
  4233f5:	and    $0x3,%edx
  4233f8:	and    $0x3f,%esi
  4233fb:	shl    $0x4,%edx
  4233fe:	or     %edi,%edx
  423400:	movslq %edx,%rdx
  423403:	movzbl (%rcx,%rdx,1),%edx
  423407:	mov    %dl,-0x2(%rax)
  42340a:	movzbl (%rcx,%rsi,1),%edx
  42340e:	cmp    %rbx,%rax
  423411:	mov    %dl,-0x1(%rax)
  423414:	jne    4233a1 <X509_get0_pubkey_bitstr@plt+0xc9d1>
  423416:	mov    %r9,%rax
  423419:	shr    $0x6,%r9b
  42341d:	lea    0x257ebc(%rip),%rsi        # 67b2e0 <_edata+0x5d8>
  423424:	and    $0x3f,%eax
  423427:	movb   $0x0,0x17(%r10)
  42342c:	movzbl (%r11,%rax,1),%eax
  423431:	mov    %rsi,%rdx
  423434:	mov    %al,0x15(%r10)
  423438:	mov    %r9,%rax
  42343b:	and    $0x3,%eax
  42343e:	movzbl (%r11,%rax,1),%eax
  423443:	mov    %al,0x16(%r10)
  423447:	mov    (%rdx),%ecx
  423449:	add    $0x4,%rdx
  42344d:	lea    -0x1010101(%rcx),%eax
  423453:	not    %ecx
  423455:	and    %ecx,%eax
  423457:	and    $0x80808080,%eax
  42345c:	je     423447 <X509_get0_pubkey_bitstr@plt+0xca77>
  42345e:	mov    %eax,%ecx
  423460:	shr    $0x10,%ecx
  423463:	test   $0x8080,%eax
  423468:	cmove  %ecx,%eax
  42346b:	lea    0x2(%rdx),%rcx
  42346f:	cmove  %rcx,%rdx
  423473:	add    %al,%al
  423475:	sbb    $0x3,%rdx
  423479:	sub    %rsi,%rdx
  42347c:	cmp    $0x28,%rdx
  423480:	ja     4235ef <X509_get0_pubkey_bitstr@plt+0xcc1f>
  423486:	mov    0x10(%rsp),%rdi
  42348b:	callq  415110 <EVP_MD_CTX_cleanup@plt>
  423490:	lea    0x257e49(%rip),%rdx        # 67b2e0 <_edata+0x5d8>
  423497:	mov    0xf0(%rsp),%esi
  42349e:	test   %esi,%esi
  4234a0:	jne    423530 <X509_get0_pubkey_bitstr@plt+0xcb60>
  4234a6:	mov    0x18(%rsp),%rdi
  4234ab:	lea    0x3d307(%rip),%rsi        # 4607b9 <_fini+0x32b5>
  4234b2:	xor    %eax,%eax
  4234b4:	callq  413c40 <BIO_printf@plt>
  4234b9:	mov    $0x1,%eax
  4234be:	mov    0xa8(%rsp),%rcx
  4234c6:	xor    %fs:0x28,%rcx
  4234cf:	jne    42368a <X509_get0_pubkey_bitstr@plt+0xccba>
  4234d5:	add    $0xb8,%rsp
  4234dc:	pop    %rbx
  4234dd:	pop    %rbp
  4234de:	pop    %r12
  4234e0:	pop    %r13
  4234e2:	pop    %r14
  4234e4:	pop    %r15
  4234e6:	retq   
  4234e7:	mov    (%r15),%rsi
  4234ea:	mov    %r14,%rdi
  4234ed:	callq  4158c0 <DES_crypt@plt>
  4234f2:	mov    %rax,%rdx
  4234f5:	mov    0x110(%rsp),%eax
  4234fc:	or     0x118(%rsp),%eax
  423503:	jne    422f7a <X509_get0_pubkey_bitstr@plt+0xc5aa>
  423509:	test   %rdx,%rdx
  42350c:	jne    423497 <X509_get0_pubkey_bitstr@plt+0xcac7>
  42350e:	lea    0x3d196(%rip),%rcx        # 4606ab <_fini+0x31a7>
  423515:	lea    0x3d204(%rip),%rsi        # 460720 <_fini+0x321c>
  42351c:	lea    0x3d27f(%rip),%rdi        # 4607a2 <_fini+0x329e>
  423523:	mov    $0x1ec,%edx
  423528:	callq  413d40 <__assert_fail@plt>
  42352d:	nopl   (%rax)
  423530:	mov    0xf8(%rsp),%ecx
  423537:	test   %ecx,%ecx
  423539:	je     42356a <X509_get0_pubkey_bitstr@plt+0xcb9a>
  42353b:	mov    0xf8(%rsp),%eax
  423542:	test   %eax,%eax
  423544:	je     4234a6 <X509_get0_pubkey_bitstr@plt+0xcad6>
  42354a:	mov    %r14,%rcx
  42354d:	mov    0x18(%rsp),%rdi
  423552:	lea    0x3d25d(%rip),%rsi        # 4607b6 <_fini+0x32b2>
  423559:	xor    %eax,%eax
  42355b:	callq  413c40 <BIO_printf@plt>
  423560:	mov    $0x1,%eax
  423565:	jmpq   4234be <X509_get0_pubkey_bitstr@plt+0xcaee>
  42356a:	mov    %rdx,%rcx
  42356d:	mov    %r14,%rdx
  423570:	jmp    42354d <X509_get0_pubkey_bitstr@plt+0xcb7d>
  423572:	lea    0x2577c7(%rip),%rax        # 67ad40 <_edata+0x38>
  423579:	lea    0x3d2c8(%rip),%rsi        # 460848 <_fini+0x3344>
  423580:	mov    %ebx,%edx
  423582:	mov    (%rax),%rdi
  423585:	xor    %eax,%eax
  423587:	callq  413c40 <BIO_printf@plt>
  42358c:	jmpq   422f48 <X509_get0_pubkey_bitstr@plt+0xc578>
  423591:	lea    0x3d188(%rip),%rsi        # 460720 <_fini+0x321c>
  423598:	mov    $0x3,%edi
  42359d:	mov    $0x1b2,%edx
  4235a2:	callq  413d50 <CRYPTO_malloc@plt>
  4235a7:	mov    %rax,(%r12)
  4235ab:	mov    %rax,(%r15)
  4235ae:	mov    %rax,%rdi
  4235b1:	cmpq   $0x0,(%r12)
  4235b6:	jne    422e7f <X509_get0_pubkey_bitstr@plt+0xc4af>
  4235bc:	xor    %eax,%eax
  4235be:	jmpq   4234be <X509_get0_pubkey_bitstr@plt+0xcaee>
  4235c3:	lea    0x3d156(%rip),%rsi        # 460720 <_fini+0x321c>
  4235ca:	mov    $0x1c9,%edx
  4235cf:	mov    $0x9,%edi
  4235d4:	callq  413d50 <CRYPTO_malloc@plt>
  4235d9:	mov    %rax,(%r12)
  4235dd:	mov    %rax,(%r15)
  4235e0:	cmpq   $0x0,(%r12)
  4235e5:	je     4235bc <X509_get0_pubkey_bitstr@plt+0xcbec>
  4235e7:	mov    %rax,%rdi
  4235ea:	jmpq   422edd <X509_get0_pubkey_bitstr@plt+0xc50d>
  4235ef:	lea    0x3d0ac(%rip),%rcx        # 4606a2 <_fini+0x319e>
  4235f6:	lea    0x3d123(%rip),%rsi        # 460720 <_fini+0x321c>
  4235fd:	lea    0x3d29c(%rip),%rdi        # 4608a0 <_fini+0x339c>
  423604:	mov    $0x198,%edx
  423609:	callq  413d40 <__assert_fail@plt>
  42360e:	lea    0x3d096(%rip),%rcx        # 4606ab <_fini+0x31a7>
  423615:	lea    0x3d104(%rip),%rsi        # 460720 <_fini+0x321c>
  42361c:	lea    0x3d13a(%rip),%rdi        # 46075d <_fini+0x3259>
  423623:	mov    $0x1e1,%edx
  423628:	callq  413d40 <__assert_fail@plt>
  42362d:	lea    0x3d06e(%rip),%rcx        # 4606a2 <_fini+0x319e>
  423634:	lea    0x3d0e5(%rip),%rsi        # 460720 <_fini+0x321c>
  42363b:	lea    0x3d236(%rip),%rdi        # 460878 <_fini+0x3374>
  423642:	mov    $0x187,%edx
  423647:	callq  413d40 <__assert_fail@plt>
  42364c:	lea    0x3d04f(%rip),%rcx        # 4606a2 <_fini+0x319e>
  423653:	lea    0x3d0c6(%rip),%rsi        # 460720 <_fini+0x321c>
  42365a:	lea    0x3d131(%rip),%rdi        # 460792 <_fini+0x328e>
  423661:	mov    $0x14a,%edx
  423666:	callq  413d40 <__assert_fail@plt>
  42366b:	lea    0x3d030(%rip),%rcx        # 4606a2 <_fini+0x319e>
  423672:	lea    0x3d0a7(%rip),%rsi        # 460720 <_fini+0x321c>
  423679:	lea    0x3d0f9(%rip),%rdi        # 460779 <_fini+0x3275>
  423680:	mov    $0x147,%edx
  423685:	callq  413d40 <__assert_fail@plt>
  42368a:	callq  414c30 <__stack_chk_fail@plt>
  42368f:	lea    0x3d015(%rip),%rcx        # 4606ab <_fini+0x31a7>
  423696:	lea    0x3d083(%rip),%rsi        # 460720 <_fini+0x321c>
  42369d:	lea    0x3d0a2(%rip),%rdi        # 460746 <_fini+0x3242>
  4236a4:	mov    $0x1d7,%edx
  4236a9:	callq  413d40 <__assert_fail@plt>
  4236ae:	lea    0x3cff6(%rip),%rcx        # 4606ab <_fini+0x31a7>
  4236b5:	lea    0x3d064(%rip),%rsi        # 460720 <_fini+0x321c>
  4236bc:	lea    0x3d066(%rip),%rdi        # 460729 <_fini+0x3225>
  4236c3:	mov    $0x1a8,%edx
  4236c8:	callq  413d40 <__assert_fail@plt>
  4236cd:	lea    0x3cfd7(%rip),%rcx        # 4606ab <_fini+0x31a7>
  4236d4:	lea    0x3d045(%rip),%rsi        # 460720 <_fini+0x321c>
  4236db:	lea    0x3d065(%rip),%rdi        # 460747 <_fini+0x3243>
  4236e2:	mov    $0x1a7,%edx
  4236e7:	callq  413d40 <__assert_fail@plt>
  4236ec:	nopl   0x0(%rax)
  4236f0:	push   %r15
  4236f2:	mov    $0xd,%edi
  4236f7:	push   %r14
  4236f9:	push   %r13
  4236fb:	push   %r12
  4236fd:	push   %rbp
  4236fe:	push   %rbx
  4236ff:	mov    %rsi,%rbx
  423702:	mov    $0x1,%esi
  423707:	sub    $0x2098,%rsp
  42370e:	mov    %fs:0x28,%rax
  423717:	mov    %rax,0x2088(%rsp)
  42371f:	xor    %eax,%eax
  423721:	movq   $0x0,0x70(%rsp)
  42372a:	movq   $0x0,0x78(%rsp)
  423733:	callq  414ee0 <signal@plt>
  423738:	lea    0x257601(%rip),%rax        # 67ad40 <_edata+0x38>
  42373f:	mov    (%rax),%rdi
  423742:	test   %rdi,%rdi
  423745:	je     423e68 <X509_get0_pubkey_bitstr@plt+0xd498>
  42374b:	xor    %esi,%esi
  42374d:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  423752:	test   %eax,%eax
  423754:	je     423888 <X509_get0_pubkey_bitstr@plt+0xceb8>
  42375a:	callq  4152b0 <BIO_s_file@plt>
  42375f:	mov    %rax,%rdi
  423762:	callq  414a20 <BIO_new@plt>
  423767:	test   %rax,%rax
  42376a:	mov    %rax,%r15
  42376d:	je     423888 <X509_get0_pubkey_bitstr@plt+0xceb8>
  423773:	mov    0x25273e(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  42377a:	mov    $0x10,%edx
  42377f:	mov    $0x6a,%esi
  423784:	mov    %r15,%rdi
  423787:	xor    %r14d,%r14d
  42378a:	mov    $0x6,%r13d
  423790:	mov    (%rax),%rcx
  423793:	callq  412af0 <BIO_ctrl@plt>
  423798:	movl   $0x0,0x30(%rsp)
  4237a0:	movl   $0x0,0x48(%rsp)
  4237a8:	xor    %ecx,%ecx
  4237aa:	movl   $0x0,0x54(%rsp)
  4237b2:	movl   $0x0,0x68(%rsp)
  4237ba:	xor    %eax,%eax
  4237bc:	movl   $0x0,0x50(%rsp)
  4237c4:	movl   $0x0,0x4c(%rsp)
  4237cc:	xor    %r9d,%r9d
  4237cf:	movl   $0x0,0x60(%rsp)
  4237d7:	movq   $0x0,0x38(%rsp)
  4237e0:	mov    $0x7,%r11d
  4237e6:	movl   $0x0,0x6c(%rsp)
  4237ee:	movl   $0x0,0x58(%rsp)
  4237f6:	movq   $0x0,0x40(%rsp)
  4237ff:	jmp    423843 <X509_get0_pubkey_bitstr@plt+0xce73>
  423801:	nopl   0x0(%rax)
  423808:	movzbl (%rax),%ebp
  42380b:	movzbl %bpl,%r12d
  42380f:	sub    $0x2d,%r12d
  423813:	jne    423910 <X509_get0_pubkey_bitstr@plt+0xcf40>
  423819:	cmpb   $0x31,0x1(%rax)
  42381d:	jne    423910 <X509_get0_pubkey_bitstr@plt+0xcf40>
  423823:	cmpb   $0x0,0x2(%rax)
  423827:	jne    423910 <X509_get0_pubkey_bitstr@plt+0xcf40>
  42382d:	movl   $0x1,0x48(%rsp)
  423835:	xor    %ecx,%ecx
  423837:	xor    %eax,%eax
  423839:	nopl   0x0(%rax)
  423840:	mov    %edx,%r9d
  423843:	or     %eax,%ecx
  423845:	jne    423988 <X509_get0_pubkey_bitstr@plt+0xcfb8>
  42384b:	lea    0x1(%r9),%edx
  42384f:	movslq %edx,%r8
  423852:	shl    $0x3,%r8
  423856:	lea    (%rbx,%r8,1),%r10
  42385a:	mov    (%r10),%rax
  42385d:	test   %rax,%rax
  423860:	je     423988 <X509_get0_pubkey_bitstr@plt+0xcfb8>
  423866:	lea    0x3cf50(%rip),%rdi        # 4607bd <_fini+0x32b9>
  42386d:	mov    %rax,%rsi
  423870:	mov    %r11,%rcx
  423873:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  423875:	jne    423808 <X509_get0_pubkey_bitstr@plt+0xce38>
  423877:	mov    $0x1,%r14d
  42387d:	xor    %ecx,%ecx
  42387f:	xor    %eax,%eax
  423881:	jmp    423840 <X509_get0_pubkey_bitstr@plt+0xce70>
  423883:	nopl   0x0(%rax,%rax,1)
  423888:	xor    %r15d,%r15d
  42388b:	xor    %ebp,%ebp
  42388d:	xor    %ebx,%ebx
  42388f:	mov    $0x1,%r12d
  423895:	lea    0x2574a4(%rip),%rax        # 67ad40 <_edata+0x38>
  42389c:	mov    (%rax),%rdi
  42389f:	callq  413f40 <ERR_print_errors@plt>
  4238a4:	mov    0x78(%rsp),%rdi
  4238a9:	test   %rdi,%rdi
  4238ac:	je     4238b3 <X509_get0_pubkey_bitstr@plt+0xcee3>
  4238ae:	callq  415020 <CRYPTO_free@plt>
  4238b3:	test   %rbx,%rbx
  4238b6:	je     4238c0 <X509_get0_pubkey_bitstr@plt+0xcef0>
  4238b8:	mov    %rbx,%rdi
  4238bb:	callq  415020 <CRYPTO_free@plt>
  4238c0:	test   %rbp,%rbp
  4238c3:	je     4238cd <X509_get0_pubkey_bitstr@plt+0xcefd>
  4238c5:	mov    %rbp,%rdi
  4238c8:	callq  413960 <BIO_free@plt>
  4238cd:	test   %r15,%r15
  4238d0:	je     4238da <X509_get0_pubkey_bitstr@plt+0xcf0a>
  4238d2:	mov    %r15,%rdi
  4238d5:	callq  416570 <BIO_free_all@plt>
  4238da:	mov    0x2088(%rsp),%rbx
  4238e2:	xor    %fs:0x28,%rbx
  4238eb:	mov    %r12d,%eax
  4238ee:	jne    424034 <X509_get0_pubkey_bitstr@plt+0xd664>
  4238f4:	add    $0x2098,%rsp
  4238fb:	pop    %rbx
  4238fc:	pop    %rbp
  4238fd:	pop    %r12
  4238ff:	pop    %r13
  423901:	pop    %r14
  423903:	pop    %r15
  423905:	retq   
  423906:	nopw   %cs:0x0(%rax,%rax,1)
  423910:	lea    0x3cead(%rip),%rdi        # 4607c4 <_fini+0x32c0>
  423917:	mov    %rax,%rsi
  42391a:	mov    %r13,%rcx
  42391d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42391f:	je     423970 <X509_get0_pubkey_bitstr@plt+0xcfa0>
  423921:	lea    0x3c87b(%rip),%rdi        # 4601a3 <_fini+0x2c9f>
  423928:	mov    %rax,%rsi
  42392b:	mov    %r13,%rcx
  42392e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  423930:	jne    423ae8 <X509_get0_pubkey_bitstr@plt+0xd118>
  423936:	mov    0x8(%rbx,%r8,1),%rsi
  42393b:	xor    %ecx,%ecx
  42393d:	mov    $0x1,%eax
  423942:	test   %rsi,%rsi
  423945:	je     423840 <X509_get0_pubkey_bitstr@plt+0xce70>
  42394b:	cmpq   $0x0,0x70(%rsp)
  423951:	jne    423840 <X509_get0_pubkey_bitstr@plt+0xce70>
  423957:	lea    0x2(%r9),%edx
  42395b:	mov    %rsi,0x70(%rsp)
  423960:	movl   $0x1,0x4c(%rsp)
  423968:	xor    %al,%al
  42396a:	jmpq   423840 <X509_get0_pubkey_bitstr@plt+0xce70>
  42396f:	nop
  423970:	movl   $0x1,0x30(%rsp)
  423978:	xor    %ecx,%ecx
  42397a:	xor    %eax,%eax
  42397c:	jmpq   423840 <X509_get0_pubkey_bitstr@plt+0xce70>
  423981:	nopl   0x0(%rax)
  423988:	mov    0x30(%rsp),%esi
  42398c:	mov    0x48(%rsp),%ecx
  423990:	mov    %esi,%ebx
  423992:	or     %ecx,%ebx
  423994:	mov    %ebx,%edx
  423996:	or     %r14d,%edx
  423999:	mov    $0x1,%edx
  42399e:	cmove  %edx,%r14d
  4239a2:	mov    %ecx,%edx
  4239a4:	add    %r14d,%edx
  4239a7:	add    %esi,%edx
  4239a9:	cmp    $0x1,%edx
  4239ac:	jle    423b80 <X509_get0_pubkey_bitstr@plt+0xd1b0>
  4239b2:	lea    0x257387(%rip),%rax        # 67ad40 <_edata+0x38>
  4239b9:	lea    0x3cf08(%rip),%rsi        # 4608c8 <_fini+0x33c4>
  4239c0:	xor    %ebp,%ebp
  4239c2:	xor    %ebx,%ebx
  4239c4:	mov    $0x1,%r12d
  4239ca:	mov    (%rax),%rdi
  4239cd:	xor    %eax,%eax
  4239cf:	callq  413c40 <BIO_printf@plt>
  4239d4:	lea    0x257365(%rip),%rax        # 67ad40 <_edata+0x38>
  4239db:	lea    0x3a373(%rip),%rsi        # 45dd55 <_fini+0x851>
  4239e2:	mov    (%rax),%rdi
  4239e5:	xor    %eax,%eax
  4239e7:	callq  413c40 <BIO_printf@plt>
  4239ec:	lea    0x25734d(%rip),%rax        # 67ad40 <_edata+0x38>
  4239f3:	lea    0x3cef6(%rip),%rsi        # 4608f0 <_fini+0x33ec>
  4239fa:	mov    (%rax),%rdi
  4239fd:	xor    %eax,%eax
  4239ff:	callq  413c40 <BIO_printf@plt>
  423a04:	lea    0x257335(%rip),%rax        # 67ad40 <_edata+0x38>
  423a0b:	lea    0x3cf1e(%rip),%rsi        # 460930 <_fini+0x342c>
  423a12:	mov    (%rax),%rdi
  423a15:	xor    %eax,%eax
  423a17:	callq  413c40 <BIO_printf@plt>
  423a1c:	lea    0x25731d(%rip),%rax        # 67ad40 <_edata+0x38>
  423a23:	lea    0x3cf3e(%rip),%rsi        # 460968 <_fini+0x3464>
  423a2a:	mov    (%rax),%rdi
  423a2d:	xor    %eax,%eax
  423a2f:	callq  413c40 <BIO_printf@plt>
  423a34:	lea    0x257305(%rip),%rax        # 67ad40 <_edata+0x38>
  423a3b:	lea    0x3cf6e(%rip),%rsi        # 4609b0 <_fini+0x34ac>
  423a42:	mov    (%rax),%rdi
  423a45:	xor    %eax,%eax
  423a47:	callq  413c40 <BIO_printf@plt>
  423a4c:	lea    0x2572ed(%rip),%rax        # 67ad40 <_edata+0x38>
  423a53:	lea    0x3cf7e(%rip),%rsi        # 4609d8 <_fini+0x34d4>
  423a5a:	mov    (%rax),%rdi
  423a5d:	xor    %eax,%eax
  423a5f:	callq  413c40 <BIO_printf@plt>
  423a64:	lea    0x2572d5(%rip),%rax        # 67ad40 <_edata+0x38>
  423a6b:	lea    0x3cf96(%rip),%rsi        # 460a08 <_fini+0x3504>
  423a72:	mov    (%rax),%rdi
  423a75:	xor    %eax,%eax
  423a77:	callq  413c40 <BIO_printf@plt>
  423a7c:	lea    0x2572bd(%rip),%rax        # 67ad40 <_edata+0x38>
  423a83:	lea    0x3cfae(%rip),%rsi        # 460a38 <_fini+0x3534>
  423a8a:	mov    (%rax),%rdi
  423a8d:	xor    %eax,%eax
  423a8f:	callq  413c40 <BIO_printf@plt>
  423a94:	lea    0x2572a5(%rip),%rax        # 67ad40 <_edata+0x38>
  423a9b:	lea    0x3cfde(%rip),%rsi        # 460a80 <_fini+0x357c>
  423aa2:	mov    (%rax),%rdi
  423aa5:	xor    %eax,%eax
  423aa7:	callq  413c40 <BIO_printf@plt>
  423aac:	lea    0x25728d(%rip),%rax        # 67ad40 <_edata+0x38>
  423ab3:	lea    0x3cfe6(%rip),%rsi        # 460aa0 <_fini+0x359c>
  423aba:	mov    (%rax),%rdi
  423abd:	xor    %eax,%eax
  423abf:	callq  413c40 <BIO_printf@plt>
  423ac4:	lea    0x257275(%rip),%rax        # 67ad40 <_edata+0x38>
  423acb:	lea    0x3cffe(%rip),%rsi        # 460ad0 <_fini+0x35cc>
  423ad2:	mov    (%rax),%rdi
  423ad5:	xor    %eax,%eax
  423ad7:	callq  413c40 <BIO_printf@plt>
  423adc:	jmpq   423895 <X509_get0_pubkey_bitstr@plt+0xcec5>
  423ae1:	nopl   0x0(%rax)
  423ae8:	test   %r12d,%r12d
  423aeb:	jne    423b30 <X509_get0_pubkey_bitstr@plt+0xd160>
  423aed:	cmpb   $0x69,0x1(%rax)
  423af1:	jne    423b30 <X509_get0_pubkey_bitstr@plt+0xd160>
  423af3:	cmpb   $0x6e,0x2(%rax)
  423af7:	jne    423b30 <X509_get0_pubkey_bitstr@plt+0xd160>
  423af9:	cmpb   $0x0,0x3(%rax)
  423afd:	jne    423b30 <X509_get0_pubkey_bitstr@plt+0xd160>
  423aff:	mov    0x8(%rbx,%r8,1),%rax
  423b04:	test   %rax,%rax
  423b07:	je     423b70 <X509_get0_pubkey_bitstr@plt+0xd1a0>
  423b09:	mov    0x60(%rsp),%edi
  423b0d:	test   %edi,%edi
  423b0f:	jne    423b70 <X509_get0_pubkey_bitstr@plt+0xd1a0>
  423b11:	mov    %rax,0x40(%rsp)
  423b16:	lea    0x2(%r9),%edx
  423b1a:	xor    %ecx,%ecx
  423b1c:	xor    %eax,%eax
  423b1e:	movl   $0x1,0x60(%rsp)
  423b26:	jmpq   423840 <X509_get0_pubkey_bitstr@plt+0xce70>
  423b2b:	nopl   0x0(%rax,%rax,1)
  423b30:	lea    0x3cc93(%rip),%rdi        # 4607ca <_fini+0x32c6>
  423b37:	mov    %rax,%rsi
  423b3a:	mov    %r11,%rcx
  423b3d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  423b3f:	jne    423eb8 <X509_get0_pubkey_bitstr@plt+0xd4e8>
  423b45:	mov    0x60(%rsp),%esi
  423b49:	xor    %ecx,%ecx
  423b4b:	test   %esi,%esi
  423b4d:	jne    423b72 <X509_get0_pubkey_bitstr@plt+0xd1a2>
  423b4f:	xor    %eax,%eax
  423b51:	movl   $0x1,0x60(%rsp)
  423b59:	movl   $0x1,0x58(%rsp)
  423b61:	jmpq   423840 <X509_get0_pubkey_bitstr@plt+0xce70>
  423b66:	nopw   %cs:0x0(%rax,%rax,1)
  423b70:	xor    %ecx,%ecx
  423b72:	mov    $0x1,%eax
  423b77:	jmpq   423840 <X509_get0_pubkey_bitstr@plt+0xce70>
  423b7c:	nopl   0x0(%rax)
  423b80:	test   %eax,%eax
  423b82:	jne    4239b2 <X509_get0_pubkey_bitstr@plt+0xcfe2>
  423b88:	cmpq   $0x0,0x40(%rsp)
  423b8e:	movzbl 0x58(%rsp),%r12d
  423b94:	setne  %r13b
  423b98:	test   %r12b,%r12b
  423b9b:	jne    423e10 <X509_get0_pubkey_bitstr@plt+0xd440>
  423ba1:	xor    %ebp,%ebp
  423ba3:	test   %r13b,%r13b
  423ba6:	jne    423e10 <X509_get0_pubkey_bitstr@plt+0xd440>
  423bac:	test   %r14d,%r14d
  423baf:	movq   $0x8,0x40(%rsp)
  423bb8:	jne    423bd5 <X509_get0_pubkey_bitstr@plt+0xd205>
  423bba:	mov    %rbx,%rax
  423bbd:	shl    $0x3f,%rax
  423bc1:	mov    %rax,0x40(%rsp)
  423bc6:	sarq   $0x3f,0x40(%rsp)
  423bcc:	andq   $0x100,0x40(%rsp)
  423bd5:	xor    %r12d,%r12d
  423bd8:	xor    %ebx,%ebx
  423bda:	cmpq   $0x0,0x38(%rsp)
  423be0:	je     423f60 <X509_get0_pubkey_bitstr@plt+0xd590>
  423be6:	test   %rbp,%rbp
  423be9:	sete   %al
  423bec:	cmpq   $0x0,0x38(%rsp)
  423bf2:	sete   %dl
  423bf5:	test   %al,%al
  423bf7:	je     423cb8 <X509_get0_pubkey_bitstr@plt+0xd2e8>
  423bfd:	test   %dl,%dl
  423bff:	jne    423fd0 <X509_get0_pubkey_bitstr@plt+0xd600>
  423c05:	mov    0x38(%rsp),%rax
  423c0a:	mov    (%rax),%rcx
  423c0d:	nopl   (%rax)
  423c10:	test   %rcx,%rcx
  423c13:	je     424077 <X509_get0_pubkey_bitstr@plt+0xd6a7>
  423c19:	lea    0x78(%rsp),%r12
  423c1e:	lea    0x70(%rsp),%rbp
  423c23:	mov    %rbx,0x58(%rsp)
  423c28:	mov    0x40(%rsp),%r13
  423c2d:	mov    0x30(%rsp),%ebx
  423c31:	mov    %rbp,0x30(%rsp)
  423c36:	mov    0x38(%rsp),%rbp
  423c3b:	mov    %r12,0x38(%rsp)
  423c40:	mov    0x68(%rsp),%r12d
  423c45:	jmp    423c5d <X509_get0_pubkey_bitstr@plt+0xd28d>
  423c47:	nopw   0x0(%rax,%rax,1)
  423c50:	mov    0x0(%rbp),%rcx
  423c54:	test   %rcx,%rcx
  423c57:	je     423f51 <X509_get0_pubkey_bitstr@plt+0xd581>
  423c5d:	mov    0x48(%rsp),%eax
  423c61:	mov    0x50(%rsp),%r9d
  423c66:	mov    %r15,%r8
  423c69:	mov    0x38(%rsp),%rdx
  423c6e:	mov    0x30(%rsp),%rsi
  423c73:	add    $0x8,%rbp
  423c77:	mov    0x4c(%rsp),%edi
  423c7b:	mov    %ebx,0x28(%rsp)
  423c7f:	mov    %eax,0x20(%rsp)
  423c83:	mov    0x54(%rsp),%eax
  423c87:	mov    %r14d,0x18(%rsp)
  423c8c:	mov    %r13,0x10(%rsp)
  423c91:	mov    %r12d,(%rsp)
  423c95:	mov    %eax,0x8(%rsp)
  423c99:	callq  422e10 <X509_get0_pubkey_bitstr@plt+0xc440>
  423c9e:	test   %eax,%eax
  423ca0:	jne    423c50 <X509_get0_pubkey_bitstr@plt+0xd280>
  423ca2:	mov    0x58(%rsp),%rbx
  423ca7:	xor    %ebp,%ebp
  423ca9:	mov    $0x1,%r12d
  423caf:	jmpq   423895 <X509_get0_pubkey_bitstr@plt+0xcec5>
  423cb4:	nopl   0x0(%rax)
  423cb8:	test   %rbx,%rbx
  423cbb:	je     424096 <X509_get0_pubkey_bitstr@plt+0xd6c6>
  423cc1:	mov    0x40(%rsp),%eax
  423cc5:	lea    0x80(%rsp),%r12
  423ccd:	add    $0x1,%eax
  423cd0:	mov    %eax,0x38(%rsp)
  423cd4:	lea    0x78(%rsp),%rax
  423cd9:	mov    %rax,0x58(%rsp)
  423cde:	lea    0x70(%rsp),%rax
  423ce3:	mov    %rax,0x60(%rsp)
  423ce8:	nopl   0x0(%rax,%rax,1)
  423cf0:	mov    0x38(%rsp),%edx
  423cf4:	mov    %rbx,%rsi
  423cf7:	mov    %rbp,%rdi
  423cfa:	callq  4138a0 <BIO_gets@plt>
  423cff:	test   %eax,%eax
  423d01:	jle    423e00 <X509_get0_pubkey_bitstr@plt+0xd430>
  423d07:	mov    $0xa,%esi
  423d0c:	mov    %rbx,%rdi
  423d0f:	callq  413220 <strchr@plt>
  423d14:	test   %rax,%rax
  423d17:	je     423d8a <X509_get0_pubkey_bitstr@plt+0xd3ba>
  423d19:	movb   $0x0,(%rax)
  423d1c:	mov    0x30(%rsp),%eax
  423d20:	mov    %r15,%r8
  423d23:	mov    0x50(%rsp),%r9d
  423d28:	mov    0x58(%rsp),%rdx
  423d2d:	mov    %rbx,%rcx
  423d30:	mov    0x60(%rsp),%rsi
  423d35:	mov    0x4c(%rsp),%edi
  423d39:	mov    %eax,0x28(%rsp)
  423d3d:	mov    0x48(%rsp),%eax
  423d41:	mov    %r14d,0x18(%rsp)
  423d46:	mov    %eax,0x20(%rsp)
  423d4a:	mov    0x40(%rsp),%rax
  423d4f:	mov    %rax,0x10(%rsp)
  423d54:	mov    0x54(%rsp),%eax
  423d58:	mov    %eax,0x8(%rsp)
  423d5c:	mov    0x68(%rsp),%eax
  423d60:	mov    %eax,(%rsp)
  423d63:	callq  422e10 <X509_get0_pubkey_bitstr@plt+0xc440>
  423d68:	test   %eax,%eax
  423d6a:	jne    423cf0 <X509_get0_pubkey_bitstr@plt+0xd320>
  423d6c:	jmpq   423ca9 <X509_get0_pubkey_bitstr@plt+0xd2d9>
  423d71:	nopl   0x0(%rax)
  423d78:	mov    $0xa,%esi
  423d7d:	mov    %r12,%rdi
  423d80:	callq  413220 <strchr@plt>
  423d85:	test   %rax,%rax
  423d88:	jne    423da1 <X509_get0_pubkey_bitstr@plt+0xd3d1>
  423d8a:	mov    $0x2000,%edx
  423d8f:	mov    %r12,%rsi
  423d92:	mov    %rbp,%rdi
  423d95:	callq  4138a0 <BIO_gets@plt>
  423d9a:	test   %eax,%eax
  423d9c:	mov    %eax,%r13d
  423d9f:	jg     423d78 <X509_get0_pubkey_bitstr@plt+0xd3a8>
  423da1:	mov    0x30(%rsp),%eax
  423da5:	mov    0x50(%rsp),%r9d
  423daa:	mov    %r15,%r8
  423dad:	mov    0x58(%rsp),%rdx
  423db2:	mov    0x60(%rsp),%rsi
  423db7:	mov    %rbx,%rcx
  423dba:	mov    0x4c(%rsp),%edi
  423dbe:	mov    %r14d,0x18(%rsp)
  423dc3:	mov    %eax,0x28(%rsp)
  423dc7:	mov    0x48(%rsp),%eax
  423dcb:	mov    %eax,0x20(%rsp)
  423dcf:	mov    0x40(%rsp),%rax
  423dd4:	mov    %rax,0x10(%rsp)
  423dd9:	mov    0x54(%rsp),%eax
  423ddd:	mov    %eax,0x8(%rsp)
  423de1:	mov    0x68(%rsp),%eax
  423de5:	mov    %eax,(%rsp)
  423de8:	callq  422e10 <X509_get0_pubkey_bitstr@plt+0xc440>
  423ded:	test   %eax,%eax
  423def:	je     423ca9 <X509_get0_pubkey_bitstr@plt+0xd2d9>
  423df5:	test   %r13d,%r13d
  423df8:	jg     423cf0 <X509_get0_pubkey_bitstr@plt+0xd320>
  423dfe:	xchg   %ax,%ax
  423e00:	xor    %r12d,%r12d
  423e03:	jmpq   423895 <X509_get0_pubkey_bitstr@plt+0xcec5>
  423e08:	nopl   0x0(%rax,%rax,1)
  423e10:	callq  4152b0 <BIO_s_file@plt>
  423e15:	mov    %rax,%rdi
  423e18:	callq  414a20 <BIO_new@plt>
  423e1d:	test   %rax,%rax
  423e20:	mov    %rax,%rbp
  423e23:	je     423e57 <X509_get0_pubkey_bitstr@plt+0xd487>
  423e25:	test   %r13b,%r13b
  423e28:	je     423f9f <X509_get0_pubkey_bitstr@plt+0xd5cf>
  423e2e:	test   %r12b,%r12b
  423e31:	jne    424039 <X509_get0_pubkey_bitstr@plt+0xd669>
  423e37:	mov    0x40(%rsp),%rcx
  423e3c:	mov    $0x3,%edx
  423e41:	mov    $0x6c,%esi
  423e46:	mov    %rax,%rdi
  423e49:	callq  412af0 <BIO_ctrl@plt>
  423e4e:	test   %rax,%rax
  423e51:	jg     423bac <X509_get0_pubkey_bitstr@plt+0xd1dc>
  423e57:	xor    %ebx,%ebx
  423e59:	mov    $0x1,%r12d
  423e5f:	jmpq   423895 <X509_get0_pubkey_bitstr@plt+0xcec5>
  423e64:	nopl   0x0(%rax)
  423e68:	callq  4152b0 <BIO_s_file@plt>
  423e6d:	mov    %rax,%rdi
  423e70:	callq  414a20 <BIO_new@plt>
  423e75:	mov    %rax,%rdi
  423e78:	lea    0x256ec1(%rip),%rax        # 67ad40 <_edata+0x38>
  423e7f:	test   %rdi,%rdi
  423e82:	mov    %rdi,(%rax)
  423e85:	je     42374b <X509_get0_pubkey_bitstr@plt+0xcd7b>
  423e8b:	mov    0x2520ee(%rip),%rax        # 675f80 <_fini+0x218a7c>
  423e92:	mov    $0x10,%edx
  423e97:	mov    $0x6a,%esi
  423e9c:	mov    (%rax),%rcx
  423e9f:	callq  412af0 <BIO_ctrl@plt>
  423ea4:	lea    0x256e95(%rip),%rax        # 67ad40 <_edata+0x38>
  423eab:	mov    (%rax),%rdi
  423eae:	jmpq   42374b <X509_get0_pubkey_bitstr@plt+0xcd7b>
  423eb3:	nopl   0x0(%rax,%rax,1)
  423eb8:	lea    0x3c912(%rip),%rdi        # 4607d1 <_fini+0x32cd>
  423ebf:	mov    %rax,%rsi
  423ec2:	mov    $0xa,%ecx
  423ec7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  423ec9:	je     423f40 <X509_get0_pubkey_bitstr@plt+0xd570>
  423ecb:	lea    0x3c909(%rip),%rdi        # 4607db <_fini+0x32d7>
  423ed2:	mov    %rax,%rsi
  423ed5:	mov    %r11,%rcx
  423ed8:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  423eda:	je     423f8e <X509_get0_pubkey_bitstr@plt+0xd5be>
  423ee0:	lea    0x3c8fb(%rip),%rdi        # 4607e2 <_fini+0x32de>
  423ee7:	mov    %rax,%rsi
  423eea:	mov    %r11,%rcx
  423eed:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  423eef:	je     424012 <X509_get0_pubkey_bitstr@plt+0xd642>
  423ef5:	lea    0x3c8ed(%rip),%rdi        # 4607e9 <_fini+0x32e5>
  423efc:	mov    %rax,%rsi
  423eff:	mov    $0x9,%ecx
  423f04:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  423f06:	je     424023 <X509_get0_pubkey_bitstr@plt+0xd653>
  423f0c:	cmp    $0x2d,%bpl
  423f10:	je     423b70 <X509_get0_pubkey_bitstr@plt+0xd1a0>
  423f16:	mov    0x60(%rsp),%ecx
  423f1a:	test   %ecx,%ecx
  423f1c:	jne    423b70 <X509_get0_pubkey_bitstr@plt+0xd1a0>
  423f22:	mov    %r10,0x38(%rsp)
  423f27:	mov    $0x1,%ecx
  423f2c:	xor    %eax,%eax
  423f2e:	movl   $0x1,0x60(%rsp)
  423f36:	jmpq   423840 <X509_get0_pubkey_bitstr@plt+0xce70>
  423f3b:	nopl   0x0(%rax,%rax,1)
  423f40:	xor    %ecx,%ecx
  423f42:	xor    %eax,%eax
  423f44:	movl   $0x1,0x6c(%rsp)
  423f4c:	jmpq   423840 <X509_get0_pubkey_bitstr@plt+0xce70>
  423f51:	mov    0x58(%rsp),%rbx
  423f56:	xor    %ebp,%ebp
  423f58:	xor    %r12d,%r12d
  423f5b:	jmpq   423895 <X509_get0_pubkey_bitstr@plt+0xcec5>
  423f60:	mov    0x40(%rsp),%rax
  423f65:	lea    0x3c7b4(%rip),%rsi        # 460720 <_fini+0x321c>
  423f6c:	mov    $0xdc,%edx
  423f71:	lea    0x2(%rax),%r12
  423f75:	mov    %r12d,%edi
  423f78:	callq  413d50 <CRYPTO_malloc@plt>
  423f7d:	test   %rax,%rax
  423f80:	mov    %rax,%rbx
  423f83:	jne    423be6 <X509_get0_pubkey_bitstr@plt+0xd216>
  423f89:	jmpq   423ca9 <X509_get0_pubkey_bitstr@plt+0xd2d9>
  423f8e:	movl   $0x1,0x50(%rsp)
  423f96:	xor    %ecx,%ecx
  423f98:	xor    %eax,%eax
  423f9a:	jmpq   423840 <X509_get0_pubkey_bitstr@plt+0xce70>
  423f9f:	mov    0x58(%rsp),%eax
  423fa3:	test   %eax,%eax
  423fa5:	je     424058 <X509_get0_pubkey_bitstr@plt+0xd688>
  423fab:	mov    0x251f5e(%rip),%rax        # 675f10 <_fini+0x218a0c>
  423fb2:	xor    %edx,%edx
  423fb4:	mov    $0x6a,%esi
  423fb9:	mov    %rbp,%rdi
  423fbc:	mov    (%rax),%rcx
  423fbf:	callq  412af0 <BIO_ctrl@plt>
  423fc4:	jmpq   423bac <X509_get0_pubkey_bitstr@plt+0xd1dc>
  423fc9:	nopl   0x0(%rax)
  423fd0:	mov    0x6c(%rsp),%eax
  423fd4:	xor    %ecx,%ecx
  423fd6:	or     0x4c(%rsp),%eax
  423fda:	lea    0x3c828(%rip),%rdx        # 460809 <_fini+0x3305>
  423fe1:	mov    %r12d,%esi
  423fe4:	mov    %rbx,%rdi
  423fe7:	sete   %cl
  423fea:	callq  4161f0 <EVP_read_pw_string@plt>
  423fef:	test   %eax,%eax
  423ff1:	jne    423ca7 <X509_get0_pubkey_bitstr@plt+0xd2d7>
  423ff7:	lea    0x257312(%rip),%rax        # 67b310 <_edata+0x608>
  423ffe:	mov    %rbx,0x25730b(%rip)        # 67b310 <_edata+0x608>
  424005:	mov    %rbx,%rcx
  424008:	mov    %rax,0x38(%rsp)
  42400d:	jmpq   423c10 <X509_get0_pubkey_bitstr@plt+0xd240>
  424012:	movl   $0x1,0x68(%rsp)
  42401a:	xor    %ecx,%ecx
  42401c:	xor    %eax,%eax
  42401e:	jmpq   423840 <X509_get0_pubkey_bitstr@plt+0xce70>
  424023:	movl   $0x1,0x54(%rsp)
  42402b:	xor    %ecx,%ecx
  42402d:	xor    %eax,%eax
  42402f:	jmpq   423840 <X509_get0_pubkey_bitstr@plt+0xce70>
  424034:	callq  414c30 <__stack_chk_fail@plt>
  424039:	lea    0x3c675(%rip),%rcx        # 4606b5 <_fini+0x31b1>
  424040:	lea    0x3c6d9(%rip),%rsi        # 460720 <_fini+0x321c>
  424047:	lea    0x3c7a4(%rip),%rdi        # 4607f2 <_fini+0x32ee>
  42404e:	mov    $0xc6,%edx
  424053:	callq  413d40 <__assert_fail@plt>
  424058:	lea    0x3c656(%rip),%rcx        # 4606b5 <_fini+0x31b1>
  42405f:	lea    0x3c6ba(%rip),%rsi        # 460720 <_fini+0x321c>
  424066:	lea    0x3c793(%rip),%rdi        # 460800 <_fini+0x32fc>
  42406d:	mov    $0xcc,%edx
  424072:	callq  413d40 <__assert_fail@plt>
  424077:	lea    0x3c637(%rip),%rcx        # 4606b5 <_fini+0x31b1>
  42407e:	lea    0x3c69b(%rip),%rsi        # 460720 <_fini+0x321c>
  424085:	lea    0x3c788(%rip),%rdi        # 460814 <_fini+0x3310>
  42408c:	mov    $0xf0,%edx
  424091:	callq  413d40 <__assert_fail@plt>
  424096:	lea    0x3c618(%rip),%rcx        # 4606b5 <_fini+0x31b1>
  42409d:	lea    0x3c67c(%rip),%rsi        # 460720 <_fini+0x321c>
  4240a4:	lea    0x3c781(%rip),%rdi        # 46082c <_fini+0x3328>
  4240ab:	mov    $0x100,%edx
  4240b0:	callq  413d40 <__assert_fail@plt>
  4240b5:	nopw   %cs:0x0(%rax,%rax,1)
  4240bf:	nop
  4240c0:	push   %rbx
  4240c1:	mov    %rdx,%rbx
  4240c4:	sub    $0x10,%rsp
  4240c8:	mov    %fs:0x28,%rax
  4240d1:	mov    %rax,0x8(%rsp)
  4240d6:	xor    %eax,%eax
  4240d8:	test   %edi,%edi
  4240da:	movb   $0x2a,0x7(%rsp)
  4240df:	jne    424130 <X509_get0_pubkey_bitstr@plt+0xd760>
  4240e1:	movb   $0x2e,0x7(%rsp)
  4240e6:	mov    0x8(%rbx),%rdi
  4240ea:	lea    0x7(%rsp),%rsi
  4240ef:	mov    $0x1,%edx
  4240f4:	callq  412db0 <BIO_write@plt>
  4240f9:	mov    0x8(%rbx),%rdi
  4240fd:	xor    %ecx,%ecx
  4240ff:	xor    %edx,%edx
  424101:	mov    $0xb,%esi
  424106:	callq  412af0 <BIO_ctrl@plt>
  42410b:	mov    0x8(%rsp),%rcx
  424110:	xor    %fs:0x28,%rcx
  424119:	mov    $0x1,%eax
  42411e:	jne    424151 <X509_get0_pubkey_bitstr@plt+0xd781>
  424120:	add    $0x10,%rsp
  424124:	pop    %rbx
  424125:	retq   
  424126:	nopw   %cs:0x0(%rax,%rax,1)
  424130:	cmp    $0x1,%edi
  424133:	jne    424140 <X509_get0_pubkey_bitstr@plt+0xd770>
  424135:	movb   $0x2b,0x7(%rsp)
  42413a:	jmp    4240e6 <X509_get0_pubkey_bitstr@plt+0xd716>
  42413c:	nopl   0x0(%rax)
  424140:	cmp    $0x2,%edi
  424143:	je     4240e6 <X509_get0_pubkey_bitstr@plt+0xd716>
  424145:	cmp    $0x3,%edi
  424148:	jne    4240e6 <X509_get0_pubkey_bitstr@plt+0xd716>
  42414a:	movb   $0xa,0x7(%rsp)
  42414f:	jmp    4240e6 <X509_get0_pubkey_bitstr@plt+0xd716>
  424151:	callq  414c30 <__stack_chk_fail@plt>
  424156:	nopw   %cs:0x0(%rax,%rax,1)
  424160:	push   %r15
  424162:	push   %r14
  424164:	push   %r13
  424166:	push   %r12
  424168:	mov    %rsi,%r12
  42416b:	mov    $0x1,%esi
  424170:	push   %rbp
  424171:	mov    %edi,%ebp
  424173:	mov    $0xd,%edi
  424178:	push   %rbx
  424179:	sub    $0x38,%rsp
  42417d:	mov    %fs:0x28,%rax
  424186:	mov    %rax,0x28(%rsp)
  42418b:	xor    %eax,%eax
  42418d:	movl   $0x200,0xc(%rsp)
  424195:	callq  414ee0 <signal@plt>
  42419a:	lea    0x256b9f(%rip),%rbx        # 67ad40 <_edata+0x38>
  4241a1:	lea    -0xe8(%rip),%rdx        # 4240c0 <X509_get0_pubkey_bitstr@plt+0xd6f0>
  4241a8:	movl   $0x2,0x10(%rsp)
  4241b0:	mov    %rdx,0x20(%rsp)
  4241b5:	mov    (%rbx),%rax
  4241b8:	test   %rax,%rax
  4241bb:	mov    %rax,0x18(%rsp)
  4241c0:	mov    %rax,%rdi
  4241c3:	je     424501 <X509_get0_pubkey_bitstr@plt+0xdb31>
  4241c9:	xor    %esi,%esi
  4241cb:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  4241d0:	test   %eax,%eax
  4241d2:	je     424442 <X509_get0_pubkey_bitstr@plt+0xda72>
  4241d8:	lea    -0x1(%rbp),%eax
  4241db:	xor    %r14d,%r14d
  4241de:	xor    %r13d,%r13d
  4241e1:	xor    %ebp,%ebp
  4241e3:	lea    0x8(%r12),%r8
  4241e8:	mov    $0x2,%r12d
  4241ee:	test   %eax,%eax
  4241f0:	jle    424280 <X509_get0_pubkey_bitstr@plt+0xd8b0>
  4241f6:	lea    0x39c49(%rip),%r11        # 45de46 <_fini+0x942>
  4241fd:	mov    $0x5,%r10d
  424203:	mov    $0x8,%edx
  424208:	mov    $0x6,%r15d
  42420e:	jmp    42422c <X509_get0_pubkey_bitstr@plt+0xd85c>
  424210:	sub    $0x1,%eax
  424213:	je     4243b0 <X509_get0_pubkey_bitstr@plt+0xd9e0>
  424219:	mov    0x8(%r8),%rbp
  42421d:	lea    0x8(%r8),%rcx
  424221:	sub    $0x1,%eax
  424224:	lea    0x8(%rcx),%r8
  424228:	test   %eax,%eax
  42422a:	jle    424280 <X509_get0_pubkey_bitstr@plt+0xd8b0>
  42422c:	mov    (%r8),%r9
  42422f:	mov    %r11,%rdi
  424232:	mov    %r10,%rcx
  424235:	mov    %r9,%rsi
  424238:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42423a:	je     424210 <X509_get0_pubkey_bitstr@plt+0xd840>
  42423c:	cmpb   $0x2d,(%r9)
  424240:	je     424478 <X509_get0_pubkey_bitstr@plt+0xdaa8>
  424246:	lea    0x39915(%rip),%rdi        # 45db62 <_fini+0x65e>
  42424d:	mov    %r9,%rsi
  424250:	mov    %rdx,%rcx
  424253:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  424255:	jne    4244c8 <X509_get0_pubkey_bitstr@plt+0xdaf8>
  42425b:	sub    $0x1,%eax
  42425e:	je     4243b0 <X509_get0_pubkey_bitstr@plt+0xd9e0>
  424264:	lea    0x8(%r8),%rcx
  424268:	sub    $0x1,%eax
  42426b:	mov    0x8(%r8),%r14
  42426f:	test   %eax,%eax
  424271:	lea    0x8(%rcx),%r8
  424275:	jg     42422c <X509_get0_pubkey_bitstr@plt+0xd85c>
  424277:	nopw   0x0(%rax,%rax,1)
  424280:	mov    (%rbx),%rdi
  424283:	xor    %edx,%edx
  424285:	mov    %r14,%rsi
  424288:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  42428d:	callq  4152b0 <BIO_s_file@plt>
  424292:	mov    %rax,%rdi
  424295:	callq  414a20 <BIO_new@plt>
  42429a:	test   %rax,%rax
  42429d:	mov    %rax,%r14
  4242a0:	je     42458f <X509_get0_pubkey_bitstr@plt+0xdbbf>
  4242a6:	test   %rbp,%rbp
  4242a9:	je     424562 <X509_get0_pubkey_bitstr@plt+0xdb92>
  4242af:	mov    %rbp,%rcx
  4242b2:	mov    $0x5,%edx
  4242b7:	mov    $0x6c,%esi
  4242bc:	mov    %rax,%rdi
  4242bf:	callq  412af0 <BIO_ctrl@plt>
  4242c4:	test   %rax,%rax
  4242c7:	jle    424580 <X509_get0_pubkey_bitstr@plt+0xdbb0>
  4242cd:	mov    (%rbx),%rsi
  4242d0:	xor    %edi,%edi
  4242d2:	mov    $0x1,%edx
  4242d7:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  4242dc:	test   %eax,%eax
  4242de:	jne    4244f3 <X509_get0_pubkey_bitstr@plt+0xdb23>
  4242e4:	test   %r13,%r13
  4242e7:	je     42459c <X509_get0_pubkey_bitstr@plt+0xdbcc>
  4242ed:	mov    %r13,%rdi
  4242f0:	callq  44a710 <X509_get0_pubkey_bitstr@plt+0x33d40>
  4242f5:	mov    (%rbx),%rdi
  4242f8:	lea    0x3ba92(%rip),%rsi        # 45fd91 <_fini+0x288d>
  4242ff:	mov    %rax,%rdx
  424302:	xor    %eax,%eax
  424304:	callq  413c40 <BIO_printf@plt>
  424309:	mov    0xc(%rsp),%edx
  42430d:	mov    (%rbx),%rdi
  424310:	lea    0x3bcf1(%rip),%rsi        # 460008 <_fini+0x2b04>
  424317:	mov    %r12d,%ecx
  42431a:	xor    %eax,%eax
  42431c:	callq  413c40 <BIO_printf@plt>
  424321:	mov    (%rbx),%rdi
  424324:	lea    0x3bd1d(%rip),%rsi        # 460048 <_fini+0x2b44>
  42432b:	xor    %eax,%eax
  42432d:	callq  413c40 <BIO_printf@plt>
  424332:	callq  4137d0 <DH_new@plt>
  424337:	test   %rax,%rax
  42433a:	mov    %rax,%rbp
  42433d:	je     42435b <X509_get0_pubkey_bitstr@plt+0xd98b>
  42433f:	mov    0xc(%rsp),%esi
  424343:	lea    0x10(%rsp),%rcx
  424348:	mov    %r12d,%edx
  42434b:	mov    %rax,%rdi
  42434e:	callq  412f40 <DH_generate_parameters_ex@plt>
  424353:	test   %eax,%eax
  424355:	jne    42453e <X509_get0_pubkey_bitstr@plt+0xdb6e>
  42435b:	mov    (%rbx),%rdi
  42435e:	mov    $0x1,%ebx
  424363:	callq  413f40 <ERR_print_errors@plt>
  424368:	mov    %r14,%rdi
  42436b:	callq  416570 <BIO_free_all@plt>
  424370:	test   %rbp,%rbp
  424373:	je     42444f <X509_get0_pubkey_bitstr@plt+0xda7f>
  424379:	mov    %rbp,%rdi
  42437c:	callq  413d80 <DH_free@plt>
  424381:	jmpq   42444f <X509_get0_pubkey_bitstr@plt+0xda7f>
  424386:	lea    0xc(%rsp),%rdx
  42438b:	lea    0x456b5(%rip),%rsi        # 469a47 <_fini+0xc543>
  424392:	xor    %eax,%eax
  424394:	mov    %r9,%rdi
  424397:	callq  4147b0 <__isoc99_sscanf@plt>
  42439c:	test   %eax,%eax
  42439e:	je     4243b0 <X509_get0_pubkey_bitstr@plt+0xd9e0>
  4243a0:	mov    0xc(%rsp),%eax
  4243a4:	test   %eax,%eax
  4243a6:	jns    424280 <X509_get0_pubkey_bitstr@plt+0xd8b0>
  4243ac:	nopl   0x0(%rax)
  4243b0:	mov    (%rbx),%rdi
  4243b3:	lea    0x3c746(%rip),%rsi        # 460b00 <_fini+0x35fc>
  4243ba:	xor    %eax,%eax
  4243bc:	callq  413c40 <BIO_printf@plt>
  4243c1:	mov    (%rbx),%rdi
  4243c4:	lea    0x3c755(%rip),%rsi        # 460b20 <_fini+0x361c>
  4243cb:	xor    %eax,%eax
  4243cd:	callq  413c40 <BIO_printf@plt>
  4243d2:	mov    (%rbx),%rdi
  4243d5:	lea    0x3c76c(%rip),%rsi        # 460b48 <_fini+0x3644>
  4243dc:	xor    %eax,%eax
  4243de:	callq  413c40 <BIO_printf@plt>
  4243e3:	mov    (%rbx),%rdi
  4243e6:	lea    0x3c78b(%rip),%rsi        # 460b78 <_fini+0x3674>
  4243ed:	xor    %eax,%eax
  4243ef:	callq  413c40 <BIO_printf@plt>
  4243f4:	mov    (%rbx),%rdi
  4243f7:	lea    0x3c7aa(%rip),%rsi        # 460ba8 <_fini+0x36a4>
  4243fe:	xor    %eax,%eax
  424400:	callq  413c40 <BIO_printf@plt>
  424405:	mov    (%rbx),%rdi
  424408:	lea    0x39f1b(%rip),%rsi        # 45e32a <_fini+0xe26>
  42440f:	mov    $0x3a,%ecx
  424414:	mov    $0x3a,%edx
  424419:	xor    %eax,%eax
  42441b:	callq  413c40 <BIO_printf@plt>
  424420:	mov    (%rbx),%rdi
  424423:	lea    0x3c7b6(%rip),%rsi        # 460be0 <_fini+0x36dc>
  42442a:	xor    %eax,%eax
  42442c:	callq  413c40 <BIO_printf@plt>
  424431:	mov    (%rbx),%rdi
  424434:	lea    0x3c7ed(%rip),%rsi        # 460c28 <_fini+0x3724>
  42443b:	xor    %eax,%eax
  42443d:	callq  413c40 <BIO_printf@plt>
  424442:	mov    (%rbx),%rdi
  424445:	mov    $0x1,%ebx
  42444a:	callq  413f40 <ERR_print_errors@plt>
  42444f:	mov    0x28(%rsp),%rdx
  424454:	xor    %fs:0x28,%rdx
  42445d:	mov    %ebx,%eax
  42445f:	jne    4245b0 <X509_get0_pubkey_bitstr@plt+0xdbe0>
  424465:	add    $0x38,%rsp
  424469:	pop    %rbx
  42446a:	pop    %rbp
  42446b:	pop    %r12
  42446d:	pop    %r13
  42446f:	pop    %r14
  424471:	pop    %r15
  424473:	retq   
  424474:	nopl   0x0(%rax)
  424478:	movzbl 0x1(%r9),%ecx
  42447d:	cmp    $0x32,%cl
  424480:	je     4244a8 <X509_get0_pubkey_bitstr@plt+0xdad8>
  424482:	cmp    $0x35,%cl
  424485:	jne    424246 <X509_get0_pubkey_bitstr@plt+0xd876>
  42448b:	cmpb   $0x0,0x2(%r9)
  424490:	jne    424246 <X509_get0_pubkey_bitstr@plt+0xd876>
  424496:	mov    %r8,%rcx
  424499:	mov    $0x5,%r12d
  42449f:	jmpq   424221 <X509_get0_pubkey_bitstr@plt+0xd851>
  4244a4:	nopl   0x0(%rax)
  4244a8:	cmpb   $0x0,0x2(%r9)
  4244ad:	jne    424246 <X509_get0_pubkey_bitstr@plt+0xd876>
  4244b3:	mov    %r8,%rcx
  4244b6:	mov    $0x2,%r12d
  4244bc:	jmpq   424221 <X509_get0_pubkey_bitstr@plt+0xd851>
  4244c1:	nopl   0x0(%rax)
  4244c8:	lea    0x39d32(%rip),%rdi        # 45e201 <_fini+0xcfd>
  4244cf:	mov    %r9,%rsi
  4244d2:	mov    %r15,%rcx
  4244d5:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4244d7:	jne    424386 <X509_get0_pubkey_bitstr@plt+0xd9b6>
  4244dd:	sub    $0x1,%eax
  4244e0:	je     4243b0 <X509_get0_pubkey_bitstr@plt+0xd9e0>
  4244e6:	lea    0x8(%r8),%rcx
  4244ea:	mov    0x8(%r8),%r13
  4244ee:	jmpq   424221 <X509_get0_pubkey_bitstr@plt+0xd851>
  4244f3:	test   %r13,%r13
  4244f6:	je     424309 <X509_get0_pubkey_bitstr@plt+0xd939>
  4244fc:	jmpq   4242ed <X509_get0_pubkey_bitstr@plt+0xd91d>
  424501:	callq  4152b0 <BIO_s_file@plt>
  424506:	mov    %rax,%rdi
  424509:	callq  414a20 <BIO_new@plt>
  42450e:	test   %rax,%rax
  424511:	mov    %rax,%rdi
  424514:	mov    %rax,(%rbx)
  424517:	je     4241c9 <X509_get0_pubkey_bitstr@plt+0xd7f9>
  42451d:	mov    0x251a5c(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  424524:	mov    $0x6a,%esi
  424529:	mov    (%rdx),%rcx
  42452c:	mov    $0x10,%edx
  424531:	callq  412af0 <BIO_ctrl@plt>
  424536:	mov    (%rbx),%rdi
  424539:	jmpq   4241c9 <X509_get0_pubkey_bitstr@plt+0xd7f9>
  42453e:	mov    (%rbx),%rsi
  424541:	xor    %edi,%edi
  424543:	callq  44a660 <X509_get0_pubkey_bitstr@plt+0x33c90>
  424548:	mov    %rbp,%rsi
  42454b:	mov    %r14,%rdi
  42454e:	callq  414c00 <PEM_write_bio_DHparams@plt>
  424553:	test   %eax,%eax
  424555:	je     42435b <X509_get0_pubkey_bitstr@plt+0xd98b>
  42455b:	xor    %ebx,%ebx
  42455d:	jmpq   424368 <X509_get0_pubkey_bitstr@plt+0xd998>
  424562:	mov    0x25194f(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  424569:	xor    %edx,%edx
  42456b:	mov    $0x6a,%esi
  424570:	mov    %r14,%rdi
  424573:	mov    (%rax),%rcx
  424576:	callq  412af0 <BIO_ctrl@plt>
  42457b:	jmpq   4242cd <X509_get0_pubkey_bitstr@plt+0xd8fd>
  424580:	mov    %rbp,%rdi
  424583:	xor    %ebp,%ebp
  424585:	callq  4142c0 <perror@plt>
  42458a:	jmpq   42435b <X509_get0_pubkey_bitstr@plt+0xd98b>
  42458f:	mov    (%rbx),%rdi
  424592:	callq  413f40 <ERR_print_errors@plt>
  424597:	jmpq   424442 <X509_get0_pubkey_bitstr@plt+0xda72>
  42459c:	mov    (%rbx),%rdi
  42459f:	lea    0x3b9ea(%rip),%rsi        # 45ff90 <_fini+0x2a8c>
  4245a6:	callq  413c40 <BIO_printf@plt>
  4245ab:	jmpq   424309 <X509_get0_pubkey_bitstr@plt+0xd939>
  4245b0:	callq  414c30 <__stack_chk_fail@plt>
  4245b5:	nopw   %cs:0x0(%rax,%rax,1)
  4245bf:	nop
  4245c0:	push   %r15
  4245c2:	push   %r14
  4245c4:	push   %r13
  4245c6:	push   %r12
  4245c8:	mov    %edi,%r12d
  4245cb:	mov    $0xd,%edi
  4245d0:	push   %rbp
  4245d1:	push   %rbx
  4245d2:	mov    %rsi,%rbx
  4245d5:	mov    $0x1,%esi
  4245da:	sub    $0x128,%rsp
  4245e1:	mov    %fs:0x28,%rax
  4245ea:	mov    %rax,0x118(%rsp)
  4245f2:	xor    %eax,%eax
  4245f4:	callq  414ee0 <signal@plt>
  4245f9:	lea    0x256740(%rip),%rbp        # 67ad40 <_edata+0x38>
  424600:	cmpq   $0x0,0x0(%rbp)
  424605:	je     42474d <X509_get0_pubkey_bitstr@plt+0xdd7d>
  42460b:	callq  412f00 <SSL_load_error_strings@plt>
  424610:	cmp    $0x1,%r12d
  424614:	jle    4246f0 <X509_get0_pubkey_bitstr@plt+0xdd20>
  42461a:	mov    0x8(%rbx),%rax
  42461e:	lea    0x3c62d(%rip),%rdi        # 460c52 <_fini+0x374e>
  424625:	mov    $0x7,%ecx
  42462a:	mov    %rax,%rsi
  42462d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42462f:	je     4246f8 <X509_get0_pubkey_bitstr@plt+0xdd28>
  424635:	add    $0x8,%rbx
  424639:	xor    %r13d,%r13d
  42463c:	mov    $0x1,%ebp
  424641:	lea    0x8(%rsp),%r15
  424646:	lea    0x10(%rsp),%r14
  42464b:	jmp    424679 <X509_get0_pubkey_bitstr@plt+0xdca9>
  42464d:	nopl   (%rax)
  424650:	mov    0x8(%rsp),%rdi
  424655:	mov    $0x100,%edx
  42465a:	mov    %r14,%rsi
  42465d:	add    $0x1,%ebp
  424660:	add    $0x8,%rbx
  424664:	callq  4150c0 <ERR_error_string_n@plt>
  424669:	mov    %r14,%rdi
  42466c:	callq  415a40 <puts@plt>
  424671:	cmp    %r12d,%ebp
  424674:	jge    4246c3 <X509_get0_pubkey_bitstr@plt+0xdcf3>
  424676:	mov    (%rbx),%rax
  424679:	lea    0x3c5d9(%rip),%rsi        # 460c59 <_fini+0x3755>
  424680:	mov    %rax,%rdi
  424683:	mov    %r15,%rdx
  424686:	xor    %eax,%eax
  424688:	callq  4147b0 <__isoc99_sscanf@plt>
  42468d:	test   %eax,%eax
  42468f:	jne    424650 <X509_get0_pubkey_bitstr@plt+0xdc80>
  424691:	mov    (%rbx),%rdx
  424694:	lea    0x3c5c2(%rip),%rsi        # 460c5d <_fini+0x3759>
  42469b:	mov    $0x1,%edi
  4246a0:	xor    %eax,%eax
  4246a2:	add    $0x1,%ebp
  4246a5:	add    $0x1,%r13d
  4246a9:	add    $0x8,%rbx
  4246ad:	callq  412780 <__printf_chk@plt>
  4246b2:	lea    0x3c5bf(%rip),%rdi        # 460c78 <_fini+0x3774>
  4246b9:	callq  415a40 <puts@plt>
  4246be:	cmp    %r12d,%ebp
  4246c1:	jl     424676 <X509_get0_pubkey_bitstr@plt+0xdca6>
  4246c3:	mov    0x118(%rsp),%rcx
  4246cb:	xor    %fs:0x28,%rcx
  4246d4:	mov    %r13d,%eax
  4246d7:	jne    4247bd <X509_get0_pubkey_bitstr@plt+0xdded>
  4246dd:	add    $0x128,%rsp
  4246e4:	pop    %rbx
  4246e5:	pop    %rbp
  4246e6:	pop    %r12
  4246e8:	pop    %r13
  4246ea:	pop    %r14
  4246ec:	pop    %r15
  4246ee:	retq   
  4246ef:	nop
  4246f0:	xor    %r13d,%r13d
  4246f3:	jmp    4246c3 <X509_get0_pubkey_bitstr@plt+0xdcf3>
  4246f5:	nopl   (%rax)
  4246f8:	callq  4152b0 <BIO_s_file@plt>
  4246fd:	mov    %rax,%rdi
  424700:	callq  414a20 <BIO_new@plt>
  424705:	test   %rax,%rax
  424708:	mov    %rax,%rbp
  42470b:	je     424733 <X509_get0_pubkey_bitstr@plt+0xdd63>
  42470d:	mov    0x2517a4(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  424714:	xor    %edx,%edx
  424716:	mov    $0x6a,%esi
  42471b:	mov    %rbp,%rdi
  42471e:	mov    (%rax),%rcx
  424721:	callq  412af0 <BIO_ctrl@plt>
  424726:	test   %rax,%rax
  424729:	jne    424788 <X509_get0_pubkey_bitstr@plt+0xddb8>
  42472b:	mov    %rbp,%rdi
  42472e:	callq  416570 <BIO_free_all@plt>
  424733:	sub    $0x1,%r12d
  424737:	lea    0x8(%rbx),%rdx
  42473b:	cmp    $0x1,%r12d
  42473f:	je     4246f0 <X509_get0_pubkey_bitstr@plt+0xdd20>
  424741:	mov    0x10(%rbx),%rax
  424745:	mov    %rdx,%rbx
  424748:	jmpq   424635 <X509_get0_pubkey_bitstr@plt+0xdc65>
  42474d:	callq  4152b0 <BIO_s_file@plt>
  424752:	mov    %rax,%rdi
  424755:	callq  414a20 <BIO_new@plt>
  42475a:	test   %rax,%rax
  42475d:	mov    %rax,0x0(%rbp)
  424761:	je     42460b <X509_get0_pubkey_bitstr@plt+0xdc3b>
  424767:	mov    0x251812(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  42476e:	mov    $0x6a,%esi
  424773:	mov    %rax,%rdi
  424776:	mov    (%rdx),%rcx
  424779:	mov    $0x10,%edx
  42477e:	callq  412af0 <BIO_ctrl@plt>
  424783:	jmpq   42460b <X509_get0_pubkey_bitstr@plt+0xdc3b>
  424788:	callq  413df0 <ERR_get_string_table@plt>
  42478d:	mov    %rbp,%rsi
  424790:	mov    %rax,%rdi
  424793:	callq  416070 <lh_node_stats_bio@plt>
  424798:	callq  413df0 <ERR_get_string_table@plt>
  42479d:	mov    %rbp,%rsi
  4247a0:	mov    %rax,%rdi
  4247a3:	callq  414290 <lh_stats_bio@plt>
  4247a8:	callq  413df0 <ERR_get_string_table@plt>
  4247ad:	mov    %rbp,%rsi
  4247b0:	mov    %rax,%rdi
  4247b3:	callq  414730 <lh_node_usage_stats_bio@plt>
  4247b8:	jmpq   42472b <X509_get0_pubkey_bitstr@plt+0xdd5b>
  4247bd:	callq  414c30 <__stack_chk_fail@plt>
  4247c2:	nopw   %cs:0x0(%rax,%rax,1)
  4247cc:	nopl   0x0(%rax)
  4247d0:	push   %r14
  4247d2:	cmp    $0x2,%edi
  4247d5:	push   %r13
  4247d7:	mov    %edi,%r13d
  4247da:	push   %r12
  4247dc:	mov    %rsi,%r12
  4247df:	push   %rbp
  4247e0:	push   %rbx
  4247e1:	je     424970 <X509_get0_pubkey_bitstr@plt+0xdfa0>
  4247e7:	jle    4248e0 <X509_get0_pubkey_bitstr@plt+0xdf10>
  4247ed:	cmp    $0x4,%edi
  4247f0:	jg     4249a0 <X509_get0_pubkey_bitstr@plt+0xdfd0>
  4247f6:	xor    %edi,%edi
  4247f8:	callq  412a30 <ASN1_GENERALIZEDTIME_set_string@plt>
  4247fd:	test   %eax,%eax
  4247ff:	je     4249bc <X509_get0_pubkey_bitstr@plt+0xdfec>
  424805:	lea    0x3c4a1(%rip),%rbx        # 460cad <_fini+0x37a9>
  42480c:	lea    0x3c498(%rip),%rax        # 460cab <_fini+0x37a7>
  424813:	cmp    $0x3,%r13d
  424817:	cmovne %rax,%rbx
  42481b:	xor    %esi,%esi
  42481d:	xor    %edi,%edi
  42481f:	callq  4164f0 <X509_gmtime_adj@plt>
  424824:	mov    %rbx,%rdi
  424827:	mov    %rax,%r14
  42482a:	callq  413470 <strlen@plt>
  42482f:	mov    (%r14),%edx
  424832:	test   %r12,%r12
  424835:	lea    0x2(%rdx,%rax,1),%r13d
  42483a:	je     424961 <X509_get0_pubkey_bitstr@plt+0xdf91>
  424840:	mov    %r12,%rdi
  424843:	callq  413470 <strlen@plt>
  424848:	lea    0x1(%r13,%rax,1),%r13d
  42484d:	lea    0x3c496(%rip),%rsi        # 460cea <_fini+0x37e6>
  424854:	mov    $0xae1,%edx
  424859:	mov    %r13d,%edi
  42485c:	callq  413d50 <CRYPTO_malloc@plt>
  424861:	test   %rax,%rax
  424864:	mov    %rax,%rbp
  424867:	je     424937 <X509_get0_pubkey_bitstr@plt+0xdf67>
  42486d:	mov    0x8(%r14),%rsi
  424871:	movslq %r13d,%r13
  424874:	mov    %rax,%rdi
  424877:	mov    %r13,%rdx
  42487a:	callq  413560 <BUF_strlcpy@plt>
  42487f:	test   %rbx,%rbx
  424882:	je     4248a4 <X509_get0_pubkey_bitstr@plt+0xded4>
  424884:	lea    0x3b241(%rip),%rsi        # 45facc <_fini+0x25c8>
  42488b:	mov    %r13,%rdx
  42488e:	mov    %rbp,%rdi
  424891:	callq  414b30 <BUF_strlcat@plt>
  424896:	mov    %r13,%rdx
  424899:	mov    %rbx,%rsi
  42489c:	mov    %rbp,%rdi
  42489f:	callq  414b30 <BUF_strlcat@plt>
  4248a4:	test   %r12,%r12
  4248a7:	je     4248c9 <X509_get0_pubkey_bitstr@plt+0xdef9>
  4248a9:	lea    0x3b21c(%rip),%rsi        # 45facc <_fini+0x25c8>
  4248b0:	mov    %r13,%rdx
  4248b3:	mov    %rbp,%rdi
  4248b6:	callq  414b30 <BUF_strlcat@plt>
  4248bb:	mov    %r13,%rdx
  4248be:	mov    %r12,%rsi
  4248c1:	mov    %rbp,%rdi
  4248c4:	callq  414b30 <BUF_strlcat@plt>
  4248c9:	mov    %r14,%rdi
  4248cc:	callq  412eb0 <ASN1_UTCTIME_free@plt>
  4248d1:	mov    %rbp,%rax
  4248d4:	pop    %rbx
  4248d5:	pop    %rbp
  4248d6:	pop    %r12
  4248d8:	pop    %r13
  4248da:	pop    %r14
  4248dc:	retq   
  4248dd:	nopl   (%rax)
  4248e0:	cmp    $0x1,%edi
  4248e3:	lea    0x250e16(%rip),%rbp        # 675700 <_fini+0x2181fc>
  4248ea:	lea    0x250e4f(%rip),%r14        # 675740 <_fini+0x21823c>
  4248f1:	jne    4249a0 <X509_get0_pubkey_bitstr@plt+0xdfd0>
  4248f7:	nopw   0x0(%rax,%rax,1)
  424900:	mov    0x0(%rbp),%rbx
  424904:	mov    %r12,%rdi
  424907:	mov    %rbx,%rsi
  42490a:	callq  414af0 <strcasecmp@plt>
  42490f:	test   %eax,%eax
  424911:	je     424940 <X509_get0_pubkey_bitstr@plt+0xdf70>
  424913:	add    $0x8,%rbp
  424917:	cmp    %r14,%rbp
  42491a:	jne    424900 <X509_get0_pubkey_bitstr@plt+0xdf30>
  42491c:	lea    0x3c392(%rip),%rsi        # 460cb5 <_fini+0x37b1>
  424923:	mov    %r12,%rdx
  424926:	lea    0x256413(%rip),%rax        # 67ad40 <_edata+0x38>
  42492d:	mov    (%rax),%rdi
  424930:	xor    %eax,%eax
  424932:	callq  413c40 <BIO_printf@plt>
  424937:	xor    %eax,%eax
  424939:	jmp    4248d4 <X509_get0_pubkey_bitstr@plt+0xdf04>
  42493b:	nopl   0x0(%rax,%rax,1)
  424940:	test   %rbx,%rbx
  424943:	je     42491c <X509_get0_pubkey_bitstr@plt+0xdf4c>
  424945:	xor    %esi,%esi
  424947:	xor    %edi,%edi
  424949:	callq  4164f0 <X509_gmtime_adj@plt>
  42494e:	mov    %rbx,%rdi
  424951:	mov    %rax,%r14
  424954:	callq  413470 <strlen@plt>
  424959:	mov    (%r14),%edx
  42495c:	lea    0x2(%rdx,%rax,1),%r13d
  424961:	xor    %r12d,%r12d
  424964:	jmpq   42484d <X509_get0_pubkey_bitstr@plt+0xde7d>
  424969:	nopl   0x0(%rax)
  424970:	xor    %esi,%esi
  424972:	mov    %r12,%rdi
  424975:	callq  414870 <OBJ_txt2obj@plt>
  42497a:	mov    %rax,%rbx
  42497d:	mov    %rax,%rdi
  424980:	callq  414230 <ASN1_OBJECT_free@plt>
  424985:	test   %rbx,%rbx
  424988:	je     4249cb <X509_get0_pubkey_bitstr@plt+0xdffb>
  42498a:	lea    0x3c30a(%rip),%rbx        # 460c9b <_fini+0x3797>
  424991:	jmpq   42481b <X509_get0_pubkey_bitstr@plt+0xde4b>
  424996:	nopw   %cs:0x0(%rax,%rax,1)
  4249a0:	xor    %esi,%esi
  4249a2:	xor    %edi,%edi
  4249a4:	xor    %ebx,%ebx
  4249a6:	callq  4164f0 <X509_gmtime_adj@plt>
  4249ab:	mov    %rax,%r14
  4249ae:	mov    (%rax),%eax
  4249b0:	xor    %r12d,%r12d
  4249b3:	lea    0x1(%rax),%r13d
  4249b7:	jmpq   42484d <X509_get0_pubkey_bitstr@plt+0xde7d>
  4249bc:	mov    %r12,%rdx
  4249bf:	lea    0x3ca6a(%rip),%rsi        # 461430 <_fini+0x3f2c>
  4249c6:	jmpq   424926 <X509_get0_pubkey_bitstr@plt+0xdf56>
  4249cb:	mov    %r12,%rdx
  4249ce:	lea    0x3c2f7(%rip),%rsi        # 460ccc <_fini+0x37c8>
  4249d5:	jmpq   424926 <X509_get0_pubkey_bitstr@plt+0xdf56>
  4249da:	nopw   0x0(%rax,%rax,1)
  4249e0:	push   %r15
  4249e2:	mov    %rcx,%r15
  4249e5:	push   %r14
  4249e7:	mov    %edx,%r14d
  4249ea:	push   %r13
  4249ec:	mov    %rsi,%r13
  4249ef:	push   %r12
  4249f1:	mov    %rdi,%r12
  4249f4:	push   %rbp
  4249f5:	push   %rbx
  4249f6:	sub    $0x48,%rsp
  4249fa:	mov    %fs:0x28,%rax
  424a03:	mov    %rax,0x38(%rsp)
  424a08:	xor    %eax,%eax
  424a0a:	movq   $0x0,(%rsp)
  424a12:	movq   $0x0,0x8(%rsp)
  424a1b:	movq   $0x0,0x10(%rsp)
  424a24:	movq   $0x0,0x18(%rsp)
  424a2d:	movq   $0x0,0x20(%rsp)
  424a36:	movq   $0x0,0x28(%rsp)
  424a3f:	callq  414400 <X509_get_subject_name@plt>
  424a44:	xor    %edx,%edx
  424a46:	xor    %esi,%esi
  424a48:	mov    %rax,%rdi
  424a4b:	callq  4139a0 <X509_NAME_oneline@plt>
  424a50:	mov    %r12,%rdi
  424a53:	mov    %rax,0x28(%rsp)
  424a58:	callq  4128c0 <X509_get_serialNumber@plt>
  424a5d:	xor    %esi,%esi
  424a5f:	mov    %rax,%rdi
  424a62:	callq  412f90 <ASN1_INTEGER_to_BN@plt>
  424a67:	test   %rax,%rax
  424a6a:	mov    %rax,%rbx
  424a6d:	je     424d5b <X509_get0_pubkey_bitstr@plt+0xe38b>
  424a73:	mov    0x8(%rax),%eax
  424a76:	test   %eax,%eax
  424a78:	je     424b80 <X509_get0_pubkey_bitstr@plt+0xe1b0>
  424a7e:	mov    %rbx,%rdi
  424a81:	callq  414930 <BN_bn2hex@plt>
  424a86:	mov    %rax,0x18(%rsp)
  424a8b:	mov    %rbx,%rdi
  424a8e:	callq  4138e0 <BN_free@plt>
  424a93:	cmpq   $0x0,0x28(%rsp)
  424a99:	je     424cff <X509_get0_pubkey_bitstr@plt+0xe32f>
  424a9f:	cmpq   $0x0,0x18(%rsp)
  424aa5:	je     424cff <X509_get0_pubkey_bitstr@plt+0xe32f>
  424aab:	mov    0x8(%r13),%rdi
  424aaf:	mov    %rsp,%rdx
  424ab2:	mov    $0x3,%esi
  424ab7:	mov    %rsp,%rbx
  424aba:	callq  413420 <TXT_DB_get_by_index@plt>
  424abf:	test   %rax,%rax
  424ac2:	mov    %rax,%rbp
  424ac5:	je     424ba0 <X509_get0_pubkey_bitstr@plt+0xe1d0>
  424acb:	mov    %rax,%rsi
  424ace:	mov    %rsp,%rdi
  424ad1:	callq  446c70 <X509_get0_pubkey_bitstr@plt+0x302a0>
  424ad6:	test   %eax,%eax
  424ad8:	jne    424d25 <X509_get0_pubkey_bitstr@plt+0xe355>
  424ade:	mov    0x0(%rbp),%rax
  424ae2:	cmpb   $0x52,(%rax)
  424ae5:	je     424d4d <X509_get0_pubkey_bitstr@plt+0xe37d>
  424aeb:	lea    0x25624e(%rip),%r12        # 67ad40 <_edata+0x38>
  424af2:	mov    0x18(%rbp),%rdx
  424af6:	lea    0x3c244(%rip),%rsi        # 460d41 <_fini+0x383d>
  424afd:	xor    %eax,%eax
  424aff:	mov    (%r12),%rdi
  424b03:	callq  413c40 <BIO_printf@plt>
  424b08:	mov    %r15,%rsi
  424b0b:	mov    %r14d,%edi
  424b0e:	callq  4247d0 <X509_get0_pubkey_bitstr@plt+0xde00>
  424b13:	test   %rax,%rax
  424b16:	je     424db5 <X509_get0_pubkey_bitstr@plt+0xe3e5>
  424b1c:	mov    0x0(%rbp),%rdx
  424b20:	mov    $0x1,%r12d
  424b26:	movb   $0x52,(%rdx)
  424b29:	mov    0x0(%rbp),%rdx
  424b2d:	movb   $0x0,0x1(%rdx)
  424b31:	mov    %rax,0x10(%rbp)
  424b35:	lea    0x30(%rbx),%rbp
  424b39:	nopl   0x0(%rax)
  424b40:	mov    (%rbx),%rdi
  424b43:	test   %rdi,%rdi
  424b46:	je     424b4d <X509_get0_pubkey_bitstr@plt+0xe17d>
  424b48:	callq  415020 <CRYPTO_free@plt>
  424b4d:	add    $0x8,%rbx
  424b51:	cmp    %rbp,%rbx
  424b54:	jne    424b40 <X509_get0_pubkey_bitstr@plt+0xe170>
  424b56:	mov    0x38(%rsp),%rcx
  424b5b:	xor    %fs:0x28,%rcx
  424b64:	mov    %r12d,%eax
  424b67:	jne    424dd0 <X509_get0_pubkey_bitstr@plt+0xe400>
  424b6d:	add    $0x48,%rsp
  424b71:	pop    %rbx
  424b72:	pop    %rbp
  424b73:	pop    %r12
  424b75:	pop    %r13
  424b77:	pop    %r14
  424b79:	pop    %r15
  424b7b:	retq   
  424b7c:	nopl   0x0(%rax)
  424b80:	lea    0x40010(%rip),%rdi        # 464b97 <_fini+0x7693>
  424b87:	callq  415630 <BUF_strdup@plt>
  424b8c:	mov    %rax,0x18(%rsp)
  424b91:	jmpq   424a8b <X509_get0_pubkey_bitstr@plt+0xe0bb>
  424b96:	nopw   %cs:0x0(%rax,%rax,1)
  424ba0:	lea    0x256199(%rip),%rax        # 67ad40 <_edata+0x38>
  424ba7:	mov    0x28(%rsp),%rcx
  424bac:	lea    0x3c8ad(%rip),%rsi        # 461460 <_fini+0x3f5c>
  424bb3:	mov    0x18(%rsp),%rdx
  424bb8:	mov    (%rax),%rdi
  424bbb:	xor    %eax,%eax
  424bbd:	callq  413c40 <BIO_printf@plt>
  424bc2:	lea    0x3c121(%rip),%rsi        # 460cea <_fini+0x37e6>
  424bc9:	mov    $0x98c,%edx
  424bce:	mov    $0x2,%edi
  424bd3:	callq  413d50 <CRYPTO_malloc@plt>
  424bd8:	mov    %rax,(%rsp)
  424bdc:	mov    (%r12),%rax
  424be0:	lea    0x3c103(%rip),%rsi        # 460cea <_fini+0x37e6>
  424be7:	mov    $0x98f,%edx
  424bec:	mov    0x20(%rax),%rax
  424bf0:	mov    0x8(%rax),%rbp
  424bf4:	mov    0x0(%rbp),%eax
  424bf7:	lea    0x1(%rax),%edi
  424bfa:	callq  413d50 <CRYPTO_malloc@plt>
  424bff:	movslq 0x0(%rbp),%rdx
  424c03:	mov    %rax,0x8(%rsp)
  424c08:	mov    %rax,%rdi
  424c0b:	mov    0x8(%rbp),%rsi
  424c0f:	callq  414250 <memcpy@plt>
  424c14:	movslq 0x0(%rbp),%rax
  424c18:	mov    0x8(%rsp),%rdx
  424c1d:	lea    0x3c0c6(%rip),%rsi        # 460cea <_fini+0x37e6>
  424c24:	mov    $0x8,%edi
  424c29:	movb   $0x0,(%rdx,%rax,1)
  424c2d:	mov    $0x996,%edx
  424c32:	movq   $0x0,0x10(%rsp)
  424c3b:	callq  413d50 <CRYPTO_malloc@plt>
  424c40:	cmpq   $0x0,(%rsp)
  424c45:	mov    %rax,0x20(%rsp)
  424c4a:	je     424d92 <X509_get0_pubkey_bitstr@plt+0xe3c2>
  424c50:	cmpq   $0x0,0x8(%rsp)
  424c56:	je     424d92 <X509_get0_pubkey_bitstr@plt+0xe3c2>
  424c5c:	test   %rax,%rax
  424c5f:	je     424d92 <X509_get0_pubkey_bitstr@plt+0xe3c2>
  424c65:	lea    0x46d4d(%rip),%rsi        # 46b9b9 <_fini+0xe4b5>
  424c6c:	mov    $0x8,%edx
  424c71:	mov    %rax,%rdi
  424c74:	callq  413560 <BUF_strlcpy@plt>
  424c79:	mov    (%rsp),%rax
  424c7d:	lea    0x3c066(%rip),%rsi        # 460cea <_fini+0x37e6>
  424c84:	mov    $0x9a4,%edx
  424c89:	mov    $0x38,%edi
  424c8e:	movb   $0x56,(%rax)
  424c91:	mov    (%rsp),%rax
  424c95:	movb   $0x0,0x1(%rax)
  424c99:	callq  413d50 <CRYPTO_malloc@plt>
  424c9e:	test   %rax,%rax
  424ca1:	je     424d92 <X509_get0_pubkey_bitstr@plt+0xe3c2>
  424ca7:	xor    %edx,%edx
  424ca9:	nopl   0x0(%rax)
  424cb0:	mov    (%rdx,%rbx,1),%rcx
  424cb4:	mov    %rcx,(%rax,%rdx,1)
  424cb8:	movq   $0x0,(%rdx,%rbx,1)
  424cc0:	add    $0x8,%rdx
  424cc4:	cmp    $0x30,%rdx
  424cc8:	jne    424cb0 <X509_get0_pubkey_bitstr@plt+0xe2e0>
  424cca:	movq   $0x0,0x30(%rax)
  424cd2:	mov    0x8(%r13),%rdi
  424cd6:	mov    %rax,%rsi
  424cd9:	callq  416440 <TXT_DB_insert@plt>
  424cde:	test   %eax,%eax
  424ce0:	je     424d69 <X509_get0_pubkey_bitstr@plt+0xe399>
  424ce6:	mov    %r12,%rdi
  424ce9:	mov    %r15,%rcx
  424cec:	mov    %r14d,%edx
  424cef:	mov    %r13,%rsi
  424cf2:	callq  4249e0 <X509_get0_pubkey_bitstr@plt+0xe010>
  424cf7:	mov    %eax,%r12d
  424cfa:	jmpq   424b35 <X509_get0_pubkey_bitstr@plt+0xe165>
  424cff:	lea    0x25603a(%rip),%rax        # 67ad40 <_edata+0x38>
  424d06:	lea    0x38fb7(%rip),%rsi        # 45dcc4 <_fini+0x7c0>
  424d0d:	mov    $0xffffffff,%r12d
  424d13:	mov    %rsp,%rbx
  424d16:	mov    (%rax),%rdi
  424d19:	xor    %eax,%eax
  424d1b:	callq  413c40 <BIO_printf@plt>
  424d20:	jmpq   424b35 <X509_get0_pubkey_bitstr@plt+0xe165>
  424d25:	mov    0x28(%rsp),%rdx
  424d2a:	lea    0x3bff2(%rip),%rsi        # 460d23 <_fini+0x381f>
  424d31:	lea    0x256008(%rip),%rax        # 67ad40 <_edata+0x38>
  424d38:	mov    $0xffffffff,%r12d
  424d3e:	mov    (%rax),%rdi
  424d41:	xor    %eax,%eax
  424d43:	callq  413c40 <BIO_printf@plt>
  424d48:	jmpq   424b35 <X509_get0_pubkey_bitstr@plt+0xe165>
  424d4d:	mov    0x18(%rsp),%rdx
  424d52:	lea    0x3c73f(%rip),%rsi        # 461498 <_fini+0x3f94>
  424d59:	jmp    424d31 <X509_get0_pubkey_bitstr@plt+0xe361>
  424d5b:	mov    $0xffffffff,%r12d
  424d61:	mov    %rsp,%rbx
  424d64:	jmpq   424b35 <X509_get0_pubkey_bitstr@plt+0xe165>
  424d69:	lea    0x255fd0(%rip),%rax        # 67ad40 <_edata+0x38>
  424d70:	lea    0x3bf78(%rip),%rsi        # 460cef <_fini+0x37eb>
  424d77:	mov    (%rax),%rdi
  424d7a:	xor    %eax,%eax
  424d7c:	callq  413c40 <BIO_printf@plt>
  424d81:	mov    0x8(%r13),%rax
  424d85:	lea    0x3bf7e(%rip),%rsi        # 460d0a <_fini+0x3806>
  424d8c:	mov    0x20(%rax),%rdx
  424d90:	jmp    424d31 <X509_get0_pubkey_bitstr@plt+0xe361>
  424d92:	lea    0x255fa7(%rip),%rax        # 67ad40 <_edata+0x38>
  424d99:	lea    0x38f24(%rip),%rsi        # 45dcc4 <_fini+0x7c0>
  424da0:	mov    $0xffffffff,%r12d
  424da6:	mov    (%rax),%rdi
  424da9:	xor    %eax,%eax
  424dab:	callq  413c40 <BIO_printf@plt>
  424db0:	jmpq   424b35 <X509_get0_pubkey_bitstr@plt+0xe165>
  424db5:	mov    (%r12),%rdi
  424db9:	lea    0x3c708(%rip),%rsi        # 4614c8 <_fini+0x3fc4>
  424dc0:	mov    $0xffffffff,%r12d
  424dc6:	callq  413c40 <BIO_printf@plt>
  424dcb:	jmpq   424b35 <X509_get0_pubkey_bitstr@plt+0xe165>
  424dd0:	callq  414c30 <__stack_chk_fail@plt>
  424dd5:	data32 nopw %cs:0x0(%rax,%rax,1)
  424de0:	push   %r12
  424de2:	mov    %rdx,%r12
  424de5:	push   %rbp
  424de6:	mov    %rdi,%rbp
  424de9:	push   %rbx
  424dea:	sub    $0x30,%rsp
  424dee:	mov    %fs:0x28,%rax
  424df7:	mov    %rax,0x28(%rsp)
  424dfc:	xor    %eax,%eax
  424dfe:	callq  413000 <i2a_ASN1_OBJECT@plt>
  424e03:	mov    $0x16,%ecx
  424e08:	mov    %rsp,%rsi
  424e0b:	sub    %eax,%ecx
  424e0d:	test   %ecx,%ecx
  424e0f:	jle    424fa6 <X509_get0_pubkey_bitstr@plt+0xe5d6>
  424e15:	sub    $0x1,%ecx
  424e18:	lea    0x1(%rsp,%rcx,1),%rdi
  424e1d:	mov    %rsp,%rcx
  424e20:	add    $0x1,%rcx
  424e24:	movb   $0x20,-0x1(%rcx)
  424e28:	cmp    %rdi,%rcx
  424e2b:	jne    424e20 <X509_get0_pubkey_bitstr@plt+0xe450>
  424e2d:	mov    $0x15,%edx
  424e32:	sub    %eax,%edx
  424e34:	movslq %edx,%rdx
  424e37:	lea    0x1(%rsi,%rdx,1),%rax
  424e3c:	movb   $0x3a,(%rax)
  424e3f:	movb   $0x0,0x1(%rax)
  424e43:	mov    %rbp,%rdi
  424e46:	callq  413b70 <BIO_puts@plt>
  424e4b:	mov    0x4(%r12),%edx
  424e50:	cmp    $0x13,%edx
  424e53:	je     424f50 <X509_get0_pubkey_bitstr@plt+0xe580>
  424e59:	cmp    $0x14,%edx
  424e5c:	je     424f70 <X509_get0_pubkey_bitstr@plt+0xe5a0>
  424e62:	cmp    $0x16,%edx
  424e65:	je     424f90 <X509_get0_pubkey_bitstr@plt+0xe5c0>
  424e6b:	cmp    $0x1c,%edx
  424e6e:	xchg   %ax,%ax
  424e70:	je     424f38 <X509_get0_pubkey_bitstr@plt+0xe568>
  424e76:	lea    0x3bf14(%rip),%rsi        # 460d91 <_fini+0x388d>
  424e7d:	mov    %rbp,%rdi
  424e80:	xor    %eax,%eax
  424e82:	callq  413c40 <BIO_printf@plt>
  424e87:	mov    (%r12),%eax
  424e8b:	mov    0x8(%r12),%rbx
  424e90:	lea    -0x1(%rax),%edx
  424e93:	test   %eax,%eax
  424e95:	lea    0x1(%rbx,%rdx,1),%r12
  424e9a:	jg     424ec1 <X509_get0_pubkey_bitstr@plt+0xe4f1>
  424e9c:	jmp    424ee5 <X509_get0_pubkey_bitstr@plt+0xe515>
  424e9e:	xchg   %ax,%ax
  424ea0:	test   %dl,%dl
  424ea2:	js     424f20 <X509_get0_pubkey_bitstr@plt+0xe550>
  424ea4:	lea    0x3befa(%rip),%rsi        # 460da5 <_fini+0x38a1>
  424eab:	add    $0x40,%edx
  424eae:	mov    %rbp,%rdi
  424eb1:	xor    %eax,%eax
  424eb3:	callq  413c40 <BIO_printf@plt>
  424eb8:	add    $0x1,%rbx
  424ebc:	cmp    %r12,%rbx
  424ebf:	je     424ee5 <X509_get0_pubkey_bitstr@plt+0xe515>
  424ec1:	movsbl (%rbx),%edx
  424ec4:	lea    -0x20(%rdx),%eax
  424ec7:	cmp    $0x5e,%al
  424ec9:	ja     424ea0 <X509_get0_pubkey_bitstr@plt+0xe4d0>
  424ecb:	lea    0x3debb(%rip),%rsi        # 462d8d <_fini+0x5889>
  424ed2:	xor    %eax,%eax
  424ed4:	mov    %rbp,%rdi
  424ed7:	add    $0x1,%rbx
  424edb:	callq  413c40 <BIO_printf@plt>
  424ee0:	cmp    %r12,%rbx
  424ee3:	jne    424ec1 <X509_get0_pubkey_bitstr@plt+0xe4f1>
  424ee5:	lea    0x43224(%rip),%rsi        # 468110 <_fini+0xac0c>
  424eec:	xor    %eax,%eax
  424eee:	mov    %rbp,%rdi
  424ef1:	callq  413c40 <BIO_printf@plt>
  424ef6:	mov    0x28(%rsp),%rsi
  424efb:	xor    %fs:0x28,%rsi
  424f04:	mov    $0x1,%eax
  424f09:	jne    424fae <X509_get0_pubkey_bitstr@plt+0xe5de>
  424f0f:	add    $0x30,%rsp
  424f13:	pop    %rbx
  424f14:	pop    %rbp
  424f15:	pop    %r12
  424f17:	retq   
  424f18:	nopl   0x0(%rax,%rax,1)
  424f20:	lea    0x3be76(%rip),%rsi        # 460d9d <_fini+0x3899>
  424f27:	mov    %rbp,%rdi
  424f2a:	xor    %eax,%eax
  424f2c:	callq  413c40 <BIO_printf@plt>
  424f31:	jmp    424eb8 <X509_get0_pubkey_bitstr@plt+0xe4e8>
  424f33:	nopl   0x0(%rax,%rax,1)
  424f38:	lea    0x3be40(%rip),%rsi        # 460d7f <_fini+0x387b>
  424f3f:	mov    %rbp,%rdi
  424f42:	xor    %eax,%eax
  424f44:	callq  413c40 <BIO_printf@plt>
  424f49:	jmpq   424e87 <X509_get0_pubkey_bitstr@plt+0xe4b7>
  424f4e:	xchg   %ax,%ax
  424f50:	lea    0x3be04(%rip),%rsi        # 460d5b <_fini+0x3857>
  424f57:	mov    %rbp,%rdi
  424f5a:	xor    %eax,%eax
  424f5c:	callq  413c40 <BIO_printf@plt>
  424f61:	jmpq   424e87 <X509_get0_pubkey_bitstr@plt+0xe4b7>
  424f66:	nopw   %cs:0x0(%rax,%rax,1)
  424f70:	lea    0x3bdf0(%rip),%rsi        # 460d67 <_fini+0x3863>
  424f77:	mov    %rbp,%rdi
  424f7a:	xor    %eax,%eax
  424f7c:	callq  413c40 <BIO_printf@plt>
  424f81:	jmpq   424e87 <X509_get0_pubkey_bitstr@plt+0xe4b7>
  424f86:	nopw   %cs:0x0(%rax,%rax,1)
  424f90:	lea    0x3bddc(%rip),%rsi        # 460d73 <_fini+0x386f>
  424f97:	mov    %rbp,%rdi
  424f9a:	xor    %eax,%eax
  424f9c:	callq  413c40 <BIO_printf@plt>
  424fa1:	jmpq   424e87 <X509_get0_pubkey_bitstr@plt+0xe4b7>
  424fa6:	mov    %rsp,%rax
  424fa9:	jmpq   424e3c <X509_get0_pubkey_bitstr@plt+0xe46c>
  424fae:	xchg   %ax,%ax
  424fb0:	callq  414c30 <__stack_chk_fail@plt>
  424fb5:	data32 nopw %cs:0x0(%rax,%rax,1)
  424fc0:	push   %r15
  424fc2:	push   %r14
  424fc4:	push   %r13
  424fc6:	mov    %rcx,%r13
  424fc9:	push   %r12
  424fcb:	push   %rbp
  424fcc:	mov    %rdi,%rbp
  424fcf:	mov    %r8,%rdi
  424fd2:	push   %rbx
  424fd3:	sub    $0x28,%rsp
  424fd7:	mov    %rsi,0x8(%rsp)
  424fdc:	mov    %rdx,(%rsp)
  424fe0:	callq  415630 <BUF_strdup@plt>
  424fe5:	mov    $0x2c,%esi
  424fea:	mov    %rax,%rdi
  424fed:	mov    %rax,%r12
  424ff0:	callq  413220 <strchr@plt>
  424ff5:	test   %rax,%rax
  424ff8:	je     425130 <X509_get0_pubkey_bitstr@plt+0xe760>
  424ffe:	lea    0x1(%rax),%rbx
  425002:	movb   $0x0,(%rax)
  425005:	mov    $0x2c,%esi
  42500a:	mov    %rbx,%rdi
  42500d:	callq  413220 <strchr@plt>
  425012:	test   %rax,%rax
  425015:	je     425140 <X509_get0_pubkey_bitstr@plt+0xe770>
  42501b:	movb   $0x0,(%rax)
  42501e:	add    $0x1,%rax
  425022:	mov    %rax,0x10(%rsp)
  425027:	test   %rbp,%rbp
  42502a:	je     42504e <X509_get0_pubkey_bitstr@plt+0xe67e>
  42502c:	callq  4139b0 <ASN1_UTCTIME_new@plt>
  425031:	mov    %r12,%rsi
  425034:	mov    %rax,0x0(%rbp)
  425038:	mov    %rax,%rdi
  42503b:	callq  4132f0 <ASN1_UTCTIME_set_string@plt>
  425040:	test   %eax,%eax
  425042:	mov    %r12,%rdx
  425045:	lea    0x3be79(%rip),%rsi        # 460ec5 <_fini+0x39c1>
  42504c:	je     42508f <X509_get0_pubkey_bitstr@plt+0xe6bf>
  42504e:	test   %rbx,%rbx
  425051:	je     425150 <X509_get0_pubkey_bitstr@plt+0xe780>
  425057:	lea    0x2506a2(%rip),%r14        # 675700 <_fini+0x2181fc>
  42505e:	xor    %r15d,%r15d
  425061:	nopl   0x0(%rax)
  425068:	mov    (%r14,%r15,8),%rsi
  42506c:	mov    %rbx,%rdi
  42506f:	mov    %r15d,%ebp
  425072:	callq  414af0 <strcasecmp@plt>
  425077:	test   %eax,%eax
  425079:	je     4250e0 <X509_get0_pubkey_bitstr@plt+0xe710>
  42507b:	add    $0x1,%r15
  42507f:	cmp    $0xb,%r15
  425083:	jne    425068 <X509_get0_pubkey_bitstr@plt+0xe698>
  425085:	lea    0x3bec4(%rip),%rsi        # 460f50 <_fini+0x3a4c>
  42508c:	mov    %rbx,%rdx
  42508f:	lea    0x255caa(%rip),%rax        # 67ad40 <_edata+0x38>
  425096:	xor    %ebx,%ebx
  425098:	xor    %r14d,%r14d
  42509b:	xor    %ebp,%ebp
  42509d:	mov    (%rax),%rdi
  4250a0:	xor    %eax,%eax
  4250a2:	callq  413c40 <BIO_printf@plt>
  4250a7:	test   %r12,%r12
  4250aa:	je     4250b4 <X509_get0_pubkey_bitstr@plt+0xe6e4>
  4250ac:	mov    %r12,%rdi
  4250af:	callq  415020 <CRYPTO_free@plt>
  4250b4:	cmpq   $0x0,(%rsp)
  4250b9:	je     4251f0 <X509_get0_pubkey_bitstr@plt+0xe820>
  4250bf:	test   %r13,%r13
  4250c2:	je     4251a0 <X509_get0_pubkey_bitstr@plt+0xe7d0>
  4250c8:	add    $0x28,%rsp
  4250cc:	mov    %ebp,%eax
  4250ce:	pop    %rbx
  4250cf:	pop    %rbp
  4250d0:	pop    %r12
  4250d2:	pop    %r13
  4250d4:	pop    %r14
  4250d6:	pop    %r15
  4250d8:	retq   
  4250d9:	nopl   0x0(%rax)
  4250e0:	cmp    $0x7,%r15d
  4250e4:	mov    %r15d,%edx
  4250e7:	je     425120 <X509_get0_pubkey_bitstr@plt+0xe750>
  4250e9:	cmp    $0x8,%r15d
  4250ed:	je     425160 <X509_get0_pubkey_bitstr@plt+0xe790>
  4250ef:	sub    $0x9,%ebp
  4250f2:	xor    %ebx,%ebx
  4250f4:	xor    %r14d,%r14d
  4250f7:	cmp    $0x1,%ebp
  4250fa:	jbe    4251b0 <X509_get0_pubkey_bitstr@plt+0xe7e0>
  425100:	mov    0x8(%rsp),%rax
  425105:	test   %rax,%rax
  425108:	je     42510c <X509_get0_pubkey_bitstr@plt+0xe73c>
  42510a:	mov    %edx,(%rax)
  42510c:	test   %r13,%r13
  42510f:	je     4251fd <X509_get0_pubkey_bitstr@plt+0xe82d>
  425115:	mov    %rbx,0x0(%r13)
  425119:	mov    $0x1,%ebp
  42511e:	jmp    4250a7 <X509_get0_pubkey_bitstr@plt+0xe6d7>
  425120:	xor    %ebx,%ebx
  425122:	xor    %r14d,%r14d
  425125:	mov    $0x8,%edx
  42512a:	jmp    425100 <X509_get0_pubkey_bitstr@plt+0xe730>
  42512c:	nopl   0x0(%rax)
  425130:	movq   $0x0,0x10(%rsp)
  425139:	xor    %ebx,%ebx
  42513b:	jmpq   425027 <X509_get0_pubkey_bitstr@plt+0xe657>
  425140:	movq   $0x0,0x10(%rsp)
  425149:	jmpq   425027 <X509_get0_pubkey_bitstr@plt+0xe657>
  42514e:	xchg   %ax,%ax
  425150:	xor    %ebx,%ebx
  425152:	xor    %r14d,%r14d
  425155:	mov    $0xffffffff,%edx
  42515a:	jmp    425100 <X509_get0_pubkey_bitstr@plt+0xe730>
  42515c:	nopl   0x0(%rax)
  425160:	cmpq   $0x0,0x10(%rsp)
  425166:	je     425233 <X509_get0_pubkey_bitstr@plt+0xe863>
  42516c:	mov    0x10(%rsp),%rdi
  425171:	xor    %esi,%esi
  425173:	callq  414870 <OBJ_txt2obj@plt>
  425178:	test   %rax,%rax
  42517b:	mov    %rax,%r14
  42517e:	je     425283 <X509_get0_pubkey_bitstr@plt+0xe8b3>
  425184:	mov    (%rsp),%rax
  425188:	test   %rax,%rax
  42518b:	je     425258 <X509_get0_pubkey_bitstr@plt+0xe888>
  425191:	mov    %r14,(%rax)
  425194:	xor    %ebx,%ebx
  425196:	mov    $0x6,%edx
  42519b:	jmpq   425100 <X509_get0_pubkey_bitstr@plt+0xe730>
  4251a0:	mov    %rbx,%rdi
  4251a3:	callq  4133b0 <ASN1_GENERALIZEDTIME_free@plt>
  4251a8:	jmpq   4250c8 <X509_get0_pubkey_bitstr@plt+0xe6f8>
  4251ad:	nopl   (%rax)
  4251b0:	cmpq   $0x0,0x10(%rsp)
  4251b6:	je     425264 <X509_get0_pubkey_bitstr@plt+0xe894>
  4251bc:	mov    %r15d,0x1c(%rsp)
  4251c1:	callq  413510 <ASN1_GENERALIZEDTIME_new@plt>
  4251c6:	mov    0x10(%rsp),%rsi
  4251cb:	mov    %rax,%rdi
  4251ce:	mov    %rax,%rbx
  4251d1:	callq  412a30 <ASN1_GENERALIZEDTIME_set_string@plt>
  4251d6:	test   %eax,%eax
  4251d8:	mov    0x1c(%rsp),%edx
  4251dc:	je     42520f <X509_get0_pubkey_bitstr@plt+0xe83f>
  4251de:	cmp    $0x9,%edx
  4251e1:	setne  %dl
  4251e4:	movzbl %dl,%edx
  4251e7:	add    $0x1,%edx
  4251ea:	jmpq   425100 <X509_get0_pubkey_bitstr@plt+0xe730>
  4251ef:	nop
  4251f0:	mov    %r14,%rdi
  4251f3:	callq  414230 <ASN1_OBJECT_free@plt>
  4251f8:	jmpq   4250bf <X509_get0_pubkey_bitstr@plt+0xe6ef>
  4251fd:	mov    %rbx,%rdi
  425200:	mov    $0x1,%ebp
  425205:	callq  4133b0 <ASN1_GENERALIZEDTIME_free@plt>
  42520a:	jmpq   4250a7 <X509_get0_pubkey_bitstr@plt+0xe6d7>
  42520f:	lea    0x255b2a(%rip),%rax        # 67ad40 <_edata+0x38>
  425216:	mov    0x10(%rsp),%rdx
  42521b:	lea    0x3bd11(%rip),%rsi        # 460f33 <_fini+0x3a2f>
  425222:	xor    %ebp,%ebp
  425224:	mov    (%rax),%rdi
  425227:	xor    %eax,%eax
  425229:	callq  413c40 <BIO_printf@plt>
  42522e:	jmpq   4250a7 <X509_get0_pubkey_bitstr@plt+0xe6d7>
  425233:	lea    0x255b06(%rip),%rax        # 67ad40 <_edata+0x38>
  42523a:	lea    0x3bca0(%rip),%rsi        # 460ee1 <_fini+0x39dd>
  425241:	xor    %ebx,%ebx
  425243:	xor    %r14d,%r14d
  425246:	xor    %bpl,%bpl
  425249:	mov    (%rax),%rdi
  42524c:	xor    %eax,%eax
  42524e:	callq  413c40 <BIO_printf@plt>
  425253:	jmpq   4250a7 <X509_get0_pubkey_bitstr@plt+0xe6d7>
  425258:	xor    %ebx,%ebx
  42525a:	mov    $0x6,%edx
  42525f:	jmpq   425100 <X509_get0_pubkey_bitstr@plt+0xe730>
  425264:	lea    0x255ad5(%rip),%rax        # 67ad40 <_edata+0x38>
  42526b:	lea    0x3bca7(%rip),%rsi        # 460f19 <_fini+0x3a15>
  425272:	xor    %ebp,%ebp
  425274:	mov    (%rax),%rdi
  425277:	xor    %eax,%eax
  425279:	callq  413c40 <BIO_printf@plt>
  42527e:	jmpq   4250a7 <X509_get0_pubkey_bitstr@plt+0xe6d7>
  425283:	lea    0x255ab6(%rip),%rax        # 67ad40 <_edata+0x38>
  42528a:	mov    0x10(%rsp),%rdx
  42528f:	lea    0x3bc65(%rip),%rsi        # 460efb <_fini+0x39f7>
  425296:	xor    %ebx,%ebx
  425298:	xor    %ebp,%ebp
  42529a:	mov    (%rax),%rdi
  42529d:	xor    %eax,%eax
  42529f:	callq  413c40 <BIO_printf@plt>
  4252a4:	jmpq   4250a7 <X509_get0_pubkey_bitstr@plt+0xe6d7>
  4252a9:	nopl   0x0(%rax)
  4252b0:	push   %rbp
  4252b1:	mov    %rsi,%r8
  4252b4:	mov    %rdi,%rbp
  4252b7:	push   %rbx
  4252b8:	sub    $0x38,%rsp
  4252bc:	lea    0x18(%rsp),%rcx
  4252c1:	lea    0x10(%rsp),%rdx
  4252c6:	lea    0xc(%rsp),%rsi
  4252cb:	lea    0x20(%rsp),%rdi
  4252d0:	movl   $0xffffffff,0xc(%rsp)
  4252d8:	movq   $0x0,0x10(%rsp)
  4252e1:	mov    %fs:0x28,%rax
  4252ea:	mov    %rax,0x28(%rsp)
  4252ef:	xor    %eax,%eax
  4252f1:	movq   $0x0,0x18(%rsp)
  4252fa:	movq   $0x0,0x20(%rsp)
  425303:	callq  424fc0 <X509_get0_pubkey_bitstr@plt+0xe5f0>
  425308:	test   %eax,%eax
  42530a:	je     425360 <X509_get0_pubkey_bitstr@plt+0xe990>
  42530c:	test   %rbp,%rbp
  42530f:	je     4253b0 <X509_get0_pubkey_bitstr@plt+0xe9e0>
  425315:	mov    0x20(%rsp),%rsi
  42531a:	mov    %rbp,%rdi
  42531d:	callq  413570 <X509_REVOKED_set_revocationDate@plt>
  425322:	test   %eax,%eax
  425324:	je     425360 <X509_get0_pubkey_bitstr@plt+0xe990>
  425326:	cmpl   $0xffffffff,0xc(%rsp)
  42532b:	je     4253d0 <X509_get0_pubkey_bitstr@plt+0xea00>
  425331:	callq  413450 <ASN1_ENUMERATED_new@plt>
  425336:	test   %rax,%rax
  425339:	mov    %rax,%rbx
  42533c:	je     425353 <X509_get0_pubkey_bitstr@plt+0xe983>
  42533e:	movslq 0xc(%rsp),%rsi
  425343:	mov    %rax,%rdi
  425346:	callq  4157b0 <ASN1_ENUMERATED_set@plt>
  42534b:	test   %eax,%eax
  42534d:	jne    425428 <X509_get0_pubkey_bitstr@plt+0xea58>
  425353:	mov    0x10(%rsp),%rdi
  425358:	xor    %ebp,%ebp
  42535a:	jmp    425369 <X509_get0_pubkey_bitstr@plt+0xe999>
  42535c:	nopl   0x0(%rax)
  425360:	mov    0x10(%rsp),%rdi
  425365:	xor    %ebx,%ebx
  425367:	xor    %ebp,%ebp
  425369:	callq  414230 <ASN1_OBJECT_free@plt>
  42536e:	mov    0x18(%rsp),%rdi
  425373:	callq  4133b0 <ASN1_GENERALIZEDTIME_free@plt>
  425378:	mov    %rbx,%rdi
  42537b:	callq  414eb0 <ASN1_ENUMERATED_free@plt>
  425380:	mov    0x20(%rsp),%rdi
  425385:	callq  4155b0 <ASN1_TIME_free@plt>
  42538a:	mov    0x28(%rsp),%rbx
  42538f:	xor    %fs:0x28,%rbx
  425398:	mov    %ebp,%eax
  42539a:	jne    425446 <X509_get0_pubkey_bitstr@plt+0xea76>
  4253a0:	add    $0x38,%rsp
  4253a4:	pop    %rbx
  4253a5:	pop    %rbp
  4253a6:	retq   
  4253a7:	nopw   0x0(%rax,%rax,1)
  4253b0:	mov    0x10(%rsp),%rdi
  4253b5:	xor    %ebx,%ebx
  4253b7:	xor    %ebp,%ebp
  4253b9:	cmpl   $0xffffffff,0xc(%rsp)
  4253be:	setne  %bpl
  4253c2:	add    $0x1,%ebp
  4253c5:	jmp    425369 <X509_get0_pubkey_bitstr@plt+0xe999>
  4253c7:	nopw   0x0(%rax,%rax,1)
  4253d0:	xor    %ebx,%ebx
  4253d2:	mov    0x18(%rsp),%rdx
  4253d7:	test   %rdx,%rdx
  4253da:	je     4253f6 <X509_get0_pubkey_bitstr@plt+0xea26>
  4253dc:	xor    %r8d,%r8d
  4253df:	xor    %ecx,%ecx
  4253e1:	mov    $0x8e,%esi
  4253e6:	mov    %rbp,%rdi
  4253e9:	callq  4146e0 <X509_REVOKED_add1_ext_i2d@plt>
  4253ee:	test   %eax,%eax
  4253f0:	je     425353 <X509_get0_pubkey_bitstr@plt+0xe983>
  4253f6:	mov    0x10(%rsp),%rdx
  4253fb:	xor    %edi,%edi
  4253fd:	test   %rdx,%rdx
  425400:	je     4253b7 <X509_get0_pubkey_bitstr@plt+0xe9e7>
  425402:	mov    %rbp,%rdi
  425405:	xor    %r8d,%r8d
  425408:	xor    %ecx,%ecx
  42540a:	mov    $0x1ae,%esi
  42540f:	xor    %ebp,%ebp
  425411:	callq  4146e0 <X509_REVOKED_add1_ext_i2d@plt>
  425416:	test   %eax,%eax
  425418:	mov    0x10(%rsp),%rdi
  42541d:	jne    4253b7 <X509_get0_pubkey_bitstr@plt+0xe9e7>
  42541f:	jmpq   425369 <X509_get0_pubkey_bitstr@plt+0xe999>
  425424:	nopl   0x0(%rax)
  425428:	xor    %r8d,%r8d
  42542b:	xor    %ecx,%ecx
  42542d:	mov    %rbx,%rdx
  425430:	mov    $0x8d,%esi
  425435:	mov    %rbp,%rdi
  425438:	callq  4146e0 <X509_REVOKED_add1_ext_i2d@plt>
  42543d:	test   %eax,%eax
  42543f:	jne    4253d2 <X509_get0_pubkey_bitstr@plt+0xea02>
  425441:	jmpq   425353 <X509_get0_pubkey_bitstr@plt+0xe983>
  425446:	callq  414c30 <__stack_chk_fail@plt>
  42544b:	nopl   0x0(%rax,%rax,1)
  425450:	push   %r15
  425452:	push   %r14
  425454:	push   %r13
  425456:	push   %r12
  425458:	push   %rbp
  425459:	mov    %rsi,%rbp
  42545c:	mov    $0x1,%esi
  425461:	push   %rbx
  425462:	mov    %edi,%ebx
  425464:	mov    $0xd,%edi
  425469:	sub    $0x5c8,%rsp
  425470:	mov    %fs:0x28,%rax
  425479:	mov    %rax,0x5b8(%rsp)
  425481:	xor    %eax,%eax
  425483:	movq   $0x0,0x228(%rsp)
  42548f:	movq   $0x0,0x230(%rsp)
  42549b:	movq   $0x0,0x238(%rsp)
  4254a7:	movq   $0xffffffffffffffff,0x240(%rsp)
  4254b3:	movq   $0x0,0x248(%rsp)
  4254bf:	movq   $0x0,0x250(%rsp)
  4254cb:	movq   $0x0,0x258(%rsp)
  4254d7:	movq   $0x0,0x260(%rsp)
  4254e3:	movl   $0x0,0x224(%rsp)
  4254ee:	movq   $0x0,0x268(%rsp)
  4254fa:	callq  414ee0 <signal@plt>
  4254ff:	lea    0x25583a(%rip),%r14        # 67ad40 <_edata+0x38>
  425506:	movq   $0x0,0x255e27(%rip)        # 67b338 <_edata+0x630>
  425511:	movq   $0x0,0x228(%rsp)
  42551d:	movq   $0x0,0x255e00(%rip)        # 67b328 <_edata+0x620>
  425528:	movl   $0x0,0x255df2(%rip)        # 67b324 <_edata+0x61c>
  425532:	movl   $0x0,0x255de4(%rip)        # 67b320 <_edata+0x618>
  42553c:	cmpq   $0x0,(%r14)
  425540:	je     425dc2 <X509_get0_pubkey_bitstr@plt+0xf3f2>
  425546:	sub    $0x1,%ebx
  425549:	add    $0x8,%rbp
  42554d:	movq   $0x0,0xc0(%rsp)
  425559:	test   %ebx,%ebx
  42555b:	jle    426026 <X509_get0_pubkey_bitstr@plt+0xf656>
  425561:	movq   $0x0,0xf8(%rsp)
  42556d:	movl   $0x0,0x198(%rsp)
  425578:	xor    %r9d,%r9d
  42557b:	movl   $0x0,0x1ac(%rsp)
  425586:	movl   $0x0,0x13c(%rsp)
  425591:	xor    %r13d,%r13d
  425594:	movq   $0x0,0x120(%rsp)
  4255a0:	movq   $0x0,0x110(%rsp)
  4255ac:	xor    %r15d,%r15d
  4255af:	movq   $0x0,0x168(%rsp)
  4255bb:	movl   $0x0,0x170(%rsp)
  4255c6:	lea    0x385a3(%rip),%r8        # 45db70 <_fini+0x66c>
  4255cd:	movq   $0x0,0x130(%rsp)
  4255d9:	movl   $0x0,0x108(%rsp)
  4255e4:	mov    $0x9,%r12d
  4255ea:	movq   $0x1001,0xf0(%rsp)
  4255f6:	movq   $0x0,0xa8(%rsp)
  425602:	movq   $0x0,0x160(%rsp)
  42560e:	movq   $0x0,0x100(%rsp)
  42561a:	movq   $0x0,0x118(%rsp)
  425626:	movq   $0x0,0x188(%rsp)
  425632:	movq   $0x0,0xb0(%rsp)
  42563e:	movq   $0x0,0x190(%rsp)
  42564a:	movq   $0x0,0x150(%rsp)
  425656:	movq   $0x0,0x158(%rsp)
  425662:	movl   $0x3,0x1a8(%rsp)
  42566d:	movq   $0x0,0x180(%rsp)
  425679:	movq   $0x0,0xa0(%rsp)
  425685:	movq   $0x0,0x148(%rsp)
  425691:	movq   $0x0,0x128(%rsp)
  42569d:	movq   $0x0,0x178(%rsp)
  4256a9:	movl   $0x0,0x1a0(%rsp)
  4256b4:	movl   $0x0,0x19c(%rsp)
  4256bf:	movl   $0x0,0x174(%rsp)
  4256ca:	movl   $0x0,0x140(%rsp)
  4256d5:	movl   $0x1,0x138(%rsp)
  4256e0:	movq   $0x0,0xb8(%rsp)
  4256ec:	jmpq   42572b <X509_get0_pubkey_bitstr@plt+0xed5b>
  4256f1:	nopl   0x0(%rax)
  4256f8:	lea    0x38ad8(%rip),%rdi        # 45e1d7 <_fini+0xcd3>
  4256ff:	mov    $0x8,%ecx
  425704:	mov    %rax,%rsi
  425707:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  425709:	jne    425988 <X509_get0_pubkey_bitstr@plt+0xefb8>
  42570f:	sub    $0x1,%ebx
  425712:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  425718:	mov    0x8(%rbp),%r9
  42571c:	add    $0x8,%rbp
  425720:	sub    $0x1,%ebx
  425723:	add    $0x8,%rbp
  425727:	test   %ebx,%ebx
  425729:	jle    42574d <X509_get0_pubkey_bitstr@plt+0xed7d>
  42572b:	mov    0x0(%rbp),%rax
  42572f:	mov    %r8,%rdi
  425732:	mov    %r12,%rcx
  425735:	mov    %rax,%rsi
  425738:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42573a:	jne    4256f8 <X509_get0_pubkey_bitstr@plt+0xed28>
  42573c:	sub    $0x1,%ebx
  42573f:	add    $0x8,%rbp
  425743:	mov    $0x1,%r13d
  425749:	test   %ebx,%ebx
  42574b:	jg     42572b <X509_get0_pubkey_bitstr@plt+0xed5b>
  42574d:	mov    %r9,0xc8(%rsp)
  425755:	callq  416990 <ERR_load_crypto_strings@plt>
  42575a:	mov    0xc8(%rsp),%r9
  425762:	test   %r9,%r9
  425765:	je     425edb <X509_get0_pubkey_bitstr@plt+0xf50b>
  42576b:	mov    (%r14),%rdi
  42576e:	lea    0x38c04(%rip),%rsi        # 45e379 <_fini+0xe75>
  425775:	mov    %r9,%rdx
  425778:	xor    %eax,%eax
  42577a:	mov    %r9,0xc8(%rsp)
  425782:	callq  413c40 <BIO_printf@plt>
  425787:	xor    %edi,%edi
  425789:	callq  413cd0 <NCONF_new@plt>
  42578e:	mov    0xc8(%rsp),%r9
  425796:	lea    0x240(%rsp),%rsi
  42579e:	mov    %rax,%rdi
  4257a1:	mov    %rax,0x255b90(%rip)        # 67b338 <_edata+0x630>
  4257a8:	mov    %rsi,0x1d8(%rsp)
  4257b0:	mov    %rsi,%rdx
  4257b3:	mov    %r9,%rsi
  4257b6:	callq  414c50 <NCONF_load@plt>
  4257bb:	test   %eax,%eax
  4257bd:	mov    0xc8(%rsp),%r9
  4257c5:	jle    425fe8 <X509_get0_pubkey_bitstr@plt+0xf618>
  4257cb:	mov    0x255b66(%rip),%rsi        # 67b338 <_edata+0x630>
  4257d2:	mov    (%r14),%rdi
  4257d5:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  4257da:	test   %eax,%eax
  4257dc:	jne    425b29 <X509_get0_pubkey_bitstr@plt+0xf159>
  4257e2:	nopw   0x0(%rax,%rax,1)
  4257e8:	movq   $0x0,0xe8(%rsp)
  4257f4:	xor    %r15d,%r15d
  4257f7:	xor    %ebx,%ebx
  4257f9:	movq   $0x0,0xa0(%rsp)
  425805:	movq   $0x0,0xd0(%rsp)
  425811:	movq   $0x0,0xc8(%rsp)
  42581d:	movq   $0x0,0xd8(%rsp)
  425829:	movq   $0x0,0xe0(%rsp)
  425835:	movq   $0x0,0xb0(%rsp)
  425841:	xor    %ebp,%ebp
  425843:	movq   $0x0,0xb8(%rsp)
  42584f:	mov    $0x1,%r12d
  425855:	movl   $0x0,0xc0(%rsp)
  425860:	mov    0xd0(%rsp),%rdi
  425868:	callq  416570 <BIO_free_all@plt>
  42586d:	mov    0xc8(%rsp),%rdi
  425875:	callq  416570 <BIO_free_all@plt>
  42587a:	mov    0xd8(%rsp),%rdi
  425882:	callq  416570 <BIO_free_all@plt>
  425887:	mov    0xe0(%rsp),%rdi
  42588f:	callq  416570 <BIO_free_all@plt>
  425894:	test   %r15,%r15
  425897:	je     4258a8 <X509_get0_pubkey_bitstr@plt+0xeed8>
  425899:	mov    0x2506d8(%rip),%rsi        # 675f78 <_fini+0x218a74>
  4258a0:	mov    %r15,%rdi
  4258a3:	callq  416250 <sk_pop_free@plt>
  4258a8:	test   %r12d,%r12d
  4258ab:	jne    425b02 <X509_get0_pubkey_bitstr@plt+0xf132>
  4258b1:	mov    (%r14),%rsi
  4258b4:	mov    0xe8(%rsp),%rdi
  4258bc:	callq  44a660 <X509_get0_pubkey_bitstr@plt+0x33c90>
  4258c1:	mov    0xc0(%rsp),%ecx
  4258c8:	test   %ecx,%ecx
  4258ca:	je     4258de <X509_get0_pubkey_bitstr@plt+0xef0e>
  4258cc:	mov    0x228(%rsp),%rdi
  4258d4:	test   %rdi,%rdi
  4258d7:	je     4258de <X509_get0_pubkey_bitstr@plt+0xef0e>
  4258d9:	callq  415020 <CRYPTO_free@plt>
  4258de:	mov    0x248(%rsp),%rdi
  4258e6:	callq  4138e0 <BN_free@plt>
  4258eb:	mov    %rbp,%rdi
  4258ee:	callq  4138e0 <BN_free@plt>
  4258f3:	mov    0xa0(%rsp),%rdi
  4258fb:	callq  447890 <X509_get0_pubkey_bitstr@plt+0x30ec0>
  425900:	mov    0xf8(%rsp),%rdi
  425908:	test   %rdi,%rdi
  42590b:	je     425912 <X509_get0_pubkey_bitstr@plt+0xef42>
  42590d:	callq  4143f0 <sk_free@plt>
  425912:	mov    0xb8(%rsp),%rdi
  42591a:	callq  412b00 <EVP_PKEY_free@plt>
  42591f:	mov    0xb0(%rsp),%rdi
  425927:	test   %rdi,%rdi
  42592a:	je     425931 <X509_get0_pubkey_bitstr@plt+0xef61>
  42592c:	callq  4153a0 <X509_free@plt>
  425931:	mov    %rbx,%rdi
  425934:	callq  4166d0 <X509_CRL_free@plt>
  425939:	mov    0x2559f8(%rip),%rdi        # 67b338 <_edata+0x630>
  425940:	callq  4137f0 <NCONF_free@plt>
  425945:	mov    0x2559e4(%rip),%rdi        # 67b330 <_edata+0x628>
  42594c:	callq  4137f0 <NCONF_free@plt>
  425951:	callq  414120 <OBJ_cleanup@plt>
  425956:	mov    0x5b8(%rsp),%rbx
  42595e:	xor    %fs:0x28,%rbx
  425967:	mov    %r12d,%eax
  42596a:	jne    429027 <X509_get0_pubkey_bitstr@plt+0x12657>
  425970:	add    $0x5c8,%rsp
  425977:	pop    %rbx
  425978:	pop    %rbp
  425979:	pop    %r12
  42597b:	pop    %r13
  42597d:	pop    %r14
  42597f:	pop    %r15
  425981:	retq   
  425982:	nopw   0x0(%rax,%rax,1)
  425988:	lea    0x3b5d9(%rip),%rdi        # 460f68 <_fini+0x3a64>
  42598f:	mov    $0x6,%ecx
  425994:	mov    %rax,%rsi
  425997:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  425999:	jne    4259c0 <X509_get0_pubkey_bitstr@plt+0xeff0>
  42599b:	sub    $0x1,%ebx
  42599e:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  4259a4:	mov    0x8(%rbp),%rax
  4259a8:	add    $0x8,%rbp
  4259ac:	mov    %rax,0x255975(%rip)        # 67b328 <_edata+0x620>
  4259b3:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  4259b8:	nopl   0x0(%rax,%rax,1)
  4259c0:	lea    0x388bc(%rip),%rdi        # 45e283 <_fini+0xd7f>
  4259c7:	mov    $0x6,%ecx
  4259cc:	mov    %rax,%rsi
  4259cf:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4259d1:	jne    4259f8 <X509_get0_pubkey_bitstr@plt+0xf028>
  4259d3:	sub    $0x1,%ebx
  4259d6:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  4259dc:	mov    0x8(%rbp),%rax
  4259e0:	add    $0x8,%rbp
  4259e4:	mov    %rax,0xa8(%rsp)
  4259ec:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  4259f1:	nopl   0x0(%rax)
  4259f8:	lea    0x38848(%rip),%rdi        # 45e247 <_fini+0xd43>
  4259ff:	mov    $0x6,%ecx
  425a04:	mov    %rax,%rsi
  425a07:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  425a09:	je     425a48 <X509_get0_pubkey_bitstr@plt+0xf078>
  425a0b:	lea    0x3b55c(%rip),%rdi        # 460f6e <_fini+0x3a6a>
  425a12:	mov    $0xf,%ecx
  425a17:	mov    %rax,%rsi
  425a1a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  425a1c:	je     425a60 <X509_get0_pubkey_bitstr@plt+0xf090>
  425a1e:	lea    0x38864(%rip),%rdi        # 45e289 <_fini+0xd85>
  425a25:	mov    $0x10,%ecx
  425a2a:	mov    %rax,%rsi
  425a2d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  425a2f:	jne    425a6b <X509_get0_pubkey_bitstr@plt+0xf09b>
  425a31:	movl   $0x1,0x108(%rsp)
  425a3c:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  425a41:	nopl   0x0(%rax)
  425a48:	movq   $0x1000,0xf0(%rsp)
  425a54:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  425a59:	nopl   0x0(%rax)
  425a60:	mov    $0x1,%r15d
  425a66:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  425a6b:	lea    0x3b50b(%rip),%rdi        # 460f7d <_fini+0x3a79>
  425a72:	mov    $0xb,%ecx
  425a77:	mov    %rax,%rsi
  425a7a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  425a7c:	je     425b0f <X509_get0_pubkey_bitstr@plt+0xf13f>
  425a82:	lea    0x3b4ff(%rip),%rdi        # 460f88 <_fini+0x3a84>
  425a89:	mov    %rax,%rsi
  425a8c:	mov    %r12,%rcx
  425a8f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  425a91:	jne    425dfc <X509_get0_pubkey_bitstr@plt+0xf42c>
  425a97:	sub    $0x1,%ebx
  425a9a:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  425a9c:	mov    0x8(%rbp),%rax
  425aa0:	add    $0x8,%rbp
  425aa4:	mov    %rax,0x120(%rsp)
  425aac:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  425ab1:	mov    %rax,%rdx
  425ab4:	mov    (%r14),%rdi
  425ab7:	lea    0x3826e(%rip),%rsi        # 45dd2c <_fini+0x828>
  425abe:	xor    %eax,%eax
  425ac0:	lea    0x253139(%rip),%rbx        # 678c00 <_fini+0x21b6fc>
  425ac7:	callq  413c40 <BIO_printf@plt>
  425acc:	mov    0x25312d(%rip),%rdx        # 678c00 <_fini+0x21b6fc>
  425ad3:	test   %rdx,%rdx
  425ad6:	je     4257e8 <X509_get0_pubkey_bitstr@plt+0xee18>
  425adc:	nopl   0x0(%rax)
  425ae0:	mov    (%r14),%rdi
  425ae3:	lea    0x4507a(%rip),%rsi        # 46ab64 <_fini+0xd660>
  425aea:	xor    %eax,%eax
  425aec:	add    $0x8,%rbx
  425af0:	callq  413c40 <BIO_printf@plt>
  425af5:	mov    (%rbx),%rdx
  425af8:	test   %rdx,%rdx
  425afb:	jne    425ae0 <X509_get0_pubkey_bitstr@plt+0xf110>
  425afd:	jmpq   4257e8 <X509_get0_pubkey_bitstr@plt+0xee18>
  425b02:	mov    (%r14),%rdi
  425b05:	callq  413f40 <ERR_print_errors@plt>
  425b0a:	jmpq   4258b1 <X509_get0_pubkey_bitstr@plt+0xeee1>
  425b0f:	sub    $0x1,%ebx
  425b12:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  425b14:	mov    0x8(%rbp),%rax
  425b18:	add    $0x8,%rbp
  425b1c:	mov    %rax,0x110(%rsp)
  425b24:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  425b29:	mov    0xc0(%rsp),%rsi
  425b31:	mov    (%r14),%rdi
  425b34:	xor    %edx,%edx
  425b36:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  425b3b:	cmpq   $0x0,0x2557e5(%rip)        # 67b328 <_edata+0x620>
  425b43:	mov    %rax,0x1b0(%rsp)
  425b4b:	je     4262d4 <X509_get0_pubkey_bitstr@plt+0xf904>
  425b51:	mov    0x2557e0(%rip),%rdi        # 67b338 <_edata+0x630>
  425b58:	test   %rdi,%rdi
  425b5b:	je     426200 <X509_get0_pubkey_bitstr@plt+0xf830>
  425b61:	lea    0x38847(%rip),%rdx        # 45e3af <_fini+0xeab>
  425b68:	xor    %esi,%esi
  425b6a:	callq  413fd0 <NCONF_get_string@plt>
  425b6f:	test   %rax,%rax
  425b72:	je     425eb3 <X509_get0_pubkey_bitstr@plt+0xf4e3>
  425b78:	lea    0x386ae(%rip),%rsi        # 45e22d <_fini+0xd29>
  425b7f:	mov    %rax,%rdi
  425b82:	callq  412ba0 <BIO_new_file@plt>
  425b87:	test   %rax,%rax
  425b8a:	mov    %rax,%r12
  425b8d:	je     425eb3 <X509_get0_pubkey_bitstr@plt+0xf4e3>
  425b93:	mov    %r12,%rdi
  425b96:	callq  415fd0 <OBJ_create_objects@plt>
  425b9b:	mov    %r12,%rdi
  425b9e:	callq  413960 <BIO_free@plt>
  425ba3:	mov    0x25578e(%rip),%rsi        # 67b338 <_edata+0x630>
  425baa:	mov    (%r14),%rdi
  425bad:	callq  445bb0 <X509_get0_pubkey_bitstr@plt+0x2f1e0>
  425bb2:	test   %eax,%eax
  425bb4:	je     4261f3 <X509_get0_pubkey_bitstr@plt+0xf823>
  425bba:	mov    0x255777(%rip),%rdi        # 67b338 <_edata+0x630>
  425bc1:	lea    0x38845(%rip),%rdx        # 45e40d <_fini+0xf09>
  425bc8:	lea    0x45dc7(%rip),%rsi        # 46b996 <_fini+0xe492>
  425bcf:	callq  413fd0 <NCONF_get_string@plt>
  425bd4:	test   %rax,%rax
  425bd7:	mov    %rax,0xe8(%rsp)
  425bdf:	je     426259 <X509_get0_pubkey_bitstr@plt+0xf889>
  425be5:	mov    (%r14),%rsi
  425be8:	mov    0xe8(%rsp),%rdi
  425bf0:	xor    %edx,%edx
  425bf2:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  425bf7:	mov    0x25572a(%rip),%rsi        # 67b328 <_edata+0x620>
  425bfe:	mov    0x255733(%rip),%rdi        # 67b338 <_edata+0x630>
  425c05:	lea    0x387e6(%rip),%rdx        # 45e3f2 <_fini+0xeee>
  425c0c:	callq  413fd0 <NCONF_get_string@plt>
  425c11:	test   %rax,%rax
  425c14:	mov    %rax,%r12
  425c17:	je     4262ca <X509_get0_pubkey_bitstr@plt+0xf8fa>
  425c1d:	mov    %rax,%rdi
  425c20:	callq  416870 <ASN1_STRING_set_default_mask_asc@plt>
  425c25:	test   %eax,%eax
  425c27:	je     426207 <X509_get0_pubkey_bitstr@plt+0xf837>
  425c2d:	cmpq   $0x1000,0xf0(%rsp)
  425c39:	je     425c89 <X509_get0_pubkey_bitstr@plt+0xf2b9>
  425c3b:	mov    0x2556e6(%rip),%rsi        # 67b328 <_edata+0x620>
  425c42:	mov    0x2556ef(%rip),%rdi        # 67b338 <_edata+0x630>
  425c49:	lea    0x385f8(%rip),%rdx        # 45e248 <_fini+0xd44>
  425c50:	callq  413fd0 <NCONF_get_string@plt>
  425c55:	test   %rax,%rax
  425c58:	je     429118 <X509_get0_pubkey_bitstr@plt+0x12748>
  425c5e:	cmpb   $0x79,(%rax)
  425c61:	jne    425c89 <X509_get0_pubkey_bitstr@plt+0xf2b9>
  425c63:	cmpb   $0x65,0x1(%rax)
  425c67:	jne    425c89 <X509_get0_pubkey_bitstr@plt+0xf2b9>
  425c69:	cmpb   $0x73,0x2(%rax)
  425c6d:	jne    425c89 <X509_get0_pubkey_bitstr@plt+0xf2b9>
  425c6f:	cmpb   $0x0,0x3(%rax)
  425c73:	mov    $0x1000,%eax
  425c78:	cmovne 0xf0(%rsp),%rax
  425c81:	mov    %rax,0xf0(%rsp)
  425c89:	mov    0x255698(%rip),%rsi        # 67b328 <_edata+0x620>
  425c90:	mov    0x2556a1(%rip),%rdi        # 67b338 <_edata+0x630>
  425c97:	lea    0x3b3fe(%rip),%rdx        # 46109c <_fini+0x3b98>
  425c9e:	movl   $0x1,0x220(%rsp)
  425ca9:	callq  413fd0 <NCONF_get_string@plt>
  425cae:	test   %rax,%rax
  425cb1:	je     426220 <X509_get0_pubkey_bitstr@plt+0xf850>
  425cb7:	mov    $0x1,%esi
  425cbc:	mov    %rax,%rdi
  425cbf:	callq  4478c0 <X509_get0_pubkey_bitstr@plt+0x30ef0>
  425cc4:	mov    %eax,0x220(%rsp)
  425ccb:	callq  4152b0 <BIO_s_file@plt>
  425cd0:	mov    %rax,%rdi
  425cd3:	callq  414a20 <BIO_new@plt>
  425cd8:	mov    %rax,0xe0(%rsp)
  425ce0:	callq  4152b0 <BIO_s_file@plt>
  425ce5:	mov    %rax,%rdi
  425ce8:	callq  414a20 <BIO_new@plt>
  425ced:	mov    %rax,0xd8(%rsp)
  425cf5:	callq  4152b0 <BIO_s_file@plt>
  425cfa:	mov    %rax,%rdi
  425cfd:	callq  414a20 <BIO_new@plt>
  425d02:	mov    %rax,%r12
  425d05:	mov    %rax,0xc8(%rsp)
  425d0d:	callq  4152b0 <BIO_s_file@plt>
  425d12:	mov    %rax,%rdi
  425d15:	callq  414a20 <BIO_new@plt>
  425d1a:	cmpq   $0x0,0xe0(%rsp)
  425d23:	mov    %rax,0xd0(%rsp)
  425d2b:	je     425ebd <X509_get0_pubkey_bitstr@plt+0xf4ed>
  425d31:	cmpq   $0x0,0xd8(%rsp)
  425d3a:	je     425ebd <X509_get0_pubkey_bitstr@plt+0xf4ed>
  425d40:	test   %r12,%r12
  425d43:	je     425ebd <X509_get0_pubkey_bitstr@plt+0xf4ed>
  425d49:	test   %rax,%rax
  425d4c:	je     425ebd <X509_get0_pubkey_bitstr@plt+0xf4ed>
  425d52:	cmpq   $0x0,0xb0(%rsp)
  425d5b:	je     426320 <X509_get0_pubkey_bitstr@plt+0xf950>
  425d61:	mov    0x2555c0(%rip),%rsi        # 67b328 <_edata+0x620>
  425d68:	mov    0x2555c9(%rip),%rdi        # 67b338 <_edata+0x630>
  425d6f:	lea    0x3b335(%rip),%rdx        # 4610ab <_fini+0x3ba7>
  425d76:	callq  413fd0 <NCONF_get_string@plt>
  425d7b:	test   %rax,%rax
  425d7e:	lea    0x3b326(%rip),%rcx        # 4610ab <_fini+0x3ba7>
  425d85:	je     4290ec <X509_get0_pubkey_bitstr@plt+0x1271c>
  425d8b:	lea    0x220(%rsp),%rsi
  425d93:	mov    %rax,%rdi
  425d96:	callq  447900 <X509_get0_pubkey_bitstr@plt+0x30f30>
  425d9b:	test   %rax,%rax
  425d9e:	mov    %rax,%rdi
  425da1:	mov    %rax,0xa0(%rsp)
  425da9:	je     425db8 <X509_get0_pubkey_bitstr@plt+0xf3e8>
  425dab:	callq  447250 <X509_get0_pubkey_bitstr@plt+0x30880>
  425db0:	test   %eax,%eax
  425db2:	jne    426698 <X509_get0_pubkey_bitstr@plt+0xfcc8>
  425db8:	xor    %r15d,%r15d
  425dbb:	xor    %ebx,%ebx
  425dbd:	jmpq   425835 <X509_get0_pubkey_bitstr@plt+0xee65>
  425dc2:	callq  4152b0 <BIO_s_file@plt>
  425dc7:	mov    %rax,%rdi
  425dca:	callq  414a20 <BIO_new@plt>
  425dcf:	test   %rax,%rax
  425dd2:	mov    %rax,(%r14)
  425dd5:	je     425546 <X509_get0_pubkey_bitstr@plt+0xeb76>
  425ddb:	mov    0x25019e(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  425de2:	mov    $0x6a,%esi
  425de7:	mov    %rax,%rdi
  425dea:	mov    (%rdx),%rcx
  425ded:	mov    $0x10,%edx
  425df2:	callq  412af0 <BIO_ctrl@plt>
  425df7:	jmpq   425546 <X509_get0_pubkey_bitstr@plt+0xeb76>
  425dfc:	lea    0x38496(%rip),%rdi        # 45e299 <_fini+0xd95>
  425e03:	mov    $0x6,%ecx
  425e08:	mov    %rax,%rsi
  425e0b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  425e0d:	je     425e57 <X509_get0_pubkey_bitstr@plt+0xf487>
  425e0f:	movzbl (%rax),%edx
  425e12:	sub    $0x2d,%edx
  425e15:	jne    4261c2 <X509_get0_pubkey_bitstr@plt+0xf7f2>
  425e1b:	cmpb   $0x6d,0x1(%rax)
  425e1f:	jne    4261c2 <X509_get0_pubkey_bitstr@plt+0xf7f2>
  425e25:	cmpb   $0x64,0x2(%rax)
  425e29:	jne    4261c2 <X509_get0_pubkey_bitstr@plt+0xf7f2>
  425e2f:	cmpb   $0x0,0x3(%rax)
  425e33:	jne    4261c2 <X509_get0_pubkey_bitstr@plt+0xf7f2>
  425e39:	sub    $0x1,%ebx
  425e3c:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  425e42:	mov    0x8(%rbp),%rax
  425e46:	add    $0x8,%rbp
  425e4a:	mov    %rax,0x128(%rsp)
  425e52:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  425e57:	sub    $0x1,%ebx
  425e5a:	mov    %r9,0xd8(%rsp)
  425e62:	mov    %r8,0xd0(%rsp)
  425e6a:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  425e70:	mov    0x8(%rbp),%rdi
  425e74:	lea    0x8(%rbp),%rax
  425e78:	mov    $0xa,%edx
  425e7d:	xor    %esi,%esi
  425e7f:	mov    %rax,0xc8(%rsp)
  425e87:	callq  4155d0 <strtol@plt>
  425e8c:	cltq   
  425e8e:	mov    0xc8(%rsp),%rbp
  425e96:	mov    0xd0(%rsp),%r8
  425e9e:	mov    %rax,0x250(%rsp)
  425ea6:	mov    0xd8(%rsp),%r9
  425eae:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  425eb3:	callq  412890 <ERR_clear_error@plt>
  425eb8:	jmpq   425ba3 <X509_get0_pubkey_bitstr@plt+0xf1d3>
  425ebd:	mov    (%r14),%rdi
  425ec0:	xor    %r15d,%r15d
  425ec3:	xor    %ebx,%ebx
  425ec5:	callq  413f40 <ERR_print_errors@plt>
  425eca:	movq   $0x0,0xa0(%rsp)
  425ed6:	jmpq   425835 <X509_get0_pubkey_bitstr@plt+0xee65>
  425edb:	lea    0x37808(%rip),%rdi        # 45d6ea <_fini+0x1e6>
  425ee2:	callq  414fc0 <getenv@plt>
  425ee7:	test   %rax,%rax
  425eea:	mov    %rax,%r9
  425eed:	jne    42576b <X509_get0_pubkey_bitstr@plt+0xed9b>
  425ef3:	lea    0x377fd(%rip),%rdi        # 45d6f7 <_fini+0x1f3>
  425efa:	callq  414fc0 <getenv@plt>
  425eff:	test   %rax,%rax
  425f02:	mov    %rax,%r9
  425f05:	jne    42576b <X509_get0_pubkey_bitstr@plt+0xed9b>
  425f0b:	callq  414e20 <X509_get_default_cert_area@plt>
  425f10:	mov    %rax,%rdi
  425f13:	mov    %rax,0xd0(%rsp)
  425f1b:	callq  413470 <strlen@plt>
  425f20:	lea    0x3adc3(%rip),%rsi        # 460cea <_fini+0x37e6>
  425f27:	add    $0xd,%rax
  425f2b:	mov    $0x254,%edx
  425f30:	mov    %eax,%edi
  425f32:	mov    %rax,0xc8(%rsp)
  425f3a:	callq  413d50 <CRYPTO_malloc@plt>
  425f3f:	mov    0xd0(%rsp),%rcx
  425f47:	mov    0xc8(%rsp),%rdx
  425f4f:	mov    %rax,%rdi
  425f52:	mov    %rax,%r12
  425f55:	mov    %rcx,%rsi
  425f58:	callq  413560 <BUF_strlcpy@plt>
  425f5d:	mov    0xc8(%rsp),%rdx
  425f65:	lea    0x42367(%rip),%rsi        # 4682d3 <_fini+0xadcf>
  425f6c:	mov    %r12,%rdi
  425f6f:	callq  414b30 <BUF_strlcat@plt>
  425f74:	mov    0xc8(%rsp),%rdx
  425f7c:	lea    0x3b102(%rip),%rsi        # 461085 <_fini+0x3b81>
  425f83:	mov    %r12,%rdi
  425f86:	callq  414b30 <BUF_strlcat@plt>
  425f8b:	mov    (%r14),%rdi
  425f8e:	lea    0x383e4(%rip),%rsi        # 45e379 <_fini+0xe75>
  425f95:	mov    %r12,%rdx
  425f98:	xor    %eax,%eax
  425f9a:	callq  413c40 <BIO_printf@plt>
  425f9f:	xor    %edi,%edi
  425fa1:	callq  413cd0 <NCONF_new@plt>
  425fa6:	lea    0x240(%rsp),%rsi
  425fae:	mov    %rax,%rdi
  425fb1:	mov    %rax,0x255380(%rip)        # 67b338 <_edata+0x630>
  425fb8:	mov    %rsi,0x1d8(%rsp)
  425fc0:	mov    %rsi,%rdx
  425fc3:	mov    %r12,%rsi
  425fc6:	callq  414c50 <NCONF_load@plt>
  425fcb:	test   %eax,%eax
  425fcd:	mov    %r12,%r9
  425fd0:	jle    425feb <X509_get0_pubkey_bitstr@plt+0xf61b>
  425fd2:	test   %r12,%r12
  425fd5:	je     4257cb <X509_get0_pubkey_bitstr@plt+0xedfb>
  425fdb:	mov    %r12,%rdi
  425fde:	callq  415020 <CRYPTO_free@plt>
  425fe3:	jmpq   4257cb <X509_get0_pubkey_bitstr@plt+0xedfb>
  425fe8:	xor    %r12d,%r12d
  425feb:	mov    0x240(%rsp),%rdx
  425ff3:	test   %rdx,%rdx
  425ff6:	jle    4261a9 <X509_get0_pubkey_bitstr@plt+0xf7d9>
  425ffc:	mov    (%r14),%rdi
  425fff:	lea    0x3bafa(%rip),%rsi        # 461b00 <_fini+0x45fc>
  426006:	mov    %r9,%rcx
  426009:	xor    %eax,%eax
  42600b:	callq  413c40 <BIO_printf@plt>
  426010:	test   %r12,%r12
  426013:	je     4257e8 <X509_get0_pubkey_bitstr@plt+0xee18>
  426019:	mov    %r12,%rdi
  42601c:	callq  415020 <CRYPTO_free@plt>
  426021:	jmpq   4257e8 <X509_get0_pubkey_bitstr@plt+0xee18>
  426026:	movl   $0x0,0x198(%rsp)
  426031:	movl   $0x0,0x1ac(%rsp)
  42603c:	xor    %r9d,%r9d
  42603f:	movl   $0x0,0x13c(%rsp)
  42604a:	movq   $0x0,0x120(%rsp)
  426056:	xor    %r13d,%r13d
  426059:	movq   $0x0,0x110(%rsp)
  426065:	movq   $0x0,0x168(%rsp)
  426071:	xor    %r15d,%r15d
  426074:	movl   $0x0,0x170(%rsp)
  42607f:	movq   $0x0,0x130(%rsp)
  42608b:	movl   $0x0,0x108(%rsp)
  426096:	movq   $0x1001,0xf0(%rsp)
  4260a2:	movq   $0x0,0xa8(%rsp)
  4260ae:	movq   $0x0,0x160(%rsp)
  4260ba:	movq   $0x0,0x100(%rsp)
  4260c6:	movq   $0x0,0x118(%rsp)
  4260d2:	movq   $0x0,0x188(%rsp)
  4260de:	movq   $0x0,0xb0(%rsp)
  4260ea:	movq   $0x0,0x190(%rsp)
  4260f6:	movq   $0x0,0x150(%rsp)
  426102:	movq   $0x0,0x158(%rsp)
  42610e:	movl   $0x3,0x1a8(%rsp)
  426119:	movq   $0x0,0x180(%rsp)
  426125:	movq   $0x0,0xa0(%rsp)
  426131:	movq   $0x0,0x148(%rsp)
  42613d:	movq   $0x0,0x128(%rsp)
  426149:	movq   $0x0,0x178(%rsp)
  426155:	movl   $0x0,0x1a0(%rsp)
  426160:	movl   $0x0,0x19c(%rsp)
  42616b:	movl   $0x0,0x174(%rsp)
  426176:	movl   $0x1,0x138(%rsp)
  426181:	movq   $0x0,0xb8(%rsp)
  42618d:	movq   $0x0,0xf8(%rsp)
  426199:	movl   $0x0,0x140(%rsp)
  4261a4:	jmpq   42574d <X509_get0_pubkey_bitstr@plt+0xed7d>
  4261a9:	mov    (%r14),%rdi
  4261ac:	lea    0x3b925(%rip),%rsi        # 461ad8 <_fini+0x45d4>
  4261b3:	mov    %r9,%rdx
  4261b6:	xor    %eax,%eax
  4261b8:	callq  413c40 <BIO_printf@plt>
  4261bd:	jmpq   426010 <X509_get0_pubkey_bitstr@plt+0xf640>
  4261c2:	lea    0x3adc8(%rip),%rdi        # 460f91 <_fini+0x3a8d>
  4261c9:	mov    $0x8,%ecx
  4261ce:	mov    %rax,%rsi
  4261d1:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4261d3:	jne    42622a <X509_get0_pubkey_bitstr@plt+0xf85a>
  4261d5:	sub    $0x1,%ebx
  4261d8:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  4261de:	mov    0x8(%rbp),%rax
  4261e2:	add    $0x8,%rbp
  4261e6:	mov    %rax,0x148(%rsp)
  4261ee:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  4261f3:	mov    (%r14),%rdi
  4261f6:	callq  413f40 <ERR_print_errors@plt>
  4261fb:	jmpq   4257e8 <X509_get0_pubkey_bitstr@plt+0xee18>
  426200:	xor    %edi,%edi
  426202:	jmpq   425bc1 <X509_get0_pubkey_bitstr@plt+0xf1f1>
  426207:	mov    (%r14),%rdi
  42620a:	lea    0x38d77(%rip),%rsi        # 45ef88 <_fini+0x1a84>
  426211:	mov    %r12,%rdx
  426214:	xor    %eax,%eax
  426216:	callq  413c40 <BIO_printf@plt>
  42621b:	jmpq   4257f4 <X509_get0_pubkey_bitstr@plt+0xee24>
  426220:	callq  412890 <ERR_clear_error@plt>
  426225:	jmpq   425ccb <X509_get0_pubkey_bitstr@plt+0xf2fb>
  42622a:	lea    0x3ad68(%rip),%rdi        # 460f99 <_fini+0x3a95>
  426231:	mov    %rax,%rsi
  426234:	mov    %r12,%rcx
  426237:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  426239:	jne    426263 <X509_get0_pubkey_bitstr@plt+0xf893>
  42623b:	sub    $0x1,%ebx
  42623e:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  426244:	mov    0x8(%rbp),%rax
  426248:	add    $0x8,%rbp
  42624c:	mov    %rax,0xa0(%rsp)
  426254:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  426259:	callq  412890 <ERR_clear_error@plt>
  42625e:	jmpq   425be5 <X509_get0_pubkey_bitstr@plt+0xf215>
  426263:	lea    0x37f75(%rip),%rdi        # 45e1df <_fini+0xcdb>
  42626a:	mov    %rax,%rsi
  42626d:	mov    %r12,%rcx
  426270:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  426272:	jne    426820 <X509_get0_pubkey_bitstr@plt+0xfe50>
  426278:	sub    $0x1,%ebx
  42627b:	mov    %r9,0xd8(%rsp)
  426283:	mov    %r8,0xd0(%rsp)
  42628b:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  426291:	mov    0x8(%rbp),%rdi
  426295:	lea    0x8(%rbp),%rax
  426299:	mov    %rax,0xc8(%rsp)
  4262a1:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  4262a6:	mov    0xc8(%rsp),%rbp
  4262ae:	mov    %eax,0x1a8(%rsp)
  4262b5:	mov    0xd0(%rsp),%r8
  4262bd:	mov    0xd8(%rsp),%r9
  4262c5:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  4262ca:	callq  412890 <ERR_clear_error@plt>
  4262cf:	jmpq   425c2d <X509_get0_pubkey_bitstr@plt+0xf25d>
  4262d4:	mov    0x25505d(%rip),%rdi        # 67b338 <_edata+0x630>
  4262db:	lea    0x3adaf(%rip),%rdx        # 461091 <_fini+0x3b8d>
  4262e2:	lea    0x456ad(%rip),%rsi        # 46b996 <_fini+0xe492>
  4262e9:	callq  413fd0 <NCONF_get_string@plt>
  4262ee:	test   %rax,%rax
  4262f1:	mov    %rax,0x255030(%rip)        # 67b328 <_edata+0x620>
  4262f8:	jne    425b51 <X509_get0_pubkey_bitstr@plt+0xf181>
  4262fe:	mov    (%r14),%rdi
  426301:	lea    0x3ad89(%rip),%rcx        # 461091 <_fini+0x3b8d>
  426308:	lea    0x45687(%rip),%rdx        # 46b996 <_fini+0xe492>
  42630f:	lea    0x3b812(%rip),%rsi        # 461b28 <_fini+0x4624>
  426316:	callq  413c40 <BIO_printf@plt>
  42631b:	jmpq   4257e8 <X509_get0_pubkey_bitstr@plt+0xee18>
  426320:	cmpq   $0x0,0xa0(%rsp)
  426329:	je     4290ba <X509_get0_pubkey_bitstr@plt+0x126ea>
  42632f:	mov    0x228(%rsp),%r8
  426337:	movl   $0x0,0xc0(%rsp)
  426342:	test   %r8,%r8
  426345:	je     428ff1 <X509_get0_pubkey_bitstr@plt+0x12621>
  42634b:	lea    0x3ae0e(%rip),%rax        # 461160 <_fini+0x3c5c>
  426352:	mov    0x1b0(%rsp),%r9
  42635a:	mov    0x1a8(%rsp),%edx
  426361:	mov    0xa0(%rsp),%rsi
  426369:	xor    %ecx,%ecx
  42636b:	mov    %rax,(%rsp)
  42636f:	mov    (%r14),%rdi
  426372:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  426377:	mov    0x228(%rsp),%r12
  42637f:	mov    %rax,0xb8(%rsp)
  426387:	test   %r12,%r12
  42638a:	je     42639f <X509_get0_pubkey_bitstr@plt+0xf9cf>
  42638c:	mov    %r12,%rdi
  42638f:	callq  413470 <strlen@plt>
  426394:	mov    %r12,%rdi
  426397:	mov    %rax,%rsi
  42639a:	callq  413ef0 <OPENSSL_cleanse@plt>
  42639f:	cmpq   $0x0,0xb8(%rsp)
  4263a8:	je     4268e7 <X509_get0_pubkey_bitstr@plt+0xff17>
  4263ae:	mov    0x198(%rsp),%eax
  4263b5:	test   %eax,%eax
  4263b7:	sete   %r12b
  4263bb:	cmpq   $0x0,0x150(%rsp)
  4263c4:	setne  0x1d0(%rsp)
  4263cc:	test   %r12b,%r12b
  4263cf:	jne    426620 <X509_get0_pubkey_bitstr@plt+0xfc50>
  4263d5:	cmpb   $0x0,0x1d0(%rsp)
  4263dd:	jne    426620 <X509_get0_pubkey_bitstr@plt+0xfc50>
  4263e3:	cmpq   $0x0,0x190(%rsp)
  4263ec:	jne    426620 <X509_get0_pubkey_bitstr@plt+0xfc50>
  4263f2:	mov    0x174(%rsp),%eax
  4263f9:	test   %eax,%eax
  4263fb:	jne    426620 <X509_get0_pubkey_bitstr@plt+0xfc50>
  426401:	movq   $0x0,0xb0(%rsp)
  42640d:	movq   $0x0,0x1c0(%rsp)
  426419:	mov    0x254f18(%rip),%rdi        # 67b338 <_edata+0x630>
  426420:	lea    0x3ad57(%rip),%rdx        # 46117e <_fini+0x3c7a>
  426427:	lea    0x45568(%rip),%rsi        # 46b996 <_fini+0xe492>
  42642e:	callq  413fd0 <NCONF_get_string@plt>
  426433:	test   %rax,%rax
  426436:	je     42685b <X509_get0_pubkey_bitstr@plt+0xfe8b>
  42643c:	movzbl (%rax),%eax
  42643f:	and    $0xffffffdf,%eax
  426442:	cmp    $0x59,%al
  426444:	jne    426450 <X509_get0_pubkey_bitstr@plt+0xfa80>
  426446:	movl   $0x1,0x254ed4(%rip)        # 67b324 <_edata+0x61c>
  426450:	mov    0x254ee1(%rip),%rdi        # 67b338 <_edata+0x630>
  426457:	lea    0x3ab84(%rip),%rdx        # 460fe2 <_fini+0x3ade>
  42645e:	lea    0x45531(%rip),%rsi        # 46b996 <_fini+0xe492>
  426465:	callq  413fd0 <NCONF_get_string@plt>
  42646a:	test   %rax,%rax
  42646d:	je     426851 <X509_get0_pubkey_bitstr@plt+0xfe81>
  426473:	movzbl (%rax),%eax
  426476:	and    $0xffffffdf,%eax
  426479:	cmp    $0x59,%al
  42647b:	jne    426487 <X509_get0_pubkey_bitstr@plt+0xfab7>
  42647d:	movl   $0x1,0x254e99(%rip)        # 67b320 <_edata+0x618>
  426487:	mov    0x254e9a(%rip),%rsi        # 67b328 <_edata+0x620>
  42648e:	mov    0x254ea3(%rip),%rdi        # 67b338 <_edata+0x630>
  426495:	lea    0x3aceb(%rip),%rdx        # 461187 <_fini+0x3c83>
  42649c:	callq  413fd0 <NCONF_get_string@plt>
  4264a1:	test   %rax,%rax
  4264a4:	mov    %rax,%r12
  4264a7:	je     4290a5 <X509_get0_pubkey_bitstr@plt+0x126d5>
  4264ad:	lea    0x258(%rsp),%rdi
  4264b5:	mov    %rax,%rsi
  4264b8:	callq  446600 <X509_get0_pubkey_bitstr@plt+0x2fc30>
  4264bd:	test   %eax,%eax
  4264bf:	movl   $0x0,0x1a8(%rsp)
  4264ca:	je     42907e <X509_get0_pubkey_bitstr@plt+0x126ae>
  4264d0:	mov    0x254e51(%rip),%rsi        # 67b328 <_edata+0x620>
  4264d7:	mov    0x254e5a(%rip),%rdi        # 67b338 <_edata+0x630>
  4264de:	lea    0x3acc7(%rip),%rdx        # 4611ac <_fini+0x3ca8>
  4264e5:	callq  413fd0 <NCONF_get_string@plt>
  4264ea:	test   %rax,%rax
  4264ed:	mov    %rax,%r12
  4264f0:	je     429095 <X509_get0_pubkey_bitstr@plt+0x126c5>
  4264f6:	lea    0x260(%rsp),%rdi
  4264fe:	mov    %rax,%rsi
  426501:	callq  4465f0 <X509_get0_pubkey_bitstr@plt+0x2fc20>
  426506:	test   %eax,%eax
  426508:	movl   $0x0,0x1a8(%rsp)
  426513:	mov    %r12,%rdx
  426516:	lea    0x3b663(%rip),%rsi        # 461b80 <_fini+0x467c>
  42651d:	je     429088 <X509_get0_pubkey_bitstr@plt+0x126b8>
  426523:	mov    0x254dfe(%rip),%rsi        # 67b328 <_edata+0x620>
  42652a:	mov    0x254e07(%rip),%rdi        # 67b338 <_edata+0x630>
  426531:	lea    0x3ac7d(%rip),%rdx        # 4611b5 <_fini+0x3cb1>
  426538:	callq  413fd0 <NCONF_get_string@plt>
  42653d:	test   %rax,%rax
  426540:	mov    %rax,%r12
  426543:	je     428f52 <X509_get0_pubkey_bitstr@plt+0x12582>
  426549:	lea    0x224(%rsp),%rdi
  426551:	mov    %rax,%rsi
  426554:	callq  446610 <X509_get0_pubkey_bitstr@plt+0x2fc40>
  426559:	test   %eax,%eax
  42655b:	mov    %r12,%rdx
  42655e:	lea    0x3b643(%rip),%rsi        # 461ba8 <_fini+0x46a4>
  426565:	je     429088 <X509_get0_pubkey_bitstr@plt+0x126b8>
  42656b:	movzbl 0x140(%rsp),%eax
  426573:	test   %al,%al
  426575:	mov    %al,0x1e8(%rsp)
  42657c:	je     426b8e <X509_get0_pubkey_bitstr@plt+0x101be>
  426582:	cmpq   $0x0,0x118(%rsp)
  42658b:	jne    426b8e <X509_get0_pubkey_bitstr@plt+0x101be>
  426591:	mov    0x254d90(%rip),%rsi        # 67b328 <_edata+0x620>
  426598:	mov    0x254d99(%rip),%rdi        # 67b338 <_edata+0x630>
  42659f:	lea    0x3ac1f(%rip),%rdx        # 4611c5 <_fini+0x3cc1>
  4265a6:	callq  413fd0 <NCONF_get_string@plt>
  4265ab:	test   %rax,%rax
  4265ae:	mov    %rax,0x118(%rsp)
  4265b6:	je     428f5c <X509_get0_pubkey_bitstr@plt+0x1258c>
  4265bc:	mov    0x118(%rsp),%rdi
  4265c4:	mov    $0x7,%esi
  4265c9:	callq  415f40 <access@plt>
  4265ce:	test   %eax,%eax
  4265d0:	je     426b79 <X509_get0_pubkey_bitstr@plt+0x101a9>
  4265d6:	mov    0x118(%rsp),%rbx
  4265de:	lea    0x3b63b(%rip),%rsi        # 461c20 <_fini+0x471c>
  4265e5:	mov    %rbx,%rdx
  4265e8:	mov    (%r14),%rdi
  4265eb:	xor    %eax,%eax
  4265ed:	callq  413c40 <BIO_printf@plt>
  4265f2:	mov    %rbx,%rdi
  4265f5:	callq  4142c0 <perror@plt>
  4265fa:	xor    %r15d,%r15d
  4265fd:	xor    %ebx,%ebx
  4265ff:	movq   $0x0,0xa0(%rsp)
  42660b:	xor    %ebp,%ebp
  42660d:	mov    $0x1,%r12d
  426613:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  426618:	nopl   0x0(%rax,%rax,1)
  426620:	cmpq   $0x0,0x180(%rsp)
  426629:	je     42689f <X509_get0_pubkey_bitstr@plt+0xfecf>
  42662f:	mov    (%r14),%rdi
  426632:	mov    0x1b0(%rsp),%r8
  42663a:	lea    0x3ab2e(%rip),%r9        # 46116f <_fini+0x3c6b>
  426641:	mov    0x180(%rsp),%rsi
  426649:	xor    %ecx,%ecx
  42664b:	mov    $0x3,%edx
  426650:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  426655:	test   %rax,%rax
  426658:	mov    %rax,%rdi
  42665b:	mov    %rax,0xb0(%rsp)
  426663:	je     4265fa <X509_get0_pubkey_bitstr@plt+0xfc2a>
  426665:	mov    0xb8(%rsp),%rsi
  42666d:	callq  416430 <X509_check_private_key@plt>
  426672:	test   %eax,%eax
  426674:	je     429122 <X509_get0_pubkey_bitstr@plt+0x12752>
  42667a:	mov    0xb0(%rsp),%rax
  426682:	test   %r12b,%r12b
  426685:	mov    %rax,0x1c0(%rsp)
  42668d:	jne    426419 <X509_get0_pubkey_bitstr@plt+0xfa49>
  426693:	jmpq   42640d <X509_get0_pubkey_bitstr@plt+0xfa3d>
  426698:	mov    0xb0(%rsp),%rdi
  4266a0:	movq   $0x0,0x2b0(%rsp)
  4266ac:	movq   $0x0,0x2b8(%rsp)
  4266b8:	movq   $0x0,0x2c0(%rsp)
  4266c4:	movq   $0x0,0x2c8(%rsp)
  4266d0:	movq   $0x0,0x2d0(%rsp)
  4266dc:	movq   $0x0,0x2d8(%rsp)
  4266e8:	callq  413470 <strlen@plt>
  4266ed:	lea    0x3a5f6(%rip),%rsi        # 460cea <_fini+0x37e6>
  4266f4:	lea    0x2(%rax),%edi
  4266f7:	mov    $0x9eb,%edx
  4266fc:	callq  413d50 <CRYPTO_malloc@plt>
  426701:	test   %rax,%rax
  426704:	mov    %rax,%rbx
  426707:	mov    %rax,0x2c8(%rsp)
  42670f:	je     426940 <X509_get0_pubkey_bitstr@plt+0xff70>
  426715:	mov    0xb0(%rsp),%rdi
  42671d:	callq  413470 <strlen@plt>
  426722:	test   $0x1,%al
  426724:	je     426911 <X509_get0_pubkey_bitstr@plt+0xff41>
  42672a:	movb   $0x30,(%rbx)
  42672d:	mov    0xb0(%rsp),%rbx
  426735:	mov    %rbx,%rdi
  426738:	callq  413470 <strlen@plt>
  42673d:	mov    0x2c8(%rsp),%rsi
  426745:	mov    %rax,%rdx
  426748:	lea    0x1(%rsi),%rdi
  42674c:	mov    %rbx,%rsi
  42674f:	callq  414250 <memcpy@plt>
  426754:	mov    %rbx,%rdi
  426757:	callq  413470 <strlen@plt>
  42675c:	mov    0x2c8(%rsp),%rdx
  426764:	movb   $0x0,0x1(%rdx,%rax,1)
  426769:	mov    0x2c8(%rsp),%rbp
  426771:	movzbl 0x0(%rbp),%ebx
  426775:	test   %bl,%bl
  426777:	je     4267a3 <X509_get0_pubkey_bitstr@plt+0xfdd3>
  426779:	callq  412a10 <__ctype_toupper_loc@plt>
  42677e:	mov    $0x1,%edx
  426783:	mov    (%rax),%rcx
  426786:	mov    (%rcx,%rbx,4),%ecx
  426789:	mov    %cl,0x0(%rbp)
  42678c:	mov    %rdx,%rbp
  42678f:	add    0x2c8(%rsp),%rbp
  426797:	add    $0x1,%rdx
  42679b:	movzbl 0x0(%rbp),%ebx
  42679f:	test   %bl,%bl
  4267a1:	jne    426783 <X509_get0_pubkey_bitstr@plt+0xfdb3>
  4267a3:	mov    0xa0(%rsp),%rax
  4267ab:	lea    0x2b0(%rsp),%rbx
  4267b3:	mov    $0x3,%esi
  4267b8:	mov    %rbx,%rdx
  4267bb:	mov    0x8(%rax),%rdi
  4267bf:	callq  413420 <TXT_DB_get_by_index@plt>
  4267c4:	test   %rax,%rax
  4267c7:	je     426adf <X509_get0_pubkey_bitstr@plt+0x1010f>
  4267cd:	mov    (%rax),%rax
  4267d0:	movzbl (%rax),%eax
  4267d3:	cmp    $0x56,%al
  4267d5:	je     426ab6 <X509_get0_pubkey_bitstr@plt+0x100e6>
  4267db:	cmp    $0x52,%al
  4267dd:	je     426a8d <X509_get0_pubkey_bitstr@plt+0x100bd>
  4267e3:	cmp    $0x45,%al
  4267e5:	je     426a64 <X509_get0_pubkey_bitstr@plt+0x10094>
  4267eb:	cmp    $0x53,%al
  4267ed:	nopl   (%rax)
  4267f0:	jne    4269d7 <X509_get0_pubkey_bitstr@plt+0x10007>
  4267f6:	mov    0x2c8(%rsp),%rdx
  4267fe:	mov    (%r14),%rdi
  426801:	lea    0x3a90b(%rip),%rsi        # 461113 <_fini+0x3c0f>
  426808:	mov    $0x53,%ecx
  42680d:	xor    %eax,%eax
  42680f:	mov    $0x1,%r12d
  426815:	callq  413c40 <BIO_printf@plt>
  42681a:	jmpq   42695f <X509_get0_pubkey_bitstr@plt+0xff8f>
  42681f:	nop
  426820:	lea    0x379c9(%rip),%rdi        # 45e1f0 <_fini+0xcec>
  426827:	mov    $0x8,%ecx
  42682c:	mov    %rax,%rsi
  42682f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  426831:	jne    42686a <X509_get0_pubkey_bitstr@plt+0xfe9a>
  426833:	sub    $0x1,%ebx
  426836:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  42683c:	mov    0x8(%rbp),%rax
  426840:	add    $0x8,%rbp
  426844:	mov    %rax,0xb8(%rsp)
  42684c:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  426851:	callq  412890 <ERR_clear_error@plt>
  426856:	jmpq   426487 <X509_get0_pubkey_bitstr@plt+0xfab7>
  42685b:	nopl   0x0(%rax,%rax,1)
  426860:	callq  412890 <ERR_clear_error@plt>
  426865:	jmpq   426450 <X509_get0_pubkey_bitstr@plt+0xfa80>
  42686a:	lea    0x37954(%rip),%rdi        # 45e1c5 <_fini+0xcc1>
  426871:	mov    $0x5,%ecx
  426876:	mov    %rax,%rsi
  426879:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42687b:	jne    4269a6 <X509_get0_pubkey_bitstr@plt+0xffd6>
  426881:	sub    $0x1,%ebx
  426884:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  42688a:	mov    0x8(%rbp),%rax
  42688e:	add    $0x8,%rbp
  426892:	mov    %rax,0x228(%rsp)
  42689a:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  42689f:	mov    0x254a82(%rip),%rsi        # 67b328 <_edata+0x620>
  4268a6:	mov    0x254a8b(%rip),%rdi        # 67b338 <_edata+0x630>
  4268ad:	lea    0x3a8be(%rip),%rdx        # 461172 <_fini+0x3c6e>
  4268b4:	callq  413fd0 <NCONF_get_string@plt>
  4268b9:	test   %rax,%rax
  4268bc:	mov    %rax,0x180(%rsp)
  4268c4:	jne    42662f <X509_get0_pubkey_bitstr@plt+0xfc5f>
  4268ca:	mov    0x254a57(%rip),%rdx        # 67b328 <_edata+0x620>
  4268d1:	mov    (%r14),%rdi
  4268d4:	lea    0x3a897(%rip),%rcx        # 461172 <_fini+0x3c6e>
  4268db:	lea    0x3b246(%rip),%rsi        # 461b28 <_fini+0x4624>
  4268e2:	callq  413c40 <BIO_printf@plt>
  4268e7:	xor    %r15d,%r15d
  4268ea:	xor    %ebx,%ebx
  4268ec:	movq   $0x0,0xa0(%rsp)
  4268f8:	movq   $0x0,0xb0(%rsp)
  426904:	xor    %ebp,%ebp
  426906:	mov    $0x1,%r12d
  42690c:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  426911:	mov    0xb0(%rsp),%r15
  426919:	mov    %rax,%rdx
  42691c:	mov    %rbx,%rdi
  42691f:	mov    %r15,%rsi
  426922:	callq  414250 <memcpy@plt>
  426927:	mov    %r15,%rdi
  42692a:	callq  413470 <strlen@plt>
  42692f:	mov    0x2c8(%rsp),%rdx
  426937:	movb   $0x0,(%rdx,%rax,1)
  42693b:	jmpq   426769 <X509_get0_pubkey_bitstr@plt+0xfd99>
  426940:	mov    (%r14),%rdi
  426943:	lea    0x3a76a(%rip),%rsi        # 4610b4 <_fini+0x3bb0>
  42694a:	lea    0x2b0(%rsp),%rbx
  426952:	xor    %eax,%eax
  426954:	mov    $0xffffffff,%r12d
  42695a:	callq  413c40 <BIO_printf@plt>
  42695f:	lea    0x30(%rbx),%rbp
  426963:	mov    (%rbx),%rdi
  426966:	test   %rdi,%rdi
  426969:	je     426970 <X509_get0_pubkey_bitstr@plt+0xffa0>
  42696b:	callq  415020 <CRYPTO_free@plt>
  426970:	add    $0x8,%rbx
  426974:	cmp    %rbp,%rbx
  426977:	jne    426963 <X509_get0_pubkey_bitstr@plt+0xff93>
  426979:	cmp    $0x1,%r12d
  42697d:	je     425db8 <X509_get0_pubkey_bitstr@plt+0xf3e8>
  426983:	mov    0xb0(%rsp),%rdx
  42698b:	mov    (%r14),%rdi
  42698e:	lea    0x3a7a3(%rip),%rsi        # 461138 <_fini+0x3c34>
  426995:	xor    %eax,%eax
  426997:	xor    %r15d,%r15d
  42699a:	xor    %ebx,%ebx
  42699c:	callq  413c40 <BIO_printf@plt>
  4269a1:	jmpq   425835 <X509_get0_pubkey_bitstr@plt+0xee65>
  4269a6:	lea    0x3a5f5(%rip),%rdi        # 460fa2 <_fini+0x3a9e>
  4269ad:	mov    $0x6,%ecx
  4269b2:	mov    %rax,%rsi
  4269b5:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4269b7:	jne    4269fe <X509_get0_pubkey_bitstr@plt+0x1002e>
  4269b9:	sub    $0x1,%ebx
  4269bc:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  4269c2:	mov    0x8(%rbp),%rax
  4269c6:	add    $0x8,%rbp
  4269ca:	mov    %rax,0x180(%rsp)
  4269d2:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  4269d7:	mov    0x2c8(%rsp),%rdx
  4269df:	mov    (%r14),%rdi
  4269e2:	lea    0x3a73d(%rip),%rsi        # 461126 <_fini+0x3c22>
  4269e9:	movsbl %al,%ecx
  4269ec:	xor    %eax,%eax
  4269ee:	mov    $0xffffffff,%r12d
  4269f4:	callq  413c40 <BIO_printf@plt>
  4269f9:	jmpq   42695f <X509_get0_pubkey_bitstr@plt+0xff8f>
  4269fe:	lea    0x3a5a3(%rip),%rdi        # 460fa8 <_fini+0x3aa4>
  426a05:	mov    $0xa,%ecx
  426a0a:	mov    %rax,%rsi
  426a0d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  426a0f:	je     426b34 <X509_get0_pubkey_bitstr@plt+0x10164>
  426a15:	test   %edx,%edx
  426a17:	jne    426b03 <X509_get0_pubkey_bitstr@plt+0x10133>
  426a1d:	cmpb   $0x69,0x1(%rax)
  426a21:	jne    426b03 <X509_get0_pubkey_bitstr@plt+0x10133>
  426a27:	cmpb   $0x6e,0x2(%rax)
  426a2b:	jne    426b03 <X509_get0_pubkey_bitstr@plt+0x10133>
  426a31:	cmpb   $0x0,0x3(%rax)
  426a35:	jne    426b03 <X509_get0_pubkey_bitstr@plt+0x10133>
  426a3b:	sub    $0x1,%ebx
  426a3e:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  426a44:	mov    0x8(%rbp),%rax
  426a48:	movl   $0x1,0x140(%rsp)
  426a53:	add    $0x8,%rbp
  426a57:	mov    %rax,0x158(%rsp)
  426a5f:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  426a64:	mov    0x2c8(%rsp),%rdx
  426a6c:	mov    (%r14),%rdi
  426a6f:	lea    0x3a68c(%rip),%rsi        # 461102 <_fini+0x3bfe>
  426a76:	mov    $0x45,%ecx
  426a7b:	xor    %eax,%eax
  426a7d:	mov    $0x1,%r12d
  426a83:	callq  413c40 <BIO_printf@plt>
  426a88:	jmpq   42695f <X509_get0_pubkey_bitstr@plt+0xff8f>
  426a8d:	mov    0x2c8(%rsp),%rdx
  426a95:	mov    (%r14),%rdi
  426a98:	lea    0x3a652(%rip),%rsi        # 4610f1 <_fini+0x3bed>
  426a9f:	mov    $0x52,%ecx
  426aa4:	xor    %eax,%eax
  426aa6:	mov    $0x1,%r12d
  426aac:	callq  413c40 <BIO_printf@plt>
  426ab1:	jmpq   42695f <X509_get0_pubkey_bitstr@plt+0xff8f>
  426ab6:	mov    0x2c8(%rsp),%rdx
  426abe:	mov    (%r14),%rdi
  426ac1:	lea    0x3a61a(%rip),%rsi        # 4610e2 <_fini+0x3bde>
  426ac8:	mov    $0x56,%ecx
  426acd:	xor    %eax,%eax
  426acf:	mov    $0x1,%r12d
  426ad5:	callq  413c40 <BIO_printf@plt>
  426ada:	jmpq   42695f <X509_get0_pubkey_bitstr@plt+0xff8f>
  426adf:	mov    0x2c8(%rsp),%rdx
  426ae7:	mov    (%r14),%rdi
  426aea:	lea    0x3a5d3(%rip),%rsi        # 4610c4 <_fini+0x3bc0>
  426af1:	xor    %eax,%eax
  426af3:	mov    $0xffffffff,%r12d
  426af9:	callq  413c40 <BIO_printf@plt>
  426afe:	jmpq   42695f <X509_get0_pubkey_bitstr@plt+0xff8f>
  426b03:	lea    0x3733c(%rip),%rdi        # 45de46 <_fini+0x942>
  426b0a:	mov    $0x5,%ecx
  426b0f:	mov    %rax,%rsi
  426b12:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  426b14:	jne    426b44 <X509_get0_pubkey_bitstr@plt+0x10174>
  426b16:	sub    $0x1,%ebx
  426b19:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  426b1f:	mov    0x8(%rbp),%rax
  426b23:	add    $0x8,%rbp
  426b27:	mov    %rax,0x188(%rsp)
  426b2f:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  426b34:	movl   $0x1,0x198(%rsp)
  426b3f:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  426b44:	lea    0x3a467(%rip),%rdi        # 460fb2 <_fini+0x3aae>
  426b4b:	mov    $0x8,%ecx
  426b50:	mov    %rax,%rsi
  426b53:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  426b55:	jne    428f70 <X509_get0_pubkey_bitstr@plt+0x125a0>
  426b5b:	sub    $0x1,%ebx
  426b5e:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  426b64:	mov    0x8(%rbp),%rax
  426b68:	add    $0x8,%rbp
  426b6c:	mov    %rax,0x118(%rsp)
  426b74:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  426b79:	mov    0x118(%rsp),%rdi
  426b81:	callq  4489e0 <X509_get0_pubkey_bitstr@plt+0x32010>
  426b86:	test   %eax,%eax
  426b88:	jle    428f3b <X509_get0_pubkey_bitstr@plt+0x1256b>
  426b8e:	mov    0x254793(%rip),%rsi        # 67b328 <_edata+0x620>
  426b95:	mov    0x25479c(%rip),%rdi        # 67b338 <_edata+0x630>
  426b9c:	lea    0x3a508(%rip),%rdx        # 4610ab <_fini+0x3ba7>
  426ba3:	callq  413fd0 <NCONF_get_string@plt>
  426ba8:	test   %rax,%rax
  426bab:	mov    %rax,0x180(%rsp)
  426bb3:	je     426d55 <X509_get0_pubkey_bitstr@plt+0x10385>
  426bb9:	mov    0x180(%rsp),%rdi
  426bc1:	lea    0x220(%rsp),%rsi
  426bc9:	callq  447900 <X509_get0_pubkey_bitstr@plt+0x30f30>
  426bce:	test   %rax,%rax
  426bd1:	mov    %rax,0xa0(%rsp)
  426bd9:	je     426d4b <X509_get0_pubkey_bitstr@plt+0x1037b>
  426bdf:	xor    %r12d,%r12d
  426be2:	mov    %ebx,0x1b8(%rsp)
  426be9:	mov    0xa0(%rsp),%rax
  426bf1:	mov    0x8(%rax),%rax
  426bf5:	mov    0x8(%rax),%rdi
  426bf9:	callq  4156d0 <sk_num@plt>
  426bfe:	cmp    %eax,%r12d
  426c01:	jge    426d9b <X509_get0_pubkey_bitstr@plt+0x103cb>
  426c07:	mov    0xa0(%rsp),%rax
  426c0f:	mov    %r12d,%esi
  426c12:	mov    0x8(%rax),%rax
  426c16:	mov    0x8(%rax),%rdi
  426c1a:	callq  412b30 <sk_value@plt>
  426c1f:	mov    %rax,%rbx
  426c22:	mov    (%rax),%rax
  426c25:	cmpb   $0x52,(%rax)
  426c28:	je     426d77 <X509_get0_pubkey_bitstr@plt+0x103a7>
  426c2e:	mov    0x10(%rbx),%rax
  426c32:	cmpb   $0x0,(%rax)
  426c35:	jne    426d35 <X509_get0_pubkey_bitstr@plt+0x10365>
  426c3b:	mov    0x8(%rbx),%rsi
  426c3f:	xor    %edi,%edi
  426c41:	callq  4148f0 <ASN1_TIME_set_string@plt>
  426c46:	test   %eax,%eax
  426c48:	je     426d0f <X509_get0_pubkey_bitstr@plt+0x1033f>
  426c4e:	mov    0x18(%rbx),%rsi
  426c52:	mov    %rsi,%rdi
  426c55:	mov    %rsi,0x1c8(%rsp)
  426c5d:	callq  413470 <strlen@plt>
  426c62:	mov    0x1c8(%rsp),%rsi
  426c6a:	mov    %eax,%ecx
  426c6c:	cmpb   $0x2d,(%rsi)
  426c6f:	mov    %rsi,%rdx
  426c72:	jne    426c7b <X509_get0_pubkey_bitstr@plt+0x102ab>
  426c74:	lea    0x1(%rsi),%rdx
  426c78:	lea    -0x1(%rax),%ecx
  426c7b:	test   $0x1,%cl
  426c7e:	jne    426ce7 <X509_get0_pubkey_bitstr@plt+0x10317>
  426c80:	cmp    $0x1,%ecx
  426c83:	jle    426ce7 <X509_get0_pubkey_bitstr@plt+0x10317>
  426c85:	movsbl (%rdx),%r8d
  426c89:	test   %r8b,%r8b
  426c8c:	je     426cde <X509_get0_pubkey_bitstr@plt+0x1030e>
  426c8e:	mov    %r8d,%eax
  426c91:	and    $0xffffffdf,%eax
  426c94:	sub    $0x41,%eax
  426c97:	cmp    $0x5,%al
  426c99:	jbe    426cd8 <X509_get0_pubkey_bitstr@plt+0x10308>
  426c9b:	lea    -0x30(%r8),%eax
  426c9f:	cmp    $0x9,%al
  426ca1:	jbe    426cd8 <X509_get0_pubkey_bitstr@plt+0x10308>
  426ca3:	sub    %rsi,%rdx
  426ca6:	mov    (%r14),%rdi
  426ca9:	lea    0x3b020(%rip),%rsi        # 461cd0 <_fini+0x47cc>
  426cb0:	mov    %rdx,%rcx
  426cb3:	lea    0x1(%r12),%edx
  426cb8:	xor    %eax,%eax
  426cba:	xor    %r15d,%r15d
  426cbd:	xor    %ebx,%ebx
  426cbf:	xor    %ebp,%ebp
  426cc1:	callq  413c40 <BIO_printf@plt>
  426cc6:	mov    $0x1,%r12d
  426ccc:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  426cd1:	nopl   0x0(%rax)
  426cd8:	add    $0x1,%rdx
  426cdc:	jmp    426c85 <X509_get0_pubkey_bitstr@plt+0x102b5>
  426cde:	add    $0x1,%r12d
  426ce2:	jmpq   426be9 <X509_get0_pubkey_bitstr@plt+0x10219>
  426ce7:	mov    (%r14),%rdi
  426cea:	lea    0x1(%r12),%edx
  426cef:	lea    0x3afaa(%rip),%rsi        # 461ca0 <_fini+0x479c>
  426cf6:	xor    %eax,%eax
  426cf8:	xor    %r15d,%r15d
  426cfb:	xor    %ebx,%ebx
  426cfd:	xor    %ebp,%ebp
  426cff:	mov    $0x1,%r12d
  426d05:	callq  413c40 <BIO_printf@plt>
  426d0a:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  426d0f:	mov    (%r14),%rdi
  426d12:	lea    0x1(%r12),%edx
  426d17:	lea    0x3af62(%rip),%rsi        # 461c80 <_fini+0x477c>
  426d1e:	xor    %r15d,%r15d
  426d21:	xor    %ebx,%ebx
  426d23:	xor    %ebp,%ebp
  426d25:	mov    $0x1,%r12d
  426d2b:	callq  413c40 <BIO_printf@plt>
  426d30:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  426d35:	mov    (%r14),%rdi
  426d38:	lea    0x1(%r12),%edx
  426d3d:	lea    0x3af04(%rip),%rsi        # 461c48 <_fini+0x4744>
  426d44:	xor    %eax,%eax
  426d46:	callq  413c40 <BIO_printf@plt>
  426d4b:	xor    %r15d,%r15d
  426d4e:	xor    %ebx,%ebx
  426d50:	jmpq   42660b <X509_get0_pubkey_bitstr@plt+0xfc3b>
  426d55:	mov    0x2545cc(%rip),%rdx        # 67b328 <_edata+0x620>
  426d5c:	mov    (%r14),%rdi
  426d5f:	lea    0x3a345(%rip),%rcx        # 4610ab <_fini+0x3ba7>
  426d66:	lea    0x3adbb(%rip),%rsi        # 461b28 <_fini+0x4624>
  426d6d:	callq  413c40 <BIO_printf@plt>
  426d72:	jmpq   4265fa <X509_get0_pubkey_bitstr@plt+0xfc2a>
  426d77:	mov    0x10(%rbx),%rsi
  426d7b:	xor    %edi,%edi
  426d7d:	callq  4252b0 <X509_get0_pubkey_bitstr@plt+0xe8e0>
  426d82:	test   %eax,%eax
  426d84:	jne    426c3b <X509_get0_pubkey_bitstr@plt+0x1026b>
  426d8a:	lea    0x1(%r12),%edx
  426d8f:	lea    0x3a458(%rip),%rsi        # 4611ee <_fini+0x3cea>
  426d96:	mov    (%r14),%rdi
  426d99:	jmp    426d46 <X509_get0_pubkey_bitstr@plt+0x10376>
  426d9b:	test   %r13d,%r13d
  426d9e:	mov    0x1b8(%rsp),%ebx
  426da5:	je     426e14 <X509_get0_pubkey_bitstr@plt+0x10444>
  426da7:	mov    0x24f10a(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  426dae:	mov    0xd8(%rsp),%rdi
  426db6:	mov    $0x10,%edx
  426dbb:	mov    $0x6a,%esi
  426dc0:	mov    (%rax),%rcx
  426dc3:	callq  412af0 <BIO_ctrl@plt>
  426dc8:	mov    0xa0(%rsp),%r12
  426dd0:	mov    0xd8(%rsp),%rdi
  426dd8:	mov    0x8(%r12),%rsi
  426ddd:	callq  4133a0 <TXT_DB_write@plt>
  426de2:	mov    0x8(%r12),%rax
  426de7:	mov    0x8(%rax),%rdi
  426deb:	callq  4156d0 <sk_num@plt>
  426df0:	mov    (%r14),%rdi
  426df3:	lea    0x3af1e(%rip),%rsi        # 461d18 <_fini+0x4814>
  426dfa:	mov    %eax,%edx
  426dfc:	xor    %eax,%eax
  426dfe:	callq  413c40 <BIO_printf@plt>
  426e03:	mov    (%r14),%rdi
  426e06:	lea    0x3a3ef(%rip),%rsi        # 4611fc <_fini+0x3cf8>
  426e0d:	xor    %eax,%eax
  426e0f:	callq  413c40 <BIO_printf@plt>
  426e14:	mov    0xa0(%rsp),%rdi
  426e1c:	callq  447250 <X509_get0_pubkey_bitstr@plt+0x30880>
  426e21:	test   %eax,%eax
  426e23:	je     426d4b <X509_get0_pubkey_bitstr@plt+0x1037b>
  426e29:	mov    0x1a0(%rsp),%eax
  426e30:	test   %eax,%eax
  426e32:	je     426fa7 <X509_get0_pubkey_bitstr@plt+0x105d7>
  426e38:	test   %r13d,%r13d
  426e3b:	je     426e56 <X509_get0_pubkey_bitstr@plt+0x10486>
  426e3d:	mov    0x180(%rsp),%rdx
  426e45:	mov    (%r14),%rdi
  426e48:	lea    0x3a3bf(%rip),%rsi        # 46120e <_fini+0x3d0a>
  426e4f:	xor    %eax,%eax
  426e51:	callq  413c40 <BIO_printf@plt>
  426e56:	callq  4139b0 <ASN1_UTCTIME_new@plt>
  426e5b:	xor    %esi,%esi
  426e5d:	mov    %rax,%rdi
  426e60:	callq  4164f0 <X509_gmtime_adj@plt>
  426e65:	mov    %rax,%r12
  426e68:	mov    (%rax),%eax
  426e6a:	lea    0x39e79(%rip),%rsi        # 460cea <_fini+0x37e6>
  426e71:	mov    $0xa44,%edx
  426e76:	lea    0x1(%rax),%edi
  426e79:	callq  413d50 <CRYPTO_malloc@plt>
  426e7e:	test   %rax,%rax
  426e81:	mov    %rax,0x1a0(%rsp)
  426e89:	je     428f20 <X509_get0_pubkey_bitstr@plt+0x12550>
  426e8f:	movslq (%r12),%rdx
  426e93:	mov    0x8(%r12),%rsi
  426e98:	mov    %rax,%rdi
  426e9b:	callq  414250 <memcpy@plt>
  426ea0:	movslq (%r12),%rax
  426ea4:	mov    0x1a0(%rsp),%rsi
  426eac:	lea    0x3a36c(%rip),%rdi        # 46121f <_fini+0x3d1b>
  426eb3:	mov    $0x2,%ecx
  426eb8:	movl   $0x0,0x1b8(%rsp)
  426ec3:	movl   $0x0,0x1c8(%rsp)
  426ece:	movb   $0x0,(%rsi,%rax,1)
  426ed2:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  426ed4:	seta   %al
  426ed7:	setb   %dl
  426eda:	sub    %edx,%eax
  426edc:	test   %al,%al
  426ede:	setle  %al
  426ee1:	movzbl %al,%eax
  426ee4:	mov    %eax,0x1e0(%rsp)
  426eeb:	mov    0xa0(%rsp),%rax
  426ef3:	mov    0x8(%rax),%rax
  426ef7:	mov    0x8(%rax),%rdi
  426efb:	callq  4156d0 <sk_num@plt>
  426f00:	cmp    %eax,0x1c8(%rsp)
  426f07:	jge    428edd <X509_get0_pubkey_bitstr@plt+0x1250d>
  426f0d:	mov    0xa0(%rsp),%rax
  426f15:	mov    0x1c8(%rsp),%esi
  426f1c:	mov    0x8(%rax),%rax
  426f20:	mov    0x8(%rax),%rdi
  426f24:	callq  412b30 <sk_value@plt>
  426f29:	mov    (%rax),%r8
  426f2c:	mov    %rax,%rdx
  426f2f:	cmpb   $0x56,(%r8)
  426f33:	je     428e28 <X509_get0_pubkey_bitstr@plt+0x12458>
  426f39:	addl   $0x1,0x1c8(%rsp)
  426f41:	jmp    426eeb <X509_get0_pubkey_bitstr@plt+0x1051b>
  426f43:	mov    0xa0(%rsp),%rdx
  426f4b:	mov    0x180(%rsp),%rdi
  426f53:	lea    0x37279(%rip),%rsi        # 45e1d3 <_fini+0xccf>
  426f5a:	callq  447330 <X509_get0_pubkey_bitstr@plt+0x30960>
  426f5f:	test   %eax,%eax
  426f61:	je     426d4b <X509_get0_pubkey_bitstr@plt+0x1037b>
  426f67:	mov    0x180(%rsp),%rdi
  426f6f:	lea    0x3a494(%rip),%rdx        # 46140a <_fini+0x3f06>
  426f76:	lea    0x37256(%rip),%rsi        # 45e1d3 <_fini+0xccf>
  426f7d:	callq  447580 <X509_get0_pubkey_bitstr@plt+0x30bb0>
  426f82:	test   %eax,%eax
  426f84:	je     426d4b <X509_get0_pubkey_bitstr@plt+0x1037b>
  426f8a:	test   %r13d,%r13d
  426f8d:	je     426fa7 <X509_get0_pubkey_bitstr@plt+0x105d7>
  426f8f:	mov    0x1b8(%rsp),%edx
  426f96:	mov    (%r14),%rdi
  426f99:	lea    0x3adc8(%rip),%rsi        # 461d68 <_fini+0x4864>
  426fa0:	xor    %eax,%eax
  426fa2:	callq  413c40 <BIO_printf@plt>
  426fa7:	mov    0x160(%rsp),%r12
  426faf:	test   %r12,%r12
  426fb2:	je     42703d <X509_get0_pubkey_bitstr@plt+0x1066d>
  426fb8:	xor    %edi,%edi
  426fba:	callq  413cd0 <NCONF_new@plt>
  426fbf:	mov    0x1d8(%rsp),%rdx
  426fc7:	mov    %r12,%rsi
  426fca:	mov    %rax,%rdi
  426fcd:	mov    %rax,0x25435c(%rip)        # 67b330 <_edata+0x628>
  426fd4:	callq  414c50 <NCONF_load@plt>
  426fd9:	test   %eax,%eax
  426fdb:	jle    428e02 <X509_get0_pubkey_bitstr@plt+0x12432>
  426fe1:	test   %r13d,%r13d
  426fe4:	je     426fff <X509_get0_pubkey_bitstr@plt+0x1062f>
  426fe6:	mov    0x160(%rsp),%rdx
  426fee:	mov    (%r14),%rdi
  426ff1:	lea    0x3ade8(%rip),%rsi        # 461de0 <_fini+0x48dc>
  426ff8:	xor    %eax,%eax
  426ffa:	callq  413c40 <BIO_printf@plt>
  426fff:	cmpq   $0x0,0x100(%rsp)
  427008:	jne    42703d <X509_get0_pubkey_bitstr@plt+0x1066d>
  42700a:	mov    0x25431f(%rip),%rdi        # 67b330 <_edata+0x628>
  427011:	lea    0x43fde(%rip),%rsi        # 46aff6 <_fini+0xdaf2>
  427018:	lea    0x3728d(%rip),%rdx        # 45e2ac <_fini+0xda8>
  42701f:	callq  413fd0 <NCONF_get_string@plt>
  427024:	mov    %rax,%rsi
  427027:	test   %rax,%rax
  42702a:	lea    0x43fc5(%rip),%rax        # 46aff6 <_fini+0xdaf2>
  427031:	cmovne %rsi,%rax
  427035:	mov    %rax,0x100(%rsp)
  42703d:	mov    0x140(%rsp),%eax
  427044:	or     0x174(%rsp),%eax
  42704b:	je     42707e <X509_get0_pubkey_bitstr@plt+0x106ae>
  42704d:	mov    0x188(%rsp),%rcx
  427055:	test   %rcx,%rcx
  427058:	je     428ddc <X509_get0_pubkey_bitstr@plt+0x1240c>
  42705e:	mov    0xc8(%rsp),%rdi
  427066:	mov    $0x5,%edx
  42706b:	mov    $0x6c,%esi
  427070:	callq  412af0 <BIO_ctrl@plt>
  427075:	test   %rax,%rax
  427078:	jle    428dbd <X509_get0_pubkey_bitstr@plt+0x123ed>
  42707e:	cmpq   $0x0,0x128(%rsp)
  427087:	je     428b27 <X509_get0_pubkey_bitstr@plt+0x12157>
  42708d:	mov    0x128(%rsp),%rsi
  427095:	lea    0x43f5a(%rip),%rdi        # 46aff6 <_fini+0xdaf2>
  42709c:	mov    $0x8,%ecx
  4270a1:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4270a3:	jne    4270d6 <X509_get0_pubkey_bitstr@plt+0x10706>
  4270a5:	mov    0xb8(%rsp),%rdi
  4270ad:	lea    0x270(%rsp),%rsi
  4270b5:	callq  415f00 <EVP_PKEY_get_default_digest_nid@plt>
  4270ba:	test   %eax,%eax
  4270bc:	jle    428d9c <X509_get0_pubkey_bitstr@plt+0x123cc>
  4270c2:	mov    0x270(%rsp),%edi
  4270c9:	callq  415b30 <OBJ_nid2sn@plt>
  4270ce:	mov    %rax,0x128(%rsp)
  4270d6:	mov    0x128(%rsp),%rdi
  4270de:	callq  416720 <EVP_get_digestbyname@plt>
  4270e3:	test   %rax,%rax
  4270e6:	mov    %rax,0x140(%rsp)
  4270ee:	je     428c4b <X509_get0_pubkey_bitstr@plt+0x1227b>
  4270f4:	cmpb   $0x0,0x1e8(%rsp)
  4270fc:	je     428d94 <X509_get0_pubkey_bitstr@plt+0x123c4>
  427102:	cmpl   $0x1,0x138(%rsp)
  42710a:	je     428d49 <X509_get0_pubkey_bitstr@plt+0x12379>
  427110:	test   %r13d,%r13d
  427113:	je     427138 <X509_get0_pubkey_bitstr@plt+0x10768>
  427115:	mov    0x140(%rsp),%rax
  42711d:	mov    (%rax),%edi
  42711f:	callq  413920 <OBJ_nid2ln@plt>
  427124:	mov    (%r14),%rdi
  427127:	lea    0x3a11f(%rip),%rsi        # 46124d <_fini+0x3d49>
  42712e:	mov    %rax,%rdx
  427131:	xor    %eax,%eax
  427133:	callq  413c40 <BIO_printf@plt>
  427138:	cmpq   $0x0,0x148(%rsp)
  427141:	je     428d12 <X509_get0_pubkey_bitstr@plt+0x12342>
  427147:	test   %r13d,%r13d
  42714a:	je     427165 <X509_get0_pubkey_bitstr@plt+0x10795>
  42714c:	mov    0x148(%rsp),%rdx
  427154:	mov    (%r14),%rdi
  427157:	lea    0x3a105(%rip),%rsi        # 461263 <_fini+0x3d5f>
  42715e:	xor    %eax,%eax
  427160:	callq  413c40 <BIO_printf@plt>
  427165:	mov    0x2541bc(%rip),%rsi        # 67b328 <_edata+0x620>
  42716c:	mov    0x2541c5(%rip),%rdi        # 67b338 <_edata+0x630>
  427173:	lea    0x3e97b(%rip),%rdx        # 465af5 <_fini+0x85f1>
  42717a:	callq  413fd0 <NCONF_get_string@plt>
  42717f:	test   %rax,%rax
  427182:	mov    %rax,0x1a0(%rsp)
  42718a:	lea    0x3e964(%rip),%rcx        # 465af5 <_fini+0x85f1>
  427191:	je     428b59 <X509_get0_pubkey_bitstr@plt+0x12189>
  427197:	cmpq   $0x0,0x254191(%rip)        # 67b330 <_edata+0x628>
  42719f:	je     428aab <X509_get0_pubkey_bitstr@plt+0x120db>
  4271a5:	cmpq   $0x0,0x110(%rsp)
  4271ae:	je     428a67 <X509_get0_pubkey_bitstr@plt+0x12097>
  4271b4:	mov    0x110(%rsp),%rsi
  4271bc:	xor    %edi,%edi
  4271be:	callq  4148f0 <ASN1_TIME_set_string@plt>
  4271c3:	test   %eax,%eax
  4271c5:	je     428a5b <X509_get0_pubkey_bitstr@plt+0x1208b>
  4271cb:	cmpq   $0x0,0x120(%rsp)
  4271d4:	je     428a26 <X509_get0_pubkey_bitstr@plt+0x12056>
  4271da:	mov    0x120(%rsp),%rsi
  4271e2:	xor    %edi,%edi
  4271e4:	callq  4148f0 <ASN1_TIME_set_string@plt>
  4271e9:	test   %eax,%eax
  4271eb:	je     428a1a <X509_get0_pubkey_bitstr@plt+0x1204a>
  4271f1:	cmpq   $0x0,0x250(%rsp)
  4271fa:	je     4289df <X509_get0_pubkey_bitstr@plt+0x1200f>
  427200:	cmpq   $0x0,0x120(%rsp)
  427209:	je     42748f <X509_get0_pubkey_bitstr@plt+0x10abf>
  42720f:	mov    0x1a0(%rsp),%rdi
  427217:	xor    %edx,%edx
  427219:	mov    %r15d,%esi
  42721c:	callq  447090 <X509_get0_pubkey_bitstr@plt+0x306c0>
  427221:	test   %rax,%rax
  427224:	mov    %rax,0x248(%rsp)
  42722c:	je     42746e <X509_get0_pubkey_bitstr@plt+0x10a9e>
  427232:	test   %r13d,%r13d
  427235:	je     427255 <X509_get0_pubkey_bitstr@plt+0x10885>
  427237:	mov    0x8(%rax),%r12d
  42723b:	test   %r12d,%r12d
  42723e:	jne    428b81 <X509_get0_pubkey_bitstr@plt+0x121b1>
  427244:	mov    (%r14),%rdi
  427247:	lea    0x3a052(%rip),%rsi        # 4612a0 <_fini+0x3d9c>
  42724e:	xor    %eax,%eax
  427250:	callq  413c40 <BIO_printf@plt>
  427255:	mov    0x148(%rsp),%rsi
  42725d:	mov    0x2540d4(%rip),%rdi        # 67b338 <_edata+0x630>
  427264:	callq  414750 <NCONF_get_section@plt>
  427269:	test   %rax,%rax
  42726c:	mov    %rax,0x160(%rsp)
  427274:	mov    0x148(%rsp),%rdx
  42727c:	lea    0x3ac6d(%rip),%rsi        # 461ef0 <_fini+0x49ec>
  427283:	je     428c5a <X509_get0_pubkey_bitstr@plt+0x1228a>
  427289:	callq  412cd0 <sk_new_null@plt>
  42728e:	test   %rax,%rax
  427291:	mov    %rax,%r15
  427294:	je     428c3f <X509_get0_pubkey_bitstr@plt+0x1226f>
  42729a:	cmpb   $0x0,0x1d0(%rsp)
  4272a2:	je     428c21 <X509_get0_pubkey_bitstr@plt+0x12251>
  4272a8:	mov    0x224(%rsp),%eax
  4272af:	mov    0x150(%rsp),%rsi
  4272b7:	lea    0x270(%rsp),%rdx
  4272bf:	xor    %edi,%edi
  4272c1:	mov    %eax,0x1d0(%rsp)
  4272c8:	mov    0x258(%rsp),%rax
  4272d0:	mov    %rax,0x1d8(%rsp)
  4272d8:	mov    0x260(%rsp),%rax
  4272e0:	mov    %rax,0x1e0(%rsp)
  4272e8:	mov    0x254049(%rip),%rax        # 67b338 <_edata+0x630>
  4272ef:	mov    %rax,0x1e8(%rsp)
  4272f7:	mov    0x250(%rsp),%rax
  4272ff:	mov    %rax,0x1f0(%rsp)
  427307:	mov    0x248(%rsp),%rax
  42730f:	mov    %rax,0x1f8(%rsp)
  427317:	callq  414c70 <CONF_load@plt>
  42731c:	test   %rax,%rax
  42731f:	mov    %rax,0x148(%rsp)
  427327:	je     428beb <X509_get0_pubkey_bitstr@plt+0x1221b>
  42732d:	mov    0x148(%rsp),%rdi
  427335:	lea    0x43cba(%rip),%rsi        # 46aff6 <_fini+0xdaf2>
  42733c:	callq  414310 <CONF_get_section@plt>
  427341:	mov    %rax,%rdi
  427344:	mov    %rax,0x1b8(%rsp)
  42734c:	callq  4156d0 <sk_num@plt>
  427351:	test   %eax,%eax
  427353:	je     428c77 <X509_get0_pubkey_bitstr@plt+0x122a7>
  427359:	callq  4139d0 <X509_REQ_new@plt>
  42735e:	test   %rax,%rax
  427361:	mov    %rax,0x128(%rsp)
  427369:	je     428c62 <X509_get0_pubkey_bitstr@plt+0x12292>
  42736f:	mov    0x128(%rsp),%rax
  427377:	movl   $0x0,0x1c8(%rsp)
  427382:	xor    %r12d,%r12d
  427385:	mov    (%rax),%rax
  427388:	mov    0x20(%rax),%rax
  42738c:	mov    %rax,0x200(%rsp)
  427394:	mov    0x1b8(%rsp),%rdi
  42739c:	callq  4156d0 <sk_num@plt>
  4273a1:	mov    0x1c8(%rsp),%esi
  4273a8:	cmp    %esi,%eax
  4273aa:	jle    4274b4 <X509_get0_pubkey_bitstr@plt+0x10ae4>
  4273b0:	mov    0x1b8(%rsp),%rdi
  4273b8:	callq  412b30 <sk_value@plt>
  4273bd:	mov    0x8(%rax),%rsi
  4273c1:	mov    %rax,%r8
  4273c4:	movzbl (%rsi),%eax
  4273c7:	test   %al,%al
  4273c9:	je     427409 <X509_get0_pubkey_bitstr@plt+0x10a39>
  4273cb:	mov    %eax,%edx
  4273cd:	and    $0xfffffffd,%edx
  4273d0:	cmp    $0x2c,%dl
  4273d3:	je     4274ac <X509_get0_pubkey_bitstr@plt+0x10adc>
  4273d9:	cmp    $0x3a,%al
  4273db:	mov    %rsi,%rdx
  4273de:	je     4274ac <X509_get0_pubkey_bitstr@plt+0x10adc>
  4273e4:	add    $0x1,%rdx
  4273e8:	movzbl (%rdx),%eax
  4273eb:	test   %al,%al
  4273ed:	je     427409 <X509_get0_pubkey_bitstr@plt+0x10a39>
  4273ef:	mov    %eax,%ecx
  4273f1:	and    $0xfffffffd,%ecx
  4273f4:	cmp    $0x2c,%cl
  4273f7:	je     4273fd <X509_get0_pubkey_bitstr@plt+0x10a2d>
  4273f9:	cmp    $0x3a,%al
  4273fb:	jne    4273e4 <X509_get0_pubkey_bitstr@plt+0x10a14>
  4273fd:	cmpb   $0x0,0x1(%rdx)
  427401:	lea    0x1(%rdx),%rax
  427405:	cmovne %rax,%rsi
  427409:	mov    0x10(%r8),%rcx
  42740d:	mov    %rsi,%rdi
  427410:	mov    %r8,0x218(%rsp)
  427418:	mov    %rsi,0x208(%rsp)
  427420:	mov    %rcx,0x210(%rsp)
  427428:	callq  413720 <OBJ_txt2nid@plt>
  42742d:	test   %eax,%eax
  42742f:	mov    0x210(%rsp),%rcx
  427437:	jne    428cda <X509_get0_pubkey_bitstr@plt+0x1230a>
  42743d:	mov    0x208(%rsp),%rsi
  427445:	lea    0x39e88(%rip),%rdi        # 4612d4 <_fini+0x3dd0>
  42744c:	mov    $0x6,%ecx
  427451:	mov    0x218(%rsp),%r8
  427459:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42745b:	je     428c9d <X509_get0_pubkey_bitstr@plt+0x122cd>
  427461:	addl   $0x1,0x1c8(%rsp)
  427469:	jmpq   427394 <X509_get0_pubkey_bitstr@plt+0x109c4>
  42746e:	mov    (%r14),%rdi
  427471:	lea    0x3aa50(%rip),%rsi        # 461ec8 <_fini+0x49c4>
  427478:	callq  413c40 <BIO_printf@plt>
  42747d:	xor    %r15d,%r15d
  427480:	xor    %ebx,%ebx
  427482:	xor    %ebp,%ebp
  427484:	mov    $0x1,%r12d
  42748a:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  42748f:	cmpq   $0x0,0x250(%rsp)
  427498:	lea    0x3a9f9(%rip),%rsi        # 461e98 <_fini+0x4994>
  42749f:	jne    42720f <X509_get0_pubkey_bitstr@plt+0x1083f>
  4274a5:	mov    (%r14),%rdi
  4274a8:	xor    %eax,%eax
  4274aa:	jmp    427478 <X509_get0_pubkey_bitstr@plt+0x10aa8>
  4274ac:	mov    %rsi,%rdx
  4274af:	jmpq   4273fd <X509_get0_pubkey_bitstr@plt+0x10a2d>
  4274b4:	test   %r12,%r12
  4274b7:	je     4289bc <X509_get0_pubkey_bitstr@plt+0x11fec>
  4274bd:	mov    (%r14),%rdi
  4274c0:	lea    0x3aad9(%rip),%rsi        # 461fa0 <_fini+0x4a9c>
  4274c7:	xor    %eax,%eax
  4274c9:	callq  413c40 <BIO_printf@plt>
  4274ce:	mov    %r12,%rdi
  4274d1:	callq  413160 <NETSCAPE_SPKI_get_pubkey@plt>
  4274d6:	test   %rax,%rax
  4274d9:	mov    %rax,0x150(%rsp)
  4274e1:	je     4289a3 <X509_get0_pubkey_bitstr@plt+0x11fd3>
  4274e7:	mov    0x150(%rsp),%rsi
  4274ef:	mov    %r12,%rdi
  4274f2:	callq  414010 <NETSCAPE_SPKI_verify@plt>
  4274f7:	test   %eax,%eax
  4274f9:	jle    428988 <X509_get0_pubkey_bitstr@plt+0x11fb8>
  4274ff:	mov    (%r14),%rdi
  427502:	lea    0x399ae(%rip),%rsi        # 460eb7 <_fini+0x39b3>
  427509:	xor    %eax,%eax
  42750b:	callq  413c40 <BIO_printf@plt>
  427510:	mov    0x150(%rsp),%rsi
  427518:	mov    0x128(%rsp),%rdi
  427520:	callq  415c20 <X509_REQ_set_pubkey@plt>
  427525:	mov    0x150(%rsp),%rdi
  42752d:	callq  412b00 <EVP_PKEY_free@plt>
  427532:	mov    0x128(%rsp),%rax
  42753a:	mov    0x1d0(%rsp),%esi
  427541:	lea    0x268(%rsp),%r10
  427549:	movl   $0x0,0x90(%rsp)
  427554:	mov    %r13d,0x50(%rsp)
  427559:	movl   $0x1,0x48(%rsp)
  427561:	mov    %r10,%rdi
  427564:	mov    %rax,0x58(%rsp)
  427569:	mov    0x1f0(%rsp),%rax
  427571:	mov    %esi,0x88(%rsp)
  427578:	mov    0x1a8(%rsp),%esi
  42757f:	mov    %rax,0x40(%rsp)
  427584:	mov    0x120(%rsp),%rax
  42758c:	mov    %esi,0x80(%rsp)
  427593:	mov    0x1d8(%rsp),%rsi
  42759b:	mov    %rax,0x38(%rsp)
  4275a0:	mov    0x110(%rsp),%rax
  4275a8:	mov    %rsi,0x78(%rsp)
  4275ad:	mov    0x1e0(%rsp),%rsi
  4275b5:	mov    %rax,0x30(%rsp)
  4275ba:	mov    0x138(%rsp),%eax
  4275c1:	mov    %rsi,0x70(%rsp)
  4275c6:	mov    0x1e8(%rsp),%rsi
  4275ce:	mov    %eax,0x28(%rsp)
  4275d2:	mov    0x108(%rsp),%eax
  4275d9:	mov    %rsi,0x68(%rsp)
  4275de:	mov    0x100(%rsp),%rsi
  4275e6:	mov    %eax,0x20(%rsp)
  4275ea:	mov    0xf0(%rsp),%rax
  4275f2:	mov    %rsi,0x60(%rsp)
  4275f7:	mov    %rax,0x18(%rsp)
  4275fc:	mov    0xa8(%rsp),%rax
  427604:	mov    %rax,0x10(%rsp)
  427609:	mov    0x1f8(%rsp),%rax
  427611:	mov    %rax,0x8(%rsp)
  427616:	mov    0xa0(%rsp),%rax
  42761e:	mov    %rax,(%rsp)
  427622:	mov    0x160(%rsp),%r9
  42762a:	mov    0xf8(%rsp),%r8
  427632:	mov    0x140(%rsp),%rcx
  42763a:	mov    0xb0(%rsp),%rdx
  427642:	mov    0xb8(%rsp),%rsi
  42764a:	callq  416ebe <X509_get0_pubkey_bitstr@plt+0x4ee>
  42764f:	mov    0x128(%rsp),%rdi
  427657:	mov    %eax,0x150(%rsp)
  42765e:	callq  4154a0 <X509_REQ_free@plt>
  427663:	mov    0x150(%rsp),%eax
  42766a:	mov    0x148(%rsp),%rdi
  427672:	mov    %eax,0x128(%rsp)
  427679:	callq  415b00 <CONF_free@plt>
  42767e:	test   %r12,%r12
  427681:	mov    0x128(%rsp),%eax
  427688:	je     427699 <X509_get0_pubkey_bitstr@plt+0x10cc9>
  42768a:	mov    %r12,%rdi
  42768d:	callq  414670 <NETSCAPE_SPKI_free@plt>
  427692:	mov    0x128(%rsp),%eax
  427699:	test   %eax,%eax
  42769b:	js     426d4e <X509_get0_pubkey_bitstr@plt+0x1037e>
  4276a1:	je     428967 <X509_get0_pubkey_bitstr@plt+0x11f97>
  4276a7:	mov    (%r14),%rdi
  4276aa:	lea    0x3d4ee(%rip),%rsi        # 464b9f <_fini+0x769b>
  4276b1:	xor    %eax,%eax
  4276b3:	callq  413c40 <BIO_printf@plt>
  4276b8:	mov    0x248(%rsp),%rdi
  4276c0:	mov    $0x1,%esi
  4276c5:	callq  414220 <BN_add_word@plt>
  4276ca:	test   %eax,%eax
  4276cc:	je     426d4e <X509_get0_pubkey_bitstr@plt+0x1037e>
  4276d2:	mov    0x268(%rsp),%rsi
  4276da:	mov    %r15,%rdi
  4276dd:	callq  412fe0 <sk_push@plt>
  4276e2:	test   %eax,%eax
  4276e4:	je     428786 <X509_get0_pubkey_bitstr@plt+0x11db6>
  4276ea:	mov    0x188(%rsp),%rax
  4276f2:	mov    $0x1,%r12d
  4276f8:	cmp    $0x1,%rax
  4276fc:	sbb    %esi,%esi
  4276fe:	mov    %esi,0x150(%rsp)
  427705:	addl   $0x1,0x150(%rsp)
  42770d:	test   %rax,%rax
  427710:	mov    0x13c(%rsp),%eax
  427717:	mov    $0x1,%esi
  42771c:	mov    %esi,0x128(%rsp)
  427723:	cmovne %esi,%eax
  427726:	mov    %eax,0x13c(%rsp)
  42772d:	mov    0x190(%rsp),%rsi
  427735:	test   %rsi,%rsi
  427738:	je     4278c8 <X509_get0_pubkey_bitstr@plt+0x10ef8>
  42773e:	mov    0x224(%rsp),%eax
  427745:	mov    0x1b0(%rsp),%r8
  42774d:	xor    %ecx,%ecx
  42774f:	mov    (%r14),%rdi
  427752:	mov    %rsi,%r9
  427755:	mov    $0x3,%edx
  42775a:	add    $0x1,%r12d
  42775e:	mov    %eax,0x188(%rsp)
  427765:	mov    0x258(%rsp),%rax
  42776d:	mov    %rax,0x190(%rsp)
  427775:	mov    0x260(%rsp),%rax
  42777d:	mov    %rax,0x1b8(%rsp)
  427785:	mov    0x253bac(%rip),%rax        # 67b338 <_edata+0x630>
  42778c:	mov    %rax,0x1c8(%rsp)
  427794:	mov    0x250(%rsp),%rax
  42779c:	mov    %rax,0x1d0(%rsp)
  4277a4:	mov    0x248(%rsp),%rax
  4277ac:	mov    %rax,0x1d8(%rsp)
  4277b4:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  4277b9:	test   %rax,%rax
  4277bc:	mov    %rax,0x148(%rsp)
  4277c4:	je     426d4e <X509_get0_pubkey_bitstr@plt+0x1037e>
  4277ca:	test   %r13d,%r13d
  4277cd:	je     4277da <X509_get0_pubkey_bitstr@plt+0x10e0a>
  4277cf:	mov    (%r14),%rdi
  4277d2:	mov    %rax,%rsi
  4277d5:	callq  414e30 <X509_print@plt>
  4277da:	mov    (%r14),%rdi
  4277dd:	lea    0x3a22c(%rip),%rsi        # 461a10 <_fini+0x450c>
  4277e4:	xor    %eax,%eax
  4277e6:	callq  413c40 <BIO_printf@plt>
  4277eb:	mov    0x148(%rsp),%rdi
  4277f3:	callq  4161b0 <X509_get_pubkey@plt>
  4277f8:	test   %rax,%rax
  4277fb:	je     428933 <X509_get0_pubkey_bitstr@plt+0x11f63>
  427801:	mov    0x148(%rsp),%rdi
  427809:	mov    %rax,%rsi
  42780c:	mov    %rax,0x1e8(%rsp)
  427814:	callq  412980 <X509_verify@plt>
  427819:	mov    0x1e8(%rsp),%rdx
  427821:	mov    %eax,0x1e0(%rsp)
  427828:	mov    %rdx,%rdi
  42782b:	callq  412b00 <EVP_PKEY_free@plt>
  427830:	mov    0x1e0(%rsp),%eax
  427837:	test   %eax,%eax
  427839:	js     42891b <X509_get0_pubkey_bitstr@plt+0x11f4b>
  42783f:	jne    4287a4 <X509_get0_pubkey_bitstr@plt+0x11dd4>
  427845:	mov    (%r14),%rdi
  427848:	lea    0x3a7e9(%rip),%rsi        # 462038 <_fini+0x4b34>
  42784f:	xor    %eax,%eax
  427851:	callq  413c40 <BIO_printf@plt>
  427856:	xor    %eax,%eax
  427858:	mov    0x148(%rsp),%rdi
  427860:	mov    %eax,0x188(%rsp)
  427867:	callq  4153a0 <X509_free@plt>
  42786c:	mov    0x188(%rsp),%eax
  427873:	test   %eax,%eax
  427875:	js     426d4e <X509_get0_pubkey_bitstr@plt+0x1037e>
  42787b:	je     4278c8 <X509_get0_pubkey_bitstr@plt+0x10ef8>
  42787d:	mov    (%r14),%rdi
  427880:	lea    0x3d318(%rip),%rsi        # 464b9f <_fini+0x769b>
  427887:	xor    %eax,%eax
  427889:	addl   $0x1,0x128(%rsp)
  427891:	callq  413c40 <BIO_printf@plt>
  427896:	mov    0x248(%rsp),%rdi
  42789e:	mov    $0x1,%esi
  4278a3:	callq  414220 <BN_add_word@plt>
  4278a8:	test   %eax,%eax
  4278aa:	je     426d4e <X509_get0_pubkey_bitstr@plt+0x1037e>
  4278b0:	mov    0x268(%rsp),%rsi
  4278b8:	mov    %r15,%rdi
  4278bb:	callq  412fe0 <sk_push@plt>
  4278c0:	test   %eax,%eax
  4278c2:	je     428786 <X509_get0_pubkey_bitstr@plt+0x11db6>
  4278c8:	mov    0x158(%rsp),%rsi
  4278d0:	test   %rsi,%rsi
  4278d3:	je     427a4c <X509_get0_pubkey_bitstr@plt+0x1107c>
  4278d9:	mov    0x198(%rsp),%eax
  4278e0:	mov    %r13d,0x68(%rsp)
  4278e5:	lea    0x268(%rsp),%r10
  4278ed:	add    $0x1,%r12d
  4278f1:	mov    %r10,%rdi
  4278f4:	mov    %eax,0x90(%rsp)
  4278fb:	mov    0x224(%rsp),%eax
  427902:	mov    %eax,0x88(%rsp)
  427909:	mov    0x1a8(%rsp),%eax
  427910:	mov    %eax,0x80(%rsp)
  427917:	mov    0x258(%rsp),%rax
  42791f:	mov    %rax,0x78(%rsp)
  427924:	mov    0x260(%rsp),%rax
  42792c:	mov    %rax,0x70(%rsp)
  427931:	mov    0x253a00(%rip),%rax        # 67b338 <_edata+0x630>
  427938:	mov    %rax,0x60(%rsp)
  42793d:	mov    0x100(%rsp),%rax
  427945:	mov    %rax,0x58(%rsp)
  42794a:	mov    0x13c(%rsp),%eax
  427951:	mov    %eax,0x50(%rsp)
  427955:	mov    0x250(%rsp),%rax
  42795d:	mov    %rax,0x48(%rsp)
  427962:	mov    0x120(%rsp),%rax
  42796a:	mov    %rax,0x40(%rsp)
  42796f:	mov    0x110(%rsp),%rax
  427977:	mov    %rax,0x38(%rsp)
  42797c:	mov    0x138(%rsp),%eax
  427983:	mov    %eax,0x30(%rsp)
  427987:	mov    0x108(%rsp),%eax
  42798e:	mov    %eax,0x28(%rsp)
  427992:	mov    0xf0(%rsp),%rax
  42799a:	mov    %rax,0x20(%rsp)
  42799f:	mov    0xa8(%rsp),%rax
  4279a7:	mov    %rax,0x18(%rsp)
  4279ac:	mov    0x248(%rsp),%rax
  4279b4:	mov    %rax,0x10(%rsp)
  4279b9:	mov    0xa0(%rsp),%rax
  4279c1:	mov    %rax,0x8(%rsp)
  4279c6:	mov    0x160(%rsp),%rax
  4279ce:	mov    0xf8(%rsp),%r9
  4279d6:	mov    0x140(%rsp),%r8
  4279de:	mov    0x1c0(%rsp),%rcx
  4279e6:	mov    0xb8(%rsp),%rdx
  4279ee:	mov    %rax,(%rsp)
  4279f2:	callq  417f43 <X509_get0_pubkey_bitstr@plt+0x1573>
  4279f7:	test   %eax,%eax
  4279f9:	js     426d4e <X509_get0_pubkey_bitstr@plt+0x1037e>
  4279ff:	je     427a4c <X509_get0_pubkey_bitstr@plt+0x1107c>
  427a01:	mov    (%r14),%rdi
  427a04:	lea    0x3d194(%rip),%rsi        # 464b9f <_fini+0x769b>
  427a0b:	xor    %eax,%eax
  427a0d:	addl   $0x1,0x128(%rsp)
  427a15:	callq  413c40 <BIO_printf@plt>
  427a1a:	mov    0x248(%rsp),%rdi
  427a22:	mov    $0x1,%esi
  427a27:	callq  414220 <BN_add_word@plt>
  427a2c:	test   %eax,%eax
  427a2e:	je     426d4e <X509_get0_pubkey_bitstr@plt+0x1037e>
  427a34:	mov    0x268(%rsp),%rsi
  427a3c:	mov    %r15,%rdi
  427a3f:	callq  412fe0 <sk_push@plt>
  427a44:	test   %eax,%eax
  427a46:	je     428c3f <X509_get0_pubkey_bitstr@plt+0x1226f>
  427a4c:	test   %ebx,%ebx
  427a4e:	jle    427be8 <X509_get0_pubkey_bitstr@plt+0x11218>
  427a54:	lea    0x268(%rsp),%r10
  427a5c:	add    %r12d,%ebx
  427a5f:	mov    %r10,0x148(%rsp)
  427a67:	mov    0x198(%rsp),%eax
  427a6e:	mov    %r13d,0x68(%rsp)
  427a73:	add    $0x1,%r12d
  427a77:	mov    %eax,0x90(%rsp)
  427a7e:	mov    0x224(%rsp),%eax
  427a85:	mov    %eax,0x88(%rsp)
  427a8c:	mov    0x1a8(%rsp),%eax
  427a93:	mov    %eax,0x80(%rsp)
  427a9a:	mov    0x258(%rsp),%rax
  427aa2:	mov    %rax,0x78(%rsp)
  427aa7:	mov    0x260(%rsp),%rax
  427aaf:	mov    %rax,0x70(%rsp)
  427ab4:	mov    0x25387d(%rip),%rax        # 67b338 <_edata+0x630>
  427abb:	mov    %rax,0x60(%rsp)
  427ac0:	mov    0x100(%rsp),%rax
  427ac8:	mov    %rax,0x58(%rsp)
  427acd:	mov    0x13c(%rsp),%eax
  427ad4:	mov    %eax,0x50(%rsp)
  427ad8:	mov    0x250(%rsp),%rax
  427ae0:	mov    %rax,0x48(%rsp)
  427ae5:	mov    0x120(%rsp),%rax
  427aed:	mov    %rax,0x40(%rsp)
  427af2:	mov    0x110(%rsp),%rax
  427afa:	mov    %rax,0x38(%rsp)
  427aff:	mov    0x138(%rsp),%eax
  427b06:	mov    %eax,0x30(%rsp)
  427b0a:	mov    0x108(%rsp),%eax
  427b11:	mov    %eax,0x28(%rsp)
  427b15:	mov    0xf0(%rsp),%rax
  427b1d:	mov    %rax,0x20(%rsp)
  427b22:	mov    0xa8(%rsp),%rax
  427b2a:	mov    %rax,0x18(%rsp)
  427b2f:	mov    0x248(%rsp),%rax
  427b37:	mov    %rax,0x10(%rsp)
  427b3c:	mov    0xa0(%rsp),%rax
  427b44:	mov    %rax,0x8(%rsp)
  427b49:	mov    0x160(%rsp),%rax
  427b51:	mov    0xf8(%rsp),%r9
  427b59:	mov    0x140(%rsp),%r8
  427b61:	mov    0x1c0(%rsp),%rcx
  427b69:	mov    0xb8(%rsp),%rdx
  427b71:	mov    %rax,(%rsp)
  427b75:	mov    0x148(%rsp),%rdi
  427b7d:	mov    0x0(%rbp),%rsi
  427b81:	callq  417f43 <X509_get0_pubkey_bitstr@plt+0x1573>
  427b86:	test   %eax,%eax
  427b88:	js     426d4e <X509_get0_pubkey_bitstr@plt+0x1037e>
  427b8e:	je     427bdb <X509_get0_pubkey_bitstr@plt+0x1120b>
  427b90:	mov    (%r14),%rdi
  427b93:	lea    0x3d005(%rip),%rsi        # 464b9f <_fini+0x769b>
  427b9a:	xor    %eax,%eax
  427b9c:	addl   $0x1,0x128(%rsp)
  427ba4:	callq  413c40 <BIO_printf@plt>
  427ba9:	mov    0x248(%rsp),%rdi
  427bb1:	mov    $0x1,%esi
  427bb6:	callq  414220 <BN_add_word@plt>
  427bbb:	test   %eax,%eax
  427bbd:	je     426d4e <X509_get0_pubkey_bitstr@plt+0x1037e>
  427bc3:	mov    0x268(%rsp),%rsi
  427bcb:	mov    %r15,%rdi
  427bce:	callq  412fe0 <sk_push@plt>
  427bd3:	test   %eax,%eax
  427bd5:	je     428786 <X509_get0_pubkey_bitstr@plt+0x11db6>
  427bdb:	add    $0x8,%rbp
  427bdf:	cmp    %ebx,%r12d
  427be2:	jne    427a67 <X509_get0_pubkey_bitstr@plt+0x11097>
  427be8:	mov    %r15,%rdi
  427beb:	callq  4156d0 <sk_num@plt>
  427bf0:	test   %eax,%eax
  427bf2:	jle    427cd6 <X509_get0_pubkey_bitstr@plt+0x11306>
  427bf8:	mov    0x13c(%rsp),%r11d
  427c00:	test   %r11d,%r11d
  427c03:	jne    427c71 <X509_get0_pubkey_bitstr@plt+0x112a1>
  427c05:	mov    0x128(%rsp),%edx
  427c0c:	mov    (%r14),%rdi
  427c0f:	lea    0x3a452(%rip),%rsi        # 462068 <_fini+0x4b64>
  427c16:	mov    %r12d,%ecx
  427c19:	xor    %eax,%eax
  427c1b:	callq  413c40 <BIO_printf@plt>
  427c20:	mov    (%r14),%rdi
  427c23:	xor    %ecx,%ecx
  427c25:	xor    %edx,%edx
  427c27:	mov    $0xb,%esi
  427c2c:	callq  412af0 <BIO_ctrl@plt>
  427c31:	mov    0x24e2d8(%rip),%rax        # 675f10 <_fini+0x218a0c>
  427c38:	lea    0x2b0(%rsp),%rdi
  427c40:	mov    $0xa,%esi
  427c45:	movb   $0x0,0x2b0(%rsp)
  427c4d:	mov    (%rax),%rdx
  427c50:	callq  415af0 <fgets@plt>
  427c55:	test   %rax,%rax
  427c58:	je     42876b <X509_get0_pubkey_bitstr@plt+0x11d9b>
  427c5e:	movzbl 0x2b0(%rsp),%eax
  427c66:	and    $0xffffffdf,%eax
  427c69:	cmp    $0x59,%al
  427c6b:	jne    42874e <X509_get0_pubkey_bitstr@plt+0x11d7e>
  427c71:	mov    %r15,%rdi
  427c74:	callq  4156d0 <sk_num@plt>
  427c79:	mov    (%r14),%rdi
  427c7c:	lea    0x3a44d(%rip),%rsi        # 4620d0 <_fini+0x4bcc>
  427c83:	mov    %eax,%edx
  427c85:	xor    %eax,%eax
  427c87:	callq  413c40 <BIO_printf@plt>
  427c8c:	mov    0x248(%rsp),%rdx
  427c94:	mov    0x1a0(%rsp),%rdi
  427c9c:	lea    0x36530(%rip),%rsi        # 45e1d3 <_fini+0xccf>
  427ca3:	xor    %ecx,%ecx
  427ca5:	callq  446c90 <X509_get0_pubkey_bitstr@plt+0x302c0>
  427caa:	test   %eax,%eax
  427cac:	je     426d4e <X509_get0_pubkey_bitstr@plt+0x1037e>
  427cb2:	mov    0xa0(%rsp),%rdx
  427cba:	mov    0x180(%rsp),%rdi
  427cc2:	lea    0x3650a(%rip),%rsi        # 45e1d3 <_fini+0xccf>
  427cc9:	callq  447330 <X509_get0_pubkey_bitstr@plt+0x30960>
  427cce:	test   %eax,%eax
  427cd0:	je     426d4e <X509_get0_pubkey_bitstr@plt+0x1037e>
  427cd6:	test   %r13d,%r13d
  427cd9:	je     427cec <X509_get0_pubkey_bitstr@plt+0x1131c>
  427cdb:	mov    (%r14),%rdi
  427cde:	lea    0x3960d(%rip),%rsi        # 4612f2 <_fini+0x3dee>
  427ce5:	xor    %eax,%eax
  427ce7:	callq  413c40 <BIO_printf@plt>
  427cec:	lea    0x2b0(%rsp),%rax
  427cf4:	lea    0x5b0(%rsp),%rbx
  427cfc:	lea    0x4b0(%rsp),%r12
  427d04:	movl   $0x0,0xa8(%rsp)
  427d0f:	mov    %rax,0x110(%rsp)
  427d17:	lea    0x5b1(%rsp),%rax
  427d1f:	mov    %rbx,0xf0(%rsp)
  427d27:	mov    %rax,0x120(%rsp)
  427d2f:	mov    %r15,%rdi
  427d32:	callq  4156d0 <sk_num@plt>
  427d37:	cmp    %eax,0xa8(%rsp)
  427d3e:	jge    427e90 <X509_get0_pubkey_bitstr@plt+0x114c0>
  427d44:	mov    0xa8(%rsp),%esi
  427d4b:	mov    %r15,%rdi
  427d4e:	callq  412b30 <sk_value@plt>
  427d53:	mov    %rax,0x268(%rsp)
  427d5b:	mov    (%rax),%rax
  427d5e:	mov    0x118(%rsp),%rdi
  427d66:	mov    0x8(%rax),%rax
  427d6a:	mov    (%rax),%ebx
  427d6c:	mov    0x8(%rax),%rbp
  427d70:	callq  413470 <strlen@plt>
  427d75:	mov    $0xf8,%edx
  427d7a:	test   %ebx,%ebx
  427d7c:	je     427d87 <X509_get0_pubkey_bitstr@plt+0x113b7>
  427d7e:	mov    $0x7d,%dl
  427d80:	sub    %ebx,%edx
  427d82:	add    %edx,%edx
  427d84:	movslq %edx,%rdx
  427d87:	cmp    %rax,%rdx
  427d8a:	jbe    42872e <X509_get0_pubkey_bitstr@plt+0x11d5e>
  427d90:	mov    0x118(%rsp),%rsi
  427d98:	lea    0x1(%rax),%rdx
  427d9c:	mov    $0x100,%ecx
  427da1:	mov    %r12,%rdi
  427da4:	callq  416010 <__memcpy_chk@plt>
  427da9:	lea    0x40523(%rip),%rsi        # 4682d3 <_fini+0xadcf>
  427db0:	mov    $0x100,%edx
  427db5:	mov    %r12,%rdi
  427db8:	callq  414b30 <BUF_strlcat@plt>
  427dbd:	mov    %r12,%rdx
  427dc0:	mov    (%rdx),%ecx
  427dc2:	add    $0x4,%rdx
  427dc6:	lea    -0x1010101(%rcx),%eax
  427dcc:	not    %ecx
  427dce:	and    %ecx,%eax
  427dd0:	and    $0x80808080,%eax
  427dd5:	je     427dc0 <X509_get0_pubkey_bitstr@plt+0x113f0>
  427dd7:	mov    %eax,%ecx
  427dd9:	shr    $0x10,%ecx
  427ddc:	test   $0x8080,%eax
  427de1:	cmove  %ecx,%eax
  427de4:	lea    0x2(%rdx),%rcx
  427de8:	cmove  %rcx,%rdx
  427dec:	add    %al,%al
  427dee:	mov    0x110(%rsp),%rax
  427df6:	sbb    $0x3,%rdx
  427dfa:	sub    %r12,%rdx
  427dfd:	test   %ebx,%ebx
  427dff:	lea    0x200(%rax,%rdx,1),%rdi
  427e07:	jle    42860f <X509_get0_pubkey_bitstr@plt+0x11c3f>
  427e0d:	cmp    0xf0(%rsp),%rdi
  427e15:	jae    42861f <X509_get0_pubkey_bitstr@plt+0x11c4f>
  427e1b:	sub    $0x1,%ebx
  427e1e:	lea    0x1(%rbp,%rbx,1),%rax
  427e23:	lea    0x2(%rdi),%rbx
  427e27:	mov    %rax,0x108(%rsp)
  427e2f:	mov    0x120(%rsp),%rax
  427e37:	sub    %rbx,%rax
  427e3a:	shr    %rax
  427e3d:	lea    0x1(%rbp,%rax,1),%rax
  427e42:	mov    %rax,0x100(%rsp)
  427e4a:	add    $0x1,%rbp
  427e4e:	mov    0xf0(%rsp),%rsi
  427e56:	movzbl -0x1(%rbp),%ecx
  427e5a:	lea    0x38f3f(%rip),%rdx        # 460da0 <_fini+0x389c>
  427e61:	xor    %eax,%eax
  427e63:	sub    %rdi,%rsi
  427e66:	callq  412fc0 <BIO_snprintf@plt>
  427e6b:	cmp    0x108(%rsp),%rbp
  427e73:	mov    %rbx,%rdi
  427e76:	je     42861f <X509_get0_pubkey_bitstr@plt+0x11c4f>
  427e7c:	cmp    0x100(%rsp),%rbp
  427e84:	je     42861f <X509_get0_pubkey_bitstr@plt+0x11c4f>
  427e8a:	add    $0x2,%rbx
  427e8e:	jmp    427e4a <X509_get0_pubkey_bitstr@plt+0x1147a>
  427e90:	mov    %r15,%rdi
  427e93:	callq  4156d0 <sk_num@plt>
  427e98:	test   %eax,%eax
  427e9a:	jne    4285b3 <X509_get0_pubkey_bitstr@plt+0x11be3>
  427ea0:	mov    0x174(%rsp),%r8d
  427ea8:	test   %r8d,%r8d
  427eab:	je     4285ac <X509_get0_pubkey_bitstr@plt+0x11bdc>
  427eb1:	cmpq   $0x0,0x130(%rsp)
  427eba:	je     42855d <X509_get0_pubkey_bitstr@plt+0x11b8d>
  427ec0:	lea    0x270(%rsp),%rbx
  427ec8:	xor    %r8d,%r8d
  427ecb:	xor    %ecx,%ecx
  427ecd:	xor    %edx,%edx
  427ecf:	mov    $0x1,%r9d
  427ed5:	xor    %esi,%esi
  427ed7:	mov    %rbx,%rdi
  427eda:	callq  413910 <X509V3_set_ctx@plt>
  427edf:	mov    0x253452(%rip),%rsi        # 67b338 <_edata+0x630>
  427ee6:	mov    %rbx,%rdi
  427ee9:	callq  4155a0 <X509V3_set_nconf@plt>
  427eee:	mov    0x130(%rsp),%rdx
  427ef6:	mov    0x25343b(%rip),%rdi        # 67b338 <_edata+0x630>
  427efd:	xor    %ecx,%ecx
  427eff:	mov    %rbx,%rsi
  427f02:	callq  4168d0 <X509V3_EXT_add_nconf@plt>
  427f07:	test   %eax,%eax
  427f09:	je     428535 <X509_get0_pubkey_bitstr@plt+0x11b65>
  427f0f:	mov    0x253422(%rip),%rdi        # 67b338 <_edata+0x630>
  427f16:	mov    0x25340b(%rip),%rsi        # 67b328 <_edata+0x620>
  427f1d:	lea    0x3ae15(%rip),%rdx        # 462d39 <_fini+0x5835>
  427f24:	callq  413fd0 <NCONF_get_string@plt>
  427f29:	test   %rax,%rax
  427f2c:	mov    %rax,%rdi
  427f2f:	mov    %rax,0x108(%rsp)
  427f37:	je     428592 <X509_get0_pubkey_bitstr@plt+0x11bc2>
  427f3d:	xor    %esi,%esi
  427f3f:	xor    %edx,%edx
  427f41:	callq  447090 <X509_get0_pubkey_bitstr@plt+0x306c0>
  427f46:	test   %rax,%rax
  427f49:	mov    %rax,%rbp
  427f4c:	lea    0x3a1ed(%rip),%rsi        # 462140 <_fini+0x4c3c>
  427f53:	je     4284db <X509_get0_pubkey_bitstr@plt+0x11b0b>
  427f59:	mov    0x230(%rsp),%rax
  427f61:	mov    %rax,%rdx
  427f64:	or     0x238(%rsp),%rdx
  427f6c:	or     0x178(%rsp),%rdx
  427f74:	je     4280e8 <X509_get0_pubkey_bitstr@plt+0x11718>
  427f7a:	test   %rax,%rax
  427f7d:	jne    427f95 <X509_get0_pubkey_bitstr@plt+0x115c5>
  427f7f:	mov    0x178(%rsp),%rax
  427f87:	or     0x238(%rsp),%rax
  427f8f:	je     4284d4 <X509_get0_pubkey_bitstr@plt+0x11b04>
  427f95:	test   %r13d,%r13d
  427f98:	je     427fab <X509_get0_pubkey_bitstr@plt+0x115db>
  427f9a:	mov    (%r14),%rdi
  427f9d:	lea    0x393b9(%rip),%rsi        # 46135d <_fini+0x3e59>
  427fa4:	xor    %eax,%eax
  427fa6:	callq  413c40 <BIO_printf@plt>
  427fab:	callq  414b10 <X509_CRL_new@plt>
  427fb0:	test   %rax,%rax
  427fb3:	mov    %rax,%rbx
  427fb6:	mov    $0x1,%r12d
  427fbc:	je     425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  427fc2:	mov    0xb0(%rsp),%rdi
  427fca:	callq  414400 <X509_get_subject_name@plt>
  427fcf:	mov    %rbx,%rdi
  427fd2:	mov    %rax,%rsi
  427fd5:	callq  415ba0 <X509_CRL_set_issuer_name@plt>
  427fda:	test   %eax,%eax
  427fdc:	je     425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  427fe2:	callq  416080 <ASN1_TIME_new@plt>
  427fe7:	test   %rax,%rax
  427fea:	mov    %rax,0xa8(%rsp)
  427ff2:	je     425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  427ff8:	xor    %esi,%esi
  427ffa:	mov    %rax,%rdi
  427ffd:	callq  4164f0 <X509_gmtime_adj@plt>
  428002:	mov    0xa8(%rsp),%rsi
  42800a:	mov    %rbx,%rdi
  42800d:	callq  416890 <X509_CRL_set_lastUpdate@plt>
  428012:	mov    0x238(%rsp),%rdi
  42801a:	mov    0x230(%rsp),%esi
  428021:	xor    %ecx,%ecx
  428023:	imul   $0xe10,%rdi,%rdx
  42802a:	mov    0xa8(%rsp),%rdi
  428032:	add    0x178(%rsp),%rdx
  42803a:	callq  413f50 <X509_time_adj_ex@plt>
  42803f:	test   %rax,%rax
  428042:	je     4284ec <X509_get0_pubkey_bitstr@plt+0x11b1c>
  428048:	mov    0xa8(%rsp),%r12
  428050:	mov    %rbx,%rdi
  428053:	mov    %r12,%rsi
  428056:	callq  413d10 <X509_CRL_set_nextUpdate@plt>
  42805b:	mov    %r12,%rdi
  42805e:	callq  4155b0 <ASN1_TIME_free@plt>
  428063:	lea    0x248(%rsp),%rax
  42806b:	movl   $0x0,0xf0(%rsp)
  428076:	movl   $0x0,0x100(%rsp)
  428081:	mov    %rbp,0xa8(%rsp)
  428089:	mov    %rax,0x110(%rsp)
  428091:	mov    0xa0(%rsp),%rax
  428099:	mov    0x8(%rax),%rax
  42809d:	mov    0x8(%rax),%rdi
  4280a1:	callq  4156d0 <sk_num@plt>
  4280a6:	cmp    %eax,0x100(%rsp)
  4280ad:	jge    42820a <X509_get0_pubkey_bitstr@plt+0x1183a>
  4280b3:	mov    0xa0(%rsp),%rax
  4280bb:	mov    0x100(%rsp),%esi
  4280c2:	mov    0x8(%rax),%rax
  4280c6:	mov    0x8(%rax),%rdi
  4280ca:	callq  412b30 <sk_value@plt>
  4280cf:	mov    %rax,%rbp
  4280d2:	mov    (%rax),%rax
  4280d5:	cmpb   $0x52,(%rax)
  4280d8:	je     42815e <X509_get0_pubkey_bitstr@plt+0x1178e>
  4280de:	addl   $0x1,0x100(%rsp)
  4280e6:	jmp    428091 <X509_get0_pubkey_bitstr@plt+0x116c1>
  4280e8:	mov    0x253239(%rip),%rsi        # 67b328 <_edata+0x620>
  4280ef:	mov    0x253242(%rip),%rdi        # 67b338 <_edata+0x630>
  4280f6:	lea    0x230(%rsp),%rcx
  4280fe:	lea    0x39235(%rip),%rdx        # 46133a <_fini+0x3e36>
  428105:	callq  416450 <NCONF_get_number_e@plt>
  42810a:	test   %eax,%eax
  42810c:	jne    42811a <X509_get0_pubkey_bitstr@plt+0x1174a>
  42810e:	movq   $0x0,0x230(%rsp)
  42811a:	mov    0x253207(%rip),%rsi        # 67b328 <_edata+0x620>
  428121:	mov    0x253210(%rip),%rdi        # 67b338 <_edata+0x630>
  428128:	lea    0x238(%rsp),%rcx
  428130:	lea    0x39214(%rip),%rdx        # 46134b <_fini+0x3e47>
  428137:	callq  416450 <NCONF_get_number_e@plt>
  42813c:	test   %eax,%eax
  42813e:	jne    42814c <X509_get0_pubkey_bitstr@plt+0x1177c>
  428140:	movq   $0x0,0x238(%rsp)
  42814c:	callq  412890 <ERR_clear_error@plt>
  428151:	mov    0x230(%rsp),%rax
  428159:	jmpq   427f7a <X509_get0_pubkey_bitstr@plt+0x115aa>
  42815e:	callq  414030 <X509_REVOKED_new@plt>
  428163:	test   %rax,%rax
  428166:	mov    %rax,%r12
  428169:	je     428500 <X509_get0_pubkey_bitstr@plt+0x11b30>
  42816f:	mov    0x10(%rbp),%rsi
  428173:	mov    %rax,%rdi
  428176:	callq  4252b0 <X509_get0_pubkey_bitstr@plt+0xe8e0>
  42817b:	test   %eax,%eax
  42817d:	je     428500 <X509_get0_pubkey_bitstr@plt+0x11b30>
  428183:	cmp    $0x2,%eax
  428186:	mov    $0x1,%eax
  42818b:	cmovne 0xf0(%rsp),%eax
  428193:	mov    0x18(%rbp),%rsi
  428197:	mov    0x110(%rsp),%rdi
  42819f:	mov    %eax,0xf0(%rsp)
  4281a6:	callq  413030 <BN_hex2bn@plt>
  4281ab:	test   %eax,%eax
  4281ad:	je     428500 <X509_get0_pubkey_bitstr@plt+0x11b30>
  4281b3:	mov    0x248(%rsp),%rdi
  4281bb:	xor    %esi,%esi
  4281bd:	callq  412da0 <BN_to_ASN1_INTEGER@plt>
  4281c2:	mov    0x248(%rsp),%rdi
  4281ca:	mov    %rax,%rbp
  4281cd:	callq  4138e0 <BN_free@plt>
  4281d2:	test   %rbp,%rbp
  4281d5:	movq   $0x0,0x248(%rsp)
  4281e1:	je     428500 <X509_get0_pubkey_bitstr@plt+0x11b30>
  4281e7:	mov    %rbp,%rsi
  4281ea:	mov    %r12,%rdi
  4281ed:	callq  4128a0 <X509_REVOKED_set_serialNumber@plt>
  4281f2:	mov    %rbp,%rdi
  4281f5:	callq  412a90 <ASN1_INTEGER_free@plt>
  4281fa:	mov    %r12,%rsi
  4281fd:	mov    %rbx,%rdi
  428200:	callq  4130e0 <X509_CRL_add0_revoked@plt>
  428205:	jmpq   4280de <X509_get0_pubkey_bitstr@plt+0x1170e>
  42820a:	mov    %rbx,%rdi
  42820d:	mov    0xa8(%rsp),%rbp
  428215:	callq  416270 <X509_CRL_sort@plt>
  42821a:	test   %r13d,%r13d
  42821d:	je     428230 <X509_get0_pubkey_bitstr@plt+0x11860>
  42821f:	mov    (%r14),%rdi
  428222:	lea    0x3915e(%rip),%rsi        # 461387 <_fini+0x3e83>
  428229:	xor    %eax,%eax
  42822b:	callq  413c40 <BIO_printf@plt>
  428230:	cmpq   $0x0,0x130(%rsp)
  428239:	setne  %r12b
  42823d:	cmpq   $0x0,0x108(%rsp)
  428246:	setne  %r13b
  42824a:	jne    428411 <X509_get0_pubkey_bitstr@plt+0x11a41>
  428250:	movzbl 0xf0(%rsp),%eax
  428258:	and    $0x1,%eax
  42825b:	test   %r12b,%r12b
  42825e:	jne    428411 <X509_get0_pubkey_bitstr@plt+0x11a41>
  428264:	test   %al,%al
  428266:	jne    4283f1 <X509_get0_pubkey_bitstr@plt+0x11a21>
  42826c:	test   %r13b,%r13b
  42826f:	je     428298 <X509_get0_pubkey_bitstr@plt+0x118c8>
  428271:	mov    0x108(%rsp),%rdi
  428279:	lea    0x35f53(%rip),%rsi        # 45e1d3 <_fini+0xccf>
  428280:	xor    %ecx,%ecx
  428282:	mov    %rbp,%rdx
  428285:	mov    $0x1,%r12d
  42828b:	callq  446c90 <X509_get0_pubkey_bitstr@plt+0x302c0>
  428290:	test   %eax,%eax
  428292:	je     425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  428298:	test   %rbp,%rbp
  42829b:	je     4282a5 <X509_get0_pubkey_bitstr@plt+0x118d5>
  42829d:	mov    %rbp,%rdi
  4282a0:	callq  4138e0 <BN_free@plt>
  4282a5:	mov    0xf8(%rsp),%r8
  4282ad:	mov    0x140(%rsp),%rcx
  4282b5:	mov    %rbx,%rsi
  4282b8:	mov    0xb8(%rsp),%rdx
  4282c0:	mov    (%r14),%rdi
  4282c3:	xor    %ebp,%ebp
  4282c5:	mov    $0x1,%r12d
  4282cb:	callq  41de80 <X509_get0_pubkey_bitstr@plt+0x74b0>
  4282d0:	test   %eax,%eax
  4282d2:	je     425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  4282d8:	mov    0xc8(%rsp),%rdi
  4282e0:	mov    %rbx,%rsi
  4282e3:	callq  4142d0 <PEM_write_bio_X509_CRL@plt>
  4282e8:	test   %r13b,%r13b
  4282eb:	je     428310 <X509_get0_pubkey_bitstr@plt+0x11940>
  4282ed:	mov    0x108(%rsp),%rdi
  4282f5:	lea    0x3910e(%rip),%rdx        # 46140a <_fini+0x3f06>
  4282fc:	lea    0x35ed0(%rip),%rsi        # 45e1d3 <_fini+0xccf>
  428303:	callq  446e60 <X509_get0_pubkey_bitstr@plt+0x30490>
  428308:	test   %eax,%eax
  42830a:	je     425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  428310:	mov    0x19c(%rsp),%esi
  428317:	test   %esi,%esi
  428319:	je     42852b <X509_get0_pubkey_bitstr@plt+0x11b5b>
  42831f:	cmpq   $0x0,0x158(%rsp)
  428328:	je     42850d <X509_get0_pubkey_bitstr@plt+0x11b3d>
  42832e:	mov    0x158(%rsp),%rsi
  428336:	mov    0x1b0(%rsp),%r8
  42833e:	xor    %ecx,%ecx
  428340:	mov    (%r14),%rdi
  428343:	mov    $0x3,%edx
  428348:	mov    %rsi,%r9
  42834b:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  428350:	test   %rax,%rax
  428353:	mov    %rax,%rbp
  428356:	je     42660b <X509_get0_pubkey_bitstr@plt+0xfc3b>
  42835c:	mov    0xa0(%rsp),%r13
  428364:	mov    0x168(%rsp),%rcx
  42836c:	mov    %rax,%rdi
  42836f:	mov    0x170(%rsp),%edx
  428376:	mov    %r13,%rsi
  428379:	callq  4249e0 <X509_get0_pubkey_bitstr@plt+0xe010>
  42837e:	test   %eax,%eax
  428380:	jle    42660b <X509_get0_pubkey_bitstr@plt+0xfc3b>
  428386:	mov    %rbp,%rdi
  428389:	xor    %ebp,%ebp
  42838b:	mov    $0x1,%r12d
  428391:	callq  4153a0 <X509_free@plt>
  428396:	mov    0x180(%rsp),%rdi
  42839e:	lea    0x35e2e(%rip),%rsi        # 45e1d3 <_fini+0xccf>
  4283a5:	mov    %r13,%rdx
  4283a8:	callq  447330 <X509_get0_pubkey_bitstr@plt+0x30960>
  4283ad:	test   %eax,%eax
  4283af:	je     425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  4283b5:	mov    0x180(%rsp),%rdi
  4283bd:	lea    0x39046(%rip),%rdx        # 46140a <_fini+0x3f06>
  4283c4:	lea    0x35e08(%rip),%rsi        # 45e1d3 <_fini+0xccf>
  4283cb:	callq  447580 <X509_get0_pubkey_bitstr@plt+0x30bb0>
  4283d0:	test   %eax,%eax
  4283d2:	je     425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  4283d8:	mov    (%r14),%rdi
  4283db:	lea    0x38f36(%rip),%rsi        # 461318 <_fini+0x3e14>
  4283e2:	xor    %eax,%eax
  4283e4:	xor    %r12b,%r12b
  4283e7:	callq  413c40 <BIO_printf@plt>
  4283ec:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  4283f1:	mov    $0x1,%esi
  4283f6:	mov    %rbx,%rdi
  4283f9:	mov    $0x1,%r12d
  4283ff:	callq  413480 <X509_CRL_set_version@plt>
  428404:	test   %eax,%eax
  428406:	je     425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  42840c:	jmpq   42826c <X509_get0_pubkey_bitstr@plt+0x1189c>
  428411:	lea    0x270(%rsp),%rax
  428419:	mov    0xb0(%rsp),%rsi
  428421:	xor    %r9d,%r9d
  428424:	xor    %ecx,%ecx
  428426:	xor    %edx,%edx
  428428:	mov    %rbx,%r8
  42842b:	mov    %rax,%rdi
  42842e:	mov    %rax,0xa8(%rsp)
  428436:	callq  413910 <X509V3_set_ctx@plt>
  42843b:	mov    0x252ef6(%rip),%rsi        # 67b338 <_edata+0x630>
  428442:	mov    0xa8(%rsp),%rdi
  42844a:	callq  4155a0 <X509V3_set_nconf@plt>
  42844f:	test   %r12b,%r12b
  428452:	je     42847b <X509_get0_pubkey_bitstr@plt+0x11aab>
  428454:	mov    0x130(%rsp),%rdx
  42845c:	mov    0xa8(%rsp),%rsi
  428464:	mov    %rbx,%rcx
  428467:	mov    0x252eca(%rip),%rdi        # 67b338 <_edata+0x630>
  42846e:	callq  4131d0 <X509V3_EXT_CRL_add_nconf@plt>
  428473:	test   %eax,%eax
  428475:	je     42660d <X509_get0_pubkey_bitstr@plt+0xfc3d>
  42847b:	test   %r13b,%r13b
  42847e:	je     428599 <X509_get0_pubkey_bitstr@plt+0x11bc9>
  428484:	xor    %esi,%esi
  428486:	mov    %rbp,%rdi
  428489:	callq  412da0 <BN_to_ASN1_INTEGER@plt>
  42848e:	test   %rax,%rax
  428491:	mov    %rax,%r12
  428494:	je     42660d <X509_get0_pubkey_bitstr@plt+0xfc3d>
  42849a:	xor    %r8d,%r8d
  42849d:	xor    %ecx,%ecx
  42849f:	mov    %rax,%rdx
  4284a2:	mov    $0x58,%esi
  4284a7:	mov    %rbx,%rdi
  4284aa:	callq  415ae0 <X509_CRL_add1_ext_i2d@plt>
  4284af:	mov    %r12,%rdi
  4284b2:	callq  412a90 <ASN1_INTEGER_free@plt>
  4284b7:	mov    $0x1,%esi
  4284bc:	mov    %rbp,%rdi
  4284bf:	callq  414220 <BN_add_word@plt>
  4284c4:	test   %eax,%eax
  4284c6:	je     42660d <X509_get0_pubkey_bitstr@plt+0xfc3d>
  4284cc:	mov    %r13d,%eax
  4284cf:	jmpq   428264 <X509_get0_pubkey_bitstr@plt+0x11894>
  4284d4:	lea    0x39c85(%rip),%rsi        # 462160 <_fini+0x4c5c>
  4284db:	mov    (%r14),%rdi
  4284de:	xor    %eax,%eax
  4284e0:	xor    %ebx,%ebx
  4284e2:	callq  413c40 <BIO_printf@plt>
  4284e7:	jmpq   42660d <X509_get0_pubkey_bitstr@plt+0xfc3d>
  4284ec:	mov    (%r14),%rdi
  4284ef:	lea    0x38e73(%rip),%rsi        # 461369 <_fini+0x3e65>
  4284f6:	callq  413b70 <BIO_puts@plt>
  4284fb:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  428500:	mov    0xa8(%rsp),%rbp
  428508:	jmpq   42660d <X509_get0_pubkey_bitstr@plt+0xfc3d>
  42850d:	mov    (%r14),%rdi
  428510:	lea    0x38e7d(%rip),%rsi        # 461394 <_fini+0x3e90>
  428517:	xor    %eax,%eax
  428519:	xor    %ebp,%ebp
  42851b:	mov    $0x1,%r12d
  428521:	callq  413c40 <BIO_printf@plt>
  428526:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  42852b:	xor    %ebp,%ebp
  42852d:	xor    %r12d,%r12d
  428530:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  428535:	mov    0x130(%rsp),%rdx
  42853d:	mov    (%r14),%rdi
  428540:	lea    0x39bd1(%rip),%rsi        # 462118 <_fini+0x4c14>
  428547:	xor    %eax,%eax
  428549:	xor    %ebx,%ebx
  42854b:	xor    %ebp,%ebp
  42854d:	mov    $0x1,%r12d
  428553:	callq  413c40 <BIO_printf@plt>
  428558:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  42855d:	mov    0x252dc4(%rip),%rsi        # 67b328 <_edata+0x620>
  428564:	mov    0x252dcd(%rip),%rdi        # 67b338 <_edata+0x630>
  42856b:	lea    0x38db9(%rip),%rdx        # 46132b <_fini+0x3e27>
  428572:	callq  413fd0 <NCONF_get_string@plt>
  428577:	test   %rax,%rax
  42857a:	mov    %rax,0x130(%rsp)
  428582:	jne    427ec0 <X509_get0_pubkey_bitstr@plt+0x114f0>
  428588:	callq  412890 <ERR_clear_error@plt>
  42858d:	jmpq   427f0f <X509_get0_pubkey_bitstr@plt+0x1153f>
  428592:	xor    %ebp,%ebp
  428594:	jmpq   427f59 <X509_get0_pubkey_bitstr@plt+0x11589>
  428599:	movzbl 0xf0(%rsp),%eax
  4285a1:	and    $0x1,%eax
  4285a4:	or     %r12d,%eax
  4285a7:	jmpq   428264 <X509_get0_pubkey_bitstr@plt+0x11894>
  4285ac:	xor    %ebx,%ebx
  4285ae:	jmpq   428310 <X509_get0_pubkey_bitstr@plt+0x11940>
  4285b3:	mov    0x1a0(%rsp),%rdi
  4285bb:	lea    0x38e48(%rip),%rdx        # 46140a <_fini+0x3f06>
  4285c2:	lea    0x35c0a(%rip),%rsi        # 45e1d3 <_fini+0xccf>
  4285c9:	callq  446e60 <X509_get0_pubkey_bitstr@plt+0x30490>
  4285ce:	test   %eax,%eax
  4285d0:	je     426d4e <X509_get0_pubkey_bitstr@plt+0x1037e>
  4285d6:	mov    0x180(%rsp),%rdi
  4285de:	lea    0x38e25(%rip),%rdx        # 46140a <_fini+0x3f06>
  4285e5:	lea    0x35be7(%rip),%rsi        # 45e1d3 <_fini+0xccf>
  4285ec:	callq  447580 <X509_get0_pubkey_bitstr@plt+0x30bb0>
  4285f1:	test   %eax,%eax
  4285f3:	je     426d4e <X509_get0_pubkey_bitstr@plt+0x1037e>
  4285f9:	mov    (%r14),%rdi
  4285fc:	lea    0x38d15(%rip),%rsi        # 461318 <_fini+0x3e14>
  428603:	xor    %eax,%eax
  428605:	callq  413c40 <BIO_printf@plt>
  42860a:	jmpq   427ea0 <X509_get0_pubkey_bitstr@plt+0x114d0>
  42860f:	movb   $0x30,0x4b0(%rsp,%rdx,1)
  428617:	add    $0x2,%rdi
  42861b:	movb   $0x30,-0x1(%rdi)
  42861f:	test   %r13d,%r13d
  428622:	movb   $0x2e,(%rdi)
  428625:	movb   $0x70,0x1(%rdi)
  428629:	movb   $0x65,0x2(%rdi)
  42862d:	movb   $0x6d,0x3(%rdi)
  428631:	movb   $0x0,0x4(%rdi)
  428635:	je     42864b <X509_get0_pubkey_bitstr@plt+0x11c7b>
  428637:	mov    (%r14),%rdi
  42863a:	lea    0x38ccb(%rip),%rsi        # 46130c <_fini+0x3e08>
  428641:	mov    %r12,%rdx
  428644:	xor    %eax,%eax
  428646:	callq  413c40 <BIO_printf@plt>
  42864b:	mov    0xd0(%rsp),%rdi
  428653:	mov    %r12,%rcx
  428656:	mov    $0x5,%edx
  42865b:	mov    $0x6c,%esi
  428660:	callq  412af0 <BIO_ctrl@plt>
  428665:	test   %rax,%rax
  428668:	jle    428717 <X509_get0_pubkey_bitstr@plt+0x11d47>
  42866e:	mov    0x1ac(%rsp),%r10d
  428676:	mov    0x268(%rsp),%rbx
  42867e:	test   %r10d,%r10d
  428681:	mov    %rbx,%rsi
  428684:	je     4286d5 <X509_get0_pubkey_bitstr@plt+0x11d05>
  428686:	mov    0xd0(%rsp),%rdi
  42868e:	callq  413490 <PEM_write_bio_X509@plt>
  428693:	mov    0x150(%rsp),%eax
  42869a:	mov    0x268(%rsp),%rbx
  4286a2:	test   %eax,%eax
  4286a4:	jne    4286c3 <X509_get0_pubkey_bitstr@plt+0x11cf3>
  4286a6:	mov    0xc8(%rsp),%rdi
  4286ae:	mov    %rbx,%rsi
  4286b1:	callq  413490 <PEM_write_bio_X509@plt>
  4286b6:	addl   $0x1,0xa8(%rsp)
  4286be:	jmpq   427d2f <X509_get0_pubkey_bitstr@plt+0x1135f>
  4286c3:	mov    0xc8(%rsp),%rdi
  4286cb:	mov    %rbx,%rsi
  4286ce:	callq  412850 <i2d_X509_bio@plt>
  4286d3:	jmp    4286b6 <X509_get0_pubkey_bitstr@plt+0x11ce6>
  4286d5:	mov    0xd0(%rsp),%rbp
  4286dd:	mov    %rbp,%rdi
  4286e0:	callq  414e30 <X509_print@plt>
  4286e5:	mov    %rbx,%rsi
  4286e8:	mov    %rbp,%rdi
  4286eb:	callq  413490 <PEM_write_bio_X509@plt>
  4286f0:	mov    0x150(%rsp),%r9d
  4286f8:	mov    0x268(%rsp),%rbx
  428700:	test   %r9d,%r9d
  428703:	jne    4286c3 <X509_get0_pubkey_bitstr@plt+0x11cf3>
  428705:	mov    0xc8(%rsp),%rdi
  42870d:	mov    %rbx,%rsi
  428710:	callq  414e30 <X509_print@plt>
  428715:	jmp    4286a6 <X509_get0_pubkey_bitstr@plt+0x11cd6>
  428717:	mov    %r12,%rdi
  42871a:	xor    %ebx,%ebx
  42871c:	xor    %ebp,%ebp
  42871e:	callq  4142c0 <perror@plt>
  428723:	mov    $0x1,%r12d
  428729:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  42872e:	lea    0x399c3(%rip),%rsi        # 4620f8 <_fini+0x4bf4>
  428735:	mov    (%r14),%rdi
  428738:	xor    %eax,%eax
  42873a:	xor    %ebx,%ebx
  42873c:	xor    %ebp,%ebp
  42873e:	mov    $0x1,%r12d
  428744:	callq  413c40 <BIO_printf@plt>
  428749:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  42874e:	mov    (%r14),%rdi
  428751:	lea    0x38b82(%rip),%rsi        # 4612da <_fini+0x3dd6>
  428758:	xor    %eax,%eax
  42875a:	xor    %ebx,%ebx
  42875c:	xor    %ebp,%ebp
  42875e:	xor    %r12d,%r12d
  428761:	callq  413c40 <BIO_printf@plt>
  428766:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  42876b:	mov    (%r14),%rdi
  42876e:	lea    0x39933(%rip),%rsi        # 4620a8 <_fini+0x4ba4>
  428775:	xor    %ebx,%ebx
  428777:	xor    %ebp,%ebp
  428779:	xor    %r12d,%r12d
  42877c:	callq  413c40 <BIO_printf@plt>
  428781:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  428786:	mov    (%r14),%rdi
  428789:	lea    0x35534(%rip),%rsi        # 45dcc4 <_fini+0x7c0>
  428790:	xor    %ebx,%ebx
  428792:	xor    %ebp,%ebp
  428794:	mov    $0x1,%r12d
  42879a:	callq  413c40 <BIO_printf@plt>
  42879f:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  4287a4:	mov    (%r14),%rdi
  4287a7:	lea    0x38709(%rip),%rsi        # 460eb7 <_fini+0x39b3>
  4287ae:	xor    %eax,%eax
  4287b0:	callq  413c40 <BIO_printf@plt>
  4287b5:	callq  412f50 <EVP_md5@plt>
  4287ba:	mov    0x148(%rsp),%rdi
  4287c2:	xor    %esi,%esi
  4287c4:	mov    %rax,%rdx
  4287c7:	callq  412d00 <X509_to_X509_REQ@plt>
  4287cc:	test   %rax,%rax
  4287cf:	mov    %rax,%r11
  4287d2:	je     42894e <X509_get0_pubkey_bitstr@plt+0x11f7e>
  4287d8:	mov    0x188(%rsp),%eax
  4287df:	mov    %r11,0x58(%rsp)
  4287e4:	lea    0x268(%rsp),%r10
  4287ec:	movl   $0x0,0x90(%rsp)
  4287f7:	mov    %r13d,0x50(%rsp)
  4287fc:	mov    %r10,%rdi
  4287ff:	mov    %eax,0x88(%rsp)
  428806:	mov    0x1a8(%rsp),%eax
  42880d:	mov    %eax,0x80(%rsp)
  428814:	mov    0x190(%rsp),%rax
  42881c:	mov    %r11,0x190(%rsp)
  428824:	mov    %rax,0x78(%rsp)
  428829:	mov    0x1b8(%rsp),%rax
  428831:	mov    %rax,0x70(%rsp)
  428836:	mov    0x1c8(%rsp),%rax
  42883e:	mov    %rax,0x68(%rsp)
  428843:	mov    0x100(%rsp),%rax
  42884b:	mov    %rax,0x60(%rsp)
  428850:	mov    0x13c(%rsp),%eax
  428857:	mov    %eax,0x48(%rsp)
  42885b:	mov    0x1d0(%rsp),%rax
  428863:	mov    %rax,0x40(%rsp)
  428868:	mov    0x120(%rsp),%rax
  428870:	mov    %rax,0x38(%rsp)
  428875:	mov    0x110(%rsp),%rax
  42887d:	mov    %rax,0x30(%rsp)
  428882:	mov    0x138(%rsp),%eax
  428889:	mov    %eax,0x28(%rsp)
  42888d:	mov    0x108(%rsp),%eax
  428894:	mov    %eax,0x20(%rsp)
  428898:	mov    0xf0(%rsp),%rax
  4288a0:	mov    %rax,0x18(%rsp)
  4288a5:	mov    0xa8(%rsp),%rax
  4288ad:	mov    %rax,0x10(%rsp)
  4288b2:	mov    0x1d8(%rsp),%rax
  4288ba:	mov    %rax,0x8(%rsp)
  4288bf:	mov    0xa0(%rsp),%rax
  4288c7:	mov    0x160(%rsp),%r9
  4288cf:	mov    0xf8(%rsp),%r8
  4288d7:	mov    0x140(%rsp),%rcx
  4288df:	mov    0xb0(%rsp),%rdx
  4288e7:	mov    0xb8(%rsp),%rsi
  4288ef:	mov    %rax,(%rsp)
  4288f3:	callq  416ebe <X509_get0_pubkey_bitstr@plt+0x4ee>
  4288f8:	mov    0x190(%rsp),%r11
  428900:	mov    %eax,0x188(%rsp)
  428907:	mov    %r11,%rdi
  42890a:	callq  4154a0 <X509_REQ_free@plt>
  42890f:	mov    0x188(%rsp),%eax
  428916:	jmpq   427858 <X509_get0_pubkey_bitstr@plt+0x10e88>
  42891b:	mov    (%r14),%rdi
  42891e:	lea    0x39153(%rip),%rsi        # 461a78 <_fini+0x4574>
  428925:	xor    %eax,%eax
  428927:	callq  413c40 <BIO_printf@plt>
  42892c:	xor    %eax,%eax
  42892e:	jmpq   427858 <X509_get0_pubkey_bitstr@plt+0x10e88>
  428933:	mov    (%r14),%rdi
  428936:	lea    0x3855e(%rip),%rsi        # 460e9b <_fini+0x3997>
  42893d:	xor    %eax,%eax
  42893f:	callq  413c40 <BIO_printf@plt>
  428944:	mov    $0xffffffff,%eax
  428949:	jmpq   427858 <X509_get0_pubkey_bitstr@plt+0x10e88>
  42894e:	cmpq   $0x0,0x148(%rsp)
  428957:	mov    $0xffffffff,%eax
  42895c:	jne    427858 <X509_get0_pubkey_bitstr@plt+0x10e88>
  428962:	jmpq   426d4e <X509_get0_pubkey_bitstr@plt+0x1037e>
  428967:	movl   $0x0,0x150(%rsp)
  428972:	movl   $0x0,0x128(%rsp)
  42897d:	mov    $0x1,%r12d
  428983:	jmpq   42772d <X509_get0_pubkey_bitstr@plt+0x10d5d>
  428988:	mov    (%r14),%rdi
  42898b:	lea    0x3966e(%rip),%rsi        # 462000 <_fini+0x4afc>
  428992:	xor    %eax,%eax
  428994:	callq  413c40 <BIO_printf@plt>
  428999:	mov    $0xffffffff,%eax
  42899e:	jmpq   42764f <X509_get0_pubkey_bitstr@plt+0x10c7f>
  4289a3:	mov    (%r14),%rdi
  4289a6:	lea    0x3962b(%rip),%rsi        # 461fd8 <_fini+0x4ad4>
  4289ad:	callq  413c40 <BIO_printf@plt>
  4289b2:	mov    $0xffffffff,%eax
  4289b7:	jmpq   42764f <X509_get0_pubkey_bitstr@plt+0x10c7f>
  4289bc:	mov    0x150(%rsp),%rdx
  4289c4:	mov    (%r14),%rdi
  4289c7:	lea    0x395a2(%rip),%rsi        # 461f70 <_fini+0x4a6c>
  4289ce:	xor    %eax,%eax
  4289d0:	callq  413c40 <BIO_printf@plt>
  4289d5:	mov    $0xffffffff,%eax
  4289da:	jmpq   42764f <X509_get0_pubkey_bitstr@plt+0x10c7f>
  4289df:	mov    0x252942(%rip),%rsi        # 67b328 <_edata+0x620>
  4289e6:	mov    0x25294b(%rip),%rdi        # 67b338 <_edata+0x630>
  4289ed:	lea    0x250(%rsp),%rcx
  4289f5:	lea    0x38897(%rip),%rdx        # 461293 <_fini+0x3d8f>
  4289fc:	callq  416450 <NCONF_get_number_e@plt>
  428a01:	test   %eax,%eax
  428a03:	jne    427200 <X509_get0_pubkey_bitstr@plt+0x10830>
  428a09:	movq   $0x0,0x250(%rsp)
  428a15:	jmpq   427200 <X509_get0_pubkey_bitstr@plt+0x10830>
  428a1a:	lea    0x3942f(%rip),%rsi        # 461e50 <_fini+0x494c>
  428a21:	jmpq   4274a5 <X509_get0_pubkey_bitstr@plt+0x10ad5>
  428a26:	mov    0x2528fb(%rip),%rsi        # 67b328 <_edata+0x620>
  428a2d:	mov    0x252904(%rip),%rdi        # 67b338 <_edata+0x630>
  428a34:	lea    0x38848(%rip),%rdx        # 461283 <_fini+0x3d7f>
  428a3b:	callq  413fd0 <NCONF_get_string@plt>
  428a40:	test   %rax,%rax
  428a43:	mov    %rax,0x120(%rsp)
  428a4b:	jne    4271da <X509_get0_pubkey_bitstr@plt+0x1080a>
  428a51:	callq  412890 <ERR_clear_error@plt>
  428a56:	jmpq   4271f1 <X509_get0_pubkey_bitstr@plt+0x10821>
  428a5b:	lea    0x393a6(%rip),%rsi        # 461e08 <_fini+0x4904>
  428a62:	jmpq   4274a5 <X509_get0_pubkey_bitstr@plt+0x10ad5>
  428a67:	mov    0x2528ba(%rip),%rsi        # 67b328 <_edata+0x620>
  428a6e:	mov    0x2528c3(%rip),%rdi        # 67b338 <_edata+0x630>
  428a75:	lea    0x387f5(%rip),%rdx        # 461271 <_fini+0x3d6d>
  428a7c:	callq  413fd0 <NCONF_get_string@plt>
  428a81:	test   %rax,%rax
  428a84:	mov    %rax,0x110(%rsp)
  428a8c:	jne    4271b4 <X509_get0_pubkey_bitstr@plt+0x107e4>
  428a92:	callq  412890 <ERR_clear_error@plt>
  428a97:	lea    0x383b8(%rip),%rax        # 460e56 <_fini+0x3952>
  428a9e:	mov    %rax,0x110(%rsp)
  428aa6:	jmpq   4271cb <X509_get0_pubkey_bitstr@plt+0x107fb>
  428aab:	cmpq   $0x0,0x100(%rsp)
  428ab4:	je     428bb6 <X509_get0_pubkey_bitstr@plt+0x121e6>
  428aba:	lea    0x270(%rsp),%r12
  428ac2:	xor    %r8d,%r8d
  428ac5:	xor    %ecx,%ecx
  428ac7:	xor    %edx,%edx
  428ac9:	mov    $0x1,%r9d
  428acf:	xor    %esi,%esi
  428ad1:	mov    %r12,%rdi
  428ad4:	callq  413910 <X509V3_set_ctx@plt>
  428ad9:	mov    0x252858(%rip),%rsi        # 67b338 <_edata+0x630>
  428ae0:	mov    %r12,%rdi
  428ae3:	callq  4155a0 <X509V3_set_nconf@plt>
  428ae8:	mov    0x100(%rsp),%rdx
  428af0:	mov    0x252841(%rip),%rdi        # 67b338 <_edata+0x630>
  428af7:	xor    %ecx,%ecx
  428af9:	mov    %r12,%rsi
  428afc:	callq  4168d0 <X509V3_EXT_add_nconf@plt>
  428b01:	test   %eax,%eax
  428b03:	jne    4271a5 <X509_get0_pubkey_bitstr@plt+0x107d5>
  428b09:	mov    0x100(%rsp),%rdx
  428b11:	mov    (%r14),%rdi
  428b14:	lea    0x36445(%rip),%rsi        # 45ef60 <_fini+0x1a5c>
  428b1b:	xor    %eax,%eax
  428b1d:	callq  413c40 <BIO_printf@plt>
  428b22:	jmpq   426d4b <X509_get0_pubkey_bitstr@plt+0x1037b>
  428b27:	mov    0x2527fa(%rip),%rsi        # 67b328 <_edata+0x620>
  428b2e:	mov    0x252803(%rip),%rdi        # 67b338 <_edata+0x630>
  428b35:	lea    0x3587c(%rip),%rdx        # 45e3b8 <_fini+0xeb4>
  428b3c:	callq  413fd0 <NCONF_get_string@plt>
  428b41:	test   %rax,%rax
  428b44:	mov    %rax,0x128(%rsp)
  428b4c:	jne    42708d <X509_get0_pubkey_bitstr@plt+0x106bd>
  428b52:	lea    0x3585f(%rip),%rcx        # 45e3b8 <_fini+0xeb4>
  428b59:	mov    0x2527c8(%rip),%rdx        # 67b328 <_edata+0x620>
  428b60:	mov    (%r14),%rdi
  428b63:	lea    0x38fbe(%rip),%rsi        # 461b28 <_fini+0x4624>
  428b6a:	callq  413c40 <BIO_printf@plt>
  428b6f:	xor    %r15d,%r15d
  428b72:	xor    %ebx,%ebx
  428b74:	xor    %ebp,%ebp
  428b76:	mov    $0x1,%r12d
  428b7c:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  428b81:	mov    %rax,%rdi
  428b84:	callq  414930 <BN_bn2hex@plt>
  428b89:	test   %rax,%rax
  428b8c:	mov    %rax,%r12
  428b8f:	je     426d4b <X509_get0_pubkey_bitstr@plt+0x1037b>
  428b95:	mov    (%r14),%rdi
  428b98:	lea    0x3871b(%rip),%rsi        # 4612ba <_fini+0x3db6>
  428b9f:	mov    %rax,%rdx
  428ba2:	xor    %eax,%eax
  428ba4:	callq  413c40 <BIO_printf@plt>
  428ba9:	mov    %r12,%rdi
  428bac:	callq  415020 <CRYPTO_free@plt>
  428bb1:	jmpq   427255 <X509_get0_pubkey_bitstr@plt+0x10885>
  428bb6:	mov    0x25276b(%rip),%rsi        # 67b328 <_edata+0x620>
  428bbd:	mov    0x252774(%rip),%rdi        # 67b338 <_edata+0x630>
  428bc4:	lea    0x357f8(%rip),%rdx        # 45e3c3 <_fini+0xebf>
  428bcb:	callq  413fd0 <NCONF_get_string@plt>
  428bd0:	test   %rax,%rax
  428bd3:	mov    %rax,0x100(%rsp)
  428bdb:	jne    428aba <X509_get0_pubkey_bitstr@plt+0x120ea>
  428be1:	callq  412890 <ERR_clear_error@plt>
  428be6:	jmpq   4271a5 <X509_get0_pubkey_bitstr@plt+0x107d5>
  428beb:	mov    0x150(%rsp),%rcx
  428bf3:	mov    0x270(%rsp),%rdx
  428bfb:	lea    0x35794(%rip),%rsi        # 45e396 <_fini+0xe92>
  428c02:	mov    (%r14),%rdi
  428c05:	xor    %ebx,%ebx
  428c07:	xor    %ebp,%ebp
  428c09:	mov    $0x1,%r12d
  428c0f:	callq  413c40 <BIO_printf@plt>
  428c14:	mov    (%r14),%rdi
  428c17:	callq  413f40 <ERR_print_errors@plt>
  428c1c:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  428c21:	movl   $0x0,0x150(%rsp)
  428c2c:	movl   $0x0,0x128(%rsp)
  428c37:	xor    %r12d,%r12d
  428c3a:	jmpq   42772d <X509_get0_pubkey_bitstr@plt+0x10d5d>
  428c3f:	lea    0x3507e(%rip),%rsi        # 45dcc4 <_fini+0x7c0>
  428c46:	jmpq   428735 <X509_get0_pubkey_bitstr@plt+0x11d65>
  428c4b:	mov    0x128(%rsp),%rdx
  428c53:	lea    0x37a06(%rip),%rsi        # 460660 <_fini+0x315c>
  428c5a:	mov    (%r14),%rdi
  428c5d:	jmpq   428b1d <X509_get0_pubkey_bitstr@plt+0x1214d>
  428c62:	mov    (%r14),%rdi
  428c65:	callq  413f40 <ERR_print_errors@plt>
  428c6a:	mov    $0xffffffff,%eax
  428c6f:	xor    %r12d,%r12d
  428c72:	jmpq   42766a <X509_get0_pubkey_bitstr@plt+0x10c9a>
  428c77:	mov    (%r14),%rdi
  428c7a:	mov    0x150(%rsp),%rdx
  428c82:	lea    0x3928f(%rip),%rsi        # 461f18 <_fini+0x4a14>
  428c89:	callq  413c40 <BIO_printf@plt>
  428c8e:	mov    0x148(%rsp),%rdi
  428c96:	callq  415b00 <CONF_free@plt>
  428c9b:	jmp    428c6a <X509_get0_pubkey_bitstr@plt+0x1229a>
  428c9d:	mov    0x10(%r8),%rdi
  428ca1:	mov    $0xffffffff,%esi
  428ca6:	callq  415fb0 <NETSCAPE_SPKI_b64_decode@plt>
  428cab:	test   %rax,%rax
  428cae:	mov    %rax,%r12
  428cb1:	jne    427461 <X509_get0_pubkey_bitstr@plt+0x10a91>
  428cb7:	mov    (%r14),%rdi
  428cba:	lea    0x3927f(%rip),%rsi        # 461f40 <_fini+0x4a3c>
  428cc1:	xor    %eax,%eax
  428cc3:	callq  413c40 <BIO_printf@plt>
  428cc8:	mov    (%r14),%rdi
  428ccb:	callq  413f40 <ERR_print_errors@plt>
  428cd0:	mov    $0xffffffff,%eax
  428cd5:	jmpq   42764f <X509_get0_pubkey_bitstr@plt+0x10c7f>
  428cda:	mov    0xf0(%rsp),%edx
  428ce1:	mov    0x200(%rsp),%rdi
  428ce9:	mov    $0xffffffff,%r9d
  428cef:	movl   $0x0,(%rsp)
  428cf6:	mov    %r9d,%r8d
  428cf9:	mov    %eax,%esi
  428cfb:	callq  4143d0 <X509_NAME_add_entry_by_NID@plt>
  428d00:	test   %eax,%eax
  428d02:	jne    427461 <X509_get0_pubkey_bitstr@plt+0x10a91>
  428d08:	mov    $0xffffffff,%eax
  428d0d:	jmpq   42764f <X509_get0_pubkey_bitstr@plt+0x10c7f>
  428d12:	mov    0x25260f(%rip),%rsi        # 67b328 <_edata+0x620>
  428d19:	mov    0x252618(%rip),%rdi        # 67b338 <_edata+0x630>
  428d20:	lea    0x3826b(%rip),%rdx        # 460f92 <_fini+0x3a8e>
  428d27:	callq  413fd0 <NCONF_get_string@plt>
  428d2c:	test   %rax,%rax
  428d2f:	mov    %rax,0x148(%rsp)
  428d37:	lea    0x38254(%rip),%rcx        # 460f92 <_fini+0x3a8e>
  428d3e:	jne    427147 <X509_get0_pubkey_bitstr@plt+0x10777>
  428d44:	jmpq   428b59 <X509_get0_pubkey_bitstr@plt+0x12189>
  428d49:	mov    0x2525d8(%rip),%rsi        # 67b328 <_edata+0x620>
  428d50:	mov    0x2525e1(%rip),%rdi        # 67b338 <_edata+0x630>
  428d57:	lea    0x384e3(%rip),%rdx        # 461241 <_fini+0x3d3d>
  428d5e:	callq  413fd0 <NCONF_get_string@plt>
  428d63:	test   %rax,%rax
  428d66:	je     427110 <X509_get0_pubkey_bitstr@plt+0x10740>
  428d6c:	movzbl (%rax),%edx
  428d6f:	sub    $0x6e,%edx
  428d72:	jne    428d81 <X509_get0_pubkey_bitstr@plt+0x123b1>
  428d74:	movzbl 0x1(%rax),%edx
  428d78:	sub    $0x6f,%edx
  428d7b:	jne    428d81 <X509_get0_pubkey_bitstr@plt+0x123b1>
  428d7d:	movzbl 0x2(%rax),%edx
  428d81:	xor    %eax,%eax
  428d83:	test   %edx,%edx
  428d85:	setne  %al
  428d88:	mov    %eax,0x138(%rsp)
  428d8f:	jmpq   427110 <X509_get0_pubkey_bitstr@plt+0x10740>
  428d94:	xor    %r15d,%r15d
  428d97:	jmpq   427ea0 <X509_get0_pubkey_bitstr@plt+0x114d0>
  428d9c:	mov    (%r14),%rdi
  428d9f:	lea    0x38488(%rip),%rsi        # 46122e <_fini+0x3d2a>
  428da6:	xor    %r15d,%r15d
  428da9:	xor    %ebx,%ebx
  428dab:	xor    %ebp,%ebp
  428dad:	mov    $0x1,%r12d
  428db3:	callq  413b70 <BIO_puts@plt>
  428db8:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  428dbd:	mov    0x188(%rsp),%rdi
  428dc5:	xor    %r15d,%r15d
  428dc8:	xor    %ebx,%ebx
  428dca:	xor    %ebp,%ebp
  428dcc:	mov    $0x1,%r12d
  428dd2:	callq  4142c0 <perror@plt>
  428dd7:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  428ddc:	mov    0x24d0d5(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  428de3:	mov    0xc8(%rsp),%rdi
  428deb:	mov    $0x10,%edx
  428df0:	mov    $0x6a,%esi
  428df5:	mov    (%rax),%rcx
  428df8:	callq  412af0 <BIO_ctrl@plt>
  428dfd:	jmpq   42707e <X509_get0_pubkey_bitstr@plt+0x106ae>
  428e02:	mov    0x240(%rsp),%rdx
  428e0a:	test   %rdx,%rdx
  428e0d:	jle    428e8a <X509_get0_pubkey_bitstr@plt+0x124ba>
  428e0f:	mov    0x160(%rsp),%rcx
  428e17:	lea    0x38f9a(%rip),%rsi        # 461db8 <_fini+0x48b4>
  428e1e:	mov    (%r14),%rdi
  428e21:	xor    %eax,%eax
  428e23:	jmpq   428b6a <X509_get0_pubkey_bitstr@plt+0x1219a>
  428e28:	mov    0x8(%rax),%rax
  428e2c:	lea    0x383ec(%rip),%rdi        # 46121f <_fini+0x3d1b>
  428e33:	mov    $0x2,%ecx
  428e38:	mov    %rax,%rsi
  428e3b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  428e3d:	seta   %cl
  428e40:	setb   %sil
  428e44:	sub    %esi,%ecx
  428e46:	test   %cl,%cl
  428e48:	setle  %cl
  428e4b:	movzbl %cl,%ecx
  428e4e:	cmp    0x1e0(%rsp),%ecx
  428e55:	je     428ea3 <X509_get0_pubkey_bitstr@plt+0x124d3>
  428e57:	jge    426f39 <X509_get0_pubkey_bitstr@plt+0x10569>
  428e5d:	movb   $0x45,(%r8)
  428e61:	mov    (%rdx),%rax
  428e64:	lea    0x383b7(%rip),%rsi        # 461222 <_fini+0x3d1e>
  428e6b:	movb   $0x0,0x1(%rax)
  428e6f:	mov    0x18(%rdx),%rdx
  428e73:	xor    %eax,%eax
  428e75:	mov    (%r14),%rdi
  428e78:	addl   $0x1,0x1b8(%rsp)
  428e80:	callq  413c40 <BIO_printf@plt>
  428e85:	jmpq   426f39 <X509_get0_pubkey_bitstr@plt+0x10569>
  428e8a:	mov    0x160(%rsp),%rdx
  428e92:	lea    0x38ef7(%rip),%rsi        # 461d90 <_fini+0x488c>
  428e99:	mov    (%r14),%rdi
  428e9c:	xor    %eax,%eax
  428e9e:	jmpq   428b1d <X509_get0_pubkey_bitstr@plt+0x1214d>
  428ea3:	mov    0x1a0(%rsp),%rsi
  428eab:	mov    %rax,%rdi
  428eae:	mov    %r8,0x1f8(%rsp)
  428eb6:	mov    %rdx,0x1f0(%rsp)
  428ebe:	callq  4155c0 <strcmp@plt>
  428ec3:	test   %eax,%eax
  428ec5:	mov    0x1f0(%rsp),%rdx
  428ecd:	mov    0x1f8(%rsp),%r8
  428ed5:	jg     426f39 <X509_get0_pubkey_bitstr@plt+0x10569>
  428edb:	jmp    428e5d <X509_get0_pubkey_bitstr@plt+0x1248d>
  428edd:	mov    %r12,%rdi
  428ee0:	callq  412eb0 <ASN1_UTCTIME_free@plt>
  428ee5:	mov    0x1a0(%rsp),%rdi
  428eed:	callq  415020 <CRYPTO_free@plt>
  428ef2:	mov    0x1b8(%rsp),%edx
  428ef9:	test   %edx,%edx
  428efb:	jne    426f43 <X509_get0_pubkey_bitstr@plt+0x10573>
  428f01:	test   %r13d,%r13d
  428f04:	je     426fa7 <X509_get0_pubkey_bitstr@plt+0x105d7>
  428f0a:	mov    (%r14),%rdi
  428f0d:	lea    0x38e2c(%rip),%rsi        # 461d40 <_fini+0x483c>
  428f14:	xor    %eax,%eax
  428f16:	callq  413c40 <BIO_printf@plt>
  428f1b:	jmpq   426fa7 <X509_get0_pubkey_bitstr@plt+0x105d7>
  428f20:	mov    %r12,%rdi
  428f23:	callq  412eb0 <ASN1_UTCTIME_free@plt>
  428f28:	xor    %edi,%edi
  428f2a:	callq  415020 <CRYPTO_free@plt>
  428f2f:	lea    0x3817e(%rip),%rsi        # 4610b4 <_fini+0x3bb0>
  428f36:	jmpq   4274a5 <X509_get0_pubkey_bitstr@plt+0x10ad5>
  428f3b:	mov    0x118(%rsp),%rbx
  428f43:	lea    0x38289(%rip),%rsi        # 4611d3 <_fini+0x3ccf>
  428f4a:	mov    %rbx,%rdx
  428f4d:	jmpq   4265e8 <X509_get0_pubkey_bitstr@plt+0xfc18>
  428f52:	callq  412890 <ERR_clear_error@plt>
  428f57:	jmpq   42656b <X509_get0_pubkey_bitstr@plt+0xfb9b>
  428f5c:	mov    (%r14),%rdi
  428f5f:	lea    0x38c6a(%rip),%rsi        # 461bd0 <_fini+0x46cc>
  428f66:	callq  413c40 <BIO_printf@plt>
  428f6b:	jmpq   4265fa <X509_get0_pubkey_bitstr@plt+0xfc2a>
  428f70:	lea    0x352a1(%rip),%rdi        # 45e218 <_fini+0xd14>
  428f77:	mov    $0x8,%ecx
  428f7c:	mov    %rax,%rsi
  428f7f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  428f81:	jne    42917e <X509_get0_pubkey_bitstr@plt+0x127ae>
  428f87:	sub    $0x1,%ebx
  428f8a:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  428f90:	cmpq   $0x0,0xf8(%rsp)
  428f99:	je     42913f <X509_get0_pubkey_bitstr@plt+0x1276f>
  428f9f:	mov    0x8(%rbp),%rsi
  428fa3:	mov    0xf8(%rsp),%rdi
  428fab:	lea    0x8(%rbp),%rax
  428faf:	mov    %r9,0xd8(%rsp)
  428fb7:	mov    %r8,0xd0(%rsp)
  428fbf:	mov    %rax,0xc8(%rsp)
  428fc7:	callq  412fe0 <sk_push@plt>
  428fcc:	test   %eax,%eax
  428fce:	mov    0xd0(%rsp),%r8
  428fd6:	mov    0xd8(%rsp),%r9
  428fde:	je     429136 <X509_get0_pubkey_bitstr@plt+0x12766>
  428fe4:	mov    0xc8(%rsp),%rbp
  428fec:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  428ff1:	mov    0xb8(%rsp),%rsi
  428ff9:	mov    (%r14),%rdi
  428ffc:	lea    0x228(%rsp),%rcx
  429004:	xor    %edx,%edx
  429006:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  42900b:	test   %eax,%eax
  42900d:	je     42902c <X509_get0_pubkey_bitstr@plt+0x1265c>
  42900f:	mov    0x228(%rsp),%r8
  429017:	movl   $0x1,0xc0(%rsp)
  429022:	jmpq   42634b <X509_get0_pubkey_bitstr@plt+0xf97b>
  429027:	callq  414c30 <__stack_chk_fail@plt>
  42902c:	mov    (%r14),%rdi
  42902f:	lea    0x368fe(%rip),%rsi        # 45f934 <_fini+0x2430>
  429036:	xor    %eax,%eax
  429038:	xor    %r15d,%r15d
  42903b:	xor    %ebx,%ebx
  42903d:	xor    %ebp,%ebp
  42903f:	mov    $0x1,%r12d
  429045:	callq  413c40 <BIO_printf@plt>
  42904a:	movq   $0x0,0xa0(%rsp)
  429056:	movq   $0x0,0xb0(%rsp)
  429062:	movq   $0x0,0xb8(%rsp)
  42906e:	movl   $0x1,0xc0(%rsp)
  429079:	jmpq   425860 <X509_get0_pubkey_bitstr@plt+0xee90>
  42907e:	lea    0x3810b(%rip),%rsi        # 461190 <_fini+0x3c8c>
  429085:	mov    %r12,%rdx
  429088:	mov    (%r14),%rdi
  42908b:	callq  413c40 <BIO_printf@plt>
  429090:	jmpq   4265fa <X509_get0_pubkey_bitstr@plt+0xfc2a>
  429095:	callq  412890 <ERR_clear_error@plt>
  42909a:	nopw   0x0(%rax,%rax,1)
  4290a0:	jmpq   426523 <X509_get0_pubkey_bitstr@plt+0xfb53>
  4290a5:	callq  412890 <ERR_clear_error@plt>
  4290aa:	movl   $0x1,0x1a8(%rsp)
  4290b5:	jmpq   4264d0 <X509_get0_pubkey_bitstr@plt+0xfb00>
  4290ba:	mov    0x252267(%rip),%rsi        # 67b328 <_edata+0x620>
  4290c1:	mov    0x252270(%rip),%rdi        # 67b338 <_edata+0x630>
  4290c8:	lea    0x38085(%rip),%rdx        # 461154 <_fini+0x3c50>
  4290cf:	callq  413fd0 <NCONF_get_string@plt>
  4290d4:	test   %rax,%rax
  4290d7:	mov    %rax,0xa0(%rsp)
  4290df:	jne    42632f <X509_get0_pubkey_bitstr@plt+0xf95f>
  4290e5:	lea    0x38068(%rip),%rcx        # 461154 <_fini+0x3c50>
  4290ec:	mov    0x252235(%rip),%rdx        # 67b328 <_edata+0x620>
  4290f3:	mov    (%r14),%rdi
  4290f6:	lea    0x38a2b(%rip),%rsi        # 461b28 <_fini+0x4624>
  4290fd:	xor    %r15d,%r15d
  429100:	xor    %ebx,%ebx
  429102:	callq  413c40 <BIO_printf@plt>
  429107:	movq   $0x0,0xa0(%rsp)
  429113:	jmpq   425835 <X509_get0_pubkey_bitstr@plt+0xee65>
  429118:	callq  412890 <ERR_clear_error@plt>
  42911d:	jmpq   425c89 <X509_get0_pubkey_bitstr@plt+0xf2b9>
  429122:	mov    (%r14),%rdi
  429125:	lea    0x38a24(%rip),%rsi        # 461b50 <_fini+0x464c>
  42912c:	callq  413c40 <BIO_printf@plt>
  429131:	jmpq   4265fa <X509_get0_pubkey_bitstr@plt+0xfc2a>
  429136:	mov    0x8(%rbp),%rdx
  42913a:	jmpq   425ab4 <X509_get0_pubkey_bitstr@plt+0xf0e4>
  42913f:	mov    %r9,0xd0(%rsp)
  429147:	mov    %r8,0xc8(%rsp)
  42914f:	callq  412cd0 <sk_new_null@plt>
  429154:	test   %rax,%rax
  429157:	mov    %rax,0xf8(%rsp)
  42915f:	mov    0xc8(%rsp),%r8
  429167:	mov    0xd0(%rsp),%r9
  42916f:	jne    428f9f <X509_get0_pubkey_bitstr@plt+0x125cf>
  429175:	mov    0x0(%rbp),%rdx
  429179:	jmpq   425ab4 <X509_get0_pubkey_bitstr@plt+0xf0e4>
  42917e:	lea    0x37e35(%rip),%rdi        # 460fba <_fini+0x3ab6>
  429185:	mov    $0x8,%ecx
  42918a:	mov    %rax,%rsi
  42918d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42918f:	je     4291ca <X509_get0_pubkey_bitstr@plt+0x127fa>
  429191:	lea    0x35088(%rip),%rdi        # 45e220 <_fini+0xd1c>
  429198:	mov    $0x7,%ecx
  42919d:	mov    %rax,%rsi
  4291a0:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4291a2:	je     42922a <X509_get0_pubkey_bitstr@plt+0x1285a>
  4291a8:	lea    0x37e13(%rip),%rdi        # 460fc2 <_fini+0x3abe>
  4291af:	mov    $0xc,%ecx
  4291b4:	mov    %rax,%rsi
  4291b7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4291b9:	jne    4291da <X509_get0_pubkey_bitstr@plt+0x1280a>
  4291bb:	movl   $0x1,0x25215f(%rip)        # 67b324 <_edata+0x61c>
  4291c5:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  4291ca:	movl   $0x1,0x1ac(%rsp)
  4291d5:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  4291da:	lea    0x37ded(%rip),%rdi        # 460fce <_fini+0x3aca>
  4291e1:	mov    $0xb,%ecx
  4291e6:	mov    %rax,%rsi
  4291e9:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4291eb:	je     4292b5 <X509_get0_pubkey_bitstr@plt+0x128e5>
  4291f1:	lea    0x37de1(%rip),%rdi        # 460fd9 <_fini+0x3ad5>
  4291f8:	mov    $0x8,%ecx
  4291fd:	mov    %rax,%rsi
  429200:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  429202:	je     4292a5 <X509_get0_pubkey_bitstr@plt+0x128d5>
  429208:	lea    0x37dd2(%rip),%rdi        # 460fe1 <_fini+0x3add>
  42920f:	mov    $0xb,%ecx
  429214:	mov    %rax,%rsi
  429217:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  429219:	jne    42923a <X509_get0_pubkey_bitstr@plt+0x1286a>
  42921b:	movl   $0x1,0x2520fb(%rip)        # 67b320 <_edata+0x618>
  429225:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  42922a:	movl   $0x1,0x13c(%rsp)
  429235:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  42923a:	lea    0x37dab(%rip),%rdi        # 460fec <_fini+0x3ae8>
  429241:	mov    %rax,%rsi
  429244:	mov    %r12,%rcx
  429247:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  429249:	jne    4292c5 <X509_get0_pubkey_bitstr@plt+0x128f5>
  42924b:	sub    $0x1,%ebx
  42924e:	mov    %r9,0xd8(%rsp)
  429256:	mov    %r8,0xd0(%rsp)
  42925e:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  429264:	mov    0x8(%rbp),%rdi
  429268:	lea    0x8(%rbp),%rax
  42926c:	mov    $0xa,%edx
  429271:	xor    %esi,%esi
  429273:	mov    %rax,0xc8(%rsp)
  42927b:	callq  4155d0 <strtol@plt>
  429280:	mov    0xc8(%rsp),%rbp
  429288:	mov    %rax,0x230(%rsp)
  429290:	mov    0xd0(%rsp),%r8
  429298:	mov    0xd8(%rsp),%r9
  4292a0:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  4292a5:	movl   $0x1,0x174(%rsp)
  4292b0:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  4292b5:	movl   $0x0,0x138(%rsp)
  4292c0:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  4292c5:	lea    0x37d29(%rip),%rdi        # 460ff5 <_fini+0x3af1>
  4292cc:	mov    $0xa,%ecx
  4292d1:	mov    %rax,%rsi
  4292d4:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4292d6:	jne    429332 <X509_get0_pubkey_bitstr@plt+0x12962>
  4292d8:	sub    $0x1,%ebx
  4292db:	mov    %r9,0xd8(%rsp)
  4292e3:	mov    %r8,0xd0(%rsp)
  4292eb:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  4292f1:	mov    0x8(%rbp),%rdi
  4292f5:	lea    0x8(%rbp),%rax
  4292f9:	mov    $0xa,%edx
  4292fe:	xor    %esi,%esi
  429300:	mov    %rax,0xc8(%rsp)
  429308:	callq  4155d0 <strtol@plt>
  42930d:	mov    0xc8(%rsp),%rbp
  429315:	mov    %rax,0x238(%rsp)
  42931d:	mov    0xd0(%rsp),%r8
  429325:	mov    0xd8(%rsp),%r9
  42932d:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  429332:	lea    0x37cc6(%rip),%rdi        # 460fff <_fini+0x3afb>
  429339:	mov    $0x8,%ecx
  42933e:	mov    %rax,%rsi
  429341:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  429343:	jne    42939f <X509_get0_pubkey_bitstr@plt+0x129cf>
  429345:	sub    $0x1,%ebx
  429348:	mov    %r9,0xd8(%rsp)
  429350:	mov    %r8,0xd0(%rsp)
  429358:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  42935e:	mov    0x8(%rbp),%rdi
  429362:	lea    0x8(%rbp),%rax
  429366:	mov    $0xa,%edx
  42936b:	xor    %esi,%esi
  42936d:	mov    %rax,0xc8(%rsp)
  429375:	callq  4155d0 <strtol@plt>
  42937a:	mov    0xc8(%rsp),%rbp
  429382:	mov    %rax,0x178(%rsp)
  42938a:	mov    0xd0(%rsp),%r8
  429392:	mov    0xd8(%rsp),%r9
  42939a:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  42939f:	lea    0x37c61(%rip),%rdi        # 461007 <_fini+0x3b03>
  4293a6:	mov    %rax,%rsi
  4293a9:	mov    %r12,%rcx
  4293ac:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4293ae:	je     4293ea <X509_get0_pubkey_bitstr@plt+0x12a1a>
  4293b0:	lea    0x37c59(%rip),%rdi        # 461010 <_fini+0x3b0c>
  4293b7:	mov    %rax,%rsi
  4293ba:	mov    %r12,%rcx
  4293bd:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4293bf:	jne    429401 <X509_get0_pubkey_bitstr@plt+0x12a31>
  4293c1:	sub    $0x1,%ebx
  4293c4:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  4293ca:	mov    0x8(%rbp),%rax
  4293ce:	movl   $0x1,0x140(%rsp)
  4293d9:	add    $0x8,%rbp
  4293dd:	mov    %rax,0x190(%rsp)
  4293e5:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  4293ea:	sub    $0x1,%ebx
  4293ed:	add    $0x8,%rbp
  4293f1:	movl   $0x1,0x140(%rsp)
  4293fc:	jmpq   42574d <X509_get0_pubkey_bitstr@plt+0xed7d>
  429401:	lea    0x37c11(%rip),%rdi        # 461019 <_fini+0x3b15>
  429408:	mov    $0x7,%ecx
  42940d:	mov    %rax,%rsi
  429410:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  429412:	jne    42943d <X509_get0_pubkey_bitstr@plt+0x12a6d>
  429414:	sub    $0x1,%ebx
  429417:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  42941d:	mov    0x8(%rbp),%rax
  429421:	movl   $0x1,0x140(%rsp)
  42942c:	add    $0x8,%rbp
  429430:	mov    %rax,0x150(%rsp)
  429438:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  42943d:	lea    0x37bdc(%rip),%rdi        # 461020 <_fini+0x3b1c>
  429444:	mov    $0x8,%ecx
  429449:	mov    %rax,%rsi
  42944c:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42944e:	jne    429479 <X509_get0_pubkey_bitstr@plt+0x12aa9>
  429450:	sub    $0x1,%ebx
  429453:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  429459:	mov    0x8(%rbp),%rax
  42945d:	movl   $0x1,0x19c(%rsp)
  429468:	add    $0x8,%rbp
  42946c:	mov    %rax,0x158(%rsp)
  429474:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  429479:	lea    0x34e2b(%rip),%rdi        # 45e2ab <_fini+0xda7>
  429480:	mov    $0xc,%ecx
  429485:	mov    %rax,%rsi
  429488:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42948a:	jne    4294aa <X509_get0_pubkey_bitstr@plt+0x12ada>
  42948c:	sub    $0x1,%ebx
  42948f:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  429495:	mov    0x8(%rbp),%rax
  429499:	add    $0x8,%rbp
  42949d:	mov    %rax,0x100(%rsp)
  4294a5:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  4294aa:	lea    0x37b77(%rip),%rdi        # 461028 <_fini+0x3b24>
  4294b1:	mov    %rax,%rsi
  4294b4:	mov    %r12,%rcx
  4294b7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4294b9:	jne    4294d9 <X509_get0_pubkey_bitstr@plt+0x12b09>
  4294bb:	sub    $0x1,%ebx
  4294be:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  4294c4:	mov    0x8(%rbp),%rax
  4294c8:	add    $0x8,%rbp
  4294cc:	mov    %rax,0x160(%rsp)
  4294d4:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  4294d9:	lea    0x37b51(%rip),%rdi        # 461031 <_fini+0x3b2d>
  4294e0:	mov    $0x8,%ecx
  4294e5:	mov    %rax,%rsi
  4294e8:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4294ea:	jne    42950a <X509_get0_pubkey_bitstr@plt+0x12b3a>
  4294ec:	sub    $0x1,%ebx
  4294ef:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  4294f5:	mov    0x8(%rbp),%rax
  4294f9:	add    $0x8,%rbp
  4294fd:	mov    %rax,0xb0(%rsp)
  429505:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  42950a:	lea    0x37b28(%rip),%rdi        # 461039 <_fini+0x3b35>
  429511:	mov    $0xa,%ecx
  429516:	mov    %rax,%rsi
  429519:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42951b:	je     42954c <X509_get0_pubkey_bitstr@plt+0x12b7c>
  42951d:	lea    0x37b1f(%rip),%rdi        # 461043 <_fini+0x3b3f>
  429524:	mov    %rax,%rsi
  429527:	mov    %r12,%rcx
  42952a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42952c:	jne    42955c <X509_get0_pubkey_bitstr@plt+0x12b8c>
  42952e:	sub    $0x1,%ebx
  429531:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  429537:	mov    0x8(%rbp),%rax
  42953b:	add    $0x8,%rbp
  42953f:	mov    %rax,0x130(%rsp)
  429547:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  42954c:	movl   $0x1,0x1a0(%rsp)
  429557:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  42955c:	lea    0x37ae9(%rip),%rdi        # 46104c <_fini+0x3b48>
  429563:	mov    $0xc,%ecx
  429568:	mov    %rax,%rsi
  42956b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42956d:	jne    429598 <X509_get0_pubkey_bitstr@plt+0x12bc8>
  42956f:	sub    $0x1,%ebx
  429572:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  429578:	mov    0x8(%rbp),%rax
  42957c:	movl   $0x1,0x170(%rsp)
  429587:	add    $0x8,%rbp
  42958b:	mov    %rax,0x168(%rsp)
  429593:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  429598:	lea    0x37ab9(%rip),%rdi        # 461058 <_fini+0x3b54>
  42959f:	mov    $0xa,%ecx
  4295a4:	mov    %rax,%rsi
  4295a7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4295a9:	jne    4295d4 <X509_get0_pubkey_bitstr@plt+0x12c04>
  4295ab:	sub    $0x1,%ebx
  4295ae:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  4295b4:	mov    0x8(%rbp),%rax
  4295b8:	movl   $0x2,0x170(%rsp)
  4295c3:	add    $0x8,%rbp
  4295c7:	mov    %rax,0x168(%rsp)
  4295cf:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  4295d4:	lea    0x37a87(%rip),%rdi        # 461062 <_fini+0x3b5e>
  4295db:	mov    $0x10,%ecx
  4295e0:	mov    %rax,%rsi
  4295e3:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4295e5:	jne    429610 <X509_get0_pubkey_bitstr@plt+0x12c40>
  4295e7:	sub    $0x1,%ebx
  4295ea:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  4295f0:	mov    0x8(%rbp),%rax
  4295f4:	movl   $0x3,0x170(%rsp)
  4295ff:	add    $0x8,%rbp
  429603:	mov    %rax,0x168(%rsp)
  42960b:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  429610:	lea    0x37a5b(%rip),%rdi        # 461072 <_fini+0x3b6e>
  429617:	mov    $0x13,%ecx
  42961c:	mov    %rax,%rsi
  42961f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  429621:	jne    42964c <X509_get0_pubkey_bitstr@plt+0x12c7c>
  429623:	sub    $0x1,%ebx
  429626:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  42962c:	mov    0x8(%rbp),%rax
  429630:	movl   $0x4,0x170(%rsp)
  42963b:	add    $0x8,%rbp
  42963f:	mov    %rax,0x168(%rsp)
  429647:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  42964c:	lea    0x3450f(%rip),%rdi        # 45db62 <_fini+0x65e>
  429653:	mov    $0x8,%ecx
  429658:	mov    %rax,%rsi
  42965b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42965d:	jne    425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  429663:	sub    $0x1,%ebx
  429666:	je     425ab1 <X509_get0_pubkey_bitstr@plt+0xf0e1>
  42966c:	mov    0x8(%rbp),%rax
  429670:	add    $0x8,%rbp
  429674:	mov    %rax,0xc0(%rsp)
  42967c:	jmpq   425720 <X509_get0_pubkey_bitstr@plt+0xed50>
  429681:	nopw   %cs:0x0(%rax,%rax,1)
  42968b:	nopl   0x0(%rax,%rax,1)
  429690:	push   %r15
  429692:	push   %r14
  429694:	push   %r13
  429696:	push   %r12
  429698:	push   %rbp
  429699:	mov    %edi,%ebp
  42969b:	mov    $0xd,%edi
  4296a0:	push   %rbx
  4296a1:	mov    %rsi,%rbx
  4296a4:	mov    $0x1,%esi
  4296a9:	sub    $0x48,%rsp
  4296ad:	callq  414ee0 <signal@plt>
  4296b2:	lea    0x251687(%rip),%r13        # 67ad40 <_edata+0x38>
  4296b9:	mov    0x0(%r13),%rdi
  4296bd:	test   %rdi,%rdi
  4296c0:	je     429ab0 <X509_get0_pubkey_bitstr@plt+0x130e0>
  4296c6:	xor    %esi,%esi
  4296c8:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  4296cd:	test   %eax,%eax
  4296cf:	je     429888 <X509_get0_pubkey_bitstr@plt+0x12eb8>
  4296d5:	mov    (%rbx),%rax
  4296d8:	lea    -0x1(%rbp),%r15d
  4296dc:	movq   $0x0,0x28(%rsp)
  4296e5:	movl   $0x0,0x38(%rsp)
  4296ed:	movl   $0x0,0x30(%rsp)
  4296f5:	mov    $0x3,%r12d
  4296fb:	test   %r15d,%r15d
  4296fe:	movl   $0x0,0x34(%rsp)
  429706:	movl   $0x0,0x3c(%rsp)
  42970e:	mov    %rax,0x20(%rsp)
  429713:	movq   $0x0,0x18(%rsp)
  42971c:	lea    0x8(%rbx),%rax
  429720:	movq   $0x0,0x10(%rsp)
  429729:	movl   $0x3,0x8(%rsp)
  429731:	jle    4297d1 <X509_get0_pubkey_bitstr@plt+0x12e01>
  429737:	mov    %r12d,%edx
  42973a:	lea    0x3459e(%rip),%rbp        # 45dcdf <_fini+0x7db>
  429741:	mov    %r15d,%r12d
  429744:	mov    $0x8,%ebx
  429749:	mov    %rax,%r8
  42974c:	mov    %edx,%r15d
  42974f:	jmp    42977f <X509_get0_pubkey_bitstr@plt+0x12daf>
  429751:	nopl   0x0(%rax)
  429758:	sub    $0x1,%r12d
  42975c:	je     4299c0 <X509_get0_pubkey_bitstr@plt+0x12ff0>
  429762:	mov    0x8(%r8),%rdi
  429766:	lea    0x8(%r8),%r14
  42976a:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  42976f:	mov    %eax,%r15d
  429772:	sub    $0x1,%r12d
  429776:	lea    0x8(%r14),%r8
  42977a:	test   %r12d,%r12d
  42977d:	jle    4297ce <X509_get0_pubkey_bitstr@plt+0x12dfe>
  42977f:	mov    (%r8),%rdx
  429782:	mov    %rbp,%rdi
  429785:	mov    %rbx,%rcx
  429788:	mov    %rdx,%rsi
  42978b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42978d:	je     429758 <X509_get0_pubkey_bitstr@plt+0x12d88>
  42978f:	lea    0x349fa(%rip),%rdi        # 45e190 <_fini+0xc8c>
  429796:	mov    $0x9,%ecx
  42979b:	mov    %rdx,%rsi
  42979e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4297a0:	jne    4298b0 <X509_get0_pubkey_bitstr@plt+0x12ee0>
  4297a6:	sub    $0x1,%r12d
  4297aa:	je     4299c0 <X509_get0_pubkey_bitstr@plt+0x12ff0>
  4297b0:	mov    0x8(%r8),%rdi
  4297b4:	lea    0x8(%r8),%r14
  4297b8:	sub    $0x1,%r12d
  4297bc:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  4297c1:	test   %r12d,%r12d
  4297c4:	mov    %eax,0x8(%rsp)
  4297c8:	lea    0x8(%r14),%r8
  4297cc:	jg     42977f <X509_get0_pubkey_bitstr@plt+0x12daf>
  4297ce:	mov    %r15d,%r12d
  4297d1:	callq  416990 <ERR_load_crypto_strings@plt>
  4297d6:	mov    0x28(%rsp),%rsi
  4297db:	mov    0x0(%r13),%rdi
  4297df:	xor    %edx,%edx
  4297e1:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  4297e6:	callq  4152b0 <BIO_s_file@plt>
  4297eb:	mov    %rax,%rdi
  4297ee:	callq  414a20 <BIO_new@plt>
  4297f3:	mov    %rax,0x20(%rsp)
  4297f8:	callq  4152b0 <BIO_s_file@plt>
  4297fd:	mov    %rax,%rdi
  429800:	callq  414a20 <BIO_new@plt>
  429805:	test   %rax,%rax
  429808:	mov    %rax,%rbx
  42980b:	mov    0x20(%rsp),%r9
  429810:	je     429b00 <X509_get0_pubkey_bitstr@plt+0x13130>
  429816:	test   %r9,%r9
  429819:	je     429b00 <X509_get0_pubkey_bitstr@plt+0x13130>
  42981f:	cmpq   $0x0,0x10(%rsp)
  429825:	je     429b2e <X509_get0_pubkey_bitstr@plt+0x1315e>
  42982b:	mov    0x10(%rsp),%rcx
  429830:	mov    %r9,%rdi
  429833:	mov    $0x3,%edx
  429838:	mov    $0x6c,%esi
  42983d:	mov    %r9,0x10(%rsp)
  429842:	callq  412af0 <BIO_ctrl@plt>
  429847:	mov    0x10(%rsp),%r9
  42984c:	cmp    $0x1,%r12d
  429850:	je     429c25 <X509_get0_pubkey_bitstr@plt+0x13255>
  429856:	cmp    $0x3,%r12d
  42985a:	je     429b56 <X509_get0_pubkey_bitstr@plt+0x13186>
  429860:	mov    0x0(%r13),%rdi
  429864:	lea    0x39325(%rip),%rsi        # 462b90 <_fini+0x568c>
  42986b:	xor    %eax,%eax
  42986d:	mov    %r9,0x8(%rsp)
  429872:	callq  413c40 <BIO_printf@plt>
  429877:	mov    0x8(%rsp),%r9
  42987c:	jmpq   429b13 <X509_get0_pubkey_bitstr@plt+0x13143>
  429881:	nopl   0x0(%rax)
  429888:	xor    %ebx,%ebx
  42988a:	mov    $0x1,%ebp
  42988f:	test   %rbx,%rbx
  429892:	je     42989c <X509_get0_pubkey_bitstr@plt+0x12ecc>
  429894:	mov    %rbx,%rdi
  429897:	callq  416570 <BIO_free_all@plt>
  42989c:	add    $0x48,%rsp
  4298a0:	mov    %ebp,%eax
  4298a2:	pop    %rbx
  4298a3:	pop    %rbp
  4298a4:	pop    %r12
  4298a6:	pop    %r13
  4298a8:	pop    %r14
  4298aa:	pop    %r15
  4298ac:	retq   
  4298ad:	nopl   (%rax)
  4298b0:	cmpb   $0x2d,(%rdx)
  4298b3:	jne    4298e8 <X509_get0_pubkey_bitstr@plt+0x12f18>
  4298b5:	cmpb   $0x69,0x1(%rdx)
  4298b9:	jne    4298e8 <X509_get0_pubkey_bitstr@plt+0x12f18>
  4298bb:	cmpb   $0x6e,0x2(%rdx)
  4298bf:	jne    4298e8 <X509_get0_pubkey_bitstr@plt+0x12f18>
  4298c1:	cmpb   $0x0,0x3(%rdx)
  4298c5:	jne    4298e8 <X509_get0_pubkey_bitstr@plt+0x12f18>
  4298c7:	sub    $0x1,%r12d
  4298cb:	je     4299c0 <X509_get0_pubkey_bitstr@plt+0x12ff0>
  4298d1:	mov    0x8(%r8),%rax
  4298d5:	lea    0x8(%r8),%r14
  4298d9:	mov    %rax,0x10(%rsp)
  4298de:	jmpq   429772 <X509_get0_pubkey_bitstr@plt+0x12da2>
  4298e3:	nopl   0x0(%rax,%rax,1)
  4298e8:	lea    0x34557(%rip),%rdi        # 45de46 <_fini+0x942>
  4298ef:	mov    $0x5,%ecx
  4298f4:	mov    %rdx,%rsi
  4298f7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4298f9:	jne    429920 <X509_get0_pubkey_bitstr@plt+0x12f50>
  4298fb:	sub    $0x1,%r12d
  4298ff:	je     4299c0 <X509_get0_pubkey_bitstr@plt+0x12ff0>
  429905:	mov    0x8(%r8),%rax
  429909:	lea    0x8(%r8),%r14
  42990d:	mov    %rax,0x18(%rsp)
  429912:	jmpq   429772 <X509_get0_pubkey_bitstr@plt+0x12da2>
  429917:	nopw   0x0(%rax,%rax,1)
  429920:	lea    0x343c0(%rip),%rdi        # 45dce7 <_fini+0x7e3>
  429927:	mov    $0x7,%ecx
  42992c:	mov    %rdx,%rsi
  42992f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  429931:	je     429a80 <X509_get0_pubkey_bitstr@plt+0x130b0>
  429937:	lea    0x34929(%rip),%rdi        # 45e267 <_fini+0xd63>
  42993e:	mov    $0x6,%ecx
  429943:	mov    %rdx,%rsi
  429946:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  429948:	je     429a90 <X509_get0_pubkey_bitstr@plt+0x130c0>
  42994e:	lea    0x390eb(%rip),%rdi        # 462a40 <_fini+0x553c>
  429955:	mov    $0x7,%ecx
  42995a:	mov    %rdx,%rsi
  42995d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42995f:	je     429aa0 <X509_get0_pubkey_bitstr@plt+0x130d0>
  429965:	lea    0x390db(%rip),%rdi        # 462a47 <_fini+0x5543>
  42996c:	mov    $0xd,%ecx
  429971:	mov    %rdx,%rsi
  429974:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  429976:	je     429aef <X509_get0_pubkey_bitstr@plt+0x1311f>
  42997c:	lea    0x341df(%rip),%rdi        # 45db62 <_fini+0x65e>
  429983:	mov    %rdx,%rsi
  429986:	mov    %rbx,%rcx
  429989:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42998b:	jne    4299a5 <X509_get0_pubkey_bitstr@plt+0x12fd5>
  42998d:	sub    $0x1,%r12d
  429991:	je     4299c0 <X509_get0_pubkey_bitstr@plt+0x12ff0>
  429993:	mov    0x8(%r8),%rax
  429997:	lea    0x8(%r8),%r14
  42999b:	mov    %rax,0x28(%rsp)
  4299a0:	jmpq   429772 <X509_get0_pubkey_bitstr@plt+0x12da2>
  4299a5:	mov    0x0(%r13),%rdi
  4299a9:	lea    0x3437c(%rip),%rsi        # 45dd2c <_fini+0x828>
  4299b0:	xor    %eax,%eax
  4299b2:	callq  413c40 <BIO_printf@plt>
  4299b7:	nopw   0x0(%rax,%rax,1)
  4299c0:	mov    0x20(%rsp),%rdx
  4299c5:	mov    0x0(%r13),%rdi
  4299c9:	lea    0x34d68(%rip),%rsi        # 45e738 <_fini+0x1234>
  4299d0:	xor    %eax,%eax
  4299d2:	xor    %ebx,%ebx
  4299d4:	callq  413c40 <BIO_printf@plt>
  4299d9:	mov    0x0(%r13),%rdi
  4299dd:	lea    0x34371(%rip),%rsi        # 45dd55 <_fini+0x851>
  4299e4:	xor    %eax,%eax
  4299e6:	callq  413c40 <BIO_printf@plt>
  4299eb:	mov    0x0(%r13),%rdi
  4299ef:	lea    0x3909a(%rip),%rsi        # 462a90 <_fini+0x558c>
  4299f6:	xor    %eax,%eax
  4299f8:	callq  413c40 <BIO_printf@plt>
  4299fd:	mov    0x0(%r13),%rdi
  429a01:	lea    0x390b8(%rip),%rsi        # 462ac0 <_fini+0x55bc>
  429a08:	xor    %eax,%eax
  429a0a:	callq  413c40 <BIO_printf@plt>
  429a0f:	mov    0x0(%r13),%rdi
  429a13:	lea    0x3434e(%rip),%rsi        # 45dd68 <_fini+0x864>
  429a1a:	xor    %eax,%eax
  429a1c:	callq  413c40 <BIO_printf@plt>
  429a21:	mov    0x0(%r13),%rdi
  429a25:	lea    0x35fbf(%rip),%rsi        # 45f9eb <_fini+0x24e7>
  429a2c:	xor    %eax,%eax
  429a2e:	callq  413c40 <BIO_printf@plt>
  429a33:	mov    0x0(%r13),%rdi
  429a37:	lea    0x390b2(%rip),%rsi        # 462af0 <_fini+0x55ec>
  429a3e:	xor    %eax,%eax
  429a40:	callq  413c40 <BIO_printf@plt>
  429a45:	mov    0x0(%r13),%rdi
  429a49:	lea    0x390d8(%rip),%rsi        # 462b28 <_fini+0x5624>
  429a50:	xor    %eax,%eax
  429a52:	callq  413c40 <BIO_printf@plt>
  429a57:	mov    0x0(%r13),%rdi
  429a5b:	lea    0x390fe(%rip),%rsi        # 462b60 <_fini+0x565c>
  429a62:	xor    %eax,%eax
  429a64:	callq  413c40 <BIO_printf@plt>
  429a69:	mov    0x0(%r13),%rdi
  429a6d:	lea    0x36134(%rip),%rsi        # 45fba8 <_fini+0x26a4>
  429a74:	xor    %eax,%eax
  429a76:	callq  413c40 <BIO_printf@plt>
  429a7b:	jmpq   42988a <X509_get0_pubkey_bitstr@plt+0x12eba>
  429a80:	mov    %r8,%r14
  429a83:	movl   $0x1,0x30(%rsp)
  429a8b:	jmpq   429772 <X509_get0_pubkey_bitstr@plt+0x12da2>
  429a90:	mov    %r8,%r14
  429a93:	movl   $0x1,0x34(%rsp)
  429a9b:	jmpq   429772 <X509_get0_pubkey_bitstr@plt+0x12da2>
  429aa0:	mov    %r8,%r14
  429aa3:	movl   $0x1,0x38(%rsp)
  429aab:	jmpq   429772 <X509_get0_pubkey_bitstr@plt+0x12da2>
  429ab0:	callq  4152b0 <BIO_s_file@plt>
  429ab5:	mov    %rax,%rdi
  429ab8:	callq  414a20 <BIO_new@plt>
  429abd:	test   %rax,%rax
  429ac0:	mov    %rax,%rdi
  429ac3:	mov    %rax,0x0(%r13)
  429ac7:	je     4296c6 <X509_get0_pubkey_bitstr@plt+0x12cf6>
  429acd:	mov    0x24c4ac(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  429ad4:	mov    $0x6a,%esi
  429ad9:	mov    (%rdx),%rcx
  429adc:	mov    $0x10,%edx
  429ae1:	callq  412af0 <BIO_ctrl@plt>
  429ae6:	mov    0x0(%r13),%rdi
  429aea:	jmpq   4296c6 <X509_get0_pubkey_bitstr@plt+0x12cf6>
  429aef:	mov    %r8,%r14
  429af2:	movl   $0x1,0x3c(%rsp)
  429afa:	jmpq   429772 <X509_get0_pubkey_bitstr@plt+0x12da2>
  429aff:	nop
  429b00:	mov    0x0(%r13),%rdi
  429b04:	mov    %r9,0x8(%rsp)
  429b09:	callq  413f40 <ERR_print_errors@plt>
  429b0e:	mov    0x8(%rsp),%r9
  429b13:	test   %r9,%r9
  429b16:	mov    $0x1,%ebp
  429b1b:	je     42988a <X509_get0_pubkey_bitstr@plt+0x12eba>
  429b21:	mov    %r9,%rdi
  429b24:	callq  413960 <BIO_free@plt>
  429b29:	jmpq   42988f <X509_get0_pubkey_bitstr@plt+0x12ebf>
  429b2e:	mov    0x24c3db(%rip),%rax        # 675f10 <_fini+0x218a0c>
  429b35:	mov    %r9,%rdi
  429b38:	xor    %edx,%edx
  429b3a:	mov    $0x6a,%esi
  429b3f:	mov    %r9,0x10(%rsp)
  429b44:	mov    (%rax),%rcx
  429b47:	callq  412af0 <BIO_ctrl@plt>
  429b4c:	mov    0x10(%rsp),%r9
  429b51:	jmpq   42984c <X509_get0_pubkey_bitstr@plt+0x12e7c>
  429b56:	mov    %r9,%rdi
  429b59:	xor    %ecx,%ecx
  429b5b:	xor    %edx,%edx
  429b5d:	xor    %esi,%esi
  429b5f:	mov    %r9,0x10(%rsp)
  429b64:	callq  415b60 <PEM_read_bio_PKCS7@plt>
  429b69:	mov    0x10(%rsp),%r9
  429b6e:	mov    %rax,%r15
  429b71:	test   %r15,%r15
  429b74:	je     429da8 <X509_get0_pubkey_bitstr@plt+0x133d8>
  429b7a:	cmpq   $0x0,0x18(%rsp)
  429b80:	mov    %r9,0x10(%rsp)
  429b85:	je     429d85 <X509_get0_pubkey_bitstr@plt+0x133b5>
  429b8b:	mov    0x18(%rsp),%rcx
  429b90:	mov    $0x5,%edx
  429b95:	mov    $0x6c,%esi
  429b9a:	mov    %rbx,%rdi
  429b9d:	callq  412af0 <BIO_ctrl@plt>
  429ba2:	test   %rax,%rax
  429ba5:	mov    0x10(%rsp),%r9
  429baa:	jle    429d67 <X509_get0_pubkey_bitstr@plt+0x13397>
  429bb0:	mov    0x38(%rsp),%r11d
  429bb5:	test   %r11d,%r11d
  429bb8:	jne    429cdb <X509_get0_pubkey_bitstr@plt+0x1330b>
  429bbe:	mov    0x3c(%rsp),%r10d
  429bc3:	test   %r10d,%r10d
  429bc6:	jne    429c41 <X509_get0_pubkey_bitstr@plt+0x13271>
  429bc8:	mov    0x30(%rsp),%eax
  429bcc:	test   %eax,%eax
  429bce:	jne    429c21 <X509_get0_pubkey_bitstr@plt+0x13251>
  429bd0:	cmpl   $0x1,0x8(%rsp)
  429bd5:	je     429e20 <X509_get0_pubkey_bitstr@plt+0x13450>
  429bdb:	cmpl   $0x3,0x8(%rsp)
  429be0:	mov    %r9,0x8(%rsp)
  429be5:	je     429dd2 <X509_get0_pubkey_bitstr@plt+0x13402>
  429beb:	mov    0x0(%r13),%rdi
  429bef:	lea    0x3577a(%rip),%rsi        # 45f370 <_fini+0x1e6c>
  429bf6:	xor    %eax,%eax
  429bf8:	mov    $0x1,%ebp
  429bfd:	callq  413c40 <BIO_printf@plt>
  429c02:	mov    0x8(%rsp),%r9
  429c07:	mov    %r15,%rdi
  429c0a:	mov    %r9,0x8(%rsp)
  429c0f:	callq  413150 <PKCS7_free@plt>
  429c14:	mov    0x8(%rsp),%r9
  429c19:	jmpq   429b21 <X509_get0_pubkey_bitstr@plt+0x13151>
  429c1e:	mov    %r14,%r9
  429c21:	xor    %ebp,%ebp
  429c23:	jmp    429c07 <X509_get0_pubkey_bitstr@plt+0x13237>
  429c25:	mov    %r9,%rdi
  429c28:	xor    %esi,%esi
  429c2a:	mov    %r9,0x10(%rsp)
  429c2f:	callq  413b50 <d2i_PKCS7_bio@plt>
  429c34:	mov    0x10(%rsp),%r9
  429c39:	mov    %rax,%r15
  429c3c:	jmpq   429b71 <X509_get0_pubkey_bitstr@plt+0x131a1>
  429c41:	mov    0x18(%r15),%rdi
  429c45:	mov    %r9,0x8(%rsp)
  429c4a:	callq  4167f0 <OBJ_obj2nid@plt>
  429c4f:	cmp    $0x16,%eax
  429c52:	mov    0x8(%rsp),%r9
  429c57:	je     429c5e <X509_get0_pubkey_bitstr@plt+0x1328e>
  429c59:	cmp    $0x18,%eax
  429c5c:	jne    429c21 <X509_get0_pubkey_bitstr@plt+0x13251>
  429c5e:	mov    0x20(%r15),%rax
  429c62:	mov    0x10(%rax),%r13
  429c66:	mov    0x18(%rax),%r12
  429c6a:	test   %r13,%r13
  429c6d:	je     429d01 <X509_get0_pubkey_bitstr@plt+0x13331>
  429c73:	xor    %ebp,%ebp
  429c75:	mov    %r12,0x8(%rsp)
  429c7a:	mov    %r9,%r14
  429c7d:	jmp    429c9e <X509_get0_pubkey_bitstr@plt+0x132ce>
  429c7f:	callq  414e30 <X509_print@plt>
  429c84:	mov    0x30(%rsp),%ecx
  429c88:	test   %ecx,%ecx
  429c8a:	je     429cce <X509_get0_pubkey_bitstr@plt+0x132fe>
  429c8c:	lea    0x3af0c(%rip),%rsi        # 464b9f <_fini+0x769b>
  429c93:	mov    %rbx,%rdi
  429c96:	add    $0x1,%ebp
  429c99:	callq  413b70 <BIO_puts@plt>
  429c9e:	mov    %r13,%rdi
  429ca1:	callq  4156d0 <sk_num@plt>
  429ca6:	cmp    %eax,%ebp
  429ca8:	jge    429cf9 <X509_get0_pubkey_bitstr@plt+0x13329>
  429caa:	mov    %ebp,%esi
  429cac:	mov    %r13,%rdi
  429caf:	callq  412b30 <sk_value@plt>
  429cb4:	mov    0x34(%rsp),%r8d
  429cb9:	mov    %rax,%r12
  429cbc:	mov    %rax,%rsi
  429cbf:	mov    %rbx,%rdi
  429cc2:	test   %r8d,%r8d
  429cc5:	jne    429c7f <X509_get0_pubkey_bitstr@plt+0x132af>
  429cc7:	callq  445980 <X509_get0_pubkey_bitstr@plt+0x2efb0>
  429ccc:	jmp    429c84 <X509_get0_pubkey_bitstr@plt+0x132b4>
  429cce:	mov    %r12,%rsi
  429cd1:	mov    %rbx,%rdi
  429cd4:	callq  413490 <PEM_write_bio_X509@plt>
  429cd9:	jmp    429c8c <X509_get0_pubkey_bitstr@plt+0x132bc>
  429cdb:	xor    %ecx,%ecx
  429cdd:	xor    %edx,%edx
  429cdf:	mov    %r15,%rsi
  429ce2:	mov    %rbx,%rdi
  429ce5:	mov    %r9,0x10(%rsp)
  429cea:	callq  416120 <PKCS7_print_ctx@plt>
  429cef:	mov    0x10(%rsp),%r9
  429cf4:	jmpq   429bbe <X509_get0_pubkey_bitstr@plt+0x131ee>
  429cf9:	mov    0x8(%rsp),%r12
  429cfe:	mov    %r14,%r9
  429d01:	test   %r12,%r12
  429d04:	je     429c21 <X509_get0_pubkey_bitstr@plt+0x13251>
  429d0a:	xor    %ebp,%ebp
  429d0c:	mov    %r9,%r14
  429d0f:	jmp    429d2a <X509_get0_pubkey_bitstr@plt+0x1335a>
  429d11:	nopl   0x0(%rax)
  429d18:	lea    0x3ae80(%rip),%rsi        # 464b9f <_fini+0x769b>
  429d1f:	mov    %rbx,%rdi
  429d22:	add    $0x1,%ebp
  429d25:	callq  413b70 <BIO_puts@plt>
  429d2a:	mov    %r12,%rdi
  429d2d:	callq  4156d0 <sk_num@plt>
  429d32:	cmp    %eax,%ebp
  429d34:	jge    429c1e <X509_get0_pubkey_bitstr@plt+0x1324e>
  429d3a:	mov    %ebp,%esi
  429d3c:	mov    %r12,%rdi
  429d3f:	callq  412b30 <sk_value@plt>
  429d44:	mov    %rbx,%rdi
  429d47:	mov    %rax,%rsi
  429d4a:	mov    %rax,%r13
  429d4d:	callq  413ba0 <X509_CRL_print@plt>
  429d52:	mov    0x30(%rsp),%edx
  429d56:	test   %edx,%edx
  429d58:	jne    429d18 <X509_get0_pubkey_bitstr@plt+0x13348>
  429d5a:	mov    %r13,%rsi
  429d5d:	mov    %rbx,%rdi
  429d60:	callq  4142d0 <PEM_write_bio_X509_CRL@plt>
  429d65:	jmp    429d18 <X509_get0_pubkey_bitstr@plt+0x13348>
  429d67:	mov    0x18(%rsp),%rdi
  429d6c:	mov    %r9,0x8(%rsp)
  429d71:	mov    $0x1,%ebp
  429d76:	callq  4142c0 <perror@plt>
  429d7b:	mov    0x8(%rsp),%r9
  429d80:	jmpq   429c07 <X509_get0_pubkey_bitstr@plt+0x13237>
  429d85:	mov    0x24c12c(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  429d8c:	xor    %edx,%edx
  429d8e:	mov    $0x6a,%esi
  429d93:	mov    %rbx,%rdi
  429d96:	mov    (%rax),%rcx
  429d99:	callq  412af0 <BIO_ctrl@plt>
  429d9e:	mov    0x10(%rsp),%r9
  429da3:	jmpq   429bb0 <X509_get0_pubkey_bitstr@plt+0x131e0>
  429da8:	mov    0x0(%r13),%rdi
  429dac:	lea    0x38ca1(%rip),%rsi        # 462a54 <_fini+0x5550>
  429db3:	xor    %eax,%eax
  429db5:	mov    %r9,0x8(%rsp)
  429dba:	callq  413c40 <BIO_printf@plt>
  429dbf:	mov    0x0(%r13),%rdi
  429dc3:	callq  413f40 <ERR_print_errors@plt>
  429dc8:	mov    0x8(%rsp),%r9
  429dcd:	jmpq   429b13 <X509_get0_pubkey_bitstr@plt+0x13143>
  429dd2:	mov    %r15,%rsi
  429dd5:	mov    %rbx,%rdi
  429dd8:	callq  414de0 <PEM_write_bio_PKCS7@plt>
  429ddd:	mov    0x8(%rsp),%r9
  429de2:	test   %eax,%eax
  429de4:	jne    429c21 <X509_get0_pubkey_bitstr@plt+0x13251>
  429dea:	mov    0x0(%r13),%rdi
  429dee:	lea    0x38c7c(%rip),%rsi        # 462a71 <_fini+0x556d>
  429df5:	mov    %r9,0x8(%rsp)
  429dfa:	mov    $0x1,%ebp
  429dff:	callq  413c40 <BIO_printf@plt>
  429e04:	mov    0x0(%r13),%rdi
  429e08:	callq  413f40 <ERR_print_errors@plt>
  429e0d:	mov    0x8(%rsp),%r9
  429e12:	jmpq   429c07 <X509_get0_pubkey_bitstr@plt+0x13237>
  429e17:	nopw   0x0(%rax,%rax,1)
  429e20:	mov    %r15,%rsi
  429e23:	mov    %rbx,%rdi
  429e26:	mov    %r9,0x8(%rsp)
  429e2b:	callq  415770 <i2d_PKCS7_bio@plt>
  429e30:	mov    0x8(%rsp),%r9
  429e35:	jmp    429de2 <X509_get0_pubkey_bitstr@plt+0x13412>
  429e37:	nopw   0x0(%rax,%rax,1)
  429e40:	push   %r15
  429e42:	push   %r14
  429e44:	push   %r13
  429e46:	push   %r12
  429e48:	mov    %edi,%r12d
  429e4b:	mov    $0xd,%edi
  429e50:	push   %rbp
  429e51:	mov    %rsi,%rbp
  429e54:	mov    $0x1,%esi
  429e59:	push   %rbx
  429e5a:	sub    $0x48,%rsp
  429e5e:	callq  414ee0 <signal@plt>
  429e63:	lea    0x250ed6(%rip),%rbx        # 67ad40 <_edata+0x38>
  429e6a:	cmpq   $0x0,(%rbx)
  429e6e:	je     42a1d0 <X509_get0_pubkey_bitstr@plt+0x13800>
  429e74:	mov    0x0(%rbp),%rax
  429e78:	lea    -0x1(%r12),%r15d
  429e7d:	lea    0x8(%rbp),%r9
  429e81:	test   %r15d,%r15d
  429e84:	mov    %rax,0x30(%rsp)
  429e89:	jle    42a458 <X509_get0_pubkey_bitstr@plt+0x13a88>
  429e8f:	movl   $0x0,0x20(%rsp)
  429e97:	movq   $0x0,0x18(%rsp)
  429ea0:	mov    $0x3,%r12d
  429ea6:	movq   $0x0,0x28(%rsp)
  429eaf:	movq   $0x0,0x10(%rsp)
  429eb8:	lea    0x33e20(%rip),%r14        # 45dcdf <_fini+0x7db>
  429ebf:	movl   $0x3,0xc(%rsp)
  429ec7:	mov    $0x8,%r13d
  429ecd:	jmp    429ef7 <X509_get0_pubkey_bitstr@plt+0x13527>
  429ecf:	nop
  429ed0:	sub    $0x1,%r15d
  429ed4:	je     42a0d8 <X509_get0_pubkey_bitstr@plt+0x13708>
  429eda:	mov    0x8(%r9),%rdi
  429ede:	lea    0x8(%r9),%rbp
  429ee2:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  429ee7:	mov    %eax,%r12d
  429eea:	sub    $0x1,%r15d
  429eee:	lea    0x8(%rbp),%r9
  429ef2:	test   %r15d,%r15d
  429ef5:	jle    429f46 <X509_get0_pubkey_bitstr@plt+0x13576>
  429ef7:	mov    (%r9),%rdx
  429efa:	mov    %r14,%rdi
  429efd:	mov    %r13,%rcx
  429f00:	mov    %rdx,%rsi
  429f03:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  429f05:	je     429ed0 <X509_get0_pubkey_bitstr@plt+0x13500>
  429f07:	lea    0x34282(%rip),%rdi        # 45e190 <_fini+0xc8c>
  429f0e:	mov    $0x9,%ecx
  429f13:	mov    %rdx,%rsi
  429f16:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  429f18:	jne    42a030 <X509_get0_pubkey_bitstr@plt+0x13660>
  429f1e:	sub    $0x1,%r15d
  429f22:	je     42a0d8 <X509_get0_pubkey_bitstr@plt+0x13708>
  429f28:	mov    0x8(%r9),%rdi
  429f2c:	lea    0x8(%r9),%rbp
  429f30:	sub    $0x1,%r15d
  429f34:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  429f39:	test   %r15d,%r15d
  429f3c:	mov    %eax,0xc(%rsp)
  429f40:	lea    0x8(%rbp),%r9
  429f44:	jg     429ef7 <X509_get0_pubkey_bitstr@plt+0x13527>
  429f46:	callq  416990 <ERR_load_crypto_strings@plt>
  429f4b:	callq  4152b0 <BIO_s_file@plt>
  429f50:	mov    %rax,%rdi
  429f53:	callq  414a20 <BIO_new@plt>
  429f58:	mov    %rax,%r14
  429f5b:	callq  4152b0 <BIO_s_file@plt>
  429f60:	mov    %rax,%rdi
  429f63:	callq  414a20 <BIO_new@plt>
  429f68:	test   %rax,%rax
  429f6b:	mov    %rax,%r13
  429f6e:	je     42a430 <X509_get0_pubkey_bitstr@plt+0x13a60>
  429f74:	test   %r14,%r14
  429f77:	je     42a430 <X509_get0_pubkey_bitstr@plt+0x13a60>
  429f7d:	mov    0x20(%rsp),%eax
  429f81:	test   %eax,%eax
  429f83:	jne    42a220 <X509_get0_pubkey_bitstr@plt+0x13850>
  429f89:	cmpq   $0x0,0x10(%rsp)
  429f8f:	je     42a4aa <X509_get0_pubkey_bitstr@plt+0x13ada>
  429f95:	mov    0x10(%rsp),%rcx
  429f9a:	mov    $0x3,%edx
  429f9f:	mov    $0x6c,%esi
  429fa4:	mov    %r14,%rdi
  429fa7:	callq  412af0 <BIO_ctrl@plt>
  429fac:	test   %rax,%rax
  429faf:	jle    42a4da <X509_get0_pubkey_bitstr@plt+0x13b0a>
  429fb5:	cmp    $0x1,%r12d
  429fb9:	je     42a4c8 <X509_get0_pubkey_bitstr@plt+0x13af8>
  429fbf:	cmp    $0x3,%r12d
  429fc3:	je     42a3e3 <X509_get0_pubkey_bitstr@plt+0x13a13>
  429fc9:	mov    (%rbx),%rdi
  429fcc:	lea    0x38d15(%rip),%rsi        # 462ce8 <_fini+0x57e4>
  429fd3:	xor    %eax,%eax
  429fd5:	mov    $0x1,%r12d
  429fdb:	xor    %r15d,%r15d
  429fde:	callq  413c40 <BIO_printf@plt>
  429fe3:	movq   $0x0,0x10(%rsp)
  429fec:	mov    %r14,%rdi
  429fef:	callq  413960 <BIO_free@plt>
  429ff4:	test   %r13,%r13
  429ff7:	je     42a001 <X509_get0_pubkey_bitstr@plt+0x13631>
  429ff9:	mov    %r13,%rdi
  429ffc:	callq  416570 <BIO_free_all@plt>
  42a001:	mov    0x10(%rsp),%rdi
  42a006:	test   %rdi,%rdi
  42a009:	je     42a010 <X509_get0_pubkey_bitstr@plt+0x13640>
  42a00b:	callq  413150 <PKCS7_free@plt>
  42a010:	test   %r15,%r15
  42a013:	je     42a17c <X509_get0_pubkey_bitstr@plt+0x137ac>
  42a019:	mov    %r15,%rdi
  42a01c:	callq  4166d0 <X509_CRL_free@plt>
  42a021:	jmpq   42a17c <X509_get0_pubkey_bitstr@plt+0x137ac>
  42a026:	nopw   %cs:0x0(%rax,%rax,1)
  42a030:	cmpb   $0x2d,(%rdx)
  42a033:	jne    42a068 <X509_get0_pubkey_bitstr@plt+0x13698>
  42a035:	cmpb   $0x69,0x1(%rdx)
  42a039:	jne    42a068 <X509_get0_pubkey_bitstr@plt+0x13698>
  42a03b:	cmpb   $0x6e,0x2(%rdx)
  42a03f:	jne    42a068 <X509_get0_pubkey_bitstr@plt+0x13698>
  42a041:	cmpb   $0x0,0x3(%rdx)
  42a045:	jne    42a068 <X509_get0_pubkey_bitstr@plt+0x13698>
  42a047:	sub    $0x1,%r15d
  42a04b:	je     42a0d8 <X509_get0_pubkey_bitstr@plt+0x13708>
  42a051:	mov    0x8(%r9),%rax
  42a055:	lea    0x8(%r9),%rbp
  42a059:	mov    %rax,0x10(%rsp)
  42a05e:	jmpq   429eea <X509_get0_pubkey_bitstr@plt+0x1351a>
  42a063:	nopl   0x0(%rax,%rax,1)
  42a068:	lea    0x38b4e(%rip),%rdi        # 462bbd <_fini+0x56b9>
  42a06f:	mov    $0x7,%ecx
  42a074:	mov    %rdx,%rsi
  42a077:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42a079:	je     42a0b0 <X509_get0_pubkey_bitstr@plt+0x136e0>
  42a07b:	lea    0x33dc4(%rip),%rdi        # 45de46 <_fini+0x942>
  42a082:	mov    $0x5,%ecx
  42a087:	mov    %rdx,%rsi
  42a08a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42a08c:	jne    42a190 <X509_get0_pubkey_bitstr@plt+0x137c0>
  42a092:	sub    $0x1,%r15d
  42a096:	je     42a0d8 <X509_get0_pubkey_bitstr@plt+0x13708>
  42a098:	mov    0x8(%r9),%rax
  42a09c:	lea    0x8(%r9),%rbp
  42a0a0:	mov    %rax,0x28(%rsp)
  42a0a5:	jmpq   429eea <X509_get0_pubkey_bitstr@plt+0x1351a>
  42a0aa:	nopw   0x0(%rax,%rax,1)
  42a0b0:	mov    %r9,%rbp
  42a0b3:	movl   $0x1,0x20(%rsp)
  42a0bb:	jmpq   429eea <X509_get0_pubkey_bitstr@plt+0x1351a>
  42a0c0:	mov    (%rbx),%rdi
  42a0c3:	lea    0x33c62(%rip),%rsi        # 45dd2c <_fini+0x828>
  42a0ca:	xor    %eax,%eax
  42a0cc:	callq  413c40 <BIO_printf@plt>
  42a0d1:	nopl   0x0(%rax)
  42a0d8:	mov    0x30(%rsp),%rdx
  42a0dd:	mov    (%rbx),%rdi
  42a0e0:	lea    0x34651(%rip),%rsi        # 45e738 <_fini+0x1234>
  42a0e7:	xor    %eax,%eax
  42a0e9:	mov    $0x1,%r12d
  42a0ef:	callq  413c40 <BIO_printf@plt>
  42a0f4:	mov    (%rbx),%rdi
  42a0f7:	lea    0x33c57(%rip),%rsi        # 45dd55 <_fini+0x851>
  42a0fe:	xor    %eax,%eax
  42a100:	callq  413c40 <BIO_printf@plt>
  42a105:	mov    (%rbx),%rdi
  42a108:	lea    0x34649(%rip),%rsi        # 45e758 <_fini+0x1254>
  42a10f:	xor    %eax,%eax
  42a111:	callq  413c40 <BIO_printf@plt>
  42a116:	mov    (%rbx),%rdi
  42a119:	lea    0x34668(%rip),%rsi        # 45e788 <_fini+0x1284>
  42a120:	xor    %eax,%eax
  42a122:	callq  413c40 <BIO_printf@plt>
  42a127:	mov    (%rbx),%rdi
  42a12a:	lea    0x341a3(%rip),%rsi        # 45e2d4 <_fini+0xdd0>
  42a131:	xor    %eax,%eax
  42a133:	callq  413c40 <BIO_printf@plt>
  42a138:	mov    (%rbx),%rdi
  42a13b:	lea    0x341ae(%rip),%rsi        # 45e2f0 <_fini+0xdec>
  42a142:	xor    %eax,%eax
  42a144:	callq  413c40 <BIO_printf@plt>
  42a149:	mov    (%rbx),%rdi
  42a14c:	lea    0x38ae5(%rip),%rsi        # 462c38 <_fini+0x5734>
  42a153:	xor    %eax,%eax
  42a155:	callq  413c40 <BIO_printf@plt>
  42a15a:	mov    (%rbx),%rdi
  42a15d:	lea    0x38b14(%rip),%rsi        # 462c78 <_fini+0x5774>
  42a164:	xor    %eax,%eax
  42a166:	callq  413c40 <BIO_printf@plt>
  42a16b:	mov    (%rbx),%rdi
  42a16e:	lea    0x38b33(%rip),%rsi        # 462ca8 <_fini+0x57a4>
  42a175:	xor    %eax,%eax
  42a177:	callq  413c40 <BIO_printf@plt>
  42a17c:	add    $0x48,%rsp
  42a180:	mov    %r12d,%eax
  42a183:	pop    %rbx
  42a184:	pop    %rbp
  42a185:	pop    %r12
  42a187:	pop    %r13
  42a189:	pop    %r14
  42a18b:	pop    %r15
  42a18d:	retq   
  42a18e:	xchg   %ax,%ax
  42a190:	lea    0x38a2d(%rip),%rdi        # 462bc4 <_fini+0x56c0>
  42a197:	mov    $0xa,%ecx
  42a19c:	mov    %rdx,%rsi
  42a19f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42a1a1:	jne    42a0c0 <X509_get0_pubkey_bitstr@plt+0x136f0>
  42a1a7:	sub    $0x1,%r15d
  42a1ab:	je     42a0d8 <X509_get0_pubkey_bitstr@plt+0x13708>
  42a1b1:	cmpq   $0x0,0x18(%rsp)
  42a1b7:	je     42a20a <X509_get0_pubkey_bitstr@plt+0x1383a>
  42a1b9:	mov    0x8(%r9),%rsi
  42a1bd:	mov    0x18(%rsp),%rdi
  42a1c2:	lea    0x8(%r9),%rbp
  42a1c6:	callq  412fe0 <sk_push@plt>
  42a1cb:	jmpq   429eea <X509_get0_pubkey_bitstr@plt+0x1351a>
  42a1d0:	callq  4152b0 <BIO_s_file@plt>
  42a1d5:	mov    %rax,%rdi
  42a1d8:	callq  414a20 <BIO_new@plt>
  42a1dd:	test   %rax,%rax
  42a1e0:	mov    %rax,(%rbx)
  42a1e3:	je     429e74 <X509_get0_pubkey_bitstr@plt+0x134a4>
  42a1e9:	mov    0x24bd90(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  42a1f0:	mov    $0x6a,%esi
  42a1f5:	mov    %rax,%rdi
  42a1f8:	mov    (%rdx),%rcx
  42a1fb:	mov    $0x10,%edx
  42a200:	callq  412af0 <BIO_ctrl@plt>
  42a205:	jmpq   429e74 <X509_get0_pubkey_bitstr@plt+0x134a4>
  42a20a:	mov    %r9,0x38(%rsp)
  42a20f:	callq  412cd0 <sk_new_null@plt>
  42a214:	mov    0x38(%rsp),%r9
  42a219:	mov    %rax,0x18(%rsp)
  42a21e:	jmp    42a1b9 <X509_get0_pubkey_bitstr@plt+0x137e9>
  42a220:	xor    %r15d,%r15d
  42a223:	callq  414b20 <PKCS7_new@plt>
  42a228:	test   %rax,%rax
  42a22b:	mov    %rax,%rbp
  42a22e:	mov    %rax,0x10(%rsp)
  42a233:	mov    $0x1,%r12d
  42a239:	je     429fec <X509_get0_pubkey_bitstr@plt+0x1361c>
  42a23f:	callq  415b80 <PKCS7_SIGNED_new@plt>
  42a244:	test   %rax,%rax
  42a247:	mov    %rax,0x20(%rsp)
  42a24c:	je     429fec <X509_get0_pubkey_bitstr@plt+0x1361c>
  42a252:	mov    $0x16,%edi
  42a257:	callq  415950 <OBJ_nid2obj@plt>
  42a25c:	mov    %rbp,%rdx
  42a25f:	mov    %rax,0x18(%rbp)
  42a263:	mov    0x20(%rsp),%rbp
  42a268:	mov    $0x15,%edi
  42a26d:	mov    %rbp,0x20(%rdx)
  42a271:	mov    0x28(%rbp),%rdx
  42a275:	mov    %rdx,0x30(%rsp)
  42a27a:	callq  415950 <OBJ_nid2obj@plt>
  42a27f:	mov    0x30(%rsp),%rdx
  42a284:	mov    0x0(%rbp),%rdi
  42a288:	mov    $0x1,%esi
  42a28d:	mov    %rax,0x18(%rdx)
  42a291:	callq  416340 <ASN1_INTEGER_set@plt>
  42a296:	test   %eax,%eax
  42a298:	je     429fec <X509_get0_pubkey_bitstr@plt+0x1361c>
  42a29e:	callq  412cd0 <sk_new_null@plt>
  42a2a3:	test   %rax,%rax
  42a2a6:	je     429fec <X509_get0_pubkey_bitstr@plt+0x1361c>
  42a2ac:	mov    0x20(%rsp),%rdx
  42a2b1:	test   %r15,%r15
  42a2b4:	mov    %rax,0x18(%rdx)
  42a2b8:	je     42a2c5 <X509_get0_pubkey_bitstr@plt+0x138f5>
  42a2ba:	mov    %r15,%rsi
  42a2bd:	mov    %rax,%rdi
  42a2c0:	callq  412fe0 <sk_push@plt>
  42a2c5:	callq  412cd0 <sk_new_null@plt>
  42a2ca:	test   %rax,%rax
  42a2cd:	je     42a67d <X509_get0_pubkey_bitstr@plt+0x13cad>
  42a2d3:	cmpq   $0x0,0x18(%rsp)
  42a2d9:	mov    0x20(%rsp),%rdx
  42a2de:	movl   $0x0,0x20(%rsp)
  42a2e6:	mov    %rax,0x10(%rdx)
  42a2ea:	je     42a555 <X509_get0_pubkey_bitstr@plt+0x13b85>
  42a2f0:	mov    %r14,0x30(%rsp)
  42a2f5:	mov    %r13,0x38(%rsp)
  42a2fa:	mov    %rax,%r14
  42a2fd:	mov    0x18(%rsp),%rdi
  42a302:	callq  4156d0 <sk_num@plt>
  42a307:	cmp    %eax,0x20(%rsp)
  42a30b:	jge    42a54b <X509_get0_pubkey_bitstr@plt+0x13b7b>
  42a311:	mov    0x20(%rsp),%esi
  42a315:	mov    0x18(%rsp),%rdi
  42a31a:	callq  412b30 <sk_value@plt>
  42a31f:	mov    %rax,%r12
  42a322:	callq  4152b0 <BIO_s_file@plt>
  42a327:	mov    %rax,%rdi
  42a32a:	callq  414a20 <BIO_new@plt>
  42a32f:	test   %rax,%rax
  42a332:	mov    %rax,%r13
  42a335:	je     42a5bc <X509_get0_pubkey_bitstr@plt+0x13bec>
  42a33b:	mov    %r12,%rcx
  42a33e:	mov    $0x3,%edx
  42a343:	mov    $0x6c,%esi
  42a348:	mov    %rax,%rdi
  42a34b:	callq  412af0 <BIO_ctrl@plt>
  42a350:	test   %rax,%rax
  42a353:	jle    42a4fb <X509_get0_pubkey_bitstr@plt+0x13b2b>
  42a359:	xor    %ecx,%ecx
  42a35b:	xor    %edx,%edx
  42a35d:	xor    %esi,%esi
  42a35f:	mov    %r13,%rdi
  42a362:	callq  4137b0 <PEM_X509_INFO_read_bio@plt>
  42a367:	test   %rax,%rax
  42a36a:	mov    %rax,%rbp
  42a36d:	je     42a65e <X509_get0_pubkey_bitstr@plt+0x13c8e>
  42a373:	xor    %r12d,%r12d
  42a376:	jmp    42a3ae <X509_get0_pubkey_bitstr@plt+0x139de>
  42a378:	nopl   0x0(%rax,%rax,1)
  42a380:	mov    %rbp,%rdi
  42a383:	callq  415850 <sk_shift@plt>
  42a388:	mov    (%rax),%rsi
  42a38b:	mov    %rax,%r15
  42a38e:	test   %rsi,%rsi
  42a391:	je     42a3a6 <X509_get0_pubkey_bitstr@plt+0x139d6>
  42a393:	mov    %r14,%rdi
  42a396:	add    $0x1,%r12d
  42a39a:	callq  412fe0 <sk_push@plt>
  42a39f:	movq   $0x0,(%r15)
  42a3a6:	mov    %r15,%rdi
  42a3a9:	callq  413680 <X509_INFO_free@plt>
  42a3ae:	mov    %rbp,%rdi
  42a3b1:	callq  4156d0 <sk_num@plt>
  42a3b6:	test   %eax,%eax
  42a3b8:	jne    42a380 <X509_get0_pubkey_bitstr@plt+0x139b0>
  42a3ba:	mov    %r13,%rdi
  42a3bd:	callq  413960 <BIO_free@plt>
  42a3c2:	test   %rbp,%rbp
  42a3c5:	je     42a3cf <X509_get0_pubkey_bitstr@plt+0x139ff>
  42a3c7:	mov    %rbp,%rdi
  42a3ca:	callq  4143f0 <sk_free@plt>
  42a3cf:	cmp    $0xffffffff,%r12d
  42a3d3:	je     42a68b <X509_get0_pubkey_bitstr@plt+0x13cbb>
  42a3d9:	addl   $0x1,0x20(%rsp)
  42a3de:	jmpq   42a2fd <X509_get0_pubkey_bitstr@plt+0x1392d>
  42a3e3:	xor    %ecx,%ecx
  42a3e5:	xor    %edx,%edx
  42a3e7:	xor    %esi,%esi
  42a3e9:	mov    %r14,%rdi
  42a3ec:	callq  4146f0 <PEM_read_bio_X509_CRL@plt>
  42a3f1:	mov    %rax,%r15
  42a3f4:	test   %r15,%r15
  42a3f7:	jne    42a223 <X509_get0_pubkey_bitstr@plt+0x13853>
  42a3fd:	mov    (%rbx),%rdi
  42a400:	lea    0x387c7(%rip),%rsi        # 462bce <_fini+0x56ca>
  42a407:	xor    %eax,%eax
  42a409:	mov    $0x1,%r12d
  42a40f:	callq  413c40 <BIO_printf@plt>
  42a414:	mov    (%rbx),%rdi
  42a417:	callq  413f40 <ERR_print_errors@plt>
  42a41c:	movq   $0x0,0x10(%rsp)
  42a425:	jmpq   429fec <X509_get0_pubkey_bitstr@plt+0x1361c>
  42a42a:	nopw   0x0(%rax,%rax,1)
  42a430:	mov    (%rbx),%rdi
  42a433:	xor    %r15d,%r15d
  42a436:	mov    $0x1,%r12d
  42a43c:	callq  413f40 <ERR_print_errors@plt>
  42a441:	test   %r14,%r14
  42a444:	movq   $0x0,0x10(%rsp)
  42a44d:	jne    429fec <X509_get0_pubkey_bitstr@plt+0x1361c>
  42a453:	jmpq   429ff4 <X509_get0_pubkey_bitstr@plt+0x13624>
  42a458:	callq  416990 <ERR_load_crypto_strings@plt>
  42a45d:	nopl   (%rax)
  42a460:	callq  4152b0 <BIO_s_file@plt>
  42a465:	mov    %rax,%rdi
  42a468:	callq  414a20 <BIO_new@plt>
  42a46d:	mov    %rax,%r14
  42a470:	callq  4152b0 <BIO_s_file@plt>
  42a475:	mov    %rax,%rdi
  42a478:	callq  414a20 <BIO_new@plt>
  42a47d:	test   %r14,%r14
  42a480:	mov    %rax,%r13
  42a483:	je     42a430 <X509_get0_pubkey_bitstr@plt+0x13a60>
  42a485:	test   %rax,%rax
  42a488:	je     42a430 <X509_get0_pubkey_bitstr@plt+0x13a60>
  42a48a:	movl   $0x3,0xc(%rsp)
  42a492:	mov    $0x3,%r12d
  42a498:	movq   $0x0,0x28(%rsp)
  42a4a1:	movq   $0x0,0x18(%rsp)
  42a4aa:	mov    0x24ba5f(%rip),%rax        # 675f10 <_fini+0x218a0c>
  42a4b1:	xor    %edx,%edx
  42a4b3:	mov    $0x6a,%esi
  42a4b8:	mov    %r14,%rdi
  42a4bb:	mov    (%rax),%rcx
  42a4be:	callq  412af0 <BIO_ctrl@plt>
  42a4c3:	jmpq   429fb5 <X509_get0_pubkey_bitstr@plt+0x135e5>
  42a4c8:	xor    %esi,%esi
  42a4ca:	mov    %r14,%rdi
  42a4cd:	callq  415b40 <d2i_X509_CRL_bio@plt>
  42a4d2:	mov    %rax,%r15
  42a4d5:	jmpq   42a3f4 <X509_get0_pubkey_bitstr@plt+0x13a24>
  42a4da:	mov    0x10(%rsp),%rdi
  42a4df:	mov    $0x1,%r12d
  42a4e5:	xor    %r15d,%r15d
  42a4e8:	callq  4142c0 <perror@plt>
  42a4ed:	movq   $0x0,0x10(%rsp)
  42a4f6:	jmpq   429fec <X509_get0_pubkey_bitstr@plt+0x1361c>
  42a4fb:	mov    (%rbx),%rdi
  42a4fe:	lea    0x38715(%rip),%rsi        # 462c1a <_fini+0x5716>
  42a505:	mov    %r13,%rbp
  42a508:	mov    %r12,%rdx
  42a50b:	xor    %eax,%eax
  42a50d:	mov    0x30(%rsp),%r14
  42a512:	mov    0x38(%rsp),%r13
  42a517:	callq  413c40 <BIO_printf@plt>
  42a51c:	mov    %rbp,%rdi
  42a51f:	callq  413960 <BIO_free@plt>
  42a524:	mov    (%rbx),%rdi
  42a527:	lea    0x386d0(%rip),%rsi        # 462bfe <_fini+0x56fa>
  42a52e:	xor    %eax,%eax
  42a530:	mov    $0x1,%r12d
  42a536:	xor    %r15d,%r15d
  42a539:	callq  413c40 <BIO_printf@plt>
  42a53e:	mov    (%rbx),%rdi
  42a541:	callq  413f40 <ERR_print_errors@plt>
  42a546:	jmpq   429fec <X509_get0_pubkey_bitstr@plt+0x1361c>
  42a54b:	mov    0x30(%rsp),%r14
  42a550:	mov    0x38(%rsp),%r13
  42a555:	mov    0x18(%rsp),%rdi
  42a55a:	callq  4143f0 <sk_free@plt>
  42a55f:	cmpq   $0x0,0x28(%rsp)
  42a565:	je     42a640 <X509_get0_pubkey_bitstr@plt+0x13c70>
  42a56b:	mov    0x28(%rsp),%rcx
  42a570:	mov    $0x5,%edx
  42a575:	mov    $0x6c,%esi
  42a57a:	mov    %r13,%rdi
  42a57d:	callq  412af0 <BIO_ctrl@plt>
  42a582:	test   %rax,%rax
  42a585:	jle    42a628 <X509_get0_pubkey_bitstr@plt+0x13c58>
  42a58b:	cmpl   $0x1,0xc(%rsp)
  42a590:	je     42a619 <X509_get0_pubkey_bitstr@plt+0x13c49>
  42a596:	cmpl   $0x3,0xc(%rsp)
  42a59b:	je     42a5df <X509_get0_pubkey_bitstr@plt+0x13c0f>
  42a59d:	mov    (%rbx),%rdi
  42a5a0:	lea    0x34dc9(%rip),%rsi        # 45f370 <_fini+0x1e6c>
  42a5a7:	xor    %eax,%eax
  42a5a9:	mov    $0x1,%r12d
  42a5af:	xor    %r15d,%r15d
  42a5b2:	callq  413c40 <BIO_printf@plt>
  42a5b7:	jmpq   429fec <X509_get0_pubkey_bitstr@plt+0x1361c>
  42a5bc:	mov    (%rbx),%rdi
  42a5bf:	lea    0x38654(%rip),%rsi        # 462c1a <_fini+0x5716>
  42a5c6:	mov    %r12,%rdx
  42a5c9:	xor    %eax,%eax
  42a5cb:	mov    0x30(%rsp),%r14
  42a5d0:	mov    0x38(%rsp),%r13
  42a5d5:	callq  413c40 <BIO_printf@plt>
  42a5da:	jmpq   42a524 <X509_get0_pubkey_bitstr@plt+0x13b54>
  42a5df:	mov    0x10(%rsp),%rsi
  42a5e4:	mov    %r13,%rdi
  42a5e7:	callq  414de0 <PEM_write_bio_PKCS7@plt>
  42a5ec:	xor    %r12d,%r12d
  42a5ef:	xor    %r15d,%r15d
  42a5f2:	test   %eax,%eax
  42a5f4:	jne    429fec <X509_get0_pubkey_bitstr@plt+0x1361c>
  42a5fa:	mov    (%rbx),%rdi
  42a5fd:	lea    0x3846d(%rip),%rsi        # 462a71 <_fini+0x556d>
  42a604:	mov    $0x1,%r12b
  42a607:	callq  413c40 <BIO_printf@plt>
  42a60c:	mov    (%rbx),%rdi
  42a60f:	callq  413f40 <ERR_print_errors@plt>
  42a614:	jmpq   429fec <X509_get0_pubkey_bitstr@plt+0x1361c>
  42a619:	mov    0x10(%rsp),%rsi
  42a61e:	mov    %r13,%rdi
  42a621:	callq  415770 <i2d_PKCS7_bio@plt>
  42a626:	jmp    42a5ec <X509_get0_pubkey_bitstr@plt+0x13c1c>
  42a628:	mov    0x28(%rsp),%rdi
  42a62d:	mov    $0x1,%r12d
  42a633:	xor    %r15d,%r15d
  42a636:	callq  4142c0 <perror@plt>
  42a63b:	jmpq   429fec <X509_get0_pubkey_bitstr@plt+0x1361c>
  42a640:	mov    0x24b871(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  42a647:	xor    %edx,%edx
  42a649:	mov    $0x6a,%esi
  42a64e:	mov    %r13,%rdi
  42a651:	mov    (%rax),%rcx
  42a654:	callq  412af0 <BIO_ctrl@plt>
  42a659:	jmpq   42a58b <X509_get0_pubkey_bitstr@plt+0x13bbb>
  42a65e:	mov    (%rbx),%rdi
  42a661:	lea    0x3857a(%rip),%rsi        # 462be2 <_fini+0x56de>
  42a668:	mov    %r12,%rdx
  42a66b:	xor    %eax,%eax
  42a66d:	mov    $0xffffffff,%r12d
  42a673:	callq  413c40 <BIO_printf@plt>
  42a678:	jmpq   42a3ba <X509_get0_pubkey_bitstr@plt+0x139ea>
  42a67d:	mov    $0x1,%r12d
  42a683:	xor    %r15d,%r15d
  42a686:	jmpq   429fec <X509_get0_pubkey_bitstr@plt+0x1361c>
  42a68b:	mov    0x30(%rsp),%r14
  42a690:	mov    0x38(%rsp),%r13
  42a695:	jmpq   42a524 <X509_get0_pubkey_bitstr@plt+0x13b54>
  42a69a:	nopw   0x0(%rax,%rax,1)
  42a6a0:	push   %r15
  42a6a2:	push   %r14
  42a6a4:	push   %r13
  42a6a6:	push   %r12
  42a6a8:	mov    %edi,%r12d
  42a6ab:	push   %rbp
  42a6ac:	push   %rbx
  42a6ad:	mov    %rsi,%rbx
  42a6b0:	sub    $0x1e8,%rsp
  42a6b7:	mov    %fs:0x28,%rax
  42a6c0:	mov    %rax,0x1d8(%rsp)
  42a6c8:	xor    %eax,%eax
  42a6ca:	movq   $0x0,0x78(%rsp)
  42a6d3:	callq  413790 <EVP_sha1@plt>
  42a6d8:	mov    $0xd,%edi
  42a6dd:	mov    $0x1,%esi
  42a6e2:	mov    %rax,0x20(%rsp)
  42a6e7:	callq  414ee0 <signal@plt>
  42a6ec:	lea    0x25064d(%rip),%rbp        # 67ad40 <_edata+0x38>
  42a6f3:	mov    0x0(%rbp),%rdi
  42a6f7:	test   %rdi,%rdi
  42a6fa:	je     42ac8c <X509_get0_pubkey_bitstr@plt+0x142bc>
  42a700:	xor    %esi,%esi
  42a702:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  42a707:	test   %eax,%eax
  42a709:	je     42aa60 <X509_get0_pubkey_bitstr@plt+0x14090>
  42a70f:	cmpq   $0x0,0x250c29(%rip)        # 67b340 <_edata+0x638>
  42a717:	je     42acdb <X509_get0_pubkey_bitstr@plt+0x1430b>
  42a71d:	lea    -0x1(%r12),%r15d
  42a722:	lea    0x8(%rbx),%r8
  42a726:	movl   $0x0,0x18(%rsp)
  42a72e:	movl   $0x0,0x5c(%rsp)
  42a736:	movl   $0x0,0x58(%rsp)
  42a73e:	mov    $0x3,%r12d
  42a744:	test   %r15d,%r15d
  42a747:	movl   $0x0,0x40(%rsp)
  42a74f:	movl   $0x0,0x44(%rsp)
  42a757:	movl   $0x0,0x54(%rsp)
  42a75f:	movl   $0x0,0x50(%rsp)
  42a767:	mov    $0x3,%r14d
  42a76d:	movl   $0x0,0x4c(%rsp)
  42a775:	movl   $0x0,0x48(%rsp)
  42a77d:	movq   $0x0,0x10(%rsp)
  42a786:	movq   $0x0,0x8(%rsp)
  42a78f:	movl   $0x0,0x30(%rsp)
  42a797:	movq   $0x0,0x28(%rsp)
  42a7a0:	movq   $0x0,0x38(%rsp)
  42a7a9:	jle    42a83f <X509_get0_pubkey_bitstr@plt+0x13e6f>
  42a7af:	lea    0x78(%rsp),%rax
  42a7b4:	lea    0x33524(%rip),%rbx        # 45dcdf <_fini+0x7db>
  42a7bb:	mov    %rax,0x60(%rsp)
  42a7c0:	jmp    42a7ef <X509_get0_pubkey_bitstr@plt+0x13e1f>
  42a7c2:	nopw   0x0(%rax,%rax,1)
  42a7c8:	sub    $0x1,%r15d
  42a7cc:	je     42ab70 <X509_get0_pubkey_bitstr@plt+0x141a0>
  42a7d2:	mov    0x8(%r8),%rdi
  42a7d6:	lea    0x8(%r8),%r13
  42a7da:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  42a7df:	mov    %eax,%r14d
  42a7e2:	sub    $0x1,%r15d
  42a7e6:	lea    0x8(%r13),%r8
  42a7ea:	test   %r15d,%r15d
  42a7ed:	jle    42a83f <X509_get0_pubkey_bitstr@plt+0x13e6f>
  42a7ef:	mov    (%r8),%rdx
  42a7f2:	mov    $0x8,%ecx
  42a7f7:	mov    %rbx,%rdi
  42a7fa:	mov    %rdx,%rsi
  42a7fd:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42a7ff:	je     42a7c8 <X509_get0_pubkey_bitstr@plt+0x13df8>
  42a801:	lea    0x33988(%rip),%rdi        # 45e190 <_fini+0xc8c>
  42a808:	mov    $0x9,%ecx
  42a80d:	mov    %rdx,%rsi
  42a810:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42a812:	jne    42aab8 <X509_get0_pubkey_bitstr@plt+0x140e8>
  42a818:	sub    $0x1,%r15d
  42a81c:	je     42ab70 <X509_get0_pubkey_bitstr@plt+0x141a0>
  42a822:	mov    0x8(%r8),%rdi
  42a826:	lea    0x8(%r8),%r13
  42a82a:	sub    $0x1,%r15d
  42a82e:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  42a833:	test   %r15d,%r15d
  42a836:	mov    %eax,%r12d
  42a839:	lea    0x8(%r13),%r8
  42a83d:	jg     42a7ef <X509_get0_pubkey_bitstr@plt+0x13e1f>
  42a83f:	callq  416990 <ERR_load_crypto_strings@plt>
  42a844:	callq  4152b0 <BIO_s_file@plt>
  42a849:	mov    %rax,%rdi
  42a84c:	callq  414a20 <BIO_new@plt>
  42a851:	test   %rax,%rax
  42a854:	mov    %rax,%rbx
  42a857:	je     42ae7f <X509_get0_pubkey_bitstr@plt+0x144af>
  42a85d:	cmpq   $0x0,0x8(%rsp)
  42a863:	je     42ae1c <X509_get0_pubkey_bitstr@plt+0x1444c>
  42a869:	mov    0x8(%rsp),%rcx
  42a86e:	mov    $0x3,%edx
  42a873:	mov    $0x6c,%esi
  42a878:	mov    %rax,%rdi
  42a87b:	callq  412af0 <BIO_ctrl@plt>
  42a880:	test   %rax,%rax
  42a883:	jle    42b030 <X509_get0_pubkey_bitstr@plt+0x14660>
  42a889:	cmp    $0x1,%r14d
  42a88d:	je     42ae4c <X509_get0_pubkey_bitstr@plt+0x1447c>
  42a893:	cmp    $0x3,%r14d
  42a897:	jne    42aa45 <X509_get0_pubkey_bitstr@plt+0x14075>
  42a89d:	xor    %ecx,%ecx
  42a89f:	xor    %edx,%edx
  42a8a1:	xor    %esi,%esi
  42a8a3:	mov    %rbx,%rdi
  42a8a6:	callq  4146f0 <PEM_read_bio_X509_CRL@plt>
  42a8ab:	mov    %rax,0x8(%rsp)
  42a8b0:	cmpq   $0x0,0x8(%rsp)
  42a8b6:	je     42ae6d <X509_get0_pubkey_bitstr@plt+0x1449d>
  42a8bc:	mov    %rbx,%rdi
  42a8bf:	xor    %r13d,%r13d
  42a8c2:	callq  413960 <BIO_free@plt>
  42a8c7:	mov    0x18(%rsp),%eax
  42a8cb:	test   %eax,%eax
  42a8cd:	jne    42ad2b <X509_get0_pubkey_bitstr@plt+0x1435b>
  42a8d3:	mov    0x30(%rsp),%esi
  42a8d7:	mov    $0x1,%ebx
  42a8dc:	test   %esi,%esi
  42a8de:	je     42a97a <X509_get0_pubkey_bitstr@plt+0x13faa>
  42a8e4:	lea    0x74(%rsp),%rax
  42a8e9:	mov    %r12d,0x60(%rsp)
  42a8ee:	mov    %r13,0x18(%rsp)
  42a8f3:	mov    0x30(%rsp),%r12d
  42a8f8:	mov    0x4c(%rsp),%r14d
  42a8fd:	mov    %rax,0x68(%rsp)
  42a902:	mov    0x50(%rsp),%r15d
  42a907:	lea    0x190(%rsp),%rax
  42a90f:	mov    0x54(%rsp),%r8d
  42a914:	mov    0x58(%rsp),%r9d
  42a919:	mov    0x5c(%rsp),%r10d
  42a91e:	mov    0x48(%rsp),%r13d
  42a923:	mov    %rax,0x38(%rsp)
  42a928:	nopl   0x0(%rax,%rax,1)
  42a930:	cmp    %ebx,%r14d
  42a933:	je     42b219 <X509_get0_pubkey_bitstr@plt+0x14849>
  42a939:	cmp    %ebx,%r10d
  42a93c:	je     42b42f <X509_get0_pubkey_bitstr@plt+0x14a5f>
  42a942:	cmp    %ebx,%r13d
  42a945:	je     42b3e3 <X509_get0_pubkey_bitstr@plt+0x14a13>
  42a94b:	cmp    %ebx,%r15d
  42a94e:	xchg   %ax,%ax
  42a950:	je     42b346 <X509_get0_pubkey_bitstr@plt+0x14976>
  42a956:	cmp    %ebx,%r8d
  42a959:	je     42b2ab <X509_get0_pubkey_bitstr@plt+0x148db>
  42a95f:	cmp    %ebx,%r9d
  42a962:	je     42b112 <X509_get0_pubkey_bitstr@plt+0x14742>
  42a968:	add    $0x1,%ebx
  42a96b:	cmp    %r12d,%ebx
  42a96e:	jle    42a930 <X509_get0_pubkey_bitstr@plt+0x13f60>
  42a970:	mov    0x60(%rsp),%r12d
  42a975:	mov    0x18(%rsp),%r13
  42a97a:	callq  4152b0 <BIO_s_file@plt>
  42a97f:	mov    %rax,%rdi
  42a982:	callq  414a20 <BIO_new@plt>
  42a987:	test   %rax,%rax
  42a98a:	mov    %rax,%r14
  42a98d:	je     42aff5 <X509_get0_pubkey_bitstr@plt+0x14625>
  42a993:	cmpq   $0x0,0x10(%rsp)
  42a999:	je     42aeb9 <X509_get0_pubkey_bitstr@plt+0x144e9>
  42a99f:	mov    0x10(%rsp),%rcx
  42a9a4:	mov    $0x5,%edx
  42a9a9:	mov    $0x6c,%esi
  42a9ae:	mov    %rax,%rdi
  42a9b1:	callq  412af0 <BIO_ctrl@plt>
  42a9b6:	test   %rax,%rax
  42a9b9:	jle    42aed7 <X509_get0_pubkey_bitstr@plt+0x14507>
  42a9bf:	mov    0x40(%rsp),%ecx
  42a9c3:	test   %ecx,%ecx
  42a9c5:	jne    42ae3a <X509_get0_pubkey_bitstr@plt+0x1446a>
  42a9cb:	mov    0x44(%rsp),%edx
  42a9cf:	xor    %ebx,%ebx
  42a9d1:	test   %edx,%edx
  42a9d3:	jne    42aa00 <X509_get0_pubkey_bitstr@plt+0x14030>
  42a9d5:	cmp    $0x1,%r12d
  42a9d9:	je     42afe3 <X509_get0_pubkey_bitstr@plt+0x14613>
  42a9df:	cmp    $0x3,%r12d
  42a9e3:	je     42aeeb <X509_get0_pubkey_bitstr@plt+0x1451b>
  42a9e9:	mov    0x0(%rbp),%rdi
  42a9ed:	lea    0x3497c(%rip),%rsi        # 45f370 <_fini+0x1e6c>
  42a9f4:	xor    %eax,%eax
  42a9f6:	mov    $0x1,%ebx
  42a9fb:	callq  413c40 <BIO_printf@plt>
  42aa00:	mov    %r14,%rdi
  42aa03:	callq  416570 <BIO_free_all@plt>
  42aa08:	mov    0x250931(%rip),%rdi        # 67b340 <_edata+0x638>
  42aa0f:	callq  416570 <BIO_free_all@plt>
  42aa14:	mov    0x8(%rsp),%rdi
  42aa19:	movq   $0x0,0x25091c(%rip)        # 67b340 <_edata+0x638>
  42aa24:	callq  4166d0 <X509_CRL_free@plt>
  42aa29:	test   %r13,%r13
  42aa2c:	je     42aa8a <X509_get0_pubkey_bitstr@plt+0x140ba>
  42aa2e:	lea    0x90(%rsp),%rdi
  42aa36:	callq  413780 <X509_STORE_CTX_cleanup@plt>
  42aa3b:	mov    %r13,%rdi
  42aa3e:	callq  4134b0 <X509_STORE_free@plt>
  42aa43:	jmp    42aa8a <X509_get0_pubkey_bitstr@plt+0x140ba>
  42aa45:	mov    0x0(%rbp),%rdi
  42aa49:	lea    0x38298(%rip),%rsi        # 462ce8 <_fini+0x57e4>
  42aa50:	xor    %eax,%eax
  42aa52:	callq  413c40 <BIO_printf@plt>
  42aa57:	mov    %rbx,%rdi
  42aa5a:	callq  413960 <BIO_free@plt>
  42aa5f:	nop
  42aa60:	xor    %edi,%edi
  42aa62:	mov    $0x1,%ebx
  42aa67:	callq  416570 <BIO_free_all@plt>
  42aa6c:	mov    0x2508cd(%rip),%rdi        # 67b340 <_edata+0x638>
  42aa73:	callq  416570 <BIO_free_all@plt>
  42aa78:	xor    %edi,%edi
  42aa7a:	movq   $0x0,0x2508bb(%rip)        # 67b340 <_edata+0x638>
  42aa85:	callq  4166d0 <X509_CRL_free@plt>
  42aa8a:	mov    %ebx,%eax
  42aa8c:	mov    0x1d8(%rsp),%rbx
  42aa94:	xor    %fs:0x28,%rbx
  42aa9d:	jne    42b067 <X509_get0_pubkey_bitstr@plt+0x14697>
  42aaa3:	add    $0x1e8,%rsp
  42aaaa:	pop    %rbx
  42aaab:	pop    %rbp
  42aaac:	pop    %r12
  42aaae:	pop    %r13
  42aab0:	pop    %r14
  42aab2:	pop    %r15
  42aab4:	retq   
  42aab5:	nopl   (%rax)
  42aab8:	cmpb   $0x2d,(%rdx)
  42aabb:	jne    42aaf0 <X509_get0_pubkey_bitstr@plt+0x14120>
  42aabd:	cmpb   $0x69,0x1(%rdx)
  42aac1:	jne    42aaf0 <X509_get0_pubkey_bitstr@plt+0x14120>
  42aac3:	cmpb   $0x6e,0x2(%rdx)
  42aac7:	jne    42aaf0 <X509_get0_pubkey_bitstr@plt+0x14120>
  42aac9:	cmpb   $0x0,0x3(%rdx)
  42aacd:	jne    42aaf0 <X509_get0_pubkey_bitstr@plt+0x14120>
  42aacf:	sub    $0x1,%r15d
  42aad3:	je     42ab70 <X509_get0_pubkey_bitstr@plt+0x141a0>
  42aad9:	mov    0x8(%r8),%rax
  42aadd:	lea    0x8(%r8),%r13
  42aae1:	mov    %rax,0x8(%rsp)
  42aae6:	jmpq   42a7e2 <X509_get0_pubkey_bitstr@plt+0x13e12>
  42aaeb:	nopl   0x0(%rax,%rax,1)
  42aaf0:	lea    0x3334f(%rip),%rdi        # 45de46 <_fini+0x942>
  42aaf7:	mov    $0x5,%ecx
  42aafc:	mov    %rdx,%rsi
  42aaff:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42ab01:	jne    42ab20 <X509_get0_pubkey_bitstr@plt+0x14150>
  42ab03:	sub    $0x1,%r15d
  42ab07:	je     42ab70 <X509_get0_pubkey_bitstr@plt+0x141a0>
  42ab09:	mov    0x8(%r8),%rax
  42ab0d:	lea    0x8(%r8),%r13
  42ab11:	mov    %rax,0x10(%rsp)
  42ab16:	jmpq   42a7e2 <X509_get0_pubkey_bitstr@plt+0x13e12>
  42ab1b:	nopl   0x0(%rax,%rax,1)
  42ab20:	lea    0x3300e(%rip),%rdi        # 45db35 <_fini+0x631>
  42ab27:	mov    $0x8,%ecx
  42ab2c:	mov    %rdx,%rsi
  42ab2f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42ab31:	jne    42abb8 <X509_get0_pubkey_bitstr@plt+0x141e8>
  42ab37:	sub    $0x1,%r15d
  42ab3b:	je     42ab70 <X509_get0_pubkey_bitstr@plt+0x141a0>
  42ab3d:	mov    0x8(%r8),%rax
  42ab41:	lea    0x8(%r8),%r13
  42ab45:	movl   $0x1,0x18(%rsp)
  42ab4d:	mov    %rax,0x28(%rsp)
  42ab52:	jmpq   42a7e2 <X509_get0_pubkey_bitstr@plt+0x13e12>
  42ab57:	mov    (%r8),%rdx
  42ab5a:	mov    0x0(%rbp),%rdi
  42ab5e:	lea    0x331c7(%rip),%rsi        # 45dd2c <_fini+0x828>
  42ab65:	callq  413c40 <BIO_printf@plt>
  42ab6a:	nopw   0x0(%rax,%rax,1)
  42ab70:	mov    0x24e1c9(%rip),%rdx        # 678d40 <_fini+0x21b83c>
  42ab77:	lea    0x24e1c2(%rip),%rbx        # 678d40 <_fini+0x21b83c>
  42ab7e:	test   %rdx,%rdx
  42ab81:	je     42aa60 <X509_get0_pubkey_bitstr@plt+0x14090>
  42ab87:	nopw   0x0(%rax,%rax,1)
  42ab90:	mov    0x0(%rbp),%rdi
  42ab94:	lea    0x3ffc9(%rip),%rsi        # 46ab64 <_fini+0xd660>
  42ab9b:	xor    %eax,%eax
  42ab9d:	add    $0x8,%rbx
  42aba1:	callq  413c40 <BIO_printf@plt>
  42aba6:	mov    (%rbx),%rdx
  42aba9:	test   %rdx,%rdx
  42abac:	jne    42ab90 <X509_get0_pubkey_bitstr@plt+0x141c0>
  42abae:	jmpq   42aa60 <X509_get0_pubkey_bitstr@plt+0x14090>
  42abb3:	nopl   0x0(%rax,%rax,1)
  42abb8:	lea    0x32f7e(%rip),%rdi        # 45db3d <_fini+0x639>
  42abbf:	mov    $0x8,%ecx
  42abc4:	mov    %rdx,%rsi
  42abc7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42abc9:	je     42ac58 <X509_get0_pubkey_bitstr@plt+0x14288>
  42abcf:	lea    0x33662(%rip),%rdi        # 45e238 <_fini+0xd34>
  42abd6:	mov    $0x8,%ecx
  42abdb:	mov    %rdx,%rsi
  42abde:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42abe0:	je     42ac7c <X509_get0_pubkey_bitstr@plt+0x142ac>
  42abe6:	lea    0x3367a(%rip),%rdi        # 45e267 <_fini+0xd63>
  42abed:	mov    $0x6,%ecx
  42abf2:	mov    %rdx,%rsi
  42abf5:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42abf7:	je     42accb <X509_get0_pubkey_bitstr@plt+0x142fb>
  42abfd:	lea    0x3810e(%rip),%rdi        # 462d12 <_fini+0x580e>
  42ac04:	mov    $0x6,%ecx
  42ac09:	mov    %rdx,%rsi
  42ac0c:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42ac0e:	je     42ad16 <X509_get0_pubkey_bitstr@plt+0x14346>
  42ac14:	lea    0x33632(%rip),%rdi        # 45e24d <_fini+0xd49>
  42ac1b:	mov    $0x9,%ecx
  42ac20:	mov    %rdx,%rsi
  42ac23:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42ac25:	jne    42adf0 <X509_get0_pubkey_bitstr@plt+0x14420>
  42ac2b:	sub    $0x1,%r15d
  42ac2f:	je     42ab70 <X509_get0_pubkey_bitstr@plt+0x141a0>
  42ac35:	mov    0x8(%r8),%rsi
  42ac39:	mov    0x60(%rsp),%rdi
  42ac3e:	lea    0x8(%r8),%r13
  42ac42:	callq  446600 <X509_get0_pubkey_bitstr@plt+0x2fc30>
  42ac47:	test   %eax,%eax
  42ac49:	jne    42a7e2 <X509_get0_pubkey_bitstr@plt+0x13e12>
  42ac4f:	jmpq   42ab70 <X509_get0_pubkey_bitstr@plt+0x141a0>
  42ac54:	nopl   0x0(%rax)
  42ac58:	sub    $0x1,%r15d
  42ac5c:	je     42ab70 <X509_get0_pubkey_bitstr@plt+0x141a0>
  42ac62:	mov    0x8(%r8),%rax
  42ac66:	lea    0x8(%r8),%r13
  42ac6a:	movl   $0x1,0x18(%rsp)
  42ac72:	mov    %rax,0x38(%rsp)
  42ac77:	jmpq   42a7e2 <X509_get0_pubkey_bitstr@plt+0x13e12>
  42ac7c:	mov    %r8,%r13
  42ac7f:	movl   $0x1,0x18(%rsp)
  42ac87:	jmpq   42a7e2 <X509_get0_pubkey_bitstr@plt+0x13e12>
  42ac8c:	callq  4152b0 <BIO_s_file@plt>
  42ac91:	mov    %rax,%rdi
  42ac94:	callq  414a20 <BIO_new@plt>
  42ac99:	test   %rax,%rax
  42ac9c:	mov    %rax,%rdi
  42ac9f:	mov    %rax,0x0(%rbp)
  42aca3:	je     42a700 <X509_get0_pubkey_bitstr@plt+0x13d30>
  42aca9:	mov    0x24b2d0(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  42acb0:	mov    $0x6a,%esi
  42acb5:	mov    (%rdx),%rcx
  42acb8:	mov    $0x10,%edx
  42acbd:	callq  412af0 <BIO_ctrl@plt>
  42acc2:	mov    0x0(%rbp),%rdi
  42acc6:	jmpq   42a700 <X509_get0_pubkey_bitstr@plt+0x13d30>
  42accb:	mov    %r8,%r13
  42acce:	movl   $0x1,0x40(%rsp)
  42acd6:	jmpq   42a7e2 <X509_get0_pubkey_bitstr@plt+0x13e12>
  42acdb:	callq  4152b0 <BIO_s_file@plt>
  42ace0:	mov    %rax,%rdi
  42ace3:	callq  414a20 <BIO_new@plt>
  42ace8:	test   %rax,%rax
  42aceb:	mov    %rax,0x25064e(%rip)        # 67b340 <_edata+0x638>
  42acf2:	je     42a71d <X509_get0_pubkey_bitstr@plt+0x13d4d>
  42acf8:	mov    0x24b1b9(%rip),%rdx        # 675eb8 <_fini+0x2189b4>
  42acff:	mov    $0x6a,%esi
  42ad04:	mov    %rax,%rdi
  42ad07:	mov    (%rdx),%rcx
  42ad0a:	xor    %edx,%edx
  42ad0c:	callq  412af0 <BIO_ctrl@plt>
  42ad11:	jmpq   42a71d <X509_get0_pubkey_bitstr@plt+0x13d4d>
  42ad16:	addl   $0x1,0x30(%rsp)
  42ad1b:	mov    %r8,%r13
  42ad1e:	mov    0x30(%rsp),%eax
  42ad22:	mov    %eax,0x48(%rsp)
  42ad26:	jmpq   42a7e2 <X509_get0_pubkey_bitstr@plt+0x13e12>
  42ad2b:	callq  4166c0 <X509_STORE_new@plt>
  42ad30:	mov    %rax,%r13
  42ad33:	callq  416980 <X509_LOOKUP_file@plt>
  42ad38:	mov    %r13,%rdi
  42ad3b:	mov    %rax,%rsi
  42ad3e:	callq  412c00 <X509_STORE_add_lookup@plt>
  42ad43:	test   %rax,%rax
  42ad46:	mov    %rax,%rbx
  42ad49:	je     42ae60 <X509_get0_pubkey_bitstr@plt+0x14490>
  42ad4f:	mov    0x38(%rsp),%rdx
  42ad54:	xor    %r8d,%r8d
  42ad57:	mov    $0x1,%ecx
  42ad5c:	mov    $0x1,%esi
  42ad61:	mov    %rax,%rdi
  42ad64:	callq  4165f0 <X509_LOOKUP_ctrl@plt>
  42ad69:	test   %eax,%eax
  42ad6b:	je     42afab <X509_get0_pubkey_bitstr@plt+0x145db>
  42ad71:	callq  415b90 <X509_LOOKUP_hash_dir@plt>
  42ad76:	mov    %r13,%rdi
  42ad79:	mov    %rax,%rsi
  42ad7c:	callq  412c00 <X509_STORE_add_lookup@plt>
  42ad81:	test   %rax,%rax
  42ad84:	mov    %rax,%rbx
  42ad87:	je     42ae60 <X509_get0_pubkey_bitstr@plt+0x14490>
  42ad8d:	mov    0x28(%rsp),%rdx
  42ad92:	xor    %r8d,%r8d
  42ad95:	mov    $0x1,%ecx
  42ad9a:	mov    $0x2,%esi
  42ad9f:	mov    %rax,%rdi
  42ada2:	callq  4165f0 <X509_LOOKUP_ctrl@plt>
  42ada7:	test   %eax,%eax
  42ada9:	je     42afc7 <X509_get0_pubkey_bitstr@plt+0x145f7>
  42adaf:	lea    0x90(%rsp),%rbx
  42adb7:	callq  412890 <ERR_clear_error@plt>
  42adbc:	xor    %ecx,%ecx
  42adbe:	xor    %edx,%edx
  42adc0:	mov    %r13,%rsi
  42adc3:	mov    %rbx,%rdi
  42adc6:	callq  413380 <X509_STORE_CTX_init@plt>
  42adcb:	test   %eax,%eax
  42adcd:	jne    42af19 <X509_get0_pubkey_bitstr@plt+0x14549>
  42add3:	mov    0x0(%rbp),%rdi
  42add7:	lea    0x37fda(%rip),%rsi        # 462db8 <_fini+0x58b4>
  42adde:	xor    %r14d,%r14d
  42ade1:	mov    $0x1,%ebx
  42ade6:	callq  413c40 <BIO_printf@plt>
  42adeb:	jmpq   42aa00 <X509_get0_pubkey_bitstr@plt+0x14030>
  42adf0:	lea    0x37f21(%rip),%rdi        # 462d18 <_fini+0x5814>
  42adf7:	mov    $0x8,%ecx
  42adfc:	mov    %rdx,%rsi
  42adff:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42ae01:	jne    42ae8d <X509_get0_pubkey_bitstr@plt+0x144bd>
  42ae07:	addl   $0x1,0x30(%rsp)
  42ae0c:	mov    %r8,%r13
  42ae0f:	mov    0x30(%rsp),%eax
  42ae13:	mov    %eax,0x4c(%rsp)
  42ae17:	jmpq   42a7e2 <X509_get0_pubkey_bitstr@plt+0x13e12>
  42ae1c:	mov    0x24b0ed(%rip),%rax        # 675f10 <_fini+0x218a0c>
  42ae23:	xor    %edx,%edx
  42ae25:	mov    $0x6a,%esi
  42ae2a:	mov    %rbx,%rdi
  42ae2d:	mov    (%rax),%rcx
  42ae30:	callq  412af0 <BIO_ctrl@plt>
  42ae35:	jmpq   42a889 <X509_get0_pubkey_bitstr@plt+0x13eb9>
  42ae3a:	mov    0x8(%rsp),%rsi
  42ae3f:	mov    %r14,%rdi
  42ae42:	callq  413ba0 <X509_CRL_print@plt>
  42ae47:	jmpq   42a9cb <X509_get0_pubkey_bitstr@plt+0x13ffb>
  42ae4c:	xor    %esi,%esi
  42ae4e:	mov    %rbx,%rdi
  42ae51:	callq  415b40 <d2i_X509_CRL_bio@plt>
  42ae56:	mov    %rax,0x8(%rsp)
  42ae5b:	jmpq   42a8b0 <X509_get0_pubkey_bitstr@plt+0x13ee0>
  42ae60:	xor    %r14d,%r14d
  42ae63:	mov    $0x1,%ebx
  42ae68:	jmpq   42aa00 <X509_get0_pubkey_bitstr@plt+0x14030>
  42ae6d:	mov    0x0(%rbp),%rdi
  42ae71:	lea    0x37d56(%rip),%rsi        # 462bce <_fini+0x56ca>
  42ae78:	xor    %eax,%eax
  42ae7a:	callq  413c40 <BIO_printf@plt>
  42ae7f:	mov    0x0(%rbp),%rdi
  42ae83:	callq  413f40 <ERR_print_errors@plt>
  42ae88:	jmpq   42aa57 <X509_get0_pubkey_bitstr@plt+0x14087>
  42ae8d:	lea    0x37e8c(%rip),%rdi        # 462d20 <_fini+0x581c>
  42ae94:	mov    $0xc,%ecx
  42ae99:	mov    %rdx,%rsi
  42ae9c:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42ae9e:	jne    42b008 <X509_get0_pubkey_bitstr@plt+0x14638>
  42aea4:	addl   $0x1,0x30(%rsp)
  42aea9:	mov    %r8,%r13
  42aeac:	mov    0x30(%rsp),%eax
  42aeb0:	mov    %eax,0x50(%rsp)
  42aeb4:	jmpq   42a7e2 <X509_get0_pubkey_bitstr@plt+0x13e12>
  42aeb9:	mov    0x24aff8(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  42aec0:	xor    %edx,%edx
  42aec2:	mov    $0x6a,%esi
  42aec7:	mov    %r14,%rdi
  42aeca:	mov    (%rax),%rcx
  42aecd:	callq  412af0 <BIO_ctrl@plt>
  42aed2:	jmpq   42a9bf <X509_get0_pubkey_bitstr@plt+0x13fef>
  42aed7:	mov    0x10(%rsp),%rdi
  42aedc:	mov    $0x1,%ebx
  42aee1:	callq  4142c0 <perror@plt>
  42aee6:	jmpq   42aa00 <X509_get0_pubkey_bitstr@plt+0x14030>
  42aeeb:	mov    0x8(%rsp),%rsi
  42aef0:	mov    %r14,%rdi
  42aef3:	callq  4142d0 <PEM_write_bio_X509_CRL@plt>
  42aef8:	xor    %ebx,%ebx
  42aefa:	test   %eax,%eax
  42aefc:	jne    42aa00 <X509_get0_pubkey_bitstr@plt+0x14030>
  42af02:	mov    0x0(%rbp),%rdi
  42af06:	lea    0x37e83(%rip),%rsi        # 462d90 <_fini+0x588c>
  42af0d:	mov    $0x1,%bl
  42af0f:	callq  413c40 <BIO_printf@plt>
  42af14:	jmpq   42aa00 <X509_get0_pubkey_bitstr@plt+0x14030>
  42af19:	lea    0x80(%rsp),%rax
  42af21:	mov    $0x1,%esi
  42af26:	mov    %rbx,%rdi
  42af29:	mov    %rax,%rcx
  42af2c:	mov    %rax,%r14
  42af2f:	mov    0x8(%rsp),%rax
  42af34:	mov    (%rax),%rax
  42af37:	mov    0x10(%rax),%rdx
  42af3b:	callq  415f70 <X509_STORE_get_by_subject@plt>
  42af40:	test   %eax,%eax
  42af42:	jle    42b06c <X509_get0_pubkey_bitstr@plt+0x1469c>
  42af48:	mov    0x88(%rsp),%rdi
  42af50:	callq  4161b0 <X509_get_pubkey@plt>
  42af55:	mov    %r14,%rdi
  42af58:	mov    %rax,%rbx
  42af5b:	callq  412bb0 <X509_OBJECT_free_contents@plt>
  42af60:	test   %rbx,%rbx
  42af63:	je     42b0ca <X509_get0_pubkey_bitstr@plt+0x146fa>
  42af69:	mov    0x8(%rsp),%rdi
  42af6e:	mov    %rbx,%rsi
  42af71:	callq  415270 <X509_CRL_verify@plt>
  42af76:	mov    %rbx,%rdi
  42af79:	mov    %eax,0x18(%rsp)
  42af7d:	callq  412b00 <EVP_PKEY_free@plt>
  42af82:	mov    0x18(%rsp),%eax
  42af86:	test   %eax,%eax
  42af88:	js     42ae60 <X509_get0_pubkey_bitstr@plt+0x14490>
  42af8e:	jne    42b08b <X509_get0_pubkey_bitstr@plt+0x146bb>
  42af94:	mov    0x0(%rbp),%rdi
  42af98:	lea    0x3ee4a(%rip),%rsi        # 469de9 <_fini+0xc8e5>
  42af9f:	xor    %eax,%eax
  42afa1:	callq  413c40 <BIO_printf@plt>
  42afa6:	jmpq   42a8d3 <X509_get0_pubkey_bitstr@plt+0x13f03>
  42afab:	xor    %r8d,%r8d
  42afae:	mov    $0x3,%ecx
  42afb3:	xor    %edx,%edx
  42afb5:	mov    $0x1,%esi
  42afba:	mov    %rbx,%rdi
  42afbd:	callq  4165f0 <X509_LOOKUP_ctrl@plt>
  42afc2:	jmpq   42ad71 <X509_get0_pubkey_bitstr@plt+0x143a1>
  42afc7:	xor    %r8d,%r8d
  42afca:	mov    $0x3,%ecx
  42afcf:	xor    %edx,%edx
  42afd1:	mov    $0x2,%esi
  42afd6:	mov    %rbx,%rdi
  42afd9:	callq  4165f0 <X509_LOOKUP_ctrl@plt>
  42afde:	jmpq   42adaf <X509_get0_pubkey_bitstr@plt+0x143df>
  42afe3:	mov    0x8(%rsp),%rsi
  42afe8:	mov    %r14,%rdi
  42afeb:	callq  416480 <i2d_X509_CRL_bio@plt>
  42aff0:	jmpq   42aef8 <X509_get0_pubkey_bitstr@plt+0x14528>
  42aff5:	mov    0x0(%rbp),%rdi
  42aff9:	mov    $0x1,%ebx
  42affe:	callq  413f40 <ERR_print_errors@plt>
  42b003:	jmpq   42aa00 <X509_get0_pubkey_bitstr@plt+0x14030>
  42b008:	lea    0x37d1d(%rip),%rdi        # 462d2c <_fini+0x5828>
  42b00f:	mov    $0xc,%ecx
  42b014:	mov    %rdx,%rsi
  42b017:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42b019:	jne    42b03f <X509_get0_pubkey_bitstr@plt+0x1466f>
  42b01b:	addl   $0x1,0x30(%rsp)
  42b020:	mov    %r8,%r13
  42b023:	mov    0x30(%rsp),%eax
  42b027:	mov    %eax,0x54(%rsp)
  42b02b:	jmpq   42a7e2 <X509_get0_pubkey_bitstr@plt+0x13e12>
  42b030:	mov    0x8(%rsp),%rdi
  42b035:	callq  4142c0 <perror@plt>
  42b03a:	jmpq   42aa57 <X509_get0_pubkey_bitstr@plt+0x14087>
  42b03f:	lea    0x32ca1(%rip),%rdi        # 45dce7 <_fini+0x7e3>
  42b046:	mov    $0x7,%ecx
  42b04b:	mov    %rdx,%rsi
  42b04e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42b050:	jne    42b0a2 <X509_get0_pubkey_bitstr@plt+0x146d2>
  42b052:	addl   $0x1,0x30(%rsp)
  42b057:	mov    %r8,%r13
  42b05a:	mov    0x30(%rsp),%eax
  42b05e:	mov    %eax,0x44(%rsp)
  42b062:	jmpq   42a7e2 <X509_get0_pubkey_bitstr@plt+0x13e12>
  42b067:	callq  414c30 <__stack_chk_fail@plt>
  42b06c:	mov    0x0(%rbp),%rdi
  42b070:	lea    0x37d61(%rip),%rsi        # 462dd8 <_fini+0x58d4>
  42b077:	xor    %eax,%eax
  42b079:	xor    %r14d,%r14d
  42b07c:	mov    $0x1,%ebx
  42b081:	callq  413c40 <BIO_printf@plt>
  42b086:	jmpq   42aa00 <X509_get0_pubkey_bitstr@plt+0x14030>
  42b08b:	mov    0x0(%rbp),%rdi
  42b08f:	lea    0x448d2(%rip),%rsi        # 46f968 <_fini+0x12464>
  42b096:	xor    %eax,%eax
  42b098:	callq  413c40 <BIO_printf@plt>
  42b09d:	jmpq   42a8d3 <X509_get0_pubkey_bitstr@plt+0x13f03>
  42b0a2:	lea    0x34846(%rip),%rdi        # 45f8ef <_fini+0x23eb>
  42b0a9:	mov    $0xd,%ecx
  42b0ae:	mov    %rdx,%rsi
  42b0b1:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42b0b3:	jne    42b0e6 <X509_get0_pubkey_bitstr@plt+0x14716>
  42b0b5:	addl   $0x1,0x30(%rsp)
  42b0ba:	mov    %r8,%r13
  42b0bd:	mov    0x30(%rsp),%eax
  42b0c1:	mov    %eax,0x58(%rsp)
  42b0c5:	jmpq   42a7e2 <X509_get0_pubkey_bitstr@plt+0x13e12>
  42b0ca:	mov    0x0(%rbp),%rdi
  42b0ce:	lea    0x37d2b(%rip),%rsi        # 462e00 <_fini+0x58fc>
  42b0d5:	xor    %eax,%eax
  42b0d7:	xor    %r14d,%r14d
  42b0da:	mov    $0x1,%bl
  42b0dc:	callq  413c40 <BIO_printf@plt>
  42b0e1:	jmpq   42aa00 <X509_get0_pubkey_bitstr@plt+0x14030>
  42b0e6:	lea    0x37c4b(%rip),%rdi        # 462d38 <_fini+0x5834>
  42b0ed:	mov    $0xb,%ecx
  42b0f2:	mov    %rdx,%rsi
  42b0f5:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42b0f7:	jne    42b260 <X509_get0_pubkey_bitstr@plt+0x14890>
  42b0fd:	addl   $0x1,0x30(%rsp)
  42b102:	mov    %r8,%r13
  42b105:	mov    0x30(%rsp),%eax
  42b109:	mov    %eax,0x5c(%rsp)
  42b10d:	jmpq   42a7e2 <X509_get0_pubkey_bitstr@plt+0x13e12>
  42b112:	mov    0x68(%rsp),%rcx
  42b117:	mov    0x38(%rsp),%rdx
  42b11c:	mov    0x20(%rsp),%rsi
  42b121:	mov    0x8(%rsp),%rdi
  42b126:	mov    %r10d,0x48(%rsp)
  42b12b:	mov    %r9d,0x30(%rsp)
  42b130:	mov    %r8d,0x28(%rsp)
  42b135:	callq  4152a0 <X509_CRL_digest@plt>
  42b13a:	test   %eax,%eax
  42b13c:	mov    0x28(%rsp),%r8d
  42b141:	mov    0x30(%rsp),%r9d
  42b146:	mov    0x48(%rsp),%r10d
  42b14b:	je     42b289 <X509_get0_pubkey_bitstr@plt+0x148b9>
  42b151:	mov    0x20(%rsp),%rdi
  42b156:	mov    %r10d,0x48(%rsp)
  42b15b:	mov    %r9d,0x30(%rsp)
  42b160:	mov    %r8d,0x28(%rsp)
  42b165:	callq  415290 <EVP_MD_type@plt>
  42b16a:	mov    %eax,%edi
  42b16c:	callq  415b30 <OBJ_nid2sn@plt>
  42b171:	mov    0x2501c8(%rip),%rdi        # 67b340 <_edata+0x638>
  42b178:	lea    0x37bfa(%rip),%rsi        # 462d79 <_fini+0x5875>
  42b17f:	mov    %rax,%rdx
  42b182:	xor    %eax,%eax
  42b184:	callq  413c40 <BIO_printf@plt>
  42b189:	mov    0x74(%rsp),%eax
  42b18d:	mov    0x28(%rsp),%r8d
  42b192:	mov    0x30(%rsp),%r9d
  42b197:	mov    0x48(%rsp),%r10d
  42b19c:	test   %eax,%eax
  42b19e:	jle    42a968 <X509_get0_pubkey_bitstr@plt+0x13f98>
  42b1a4:	xor    %r11d,%r11d
  42b1a7:	lea    0x1(%r11),%r8d
  42b1ab:	mov    $0x3a,%ecx
  42b1b0:	mov    0x250189(%rip),%rdi        # 67b340 <_edata+0x638>
  42b1b7:	lea    0x37bcb(%rip),%rsi        # 462d89 <_fini+0x5885>
  42b1be:	mov    %r10d,0x50(%rsp)
  42b1c3:	mov    %r9d,0x4c(%rsp)
  42b1c8:	cmp    %eax,%r8d
  42b1cb:	mov    $0xa,%eax
  42b1d0:	mov    %r8d,0x48(%rsp)
  42b1d5:	cmove  %eax,%ecx
  42b1d8:	mov    0x38(%rsp),%rax
  42b1dd:	mov    %r11,0x30(%rsp)
  42b1e2:	movzbl (%rax,%r11,1),%edx
  42b1e7:	xor    %eax,%eax
  42b1e9:	callq  413c40 <BIO_printf@plt>
  42b1ee:	mov    0x74(%rsp),%eax
  42b1f2:	mov    0x30(%rsp),%r11
  42b1f7:	mov    0x48(%rsp),%r8d
  42b1fc:	mov    0x4c(%rsp),%r9d
  42b201:	mov    0x50(%rsp),%r10d
  42b206:	add    $0x1,%r11
  42b20a:	cmp    %eax,%r8d
  42b20d:	jl     42b1a7 <X509_get0_pubkey_bitstr@plt+0x147d7>
  42b20f:	mov    0x28(%rsp),%r8d
  42b214:	jmpq   42a968 <X509_get0_pubkey_bitstr@plt+0x13f98>
  42b219:	mov    0x8(%rsp),%rax
  42b21e:	mov    0x78(%rsp),%rcx
  42b223:	lea    0x3f9c7(%rip),%rsi        # 46abf1 <_fini+0xd6ed>
  42b22a:	mov    0x25010f(%rip),%rdi        # 67b340 <_edata+0x638>
  42b231:	mov    %r10d,0x48(%rsp)
  42b236:	mov    %r9d,0x30(%rsp)
  42b23b:	mov    %r8d,0x28(%rsp)
  42b240:	mov    (%rax),%rax
  42b243:	mov    0x10(%rax),%rdx
  42b247:	callq  4467d0 <X509_get0_pubkey_bitstr@plt+0x2fe00>
  42b24c:	mov    0x48(%rsp),%r10d
  42b251:	mov    0x30(%rsp),%r9d
  42b256:	mov    0x28(%rsp),%r8d
  42b25b:	jmpq   42a939 <X509_get0_pubkey_bitstr@plt+0x13f69>
  42b260:	lea    0x1(%rdx),%rdi
  42b264:	mov    %r8,0x20(%rsp)
  42b269:	callq  416720 <EVP_get_digestbyname@plt>
  42b26e:	test   %rax,%rax
  42b271:	mov    0x20(%rsp),%r8
  42b276:	je     42ab57 <X509_get0_pubkey_bitstr@plt+0x14187>
  42b27c:	mov    %rax,0x20(%rsp)
  42b281:	mov    %r8,%r13
  42b284:	jmpq   42a7e2 <X509_get0_pubkey_bitstr@plt+0x13e12>
  42b289:	mov    0x0(%rbp),%rdi
  42b28d:	lea    0x3461f(%rip),%rsi        # 45f8b3 <_fini+0x23af>
  42b294:	mov    0x18(%rsp),%r13
  42b299:	xor    %r14d,%r14d
  42b29c:	mov    $0x1,%ebx
  42b2a1:	callq  413c40 <BIO_printf@plt>
  42b2a6:	jmpq   42aa00 <X509_get0_pubkey_bitstr@plt+0x14030>
  42b2ab:	mov    0x25008e(%rip),%rdi        # 67b340 <_edata+0x638>
  42b2b2:	lea    0x37aaf(%rip),%rsi        # 462d68 <_fini+0x5864>
  42b2b9:	xor    %eax,%eax
  42b2bb:	mov    %r10d,0x48(%rsp)
  42b2c0:	mov    %r9d,0x30(%rsp)
  42b2c5:	mov    %r8d,0x28(%rsp)
  42b2ca:	callq  413c40 <BIO_printf@plt>
  42b2cf:	mov    0x8(%rsp),%rax
  42b2d4:	mov    0x28(%rsp),%r8d
  42b2d9:	mov    0x30(%rsp),%r9d
  42b2de:	mov    0x48(%rsp),%r10d
  42b2e3:	mov    (%rax),%rax
  42b2e6:	mov    0x20(%rax),%rsi
  42b2ea:	test   %rsi,%rsi
  42b2ed:	je     42b3ab <X509_get0_pubkey_bitstr@plt+0x149db>
  42b2f3:	mov    0x250046(%rip),%rdi        # 67b340 <_edata+0x638>
  42b2fa:	callq  415f50 <ASN1_TIME_print@plt>
  42b2ff:	mov    0x28(%rsp),%r8d
  42b304:	mov    0x30(%rsp),%r9d
  42b309:	mov    0x48(%rsp),%r10d
  42b30e:	mov    0x25002b(%rip),%rdi        # 67b340 <_edata+0x638>
  42b315:	lea    0x39883(%rip),%rsi        # 464b9f <_fini+0x769b>
  42b31c:	xor    %eax,%eax
  42b31e:	mov    %r10d,0x48(%rsp)
  42b323:	mov    %r9d,0x30(%rsp)
  42b328:	mov    %r8d,0x28(%rsp)
  42b32d:	callq  413c40 <BIO_printf@plt>
  42b332:	mov    0x48(%rsp),%r10d
  42b337:	mov    0x30(%rsp),%r9d
  42b33c:	mov    0x28(%rsp),%r8d
  42b341:	jmpq   42a95f <X509_get0_pubkey_bitstr@plt+0x13f8f>
  42b346:	mov    0x24fff3(%rip),%rdi        # 67b340 <_edata+0x638>
  42b34d:	lea    0x37a08(%rip),%rsi        # 462d5c <_fini+0x5858>
  42b354:	xor    %eax,%eax
  42b356:	mov    %r10d,0x48(%rsp)
  42b35b:	mov    %r9d,0x30(%rsp)
  42b360:	mov    %r8d,0x28(%rsp)
  42b365:	callq  413c40 <BIO_printf@plt>
  42b36a:	mov    0x8(%rsp),%rax
  42b36f:	mov    0x24ffca(%rip),%rdi        # 67b340 <_edata+0x638>
  42b376:	mov    (%rax),%rax
  42b379:	mov    0x18(%rax),%rsi
  42b37d:	callq  415f50 <ASN1_TIME_print@plt>
  42b382:	mov    0x24ffb7(%rip),%rdi        # 67b340 <_edata+0x638>
  42b389:	lea    0x3980f(%rip),%rsi        # 464b9f <_fini+0x769b>
  42b390:	xor    %eax,%eax
  42b392:	callq  413c40 <BIO_printf@plt>
  42b397:	mov    0x48(%rsp),%r10d
  42b39c:	mov    0x30(%rsp),%r9d
  42b3a1:	mov    0x28(%rsp),%r8d
  42b3a6:	jmpq   42a956 <X509_get0_pubkey_bitstr@plt+0x13f86>
  42b3ab:	mov    0x24ff8e(%rip),%rdi        # 67b340 <_edata+0x638>
  42b3b2:	lea    0x379bb(%rip),%rsi        # 462d74 <_fini+0x5870>
  42b3b9:	xor    %eax,%eax
  42b3bb:	mov    %r10d,0x48(%rsp)
  42b3c0:	mov    %r9d,0x30(%rsp)
  42b3c5:	mov    %r8d,0x28(%rsp)
  42b3ca:	callq  413c40 <BIO_printf@plt>
  42b3cf:	mov    0x48(%rsp),%r10d
  42b3d4:	mov    0x30(%rsp),%r9d
  42b3d9:	mov    0x28(%rsp),%r8d
  42b3de:	jmpq   42b30e <X509_get0_pubkey_bitstr@plt+0x1493e>
  42b3e3:	mov    0x8(%rsp),%rax
  42b3e8:	mov    %r10d,0x48(%rsp)
  42b3ed:	mov    %r9d,0x30(%rsp)
  42b3f2:	mov    %r8d,0x28(%rsp)
  42b3f7:	mov    (%rax),%rax
  42b3fa:	mov    0x10(%rax),%rdi
  42b3fe:	callq  415cc0 <X509_NAME_hash@plt>
  42b403:	mov    0x24ff36(%rip),%rdi        # 67b340 <_edata+0x638>
  42b40a:	lea    0x37944(%rip),%rsi        # 462d55 <_fini+0x5851>
  42b411:	mov    %rax,%rdx
  42b414:	xor    %eax,%eax
  42b416:	callq  413c40 <BIO_printf@plt>
  42b41b:	mov    0x48(%rsp),%r10d
  42b420:	mov    0x30(%rsp),%r9d
  42b425:	mov    0x28(%rsp),%r8d
  42b42a:	jmpq   42a94b <X509_get0_pubkey_bitstr@plt+0x13f7b>
  42b42f:	mov    0x8(%rsp),%rdi
  42b434:	xor    %ecx,%ecx
  42b436:	xor    %edx,%edx
  42b438:	mov    $0x58,%esi
  42b43d:	mov    %r10d,0x4c(%rsp)
  42b442:	mov    %r9d,0x48(%rsp)
  42b447:	mov    %r8d,0x30(%rsp)
  42b44c:	callq  414320 <X509_CRL_get_ext_d2i@plt>
  42b451:	mov    0x24fee8(%rip),%rdi        # 67b340 <_edata+0x638>
  42b458:	lea    0x378e4(%rip),%rsi        # 462d43 <_fini+0x583f>
  42b45f:	mov    %rax,0x28(%rsp)
  42b464:	xor    %eax,%eax
  42b466:	callq  413c40 <BIO_printf@plt>
  42b46b:	mov    0x28(%rsp),%rax
  42b470:	mov    0x30(%rsp),%r8d
  42b475:	mov    0x48(%rsp),%r9d
  42b47a:	mov    0x4c(%rsp),%r10d
  42b47f:	test   %rax,%rax
  42b482:	je     42b4e4 <X509_get0_pubkey_bitstr@plt+0x14b14>
  42b484:	mov    0x24feb5(%rip),%rdi        # 67b340 <_edata+0x638>
  42b48b:	mov    %rax,%rsi
  42b48e:	callq  414ea0 <i2a_ASN1_INTEGER@plt>
  42b493:	mov    0x28(%rsp),%rdi
  42b498:	callq  412a90 <ASN1_INTEGER_free@plt>
  42b49d:	mov    0x30(%rsp),%r8d
  42b4a2:	mov    0x48(%rsp),%r9d
  42b4a7:	mov    0x4c(%rsp),%r10d
  42b4ac:	mov    0x24fe8d(%rip),%rdi        # 67b340 <_edata+0x638>
  42b4b3:	lea    0x396e5(%rip),%rsi        # 464b9f <_fini+0x769b>
  42b4ba:	xor    %eax,%eax
  42b4bc:	mov    %r10d,0x48(%rsp)
  42b4c1:	mov    %r9d,0x30(%rsp)
  42b4c6:	mov    %r8d,0x28(%rsp)
  42b4cb:	callq  413c40 <BIO_printf@plt>
  42b4d0:	mov    0x48(%rsp),%r10d
  42b4d5:	mov    0x30(%rsp),%r9d
  42b4da:	mov    0x28(%rsp),%r8d
  42b4df:	jmpq   42a942 <X509_get0_pubkey_bitstr@plt+0x13f72>
  42b4e4:	mov    0x24fe55(%rip),%rdi        # 67b340 <_edata+0x638>
  42b4eb:	lea    0x3785c(%rip),%rsi        # 462d4e <_fini+0x584a>
  42b4f2:	mov    %r10d,0x48(%rsp)
  42b4f7:	mov    %r9d,0x30(%rsp)
  42b4fc:	mov    %r8d,0x28(%rsp)
  42b501:	callq  413b70 <BIO_puts@plt>
  42b506:	mov    0x48(%rsp),%r10d
  42b50b:	mov    0x30(%rsp),%r9d
  42b510:	mov    0x28(%rsp),%r8d
  42b515:	jmp    42b4ac <X509_get0_pubkey_bitstr@plt+0x14adc>
  42b517:	nopw   0x0(%rax,%rax,1)
  42b520:	push   %r15
  42b522:	push   %r14
  42b524:	push   %r13
  42b526:	push   %r12
  42b528:	push   %rbp
  42b529:	mov    %edi,%ebp
  42b52b:	mov    $0xd,%edi
  42b530:	push   %rbx
  42b531:	mov    %rsi,%rbx
  42b534:	mov    $0x1,%esi
  42b539:	sub    $0x98,%rsp
  42b540:	mov    %fs:0x28,%rax
  42b549:	mov    %rax,0x88(%rsp)
  42b551:	xor    %eax,%eax
  42b553:	movq   $0x0,0x70(%rsp)
  42b55c:	movq   $0x0,0x78(%rsp)
  42b565:	callq  414ee0 <signal@plt>
  42b56a:	lea    0x24f7cf(%rip),%r12        # 67ad40 <_edata+0x38>
  42b571:	mov    (%r12),%rdi
  42b575:	test   %rdi,%rdi
  42b578:	je     42bc80 <X509_get0_pubkey_bitstr@plt+0x152b0>
  42b57e:	xor    %esi,%esi
  42b580:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  42b585:	test   %eax,%eax
  42b587:	je     42b840 <X509_get0_pubkey_bitstr@plt+0x14e70>
  42b58d:	mov    (%rbx),%rax
  42b590:	lea    -0x1(%rbp),%r14d
  42b594:	lea    0x8(%rbx),%rdx
  42b598:	movl   $0x2,0x58(%rsp)
  42b5a0:	movl   $0x0,0x64(%rsp)
  42b5a8:	mov    $0x3,%r15d
  42b5ae:	test   %r14d,%r14d
  42b5b1:	movq   $0x0,0x38(%rsp)
  42b5ba:	movq   $0x0,0x30(%rsp)
  42b5c3:	mov    %rax,0x28(%rsp)
  42b5c8:	movq   $0x0,0x20(%rsp)
  42b5d1:	movq   $0x0,0x18(%rsp)
  42b5da:	movq   $0x0,0x10(%rsp)
  42b5e3:	movl   $0x0,0x4c(%rsp)
  42b5eb:	movl   $0x0,0x40(%rsp)
  42b5f3:	movl   $0x0,0x60(%rsp)
  42b5fb:	movl   $0x0,0x48(%rsp)
  42b603:	movl   $0x0,0x5c(%rsp)
  42b60b:	movl   $0x3,0xc(%rsp)
  42b613:	jle    42bcf4 <X509_get0_pubkey_bitstr@plt+0x15324>
  42b619:	mov    %r15d,%eax
  42b61c:	movq   $0x0,0x50(%rsp)
  42b625:	mov    %r14d,%r15d
  42b628:	movl   $0x0,0x44(%rsp)
  42b630:	lea    0x326a8(%rip),%rbp        # 45dcdf <_fini+0x7db>
  42b637:	mov    $0x8,%ebx
  42b63c:	mov    %eax,%r14d
  42b63f:	jmp    42b66f <X509_get0_pubkey_bitstr@plt+0x14c9f>
  42b641:	nopl   0x0(%rax)
  42b648:	sub    $0x1,%r15d
  42b64c:	je     42b940 <X509_get0_pubkey_bitstr@plt+0x14f70>
  42b652:	mov    0x8(%rdx),%rdi
  42b656:	lea    0x8(%rdx),%r13
  42b65a:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  42b65f:	mov    %eax,%r14d
  42b662:	sub    $0x1,%r15d
  42b666:	lea    0x8(%r13),%rdx
  42b66a:	test   %r15d,%r15d
  42b66d:	jle    42b6be <X509_get0_pubkey_bitstr@plt+0x14cee>
  42b66f:	mov    (%rdx),%r8
  42b672:	mov    %rbp,%rdi
  42b675:	mov    %rbx,%rcx
  42b678:	mov    %r8,%rsi
  42b67b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42b67d:	je     42b648 <X509_get0_pubkey_bitstr@plt+0x14c78>
  42b67f:	lea    0x32b0a(%rip),%rdi        # 45e190 <_fini+0xc8c>
  42b686:	mov    $0x9,%ecx
  42b68b:	mov    %r8,%rsi
  42b68e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42b690:	jne    42b890 <X509_get0_pubkey_bitstr@plt+0x14ec0>
  42b696:	sub    $0x1,%r15d
  42b69a:	je     42b940 <X509_get0_pubkey_bitstr@plt+0x14f70>
  42b6a0:	mov    0x8(%rdx),%rdi
  42b6a4:	lea    0x8(%rdx),%r13
  42b6a8:	sub    $0x1,%r15d
  42b6ac:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  42b6b1:	test   %r15d,%r15d
  42b6b4:	mov    %eax,0xc(%rsp)
  42b6b8:	lea    0x8(%r13),%rdx
  42b6bc:	jg     42b66f <X509_get0_pubkey_bitstr@plt+0x14c9f>
  42b6be:	mov    %r14d,%r15d
  42b6c1:	callq  416990 <ERR_load_crypto_strings@plt>
  42b6c6:	mov    0x38(%rsp),%rsi
  42b6cb:	mov    (%r12),%rdi
  42b6cf:	xor    %edx,%edx
  42b6d1:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  42b6d6:	mov    0x30(%rsp),%rdx
  42b6db:	mov    0x20(%rsp),%rsi
  42b6e0:	lea    0x70(%rsp),%rcx
  42b6e5:	mov    (%r12),%rdi
  42b6e9:	lea    0x78(%rsp),%r8
  42b6ee:	mov    %rax,%rbp
  42b6f1:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  42b6f6:	test   %eax,%eax
  42b6f8:	je     42bcdf <X509_get0_pubkey_bitstr@plt+0x1530f>
  42b6fe:	movzbl 0x48(%rsp),%eax
  42b703:	mov    0x40(%rsp),%r8d
  42b708:	test   %r8d,%r8d
  42b70b:	mov    %eax,%r13d
  42b70e:	setne  %dl
  42b711:	jne    42b822 <X509_get0_pubkey_bitstr@plt+0x14e52>
  42b717:	mov    %edx,0x20(%rsp)
  42b71b:	callq  4152b0 <BIO_s_file@plt>
  42b720:	mov    %rax,%rdi
  42b723:	callq  414a20 <BIO_new@plt>
  42b728:	mov    0x20(%rsp),%edx
  42b72c:	mov    %rax,%rbx
  42b72f:	test   %dl,%dl
  42b731:	je     42bd0a <X509_get0_pubkey_bitstr@plt+0x1533a>
  42b737:	cmpl   $0x2,0x40(%rsp)
  42b73c:	je     42bf1c <X509_get0_pubkey_bitstr@plt+0x1554c>
  42b742:	mov    0x44(%rsp),%edi
  42b746:	test   %edi,%edi
  42b748:	je     42b757 <X509_get0_pubkey_bitstr@plt+0x14d87>
  42b74a:	cmp    $0x4,%r15d
  42b74e:	mov    $0x8,%eax
  42b753:	cmove  %eax,%r15d
  42b757:	lea    0x37a2e(%rip),%rax        # 46318c <_fini+0x5c88>
  42b75e:	mov    0x70(%rsp),%r8
  42b763:	mov    0x10(%rsp),%rsi
  42b768:	mov    %rbp,%r9
  42b76b:	mov    $0x1,%ecx
  42b770:	mov    %r15d,%edx
  42b773:	mov    %rax,(%rsp)
  42b777:	mov    (%r12),%rdi
  42b77b:	callq  446250 <X509_get0_pubkey_bitstr@plt+0x2f880>
  42b780:	mov    %rax,%r14
  42b783:	test   %r14,%r14
  42b786:	je     42bd5e <X509_get0_pubkey_bitstr@plt+0x1538e>
  42b78c:	mov    %r14,%rdi
  42b78f:	callq  413b30 <EVP_PKEY_get1_RSA@plt>
  42b794:	mov    %r14,%rdi
  42b797:	mov    %rax,%rbp
  42b79a:	callq  412b00 <EVP_PKEY_free@plt>
  42b79f:	test   %rbp,%rbp
  42b7a2:	je     42bd65 <X509_get0_pubkey_bitstr@plt+0x15395>
  42b7a8:	cmpq   $0x0,0x18(%rsp)
  42b7ae:	je     42beee <X509_get0_pubkey_bitstr@plt+0x1551e>
  42b7b4:	mov    0x18(%rsp),%rcx
  42b7b9:	mov    $0x5,%edx
  42b7be:	mov    $0x6c,%esi
  42b7c3:	mov    %rbx,%rdi
  42b7c6:	callq  412af0 <BIO_ctrl@plt>
  42b7cb:	test   %rax,%rax
  42b7ce:	jle    42bf3d <X509_get0_pubkey_bitstr@plt+0x1556d>
  42b7d4:	mov    0x5c(%rsp),%ecx
  42b7d8:	test   %ecx,%ecx
  42b7da:	jne    42be5b <X509_get0_pubkey_bitstr@plt+0x1548b>
  42b7e0:	mov    0x64(%rsp),%edx
  42b7e4:	test   %edx,%edx
  42b7e6:	jne    42be28 <X509_get0_pubkey_bitstr@plt+0x15458>
  42b7ec:	test   %r13b,%r13b
  42b7ef:	jne    42bd8b <X509_get0_pubkey_bitstr@plt+0x153bb>
  42b7f5:	mov    0x60(%rsp),%eax
  42b7f9:	xor    %r14d,%r14d
  42b7fc:	test   %eax,%eax
  42b7fe:	je     42be8e <X509_get0_pubkey_bitstr@plt+0x154be>
  42b804:	test   %rbx,%rbx
  42b807:	je     42b811 <X509_get0_pubkey_bitstr@plt+0x14e41>
  42b809:	mov    %rbx,%rdi
  42b80c:	callq  416570 <BIO_free_all@plt>
  42b811:	test   %rbp,%rbp
  42b814:	je     42b846 <X509_get0_pubkey_bitstr@plt+0x14e76>
  42b816:	mov    %rbp,%rdi
  42b819:	callq  414970 <RSA_free@plt>
  42b81e:	xchg   %ax,%ax
  42b820:	jmp    42b846 <X509_get0_pubkey_bitstr@plt+0x14e76>
  42b822:	test   %al,%al
  42b824:	je     42b717 <X509_get0_pubkey_bitstr@plt+0x14d47>
  42b82a:	mov    (%r12),%rdi
  42b82e:	lea    0x37d9b(%rip),%rsi        # 4635d0 <_fini+0x60cc>
  42b835:	xor    %eax,%eax
  42b837:	callq  413c40 <BIO_printf@plt>
  42b83c:	nopl   0x0(%rax)
  42b840:	mov    $0x1,%r14d
  42b846:	mov    0x70(%rsp),%rdi
  42b84b:	test   %rdi,%rdi
  42b84e:	je     42b855 <X509_get0_pubkey_bitstr@plt+0x14e85>
  42b850:	callq  415020 <CRYPTO_free@plt>
  42b855:	mov    0x78(%rsp),%rdi
  42b85a:	test   %rdi,%rdi
  42b85d:	je     42b864 <X509_get0_pubkey_bitstr@plt+0x14e94>
  42b85f:	callq  415020 <CRYPTO_free@plt>
  42b864:	mov    0x88(%rsp),%rbx
  42b86c:	xor    %fs:0x28,%rbx
  42b875:	mov    %r14d,%eax
  42b878:	jne    42bf52 <X509_get0_pubkey_bitstr@plt+0x15582>
  42b87e:	add    $0x98,%rsp
  42b885:	pop    %rbx
  42b886:	pop    %rbp
  42b887:	pop    %r12
  42b889:	pop    %r13
  42b88b:	pop    %r14
  42b88d:	pop    %r15
  42b88f:	retq   
  42b890:	cmpb   $0x2d,(%r8)
  42b894:	jne    42b8d0 <X509_get0_pubkey_bitstr@plt+0x14f00>
  42b896:	cmpb   $0x69,0x1(%r8)
  42b89b:	jne    42b8d0 <X509_get0_pubkey_bitstr@plt+0x14f00>
  42b89d:	cmpb   $0x6e,0x2(%r8)
  42b8a2:	jne    42b8d0 <X509_get0_pubkey_bitstr@plt+0x14f00>
  42b8a4:	cmpb   $0x0,0x3(%r8)
  42b8a9:	jne    42b8d0 <X509_get0_pubkey_bitstr@plt+0x14f00>
  42b8ab:	sub    $0x1,%r15d
  42b8af:	je     42b940 <X509_get0_pubkey_bitstr@plt+0x14f70>
  42b8b5:	mov    0x8(%rdx),%rax
  42b8b9:	lea    0x8(%rdx),%r13
  42b8bd:	mov    %rax,0x10(%rsp)
  42b8c2:	jmpq   42b662 <X509_get0_pubkey_bitstr@plt+0x14c92>
  42b8c7:	nopw   0x0(%rax,%rax,1)
  42b8d0:	lea    0x3256f(%rip),%rdi        # 45de46 <_fini+0x942>
  42b8d7:	mov    $0x5,%ecx
  42b8dc:	mov    %r8,%rsi
  42b8df:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42b8e1:	jne    42b900 <X509_get0_pubkey_bitstr@plt+0x14f30>
  42b8e3:	sub    $0x1,%r15d
  42b8e7:	je     42b940 <X509_get0_pubkey_bitstr@plt+0x14f70>
  42b8e9:	mov    0x8(%rdx),%rax
  42b8ed:	lea    0x8(%rdx),%r13
  42b8f1:	mov    %rax,0x18(%rsp)
  42b8f6:	jmpq   42b662 <X509_get0_pubkey_bitstr@plt+0x14c92>
  42b8fb:	nopl   0x0(%rax,%rax,1)
  42b900:	lea    0x328e9(%rip),%rdi        # 45e1f0 <_fini+0xcec>
  42b907:	mov    %r8,%rsi
  42b90a:	mov    %rbx,%rcx
  42b90d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42b90f:	jne    42bb00 <X509_get0_pubkey_bitstr@plt+0x15130>
  42b915:	sub    $0x1,%r15d
  42b919:	je     42b940 <X509_get0_pubkey_bitstr@plt+0x14f70>
  42b91b:	mov    0x8(%rdx),%rax
  42b91f:	lea    0x8(%rdx),%r13
  42b923:	mov    %rax,0x20(%rsp)
  42b928:	jmpq   42b662 <X509_get0_pubkey_bitstr@plt+0x14c92>
  42b92d:	mov    (%rdx),%rdx
  42b930:	mov    (%r12),%rdi
  42b934:	lea    0x323f1(%rip),%rsi        # 45dd2c <_fini+0x828>
  42b93b:	callq  413c40 <BIO_printf@plt>
  42b940:	mov    0x28(%rsp),%rdx
  42b945:	mov    (%r12),%rdi
  42b949:	lea    0x32de8(%rip),%rsi        # 45e738 <_fini+0x1234>
  42b950:	xor    %eax,%eax
  42b952:	callq  413c40 <BIO_printf@plt>
  42b957:	mov    (%r12),%rdi
  42b95b:	lea    0x323f3(%rip),%rsi        # 45dd55 <_fini+0x851>
  42b962:	xor    %eax,%eax
  42b964:	callq  413c40 <BIO_printf@plt>
  42b969:	mov    (%r12),%rdi
  42b96d:	lea    0x37874(%rip),%rsi        # 4631e8 <_fini+0x5ce4>
  42b974:	xor    %eax,%eax
  42b976:	callq  413c40 <BIO_printf@plt>
  42b97b:	mov    (%r12),%rdi
  42b97f:	lea    0x3789a(%rip),%rsi        # 463220 <_fini+0x5d1c>
  42b986:	xor    %eax,%eax
  42b988:	callq  413c40 <BIO_printf@plt>
  42b98d:	mov    (%r12),%rdi
  42b991:	lea    0x37743(%rip),%rsi        # 4630db <_fini+0x5bd7>
  42b998:	xor    %eax,%eax
  42b99a:	callq  413c40 <BIO_printf@plt>
  42b99f:	mov    (%r12),%rdi
  42b9a3:	lea    0x378ae(%rip),%rsi        # 463258 <_fini+0x5d54>
  42b9aa:	xor    %eax,%eax
  42b9ac:	callq  413c40 <BIO_printf@plt>
  42b9b1:	mov    (%r12),%rdi
  42b9b5:	lea    0x378cc(%rip),%rsi        # 463288 <_fini+0x5d84>
  42b9bc:	xor    %eax,%eax
  42b9be:	callq  413c40 <BIO_printf@plt>
  42b9c3:	mov    (%r12),%rdi
  42b9c7:	lea    0x3772a(%rip),%rsi        # 4630f8 <_fini+0x5bf4>
  42b9ce:	xor    %eax,%eax
  42b9d0:	callq  413c40 <BIO_printf@plt>
  42b9d5:	mov    (%r12),%rdi
  42b9d9:	lea    0x378d8(%rip),%rsi        # 4632b8 <_fini+0x5db4>
  42b9e0:	xor    %eax,%eax
  42b9e2:	callq  413c40 <BIO_printf@plt>
  42b9e7:	mov    (%r12),%rdi
  42b9eb:	lea    0x378fe(%rip),%rsi        # 4632f0 <_fini+0x5dec>
  42b9f2:	xor    %eax,%eax
  42b9f4:	callq  413c40 <BIO_printf@plt>
  42b9f9:	mov    (%r12),%rdi
  42b9fd:	lea    0x37924(%rip),%rsi        # 463328 <_fini+0x5e24>
  42ba04:	xor    %eax,%eax
  42ba06:	callq  413c40 <BIO_printf@plt>
  42ba0b:	mov    (%r12),%rdi
  42ba0f:	lea    0x3795a(%rip),%rsi        # 463370 <_fini+0x5e6c>
  42ba16:	xor    %eax,%eax
  42ba18:	callq  413c40 <BIO_printf@plt>
  42ba1d:	mov    (%r12),%rdi
  42ba21:	lea    0x37980(%rip),%rsi        # 4633a8 <_fini+0x5ea4>
  42ba28:	xor    %eax,%eax
  42ba2a:	callq  413c40 <BIO_printf@plt>
  42ba2f:	mov    (%r12),%rdi
  42ba33:	lea    0x376dc(%rip),%rsi        # 463116 <_fini+0x5c12>
  42ba3a:	xor    %eax,%eax
  42ba3c:	callq  413c40 <BIO_printf@plt>
  42ba41:	mov    (%r12),%rdi
  42ba45:	lea    0x37994(%rip),%rsi        # 4633e0 <_fini+0x5edc>
  42ba4c:	xor    %eax,%eax
  42ba4e:	callq  413c40 <BIO_printf@plt>
  42ba53:	mov    (%r12),%rdi
  42ba57:	lea    0x379ba(%rip),%rsi        # 463418 <_fini+0x5f14>
  42ba5e:	xor    %eax,%eax
  42ba60:	callq  413c40 <BIO_printf@plt>
  42ba65:	mov    (%r12),%rdi
  42ba69:	lea    0x379d8(%rip),%rsi        # 463448 <_fini+0x5f44>
  42ba70:	xor    %eax,%eax
  42ba72:	callq  413c40 <BIO_printf@plt>
  42ba77:	mov    (%r12),%rdi
  42ba7b:	lea    0x379fe(%rip),%rsi        # 463480 <_fini+0x5f7c>
  42ba82:	xor    %eax,%eax
  42ba84:	callq  413c40 <BIO_printf@plt>
  42ba89:	mov    (%r12),%rdi
  42ba8d:	lea    0x37a14(%rip),%rsi        # 4634a8 <_fini+0x5fa4>
  42ba94:	xor    %eax,%eax
  42ba96:	callq  413c40 <BIO_printf@plt>
  42ba9b:	mov    (%r12),%rdi
  42ba9f:	lea    0x37a2a(%rip),%rsi        # 4634d0 <_fini+0x5fcc>
  42baa6:	xor    %eax,%eax
  42baa8:	callq  413c40 <BIO_printf@plt>
  42baad:	mov    (%r12),%rdi
  42bab1:	lea    0x37a48(%rip),%rsi        # 463500 <_fini+0x5ffc>
  42bab8:	xor    %eax,%eax
  42baba:	callq  413c40 <BIO_printf@plt>
  42babf:	mov    (%r12),%rdi
  42bac3:	lea    0x37a66(%rip),%rsi        # 463530 <_fini+0x602c>
  42baca:	xor    %eax,%eax
  42bacc:	callq  413c40 <BIO_printf@plt>
  42bad1:	mov    (%r12),%rdi
  42bad5:	lea    0x37a8c(%rip),%rsi        # 463568 <_fini+0x6064>
  42badc:	xor    %eax,%eax
  42bade:	callq  413c40 <BIO_printf@plt>
  42bae3:	mov    (%r12),%rdi
  42bae7:	lea    0x37aa2(%rip),%rsi        # 463590 <_fini+0x608c>
  42baee:	xor    %eax,%eax
  42baf0:	callq  413c40 <BIO_printf@plt>
  42baf5:	jmpq   42b840 <X509_get0_pubkey_bitstr@plt+0x14e70>
  42bafa:	nopw   0x0(%rax,%rax,1)
  42bb00:	lea    0x326f1(%rip),%rdi        # 45e1f8 <_fini+0xcf4>
  42bb07:	mov    $0x9,%ecx
  42bb0c:	mov    %r8,%rsi
  42bb0f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42bb11:	je     42bb40 <X509_get0_pubkey_bitstr@plt+0x15170>
  42bb13:	lea    0x32048(%rip),%rdi        # 45db62 <_fini+0x65e>
  42bb1a:	mov    %r8,%rsi
  42bb1d:	mov    %rbx,%rcx
  42bb20:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42bb22:	jne    42bb5c <X509_get0_pubkey_bitstr@plt+0x1518c>
  42bb24:	sub    $0x1,%r15d
  42bb28:	je     42b940 <X509_get0_pubkey_bitstr@plt+0x14f70>
  42bb2e:	mov    0x8(%rdx),%rax
  42bb32:	lea    0x8(%rdx),%r13
  42bb36:	mov    %rax,0x38(%rsp)
  42bb3b:	jmpq   42b662 <X509_get0_pubkey_bitstr@plt+0x14c92>
  42bb40:	sub    $0x1,%r15d
  42bb44:	je     42b940 <X509_get0_pubkey_bitstr@plt+0x14f70>
  42bb4a:	mov    0x8(%rdx),%rax
  42bb4e:	lea    0x8(%rdx),%r13
  42bb52:	mov    %rax,0x30(%rsp)
  42bb57:	jmpq   42b662 <X509_get0_pubkey_bitstr@plt+0x14c92>
  42bb5c:	lea    0x375cf(%rip),%rdi        # 463132 <_fini+0x5c2e>
  42bb63:	mov    %r8,%rsi
  42bb66:	mov    %rbx,%rcx
  42bb69:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42bb6b:	je     42bcbf <X509_get0_pubkey_bitstr@plt+0x152ef>
  42bb71:	lea    0x375c2(%rip),%rdi        # 46313a <_fini+0x5c36>
  42bb78:	mov    $0x7,%ecx
  42bb7d:	mov    %r8,%rsi
  42bb80:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42bb82:	je     42bccf <X509_get0_pubkey_bitstr@plt+0x152ff>
  42bb88:	lea    0x375b2(%rip),%rdi        # 463141 <_fini+0x5c3d>
  42bb8f:	mov    %r8,%rsi
  42bb92:	mov    %rbx,%rcx
  42bb95:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42bb97:	je     42bd4e <X509_get0_pubkey_bitstr@plt+0x1537e>
  42bb9d:	lea    0x375a5(%rip),%rdi        # 463149 <_fini+0x5c45>
  42bba4:	mov    $0x11,%ecx
  42bba9:	mov    %r8,%rsi
  42bbac:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42bbae:	je     42bd7b <X509_get0_pubkey_bitstr@plt+0x153ab>
  42bbb4:	lea    0x3759f(%rip),%rdi        # 46315a <_fini+0x5c56>
  42bbbb:	mov    $0x12,%ecx
  42bbc0:	mov    %r8,%rsi
  42bbc3:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42bbc5:	je     42bf0c <X509_get0_pubkey_bitstr@plt+0x1553c>
  42bbcb:	lea    0x3759a(%rip),%rdi        # 46316c <_fini+0x5c68>
  42bbd2:	mov    $0xc,%ecx
  42bbd7:	mov    %r8,%rsi
  42bbda:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42bbdc:	je     42bf82 <X509_get0_pubkey_bitstr@plt+0x155b2>
  42bbe2:	lea    0x3758f(%rip),%rdi        # 463178 <_fini+0x5c74>
  42bbe9:	mov    $0xa,%ecx
  42bbee:	mov    %r8,%rsi
  42bbf1:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42bbf3:	je     42bf72 <X509_get0_pubkey_bitstr@plt+0x155a2>
  42bbf9:	lea    0x37582(%rip),%rdi        # 463182 <_fini+0x5c7e>
  42bc00:	mov    $0xa,%ecx
  42bc05:	mov    %r8,%rsi
  42bc08:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42bc0a:	je     42bf62 <X509_get0_pubkey_bitstr@plt+0x15592>
  42bc10:	lea    0x320d0(%rip),%rdi        # 45dce7 <_fini+0x7e3>
  42bc17:	mov    $0x7,%ecx
  42bc1c:	mov    %r8,%rsi
  42bc1f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42bc21:	je     42c12d <X509_get0_pubkey_bitstr@plt+0x1575d>
  42bc27:	lea    0x32639(%rip),%rdi        # 45e267 <_fini+0xd63>
  42bc2e:	mov    $0x6,%ecx
  42bc33:	mov    %r8,%rsi
  42bc36:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42bc38:	je     42c11d <X509_get0_pubkey_bitstr@plt+0x1574d>
  42bc3e:	lea    0x325ea(%rip),%rdi        # 45e22f <_fini+0xd2b>
  42bc45:	mov    $0x9,%ecx
  42bc4a:	mov    %r8,%rsi
  42bc4d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42bc4f:	je     42c166 <X509_get0_pubkey_bitstr@plt+0x15796>
  42bc55:	lea    0x33d88(%rip),%rdi        # 45f9e4 <_fini+0x24e0>
  42bc5c:	mov    $0x7,%ecx
  42bc61:	mov    %r8,%rsi
  42bc64:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42bc66:	jne    42c13d <X509_get0_pubkey_bitstr@plt+0x1576d>
  42bc6c:	mov    %rdx,%r13
  42bc6f:	movl   $0x1,0x48(%rsp)
  42bc77:	jmpq   42b662 <X509_get0_pubkey_bitstr@plt+0x14c92>
  42bc7c:	nopl   0x0(%rax)
  42bc80:	callq  4152b0 <BIO_s_file@plt>
  42bc85:	mov    %rax,%rdi
  42bc88:	callq  414a20 <BIO_new@plt>
  42bc8d:	test   %rax,%rax
  42bc90:	mov    %rax,%rdi
  42bc93:	mov    %rax,(%r12)
  42bc97:	je     42b57e <X509_get0_pubkey_bitstr@plt+0x14bae>
  42bc9d:	mov    0x24a2dc(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  42bca4:	mov    $0x6a,%esi
  42bca9:	mov    (%rdx),%rcx
  42bcac:	mov    $0x10,%edx
  42bcb1:	callq  412af0 <BIO_ctrl@plt>
  42bcb6:	mov    (%r12),%rdi
  42bcba:	jmpq   42b57e <X509_get0_pubkey_bitstr@plt+0x14bae>
  42bcbf:	mov    %rdx,%r13
  42bcc2:	movl   $0x1,0x44(%rsp)
  42bcca:	jmpq   42b662 <X509_get0_pubkey_bitstr@plt+0x14c92>
  42bccf:	mov    %rdx,%r13
  42bcd2:	movl   $0x1,0x40(%rsp)
  42bcda:	jmpq   42b662 <X509_get0_pubkey_bitstr@plt+0x14c92>
  42bcdf:	mov    (%r12),%rdi
  42bce3:	lea    0x32676(%rip),%rsi        # 45e360 <_fini+0xe5c>
  42bcea:	callq  413c40 <BIO_printf@plt>
  42bcef:	jmpq   42b840 <X509_get0_pubkey_bitstr@plt+0x14e70>
  42bcf4:	movl   $0x0,0x44(%rsp)
  42bcfc:	movq   $0x0,0x50(%rsp)
  42bd05:	jmpq   42b6c1 <X509_get0_pubkey_bitstr@plt+0x14cf1>
  42bd0a:	mov    0x44(%rsp),%esi
  42bd0e:	mov    0x70(%rsp),%r8
  42bd13:	test   %esi,%esi
  42bd15:	je     42bd22 <X509_get0_pubkey_bitstr@plt+0x15352>
  42bd17:	cmp    $0x4,%r15d
  42bd1b:	mov    $0x8,%edx
  42bd20:	je     42bd25 <X509_get0_pubkey_bitstr@plt+0x15355>
  42bd22:	mov    %r15d,%edx
  42bd25:	lea    0x39fca(%rip),%rax        # 465cf6 <_fini+0x87f2>
  42bd2c:	mov    0x10(%rsp),%rsi
  42bd31:	mov    %rbp,%r9
  42bd34:	mov    $0x1,%ecx
  42bd39:	mov    %rax,(%rsp)
  42bd3d:	mov    (%r12),%rdi
  42bd41:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  42bd46:	mov    %rax,%r14
  42bd49:	jmpq   42b783 <X509_get0_pubkey_bitstr@plt+0x14db3>
  42bd4e:	mov    %rdx,%r13
  42bd51:	movl   $0x1,0x4c(%rsp)
  42bd59:	jmpq   42b662 <X509_get0_pubkey_bitstr@plt+0x14c92>
  42bd5e:	xor    %edi,%edi
  42bd60:	callq  412b00 <EVP_PKEY_free@plt>
  42bd65:	mov    (%r12),%rdi
  42bd69:	xor    %ebp,%ebp
  42bd6b:	mov    $0x1,%r14d
  42bd71:	callq  413f40 <ERR_print_errors@plt>
  42bd76:	jmpq   42b804 <X509_get0_pubkey_bitstr@plt+0x14e34>
  42bd7b:	mov    %rdx,%r13
  42bd7e:	movl   $0x2,0x40(%rsp)
  42bd86:	jmpq   42b662 <X509_get0_pubkey_bitstr@plt+0x14c92>
  42bd8b:	mov    %rbp,%rdi
  42bd8e:	callq  416910 <RSA_check_key@plt>
  42bd93:	cmp    $0x1,%eax
  42bd96:	je     42bf92 <X509_get0_pubkey_bitstr@plt+0x155c2>
  42bd9c:	test   %eax,%eax
  42bd9e:	je     42be13 <X509_get0_pubkey_bitstr@plt+0x15443>
  42bda0:	cmp    $0xffffffff,%eax
  42bda3:	je     42bdb3 <X509_get0_pubkey_bitstr@plt+0x153e3>
  42bda5:	callq  416380 <ERR_peek_error@plt>
  42bdaa:	test   %rax,%rax
  42bdad:	je     42b7f5 <X509_get0_pubkey_bitstr@plt+0x14e25>
  42bdb3:	mov    (%r12),%rdi
  42bdb7:	mov    $0x1,%r14d
  42bdbd:	callq  413f40 <ERR_print_errors@plt>
  42bdc2:	jmpq   42b804 <X509_get0_pubkey_bitstr@plt+0x14e34>
  42bdc7:	mov    %rax,%rdx
  42bdca:	shr    $0x18,%rdx
  42bdce:	cmp    $0x4,%dl
  42bdd1:	jne    42bda5 <X509_get0_pubkey_bitstr@plt+0x153d5>
  42bdd3:	mov    %rax,%rdx
  42bdd6:	shr    $0xc,%rdx
  42bdda:	and    $0xfff,%edx
  42bde0:	cmp    $0x7b,%edx
  42bde3:	jne    42bda5 <X509_get0_pubkey_bitstr@plt+0x153d5>
  42bde5:	mov    %eax,%edx
  42bde7:	and    $0xfff,%edx
  42bded:	cmp    $0x41,%edx
  42bdf0:	je     42bda5 <X509_get0_pubkey_bitstr@plt+0x153d5>
  42bdf2:	mov    %rax,%rdi
  42bdf5:	callq  415dc0 <ERR_reason_error_string@plt>
  42bdfa:	lea    0x373a2(%rip),%rsi        # 4631a3 <_fini+0x5c9f>
  42be01:	mov    %rax,%rdx
  42be04:	mov    %rbx,%rdi
  42be07:	xor    %eax,%eax
  42be09:	callq  413c40 <BIO_printf@plt>
  42be0e:	callq  415130 <ERR_get_error@plt>
  42be13:	callq  416380 <ERR_peek_error@plt>
  42be18:	test   %rax,%rax
  42be1b:	jne    42bdc7 <X509_get0_pubkey_bitstr@plt+0x153f7>
  42be1d:	nopl   (%rax)
  42be20:	jmp    42bda5 <X509_get0_pubkey_bitstr@plt+0x153d5>
  42be22:	nopw   0x0(%rax,%rax,1)
  42be28:	lea    0x3277c(%rip),%rsi        # 45e5ab <_fini+0x10a7>
  42be2f:	mov    %rbx,%rdi
  42be32:	xor    %eax,%eax
  42be34:	callq  413c40 <BIO_printf@plt>
  42be39:	mov    0x20(%rbp),%rsi
  42be3d:	mov    %rbx,%rdi
  42be40:	callq  413c20 <BN_print@plt>
  42be45:	lea    0x38d53(%rip),%rsi        # 464b9f <_fini+0x769b>
  42be4c:	mov    %rbx,%rdi
  42be4f:	xor    %eax,%eax
  42be51:	callq  413c40 <BIO_printf@plt>
  42be56:	jmpq   42b7ec <X509_get0_pubkey_bitstr@plt+0x14e1c>
  42be5b:	xor    %edx,%edx
  42be5d:	mov    %rbp,%rsi
  42be60:	mov    %rbx,%rdi
  42be63:	callq  415860 <RSA_print@plt>
  42be68:	test   %eax,%eax
  42be6a:	jne    42b7e0 <X509_get0_pubkey_bitstr@plt+0x14e10>
  42be70:	mov    0x18(%rsp),%rdi
  42be75:	mov    $0x1,%r14d
  42be7b:	callq  4142c0 <perror@plt>
  42be80:	mov    (%r12),%rdi
  42be84:	callq  413f40 <ERR_print_errors@plt>
  42be89:	jmpq   42b804 <X509_get0_pubkey_bitstr@plt+0x14e34>
  42be8e:	mov    (%r12),%rdi
  42be92:	lea    0x3731d(%rip),%rsi        # 4631b6 <_fini+0x5cb2>
  42be99:	xor    %eax,%eax
  42be9b:	callq  413c40 <BIO_printf@plt>
  42bea0:	cmpl   $0x1,0xc(%rsp)
  42bea5:	je     42c000 <X509_get0_pubkey_bitstr@plt+0x15630>
  42beab:	cmpl   $0x4,0xc(%rsp)
  42beb0:	je     42c072 <X509_get0_pubkey_bitstr@plt+0x156a2>
  42beb6:	cmpl   $0x3,0xc(%rsp)
  42bebb:	je     42bfa8 <X509_get0_pubkey_bitstr@plt+0x155d8>
  42bec1:	mov    0xc(%rsp),%eax
  42bec5:	sub    $0xb,%eax
  42bec8:	cmp    $0x1,%eax
  42becb:	jbe    42c026 <X509_get0_pubkey_bitstr@plt+0x15656>
  42bed1:	mov    (%r12),%rdi
  42bed5:	lea    0x33494(%rip),%rsi        # 45f370 <_fini+0x1e6c>
  42bedc:	xor    %eax,%eax
  42bede:	mov    $0x1,%r14d
  42bee4:	callq  413c40 <BIO_printf@plt>
  42bee9:	jmpq   42b804 <X509_get0_pubkey_bitstr@plt+0x14e34>
  42beee:	mov    0x249fc3(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  42bef5:	xor    %edx,%edx
  42bef7:	mov    $0x6a,%esi
  42befc:	mov    %rbx,%rdi
  42beff:	mov    (%rax),%rcx
  42bf02:	callq  412af0 <BIO_ctrl@plt>
  42bf07:	jmpq   42b7d4 <X509_get0_pubkey_bitstr@plt+0x14e04>
  42bf0c:	mov    %rdx,%r13
  42bf0f:	movl   $0x2,0x4c(%rsp)
  42bf17:	jmpq   42b662 <X509_get0_pubkey_bitstr@plt+0x14c92>
  42bf1c:	cmp    $0x3,%r15d
  42bf20:	je     42bf57 <X509_get0_pubkey_bitstr@plt+0x15587>
  42bf22:	cmp    $0x1,%r15d
  42bf26:	mov    $0xffffffff,%eax
  42bf2b:	mov    $0xa,%r10d
  42bf31:	cmove  %r10d,%eax
  42bf35:	mov    %eax,%r15d
  42bf38:	jmpq   42b757 <X509_get0_pubkey_bitstr@plt+0x14d87>
  42bf3d:	mov    0x18(%rsp),%rdi
  42bf42:	mov    $0x1,%r14d
  42bf48:	callq  4142c0 <perror@plt>
  42bf4d:	jmpq   42b804 <X509_get0_pubkey_bitstr@plt+0x14e34>
  42bf52:	callq  414c30 <__stack_chk_fail@plt>
  42bf57:	mov    $0x9,%r15d
  42bf5d:	jmpq   42b757 <X509_get0_pubkey_bitstr@plt+0x14d87>
  42bf62:	mov    %rdx,%r13
  42bf65:	movl   $0x0,0x58(%rsp)
  42bf6d:	jmpq   42b662 <X509_get0_pubkey_bitstr@plt+0x14c92>
  42bf72:	mov    %rdx,%r13
  42bf75:	movl   $0x1,0x58(%rsp)
  42bf7d:	jmpq   42b662 <X509_get0_pubkey_bitstr@plt+0x14c92>
  42bf82:	mov    %rdx,%r13
  42bf85:	movl   $0x2,0x58(%rsp)
  42bf8d:	jmpq   42b662 <X509_get0_pubkey_bitstr@plt+0x14c92>
  42bf92:	lea    0x371fe(%rip),%rsi        # 463197 <_fini+0x5c93>
  42bf99:	mov    %rbx,%rdi
  42bf9c:	xor    %eax,%eax
  42bf9e:	callq  413c40 <BIO_printf@plt>
  42bfa3:	jmpq   42bda5 <X509_get0_pubkey_bitstr@plt+0x153d5>
  42bfa8:	mov    0x40(%rsp),%edx
  42bfac:	mov    0x4c(%rsp),%eax
  42bfb0:	or     %eax,%edx
  42bfb2:	je     42c180 <X509_get0_pubkey_bitstr@plt+0x157b0>
  42bfb8:	cmp    $0x2,%eax
  42bfbb:	mov    %rbp,%rsi
  42bfbe:	mov    %rbx,%rdi
  42bfc1:	je     42c176 <X509_get0_pubkey_bitstr@plt+0x157a6>
  42bfc7:	callq  4131f0 <PEM_write_bio_RSA_PUBKEY@plt>
  42bfcc:	xor    %r14d,%r14d
  42bfcf:	test   %eax,%eax
  42bfd1:	jg     42b804 <X509_get0_pubkey_bitstr@plt+0x14e34>
  42bfd7:	mov    (%r12),%rdi
  42bfdb:	lea    0x371eb(%rip),%rsi        # 4631cd <_fini+0x5cc9>
  42bfe2:	xor    %eax,%eax
  42bfe4:	mov    $0x1,%r14b
  42bfe7:	callq  413c40 <BIO_printf@plt>
  42bfec:	mov    (%r12),%rdi
  42bff0:	callq  413f40 <ERR_print_errors@plt>
  42bff5:	jmpq   42b804 <X509_get0_pubkey_bitstr@plt+0x14e34>
  42bffa:	nopw   0x0(%rax,%rax,1)
  42c000:	mov    0x40(%rsp),%edx
  42c004:	mov    0x4c(%rsp),%eax
  42c008:	mov    %rbp,%rsi
  42c00b:	mov    %rbx,%rdi
  42c00e:	or     %eax,%edx
  42c010:	je     42c1b5 <X509_get0_pubkey_bitstr@plt+0x157e5>
  42c016:	cmp    $0x2,%eax
  42c019:	je     42c1a6 <X509_get0_pubkey_bitstr@plt+0x157d6>
  42c01f:	callq  415da0 <i2d_RSA_PUBKEY_bio@plt>
  42c024:	jmp    42bfcc <X509_get0_pubkey_bitstr@plt+0x155fc>
  42c026:	callq  414b50 <EVP_PKEY_new@plt>
  42c02b:	mov    %rbp,%rsi
  42c02e:	mov    %rax,%rdi
  42c031:	mov    %rax,%r14
  42c034:	callq  4156f0 <EVP_PKEY_set1_RSA@plt>
  42c039:	cmpl   $0xc,0xc(%rsp)
  42c03e:	je     42c0e5 <X509_get0_pubkey_bitstr@plt+0x15715>
  42c044:	mov    0x4c(%rsp),%eax
  42c048:	or     0x40(%rsp),%eax
  42c04c:	mov    %r14,%rsi
  42c04f:	mov    %rbx,%rdi
  42c052:	je     42c0d9 <X509_get0_pubkey_bitstr@plt+0x15709>
  42c058:	callq  4166f0 <i2b_PublicKey_bio@plt>
  42c05d:	mov    %r14,%rdi
  42c060:	mov    %eax,0xc(%rsp)
  42c064:	callq  412b00 <EVP_PKEY_free@plt>
  42c069:	mov    0xc(%rsp),%eax
  42c06d:	jmpq   42bfcc <X509_get0_pubkey_bitstr@plt+0x155fc>
  42c072:	mov    0x44(%rsp),%ecx
  42c076:	xor    %edx,%edx
  42c078:	xor    %esi,%esi
  42c07a:	mov    %rbp,%rdi
  42c07d:	callq  4144e0 <i2d_RSA_NET@plt>
  42c082:	lea    0x3713e(%rip),%rsi        # 4631c7 <_fini+0x5cc3>
  42c089:	mov    $0x187,%edx
  42c08e:	mov    %eax,%edi
  42c090:	mov    %eax,%r13d
  42c093:	callq  413d50 <CRYPTO_malloc@plt>
  42c098:	test   %rax,%rax
  42c09b:	mov    %rax,%r15
  42c09e:	mov    %rax,0x80(%rsp)
  42c0a6:	je     42c100 <X509_get0_pubkey_bitstr@plt+0x15730>
  42c0a8:	mov    0x44(%rsp),%ecx
  42c0ac:	lea    0x80(%rsp),%rsi
  42c0b4:	xor    %edx,%edx
  42c0b6:	mov    %rbp,%rdi
  42c0b9:	callq  4144e0 <i2d_RSA_NET@plt>
  42c0be:	mov    %rbx,%rdi
  42c0c1:	mov    %r13d,%edx
  42c0c4:	mov    %r15,%rsi
  42c0c7:	callq  412db0 <BIO_write@plt>
  42c0cc:	mov    %r15,%rdi
  42c0cf:	callq  415020 <CRYPTO_free@plt>
  42c0d4:	jmpq   42b804 <X509_get0_pubkey_bitstr@plt+0x14e34>
  42c0d9:	callq  413a80 <i2b_PrivateKey_bio@plt>
  42c0de:	xchg   %ax,%ax
  42c0e0:	jmpq   42c05d <X509_get0_pubkey_bitstr@plt+0x1568d>
  42c0e5:	mov    0x78(%rsp),%r8
  42c0ea:	mov    0x58(%rsp),%edx
  42c0ee:	xor    %ecx,%ecx
  42c0f0:	mov    %r14,%rsi
  42c0f3:	mov    %rbx,%rdi
  42c0f6:	callq  413550 <i2b_PVK_bio@plt>
  42c0fb:	jmpq   42c05d <X509_get0_pubkey_bitstr@plt+0x1568d>
  42c100:	mov    (%r12),%rdi
  42c104:	lea    0x31bb9(%rip),%rsi        # 45dcc4 <_fini+0x7c0>
  42c10b:	xor    %eax,%eax
  42c10d:	mov    $0x1,%r14d
  42c113:	callq  413c40 <BIO_printf@plt>
  42c118:	jmpq   42b804 <X509_get0_pubkey_bitstr@plt+0x14e34>
  42c11d:	mov    %rdx,%r13
  42c120:	movl   $0x1,0x5c(%rsp)
  42c128:	jmpq   42b662 <X509_get0_pubkey_bitstr@plt+0x14c92>
  42c12d:	mov    %rdx,%r13
  42c130:	movl   $0x1,0x60(%rsp)
  42c138:	jmpq   42b662 <X509_get0_pubkey_bitstr@plt+0x14c92>
  42c13d:	lea    0x1(%r8),%rdi
  42c141:	mov    %rdx,0x68(%rsp)
  42c146:	callq  416810 <EVP_get_cipherbyname@plt>
  42c14b:	test   %rax,%rax
  42c14e:	mov    %rax,0x50(%rsp)
  42c153:	mov    0x68(%rsp),%rdx
  42c158:	je     42b92d <X509_get0_pubkey_bitstr@plt+0x14f5d>
  42c15e:	mov    %rdx,%r13
  42c161:	jmpq   42b662 <X509_get0_pubkey_bitstr@plt+0x14c92>
  42c166:	mov    %rdx,%r13
  42c169:	movl   $0x1,0x64(%rsp)
  42c171:	jmpq   42b662 <X509_get0_pubkey_bitstr@plt+0x14c92>
  42c176:	callq  416160 <PEM_write_bio_RSAPublicKey@plt>
  42c17b:	jmpq   42bfcc <X509_get0_pubkey_bitstr@plt+0x155fc>
  42c180:	mov    0x78(%rsp),%rax
  42c185:	mov    0x50(%rsp),%rdx
  42c18a:	xor    %r9d,%r9d
  42c18d:	xor    %r8d,%r8d
  42c190:	xor    %ecx,%ecx
  42c192:	mov    %rbp,%rsi
  42c195:	mov    %rbx,%rdi
  42c198:	mov    %rax,(%rsp)
  42c19c:	callq  414460 <PEM_write_bio_RSAPrivateKey@plt>
  42c1a1:	jmpq   42bfcc <X509_get0_pubkey_bitstr@plt+0x155fc>
  42c1a6:	callq  413430 <i2d_RSAPublicKey_bio@plt>
  42c1ab:	nopl   0x0(%rax,%rax,1)
  42c1b0:	jmpq   42bfcc <X509_get0_pubkey_bitstr@plt+0x155fc>
  42c1b5:	callq  416190 <i2d_RSAPrivateKey_bio@plt>
  42c1ba:	nopw   0x0(%rax,%rax,1)
  42c1c0:	jmpq   42bfcc <X509_get0_pubkey_bitstr@plt+0x155fc>
  42c1c5:	nopw   %cs:0x0(%rax,%rax,1)
  42c1cf:	nop
  42c1d0:	push   %r15
  42c1d2:	push   %r14
  42c1d4:	push   %r13
  42c1d6:	push   %r12
  42c1d8:	push   %rbp
  42c1d9:	mov    %rsi,%rbp
  42c1dc:	push   %rbx
  42c1dd:	mov    %edi,%ebx
  42c1df:	sub    $0x78,%rsp
  42c1e3:	lea    0x24eb56(%rip),%r12        # 67ad40 <_edata+0x38>
  42c1ea:	mov    %fs:0x28,%rax
  42c1f3:	mov    %rax,0x68(%rsp)
  42c1f8:	xor    %eax,%eax
  42c1fa:	movq   $0x0,0x60(%rsp)
  42c203:	mov    (%r12),%rdi
  42c207:	test   %rdi,%rdi
  42c20a:	je     42c830 <X509_get0_pubkey_bitstr@plt+0x15e60>
  42c210:	xor    %esi,%esi
  42c212:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  42c217:	test   %eax,%eax
  42c219:	je     42c310 <X509_get0_pubkey_bitstr@plt+0x15940>
  42c21f:	sub    $0x1,%ebx
  42c222:	callq  416990 <ERR_load_crypto_strings@plt>
  42c227:	callq  412cf0 <OPENSSL_add_all_algorithms_noconf@plt>
  42c22c:	test   %ebx,%ebx
  42c22e:	jle    42c5a1 <X509_get0_pubkey_bitstr@plt+0x15bd1>
  42c234:	lea    0x8(%rbp),%rdx
  42c238:	xor    %r10d,%r10d
  42c23b:	movb   $0x1,0x20(%rsp)
  42c240:	movb   $0x0,0x36(%rsp)
  42c245:	movb   $0x0,0x37(%rsp)
  42c24a:	xor    %r11d,%r11d
  42c24d:	movb   $0x0,0x35(%rsp)
  42c252:	movl   $0x3,0x30(%rsp)
  42c25a:	xor    %r15d,%r15d
  42c25d:	movb   $0x1,0x10(%rsp)
  42c262:	movb   $0x2,0x18(%rsp)
  42c267:	xor    %r9d,%r9d
  42c26a:	xor    %r14d,%r14d
  42c26d:	xor    %r13d,%r13d
  42c270:	mov    $0x5,%r8d
  42c276:	jmp    42c2ae <X509_get0_pubkey_bitstr@plt+0x158de>
  42c278:	nopl   0x0(%rax,%rax,1)
  42c280:	cmpb   $0x69,0x1(%rbp)
  42c284:	jne    42c2b7 <X509_get0_pubkey_bitstr@plt+0x158e7>
  42c286:	cmpb   $0x6e,0x2(%rbp)
  42c28a:	jne    42c2b7 <X509_get0_pubkey_bitstr@plt+0x158e7>
  42c28c:	cmpb   $0x0,0x3(%rbp)
  42c290:	jne    42c2b7 <X509_get0_pubkey_bitstr@plt+0x158e7>
  42c292:	sub    $0x1,%ebx
  42c295:	je     42c400 <X509_get0_pubkey_bitstr@plt+0x15a30>
  42c29b:	mov    0x8(%rdx),%r13
  42c29f:	lea    0x8(%rdx),%rcx
  42c2a3:	sub    $0x1,%ebx
  42c2a6:	lea    0x8(%rcx),%rdx
  42c2aa:	test   %ebx,%ebx
  42c2ac:	jle    42c2e8 <X509_get0_pubkey_bitstr@plt+0x15918>
  42c2ae:	mov    (%rdx),%rbp
  42c2b1:	cmpb   $0x2d,0x0(%rbp)
  42c2b5:	je     42c280 <X509_get0_pubkey_bitstr@plt+0x158b0>
  42c2b7:	lea    0x31b88(%rip),%rdi        # 45de46 <_fini+0x942>
  42c2be:	mov    %rbp,%rsi
  42c2c1:	mov    %r8,%rcx
  42c2c4:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42c2c6:	jne    42c370 <X509_get0_pubkey_bitstr@plt+0x159a0>
  42c2cc:	sub    $0x1,%ebx
  42c2cf:	je     42c400 <X509_get0_pubkey_bitstr@plt+0x15a30>
  42c2d5:	lea    0x8(%rdx),%rcx
  42c2d9:	sub    $0x1,%ebx
  42c2dc:	mov    0x8(%rdx),%r14
  42c2e0:	test   %ebx,%ebx
  42c2e2:	lea    0x8(%rcx),%rdx
  42c2e6:	jg     42c2ae <X509_get0_pubkey_bitstr@plt+0x158de>
  42c2e8:	test   %r11b,%r11b
  42c2eb:	je     42c5e0 <X509_get0_pubkey_bitstr@plt+0x15c10>
  42c2f1:	cmpb   $0x1,0x10(%rsp)
  42c2f6:	je     42c5e0 <X509_get0_pubkey_bitstr@plt+0x15c10>
  42c2fc:	lea    0x3768d(%rip),%rsi        # 463990 <_fini+0x648c>
  42c303:	jmpq   42c539 <X509_get0_pubkey_bitstr@plt+0x15b69>
  42c308:	nopl   0x0(%rax,%rax,1)
  42c310:	xor    %r15d,%r15d
  42c313:	xor    %ebx,%ebx
  42c315:	mov    %r15,%rdi
  42c318:	mov    $0x1,%r14d
  42c31e:	callq  414970 <RSA_free@plt>
  42c323:	mov    %rbx,%rdi
  42c326:	callq  413960 <BIO_free@plt>
  42c32b:	xor    %edi,%edi
  42c32d:	callq  416570 <BIO_free_all@plt>
  42c332:	mov    0x60(%rsp),%rdi
  42c337:	test   %rdi,%rdi
  42c33a:	je     42c341 <X509_get0_pubkey_bitstr@plt+0x15971>
  42c33c:	callq  415020 <CRYPTO_free@plt>
  42c341:	mov    0x68(%rsp),%rsi
  42c346:	xor    %fs:0x28,%rsi
  42c34f:	mov    %r14d,%eax
  42c352:	jne    42cc9a <X509_get0_pubkey_bitstr@plt+0x162ca>
  42c358:	add    $0x78,%rsp
  42c35c:	pop    %rbx
  42c35d:	pop    %rbp
  42c35e:	pop    %r12
  42c360:	pop    %r13
  42c362:	pop    %r14
  42c364:	pop    %r15
  42c366:	retq   
  42c367:	nopw   0x0(%rax,%rax,1)
  42c370:	lea    0x3727b(%rip),%rdi        # 4635f2 <_fini+0x60ee>
  42c377:	mov    $0x7,%ecx
  42c37c:	mov    %rbp,%rsi
  42c37f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42c381:	jne    42c398 <X509_get0_pubkey_bitstr@plt+0x159c8>
  42c383:	sub    $0x1,%ebx
  42c386:	je     42c400 <X509_get0_pubkey_bitstr@plt+0x15a30>
  42c388:	lea    0x8(%rdx),%rcx
  42c38c:	mov    0x8(%rdx),%r15
  42c390:	jmpq   42c2a3 <X509_get0_pubkey_bitstr@plt+0x158d3>
  42c395:	nopl   (%rax)
  42c398:	lea    0x31e51(%rip),%rdi        # 45e1f0 <_fini+0xcec>
  42c39f:	mov    $0x8,%ecx
  42c3a4:	mov    %rbp,%rsi
  42c3a7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42c3a9:	jne    42c3c0 <X509_get0_pubkey_bitstr@plt+0x159f0>
  42c3ab:	sub    $0x1,%ebx
  42c3ae:	je     42c400 <X509_get0_pubkey_bitstr@plt+0x15a30>
  42c3b0:	lea    0x8(%rdx),%rcx
  42c3b4:	mov    0x8(%rdx),%r10
  42c3b8:	jmpq   42c2a3 <X509_get0_pubkey_bitstr@plt+0x158d3>
  42c3bd:	nopl   (%rax)
  42c3c0:	lea    0x31e18(%rip),%rdi        # 45e1df <_fini+0xcdb>
  42c3c7:	mov    $0x9,%ecx
  42c3cc:	mov    %rbp,%rsi
  42c3cf:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42c3d1:	je     42c550 <X509_get0_pubkey_bitstr@plt+0x15b80>
  42c3d7:	lea    0x31784(%rip),%rdi        # 45db62 <_fini+0x65e>
  42c3de:	mov    $0x8,%ecx
  42c3e3:	mov    %rbp,%rsi
  42c3e6:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42c3e8:	jne    42c638 <X509_get0_pubkey_bitstr@plt+0x15c68>
  42c3ee:	sub    $0x1,%ebx
  42c3f1:	je     42c400 <X509_get0_pubkey_bitstr@plt+0x15a30>
  42c3f3:	lea    0x8(%rdx),%rcx
  42c3f7:	mov    0x8(%rdx),%r9
  42c3fb:	jmpq   42c2a3 <X509_get0_pubkey_bitstr@plt+0x158d3>
  42c400:	mov    (%r12),%rdi
  42c404:	lea    0x3723d(%rip),%rsi        # 463648 <_fini+0x6144>
  42c40b:	xor    %eax,%eax
  42c40d:	callq  413c40 <BIO_printf@plt>
  42c412:	mov    (%r12),%rdi
  42c416:	lea    0x37244(%rip),%rsi        # 463661 <_fini+0x615d>
  42c41d:	xor    %eax,%eax
  42c41f:	callq  413c40 <BIO_printf@plt>
  42c424:	mov    (%r12),%rdi
  42c428:	lea    0x3724e(%rip),%rsi        # 46367d <_fini+0x6179>
  42c42f:	xor    %eax,%eax
  42c431:	callq  413c40 <BIO_printf@plt>
  42c436:	mov    (%r12),%rdi
  42c43a:	lea    0x37259(%rip),%rsi        # 46369a <_fini+0x6196>
  42c441:	xor    %eax,%eax
  42c443:	callq  413c40 <BIO_printf@plt>
  42c448:	mov    (%r12),%rdi
  42c44c:	lea    0x372ed(%rip),%rsi        # 463740 <_fini+0x623c>
  42c453:	xor    %eax,%eax
  42c455:	callq  413c40 <BIO_printf@plt>
  42c45a:	mov    (%r12),%rdi
  42c45e:	lea    0x37313(%rip),%rsi        # 463778 <_fini+0x6274>
  42c465:	xor    %eax,%eax
  42c467:	callq  413c40 <BIO_printf@plt>
  42c46c:	mov    (%r12),%rdi
  42c470:	lea    0x37329(%rip),%rsi        # 4637a0 <_fini+0x629c>
  42c477:	xor    %eax,%eax
  42c479:	callq  413c40 <BIO_printf@plt>
  42c47e:	mov    (%r12),%rdi
  42c482:	lea    0x3735f(%rip),%rsi        # 4637e8 <_fini+0x62e4>
  42c489:	xor    %eax,%eax
  42c48b:	callq  413c40 <BIO_printf@plt>
  42c490:	mov    (%r12),%rdi
  42c494:	lea    0x37375(%rip),%rsi        # 463810 <_fini+0x630c>
  42c49b:	xor    %eax,%eax
  42c49d:	callq  413c40 <BIO_printf@plt>
  42c4a2:	mov    (%r12),%rdi
  42c4a6:	lea    0x37383(%rip),%rsi        # 463830 <_fini+0x632c>
  42c4ad:	xor    %eax,%eax
  42c4af:	callq  413c40 <BIO_printf@plt>
  42c4b4:	mov    (%r12),%rdi
  42c4b8:	lea    0x373a9(%rip),%rsi        # 463868 <_fini+0x6364>
  42c4bf:	xor    %eax,%eax
  42c4c1:	callq  413c40 <BIO_printf@plt>
  42c4c6:	mov    (%r12),%rdi
  42c4ca:	lea    0x373bf(%rip),%rsi        # 463890 <_fini+0x638c>
  42c4d1:	xor    %eax,%eax
  42c4d3:	callq  413c40 <BIO_printf@plt>
  42c4d8:	mov    (%r12),%rdi
  42c4dc:	lea    0x373d5(%rip),%rsi        # 4638b8 <_fini+0x63b4>
  42c4e3:	xor    %eax,%eax
  42c4e5:	callq  413c40 <BIO_printf@plt>
  42c4ea:	mov    (%r12),%rdi
  42c4ee:	lea    0x373eb(%rip),%rsi        # 4638e0 <_fini+0x63dc>
  42c4f5:	xor    %eax,%eax
  42c4f7:	callq  413c40 <BIO_printf@plt>
  42c4fc:	mov    (%r12),%rdi
  42c500:	lea    0x37409(%rip),%rsi        # 463910 <_fini+0x640c>
  42c507:	xor    %eax,%eax
  42c509:	callq  413c40 <BIO_printf@plt>
  42c50e:	mov    (%r12),%rdi
  42c512:	lea    0x37427(%rip),%rsi        # 463940 <_fini+0x643c>
  42c519:	xor    %eax,%eax
  42c51b:	callq  413c40 <BIO_printf@plt>
  42c520:	mov    (%r12),%rdi
  42c524:	lea    0x3323d(%rip),%rsi        # 45f768 <_fini+0x2264>
  42c52b:	xor    %eax,%eax
  42c52d:	callq  413c40 <BIO_printf@plt>
  42c532:	lea    0x3742f(%rip),%rsi        # 463968 <_fini+0x6464>
  42c539:	mov    (%r12),%rdi
  42c53d:	xor    %eax,%eax
  42c53f:	xor    %r15d,%r15d
  42c542:	xor    %ebx,%ebx
  42c544:	callq  413c40 <BIO_printf@plt>
  42c549:	jmpq   42c315 <X509_get0_pubkey_bitstr@plt+0x15945>
  42c54e:	xchg   %ax,%ax
  42c550:	sub    $0x1,%ebx
  42c553:	mov    %r10,0x50(%rsp)
  42c558:	mov    %r11d,0x48(%rsp)
  42c55d:	mov    %r9,0x40(%rsp)
  42c562:	mov    %r8,0x38(%rsp)
  42c567:	je     42c400 <X509_get0_pubkey_bitstr@plt+0x15a30>
  42c56d:	mov    0x8(%rdx),%rdi
  42c571:	lea    0x8(%rdx),%rcx
  42c575:	mov    %rcx,0x58(%rsp)
  42c57a:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  42c57f:	mov    0x58(%rsp),%rcx
  42c584:	mov    %eax,0x30(%rsp)
  42c588:	mov    0x38(%rsp),%r8
  42c58d:	mov    0x40(%rsp),%r9
  42c592:	mov    0x48(%rsp),%r11d
  42c597:	mov    0x50(%rsp),%r10
  42c59c:	jmpq   42c2a3 <X509_get0_pubkey_bitstr@plt+0x158d3>
  42c5a1:	xor    %r10d,%r10d
  42c5a4:	movb   $0x1,0x20(%rsp)
  42c5a9:	movb   $0x0,0x36(%rsp)
  42c5ae:	movb   $0x0,0x37(%rsp)
  42c5b3:	movb   $0x0,0x35(%rsp)
  42c5b8:	xor    %r15d,%r15d
  42c5bb:	movl   $0x3,0x30(%rsp)
  42c5c3:	movb   $0x1,0x10(%rsp)
  42c5c8:	xor    %r9d,%r9d
  42c5cb:	movb   $0x2,0x18(%rsp)
  42c5d0:	xor    %r14d,%r14d
  42c5d3:	xor    %r13d,%r13d
  42c5d6:	nopw   %cs:0x0(%rax,%rax,1)
  42c5e0:	mov    (%r12),%rdi
  42c5e4:	xor    %edx,%edx
  42c5e6:	mov    %r9,%rsi
  42c5e9:	mov    %r10,0x38(%rsp)
  42c5ee:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  42c5f3:	mov    0x38(%rsp),%r10
  42c5f8:	mov    (%r12),%rdi
  42c5fc:	lea    0x60(%rsp),%rcx
  42c601:	xor    %r8d,%r8d
  42c604:	xor    %edx,%edx
  42c606:	mov    %rax,%rbx
  42c609:	mov    %r10,%rsi
  42c60c:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  42c611:	test   %eax,%eax
  42c613:	jne    42c850 <X509_get0_pubkey_bitstr@plt+0x15e80>
  42c619:	mov    (%r12),%rdi
  42c61d:	lea    0x33310(%rip),%rsi        # 45f934 <_fini+0x2430>
  42c624:	xor    %r15d,%r15d
  42c627:	xor    %ebx,%ebx
  42c629:	callq  413c40 <BIO_printf@plt>
  42c62e:	jmpq   42c315 <X509_get0_pubkey_bitstr@plt+0x15945>
  42c633:	nopl   0x0(%rax,%rax,1)
  42c638:	lea    0x36afb(%rip),%rdi        # 46313a <_fini+0x5c36>
  42c63f:	mov    $0x7,%ecx
  42c644:	mov    %rbp,%rsi
  42c647:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42c649:	je     42c881 <X509_get0_pubkey_bitstr@plt+0x15eb1>
  42c64f:	lea    0x36fa3(%rip),%rdi        # 4635f9 <_fini+0x60f5>
  42c656:	mov    $0x8,%ecx
  42c65b:	mov    %rbp,%rsi
  42c65e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42c660:	je     42ca65 <X509_get0_pubkey_bitstr@plt+0x16095>
  42c666:	lea    0x36f94(%rip),%rdi        # 463601 <_fini+0x60fd>
  42c66d:	mov    $0xb,%ecx
  42c672:	mov    %rbp,%rsi
  42c675:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42c677:	je     42cb15 <X509_get0_pubkey_bitstr@plt+0x16145>
  42c67d:	lea    0x36f88(%rip),%rdi        # 46360c <_fini+0x6108>
  42c684:	mov    $0x9,%ecx
  42c689:	mov    %rbp,%rsi
  42c68c:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42c68e:	je     42cbec <X509_get0_pubkey_bitstr@plt+0x1621c>
  42c694:	lea    0x36f7a(%rip),%rdi        # 463615 <_fini+0x6111>
  42c69b:	mov    %rbp,%rsi
  42c69e:	mov    %r8,%rcx
  42c6a1:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42c6a3:	je     42cc1b <X509_get0_pubkey_bitstr@plt+0x1624b>
  42c6a9:	lea    0x36f6a(%rip),%rdi        # 46361a <_fini+0x6116>
  42c6b0:	mov    $0x6,%ecx
  42c6b5:	mov    %rbp,%rsi
  42c6b8:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42c6ba:	je     42cc66 <X509_get0_pubkey_bitstr@plt+0x16296>
  42c6c0:	lea    0x36f59(%rip),%rdi        # 463620 <_fini+0x611c>
  42c6c7:	mov    %rbp,%rsi
  42c6ca:	mov    %r8,%rcx
  42c6cd:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42c6cf:	je     42cc73 <X509_get0_pubkey_bitstr@plt+0x162a3>
  42c6d5:	lea    0x36f49(%rip),%rdi        # 463625 <_fini+0x6121>
  42c6dc:	mov    $0x6,%ecx
  42c6e1:	mov    %rbp,%rsi
  42c6e4:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42c6e6:	je     42cc8d <X509_get0_pubkey_bitstr@plt+0x162bd>
  42c6ec:	lea    0x36f38(%rip),%rdi        # 46362b <_fini+0x6127>
  42c6f3:	mov    $0x6,%ecx
  42c6f8:	mov    %rbp,%rsi
  42c6fb:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42c6fd:	je     42cc80 <X509_get0_pubkey_bitstr@plt+0x162b0>
  42c703:	lea    0x331b8(%rip),%rsi        # 45f8c2 <_fini+0x23be>
  42c70a:	mov    %rbp,%rdi
  42c70d:	mov    %rdx,0x58(%rsp)
  42c712:	mov    %r10,0x50(%rsp)
  42c717:	mov    %r9,0x40(%rsp)
  42c71c:	mov    %r8,0x38(%rsp)
  42c721:	mov    %r11d,0x48(%rsp)
  42c726:	callq  4155c0 <strcmp@plt>
  42c72b:	test   %eax,%eax
  42c72d:	mov    0x38(%rsp),%r8
  42c732:	mov    0x40(%rsp),%r9
  42c737:	mov    0x50(%rsp),%r10
  42c73c:	mov    0x58(%rsp),%rdx
  42c741:	je     42ccd5 <X509_get0_pubkey_bitstr@plt+0x16305>
  42c747:	lea    0x31aea(%rip),%rsi        # 45e238 <_fini+0xd34>
  42c74e:	mov    %rbp,%rdi
  42c751:	callq  4155c0 <strcmp@plt>
  42c756:	test   %eax,%eax
  42c758:	mov    0x38(%rsp),%r8
  42c75d:	mov    0x40(%rsp),%r9
  42c762:	mov    0x48(%rsp),%r11d
  42c767:	mov    0x50(%rsp),%r10
  42c76c:	mov    0x58(%rsp),%rdx
  42c771:	je     42ccc8 <X509_get0_pubkey_bitstr@plt+0x162f8>
  42c777:	lea    0x36eb3(%rip),%rsi        # 463631 <_fini+0x612d>
  42c77e:	mov    %rbp,%rdi
  42c781:	callq  4155c0 <strcmp@plt>
  42c786:	test   %eax,%eax
  42c788:	mov    0x38(%rsp),%r8
  42c78d:	mov    0x40(%rsp),%r9
  42c792:	mov    0x48(%rsp),%r11d
  42c797:	mov    0x50(%rsp),%r10
  42c79c:	mov    0x58(%rsp),%rdx
  42c7a1:	je     42ccbb <X509_get0_pubkey_bitstr@plt+0x162eb>
  42c7a7:	lea    0x36e88(%rip),%rsi        # 463636 <_fini+0x6132>
  42c7ae:	mov    %rbp,%rdi
  42c7b1:	mov    %rdx,0x18(%rsp)
  42c7b6:	callq  4155c0 <strcmp@plt>
  42c7bb:	mov    0x18(%rsp),%rdx
  42c7c0:	test   %eax,%eax
  42c7c2:	movb   $0x3,0x18(%rsp)
  42c7c7:	mov    0x38(%rsp),%r8
  42c7cc:	mov    0x40(%rsp),%r9
  42c7d1:	mov    0x48(%rsp),%r11d
  42c7d6:	mov    0x50(%rsp),%r10
  42c7db:	mov    %rdx,%rcx
  42c7de:	je     42c2a3 <X509_get0_pubkey_bitstr@plt+0x158d3>
  42c7e4:	lea    0x36e54(%rip),%rsi        # 46363f <_fini+0x613b>
  42c7eb:	mov    %rbp,%rdi
  42c7ee:	mov    %r10,0x48(%rsp)
  42c7f3:	mov    %rdx,0x18(%rsp)
  42c7f8:	callq  4155c0 <strcmp@plt>
  42c7fd:	test   %eax,%eax
  42c7ff:	mov    0x18(%rsp),%rcx
  42c804:	mov    0x38(%rsp),%r8
  42c809:	mov    0x40(%rsp),%r9
  42c80e:	mov    0x48(%rsp),%r10
  42c813:	jne    42c400 <X509_get0_pubkey_bitstr@plt+0x15a30>
  42c819:	mov    $0x1,%r11d
  42c81f:	movb   $0x4,0x18(%rsp)
  42c824:	jmpq   42c2a3 <X509_get0_pubkey_bitstr@plt+0x158d3>
  42c829:	nopl   0x0(%rax)
  42c830:	mov    0x249749(%rip),%rax        # 675f80 <_fini+0x218a7c>
  42c837:	xor    %esi,%esi
  42c839:	mov    (%rax),%rdi
  42c83c:	callq  4161e0 <BIO_new_fp@plt>
  42c841:	mov    %rax,%rdi
  42c844:	mov    %rax,(%r12)
  42c848:	jmpq   42c210 <X509_get0_pubkey_bitstr@plt+0x15840>
  42c84d:	nopl   (%rax)
  42c850:	mov    (%r12),%rsi
  42c854:	xor    %edx,%edx
  42c856:	xor    %edi,%edi
  42c858:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  42c85d:	movzbl 0x10(%rsp),%eax
  42c862:	cmp    $0x2,%al
  42c864:	je     42c88e <X509_get0_pubkey_bitstr@plt+0x15ebe>
  42c866:	cmp    $0x3,%al
  42c868:	je     42ca9f <X509_get0_pubkey_bitstr@plt+0x160cf>
  42c86e:	cmp    $0x1,%al
  42c870:	je     42ca72 <X509_get0_pubkey_bitstr@plt+0x160a2>
  42c876:	mov    $0x1,%r14d
  42c87c:	jmpq   42c341 <X509_get0_pubkey_bitstr@plt+0x15971>
  42c881:	mov    %rdx,%rcx
  42c884:	movb   $0x2,0x10(%rsp)
  42c889:	jmpq   42c2a3 <X509_get0_pubkey_bitstr@plt+0x158d3>
  42c88e:	lea    0x368f7(%rip),%rax        # 46318c <_fini+0x5c88>
  42c895:	mov    0x30(%rsp),%edx
  42c899:	mov    %rbx,%r9
  42c89c:	xor    %r8d,%r8d
  42c89f:	xor    %ecx,%ecx
  42c8a1:	mov    %r15,%rsi
  42c8a4:	mov    %rax,(%rsp)
  42c8a8:	mov    (%r12),%rdi
  42c8ac:	callq  446250 <X509_get0_pubkey_bitstr@plt+0x2f880>
  42c8b1:	mov    %rax,%rbx
  42c8b4:	test   %rbx,%rbx
  42c8b7:	je     42c876 <X509_get0_pubkey_bitstr@plt+0x15ea6>
  42c8b9:	mov    %rbx,%rdi
  42c8bc:	callq  413b30 <EVP_PKEY_get1_RSA@plt>
  42c8c1:	mov    %rbx,%rdi
  42c8c4:	mov    %rax,%r15
  42c8c7:	callq  412b00 <EVP_PKEY_free@plt>
  42c8cc:	test   %r15,%r15
  42c8cf:	je     42cbf9 <X509_get0_pubkey_bitstr@plt+0x16229>
  42c8d5:	test   %r13,%r13
  42c8d8:	je     42cb92 <X509_get0_pubkey_bitstr@plt+0x161c2>
  42c8de:	lea    0x330fc(%rip),%rsi        # 45f9e1 <_fini+0x24dd>
  42c8e5:	mov    %r13,%rdi
  42c8e8:	callq  412ba0 <BIO_new_file@plt>
  42c8ed:	test   %rax,%rax
  42c8f0:	mov    %rax,%rbx
  42c8f3:	je     42cc28 <X509_get0_pubkey_bitstr@plt+0x16258>
  42c8f9:	test   %r14,%r14
  42c8fc:	je     42cbab <X509_get0_pubkey_bitstr@plt+0x161db>
  42c902:	lea    0x314a2(%rip),%rsi        # 45ddab <_fini+0x8a7>
  42c909:	mov    %r14,%rdi
  42c90c:	callq  412ba0 <BIO_new_file@plt>
  42c911:	test   %rax,%rax
  42c914:	mov    %rax,0x10(%rsp)
  42c919:	je     42cc48 <X509_get0_pubkey_bitstr@plt+0x16278>
  42c91f:	mov    %r15,%rdi
  42c922:	callq  4164c0 <RSA_size@plt>
  42c927:	lea    (%rax,%rax,1),%r14d
  42c92b:	lea    0x36dcf(%rip),%rsi        # 463701 <_fini+0x61fd>
  42c932:	mov    $0x104,%edx
  42c937:	mov    %eax,%ebp
  42c939:	mov    %r14d,%edi
  42c93c:	callq  413d50 <CRYPTO_malloc@plt>
  42c941:	lea    0x36db9(%rip),%rsi        # 463701 <_fini+0x61fd>
  42c948:	mov    %ebp,%edi
  42c94a:	mov    %rax,%r13
  42c94d:	mov    $0x105,%edx
  42c952:	callq  413d50 <CRYPTO_malloc@plt>
  42c957:	mov    %r14d,%edx
  42c95a:	mov    %r13,%rsi
  42c95d:	mov    %rbx,%rdi
  42c960:	mov    %rax,%rbp
  42c963:	callq  413930 <BIO_read@plt>
  42c968:	test   %eax,%eax
  42c96a:	jle    42cc9f <X509_get0_pubkey_bitstr@plt+0x162cf>
  42c970:	cmpb   $0x0,0x35(%rsp)
  42c975:	je     42c9b3 <X509_get0_pubkey_bitstr@plt+0x15fe3>
  42c977:	mov    %eax,%esi
  42c979:	sar    %esi
  42c97b:	je     42c9b3 <X509_get0_pubkey_bitstr@plt+0x15fe3>
  42c97d:	lea    -0x1(%rax),%ecx
  42c980:	sub    $0x1,%esi
  42c983:	mov    %r13,%rdx
  42c986:	lea    0x1(%r13,%rsi,1),%r8
  42c98b:	movslq %ecx,%rcx
  42c98e:	add    %r13,%rcx
  42c991:	nopl   0x0(%rax)
  42c998:	movzbl (%rcx),%edi
  42c99b:	movzbl (%rdx),%esi
  42c99e:	add    $0x1,%rdx
  42c9a2:	sub    $0x1,%rcx
  42c9a6:	mov    %dil,-0x1(%rdx)
  42c9aa:	mov    %sil,0x1(%rcx)
  42c9ae:	cmp    %r8,%rdx
  42c9b1:	jne    42c998 <X509_get0_pubkey_bitstr@plt+0x15fc8>
  42c9b3:	cmpb   $0x2,0x18(%rsp)
  42c9b8:	je     42cb56 <X509_get0_pubkey_bitstr@plt+0x16186>
  42c9be:	jle    42caec <X509_get0_pubkey_bitstr@plt+0x1611c>
  42c9c4:	movzbl 0x18(%rsp),%esi
  42c9c9:	cmp    $0x3,%sil
  42c9cd:	je     42cb74 <X509_get0_pubkey_bitstr@plt+0x161a4>
  42c9d3:	cmp    $0x4,%sil
  42c9d7:	jne    42cbc6 <X509_get0_pubkey_bitstr@plt+0x161f6>
  42c9dd:	mov    0x20(%rsp),%r8d
  42c9e2:	mov    %r15,%rcx
  42c9e5:	mov    %rbp,%rdx
  42c9e8:	mov    %r13,%rsi
  42c9eb:	mov    %eax,%edi
  42c9ed:	and    $0x7,%r8d
  42c9f1:	callq  413850 <RSA_private_decrypt@plt>
  42c9f6:	test   %eax,%eax
  42c9f8:	jle    42cbc6 <X509_get0_pubkey_bitstr@plt+0x161f6>
  42c9fe:	cmpb   $0x0,0x36(%rsp)
  42ca03:	jne    42cb22 <X509_get0_pubkey_bitstr@plt+0x16152>
  42ca09:	cmpb   $0x0,0x37(%rsp)
  42ca0e:	mov    %eax,%edx
  42ca10:	mov    %rbp,%rsi
  42ca13:	mov    0x10(%rsp),%rdi
  42ca18:	je     42cadf <X509_get0_pubkey_bitstr@plt+0x1610f>
  42ca1e:	xor    %r14d,%r14d
  42ca21:	callq  413c30 <BIO_dump@plt>
  42ca26:	mov    %r15,%rdi
  42ca29:	callq  414970 <RSA_free@plt>
  42ca2e:	mov    %rbx,%rdi
  42ca31:	callq  413960 <BIO_free@plt>
  42ca36:	mov    0x10(%rsp),%rdi
  42ca3b:	callq  416570 <BIO_free_all@plt>
  42ca40:	test   %r13,%r13
  42ca43:	je     42ca4d <X509_get0_pubkey_bitstr@plt+0x1607d>
  42ca45:	mov    %r13,%rdi
  42ca48:	callq  415020 <CRYPTO_free@plt>
  42ca4d:	test   %rbp,%rbp
  42ca50:	je     42c332 <X509_get0_pubkey_bitstr@plt+0x15962>
  42ca56:	mov    %rbp,%rdi
  42ca59:	callq  415020 <CRYPTO_free@plt>
  42ca5e:	xchg   %ax,%ax
  42ca60:	jmpq   42c332 <X509_get0_pubkey_bitstr@plt+0x15962>
  42ca65:	mov    %rdx,%rcx
  42ca68:	movb   $0x3,0x10(%rsp)
  42ca6d:	jmpq   42c2a3 <X509_get0_pubkey_bitstr@plt+0x158d3>
  42ca72:	lea    0x3927d(%rip),%rax        # 465cf6 <_fini+0x87f2>
  42ca79:	mov    0x60(%rsp),%r8
  42ca7e:	mov    0x30(%rsp),%edx
  42ca82:	mov    %rbx,%r9
  42ca85:	xor    %ecx,%ecx
  42ca87:	mov    %r15,%rsi
  42ca8a:	mov    %rax,(%rsp)
  42ca8e:	mov    (%r12),%rdi
  42ca92:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  42ca97:	mov    %rax,%rbx
  42ca9a:	jmpq   42c8b4 <X509_get0_pubkey_bitstr@plt+0x15ee4>
  42ca9f:	mov    0x30(%rsp),%edx
  42caa3:	mov    (%r12),%rdi
  42caa7:	lea    0x3f057(%rip),%r9        # 46bb05 <_fini+0xe601>
  42caae:	xor    %ecx,%ecx
  42cab0:	mov    %rbx,%r8
  42cab3:	mov    %r15,%rsi
  42cab6:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  42cabb:	test   %rax,%rax
  42cabe:	mov    %rax,%rbp
  42cac1:	je     42c876 <X509_get0_pubkey_bitstr@plt+0x15ea6>
  42cac7:	mov    %rax,%rdi
  42caca:	callq  4161b0 <X509_get_pubkey@plt>
  42cacf:	mov    %rbp,%rdi
  42cad2:	mov    %rax,%rbx
  42cad5:	callq  4153a0 <X509_free@plt>
  42cada:	jmpq   42c8b4 <X509_get0_pubkey_bitstr@plt+0x15ee4>
  42cadf:	callq  412db0 <BIO_write@plt>
  42cae4:	xor    %r14d,%r14d
  42cae7:	jmpq   42ca26 <X509_get0_pubkey_bitstr@plt+0x16056>
  42caec:	cmpb   $0x1,0x18(%rsp)
  42caf1:	jne    42cbc6 <X509_get0_pubkey_bitstr@plt+0x161f6>
  42caf7:	mov    0x20(%rsp),%r8d
  42cafc:	mov    %r15,%rcx
  42caff:	mov    %rbp,%rdx
  42cb02:	mov    %r13,%rsi
  42cb05:	mov    %eax,%edi
  42cb07:	and    $0x7,%r8d
  42cb0b:	callq  413e20 <RSA_private_encrypt@plt>
  42cb10:	jmpq   42c9f6 <X509_get0_pubkey_bitstr@plt+0x16026>
  42cb15:	mov    %rdx,%rcx
  42cb18:	movb   $0x1,0x36(%rsp)
  42cb1d:	jmpq   42c2a3 <X509_get0_pubkey_bitstr@plt+0x158d3>
  42cb22:	mov    0x10(%rsp),%rdi
  42cb27:	movslq %eax,%rdx
  42cb2a:	mov    $0xffffffff,%r8d
  42cb30:	mov    $0x1,%ecx
  42cb35:	mov    %rbp,%rsi
  42cb38:	xor    %r14d,%r14d
  42cb3b:	callq  413760 <ASN1_parse_dump@plt>
  42cb40:	test   %eax,%eax
  42cb42:	jne    42ca26 <X509_get0_pubkey_bitstr@plt+0x16056>
  42cb48:	mov    (%r12),%rdi
  42cb4c:	callq  413f40 <ERR_print_errors@plt>
  42cb51:	jmpq   42ca26 <X509_get0_pubkey_bitstr@plt+0x16056>
  42cb56:	mov    0x20(%rsp),%r8d
  42cb5b:	mov    %r15,%rcx
  42cb5e:	mov    %rbp,%rdx
  42cb61:	mov    %r13,%rsi
  42cb64:	mov    %eax,%edi
  42cb66:	and    $0x7,%r8d
  42cb6a:	callq  415750 <RSA_public_decrypt@plt>
  42cb6f:	jmpq   42c9f6 <X509_get0_pubkey_bitstr@plt+0x16026>
  42cb74:	mov    0x20(%rsp),%r8d
  42cb79:	mov    %r15,%rcx
  42cb7c:	mov    %rbp,%rdx
  42cb7f:	mov    %r13,%rsi
  42cb82:	mov    %eax,%edi
  42cb84:	and    $0x7,%r8d
  42cb88:	callq  413690 <RSA_public_encrypt@plt>
  42cb8d:	jmpq   42c9f6 <X509_get0_pubkey_bitstr@plt+0x16026>
  42cb92:	mov    0x249377(%rip),%rax        # 675f10 <_fini+0x218a0c>
  42cb99:	xor    %esi,%esi
  42cb9b:	mov    (%rax),%rdi
  42cb9e:	callq  4161e0 <BIO_new_fp@plt>
  42cba3:	mov    %rax,%rbx
  42cba6:	jmpq   42c8f9 <X509_get0_pubkey_bitstr@plt+0x15f29>
  42cbab:	mov    0x249306(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  42cbb2:	xor    %esi,%esi
  42cbb4:	mov    (%rax),%rdi
  42cbb7:	callq  4161e0 <BIO_new_fp@plt>
  42cbbc:	mov    %rax,0x10(%rsp)
  42cbc1:	jmpq   42c91f <X509_get0_pubkey_bitstr@plt+0x15f4f>
  42cbc6:	mov    (%r12),%rdi
  42cbca:	lea    0x36b53(%rip),%rsi        # 463724 <_fini+0x6220>
  42cbd1:	xor    %eax,%eax
  42cbd3:	mov    $0x1,%r14d
  42cbd9:	callq  413c40 <BIO_printf@plt>
  42cbde:	mov    (%r12),%rdi
  42cbe2:	callq  413f40 <ERR_print_errors@plt>
  42cbe7:	jmpq   42ca26 <X509_get0_pubkey_bitstr@plt+0x16056>
  42cbec:	mov    %rdx,%rcx
  42cbef:	movb   $0x1,0x37(%rsp)
  42cbf4:	jmpq   42c2a3 <X509_get0_pubkey_bitstr@plt+0x158d3>
  42cbf9:	mov    (%r12),%rdi
  42cbfd:	lea    0x36ab1(%rip),%rsi        # 4636b5 <_fini+0x61b1>
  42cc04:	xor    %eax,%eax
  42cc06:	xor    %ebx,%ebx
  42cc08:	callq  413c40 <BIO_printf@plt>
  42cc0d:	mov    (%r12),%rdi
  42cc11:	callq  413f40 <ERR_print_errors@plt>
  42cc16:	jmpq   42c315 <X509_get0_pubkey_bitstr@plt+0x15945>
  42cc1b:	mov    %rdx,%rcx
  42cc1e:	movb   $0x3,0x20(%rsp)
  42cc23:	jmpq   42c2a3 <X509_get0_pubkey_bitstr@plt+0x158d3>
  42cc28:	mov    (%r12),%rdi
  42cc2c:	lea    0x36a99(%rip),%rsi        # 4636cc <_fini+0x61c8>
  42cc33:	xor    %eax,%eax
  42cc35:	callq  413c40 <BIO_printf@plt>
  42cc3a:	mov    (%r12),%rdi
  42cc3e:	callq  413f40 <ERR_print_errors@plt>
  42cc43:	jmpq   42c315 <X509_get0_pubkey_bitstr@plt+0x15945>
  42cc48:	mov    (%r12),%rdi
  42cc4c:	lea    0x36a93(%rip),%rsi        # 4636e6 <_fini+0x61e2>
  42cc53:	callq  413c40 <BIO_printf@plt>
  42cc58:	mov    (%r12),%rdi
  42cc5c:	callq  413f40 <ERR_print_errors@plt>
  42cc61:	jmpq   42c315 <X509_get0_pubkey_bitstr@plt+0x15945>
  42cc66:	mov    %rdx,%rcx
  42cc69:	movb   $0x4,0x20(%rsp)
  42cc6e:	jmpq   42c2a3 <X509_get0_pubkey_bitstr@plt+0x158d3>
  42cc73:	mov    %rdx,%rcx
  42cc76:	movb   $0x2,0x20(%rsp)
  42cc7b:	jmpq   42c2a3 <X509_get0_pubkey_bitstr@plt+0x158d3>
  42cc80:	mov    %rdx,%rcx
  42cc83:	movb   $0x5,0x20(%rsp)
  42cc88:	jmpq   42c2a3 <X509_get0_pubkey_bitstr@plt+0x158d3>
  42cc8d:	mov    %rdx,%rcx
  42cc90:	movb   $0x1,0x20(%rsp)
  42cc95:	jmpq   42c2a3 <X509_get0_pubkey_bitstr@plt+0x158d3>
  42cc9a:	callq  414c30 <__stack_chk_fail@plt>
  42cc9f:	mov    (%r12),%rdi
  42cca3:	lea    0x36a60(%rip),%rsi        # 46370a <_fini+0x6206>
  42ccaa:	xor    %eax,%eax
  42ccac:	callq  413c40 <BIO_printf@plt>
  42ccb1:	mov    $0x1,%edi
  42ccb6:	callq  414fb0 <exit@plt>
  42ccbb:	mov    %rdx,%rcx
  42ccbe:	movb   $0x1,0x35(%rsp)
  42ccc3:	jmpq   42c2a3 <X509_get0_pubkey_bitstr@plt+0x158d3>
  42ccc8:	mov    %rdx,%rcx
  42cccb:	movb   $0x2,0x18(%rsp)
  42ccd0:	jmpq   42c2a3 <X509_get0_pubkey_bitstr@plt+0x158d3>
  42ccd5:	mov    %rdx,%rcx
  42ccd8:	mov    $0x1,%r11d
  42ccde:	movb   $0x1,0x18(%rsp)
  42cce3:	jmpq   42c2a3 <X509_get0_pubkey_bitstr@plt+0x158d3>
  42cce8:	nopl   0x0(%rax,%rax,1)
  42ccf0:	push   %r15
  42ccf2:	push   %r14
  42ccf4:	push   %r13
  42ccf6:	push   %r12
  42ccf8:	push   %rbp
  42ccf9:	mov    %edi,%ebp
  42ccfb:	mov    $0xd,%edi
  42cd00:	push   %rbx
  42cd01:	mov    %rsi,%rbx
  42cd04:	mov    $0x1,%esi
  42cd09:	sub    $0x98,%rsp
  42cd10:	mov    %fs:0x28,%rax
  42cd19:	mov    %rax,0x88(%rsp)
  42cd21:	xor    %eax,%eax
  42cd23:	movq   $0x0,0x78(%rsp)
  42cd2c:	movq   $0x0,0x80(%rsp)
  42cd38:	callq  414ee0 <signal@plt>
  42cd3d:	lea    0x24dffc(%rip),%r12        # 67ad40 <_edata+0x38>
  42cd44:	mov    (%r12),%rdi
  42cd48:	test   %rdi,%rdi
  42cd4b:	je     42d3b8 <X509_get0_pubkey_bitstr@plt+0x169e8>
  42cd51:	xor    %esi,%esi
  42cd53:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  42cd58:	test   %eax,%eax
  42cd5a:	je     42d19d <X509_get0_pubkey_bitstr@plt+0x167cd>
  42cd60:	mov    (%rbx),%rax
  42cd63:	lea    -0x1(%rbp),%r14d
  42cd67:	lea    0x8(%rbx),%rdx
  42cd6b:	movl   $0x2,0x48(%rsp)
  42cd73:	movl   $0x0,0x64(%rsp)
  42cd7b:	mov    $0x3,%r15d
  42cd81:	test   %r14d,%r14d
  42cd84:	movq   $0x0,0x38(%rsp)
  42cd8d:	movq   $0x0,0x28(%rsp)
  42cd96:	mov    %rax,0x30(%rsp)
  42cd9b:	movq   $0x0,0x40(%rsp)
  42cda4:	movq   $0x0,0x20(%rsp)
  42cdad:	movq   $0x0,0x18(%rsp)
  42cdb6:	movl   $0x0,0x58(%rsp)
  42cdbe:	movl   $0x0,0x4c(%rsp)
  42cdc6:	movl   $0x0,0x60(%rsp)
  42cdce:	movl   $0x0,0x5c(%rsp)
  42cdd6:	movl   $0x3,0x14(%rsp)
  42cdde:	movq   $0x0,0x50(%rsp)
  42cde7:	jle    42ce81 <X509_get0_pubkey_bitstr@plt+0x164b1>
  42cded:	mov    %r15d,%eax
  42cdf0:	lea    0x30ee8(%rip),%rbp        # 45dcdf <_fini+0x7db>
  42cdf7:	mov    %r14d,%r15d
  42cdfa:	mov    $0x8,%ebx
  42cdff:	mov    %eax,%r14d
  42ce02:	jmp    42ce2f <X509_get0_pubkey_bitstr@plt+0x1645f>
  42ce04:	nopl   0x0(%rax)
  42ce08:	sub    $0x1,%r15d
  42ce0c:	je     42d030 <X509_get0_pubkey_bitstr@plt+0x16660>
  42ce12:	mov    0x8(%rdx),%rdi
  42ce16:	lea    0x8(%rdx),%r13
  42ce1a:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  42ce1f:	mov    %eax,%r14d
  42ce22:	sub    $0x1,%r15d
  42ce26:	lea    0x8(%r13),%rdx
  42ce2a:	test   %r15d,%r15d
  42ce2d:	jle    42ce7e <X509_get0_pubkey_bitstr@plt+0x164ae>
  42ce2f:	mov    (%rdx),%r8
  42ce32:	mov    %rbp,%rdi
  42ce35:	mov    %rbx,%rcx
  42ce38:	mov    %r8,%rsi
  42ce3b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42ce3d:	je     42ce08 <X509_get0_pubkey_bitstr@plt+0x16438>
  42ce3f:	lea    0x3134a(%rip),%rdi        # 45e190 <_fini+0xc8c>
  42ce46:	mov    $0x9,%ecx
  42ce4b:	mov    %r8,%rsi
  42ce4e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42ce50:	jne    42d1f0 <X509_get0_pubkey_bitstr@plt+0x16820>
  42ce56:	sub    $0x1,%r15d
  42ce5a:	je     42d030 <X509_get0_pubkey_bitstr@plt+0x16660>
  42ce60:	mov    0x8(%rdx),%rdi
  42ce64:	lea    0x8(%rdx),%r13
  42ce68:	sub    $0x1,%r15d
  42ce6c:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  42ce71:	test   %r15d,%r15d
  42ce74:	mov    %eax,0x14(%rsp)
  42ce78:	lea    0x8(%r13),%rdx
  42ce7c:	jg     42ce2f <X509_get0_pubkey_bitstr@plt+0x1645f>
  42ce7e:	mov    %r14d,%r15d
  42ce81:	callq  416990 <ERR_load_crypto_strings@plt>
  42ce86:	mov    0x40(%rsp),%rsi
  42ce8b:	mov    (%r12),%rdi
  42ce8f:	xor    %edx,%edx
  42ce91:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  42ce96:	mov    0x38(%rsp),%rdx
  42ce9b:	mov    0x28(%rsp),%rsi
  42cea0:	lea    0x78(%rsp),%rcx
  42cea5:	mov    (%r12),%rdi
  42cea9:	lea    0x80(%rsp),%r8
  42ceb1:	mov    %rax,%r14
  42ceb4:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  42ceb9:	test   %eax,%eax
  42cebb:	je     42d407 <X509_get0_pubkey_bitstr@plt+0x16a37>
  42cec1:	callq  4152b0 <BIO_s_file@plt>
  42cec6:	mov    %rax,%rdi
  42cec9:	callq  414a20 <BIO_new@plt>
  42cece:	mov    %rax,%rbp
  42ced1:	callq  4152b0 <BIO_s_file@plt>
  42ced6:	mov    %rax,%rdi
  42ced9:	callq  414a20 <BIO_new@plt>
  42cede:	test   %rax,%rax
  42cee1:	mov    %rax,%rbx
  42cee4:	je     42d46d <X509_get0_pubkey_bitstr@plt+0x16a9d>
  42ceea:	test   %rbp,%rbp
  42ceed:	je     42d46d <X509_get0_pubkey_bitstr@plt+0x16a9d>
  42cef3:	cmpq   $0x0,0x18(%rsp)
  42cef9:	je     42d5b7 <X509_get0_pubkey_bitstr@plt+0x16be7>
  42ceff:	mov    0x18(%rsp),%rcx
  42cf04:	mov    $0x3,%edx
  42cf09:	mov    $0x6c,%esi
  42cf0e:	mov    %rbp,%rdi
  42cf11:	callq  412af0 <BIO_ctrl@plt>
  42cf16:	test   %rax,%rax
  42cf19:	jle    42d5d5 <X509_get0_pubkey_bitstr@plt+0x16c05>
  42cf1f:	mov    (%r12),%rdi
  42cf23:	lea    0x36a92(%rip),%rsi        # 4639bc <_fini+0x64b8>
  42cf2a:	xor    %eax,%eax
  42cf2c:	callq  413c40 <BIO_printf@plt>
  42cf31:	mov    0x4c(%rsp),%esi
  42cf35:	test   %esi,%esi
  42cf37:	je     42d43c <X509_get0_pubkey_bitstr@plt+0x16a6c>
  42cf3d:	lea    0x36248(%rip),%rax        # 46318c <_fini+0x5c88>
  42cf44:	mov    0x78(%rsp),%r8
  42cf49:	mov    0x18(%rsp),%rsi
  42cf4e:	mov    %r15d,%edx
  42cf51:	mov    %r14,%r9
  42cf54:	mov    $0x1,%ecx
  42cf59:	mov    %rax,(%rsp)
  42cf5d:	mov    (%r12),%rdi
  42cf61:	callq  446250 <X509_get0_pubkey_bitstr@plt+0x2f880>
  42cf66:	mov    %rax,%rdx
  42cf69:	test   %rdx,%rdx
  42cf6c:	je     42d490 <X509_get0_pubkey_bitstr@plt+0x16ac0>
  42cf72:	mov    %rdx,%rdi
  42cf75:	mov    %rdx,0x18(%rsp)
  42cf7a:	callq  4144c0 <EVP_PKEY_get1_DSA@plt>
  42cf7f:	mov    0x18(%rsp),%rdx
  42cf84:	mov    %rax,%r14
  42cf87:	mov    %rdx,%rdi
  42cf8a:	callq  412b00 <EVP_PKEY_free@plt>
  42cf8f:	test   %r14,%r14
  42cf92:	je     42d490 <X509_get0_pubkey_bitstr@plt+0x16ac0>
  42cf98:	cmpq   $0x0,0x20(%rsp)
  42cf9e:	je     42d589 <X509_get0_pubkey_bitstr@plt+0x16bb9>
  42cfa4:	mov    0x20(%rsp),%rcx
  42cfa9:	mov    $0x5,%edx
  42cfae:	mov    $0x6c,%esi
  42cfb3:	mov    %rbx,%rdi
  42cfb6:	callq  412af0 <BIO_ctrl@plt>
  42cfbb:	test   %rax,%rax
  42cfbe:	jle    42d5ed <X509_get0_pubkey_bitstr@plt+0x16c1d>
  42cfc4:	mov    0x5c(%rsp),%ecx
  42cfc8:	test   %ecx,%ecx
  42cfca:	jne    42d507 <X509_get0_pubkey_bitstr@plt+0x16b37>
  42cfd0:	mov    0x64(%rsp),%edx
  42cfd4:	test   %edx,%edx
  42cfd6:	jne    42d4c9 <X509_get0_pubkey_bitstr@plt+0x16af9>
  42cfdc:	mov    0x60(%rsp),%eax
  42cfe0:	mov    $0x1,%r15d
  42cfe6:	test   %eax,%eax
  42cfe8:	je     42d53a <X509_get0_pubkey_bitstr@plt+0x16b6a>
  42cfee:	mov    %rbp,%rdi
  42cff1:	callq  413960 <BIO_free@plt>
  42cff6:	test   %rbx,%rbx
  42cff9:	je     42d003 <X509_get0_pubkey_bitstr@plt+0x16633>
  42cffb:	mov    %rbx,%rdi
  42cffe:	callq  416570 <BIO_free_all@plt>
  42d003:	test   %r14,%r14
  42d006:	je     42d1a3 <X509_get0_pubkey_bitstr@plt+0x167d3>
  42d00c:	mov    %r14,%rdi
  42d00f:	callq  4159d0 <DSA_free@plt>
  42d014:	jmpq   42d1a3 <X509_get0_pubkey_bitstr@plt+0x167d3>
  42d019:	mov    (%rdx),%rdx
  42d01c:	mov    (%r12),%rdi
  42d020:	lea    0x30d05(%rip),%rsi        # 45dd2c <_fini+0x828>
  42d027:	callq  413c40 <BIO_printf@plt>
  42d02c:	nopl   0x0(%rax)
  42d030:	mov    0x30(%rsp),%rdx
  42d035:	mov    (%r12),%rdi
  42d039:	lea    0x316f8(%rip),%rsi        # 45e738 <_fini+0x1234>
  42d040:	xor    %eax,%eax
  42d042:	callq  413c40 <BIO_printf@plt>
  42d047:	mov    (%r12),%rdi
  42d04b:	lea    0x30d03(%rip),%rsi        # 45dd55 <_fini+0x851>
  42d052:	xor    %eax,%eax
  42d054:	callq  413c40 <BIO_printf@plt>
  42d059:	mov    (%r12),%rdi
  42d05d:	lea    0x369b4(%rip),%rsi        # 463a18 <_fini+0x6514>
  42d064:	xor    %eax,%eax
  42d066:	callq  413c40 <BIO_printf@plt>
  42d06b:	mov    (%r12),%rdi
  42d06f:	lea    0x369d2(%rip),%rsi        # 463a48 <_fini+0x6544>
  42d076:	xor    %eax,%eax
  42d078:	callq  413c40 <BIO_printf@plt>
  42d07d:	mov    (%r12),%rdi
  42d081:	lea    0x36053(%rip),%rsi        # 4630db <_fini+0x5bd7>
  42d088:	xor    %eax,%eax
  42d08a:	callq  413c40 <BIO_printf@plt>
  42d08f:	mov    (%r12),%rdi
  42d093:	lea    0x361ee(%rip),%rsi        # 463288 <_fini+0x5d84>
  42d09a:	xor    %eax,%eax
  42d09c:	callq  413c40 <BIO_printf@plt>
  42d0a1:	mov    (%r12),%rdi
  42d0a5:	lea    0x3604c(%rip),%rsi        # 4630f8 <_fini+0x5bf4>
  42d0ac:	xor    %eax,%eax
  42d0ae:	callq  413c40 <BIO_printf@plt>
  42d0b3:	mov    (%r12),%rdi
  42d0b7:	lea    0x361fa(%rip),%rsi        # 4632b8 <_fini+0x5db4>
  42d0be:	xor    %eax,%eax
  42d0c0:	callq  413c40 <BIO_printf@plt>
  42d0c5:	mov    (%r12),%rdi
  42d0c9:	lea    0x364c0(%rip),%rsi        # 463590 <_fini+0x608c>
  42d0d0:	xor    %eax,%eax
  42d0d2:	callq  413c40 <BIO_printf@plt>
  42d0d7:	mov    (%r12),%rdi
  42d0db:	lea    0x3620e(%rip),%rsi        # 4632f0 <_fini+0x5dec>
  42d0e2:	xor    %eax,%eax
  42d0e4:	callq  413c40 <BIO_printf@plt>
  42d0e9:	mov    (%r12),%rdi
  42d0ed:	lea    0x36234(%rip),%rsi        # 463328 <_fini+0x5e24>
  42d0f4:	xor    %eax,%eax
  42d0f6:	callq  413c40 <BIO_printf@plt>
  42d0fb:	mov    (%r12),%rdi
  42d0ff:	lea    0x3626a(%rip),%rsi        # 463370 <_fini+0x5e6c>
  42d106:	xor    %eax,%eax
  42d108:	callq  413c40 <BIO_printf@plt>
  42d10d:	mov    (%r12),%rdi
  42d111:	lea    0x35ffe(%rip),%rsi        # 463116 <_fini+0x5c12>
  42d118:	xor    %eax,%eax
  42d11a:	callq  413c40 <BIO_printf@plt>
  42d11f:	mov    (%r12),%rdi
  42d123:	lea    0x362b6(%rip),%rsi        # 4633e0 <_fini+0x5edc>
  42d12a:	xor    %eax,%eax
  42d12c:	callq  413c40 <BIO_printf@plt>
  42d131:	mov    (%r12),%rdi
  42d135:	lea    0x362dc(%rip),%rsi        # 463418 <_fini+0x5f14>
  42d13c:	xor    %eax,%eax
  42d13e:	callq  413c40 <BIO_printf@plt>
  42d143:	mov    (%r12),%rdi
  42d147:	lea    0x362fa(%rip),%rsi        # 463448 <_fini+0x5f44>
  42d14e:	xor    %eax,%eax
  42d150:	callq  413c40 <BIO_printf@plt>
  42d155:	mov    (%r12),%rdi
  42d159:	lea    0x36248(%rip),%rsi        # 4633a8 <_fini+0x5ea4>
  42d160:	xor    %eax,%eax
  42d162:	callq  413c40 <BIO_printf@plt>
  42d167:	mov    (%r12),%rdi
  42d16b:	lea    0x3630e(%rip),%rsi        # 463480 <_fini+0x5f7c>
  42d172:	xor    %eax,%eax
  42d174:	callq  413c40 <BIO_printf@plt>
  42d179:	mov    (%r12),%rdi
  42d17d:	lea    0x36324(%rip),%rsi        # 4634a8 <_fini+0x5fa4>
  42d184:	xor    %eax,%eax
  42d186:	callq  413c40 <BIO_printf@plt>
  42d18b:	mov    (%r12),%rdi
  42d18f:	lea    0x368e2(%rip),%rsi        # 463a78 <_fini+0x6574>
  42d196:	xor    %eax,%eax
  42d198:	callq  413c40 <BIO_printf@plt>
  42d19d:	mov    $0x1,%r15d
  42d1a3:	mov    0x78(%rsp),%rdi
  42d1a8:	test   %rdi,%rdi
  42d1ab:	je     42d1b2 <X509_get0_pubkey_bitstr@plt+0x167e2>
  42d1ad:	callq  415020 <CRYPTO_free@plt>
  42d1b2:	mov    0x80(%rsp),%rdi
  42d1ba:	test   %rdi,%rdi
  42d1bd:	je     42d1c4 <X509_get0_pubkey_bitstr@plt+0x167f4>
  42d1bf:	callq  415020 <CRYPTO_free@plt>
  42d1c4:	mov    0x88(%rsp),%rbx
  42d1cc:	xor    %fs:0x28,%rbx
  42d1d5:	mov    %r15d,%eax
  42d1d8:	jne    42d6b7 <X509_get0_pubkey_bitstr@plt+0x16ce7>
  42d1de:	add    $0x98,%rsp
  42d1e5:	pop    %rbx
  42d1e6:	pop    %rbp
  42d1e7:	pop    %r12
  42d1e9:	pop    %r13
  42d1eb:	pop    %r14
  42d1ed:	pop    %r15
  42d1ef:	retq   
  42d1f0:	cmpb   $0x2d,(%r8)
  42d1f4:	jne    42d230 <X509_get0_pubkey_bitstr@plt+0x16860>
  42d1f6:	cmpb   $0x69,0x1(%r8)
  42d1fb:	jne    42d230 <X509_get0_pubkey_bitstr@plt+0x16860>
  42d1fd:	cmpb   $0x6e,0x2(%r8)
  42d202:	jne    42d230 <X509_get0_pubkey_bitstr@plt+0x16860>
  42d204:	cmpb   $0x0,0x3(%r8)
  42d209:	jne    42d230 <X509_get0_pubkey_bitstr@plt+0x16860>
  42d20b:	sub    $0x1,%r15d
  42d20f:	je     42d030 <X509_get0_pubkey_bitstr@plt+0x16660>
  42d215:	mov    0x8(%rdx),%rax
  42d219:	lea    0x8(%rdx),%r13
  42d21d:	mov    %rax,0x18(%rsp)
  42d222:	jmpq   42ce22 <X509_get0_pubkey_bitstr@plt+0x16452>
  42d227:	nopw   0x0(%rax,%rax,1)
  42d230:	lea    0x30c0f(%rip),%rdi        # 45de46 <_fini+0x942>
  42d237:	mov    $0x5,%ecx
  42d23c:	mov    %r8,%rsi
  42d23f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42d241:	jne    42d260 <X509_get0_pubkey_bitstr@plt+0x16890>
  42d243:	sub    $0x1,%r15d
  42d247:	je     42d030 <X509_get0_pubkey_bitstr@plt+0x16660>
  42d24d:	mov    0x8(%rdx),%rax
  42d251:	lea    0x8(%rdx),%r13
  42d255:	mov    %rax,0x20(%rsp)
  42d25a:	jmpq   42ce22 <X509_get0_pubkey_bitstr@plt+0x16452>
  42d25f:	nop
  42d260:	lea    0x30f89(%rip),%rdi        # 45e1f0 <_fini+0xcec>
  42d267:	mov    %r8,%rsi
  42d26a:	mov    %rbx,%rcx
  42d26d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42d26f:	jne    42d290 <X509_get0_pubkey_bitstr@plt+0x168c0>
  42d271:	sub    $0x1,%r15d
  42d275:	je     42d030 <X509_get0_pubkey_bitstr@plt+0x16660>
  42d27b:	mov    0x8(%rdx),%rax
  42d27f:	lea    0x8(%rdx),%r13
  42d283:	mov    %rax,0x28(%rsp)
  42d288:	jmpq   42ce22 <X509_get0_pubkey_bitstr@plt+0x16452>
  42d28d:	nopl   (%rax)
  42d290:	lea    0x30f61(%rip),%rdi        # 45e1f8 <_fini+0xcf4>
  42d297:	mov    $0x9,%ecx
  42d29c:	mov    %r8,%rsi
  42d29f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42d2a1:	je     42d2d0 <X509_get0_pubkey_bitstr@plt+0x16900>
  42d2a3:	lea    0x308b8(%rip),%rdi        # 45db62 <_fini+0x65e>
  42d2aa:	mov    %r8,%rsi
  42d2ad:	mov    %rbx,%rcx
  42d2b0:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42d2b2:	jne    42d2ec <X509_get0_pubkey_bitstr@plt+0x1691c>
  42d2b4:	sub    $0x1,%r15d
  42d2b8:	je     42d030 <X509_get0_pubkey_bitstr@plt+0x16660>
  42d2be:	mov    0x8(%rdx),%rax
  42d2c2:	lea    0x8(%rdx),%r13
  42d2c6:	mov    %rax,0x40(%rsp)
  42d2cb:	jmpq   42ce22 <X509_get0_pubkey_bitstr@plt+0x16452>
  42d2d0:	sub    $0x1,%r15d
  42d2d4:	je     42d030 <X509_get0_pubkey_bitstr@plt+0x16660>
  42d2da:	mov    0x8(%rdx),%rax
  42d2de:	lea    0x8(%rdx),%r13
  42d2e2:	mov    %rax,0x38(%rsp)
  42d2e7:	jmpq   42ce22 <X509_get0_pubkey_bitstr@plt+0x16452>
  42d2ec:	lea    0x35e79(%rip),%rdi        # 46316c <_fini+0x5c68>
  42d2f3:	mov    $0xc,%ecx
  42d2f8:	mov    %r8,%rsi
  42d2fb:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42d2fd:	je     42d3f7 <X509_get0_pubkey_bitstr@plt+0x16a27>
  42d303:	lea    0x35e6e(%rip),%rdi        # 463178 <_fini+0x5c74>
  42d30a:	mov    $0xa,%ecx
  42d30f:	mov    %r8,%rsi
  42d312:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42d314:	je     42d41c <X509_get0_pubkey_bitstr@plt+0x16a4c>
  42d31a:	lea    0x35e61(%rip),%rdi        # 463182 <_fini+0x5c7e>
  42d321:	mov    $0xa,%ecx
  42d326:	mov    %r8,%rsi
  42d329:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42d32b:	je     42d42c <X509_get0_pubkey_bitstr@plt+0x16a5c>
  42d331:	lea    0x309af(%rip),%rdi        # 45dce7 <_fini+0x7e3>
  42d338:	mov    $0x7,%ecx
  42d33d:	mov    %r8,%rsi
  42d340:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42d342:	je     42d4b9 <X509_get0_pubkey_bitstr@plt+0x16ae9>
  42d348:	lea    0x30f18(%rip),%rdi        # 45e267 <_fini+0xd63>
  42d34f:	mov    $0x6,%ecx
  42d354:	mov    %r8,%rsi
  42d357:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42d359:	je     42d5a7 <X509_get0_pubkey_bitstr@plt+0x16bd7>
  42d35f:	lea    0x30ec9(%rip),%rdi        # 45e22f <_fini+0xd2b>
  42d366:	mov    $0x9,%ecx
  42d36b:	mov    %r8,%rsi
  42d36e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42d370:	je     42d6cc <X509_get0_pubkey_bitstr@plt+0x16cfc>
  42d376:	lea    0x35dbd(%rip),%rdi        # 46313a <_fini+0x5c36>
  42d37d:	mov    $0x7,%ecx
  42d382:	mov    %r8,%rsi
  42d385:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42d387:	je     42d6bc <X509_get0_pubkey_bitstr@plt+0x16cec>
  42d38d:	lea    0x35dad(%rip),%rdi        # 463141 <_fini+0x5c3d>
  42d394:	mov    %r8,%rsi
  42d397:	mov    %rbx,%rcx
  42d39a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42d39c:	jne    42d73c <X509_get0_pubkey_bitstr@plt+0x16d6c>
  42d3a2:	mov    %rdx,%r13
  42d3a5:	movl   $0x1,0x58(%rsp)
  42d3ad:	jmpq   42ce22 <X509_get0_pubkey_bitstr@plt+0x16452>
  42d3b2:	nopw   0x0(%rax,%rax,1)
  42d3b8:	callq  4152b0 <BIO_s_file@plt>
  42d3bd:	mov    %rax,%rdi
  42d3c0:	callq  414a20 <BIO_new@plt>
  42d3c5:	test   %rax,%rax
  42d3c8:	mov    %rax,%rdi
  42d3cb:	mov    %rax,(%r12)
  42d3cf:	je     42cd51 <X509_get0_pubkey_bitstr@plt+0x16381>
  42d3d5:	mov    0x248ba4(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  42d3dc:	mov    $0x6a,%esi
  42d3e1:	mov    (%rdx),%rcx
  42d3e4:	mov    $0x10,%edx
  42d3e9:	callq  412af0 <BIO_ctrl@plt>
  42d3ee:	mov    (%r12),%rdi
  42d3f2:	jmpq   42cd51 <X509_get0_pubkey_bitstr@plt+0x16381>
  42d3f7:	mov    %rdx,%r13
  42d3fa:	movl   $0x2,0x48(%rsp)
  42d402:	jmpq   42ce22 <X509_get0_pubkey_bitstr@plt+0x16452>
  42d407:	mov    (%r12),%rdi
  42d40b:	lea    0x30f4e(%rip),%rsi        # 45e360 <_fini+0xe5c>
  42d412:	callq  413c40 <BIO_printf@plt>
  42d417:	jmpq   42d19d <X509_get0_pubkey_bitstr@plt+0x167cd>
  42d41c:	mov    %rdx,%r13
  42d41f:	movl   $0x1,0x48(%rsp)
  42d427:	jmpq   42ce22 <X509_get0_pubkey_bitstr@plt+0x16452>
  42d42c:	mov    %rdx,%r13
  42d42f:	movl   $0x0,0x48(%rsp)
  42d437:	jmpq   42ce22 <X509_get0_pubkey_bitstr@plt+0x16452>
  42d43c:	lea    0x388b3(%rip),%rax        # 465cf6 <_fini+0x87f2>
  42d443:	mov    0x78(%rsp),%r8
  42d448:	mov    0x18(%rsp),%rsi
  42d44d:	mov    %r15d,%edx
  42d450:	mov    %r14,%r9
  42d453:	mov    $0x1,%ecx
  42d458:	mov    %rax,(%rsp)
  42d45c:	mov    (%r12),%rdi
  42d460:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  42d465:	mov    %rax,%rdx
  42d468:	jmpq   42cf69 <X509_get0_pubkey_bitstr@plt+0x16599>
  42d46d:	mov    (%r12),%rdi
  42d471:	xor    %r14d,%r14d
  42d474:	mov    $0x1,%r15d
  42d47a:	callq  413f40 <ERR_print_errors@plt>
  42d47f:	test   %rbp,%rbp
  42d482:	jne    42cfee <X509_get0_pubkey_bitstr@plt+0x1661e>
  42d488:	jmpq   42cff6 <X509_get0_pubkey_bitstr@plt+0x16626>
  42d48d:	nopl   (%rax)
  42d490:	mov    (%r12),%rdi
  42d494:	lea    0x3652f(%rip),%rsi        # 4639ca <_fini+0x64c6>
  42d49b:	xor    %eax,%eax
  42d49d:	xor    %r14d,%r14d
  42d4a0:	mov    $0x1,%r15d
  42d4a6:	callq  413c40 <BIO_printf@plt>
  42d4ab:	mov    (%r12),%rdi
  42d4af:	callq  413f40 <ERR_print_errors@plt>
  42d4b4:	jmpq   42cfee <X509_get0_pubkey_bitstr@plt+0x1661e>
  42d4b9:	mov    %rdx,%r13
  42d4bc:	movl   $0x1,0x60(%rsp)
  42d4c4:	jmpq   42ce22 <X509_get0_pubkey_bitstr@plt+0x16452>
  42d4c9:	mov    0x2489e8(%rip),%r15        # 675eb8 <_fini+0x2189b4>
  42d4d0:	lea    0x36507(%rip),%rdi        # 4639de <_fini+0x64da>
  42d4d7:	mov    $0xb,%edx
  42d4dc:	mov    $0x1,%esi
  42d4e1:	mov    (%r15),%rcx
  42d4e4:	callq  416880 <fwrite@plt>
  42d4e9:	mov    0x30(%r14),%rsi
  42d4ed:	mov    %rbx,%rdi
  42d4f0:	callq  413c20 <BN_print@plt>
  42d4f5:	mov    (%r15),%rsi
  42d4f8:	mov    $0xa,%edi
  42d4fd:	callq  4150b0 <fputc@plt>
  42d502:	jmpq   42cfdc <X509_get0_pubkey_bitstr@plt+0x1660c>
  42d507:	xor    %edx,%edx
  42d509:	mov    %r14,%rsi
  42d50c:	mov    %rbx,%rdi
  42d50f:	callq  414270 <DSA_print@plt>
  42d514:	test   %eax,%eax
  42d516:	jne    42cfd0 <X509_get0_pubkey_bitstr@plt+0x16600>
  42d51c:	mov    0x20(%rsp),%rdi
  42d521:	mov    $0x1,%r15d
  42d527:	callq  4142c0 <perror@plt>
  42d52c:	mov    (%r12),%rdi
  42d530:	callq  413f40 <ERR_print_errors@plt>
  42d535:	jmpq   42cfee <X509_get0_pubkey_bitstr@plt+0x1661e>
  42d53a:	mov    (%r12),%rdi
  42d53e:	lea    0x364a5(%rip),%rsi        # 4639ea <_fini+0x64e6>
  42d545:	xor    %eax,%eax
  42d547:	callq  413c40 <BIO_printf@plt>
  42d54c:	cmpl   $0x1,0x14(%rsp)
  42d551:	je     42d6a0 <X509_get0_pubkey_bitstr@plt+0x16cd0>
  42d557:	cmpl   $0x3,0x14(%rsp)
  42d55c:	je     42d680 <X509_get0_pubkey_bitstr@plt+0x16cb0>
  42d562:	mov    0x14(%rsp),%eax
  42d566:	sub    $0xb,%eax
  42d569:	cmp    $0x1,%eax
  42d56c:	jbe    42d602 <X509_get0_pubkey_bitstr@plt+0x16c32>
  42d572:	mov    (%r12),%rdi
  42d576:	lea    0x31df3(%rip),%rsi        # 45f370 <_fini+0x1e6c>
  42d57d:	xor    %eax,%eax
  42d57f:	callq  413c40 <BIO_printf@plt>
  42d584:	jmpq   42cfee <X509_get0_pubkey_bitstr@plt+0x1661e>
  42d589:	mov    0x248928(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  42d590:	xor    %edx,%edx
  42d592:	mov    $0x6a,%esi
  42d597:	mov    %rbx,%rdi
  42d59a:	mov    (%rax),%rcx
  42d59d:	callq  412af0 <BIO_ctrl@plt>
  42d5a2:	jmpq   42cfc4 <X509_get0_pubkey_bitstr@plt+0x165f4>
  42d5a7:	mov    %rdx,%r13
  42d5aa:	movl   $0x1,0x5c(%rsp)
  42d5b2:	jmpq   42ce22 <X509_get0_pubkey_bitstr@plt+0x16452>
  42d5b7:	mov    0x248952(%rip),%rax        # 675f10 <_fini+0x218a0c>
  42d5be:	xor    %edx,%edx
  42d5c0:	mov    $0x6a,%esi
  42d5c5:	mov    %rbp,%rdi
  42d5c8:	mov    (%rax),%rcx
  42d5cb:	callq  412af0 <BIO_ctrl@plt>
  42d5d0:	jmpq   42cf1f <X509_get0_pubkey_bitstr@plt+0x1654f>
  42d5d5:	mov    0x18(%rsp),%rdi
  42d5da:	xor    %r14d,%r14d
  42d5dd:	mov    $0x1,%r15d
  42d5e3:	callq  4142c0 <perror@plt>
  42d5e8:	jmpq   42cfee <X509_get0_pubkey_bitstr@plt+0x1661e>
  42d5ed:	mov    0x20(%rsp),%rdi
  42d5f2:	mov    $0x1,%r15d
  42d5f8:	callq  4142c0 <perror@plt>
  42d5fd:	jmpq   42cfee <X509_get0_pubkey_bitstr@plt+0x1661e>
  42d602:	callq  414b50 <EVP_PKEY_new@plt>
  42d607:	mov    %r14,%rsi
  42d60a:	mov    %rax,%rdi
  42d60d:	mov    %rax,%r15
  42d610:	callq  414920 <EVP_PKEY_set1_DSA@plt>
  42d615:	cmpl   $0xc,0x14(%rsp)
  42d61a:	je     42d6f5 <X509_get0_pubkey_bitstr@plt+0x16d25>
  42d620:	mov    0x58(%rsp),%eax
  42d624:	or     0x4c(%rsp),%eax
  42d628:	mov    %r15,%rsi
  42d62b:	mov    %rbx,%rdi
  42d62e:	je     42d6e6 <X509_get0_pubkey_bitstr@plt+0x16d16>
  42d634:	callq  4166f0 <i2b_PublicKey_bio@plt>
  42d639:	mov    %r15,%rdi
  42d63c:	mov    %eax,0x14(%rsp)
  42d640:	callq  412b00 <EVP_PKEY_free@plt>
  42d645:	mov    0x14(%rsp),%eax
  42d649:	xor    %r15d,%r15d
  42d64c:	test   %eax,%eax
  42d64e:	jg     42cfee <X509_get0_pubkey_bitstr@plt+0x1661e>
  42d654:	mov    (%r12),%rdi
  42d658:	lea    0x3639c(%rip),%rsi        # 4639fb <_fini+0x64f7>
  42d65f:	xor    %eax,%eax
  42d661:	mov    $0x1,%r15b
  42d664:	callq  413c40 <BIO_printf@plt>
  42d669:	mov    (%r12),%rdi
  42d66d:	callq  413f40 <ERR_print_errors@plt>
  42d672:	jmpq   42cfee <X509_get0_pubkey_bitstr@plt+0x1661e>
  42d677:	nopw   0x0(%rax,%rax,1)
  42d680:	mov    0x58(%rsp),%eax
  42d684:	or     0x4c(%rsp),%eax
  42d688:	je     42d713 <X509_get0_pubkey_bitstr@plt+0x16d43>
  42d68e:	mov    %r14,%rsi
  42d691:	mov    %rbx,%rdi
  42d694:	callq  415fe0 <PEM_write_bio_DSA_PUBKEY@plt>
  42d699:	jmp    42d649 <X509_get0_pubkey_bitstr@plt+0x16c79>
  42d69b:	nopl   0x0(%rax,%rax,1)
  42d6a0:	mov    0x58(%rsp),%eax
  42d6a4:	or     0x4c(%rsp),%eax
  42d6a8:	mov    %r14,%rsi
  42d6ab:	mov    %rbx,%rdi
  42d6ae:	je     42d6dc <X509_get0_pubkey_bitstr@plt+0x16d0c>
  42d6b0:	callq  414f50 <i2d_DSA_PUBKEY_bio@plt>
  42d6b5:	jmp    42d649 <X509_get0_pubkey_bitstr@plt+0x16c79>
  42d6b7:	callq  414c30 <__stack_chk_fail@plt>
  42d6bc:	mov    %rdx,%r13
  42d6bf:	movl   $0x1,0x4c(%rsp)
  42d6c7:	jmpq   42ce22 <X509_get0_pubkey_bitstr@plt+0x16452>
  42d6cc:	mov    %rdx,%r13
  42d6cf:	movl   $0x1,0x64(%rsp)
  42d6d7:	jmpq   42ce22 <X509_get0_pubkey_bitstr@plt+0x16452>
  42d6dc:	callq  415ad0 <i2d_DSAPrivateKey_bio@plt>
  42d6e1:	jmpq   42d649 <X509_get0_pubkey_bitstr@plt+0x16c79>
  42d6e6:	callq  413a80 <i2b_PrivateKey_bio@plt>
  42d6eb:	nopl   0x0(%rax,%rax,1)
  42d6f0:	jmpq   42d639 <X509_get0_pubkey_bitstr@plt+0x16c69>
  42d6f5:	mov    0x80(%rsp),%r8
  42d6fd:	mov    0x48(%rsp),%edx
  42d701:	xor    %ecx,%ecx
  42d703:	mov    %r15,%rsi
  42d706:	mov    %rbx,%rdi
  42d709:	callq  413550 <i2b_PVK_bio@plt>
  42d70e:	jmpq   42d639 <X509_get0_pubkey_bitstr@plt+0x16c69>
  42d713:	mov    0x80(%rsp),%rax
  42d71b:	mov    0x50(%rsp),%rdx
  42d720:	xor    %r9d,%r9d
  42d723:	xor    %r8d,%r8d
  42d726:	xor    %ecx,%ecx
  42d728:	mov    %r14,%rsi
  42d72b:	mov    %rbx,%rdi
  42d72e:	mov    %rax,(%rsp)
  42d732:	callq  415000 <PEM_write_bio_DSAPrivateKey@plt>
  42d737:	jmpq   42d649 <X509_get0_pubkey_bitstr@plt+0x16c79>
  42d73c:	lea    0x1(%r8),%rdi
  42d740:	mov    %rdx,0x68(%rsp)
  42d745:	callq  416810 <EVP_get_cipherbyname@plt>
  42d74a:	test   %rax,%rax
  42d74d:	mov    %rax,0x50(%rsp)
  42d752:	mov    0x68(%rsp),%rdx
  42d757:	je     42d019 <X509_get0_pubkey_bitstr@plt+0x16649>
  42d75d:	mov    %rdx,%r13
  42d760:	jmpq   42ce22 <X509_get0_pubkey_bitstr@plt+0x16452>
  42d765:	nopw   %cs:0x0(%rax,%rax,1)
  42d76f:	nop
  42d770:	push   %rbx
  42d771:	mov    %rdx,%rbx
  42d774:	sub    $0x10,%rsp
  42d778:	mov    %fs:0x28,%rax
  42d781:	mov    %rax,0x8(%rsp)
  42d786:	xor    %eax,%eax
  42d788:	test   %edi,%edi
  42d78a:	movb   $0x2a,0x7(%rsp)
  42d78f:	jne    42d7e0 <X509_get0_pubkey_bitstr@plt+0x16e10>
  42d791:	movb   $0x2e,0x7(%rsp)
  42d796:	mov    0x8(%rbx),%rdi
  42d79a:	lea    0x7(%rsp),%rsi
  42d79f:	mov    $0x1,%edx
  42d7a4:	callq  412db0 <BIO_write@plt>
  42d7a9:	mov    0x8(%rbx),%rdi
  42d7ad:	xor    %ecx,%ecx
  42d7af:	xor    %edx,%edx
  42d7b1:	mov    $0xb,%esi
  42d7b6:	callq  412af0 <BIO_ctrl@plt>
  42d7bb:	mov    0x8(%rsp),%rcx
  42d7c0:	xor    %fs:0x28,%rcx
  42d7c9:	mov    $0x1,%eax
  42d7ce:	jne    42d801 <X509_get0_pubkey_bitstr@plt+0x16e31>
  42d7d0:	add    $0x10,%rsp
  42d7d4:	pop    %rbx
  42d7d5:	retq   
  42d7d6:	nopw   %cs:0x0(%rax,%rax,1)
  42d7e0:	cmp    $0x1,%edi
  42d7e3:	jne    42d7f0 <X509_get0_pubkey_bitstr@plt+0x16e20>
  42d7e5:	movb   $0x2b,0x7(%rsp)
  42d7ea:	jmp    42d796 <X509_get0_pubkey_bitstr@plt+0x16dc6>
  42d7ec:	nopl   0x0(%rax)
  42d7f0:	cmp    $0x2,%edi
  42d7f3:	je     42d796 <X509_get0_pubkey_bitstr@plt+0x16dc6>
  42d7f5:	cmp    $0x3,%edi
  42d7f8:	jne    42d796 <X509_get0_pubkey_bitstr@plt+0x16dc6>
  42d7fa:	movb   $0xa,0x7(%rsp)
  42d7ff:	jmp    42d796 <X509_get0_pubkey_bitstr@plt+0x16dc6>
  42d801:	callq  414c30 <__stack_chk_fail@plt>
  42d806:	nopw   %cs:0x0(%rax,%rax,1)
  42d810:	push   %r15
  42d812:	push   %r14
  42d814:	push   %r13
  42d816:	push   %r12
  42d818:	mov    %edi,%r12d
  42d81b:	mov    $0xd,%edi
  42d820:	push   %rbp
  42d821:	mov    %rsi,%rbp
  42d824:	mov    $0x1,%esi
  42d829:	push   %rbx
  42d82a:	sub    $0x98,%rsp
  42d831:	mov    %fs:0x28,%rax
  42d83a:	mov    %rax,0x88(%rsp)
  42d842:	xor    %eax,%eax
  42d844:	callq  414ee0 <signal@plt>
  42d849:	lea    0x24d4f0(%rip),%rbx        # 67ad40 <_edata+0x38>
  42d850:	mov    (%rbx),%rdi
  42d853:	test   %rdi,%rdi
  42d856:	je     42dd7e <X509_get0_pubkey_bitstr@plt+0x173ae>
  42d85c:	xor    %esi,%esi
  42d85e:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  42d863:	test   %eax,%eax
  42d865:	je     42dc0a <X509_get0_pubkey_bitstr@plt+0x1723a>
  42d86b:	mov    0x0(%rbp),%rax
  42d86f:	lea    -0x1(%r12),%r13d
  42d874:	lea    0x8(%rbp),%r9
  42d878:	movq   $0x0,0x20(%rsp)
  42d881:	movl   $0x0,0x38(%rsp)
  42d889:	mov    $0x3,%r15d
  42d88f:	test   %r13d,%r13d
  42d892:	movl   $0x0,0x50(%rsp)
  42d89a:	movl   $0xffffffff,0x44(%rsp)
  42d8a2:	mov    %rax,0x28(%rsp)
  42d8a7:	movq   $0x0,0x48(%rsp)
  42d8b0:	mov    $0x3,%ebp
  42d8b5:	movq   $0x0,0x18(%rsp)
  42d8be:	movq   $0x0,0x10(%rsp)
  42d8c7:	movl   $0x0,0x40(%rsp)
  42d8cf:	movl   $0x0,0x54(%rsp)
  42d8d7:	movl   $0x0,0x34(%rsp)
  42d8df:	jle    42d976 <X509_get0_pubkey_bitstr@plt+0x16fa6>
  42d8e5:	lea    0x6c(%rsp),%rax
  42d8ea:	lea    0x303ee(%rip),%r12        # 45dcdf <_fini+0x7db>
  42d8f1:	mov    %rax,0x58(%rsp)
  42d8f6:	jmp    42d926 <X509_get0_pubkey_bitstr@plt+0x16f56>
  42d8f8:	nopl   0x0(%rax,%rax,1)
  42d900:	sub    $0x1,%r13d
  42d904:	je     42db28 <X509_get0_pubkey_bitstr@plt+0x17158>
  42d90a:	mov    0x8(%r9),%rdi
  42d90e:	lea    0x8(%r9),%r14
  42d912:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  42d917:	mov    %eax,%ebp
  42d919:	sub    $0x1,%r13d
  42d91d:	lea    0x8(%r14),%r9
  42d921:	test   %r13d,%r13d
  42d924:	jle    42d976 <X509_get0_pubkey_bitstr@plt+0x16fa6>
  42d926:	mov    (%r9),%r8
  42d929:	mov    $0x8,%ecx
  42d92e:	mov    %r12,%rdi
  42d931:	mov    %r8,%rsi
  42d934:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42d936:	je     42d900 <X509_get0_pubkey_bitstr@plt+0x16f30>
  42d938:	lea    0x30851(%rip),%rdi        # 45e190 <_fini+0xc8c>
  42d93f:	mov    $0x9,%ecx
  42d944:	mov    %r8,%rsi
  42d947:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42d949:	jne    42dc40 <X509_get0_pubkey_bitstr@plt+0x17270>
  42d94f:	sub    $0x1,%r13d
  42d953:	je     42db28 <X509_get0_pubkey_bitstr@plt+0x17158>
  42d959:	mov    0x8(%r9),%rdi
  42d95d:	lea    0x8(%r9),%r14
  42d961:	sub    $0x1,%r13d
  42d965:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  42d96a:	test   %r13d,%r13d
  42d96d:	mov    %eax,%r15d
  42d970:	lea    0x8(%r14),%r9
  42d974:	jg     42d926 <X509_get0_pubkey_bitstr@plt+0x16f56>
  42d976:	callq  416990 <ERR_load_crypto_strings@plt>
  42d97b:	callq  4152b0 <BIO_s_file@plt>
  42d980:	mov    %rax,%rdi
  42d983:	callq  414a20 <BIO_new@plt>
  42d988:	mov    %rax,%r13
  42d98b:	callq  4152b0 <BIO_s_file@plt>
  42d990:	mov    %rax,%rdi
  42d993:	callq  414a20 <BIO_new@plt>
  42d998:	test   %rax,%rax
  42d99b:	mov    %rax,%r12
  42d99e:	je     42ddd8 <X509_get0_pubkey_bitstr@plt+0x17408>
  42d9a4:	test   %r13,%r13
  42d9a7:	je     42ddd8 <X509_get0_pubkey_bitstr@plt+0x17408>
  42d9ad:	cmpq   $0x0,0x10(%rsp)
  42d9b3:	je     42de3f <X509_get0_pubkey_bitstr@plt+0x1746f>
  42d9b9:	mov    0x10(%rsp),%rcx
  42d9be:	mov    $0x3,%edx
  42d9c3:	mov    $0x6c,%esi
  42d9c8:	mov    %r13,%rdi
  42d9cb:	callq  412af0 <BIO_ctrl@plt>
  42d9d0:	test   %rax,%rax
  42d9d3:	jle    42e0c0 <X509_get0_pubkey_bitstr@plt+0x176f0>
  42d9d9:	cmpq   $0x0,0x18(%rsp)
  42d9df:	je     42e0a2 <X509_get0_pubkey_bitstr@plt+0x176d2>
  42d9e5:	mov    0x18(%rsp),%rcx
  42d9ea:	mov    $0x5,%edx
  42d9ef:	mov    $0x6c,%esi
  42d9f4:	mov    %r12,%rdi
  42d9f7:	callq  412af0 <BIO_ctrl@plt>
  42d9fc:	test   %rax,%rax
  42d9ff:	jle    42e2f6 <X509_get0_pubkey_bitstr@plt+0x17926>
  42da05:	mov    0x20(%rsp),%rsi
  42da0a:	mov    (%rbx),%rdi
  42da0d:	xor    %edx,%edx
  42da0f:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  42da14:	mov    0x38(%rsp),%eax
  42da18:	test   %eax,%eax
  42da1a:	jne    42df04 <X509_get0_pubkey_bitstr@plt+0x17534>
  42da20:	mov    0x44(%rsp),%r14d
  42da25:	test   %r14d,%r14d
  42da28:	jle    42ded4 <X509_get0_pubkey_bitstr@plt+0x17504>
  42da2e:	mov    (%rbx),%rax
  42da31:	mov    0x38(%rsp),%ebp
  42da35:	movl   $0x2,0x70(%rsp)
  42da3d:	mov    %rax,0x78(%rsp)
  42da42:	lea    -0x2d9(%rip),%rax        # 42d770 <X509_get0_pubkey_bitstr@plt+0x16da0>
  42da49:	test   %ebp,%ebp
  42da4b:	mov    %rax,0x80(%rsp)
  42da53:	je     42e424 <X509_get0_pubkey_bitstr@plt+0x17a54>
  42da59:	callq  4165b0 <DSA_new@plt>
  42da5e:	test   %rax,%rax
  42da61:	mov    %rax,%r14
  42da64:	je     42e30d <X509_get0_pubkey_bitstr@plt+0x1793d>
  42da6a:	mov    0x6c(%rsp),%edx
  42da6e:	mov    (%rbx),%rdi
  42da71:	lea    0x32560(%rip),%rsi        # 45ffd8 <_fini+0x2ad4>
  42da78:	xor    %eax,%eax
  42da7a:	callq  413c40 <BIO_printf@plt>
  42da7f:	mov    (%rbx),%rdi
  42da82:	lea    0x36074(%rip),%rsi        # 463afd <_fini+0x65f9>
  42da89:	xor    %eax,%eax
  42da8b:	callq  413c40 <BIO_printf@plt>
  42da90:	lea    0x70(%rsp),%rax
  42da95:	mov    0x6c(%rsp),%esi
  42da99:	xor    %r9d,%r9d
  42da9c:	xor    %r8d,%r8d
  42da9f:	xor    %ecx,%ecx
  42daa1:	xor    %edx,%edx
  42daa3:	mov    %rax,(%rsp)
  42daa7:	mov    %r14,%rdi
  42daaa:	callq  414c80 <DSA_generate_parameters_ex@plt>
  42daaf:	test   %eax,%eax
  42dab1:	je     42df89 <X509_get0_pubkey_bitstr@plt+0x175b9>
  42dab7:	mov    0x34(%rsp),%r11d
  42dabc:	test   %r11d,%r11d
  42dabf:	jne    42e092 <X509_get0_pubkey_bitstr@plt+0x176c2>
  42dac5:	mov    0x40(%rsp),%r10d
  42daca:	test   %r10d,%r10d
  42dacd:	jne    42dfac <X509_get0_pubkey_bitstr@plt+0x175dc>
  42dad3:	mov    0x54(%rsp),%esi
  42dad7:	test   %esi,%esi
  42dad9:	jne    42de5d <X509_get0_pubkey_bitstr@plt+0x1748d>
  42dadf:	cmp    $0x1,%r15d
  42dae3:	je     42e3f6 <X509_get0_pubkey_bitstr@plt+0x17a26>
  42dae9:	cmp    $0x3,%r15d
  42daed:	je     42e35b <X509_get0_pubkey_bitstr@plt+0x1798b>
  42daf3:	mov    (%rbx),%rdi
  42daf6:	lea    0x31873(%rip),%rsi        # 45f370 <_fini+0x1e6c>
  42dafd:	xor    %eax,%eax
  42daff:	mov    $0x1,%ebp
  42db04:	callq  413c40 <BIO_printf@plt>
  42db09:	jmpq   42dded <X509_get0_pubkey_bitstr@plt+0x1741d>
  42db0e:	mov    (%r9),%rdx
  42db11:	mov    (%rbx),%rdi
  42db14:	lea    0x30211(%rip),%rsi        # 45dd2c <_fini+0x828>
  42db1b:	xor    %eax,%eax
  42db1d:	callq  413c40 <BIO_printf@plt>
  42db22:	nopw   0x0(%rax,%rax,1)
  42db28:	mov    0x28(%rsp),%rdx
  42db2d:	mov    (%rbx),%rdi
  42db30:	lea    0x36019(%rip),%rsi        # 463b50 <_fini+0x664c>
  42db37:	xor    %eax,%eax
  42db39:	callq  413c40 <BIO_printf@plt>
  42db3e:	mov    (%rbx),%rdi
  42db41:	lea    0x3020d(%rip),%rsi        # 45dd55 <_fini+0x851>
  42db48:	xor    %eax,%eax
  42db4a:	callq  413c40 <BIO_printf@plt>
  42db4f:	mov    (%rbx),%rdi
  42db52:	lea    0x34f37(%rip),%rsi        # 462a90 <_fini+0x558c>
  42db59:	xor    %eax,%eax
  42db5b:	callq  413c40 <BIO_printf@plt>
  42db60:	mov    (%rbx),%rdi
  42db63:	lea    0x34f56(%rip),%rsi        # 462ac0 <_fini+0x55bc>
  42db6a:	xor    %eax,%eax
  42db6c:	callq  413c40 <BIO_printf@plt>
  42db71:	mov    (%rbx),%rdi
  42db74:	lea    0x301ed(%rip),%rsi        # 45dd68 <_fini+0x864>
  42db7b:	xor    %eax,%eax
  42db7d:	callq  413c40 <BIO_printf@plt>
  42db82:	mov    (%rbx),%rdi
  42db85:	lea    0x31e5f(%rip),%rsi        # 45f9eb <_fini+0x24e7>
  42db8c:	xor    %eax,%eax
  42db8e:	callq  413c40 <BIO_printf@plt>
  42db93:	mov    (%rbx),%rdi
  42db96:	lea    0x35f10(%rip),%rsi        # 463aad <_fini+0x65a9>
  42db9d:	xor    %eax,%eax
  42db9f:	callq  413c40 <BIO_printf@plt>
  42dba4:	mov    (%rbx),%rdi
  42dba7:	lea    0x31e59(%rip),%rsi        # 45fa07 <_fini+0x2503>
  42dbae:	xor    %eax,%eax
  42dbb0:	callq  413c40 <BIO_printf@plt>
  42dbb5:	mov    (%rbx),%rdi
  42dbb8:	lea    0x31e66(%rip),%rsi        # 45fa25 <_fini+0x2521>
  42dbbf:	xor    %eax,%eax
  42dbc1:	callq  413c40 <BIO_printf@plt>
  42dbc6:	mov    (%rbx),%rdi
  42dbc9:	lea    0x35fa8(%rip),%rsi        # 463b78 <_fini+0x6674>
  42dbd0:	xor    %eax,%eax
  42dbd2:	callq  413c40 <BIO_printf@plt>
  42dbd7:	mov    (%rbx),%rdi
  42dbda:	lea    0x35fbf(%rip),%rsi        # 463ba0 <_fini+0x669c>
  42dbe1:	xor    %eax,%eax
  42dbe3:	callq  413c40 <BIO_printf@plt>
  42dbe8:	mov    (%rbx),%rdi
  42dbeb:	lea    0x31fb6(%rip),%rsi        # 45fba8 <_fini+0x26a4>
  42dbf2:	xor    %eax,%eax
  42dbf4:	callq  413c40 <BIO_printf@plt>
  42dbf9:	mov    (%rbx),%rdi
  42dbfc:	lea    0x35fd5(%rip),%rsi        # 463bd8 <_fini+0x66d4>
  42dc03:	xor    %eax,%eax
  42dc05:	callq  413c40 <BIO_printf@plt>
  42dc0a:	mov    $0x1,%ebp
  42dc0f:	mov    0x88(%rsp),%rbx
  42dc17:	xor    %fs:0x28,%rbx
  42dc20:	mov    %ebp,%eax
  42dc22:	jne    42e3f1 <X509_get0_pubkey_bitstr@plt+0x17a21>
  42dc28:	add    $0x98,%rsp
  42dc2f:	pop    %rbx
  42dc30:	pop    %rbp
  42dc31:	pop    %r12
  42dc33:	pop    %r13
  42dc35:	pop    %r14
  42dc37:	pop    %r15
  42dc39:	retq   
  42dc3a:	nopw   0x0(%rax,%rax,1)
  42dc40:	movzbl (%r8),%eax
  42dc44:	sub    $0x2d,%eax
  42dc47:	jne    42dc80 <X509_get0_pubkey_bitstr@plt+0x172b0>
  42dc49:	cmpb   $0x69,0x1(%r8)
  42dc4e:	jne    42dc80 <X509_get0_pubkey_bitstr@plt+0x172b0>
  42dc50:	cmpb   $0x6e,0x2(%r8)
  42dc55:	jne    42dc80 <X509_get0_pubkey_bitstr@plt+0x172b0>
  42dc57:	cmpb   $0x0,0x3(%r8)
  42dc5c:	jne    42dc80 <X509_get0_pubkey_bitstr@plt+0x172b0>
  42dc5e:	sub    $0x1,%r13d
  42dc62:	je     42db28 <X509_get0_pubkey_bitstr@plt+0x17158>
  42dc68:	mov    0x8(%r9),%rax
  42dc6c:	lea    0x8(%r9),%r14
  42dc70:	mov    %rax,0x10(%rsp)
  42dc75:	jmpq   42d919 <X509_get0_pubkey_bitstr@plt+0x16f49>
  42dc7a:	nopw   0x0(%rax,%rax,1)
  42dc80:	lea    0x301bf(%rip),%rdi        # 45de46 <_fini+0x942>
  42dc87:	mov    $0x5,%ecx
  42dc8c:	mov    %r8,%rsi
  42dc8f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42dc91:	jne    42dcb0 <X509_get0_pubkey_bitstr@plt+0x172e0>
  42dc93:	sub    $0x1,%r13d
  42dc97:	je     42db28 <X509_get0_pubkey_bitstr@plt+0x17158>
  42dc9d:	mov    0x8(%r9),%rax
  42dca1:	lea    0x8(%r9),%r14
  42dca5:	mov    %rax,0x18(%rsp)
  42dcaa:	jmpq   42d919 <X509_get0_pubkey_bitstr@plt+0x16f49>
  42dcaf:	nop
  42dcb0:	lea    0x2feab(%rip),%rdi        # 45db62 <_fini+0x65e>
  42dcb7:	mov    $0x8,%ecx
  42dcbc:	mov    %r8,%rsi
  42dcbf:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42dcc1:	jne    42dce0 <X509_get0_pubkey_bitstr@plt+0x17310>
  42dcc3:	sub    $0x1,%r13d
  42dcc7:	je     42db28 <X509_get0_pubkey_bitstr@plt+0x17158>
  42dccd:	mov    0x8(%r9),%rax
  42dcd1:	lea    0x8(%r9),%r14
  42dcd5:	mov    %rax,0x20(%rsp)
  42dcda:	jmpq   42d919 <X509_get0_pubkey_bitstr@plt+0x16f49>
  42dcdf:	nop
  42dce0:	lea    0x30580(%rip),%rdi        # 45e267 <_fini+0xd63>
  42dce7:	mov    $0x6,%ecx
  42dcec:	mov    %r8,%rsi
  42dcef:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42dcf1:	je     42dd18 <X509_get0_pubkey_bitstr@plt+0x17348>
  42dcf3:	test   %eax,%eax
  42dcf5:	jne    42dd30 <X509_get0_pubkey_bitstr@plt+0x17360>
  42dcf7:	cmpb   $0x43,0x1(%r8)
  42dcfc:	jne    42dd30 <X509_get0_pubkey_bitstr@plt+0x17360>
  42dcfe:	cmpb   $0x0,0x2(%r8)
  42dd03:	jne    42dd30 <X509_get0_pubkey_bitstr@plt+0x17360>
  42dd05:	mov    %r9,%r14
  42dd08:	movl   $0x1,0x40(%rsp)
  42dd10:	jmpq   42d919 <X509_get0_pubkey_bitstr@plt+0x16f49>
  42dd15:	nopl   (%rax)
  42dd18:	mov    %r9,%r14
  42dd1b:	movl   $0x1,0x34(%rsp)
  42dd23:	jmpq   42d919 <X509_get0_pubkey_bitstr@plt+0x16f49>
  42dd28:	nopl   0x0(%rax,%rax,1)
  42dd30:	lea    0x35d6e(%rip),%rdi        # 463aa5 <_fini+0x65a1>
  42dd37:	mov    $0x8,%ecx
  42dd3c:	mov    %r8,%rsi
  42dd3f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42dd41:	je     42ddbb <X509_get0_pubkey_bitstr@plt+0x173eb>
  42dd43:	lea    0x304b7(%rip),%rdi        # 45e201 <_fini+0xcfd>
  42dd4a:	mov    $0x6,%ecx
  42dd4f:	mov    %r8,%rsi
  42dd52:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42dd54:	jne    42de18 <X509_get0_pubkey_bitstr@plt+0x17448>
  42dd5a:	sub    $0x1,%r13d
  42dd5e:	je     42db28 <X509_get0_pubkey_bitstr@plt+0x17158>
  42dd64:	mov    0x8(%r9),%rax
  42dd68:	lea    0x8(%r9),%r14
  42dd6c:	movl   $0x1,0x38(%rsp)
  42dd74:	mov    %rax,0x48(%rsp)
  42dd79:	jmpq   42d919 <X509_get0_pubkey_bitstr@plt+0x16f49>
  42dd7e:	callq  4152b0 <BIO_s_file@plt>
  42dd83:	mov    %rax,%rdi
  42dd86:	callq  414a20 <BIO_new@plt>
  42dd8b:	test   %rax,%rax
  42dd8e:	mov    %rax,%rdi
  42dd91:	mov    %rax,(%rbx)
  42dd94:	je     42d85c <X509_get0_pubkey_bitstr@plt+0x16e8c>
  42dd9a:	mov    0x2481df(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  42dda1:	mov    $0x6a,%esi
  42dda6:	mov    (%rdx),%rcx
  42dda9:	mov    $0x10,%edx
  42ddae:	callq  412af0 <BIO_ctrl@plt>
  42ddb3:	mov    (%rbx),%rdi
  42ddb6:	jmpq   42d85c <X509_get0_pubkey_bitstr@plt+0x16e8c>
  42ddbb:	mov    %r9,%r14
  42ddbe:	movl   $0x1,0x38(%rsp)
  42ddc6:	movl   $0x1,0x50(%rsp)
  42ddce:	jmpq   42d919 <X509_get0_pubkey_bitstr@plt+0x16f49>
  42ddd3:	nopl   0x0(%rax,%rax,1)
  42ddd8:	mov    (%rbx),%rdi
  42dddb:	xor    %r14d,%r14d
  42ddde:	mov    $0x1,%ebp
  42dde3:	callq  413f40 <ERR_print_errors@plt>
  42dde8:	test   %r13,%r13
  42ddeb:	je     42ddf5 <X509_get0_pubkey_bitstr@plt+0x17425>
  42dded:	mov    %r13,%rdi
  42ddf0:	callq  413960 <BIO_free@plt>
  42ddf5:	test   %r12,%r12
  42ddf8:	je     42de02 <X509_get0_pubkey_bitstr@plt+0x17432>
  42ddfa:	mov    %r12,%rdi
  42ddfd:	callq  416570 <BIO_free_all@plt>
  42de02:	test   %r14,%r14
  42de05:	je     42dc0f <X509_get0_pubkey_bitstr@plt+0x1723f>
  42de0b:	mov    %r14,%rdi
  42de0e:	callq  4159d0 <DSA_free@plt>
  42de13:	jmpq   42dc0f <X509_get0_pubkey_bitstr@plt+0x1723f>
  42de18:	lea    0x2fec8(%rip),%rdi        # 45dce7 <_fini+0x7e3>
  42de1f:	mov    $0x7,%ecx
  42de24:	mov    %r8,%rsi
  42de27:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42de29:	jne    42df48 <X509_get0_pubkey_bitstr@plt+0x17578>
  42de2f:	mov    %r9,%r14
  42de32:	movl   $0x1,0x54(%rsp)
  42de3a:	jmpq   42d919 <X509_get0_pubkey_bitstr@plt+0x16f49>
  42de3f:	mov    0x2480ca(%rip),%rax        # 675f10 <_fini+0x218a0c>
  42de46:	xor    %edx,%edx
  42de48:	mov    $0x6a,%esi
  42de4d:	mov    %r13,%rdi
  42de50:	mov    (%rax),%rcx
  42de53:	callq  412af0 <BIO_ctrl@plt>
  42de58:	jmpq   42d9d9 <X509_get0_pubkey_bitstr@plt+0x17009>
  42de5d:	mov    0x50(%rsp),%ecx
  42de61:	test   %ecx,%ecx
  42de63:	je     42e0d7 <X509_get0_pubkey_bitstr@plt+0x17707>
  42de69:	mov    0x38(%rsp),%edx
  42de6d:	test   %edx,%edx
  42de6f:	je     42e452 <X509_get0_pubkey_bitstr@plt+0x17a82>
  42de75:	mov    %r14,%rdi
  42de78:	mov    $0x1,%ebp
  42de7d:	callq  414f60 <DSAparams_dup@plt>
  42de82:	test   %rax,%rax
  42de85:	mov    %rax,%rdi
  42de88:	mov    %rax,0x10(%rsp)
  42de8d:	je     42dded <X509_get0_pubkey_bitstr@plt+0x1741d>
  42de93:	callq  414be0 <DSA_generate_key@plt>
  42de98:	test   %eax,%eax
  42de9a:	je     42e40d <X509_get0_pubkey_bitstr@plt+0x17a3d>
  42dea0:	cmp    $0x1,%r15d
  42dea4:	je     42e443 <X509_get0_pubkey_bitstr@plt+0x17a73>
  42deaa:	cmp    $0x3,%r15d
  42deae:	je     42e3c3 <X509_get0_pubkey_bitstr@plt+0x179f3>
  42deb4:	mov    (%rbx),%rdi
  42deb7:	lea    0x314b2(%rip),%rsi        # 45f370 <_fini+0x1e6c>
  42debe:	xor    %eax,%eax
  42dec0:	callq  413c40 <BIO_printf@plt>
  42dec5:	mov    0x10(%rsp),%rdi
  42deca:	callq  4159d0 <DSA_free@plt>
  42decf:	jmpq   42dded <X509_get0_pubkey_bitstr@plt+0x1741d>
  42ded4:	cmp    $0x1,%ebp
  42ded7:	je     42e3a3 <X509_get0_pubkey_bitstr@plt+0x179d3>
  42dedd:	cmp    $0x3,%ebp
  42dee0:	je     42e323 <X509_get0_pubkey_bitstr@plt+0x17953>
  42dee6:	mov    (%rbx),%rdi
  42dee9:	lea    0x31b4f(%rip),%rsi        # 45fa3f <_fini+0x253b>
  42def0:	xor    %eax,%eax
  42def2:	mov    $0x1,%ebp
  42def7:	xor    %r14d,%r14d
  42defa:	callq  413c40 <BIO_printf@plt>
  42deff:	jmpq   42dded <X509_get0_pubkey_bitstr@plt+0x1741d>
  42df04:	cmpq   $0x0,0x48(%rsp)
  42df0a:	mov    (%rbx),%rsi
  42df0d:	setne  %r14b
  42df11:	xor    %edi,%edi
  42df13:	movzbl %r14b,%edx
  42df17:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  42df1c:	test   %r14b,%r14b
  42df1f:	je     42da20 <X509_get0_pubkey_bitstr@plt+0x17050>
  42df25:	mov    0x48(%rsp),%rdi
  42df2a:	callq  44a710 <X509_get0_pubkey_bitstr@plt+0x33d40>
  42df2f:	mov    (%rbx),%rdi
  42df32:	lea    0x31e58(%rip),%rsi        # 45fd91 <_fini+0x288d>
  42df39:	mov    %rax,%rdx
  42df3c:	xor    %eax,%eax
  42df3e:	callq  413c40 <BIO_printf@plt>
  42df43:	jmpq   42da20 <X509_get0_pubkey_bitstr@plt+0x17050>
  42df48:	mov    0x58(%rsp),%rdx
  42df4d:	lea    0x3baf3(%rip),%rsi        # 469a47 <_fini+0xc543>
  42df54:	xor    %eax,%eax
  42df56:	mov    %r8,%rdi
  42df59:	mov    %r9,0x38(%rsp)
  42df5e:	callq  4147b0 <__isoc99_sscanf@plt>
  42df63:	cmp    $0x1,%eax
  42df66:	mov    0x38(%rsp),%r9
  42df6b:	jne    42db0e <X509_get0_pubkey_bitstr@plt+0x1713e>
  42df71:	mov    0x6c(%rsp),%eax
  42df75:	mov    %r9,%r14
  42df78:	movl   $0x1,0x38(%rsp)
  42df80:	mov    %eax,0x44(%rsp)
  42df84:	jmpq   42d919 <X509_get0_pubkey_bitstr@plt+0x16f49>
  42df89:	mov    (%rbx),%rdi
  42df8c:	callq  413f40 <ERR_print_errors@plt>
  42df91:	mov    (%rbx),%rdi
  42df94:	lea    0x35c85(%rip),%rsi        # 463c20 <_fini+0x671c>
  42df9b:	xor    %eax,%eax
  42df9d:	callq  413c40 <BIO_printf@plt>
  42dfa2:	mov    $0x1,%ebp
  42dfa7:	jmpq   42dded <X509_get0_pubkey_bitstr@plt+0x1741d>
  42dfac:	mov    0x18(%r14),%rdi
  42dfb0:	callq  415810 <BN_num_bits@plt>
  42dfb5:	mov    0x18(%r14),%rdi
  42dfb9:	mov    %eax,%ebp
  42dfbb:	callq  415810 <BN_num_bits@plt>
  42dfc0:	mov    %eax,0x18(%rsp)
  42dfc4:	lea    0xe(%rbp),%eax
  42dfc7:	add    $0x7,%ebp
  42dfca:	lea    0x35afa(%rip),%rsi        # 463acb <_fini+0x65c7>
  42dfd1:	mov    $0x16a,%edx
  42dfd6:	cmovns %ebp,%eax
  42dfd9:	sar    $0x3,%eax
  42dfdc:	lea    0x14(%rax),%edi
  42dfdf:	callq  413d50 <CRYPTO_malloc@plt>
  42dfe4:	test   %rax,%rax
  42dfe7:	mov    %rax,%rbp
  42dfea:	je     42e38f <X509_get0_pubkey_bitstr@plt+0x179bf>
  42dff0:	mov    0x18(%r14),%rdi
  42dff4:	mov    %rax,%rsi
  42dff7:	callq  413390 <BN_bn2bin@plt>
  42dffc:	mov    0x18(%rsp),%edx
  42e000:	lea    0x35c41(%rip),%rsi        # 463c48 <_fini+0x6744>
  42e007:	mov    %eax,0x10(%rsp)
  42e00b:	mov    $0x1,%edi
  42e010:	xor    %eax,%eax
  42e012:	callq  412780 <__printf_chk@plt>
  42e017:	mov    0x10(%rsp),%r9d
  42e01c:	xor    %ecx,%ecx
  42e01e:	test   %r9d,%r9d
  42e021:	jle    42e0fb <X509_get0_pubkey_bitstr@plt+0x1772b>
  42e027:	mov    %r12,0x20(%rsp)
  42e02c:	mov    %rcx,%r12
  42e02f:	jmp    42e060 <X509_get0_pubkey_bitstr@plt+0x17690>
  42e031:	nopl   0x0(%rax)
  42e038:	movzbl 0x0(%rbp,%r12,1),%edx
  42e03e:	lea    0x31a81(%rip),%rsi        # 45fac6 <_fini+0x25c2>
  42e045:	xor    %eax,%eax
  42e047:	mov    $0x1,%edi
  42e04c:	add    $0x1,%r12
  42e050:	callq  412780 <__printf_chk@plt>
  42e055:	cmp    %r12d,0x10(%rsp)
  42e05a:	jle    42e0f6 <X509_get0_pubkey_bitstr@plt+0x17726>
  42e060:	mov    $0x2aaaaaab,%eax
  42e065:	imul   %r12d
  42e068:	mov    %r12d,%eax
  42e06b:	sar    $0x1f,%eax
  42e06e:	sar    %edx
  42e070:	sub    %eax,%edx
  42e072:	lea    (%rdx,%rdx,2),%eax
  42e075:	shl    $0x2,%eax
  42e078:	cmp    %eax,%r12d
  42e07b:	jne    42e038 <X509_get0_pubkey_bitstr@plt+0x17668>
  42e07d:	lea    0x31a3f(%rip),%rsi        # 45fac3 <_fini+0x25bf>
  42e084:	mov    $0x1,%edi
  42e089:	xor    %eax,%eax
  42e08b:	callq  412780 <__printf_chk@plt>
  42e090:	jmp    42e038 <X509_get0_pubkey_bitstr@plt+0x17668>
  42e092:	mov    %r14,%rsi
  42e095:	mov    %r12,%rdi
  42e098:	callq  413330 <DSAparams_print@plt>
  42e09d:	jmpq   42dac5 <X509_get0_pubkey_bitstr@plt+0x170f5>
  42e0a2:	mov    0x247e0f(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  42e0a9:	xor    %edx,%edx
  42e0ab:	mov    $0x6a,%esi
  42e0b0:	mov    %r12,%rdi
  42e0b3:	mov    (%rax),%rcx
  42e0b6:	callq  412af0 <BIO_ctrl@plt>
  42e0bb:	jmpq   42da05 <X509_get0_pubkey_bitstr@plt+0x17035>
  42e0c0:	mov    0x10(%rsp),%rdi
  42e0c5:	mov    $0x1,%ebp
  42e0ca:	xor    %r14d,%r14d
  42e0cd:	callq  4142c0 <perror@plt>
  42e0d2:	jmpq   42dded <X509_get0_pubkey_bitstr@plt+0x1741d>
  42e0d7:	mov    0x38(%rsp),%eax
  42e0db:	xor    %ebp,%ebp
  42e0dd:	test   %eax,%eax
  42e0df:	je     42dded <X509_get0_pubkey_bitstr@plt+0x1741d>
  42e0e5:	mov    (%rbx),%rsi
  42e0e8:	xor    %edi,%edi
  42e0ea:	xor    %ebp,%ebp
  42e0ec:	callq  44a660 <X509_get0_pubkey_bitstr@plt+0x33c90>
  42e0f1:	jmpq   42dded <X509_get0_pubkey_bitstr@plt+0x1741d>
  42e0f6:	mov    0x20(%rsp),%r12
  42e0fb:	lea    0x319bc(%rip),%rdi        # 45fabe <_fini+0x25ba>
  42e102:	callq  415a40 <puts@plt>
  42e107:	mov    0x20(%r14),%rdi
  42e10b:	mov    %rbp,%rsi
  42e10e:	callq  413390 <BN_bn2bin@plt>
  42e113:	mov    0x18(%rsp),%edx
  42e117:	lea    0x35b52(%rip),%rsi        # 463c70 <_fini+0x676c>
  42e11e:	mov    %eax,0x10(%rsp)
  42e122:	mov    $0x1,%edi
  42e127:	xor    %eax,%eax
  42e129:	callq  412780 <__printf_chk@plt>
  42e12e:	mov    0x10(%rsp),%r8d
  42e133:	xor    %ecx,%ecx
  42e135:	test   %r8d,%r8d
  42e138:	jle    42e1a3 <X509_get0_pubkey_bitstr@plt+0x177d3>
  42e13a:	mov    %r12,0x20(%rsp)
  42e13f:	mov    %rcx,%r12
  42e142:	jmp    42e16c <X509_get0_pubkey_bitstr@plt+0x1779c>
  42e144:	nopl   0x0(%rax)
  42e148:	movzbl 0x0(%rbp,%r12,1),%edx
  42e14e:	lea    0x31971(%rip),%rsi        # 45fac6 <_fini+0x25c2>
  42e155:	xor    %eax,%eax
  42e157:	mov    $0x1,%edi
  42e15c:	add    $0x1,%r12
  42e160:	callq  412780 <__printf_chk@plt>
  42e165:	cmp    %r12d,0x10(%rsp)
  42e16a:	jle    42e19e <X509_get0_pubkey_bitstr@plt+0x177ce>
  42e16c:	mov    $0x2aaaaaab,%eax
  42e171:	imul   %r12d
  42e174:	mov    %r12d,%eax
  42e177:	sar    $0x1f,%eax
  42e17a:	sar    %edx
  42e17c:	sub    %eax,%edx
  42e17e:	lea    (%rdx,%rdx,2),%eax
  42e181:	shl    $0x2,%eax
  42e184:	cmp    %eax,%r12d
  42e187:	jne    42e148 <X509_get0_pubkey_bitstr@plt+0x17778>
  42e189:	lea    0x31933(%rip),%rsi        # 45fac3 <_fini+0x25bf>
  42e190:	mov    $0x1,%edi
  42e195:	xor    %eax,%eax
  42e197:	callq  412780 <__printf_chk@plt>
  42e19c:	jmp    42e148 <X509_get0_pubkey_bitstr@plt+0x17778>
  42e19e:	mov    0x20(%rsp),%r12
  42e1a3:	lea    0x31914(%rip),%rdi        # 45fabe <_fini+0x25ba>
  42e1aa:	callq  415a40 <puts@plt>
  42e1af:	mov    0x28(%r14),%rdi
  42e1b3:	mov    %rbp,%rsi
  42e1b6:	callq  413390 <BN_bn2bin@plt>
  42e1bb:	mov    0x18(%rsp),%edx
  42e1bf:	lea    0x35ad2(%rip),%rsi        # 463c98 <_fini+0x6794>
  42e1c6:	mov    %eax,0x10(%rsp)
  42e1ca:	mov    $0x1,%edi
  42e1cf:	xor    %eax,%eax
  42e1d1:	callq  412780 <__printf_chk@plt>
  42e1d6:	mov    0x10(%rsp),%edi
  42e1da:	xor    %ecx,%ecx
  42e1dc:	test   %edi,%edi
  42e1de:	jle    42e24b <X509_get0_pubkey_bitstr@plt+0x1787b>
  42e1e0:	mov    %r12,0x20(%rsp)
  42e1e5:	mov    %rcx,%r12
  42e1e8:	jmp    42e214 <X509_get0_pubkey_bitstr@plt+0x17844>
  42e1ea:	nopw   0x0(%rax,%rax,1)
  42e1f0:	movzbl 0x0(%rbp,%r12,1),%edx
  42e1f6:	lea    0x318c9(%rip),%rsi        # 45fac6 <_fini+0x25c2>
  42e1fd:	xor    %eax,%eax
  42e1ff:	mov    $0x1,%edi
  42e204:	add    $0x1,%r12
  42e208:	callq  412780 <__printf_chk@plt>
  42e20d:	cmp    %r12d,0x10(%rsp)
  42e212:	jle    42e246 <X509_get0_pubkey_bitstr@plt+0x17876>
  42e214:	mov    $0x2aaaaaab,%eax
  42e219:	imul   %r12d
  42e21c:	mov    %r12d,%eax
  42e21f:	sar    $0x1f,%eax
  42e222:	sar    %edx
  42e224:	sub    %eax,%edx
  42e226:	lea    (%rdx,%rdx,2),%eax
  42e229:	shl    $0x2,%eax
  42e22c:	cmp    %eax,%r12d
  42e22f:	jne    42e1f0 <X509_get0_pubkey_bitstr@plt+0x17820>
  42e231:	lea    0x3188b(%rip),%rsi        # 45fac3 <_fini+0x25bf>
  42e238:	mov    $0x1,%edi
  42e23d:	xor    %eax,%eax
  42e23f:	callq  412780 <__printf_chk@plt>
  42e244:	jmp    42e1f0 <X509_get0_pubkey_bitstr@plt+0x17820>
  42e246:	mov    0x20(%rsp),%r12
  42e24b:	lea    0x3187c(%rip),%rdi        # 45face <_fini+0x25ca>
  42e252:	callq  415a40 <puts@plt>
  42e257:	mov    0x18(%rsp),%ebp
  42e25b:	lea    0x358b6(%rip),%rsi        # 463b18 <_fini+0x6614>
  42e262:	mov    $0x1,%edi
  42e267:	xor    %eax,%eax
  42e269:	mov    %ebp,%edx
  42e26b:	callq  412780 <__printf_chk@plt>
  42e270:	lea    0x358b6(%rip),%rdi        # 463b2d <_fini+0x6629>
  42e277:	callq  415a40 <puts@plt>
  42e27c:	lea    0x35a3d(%rip),%rdi        # 463cc0 <_fini+0x67bc>
  42e283:	callq  415a40 <puts@plt>
  42e288:	lea    0x35a61(%rip),%rsi        # 463cf0 <_fini+0x67ec>
  42e28f:	mov    %ebp,%ecx
  42e291:	mov    %ebp,%edx
  42e293:	mov    $0x1,%edi
  42e298:	xor    %eax,%eax
  42e29a:	callq  412780 <__printf_chk@plt>
  42e29f:	lea    0x35a82(%rip),%rsi        # 463d28 <_fini+0x6824>
  42e2a6:	mov    %ebp,%ecx
  42e2a8:	mov    %ebp,%edx
  42e2aa:	mov    $0x1,%edi
  42e2af:	xor    %eax,%eax
  42e2b1:	callq  412780 <__printf_chk@plt>
  42e2b6:	lea    0x35aa3(%rip),%rsi        # 463d60 <_fini+0x685c>
  42e2bd:	mov    %ebp,%ecx
  42e2bf:	mov    %ebp,%edx
  42e2c1:	mov    $0x1,%edi
  42e2c6:	xor    %eax,%eax
  42e2c8:	callq  412780 <__printf_chk@plt>
  42e2cd:	lea    0x35ac4(%rip),%rdi        # 463d98 <_fini+0x6894>
  42e2d4:	callq  415a40 <puts@plt>
  42e2d9:	lea    0x35af8(%rip),%rdi        # 463dd8 <_fini+0x68d4>
  42e2e0:	callq  415a40 <puts@plt>
  42e2e5:	lea    0x3584d(%rip),%rdi        # 463b39 <_fini+0x6635>
  42e2ec:	callq  415a40 <puts@plt>
  42e2f1:	jmpq   42dad3 <X509_get0_pubkey_bitstr@plt+0x17103>
  42e2f6:	mov    0x18(%rsp),%rdi
  42e2fb:	mov    $0x1,%ebp
  42e300:	xor    %r14d,%r14d
  42e303:	callq  4142c0 <perror@plt>
  42e308:	jmpq   42dded <X509_get0_pubkey_bitstr@plt+0x1741d>
  42e30d:	mov    (%rbx),%rdi
  42e310:	lea    0x357c9(%rip),%rsi        # 463ae0 <_fini+0x65dc>
  42e317:	xor    %eax,%eax
  42e319:	callq  413c40 <BIO_printf@plt>
  42e31e:	jmpq   42dfa2 <X509_get0_pubkey_bitstr@plt+0x175d2>
  42e323:	xor    %ecx,%ecx
  42e325:	xor    %edx,%edx
  42e327:	xor    %esi,%esi
  42e329:	mov    %r13,%rdi
  42e32c:	callq  415380 <PEM_read_bio_DSAparams@plt>
  42e331:	mov    %rax,%r14
  42e334:	test   %r14,%r14
  42e337:	jne    42dab7 <X509_get0_pubkey_bitstr@plt+0x170e7>
  42e33d:	mov    (%rbx),%rdi
  42e340:	lea    0x31d29(%rip),%rsi        # 460070 <_fini+0x2b6c>
  42e347:	xor    %eax,%eax
  42e349:	callq  413c40 <BIO_printf@plt>
  42e34e:	mov    (%rbx),%rdi
  42e351:	callq  413f40 <ERR_print_errors@plt>
  42e356:	jmpq   42dfa2 <X509_get0_pubkey_bitstr@plt+0x175d2>
  42e35b:	mov    %r14,%rsi
  42e35e:	mov    %r12,%rdi
  42e361:	callq  4136b0 <PEM_write_bio_DSAparams@plt>
  42e366:	test   %eax,%eax
  42e368:	jne    42de5d <X509_get0_pubkey_bitstr@plt+0x1748d>
  42e36e:	mov    (%rbx),%rdi
  42e371:	lea    0x35a88(%rip),%rsi        # 463e00 <_fini+0x68fc>
  42e378:	mov    $0x1,%ebp
  42e37d:	callq  413c40 <BIO_printf@plt>
  42e382:	mov    (%rbx),%rdi
  42e385:	callq  413f40 <ERR_print_errors@plt>
  42e38a:	jmpq   42dded <X509_get0_pubkey_bitstr@plt+0x1741d>
  42e38f:	lea    0x31719(%rip),%rdi        # 45faaf <_fini+0x25ab>
  42e396:	mov    $0x1,%bpl
  42e399:	callq  4142c0 <perror@plt>
  42e39e:	jmpq   42dded <X509_get0_pubkey_bitstr@plt+0x1741d>
  42e3a3:	mov    0x247b96(%rip),%rsi        # 675f40 <_fini+0x218a3c>
  42e3aa:	mov    0x247c2f(%rip),%rdi        # 675fe0 <_fini+0x218adc>
  42e3b1:	xor    %ecx,%ecx
  42e3b3:	mov    %r13,%rdx
  42e3b6:	callq  415520 <ASN1_d2i_bio@plt>
  42e3bb:	mov    %rax,%r14
  42e3be:	jmpq   42e334 <X509_get0_pubkey_bitstr@plt+0x17964>
  42e3c3:	mov    0x10(%rsp),%rsi
  42e3c8:	movq   $0x0,(%rsp)
  42e3d0:	xor    %r9d,%r9d
  42e3d3:	xor    %r8d,%r8d
  42e3d6:	xor    %ecx,%ecx
  42e3d8:	xor    %edx,%edx
  42e3da:	mov    %r12,%rdi
  42e3dd:	callq  415000 <PEM_write_bio_DSAPrivateKey@plt>
  42e3e2:	mov    0x10(%rsp),%rdi
  42e3e7:	callq  4159d0 <DSA_free@plt>
  42e3ec:	jmpq   42e0e5 <X509_get0_pubkey_bitstr@plt+0x17715>
  42e3f1:	callq  414c30 <__stack_chk_fail@plt>
  42e3f6:	mov    0x247bcb(%rip),%rdi        # 675fc8 <_fini+0x218ac4>
  42e3fd:	mov    %r14,%rdx
  42e400:	mov    %r12,%rsi
  42e403:	callq  413c70 <ASN1_i2d_bio@plt>
  42e408:	jmpq   42e366 <X509_get0_pubkey_bitstr@plt+0x17996>
  42e40d:	mov    (%rbx),%rdi
  42e410:	callq  413f40 <ERR_print_errors@plt>
  42e415:	mov    0x10(%rsp),%rdi
  42e41a:	callq  4159d0 <DSA_free@plt>
  42e41f:	jmpq   42dded <X509_get0_pubkey_bitstr@plt+0x1741d>
  42e424:	lea    0x359f5(%rip),%rcx        # 463e20 <_fini+0x691c>
  42e42b:	lea    0x35699(%rip),%rsi        # 463acb <_fini+0x65c7>
  42e432:	lea    0x3569d(%rip),%rdi        # 463ad6 <_fini+0x65d2>
  42e439:	mov    $0x125,%edx
  42e43e:	callq  413d40 <__assert_fail@plt>
  42e443:	mov    0x10(%rsp),%rsi
  42e448:	mov    %r12,%rdi
  42e44b:	callq  415ad0 <i2d_DSAPrivateKey_bio@plt>
  42e450:	jmp    42e3e2 <X509_get0_pubkey_bitstr@plt+0x17a12>
  42e452:	lea    0x359c7(%rip),%rcx        # 463e20 <_fini+0x691c>
  42e459:	lea    0x3566b(%rip),%rsi        # 463acb <_fini+0x65c7>
  42e460:	lea    0x3566f(%rip),%rdi        # 463ad6 <_fini+0x65d2>
  42e467:	mov    $0x1af,%edx
  42e46c:	callq  413d40 <__assert_fail@plt>
  42e471:	nopw   %cs:0x0(%rax,%rax,1)
  42e47b:	nopl   0x0(%rax,%rax,1)
  42e480:	push   %r15
  42e482:	push   %r14
  42e484:	push   %r13
  42e486:	push   %r12
  42e488:	push   %rbp
  42e489:	mov    %edi,%ebp
  42e48b:	mov    $0xd,%edi
  42e490:	push   %rbx
  42e491:	mov    %rsi,%rbx
  42e494:	mov    $0x1,%esi
  42e499:	sub    $0x98,%rsp
  42e4a0:	mov    %fs:0x28,%rax
  42e4a9:	mov    %rax,0x88(%rsp)
  42e4b1:	xor    %eax,%eax
  42e4b3:	movq   $0x0,0x78(%rsp)
  42e4bc:	movq   $0x0,0x80(%rsp)
  42e4c8:	callq  414ee0 <signal@plt>
  42e4cd:	lea    0x24c86c(%rip),%r12        # 67ad40 <_edata+0x38>
  42e4d4:	mov    (%r12),%rdi
  42e4d8:	test   %rdi,%rdi
  42e4db:	je     42eb40 <X509_get0_pubkey_bitstr@plt+0x18170>
  42e4e1:	xor    %esi,%esi
  42e4e3:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  42e4e8:	test   %eax,%eax
  42e4ea:	je     42e93f <X509_get0_pubkey_bitstr@plt+0x17f6f>
  42e4f0:	mov    (%rbx),%rax
  42e4f3:	lea    -0x1(%rbp),%r14d
  42e4f7:	lea    0x8(%rbx),%r8
  42e4fb:	movl   $0x0,0x60(%rsp)
  42e503:	movl   $0x1,0x54(%rsp)
  42e50b:	mov    $0x3,%r15d
  42e511:	test   %r14d,%r14d
  42e514:	movl   $0x0,0x48(%rsp)
  42e51c:	movl   $0x4,0x44(%rsp)
  42e524:	mov    %rax,0x20(%rsp)
  42e529:	movq   $0x0,0x28(%rsp)
  42e532:	movq   $0x0,0x18(%rsp)
  42e53b:	movq   $0x0,0x30(%rsp)
  42e544:	movq   $0x0,0x10(%rsp)
  42e54d:	movq   $0x0,0x8(%rsp)
  42e556:	movl   $0x0,0x50(%rsp)
  42e55e:	movl   $0x0,0x4c(%rsp)
  42e566:	movl   $0x0,0x3c(%rsp)
  42e56e:	movl   $0x0,0x40(%rsp)
  42e576:	movl   $0x0,0x64(%rsp)
  42e57e:	movl   $0x3,0x38(%rsp)
  42e586:	movq   $0x0,0x58(%rsp)
  42e58f:	jle    42e629 <X509_get0_pubkey_bitstr@plt+0x17c59>
  42e595:	mov    %r15d,%eax
  42e598:	lea    0x2f740(%rip),%rbp        # 45dcdf <_fini+0x7db>
  42e59f:	mov    %r14d,%r15d
  42e5a2:	mov    $0x8,%ebx
  42e5a7:	mov    %eax,%r14d
  42e5aa:	jmp    42e5d7 <X509_get0_pubkey_bitstr@plt+0x17c07>
  42e5ac:	nopl   0x0(%rax)
  42e5b0:	sub    $0x1,%r15d
  42e5b4:	je     42e7c0 <X509_get0_pubkey_bitstr@plt+0x17df0>
  42e5ba:	mov    0x8(%r8),%rdi
  42e5be:	lea    0x8(%r8),%r13
  42e5c2:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  42e5c7:	mov    %eax,%r14d
  42e5ca:	sub    $0x1,%r15d
  42e5ce:	lea    0x8(%r13),%r8
  42e5d2:	test   %r15d,%r15d
  42e5d5:	jle    42e626 <X509_get0_pubkey_bitstr@plt+0x17c56>
  42e5d7:	mov    (%r8),%rdx
  42e5da:	mov    %rbp,%rdi
  42e5dd:	mov    %rbx,%rcx
  42e5e0:	mov    %rdx,%rsi
  42e5e3:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42e5e5:	je     42e5b0 <X509_get0_pubkey_bitstr@plt+0x17be0>
  42e5e7:	lea    0x2fba2(%rip),%rdi        # 45e190 <_fini+0xc8c>
  42e5ee:	mov    $0x9,%ecx
  42e5f3:	mov    %rdx,%rsi
  42e5f6:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42e5f8:	jne    42e998 <X509_get0_pubkey_bitstr@plt+0x17fc8>
  42e5fe:	sub    $0x1,%r15d
  42e602:	je     42e7c0 <X509_get0_pubkey_bitstr@plt+0x17df0>
  42e608:	mov    0x8(%r8),%rdi
  42e60c:	lea    0x8(%r8),%r13
  42e610:	sub    $0x1,%r15d
  42e614:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  42e619:	test   %r15d,%r15d
  42e61c:	mov    %eax,0x38(%rsp)
  42e620:	lea    0x8(%r13),%r8
  42e624:	jg     42e5d7 <X509_get0_pubkey_bitstr@plt+0x17c07>
  42e626:	mov    %r14d,%r15d
  42e629:	callq  416990 <ERR_load_crypto_strings@plt>
  42e62e:	mov    0x30(%rsp),%rsi
  42e633:	mov    (%r12),%rdi
  42e637:	xor    %edx,%edx
  42e639:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  42e63e:	mov    0x28(%rsp),%rdx
  42e643:	mov    0x18(%rsp),%rsi
  42e648:	lea    0x78(%rsp),%rcx
  42e64d:	mov    (%r12),%rdi
  42e651:	lea    0x80(%rsp),%r8
  42e659:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  42e65e:	test   %eax,%eax
  42e660:	je     42eb8f <X509_get0_pubkey_bitstr@plt+0x181bf>
  42e666:	callq  4152b0 <BIO_s_file@plt>
  42e66b:	mov    %rax,%rdi
  42e66e:	callq  414a20 <BIO_new@plt>
  42e673:	mov    %rax,%rbp
  42e676:	callq  4152b0 <BIO_s_file@plt>
  42e67b:	mov    %rax,%rdi
  42e67e:	callq  414a20 <BIO_new@plt>
  42e683:	test   %rax,%rax
  42e686:	mov    %rax,%rbx
  42e689:	je     42ec20 <X509_get0_pubkey_bitstr@plt+0x18250>
  42e68f:	test   %rbp,%rbp
  42e692:	je     42ec20 <X509_get0_pubkey_bitstr@plt+0x18250>
  42e698:	cmpq   $0x0,0x8(%rsp)
  42e69e:	je     42ece4 <X509_get0_pubkey_bitstr@plt+0x18314>
  42e6a4:	mov    0x8(%rsp),%rcx
  42e6a9:	mov    $0x3,%edx
  42e6ae:	mov    $0x6c,%esi
  42e6b3:	mov    %rbp,%rdi
  42e6b6:	callq  412af0 <BIO_ctrl@plt>
  42e6bb:	test   %rax,%rax
  42e6be:	jle    42ee54 <X509_get0_pubkey_bitstr@plt+0x18484>
  42e6c4:	mov    (%r12),%rdi
  42e6c8:	lea    0x35794(%rip),%rsi        # 463e63 <_fini+0x695f>
  42e6cf:	xor    %eax,%eax
  42e6d1:	callq  413c40 <BIO_printf@plt>
  42e6d6:	cmp    $0x1,%r15d
  42e6da:	je     42ec60 <X509_get0_pubkey_bitstr@plt+0x18290>
  42e6e0:	cmp    $0x3,%r15d
  42e6e4:	jne    42ec40 <X509_get0_pubkey_bitstr@plt+0x18270>
  42e6ea:	mov    0x3c(%rsp),%r9d
  42e6ef:	test   %r9d,%r9d
  42e6f2:	je     42ee1d <X509_get0_pubkey_bitstr@plt+0x1844d>
  42e6f8:	xor    %ecx,%ecx
  42e6fa:	xor    %edx,%edx
  42e6fc:	xor    %esi,%esi
  42e6fe:	mov    %rbp,%rdi
  42e701:	callq  415a20 <PEM_read_bio_EC_PUBKEY@plt>
  42e706:	mov    %rax,%r14
  42e709:	test   %r14,%r14
  42e70c:	je     42ee6c <X509_get0_pubkey_bitstr@plt+0x1849c>
  42e712:	cmpq   $0x0,0x10(%rsp)
  42e718:	je     42ee36 <X509_get0_pubkey_bitstr@plt+0x18466>
  42e71e:	mov    0x10(%rsp),%rcx
  42e723:	mov    $0x5,%edx
  42e728:	mov    $0x6c,%esi
  42e72d:	mov    %rbx,%rdi
  42e730:	callq  412af0 <BIO_ctrl@plt>
  42e735:	test   %rax,%rax
  42e738:	jle    42ee92 <X509_get0_pubkey_bitstr@plt+0x184c2>
  42e73e:	mov    %r14,%rdi
  42e741:	callq  4152f0 <EC_KEY_get0_group@plt>
  42e746:	mov    0x48(%rsp),%r8d
  42e74b:	mov    %rax,%r13
  42e74e:	test   %r8d,%r8d
  42e751:	jne    42ee0c <X509_get0_pubkey_bitstr@plt+0x1843c>
  42e757:	mov    0x60(%rsp),%edi
  42e75b:	test   %edi,%edi
  42e75d:	jne    42edfb <X509_get0_pubkey_bitstr@plt+0x1842b>
  42e763:	mov    0x64(%rsp),%esi
  42e767:	test   %esi,%esi
  42e769:	jne    42edc8 <X509_get0_pubkey_bitstr@plt+0x183f8>
  42e76f:	mov    0x40(%rsp),%ecx
  42e773:	xor    %r15d,%r15d
  42e776:	test   %ecx,%ecx
  42e778:	je     42ed49 <X509_get0_pubkey_bitstr@plt+0x18379>
  42e77e:	mov    %rbp,%rdi
  42e781:	callq  413960 <BIO_free@plt>
  42e786:	test   %rbx,%rbx
  42e789:	je     42e793 <X509_get0_pubkey_bitstr@plt+0x17dc3>
  42e78b:	mov    %rbx,%rdi
  42e78e:	callq  416570 <BIO_free_all@plt>
  42e793:	test   %r14,%r14
  42e796:	je     42e945 <X509_get0_pubkey_bitstr@plt+0x17f75>
  42e79c:	mov    %r14,%rdi
  42e79f:	callq  415bf0 <EC_KEY_free@plt>
  42e7a4:	jmpq   42e945 <X509_get0_pubkey_bitstr@plt+0x17f75>
  42e7a9:	mov    (%r8),%rdx
  42e7ac:	mov    (%r12),%rdi
  42e7b0:	lea    0x2f575(%rip),%rsi        # 45dd2c <_fini+0x828>
  42e7b7:	callq  413c40 <BIO_printf@plt>
  42e7bc:	nopl   0x0(%rax)
  42e7c0:	mov    0x20(%rsp),%rdx
  42e7c5:	mov    (%r12),%rdi
  42e7c9:	lea    0x2ff68(%rip),%rsi        # 45e738 <_fini+0x1234>
  42e7d0:	xor    %eax,%eax
  42e7d2:	callq  413c40 <BIO_printf@plt>
  42e7d7:	mov    (%r12),%rdi
  42e7db:	lea    0x2f573(%rip),%rsi        # 45dd55 <_fini+0x851>
  42e7e2:	xor    %eax,%eax
  42e7e4:	callq  413c40 <BIO_printf@plt>
  42e7e9:	mov    (%r12),%rdi
  42e7ed:	lea    0x35224(%rip),%rsi        # 463a18 <_fini+0x6514>
  42e7f4:	xor    %eax,%eax
  42e7f6:	callq  413c40 <BIO_printf@plt>
  42e7fb:	mov    (%r12),%rdi
  42e7ff:	lea    0x35242(%rip),%rsi        # 463a48 <_fini+0x6544>
  42e806:	xor    %eax,%eax
  42e808:	callq  413c40 <BIO_printf@plt>
  42e80d:	mov    (%r12),%rdi
  42e811:	lea    0x348c3(%rip),%rsi        # 4630db <_fini+0x5bd7>
  42e818:	xor    %eax,%eax
  42e81a:	callq  413c40 <BIO_printf@plt>
  42e81f:	mov    (%r12),%rdi
  42e823:	lea    0x34a5e(%rip),%rsi        # 463288 <_fini+0x5d84>
  42e82a:	xor    %eax,%eax
  42e82c:	callq  413c40 <BIO_printf@plt>
  42e831:	mov    (%r12),%rdi
  42e835:	lea    0x348bc(%rip),%rsi        # 4630f8 <_fini+0x5bf4>
  42e83c:	xor    %eax,%eax
  42e83e:	callq  413c40 <BIO_printf@plt>
  42e843:	mov    (%r12),%rdi
  42e847:	lea    0x34a6a(%rip),%rsi        # 4632b8 <_fini+0x5db4>
  42e84e:	xor    %eax,%eax
  42e850:	callq  413c40 <BIO_printf@plt>
  42e855:	mov    (%r12),%rdi
  42e859:	lea    0x34d30(%rip),%rsi        # 463590 <_fini+0x608c>
  42e860:	xor    %eax,%eax
  42e862:	callq  413c40 <BIO_printf@plt>
  42e867:	mov    (%r12),%rdi
  42e86b:	lea    0x3560e(%rip),%rsi        # 463e80 <_fini+0x697c>
  42e872:	xor    %eax,%eax
  42e874:	callq  413c40 <BIO_printf@plt>
  42e879:	mov    (%r12),%rdi
  42e87d:	lea    0x3567c(%rip),%rsi        # 463f00 <_fini+0x69fc>
  42e884:	xor    %eax,%eax
  42e886:	callq  413c40 <BIO_printf@plt>
  42e88b:	mov    (%r12),%rdi
  42e88f:	lea    0x34c12(%rip),%rsi        # 4634a8 <_fini+0x5fa4>
  42e896:	xor    %eax,%eax
  42e898:	callq  413c40 <BIO_printf@plt>
  42e89d:	mov    (%r12),%rdi
  42e8a1:	lea    0x35678(%rip),%rsi        # 463f20 <_fini+0x6a1c>
  42e8a8:	xor    %eax,%eax
  42e8aa:	callq  413c40 <BIO_printf@plt>
  42e8af:	mov    (%r12),%rdi
  42e8b3:	lea    0x3569e(%rip),%rsi        # 463f58 <_fini+0x6a54>
  42e8ba:	xor    %eax,%eax
  42e8bc:	callq  413c40 <BIO_printf@plt>
  42e8c1:	mov    (%r12),%rdi
  42e8c5:	lea    0x356c4(%rip),%rsi        # 463f90 <_fini+0x6a8c>
  42e8cc:	xor    %eax,%eax
  42e8ce:	callq  413c40 <BIO_printf@plt>
  42e8d3:	mov    (%r12),%rdi
  42e8d7:	lea    0x356e2(%rip),%rsi        # 463fc0 <_fini+0x6abc>
  42e8de:	xor    %eax,%eax
  42e8e0:	callq  413c40 <BIO_printf@plt>
  42e8e5:	mov    (%r12),%rdi
  42e8e9:	lea    0x35710(%rip),%rsi        # 464000 <_fini+0x6afc>
  42e8f0:	xor    %eax,%eax
  42e8f2:	callq  413c40 <BIO_printf@plt>
  42e8f7:	mov    (%r12),%rdi
  42e8fb:	lea    0x3572e(%rip),%rsi        # 464030 <_fini+0x6b2c>
  42e902:	xor    %eax,%eax
  42e904:	callq  413c40 <BIO_printf@plt>
  42e909:	mov    (%r12),%rdi
  42e90d:	lea    0x35764(%rip),%rsi        # 464078 <_fini+0x6b74>
  42e914:	xor    %eax,%eax
  42e916:	callq  413c40 <BIO_printf@plt>
  42e91b:	mov    (%r12),%rdi
  42e91f:	lea    0x35782(%rip),%rsi        # 4640a8 <_fini+0x6ba4>
  42e926:	xor    %eax,%eax
  42e928:	callq  413c40 <BIO_printf@plt>
  42e92d:	mov    (%r12),%rdi
  42e931:	lea    0x357b0(%rip),%rsi        # 4640e8 <_fini+0x6be4>
  42e938:	xor    %eax,%eax
  42e93a:	callq  413c40 <BIO_printf@plt>
  42e93f:	mov    $0x1,%r15d
  42e945:	mov    0x78(%rsp),%rdi
  42e94a:	test   %rdi,%rdi
  42e94d:	je     42e954 <X509_get0_pubkey_bitstr@plt+0x17f84>
  42e94f:	callq  415020 <CRYPTO_free@plt>
  42e954:	mov    0x80(%rsp),%rdi
  42e95c:	test   %rdi,%rdi
  42e95f:	je     42e966 <X509_get0_pubkey_bitstr@plt+0x17f96>
  42e961:	callq  415020 <CRYPTO_free@plt>
  42e966:	mov    0x88(%rsp),%rbx
  42e96e:	xor    %fs:0x28,%rbx
  42e977:	mov    %r15d,%eax
  42e97a:	jne    42eeb7 <X509_get0_pubkey_bitstr@plt+0x184e7>
  42e980:	add    $0x98,%rsp
  42e987:	pop    %rbx
  42e988:	pop    %rbp
  42e989:	pop    %r12
  42e98b:	pop    %r13
  42e98d:	pop    %r14
  42e98f:	pop    %r15
  42e991:	retq   
  42e992:	nopw   0x0(%rax,%rax,1)
  42e998:	cmpb   $0x2d,(%rdx)
  42e99b:	jne    42e9d0 <X509_get0_pubkey_bitstr@plt+0x18000>
  42e99d:	cmpb   $0x69,0x1(%rdx)
  42e9a1:	jne    42e9d0 <X509_get0_pubkey_bitstr@plt+0x18000>
  42e9a3:	cmpb   $0x6e,0x2(%rdx)
  42e9a7:	jne    42e9d0 <X509_get0_pubkey_bitstr@plt+0x18000>
  42e9a9:	cmpb   $0x0,0x3(%rdx)
  42e9ad:	jne    42e9d0 <X509_get0_pubkey_bitstr@plt+0x18000>
  42e9af:	sub    $0x1,%r15d
  42e9b3:	je     42e7c0 <X509_get0_pubkey_bitstr@plt+0x17df0>
  42e9b9:	mov    0x8(%r8),%rax
  42e9bd:	lea    0x8(%r8),%r13
  42e9c1:	mov    %rax,0x8(%rsp)
  42e9c6:	jmpq   42e5ca <X509_get0_pubkey_bitstr@plt+0x17bfa>
  42e9cb:	nopl   0x0(%rax,%rax,1)
  42e9d0:	lea    0x2f46f(%rip),%rdi        # 45de46 <_fini+0x942>
  42e9d7:	mov    $0x5,%ecx
  42e9dc:	mov    %rdx,%rsi
  42e9df:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42e9e1:	jne    42ea00 <X509_get0_pubkey_bitstr@plt+0x18030>
  42e9e3:	sub    $0x1,%r15d
  42e9e7:	je     42e7c0 <X509_get0_pubkey_bitstr@plt+0x17df0>
  42e9ed:	mov    0x8(%r8),%rax
  42e9f1:	lea    0x8(%r8),%r13
  42e9f5:	mov    %rax,0x10(%rsp)
  42e9fa:	jmpq   42e5ca <X509_get0_pubkey_bitstr@plt+0x17bfa>
  42e9ff:	nop
  42ea00:	lea    0x2f7e9(%rip),%rdi        # 45e1f0 <_fini+0xcec>
  42ea07:	mov    %rdx,%rsi
  42ea0a:	mov    %rbx,%rcx
  42ea0d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42ea0f:	jne    42ea30 <X509_get0_pubkey_bitstr@plt+0x18060>
  42ea11:	sub    $0x1,%r15d
  42ea15:	je     42e7c0 <X509_get0_pubkey_bitstr@plt+0x17df0>
  42ea1b:	mov    0x8(%r8),%rax
  42ea1f:	lea    0x8(%r8),%r13
  42ea23:	mov    %rax,0x18(%rsp)
  42ea28:	jmpq   42e5ca <X509_get0_pubkey_bitstr@plt+0x17bfa>
  42ea2d:	nopl   (%rax)
  42ea30:	lea    0x2f7c1(%rip),%rdi        # 45e1f8 <_fini+0xcf4>
  42ea37:	mov    $0x9,%ecx
  42ea3c:	mov    %rdx,%rsi
  42ea3f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42ea41:	je     42ea70 <X509_get0_pubkey_bitstr@plt+0x180a0>
  42ea43:	lea    0x2f118(%rip),%rdi        # 45db62 <_fini+0x65e>
  42ea4a:	mov    %rdx,%rsi
  42ea4d:	mov    %rbx,%rcx
  42ea50:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42ea52:	jne    42ea8c <X509_get0_pubkey_bitstr@plt+0x180bc>
  42ea54:	sub    $0x1,%r15d
  42ea58:	je     42e7c0 <X509_get0_pubkey_bitstr@plt+0x17df0>
  42ea5e:	mov    0x8(%r8),%rax
  42ea62:	lea    0x8(%r8),%r13
  42ea66:	mov    %rax,0x30(%rsp)
  42ea6b:	jmpq   42e5ca <X509_get0_pubkey_bitstr@plt+0x17bfa>
  42ea70:	sub    $0x1,%r15d
  42ea74:	je     42e7c0 <X509_get0_pubkey_bitstr@plt+0x17df0>
  42ea7a:	mov    0x8(%r8),%rax
  42ea7e:	lea    0x8(%r8),%r13
  42ea82:	mov    %rax,0x28(%rsp)
  42ea87:	jmpq   42e5ca <X509_get0_pubkey_bitstr@plt+0x17bfa>
  42ea8c:	lea    0x2f254(%rip),%rdi        # 45dce7 <_fini+0x7e3>
  42ea93:	mov    $0x7,%ecx
  42ea98:	mov    %rdx,%rsi
  42ea9b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42ea9d:	je     42eb7f <X509_get0_pubkey_bitstr@plt+0x181af>
  42eaa3:	lea    0x2f7bd(%rip),%rdi        # 45e267 <_fini+0xd63>
  42eaaa:	mov    $0x6,%ecx
  42eaaf:	mov    %rdx,%rsi
  42eab2:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42eab4:	je     42eba4 <X509_get0_pubkey_bitstr@plt+0x181d4>
  42eaba:	lea    0x3536d(%rip),%rdi        # 463e2e <_fini+0x692a>
  42eac1:	mov    $0xb,%ecx
  42eac6:	mov    %rdx,%rsi
  42eac9:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42eacb:	jne    42ebb4 <X509_get0_pubkey_bitstr@plt+0x181e4>
  42ead1:	sub    $0x1,%r15d
  42ead5:	je     42e7c0 <X509_get0_pubkey_bitstr@plt+0x17df0>
  42eadb:	mov    0x8(%r8),%rax
  42eadf:	lea    0x35355(%rip),%rdi        # 463e3b <_fini+0x6937>
  42eae6:	mov    $0xb,%ecx
  42eaeb:	lea    0x8(%r8),%r13
  42eaef:	mov    %rax,%rsi
  42eaf2:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42eaf4:	je     42ec80 <X509_get0_pubkey_bitstr@plt+0x182b0>
  42eafa:	lea    0x35338(%rip),%rdi        # 463e39 <_fini+0x6935>
  42eb01:	mov    $0xd,%ecx
  42eb06:	mov    %rax,%rsi
  42eb09:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42eb0b:	je     42ed27 <X509_get0_pubkey_bitstr@plt+0x18357>
  42eb11:	lea    0x3532e(%rip),%rdi        # 463e46 <_fini+0x6942>
  42eb18:	mov    $0x7,%ecx
  42eb1d:	mov    %rax,%rsi
  42eb20:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42eb22:	jne    42e7c0 <X509_get0_pubkey_bitstr@plt+0x17df0>
  42eb28:	movl   $0x1,0x48(%rsp)
  42eb30:	movl   $0x6,0x44(%rsp)
  42eb38:	jmpq   42e5ca <X509_get0_pubkey_bitstr@plt+0x17bfa>
  42eb3d:	nopl   (%rax)
  42eb40:	callq  4152b0 <BIO_s_file@plt>
  42eb45:	mov    %rax,%rdi
  42eb48:	callq  414a20 <BIO_new@plt>
  42eb4d:	test   %rax,%rax
  42eb50:	mov    %rax,%rdi
  42eb53:	mov    %rax,(%r12)
  42eb57:	je     42e4e1 <X509_get0_pubkey_bitstr@plt+0x17b11>
  42eb5d:	mov    0x24741c(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  42eb64:	mov    $0x6a,%esi
  42eb69:	mov    (%rdx),%rcx
  42eb6c:	mov    $0x10,%edx
  42eb71:	callq  412af0 <BIO_ctrl@plt>
  42eb76:	mov    (%r12),%rdi
  42eb7a:	jmpq   42e4e1 <X509_get0_pubkey_bitstr@plt+0x17b11>
  42eb7f:	mov    %r8,%r13
  42eb82:	movl   $0x1,0x40(%rsp)
  42eb8a:	jmpq   42e5ca <X509_get0_pubkey_bitstr@plt+0x17bfa>
  42eb8f:	mov    (%r12),%rdi
  42eb93:	lea    0x2f7c6(%rip),%rsi        # 45e360 <_fini+0xe5c>
  42eb9a:	callq  413c40 <BIO_printf@plt>
  42eb9f:	jmpq   42e93f <X509_get0_pubkey_bitstr@plt+0x17f6f>
  42eba4:	mov    %r8,%r13
  42eba7:	movl   $0x1,0x64(%rsp)
  42ebaf:	jmpq   42e5ca <X509_get0_pubkey_bitstr@plt+0x17bfa>
  42ebb4:	lea    0x35292(%rip),%rdi        # 463e4d <_fini+0x6949>
  42ebbb:	mov    $0xb,%ecx
  42ebc0:	mov    %rdx,%rsi
  42ebc3:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42ebc5:	jne    42ec95 <X509_get0_pubkey_bitstr@plt+0x182c5>
  42ebcb:	sub    $0x1,%r15d
  42ebcf:	je     42e7c0 <X509_get0_pubkey_bitstr@plt+0x17df0>
  42ebd5:	mov    0x8(%r8),%rax
  42ebd9:	lea    0x39865(%rip),%rdi        # 468445 <_fini+0xaf41>
  42ebe0:	mov    $0xc,%ecx
  42ebe5:	lea    0x8(%r8),%r13
  42ebe9:	mov    %rax,%rsi
  42ebec:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42ebee:	je     42ed12 <X509_get0_pubkey_bitstr@plt+0x18342>
  42ebf4:	lea    0x40a45(%rip),%rdi        # 46f640 <_fini+0x1213c>
  42ebfb:	mov    $0x9,%ecx
  42ec00:	mov    %rax,%rsi
  42ec03:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42ec05:	jne    42e7c0 <X509_get0_pubkey_bitstr@plt+0x17df0>
  42ec0b:	movl   $0x1,0x60(%rsp)
  42ec13:	movl   $0x0,0x54(%rsp)
  42ec1b:	jmpq   42e5ca <X509_get0_pubkey_bitstr@plt+0x17bfa>
  42ec20:	mov    (%r12),%rdi
  42ec24:	xor    %r14d,%r14d
  42ec27:	mov    $0x1,%r15d
  42ec2d:	callq  413f40 <ERR_print_errors@plt>
  42ec32:	test   %rbp,%rbp
  42ec35:	jne    42e77e <X509_get0_pubkey_bitstr@plt+0x17dae>
  42ec3b:	jmpq   42e786 <X509_get0_pubkey_bitstr@plt+0x17db6>
  42ec40:	mov    (%r12),%rdi
  42ec44:	lea    0x354cd(%rip),%rsi        # 464118 <_fini+0x6c14>
  42ec4b:	xor    %eax,%eax
  42ec4d:	xor    %r14d,%r14d
  42ec50:	mov    $0x1,%r15d
  42ec56:	callq  413c40 <BIO_printf@plt>
  42ec5b:	jmpq   42e77e <X509_get0_pubkey_bitstr@plt+0x17dae>
  42ec60:	mov    0x3c(%rsp),%r10d
  42ec65:	xor    %esi,%esi
  42ec67:	mov    %rbp,%rdi
  42ec6a:	test   %r10d,%r10d
  42ec6d:	je     42ed3c <X509_get0_pubkey_bitstr@plt+0x1836c>
  42ec73:	callq  415e00 <d2i_EC_PUBKEY_bio@plt>
  42ec78:	mov    %rax,%r14
  42ec7b:	jmpq   42e709 <X509_get0_pubkey_bitstr@plt+0x17d39>
  42ec80:	movl   $0x1,0x48(%rsp)
  42ec88:	movl   $0x2,0x44(%rsp)
  42ec90:	jmpq   42e5ca <X509_get0_pubkey_bitstr@plt+0x17bfa>
  42ec95:	lea    0x351bc(%rip),%rdi        # 463e58 <_fini+0x6954>
  42ec9c:	mov    $0xb,%ecx
  42eca1:	mov    %rdx,%rsi
  42eca4:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42eca6:	je     42ed02 <X509_get0_pubkey_bitstr@plt+0x18332>
  42eca8:	lea    0x3448b(%rip),%rdi        # 46313a <_fini+0x5c36>
  42ecaf:	mov    $0x7,%ecx
  42ecb4:	mov    %rdx,%rsi
  42ecb7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42ecb9:	je     42eea7 <X509_get0_pubkey_bitstr@plt+0x184d7>
  42ecbf:	lea    0x3447b(%rip),%rdi        # 463141 <_fini+0x5c3d>
  42ecc6:	mov    %rdx,%rsi
  42ecc9:	mov    %rbx,%rcx
  42eccc:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42ecce:	jne    42eeff <X509_get0_pubkey_bitstr@plt+0x1852f>
  42ecd4:	mov    %r8,%r13
  42ecd7:	movl   $0x1,0x4c(%rsp)
  42ecdf:	jmpq   42e5ca <X509_get0_pubkey_bitstr@plt+0x17bfa>
  42ece4:	mov    0x247225(%rip),%rax        # 675f10 <_fini+0x218a0c>
  42eceb:	xor    %edx,%edx
  42eced:	mov    $0x6a,%esi
  42ecf2:	mov    %rbp,%rdi
  42ecf5:	mov    (%rax),%rcx
  42ecf8:	callq  412af0 <BIO_ctrl@plt>
  42ecfd:	jmpq   42e6c4 <X509_get0_pubkey_bitstr@plt+0x17cf4>
  42ed02:	mov    %r8,%r13
  42ed05:	movl   $0x1,0x50(%rsp)
  42ed0d:	jmpq   42e5ca <X509_get0_pubkey_bitstr@plt+0x17bfa>
  42ed12:	movl   $0x1,0x60(%rsp)
  42ed1a:	movl   $0x1,0x54(%rsp)
  42ed22:	jmpq   42e5ca <X509_get0_pubkey_bitstr@plt+0x17bfa>
  42ed27:	movl   $0x1,0x48(%rsp)
  42ed2f:	movl   $0x4,0x44(%rsp)
  42ed37:	jmpq   42e5ca <X509_get0_pubkey_bitstr@plt+0x17bfa>
  42ed3c:	callq  4158e0 <d2i_ECPrivateKey_bio@plt>
  42ed41:	mov    %rax,%r14
  42ed44:	jmpq   42e709 <X509_get0_pubkey_bitstr@plt+0x17d39>
  42ed49:	mov    (%r12),%rdi
  42ed4d:	lea    0x3511c(%rip),%rsi        # 463e70 <_fini+0x696c>
  42ed54:	xor    %eax,%eax
  42ed56:	callq  413c40 <BIO_printf@plt>
  42ed5b:	cmpl   $0x1,0x38(%rsp)
  42ed60:	je     42eed9 <X509_get0_pubkey_bitstr@plt+0x18509>
  42ed66:	cmpl   $0x3,0x38(%rsp)
  42ed6b:	jne    42eebc <X509_get0_pubkey_bitstr@plt+0x184ec>
  42ed71:	mov    0x50(%rsp),%eax
  42ed75:	test   %eax,%eax
  42ed77:	jne    42ef5e <X509_get0_pubkey_bitstr@plt+0x1858e>
  42ed7d:	mov    0x4c(%rsp),%eax
  42ed81:	or     0x3c(%rsp),%eax
  42ed85:	je     42ef35 <X509_get0_pubkey_bitstr@plt+0x18565>
  42ed8b:	mov    %r14,%rsi
  42ed8e:	mov    %rbx,%rdi
  42ed91:	callq  4157d0 <PEM_write_bio_EC_PUBKEY@plt>
  42ed96:	xor    %r15d,%r15d
  42ed99:	test   %eax,%eax
  42ed9b:	jne    42e77e <X509_get0_pubkey_bitstr@plt+0x17dae>
  42eda1:	mov    (%r12),%rdi
  42eda5:	lea    0x34c4f(%rip),%rsi        # 4639fb <_fini+0x64f7>
  42edac:	mov    $0x1,%r15b
  42edaf:	callq  413c40 <BIO_printf@plt>
  42edb4:	mov    (%r12),%rdi
  42edb8:	callq  413f40 <ERR_print_errors@plt>
  42edbd:	jmpq   42e77e <X509_get0_pubkey_bitstr@plt+0x17dae>
  42edc2:	nopw   0x0(%rax,%rax,1)
  42edc8:	xor    %edx,%edx
  42edca:	mov    %r14,%rsi
  42edcd:	mov    %rbx,%rdi
  42edd0:	callq  4157e0 <EC_KEY_print@plt>
  42edd5:	test   %eax,%eax
  42edd7:	jne    42e76f <X509_get0_pubkey_bitstr@plt+0x17d9f>
  42eddd:	mov    0x10(%rsp),%rdi
  42ede2:	mov    $0x1,%r15d
  42ede8:	callq  4142c0 <perror@plt>
  42eded:	mov    (%r12),%rdi
  42edf1:	callq  413f40 <ERR_print_errors@plt>
  42edf6:	jmpq   42e77e <X509_get0_pubkey_bitstr@plt+0x17dae>
  42edfb:	mov    0x54(%rsp),%esi
  42edff:	mov    %r14,%rdi
  42ee02:	callq  412b80 <EC_KEY_set_asn1_flag@plt>
  42ee07:	jmpq   42e763 <X509_get0_pubkey_bitstr@plt+0x17d93>
  42ee0c:	mov    0x44(%rsp),%esi
  42ee10:	mov    %r14,%rdi
  42ee13:	callq  4130d0 <EC_KEY_set_conv_form@plt>
  42ee18:	jmpq   42e757 <X509_get0_pubkey_bitstr@plt+0x17d87>
  42ee1d:	mov    0x78(%rsp),%rcx
  42ee22:	xor    %edx,%edx
  42ee24:	xor    %esi,%esi
  42ee26:	mov    %rbp,%rdi
  42ee29:	callq  412ff0 <PEM_read_bio_ECPrivateKey@plt>
  42ee2e:	mov    %rax,%r14
  42ee31:	jmpq   42e709 <X509_get0_pubkey_bitstr@plt+0x17d39>
  42ee36:	mov    0x24707b(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  42ee3d:	xor    %edx,%edx
  42ee3f:	mov    $0x6a,%esi
  42ee44:	mov    %rbx,%rdi
  42ee47:	mov    (%rax),%rcx
  42ee4a:	callq  412af0 <BIO_ctrl@plt>
  42ee4f:	jmpq   42e73e <X509_get0_pubkey_bitstr@plt+0x17d6e>
  42ee54:	mov    0x8(%rsp),%rdi
  42ee59:	xor    %r14d,%r14d
  42ee5c:	mov    $0x1,%r15d
  42ee62:	callq  4142c0 <perror@plt>
  42ee67:	jmpq   42e77e <X509_get0_pubkey_bitstr@plt+0x17dae>
  42ee6c:	mov    (%r12),%rdi
  42ee70:	lea    0x34b53(%rip),%rsi        # 4639ca <_fini+0x64c6>
  42ee77:	xor    %eax,%eax
  42ee79:	mov    $0x1,%r15d
  42ee7f:	callq  413c40 <BIO_printf@plt>
  42ee84:	mov    (%r12),%rdi
  42ee88:	callq  413f40 <ERR_print_errors@plt>
  42ee8d:	jmpq   42e77e <X509_get0_pubkey_bitstr@plt+0x17dae>
  42ee92:	mov    0x10(%rsp),%rdi
  42ee97:	mov    $0x1,%r15d
  42ee9d:	callq  4142c0 <perror@plt>
  42eea2:	jmpq   42e77e <X509_get0_pubkey_bitstr@plt+0x17dae>
  42eea7:	mov    %r8,%r13
  42eeaa:	movl   $0x1,0x3c(%rsp)
  42eeb2:	jmpq   42e5ca <X509_get0_pubkey_bitstr@plt+0x17bfa>
  42eeb7:	callq  414c30 <__stack_chk_fail@plt>
  42eebc:	mov    (%r12),%rdi
  42eec0:	lea    0x304a9(%rip),%rsi        # 45f370 <_fini+0x1e6c>
  42eec7:	xor    %eax,%eax
  42eec9:	mov    $0x1,%r15d
  42eecf:	callq  413c40 <BIO_printf@plt>
  42eed4:	jmpq   42e77e <X509_get0_pubkey_bitstr@plt+0x17dae>
  42eed9:	mov    0x50(%rsp),%edx
  42eedd:	test   %edx,%edx
  42eedf:	jne    42ef6e <X509_get0_pubkey_bitstr@plt+0x1859e>
  42eee5:	mov    0x4c(%rsp),%eax
  42eee9:	or     0x3c(%rsp),%eax
  42eeed:	mov    %r14,%rsi
  42eef0:	mov    %rbx,%rdi
  42eef3:	je     42ef28 <X509_get0_pubkey_bitstr@plt+0x18558>
  42eef5:	callq  414540 <i2d_EC_PUBKEY_bio@plt>
  42eefa:	jmpq   42ed96 <X509_get0_pubkey_bitstr@plt+0x183c6>
  42eeff:	lea    0x1(%rdx),%rdi
  42ef03:	mov    %r8,0x68(%rsp)
  42ef08:	callq  416810 <EVP_get_cipherbyname@plt>
  42ef0d:	test   %rax,%rax
  42ef10:	mov    %rax,0x58(%rsp)
  42ef15:	mov    0x68(%rsp),%r8
  42ef1a:	je     42e7a9 <X509_get0_pubkey_bitstr@plt+0x17dd9>
  42ef20:	mov    %r8,%r13
  42ef23:	jmpq   42e5ca <X509_get0_pubkey_bitstr@plt+0x17bfa>
  42ef28:	callq  414d00 <i2d_ECPrivateKey_bio@plt>
  42ef2d:	nopl   (%rax)
  42ef30:	jmpq   42ed96 <X509_get0_pubkey_bitstr@plt+0x183c6>
  42ef35:	mov    0x80(%rsp),%rax
  42ef3d:	mov    0x58(%rsp),%rdx
  42ef42:	xor    %r9d,%r9d
  42ef45:	xor    %r8d,%r8d
  42ef48:	xor    %ecx,%ecx
  42ef4a:	mov    %r14,%rsi
  42ef4d:	mov    %rbx,%rdi
  42ef50:	mov    %rax,(%rsp)
  42ef54:	callq  415d90 <PEM_write_bio_ECPrivateKey@plt>
  42ef59:	jmpq   42ed96 <X509_get0_pubkey_bitstr@plt+0x183c6>
  42ef5e:	mov    %r13,%rsi
  42ef61:	mov    %rbx,%rdi
  42ef64:	callq  414ad0 <PEM_write_bio_ECPKParameters@plt>
  42ef69:	jmpq   42ed96 <X509_get0_pubkey_bitstr@plt+0x183c6>
  42ef6e:	mov    0x247033(%rip),%rdi        # 675fa8 <_fini+0x218aa4>
  42ef75:	mov    %r13,%rdx
  42ef78:	mov    %rbx,%rsi
  42ef7b:	callq  413c70 <ASN1_i2d_bio@plt>
  42ef80:	jmpq   42ed96 <X509_get0_pubkey_bitstr@plt+0x183c6>
  42ef85:	nopw   %cs:0x0(%rax,%rax,1)
  42ef8f:	nop
  42ef90:	push   %r15
  42ef92:	push   %r14
  42ef94:	push   %r13
  42ef96:	push   %r12
  42ef98:	mov    %rsi,%r12
  42ef9b:	mov    $0x1,%esi
  42efa0:	push   %rbp
  42efa1:	mov    %edi,%ebp
  42efa3:	mov    $0xd,%edi
  42efa8:	push   %rbx
  42efa9:	sub    $0x88,%rsp
  42efb0:	callq  414ee0 <signal@plt>
  42efb5:	lea    0x24bd84(%rip),%rbx        # 67ad40 <_edata+0x38>
  42efbc:	mov    (%rbx),%rdi
  42efbf:	test   %rdi,%rdi
  42efc2:	je     42f6e1 <X509_get0_pubkey_bitstr@plt+0x18d11>
  42efc8:	xor    %esi,%esi
  42efca:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  42efcf:	test   %eax,%eax
  42efd1:	je     42f3c0 <X509_get0_pubkey_bitstr@plt+0x189f0>
  42efd7:	mov    (%r12),%rax
  42efdb:	sub    $0x1,%ebp
  42efde:	lea    0x8(%r12),%r8
  42efe3:	test   %ebp,%ebp
  42efe5:	movq   $0x0,0x58(%rsp)
  42efee:	movl   $0x0,0x40(%rsp)
  42eff6:	movl   $0x0,0x7c(%rsp)
  42effe:	movl   $0x3,0x8(%rsp)
  42f006:	mov    $0x3,%r15d
  42f00c:	mov    %rax,0x20(%rsp)
  42f011:	movq   $0x0,0x18(%rsp)
  42f01a:	movq   $0x0,0x10(%rsp)
  42f023:	movl   $0x0,0x74(%rsp)
  42f02b:	movl   $0x0,0x70(%rsp)
  42f033:	movl   $0x0,0x28(%rsp)
  42f03b:	movl   $0x0,0x38(%rsp)
  42f043:	movl   $0x0,0x78(%rsp)
  42f04b:	movl   $0x0,0x60(%rsp)
  42f053:	movq   $0x0,0x68(%rsp)
  42f05c:	movq   $0x0,0x30(%rsp)
  42f065:	movl   $0x0,0x64(%rsp)
  42f06d:	movl   $0x1,0x54(%rsp)
  42f075:	movl   $0x0,0x50(%rsp)
  42f07d:	movl   $0x4,0x4c(%rsp)
  42f085:	jle    42f112 <X509_get0_pubkey_bitstr@plt+0x18742>
  42f08b:	lea    0x2ec4d(%rip),%r14        # 45dcdf <_fini+0x7db>
  42f092:	mov    $0x8,%r13d
  42f098:	jmp    42f0c5 <X509_get0_pubkey_bitstr@plt+0x186f5>
  42f09a:	nopw   0x0(%rax,%rax,1)
  42f0a0:	sub    $0x1,%ebp
  42f0a3:	je     42f4d0 <X509_get0_pubkey_bitstr@plt+0x18b00>
  42f0a9:	mov    0x8(%r8),%rdi
  42f0ad:	lea    0x8(%r8),%r12
  42f0b1:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  42f0b6:	mov    %eax,%r15d
  42f0b9:	sub    $0x1,%ebp
  42f0bc:	lea    0x8(%r12),%r8
  42f0c1:	test   %ebp,%ebp
  42f0c3:	jle    42f112 <X509_get0_pubkey_bitstr@plt+0x18742>
  42f0c5:	mov    (%r8),%rdx
  42f0c8:	mov    %r14,%rdi
  42f0cb:	mov    %r13,%rcx
  42f0ce:	mov    %rdx,%rsi
  42f0d1:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42f0d3:	je     42f0a0 <X509_get0_pubkey_bitstr@plt+0x186d0>
  42f0d5:	lea    0x2f0b4(%rip),%rdi        # 45e190 <_fini+0xc8c>
  42f0dc:	mov    $0x9,%ecx
  42f0e1:	mov    %rdx,%rsi
  42f0e4:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42f0e6:	jne    42f410 <X509_get0_pubkey_bitstr@plt+0x18a40>
  42f0ec:	sub    $0x1,%ebp
  42f0ef:	je     42f4d0 <X509_get0_pubkey_bitstr@plt+0x18b00>
  42f0f5:	mov    0x8(%r8),%rdi
  42f0f9:	lea    0x8(%r8),%r12
  42f0fd:	sub    $0x1,%ebp
  42f100:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  42f105:	test   %ebp,%ebp
  42f107:	mov    %eax,0x8(%rsp)
  42f10b:	lea    0x8(%r12),%r8
  42f110:	jg     42f0c5 <X509_get0_pubkey_bitstr@plt+0x186f5>
  42f112:	callq  416990 <ERR_load_crypto_strings@plt>
  42f117:	callq  4152b0 <BIO_s_file@plt>
  42f11c:	mov    %rax,%rdi
  42f11f:	callq  414a20 <BIO_new@plt>
  42f124:	mov    %rax,%r14
  42f127:	callq  4152b0 <BIO_s_file@plt>
  42f12c:	mov    %rax,%rdi
  42f12f:	callq  414a20 <BIO_new@plt>
  42f134:	test   %rax,%rax
  42f137:	mov    %rax,%rbp
  42f13a:	je     42f7c7 <X509_get0_pubkey_bitstr@plt+0x18df7>
  42f140:	test   %r14,%r14
  42f143:	je     42f7c7 <X509_get0_pubkey_bitstr@plt+0x18df7>
  42f149:	cmpq   $0x0,0x10(%rsp)
  42f14f:	je     42f7dd <X509_get0_pubkey_bitstr@plt+0x18e0d>
  42f155:	mov    0x10(%rsp),%rcx
  42f15a:	mov    $0x3,%edx
  42f15f:	mov    $0x6c,%esi
  42f164:	mov    %r14,%rdi
  42f167:	callq  412af0 <BIO_ctrl@plt>
  42f16c:	test   %rax,%rax
  42f16f:	jle    42f9ac <X509_get0_pubkey_bitstr@plt+0x18fdc>
  42f175:	cmpq   $0x0,0x18(%rsp)
  42f17b:	je     42f98e <X509_get0_pubkey_bitstr@plt+0x18fbe>
  42f181:	mov    0x18(%rsp),%rcx
  42f186:	mov    $0x5,%edx
  42f18b:	mov    $0x6c,%esi
  42f190:	mov    %rbp,%rdi
  42f193:	callq  412af0 <BIO_ctrl@plt>
  42f198:	test   %rax,%rax
  42f19b:	jle    42fa48 <X509_get0_pubkey_bitstr@plt+0x19078>
  42f1a1:	mov    0x58(%rsp),%rsi
  42f1a6:	mov    (%rbx),%rdi
  42f1a9:	xor    %edx,%edx
  42f1ab:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  42f1b0:	mov    0x60(%rsp),%r13d
  42f1b5:	test   %r13d,%r13d
  42f1b8:	jne    42f866 <X509_get0_pubkey_bitstr@plt+0x18e96>
  42f1be:	mov    0x30(%rsp),%rsi
  42f1c3:	test   %rsi,%rsi
  42f1c6:	je     42fae0 <X509_get0_pubkey_bitstr@plt+0x19110>
  42f1cc:	lea    0x359f8(%rip),%rdi        # 464bcb <_fini+0x76c7>
  42f1d3:	mov    $0xa,%ecx
  42f1d8:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42f1da:	je     42f95e <X509_get0_pubkey_bitstr@plt+0x18f8e>
  42f1e0:	mov    0x30(%rsp),%rsi
  42f1e5:	lea    0x359e9(%rip),%rdi        # 464bd5 <_fini+0x76d1>
  42f1ec:	mov    $0xa,%ecx
  42f1f1:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42f1f3:	jne    42f929 <X509_get0_pubkey_bitstr@plt+0x18f59>
  42f1f9:	mov    (%rbx),%rdi
  42f1fc:	lea    0x354e5(%rip),%rsi        # 4646e8 <_fini+0x71e4>
  42f203:	xor    %eax,%eax
  42f205:	callq  413c40 <BIO_printf@plt>
  42f20a:	mov    $0x19f,%eax
  42f20f:	mov    %eax,%edi
  42f211:	callq  415fa0 <EC_GROUP_new_by_curve_name@plt>
  42f216:	test   %rax,%rax
  42f219:	mov    %rax,%r13
  42f21c:	je     42fcbe <X509_get0_pubkey_bitstr@plt+0x192ee>
  42f222:	mov    0x54(%rsp),%esi
  42f226:	mov    %rax,%rdi
  42f229:	callq  414ff0 <EC_GROUP_set_asn1_flag@plt>
  42f22e:	mov    0x4c(%rsp),%esi
  42f232:	mov    %r13,%rdi
  42f235:	callq  413340 <EC_GROUP_set_point_conversion_form@plt>
  42f23a:	mov    0x50(%rsp),%r12d
  42f23f:	test   %r12d,%r12d
  42f242:	je     42f250 <X509_get0_pubkey_bitstr@plt+0x18880>
  42f244:	mov    0x4c(%rsp),%esi
  42f248:	mov    %r13,%rdi
  42f24b:	callq  413340 <EC_GROUP_set_point_conversion_form@plt>
  42f250:	mov    0x64(%rsp),%r11d
  42f255:	test   %r11d,%r11d
  42f258:	je     42f266 <X509_get0_pubkey_bitstr@plt+0x18896>
  42f25a:	mov    0x54(%rsp),%esi
  42f25e:	mov    %r13,%rdi
  42f261:	callq  414ff0 <EC_GROUP_set_asn1_flag@plt>
  42f266:	mov    0x78(%rsp),%r10d
  42f26b:	test   %r10d,%r10d
  42f26e:	je     42f27c <X509_get0_pubkey_bitstr@plt+0x188ac>
  42f270:	xor    %edx,%edx
  42f272:	xor    %esi,%esi
  42f274:	mov    %r13,%rdi
  42f277:	callq  4154b0 <EC_GROUP_set_seed@plt>
  42f27c:	mov    0x28(%rsp),%r9d
  42f281:	test   %r9d,%r9d
  42f284:	jne    42fab0 <X509_get0_pubkey_bitstr@plt+0x190e0>
  42f28a:	mov    0x38(%rsp),%ecx
  42f28e:	test   %ecx,%ecx
  42f290:	je     42f2cc <X509_get0_pubkey_bitstr@plt+0x188fc>
  42f292:	mov    (%rbx),%rdi
  42f295:	lea    0x354b4(%rip),%rsi        # 464750 <_fini+0x724c>
  42f29c:	xor    %eax,%eax
  42f29e:	callq  413c40 <BIO_printf@plt>
  42f2a3:	xor    %esi,%esi
  42f2a5:	mov    %r13,%rdi
  42f2a8:	callq  4127e0 <EC_GROUP_check@plt>
  42f2ad:	test   %eax,%eax
  42f2af:	jne    42fbe0 <X509_get0_pubkey_bitstr@plt+0x19210>
  42f2b5:	mov    (%rbx),%rdi
  42f2b8:	lea    0x3ce9b(%rip),%rsi        # 46c15a <_fini+0xec56>
  42f2bf:	callq  413c40 <BIO_printf@plt>
  42f2c4:	mov    (%rbx),%rdi
  42f2c7:	callq  413f40 <ERR_print_errors@plt>
  42f2cc:	mov    0x40(%rsp),%r8d
  42f2d1:	test   %r8d,%r8d
  42f2d4:	jne    42fb4b <X509_get0_pubkey_bitstr@plt+0x1917b>
  42f2da:	xor    %r15d,%r15d
  42f2dd:	movq   $0x0,0x18(%rsp)
  42f2e6:	movq   $0x0,0x10(%rsp)
  42f2ef:	movq   $0x0,0x28(%rsp)
  42f2f8:	movq   $0x0,0x40(%rsp)
  42f301:	movq   $0x0,0x38(%rsp)
  42f30a:	movq   $0x0,0x20(%rsp)
  42f313:	mov    0x7c(%rsp),%edi
  42f317:	test   %edi,%edi
  42f319:	jne    42fa60 <X509_get0_pubkey_bitstr@plt+0x19090>
  42f31f:	cmpl   $0x1,0x8(%rsp)
  42f324:	je     42fd6e <X509_get0_pubkey_bitstr@plt+0x1939e>
  42f32a:	cmpl   $0x3,0x8(%rsp)
  42f32f:	je     42fcf7 <X509_get0_pubkey_bitstr@plt+0x19327>
  42f335:	mov    (%rbx),%rdi
  42f338:	lea    0x30031(%rip),%rsi        # 45f370 <_fini+0x1e6c>
  42f33f:	xor    %eax,%eax
  42f341:	mov    $0x1,%r12d
  42f347:	callq  413c40 <BIO_printf@plt>
  42f34c:	cmpq   $0x0,0x20(%rsp)
  42f352:	je     42f35e <X509_get0_pubkey_bitstr@plt+0x1898e>
  42f354:	mov    0x20(%rsp),%rdi
  42f359:	callq  4138e0 <BN_free@plt>
  42f35e:	mov    0x38(%rsp),%rdi
  42f363:	test   %rdi,%rdi
  42f366:	je     42f36d <X509_get0_pubkey_bitstr@plt+0x1899d>
  42f368:	callq  4138e0 <BN_free@plt>
  42f36d:	mov    0x40(%rsp),%rdi
  42f372:	test   %rdi,%rdi
  42f375:	je     42f37c <X509_get0_pubkey_bitstr@plt+0x189ac>
  42f377:	callq  4138e0 <BN_free@plt>
  42f37c:	mov    0x28(%rsp),%rdi
  42f381:	test   %rdi,%rdi
  42f384:	je     42f38b <X509_get0_pubkey_bitstr@plt+0x189bb>
  42f386:	callq  4138e0 <BN_free@plt>
  42f38b:	mov    0x10(%rsp),%rdi
  42f390:	test   %rdi,%rdi
  42f393:	je     42f39a <X509_get0_pubkey_bitstr@plt+0x189ca>
  42f395:	callq  4138e0 <BN_free@plt>
  42f39a:	mov    0x18(%rsp),%rdi
  42f39f:	test   %rdi,%rdi
  42f3a2:	je     42f3a9 <X509_get0_pubkey_bitstr@plt+0x189d9>
  42f3a4:	callq  4138e0 <BN_free@plt>
  42f3a9:	test   %r15,%r15
  42f3ac:	je     42f3ce <X509_get0_pubkey_bitstr@plt+0x189fe>
  42f3ae:	mov    %r15,%rdi
  42f3b1:	callq  415020 <CRYPTO_free@plt>
  42f3b6:	jmp    42f3ce <X509_get0_pubkey_bitstr@plt+0x189fe>
  42f3b8:	nopl   0x0(%rax,%rax,1)
  42f3c0:	mov    $0x1,%r12d
  42f3c6:	xor    %ebp,%ebp
  42f3c8:	xor    %r14d,%r14d
  42f3cb:	xor    %r13d,%r13d
  42f3ce:	test   %r14,%r14
  42f3d1:	je     42f3db <X509_get0_pubkey_bitstr@plt+0x18a0b>
  42f3d3:	mov    %r14,%rdi
  42f3d6:	callq  413960 <BIO_free@plt>
  42f3db:	test   %rbp,%rbp
  42f3de:	je     42f3e8 <X509_get0_pubkey_bitstr@plt+0x18a18>
  42f3e0:	mov    %rbp,%rdi
  42f3e3:	callq  416570 <BIO_free_all@plt>
  42f3e8:	test   %r13,%r13
  42f3eb:	je     42f3f5 <X509_get0_pubkey_bitstr@plt+0x18a25>
  42f3ed:	mov    %r13,%rdi
  42f3f0:	callq  414e80 <EC_GROUP_free@plt>
  42f3f5:	add    $0x88,%rsp
  42f3fc:	mov    %r12d,%eax
  42f3ff:	pop    %rbx
  42f400:	pop    %rbp
  42f401:	pop    %r12
  42f403:	pop    %r13
  42f405:	pop    %r14
  42f407:	pop    %r15
  42f409:	retq   
  42f40a:	nopw   0x0(%rax,%rax,1)
  42f410:	movzbl (%rdx),%eax
  42f413:	sub    $0x2d,%eax
  42f416:	jne    42f448 <X509_get0_pubkey_bitstr@plt+0x18a78>
  42f418:	cmpb   $0x69,0x1(%rdx)
  42f41c:	jne    42f448 <X509_get0_pubkey_bitstr@plt+0x18a78>
  42f41e:	cmpb   $0x6e,0x2(%rdx)
  42f422:	jne    42f448 <X509_get0_pubkey_bitstr@plt+0x18a78>
  42f424:	cmpb   $0x0,0x3(%rdx)
  42f428:	jne    42f448 <X509_get0_pubkey_bitstr@plt+0x18a78>
  42f42a:	sub    $0x1,%ebp
  42f42d:	je     42f4d0 <X509_get0_pubkey_bitstr@plt+0x18b00>
  42f433:	mov    0x8(%r8),%rax
  42f437:	lea    0x8(%r8),%r12
  42f43b:	mov    %rax,0x10(%rsp)
  42f440:	jmpq   42f0b9 <X509_get0_pubkey_bitstr@plt+0x186e9>
  42f445:	nopl   (%rax)
  42f448:	lea    0x2e9f7(%rip),%rdi        # 45de46 <_fini+0x942>
  42f44f:	mov    $0x5,%ecx
  42f454:	mov    %rdx,%rsi
  42f457:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42f459:	jne    42f478 <X509_get0_pubkey_bitstr@plt+0x18aa8>
  42f45b:	sub    $0x1,%ebp
  42f45e:	je     42f4d0 <X509_get0_pubkey_bitstr@plt+0x18b00>
  42f460:	mov    0x8(%r8),%rax
  42f464:	lea    0x8(%r8),%r12
  42f468:	mov    %rax,0x18(%rsp)
  42f46d:	jmpq   42f0b9 <X509_get0_pubkey_bitstr@plt+0x186e9>
  42f472:	nopw   0x0(%rax,%rax,1)
  42f478:	lea    0x2ede8(%rip),%rdi        # 45e267 <_fini+0xd63>
  42f47f:	mov    $0x6,%ecx
  42f484:	mov    %rdx,%rsi
  42f487:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42f489:	je     42f680 <X509_get0_pubkey_bitstr@plt+0x18cb0>
  42f48f:	test   %eax,%eax
  42f491:	jne    42f690 <X509_get0_pubkey_bitstr@plt+0x18cc0>
  42f497:	cmpb   $0x43,0x1(%rdx)
  42f49b:	jne    42f690 <X509_get0_pubkey_bitstr@plt+0x18cc0>
  42f4a1:	cmpb   $0x0,0x2(%rdx)
  42f4a5:	jne    42f690 <X509_get0_pubkey_bitstr@plt+0x18cc0>
  42f4ab:	mov    %r8,%r12
  42f4ae:	movl   $0x1,0x40(%rsp)
  42f4b6:	jmpq   42f0b9 <X509_get0_pubkey_bitstr@plt+0x186e9>
  42f4bb:	mov    (%rbx),%rdi
  42f4be:	lea    0x2e867(%rip),%rsi        # 45dd2c <_fini+0x828>
  42f4c5:	xor    %eax,%eax
  42f4c7:	callq  413c40 <BIO_printf@plt>
  42f4cc:	nopl   0x0(%rax)
  42f4d0:	mov    0x20(%rsp),%rdx
  42f4d5:	mov    (%rbx),%rdi
  42f4d8:	lea    0x2f259(%rip),%rsi        # 45e738 <_fini+0x1234>
  42f4df:	xor    %eax,%eax
  42f4e1:	mov    $0x1,%r12d
  42f4e7:	callq  413c40 <BIO_printf@plt>
  42f4ec:	mov    (%rbx),%rdi
  42f4ef:	lea    0x2e85f(%rip),%rsi        # 45dd55 <_fini+0x851>
  42f4f6:	xor    %eax,%eax
  42f4f8:	callq  413c40 <BIO_printf@plt>
  42f4fd:	mov    (%rbx),%rdi
  42f500:	lea    0x34c81(%rip),%rsi        # 464188 <_fini+0x6c84>
  42f507:	xor    %eax,%eax
  42f509:	callq  413c40 <BIO_printf@plt>
  42f50e:	mov    (%rbx),%rdi
  42f511:	lea    0x34cb0(%rip),%rsi        # 4641c8 <_fini+0x6cc4>
  42f518:	xor    %eax,%eax
  42f51a:	callq  413c40 <BIO_printf@plt>
  42f51f:	mov    (%rbx),%rdi
  42f522:	lea    0x34ccf(%rip),%rsi        # 4641f8 <_fini+0x6cf4>
  42f529:	xor    %eax,%eax
  42f52b:	callq  413c40 <BIO_printf@plt>
  42f530:	mov    (%rbx),%rdi
  42f533:	lea    0x34cee(%rip),%rsi        # 464228 <_fini+0x6d24>
  42f53a:	xor    %eax,%eax
  42f53c:	callq  413c40 <BIO_printf@plt>
  42f541:	mov    (%rbx),%rdi
  42f544:	lea    0x34d15(%rip),%rsi        # 464260 <_fini+0x6d5c>
  42f54b:	xor    %eax,%eax
  42f54d:	callq  413c40 <BIO_printf@plt>
  42f552:	mov    (%rbx),%rdi
  42f555:	lea    0x34d3c(%rip),%rsi        # 464298 <_fini+0x6d94>
  42f55c:	xor    %eax,%eax
  42f55e:	callq  413c40 <BIO_printf@plt>
  42f563:	mov    (%rbx),%rdi
  42f566:	lea    0x34d6b(%rip),%rsi        # 4642d8 <_fini+0x6dd4>
  42f56d:	xor    %eax,%eax
  42f56f:	callq  413c40 <BIO_printf@plt>
  42f574:	mov    (%rbx),%rdi
  42f577:	lea    0x34d8a(%rip),%rsi        # 464308 <_fini+0x6e04>
  42f57e:	xor    %eax,%eax
  42f580:	callq  413c40 <BIO_printf@plt>
  42f585:	mov    (%rbx),%rdi
  42f588:	lea    0x34dc1(%rip),%rsi        # 464350 <_fini+0x6e4c>
  42f58f:	xor    %eax,%eax
  42f591:	callq  413c40 <BIO_printf@plt>
  42f596:	mov    (%rbx),%rdi
  42f599:	lea    0x34df8(%rip),%rsi        # 464398 <_fini+0x6e94>
  42f5a0:	xor    %eax,%eax
  42f5a2:	callq  413c40 <BIO_printf@plt>
  42f5a7:	mov    (%rbx),%rdi
  42f5aa:	lea    0x34e3f(%rip),%rsi        # 4643f0 <_fini+0x6eec>
  42f5b1:	xor    %eax,%eax
  42f5b3:	callq  413c40 <BIO_printf@plt>
  42f5b8:	mov    (%rbx),%rdi
  42f5bb:	lea    0x34e6e(%rip),%rsi        # 464430 <_fini+0x6f2c>
  42f5c2:	xor    %eax,%eax
  42f5c4:	callq  413c40 <BIO_printf@plt>
  42f5c9:	mov    (%rbx),%rdi
  42f5cc:	lea    0x34e8d(%rip),%rsi        # 464460 <_fini+0x6f5c>
  42f5d3:	xor    %eax,%eax
  42f5d5:	callq  413c40 <BIO_printf@plt>
  42f5da:	mov    (%rbx),%rdi
  42f5dd:	lea    0x34ebc(%rip),%rsi        # 4644a0 <_fini+0x6f9c>
  42f5e4:	xor    %eax,%eax
  42f5e6:	callq  413c40 <BIO_printf@plt>
  42f5eb:	mov    (%rbx),%rdi
  42f5ee:	lea    0x34edb(%rip),%rsi        # 4644d0 <_fini+0x6fcc>
  42f5f5:	xor    %eax,%eax
  42f5f7:	callq  413c40 <BIO_printf@plt>
  42f5fc:	mov    (%rbx),%rdi
  42f5ff:	lea    0x34f12(%rip),%rsi        # 464518 <_fini+0x7014>
  42f606:	xor    %eax,%eax
  42f608:	xor    %ebp,%ebp
  42f60a:	xor    %r14d,%r14d
  42f60d:	xor    %r13d,%r13d
  42f610:	callq  413c40 <BIO_printf@plt>
  42f615:	mov    (%rbx),%rdi
  42f618:	lea    0x34f29(%rip),%rsi        # 464548 <_fini+0x7044>
  42f61f:	xor    %eax,%eax
  42f621:	callq  413c40 <BIO_printf@plt>
  42f626:	mov    (%rbx),%rdi
  42f629:	lea    0x34f58(%rip),%rsi        # 464588 <_fini+0x7084>
  42f630:	xor    %eax,%eax
  42f632:	callq  413c40 <BIO_printf@plt>
  42f637:	mov    (%rbx),%rdi
  42f63a:	lea    0x34f77(%rip),%rsi        # 4645b8 <_fini+0x70b4>
  42f641:	xor    %eax,%eax
  42f643:	callq  413c40 <BIO_printf@plt>
  42f648:	mov    (%rbx),%rdi
  42f64b:	lea    0x34fb6(%rip),%rsi        # 464608 <_fini+0x7104>
  42f652:	xor    %eax,%eax
  42f654:	callq  413c40 <BIO_printf@plt>
  42f659:	mov    (%rbx),%rdi
  42f65c:	lea    0x34fcd(%rip),%rsi        # 464630 <_fini+0x712c>
  42f663:	xor    %eax,%eax
  42f665:	callq  413c40 <BIO_printf@plt>
  42f66a:	mov    (%rbx),%rdi
  42f66d:	lea    0x34ffc(%rip),%rsi        # 464670 <_fini+0x716c>
  42f674:	xor    %eax,%eax
  42f676:	callq  413c40 <BIO_printf@plt>
  42f67b:	jmpq   42f3ce <X509_get0_pubkey_bitstr@plt+0x189fe>
  42f680:	mov    %r8,%r12
  42f683:	movl   $0x1,0x28(%rsp)
  42f68b:	jmpq   42f0b9 <X509_get0_pubkey_bitstr@plt+0x186e9>
  42f690:	lea    0x3034d(%rip),%rdi        # 45f9e4 <_fini+0x24e0>
  42f697:	mov    $0x7,%ecx
  42f69c:	mov    %rdx,%rsi
  42f69f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42f6a1:	je     42f6d1 <X509_get0_pubkey_bitstr@plt+0x18d01>
  42f6a3:	lea    0x318be(%rip),%rdi        # 460f68 <_fini+0x3a64>
  42f6aa:	mov    $0x6,%ecx
  42f6af:	mov    %rdx,%rsi
  42f6b2:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42f6b4:	jne    42f71e <X509_get0_pubkey_bitstr@plt+0x18d4e>
  42f6b6:	sub    $0x1,%ebp
  42f6b9:	je     42f4d0 <X509_get0_pubkey_bitstr@plt+0x18b00>
  42f6bf:	mov    0x8(%r8),%rax
  42f6c3:	lea    0x8(%r8),%r12
  42f6c7:	mov    %rax,0x30(%rsp)
  42f6cc:	jmpq   42f0b9 <X509_get0_pubkey_bitstr@plt+0x186e9>
  42f6d1:	mov    %r8,%r12
  42f6d4:	movl   $0x1,0x38(%rsp)
  42f6dc:	jmpq   42f0b9 <X509_get0_pubkey_bitstr@plt+0x186e9>
  42f6e1:	callq  4152b0 <BIO_s_file@plt>
  42f6e6:	mov    %rax,%rdi
  42f6e9:	callq  414a20 <BIO_new@plt>
  42f6ee:	test   %rax,%rax
  42f6f1:	mov    %rax,%rdi
  42f6f4:	mov    %rax,(%rbx)
  42f6f7:	je     42efc8 <X509_get0_pubkey_bitstr@plt+0x185f8>
  42f6fd:	mov    0x24687c(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  42f704:	mov    $0x6a,%esi
  42f709:	mov    (%rdx),%rcx
  42f70c:	mov    $0x10,%edx
  42f711:	callq  412af0 <BIO_ctrl@plt>
  42f716:	mov    (%rbx),%rdi
  42f719:	jmpq   42efc8 <X509_get0_pubkey_bitstr@plt+0x185f8>
  42f71e:	lea    0x3547c(%rip),%rdi        # 464ba1 <_fini+0x769d>
  42f725:	mov    $0xd,%ecx
  42f72a:	mov    %rdx,%rsi
  42f72d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42f72f:	je     42f7b7 <X509_get0_pubkey_bitstr@plt+0x18de7>
  42f735:	lea    0x346f2(%rip),%rdi        # 463e2e <_fini+0x692a>
  42f73c:	mov    $0xb,%ecx
  42f741:	mov    %rdx,%rsi
  42f744:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42f746:	jne    42f7fb <X509_get0_pubkey_bitstr@plt+0x18e2b>
  42f74c:	sub    $0x1,%ebp
  42f74f:	je     42f4d0 <X509_get0_pubkey_bitstr@plt+0x18b00>
  42f755:	mov    0x8(%r8),%rax
  42f759:	lea    0x346db(%rip),%rdi        # 463e3b <_fini+0x6937>
  42f760:	mov    $0xb,%ecx
  42f765:	lea    0x8(%r8),%r12
  42f769:	mov    %rax,%rsi
  42f76c:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42f76e:	je     42f979 <X509_get0_pubkey_bitstr@plt+0x18fa9>
  42f774:	lea    0x346be(%rip),%rdi        # 463e39 <_fini+0x6935>
  42f77b:	mov    $0xd,%ecx
  42f780:	mov    %rax,%rsi
  42f783:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42f785:	je     42fb13 <X509_get0_pubkey_bitstr@plt+0x19143>
  42f78b:	lea    0x346b4(%rip),%rdi        # 463e46 <_fini+0x6942>
  42f792:	mov    $0x7,%ecx
  42f797:	mov    %rax,%rsi
  42f79a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42f79c:	jne    42f4d0 <X509_get0_pubkey_bitstr@plt+0x18b00>
  42f7a2:	movl   $0x1,0x50(%rsp)
  42f7aa:	movl   $0x6,0x4c(%rsp)
  42f7b2:	jmpq   42f0b9 <X509_get0_pubkey_bitstr@plt+0x186e9>
  42f7b7:	mov    %r8,%r12
  42f7ba:	movl   $0x1,0x60(%rsp)
  42f7c2:	jmpq   42f0b9 <X509_get0_pubkey_bitstr@plt+0x186e9>
  42f7c7:	mov    (%rbx),%rdi
  42f7ca:	mov    $0x1,%r12d
  42f7d0:	xor    %r13d,%r13d
  42f7d3:	callq  413f40 <ERR_print_errors@plt>
  42f7d8:	jmpq   42f3ce <X509_get0_pubkey_bitstr@plt+0x189fe>
  42f7dd:	mov    0x24672c(%rip),%rax        # 675f10 <_fini+0x218a0c>
  42f7e4:	xor    %edx,%edx
  42f7e6:	mov    $0x6a,%esi
  42f7eb:	mov    %r14,%rdi
  42f7ee:	mov    (%rax),%rcx
  42f7f1:	callq  412af0 <BIO_ctrl@plt>
  42f7f6:	jmpq   42f175 <X509_get0_pubkey_bitstr@plt+0x187a5>
  42f7fb:	lea    0x3464b(%rip),%rdi        # 463e4d <_fini+0x6949>
  42f802:	mov    $0xb,%ecx
  42f807:	mov    %rdx,%rsi
  42f80a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42f80c:	jne    42f9c4 <X509_get0_pubkey_bitstr@plt+0x18ff4>
  42f812:	sub    $0x1,%ebp
  42f815:	je     42f4d0 <X509_get0_pubkey_bitstr@plt+0x18b00>
  42f81b:	mov    0x8(%r8),%rax
  42f81f:	lea    0x38c1f(%rip),%rdi        # 468445 <_fini+0xaf41>
  42f826:	mov    $0xc,%ecx
  42f82b:	lea    0x8(%r8),%r12
  42f82f:	mov    %rax,%rsi
  42f832:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42f834:	je     42fb28 <X509_get0_pubkey_bitstr@plt+0x19158>
  42f83a:	lea    0x3fdff(%rip),%rdi        # 46f640 <_fini+0x1213c>
  42f841:	mov    $0x9,%ecx
  42f846:	mov    %rax,%rsi
  42f849:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42f84b:	jne    42f4d0 <X509_get0_pubkey_bitstr@plt+0x18b00>
  42f851:	movl   $0x1,0x64(%rsp)
  42f859:	movl   $0x0,0x54(%rsp)
  42f861:	jmpq   42f0b9 <X509_get0_pubkey_bitstr@plt+0x186e9>
  42f866:	xor    %esi,%esi
  42f868:	xor    %edi,%edi
  42f86a:	callq  4131c0 <EC_get_builtin_curves@plt>
  42f86f:	lea    0x35341(%rip),%rsi        # 464bb7 <_fini+0x76b3>
  42f876:	mov    %eax,%edi
  42f878:	mov    $0x15f,%edx
  42f87d:	shl    $0x4,%edi
  42f880:	mov    %rax,%rbx
  42f883:	callq  413d50 <CRYPTO_malloc@plt>
  42f888:	test   %rax,%rax
  42f88b:	mov    %rax,%r12
  42f88e:	mov    %rax,0x8(%rsp)
  42f893:	je     42fb3d <X509_get0_pubkey_bitstr@plt+0x1916d>
  42f899:	mov    %rbx,%rsi
  42f89c:	mov    %rax,%rdi
  42f89f:	callq  4131c0 <EC_get_builtin_curves@plt>
  42f8a4:	test   %rax,%rax
  42f8a7:	je     42fc3d <X509_get0_pubkey_bitstr@plt+0x1926d>
  42f8ad:	xor    %r13d,%r13d
  42f8b0:	test   %rbx,%rbx
  42f8b3:	je     42f914 <X509_get0_pubkey_bitstr@plt+0x18f44>
  42f8b5:	mov    (%r12),%edi
  42f8b9:	mov    0x8(%r12),%r15
  42f8be:	callq  415b30 <OBJ_nid2sn@plt>
  42f8c3:	lea    0x3489e(%rip),%rdx        # 464168 <_fini+0x6c64>
  42f8ca:	test   %r15,%r15
  42f8cd:	lea    0x352ed(%rip),%rsi        # 464bc1 <_fini+0x76bd>
  42f8d4:	mov    %rbp,%rdi
  42f8d7:	cmove  %rdx,%r15
  42f8db:	lea    0x304e0(%rip),%rdx        # 45fdc2 <_fini+0x28be>
  42f8e2:	test   %rax,%rax
  42f8e5:	cmove  %rdx,%rax
  42f8e9:	add    $0x1,%r13
  42f8ed:	add    $0x10,%r12
  42f8f1:	mov    %rax,%rdx
  42f8f4:	xor    %eax,%eax
  42f8f6:	callq  413c40 <BIO_printf@plt>
  42f8fb:	lea    0x30eb7(%rip),%rsi        # 4607b9 <_fini+0x32b5>
  42f902:	xor    %eax,%eax
  42f904:	mov    %r15,%rdx
  42f907:	mov    %rbp,%rdi
  42f90a:	callq  413c40 <BIO_printf@plt>
  42f90f:	cmp    %rbx,%r13
  42f912:	jne    42f8b5 <X509_get0_pubkey_bitstr@plt+0x18ee5>
  42f914:	mov    0x8(%rsp),%rdi
  42f919:	xor    %r12d,%r12d
  42f91c:	xor    %r13d,%r13d
  42f91f:	callq  415020 <CRYPTO_free@plt>
  42f924:	jmpq   42f3ce <X509_get0_pubkey_bitstr@plt+0x189fe>
  42f929:	mov    0x30(%rsp),%r15
  42f92e:	mov    %r15,%rdi
  42f931:	callq  4140a0 <OBJ_sn2nid@plt>
  42f936:	test   %eax,%eax
  42f938:	jne    42f20f <X509_get0_pubkey_bitstr@plt+0x1883f>
  42f93e:	mov    (%rbx),%rdi
  42f941:	lea    0x35297(%rip),%rsi        # 464bdf <_fini+0x76db>
  42f948:	mov    %r15,%rdx
  42f94b:	mov    $0x1,%r12d
  42f951:	xor    %r13d,%r13d
  42f954:	callq  413c40 <BIO_printf@plt>
  42f959:	jmpq   42f3ce <X509_get0_pubkey_bitstr@plt+0x189fe>
  42f95e:	mov    (%rbx),%rdi
  42f961:	lea    0x34d48(%rip),%rsi        # 4646b0 <_fini+0x71ac>
  42f968:	xor    %eax,%eax
  42f96a:	callq  413c40 <BIO_printf@plt>
  42f96f:	mov    $0x199,%eax
  42f974:	jmpq   42f20f <X509_get0_pubkey_bitstr@plt+0x1883f>
  42f979:	movl   $0x1,0x50(%rsp)
  42f981:	movl   $0x2,0x4c(%rsp)
  42f989:	jmpq   42f0b9 <X509_get0_pubkey_bitstr@plt+0x186e9>
  42f98e:	mov    0x246523(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  42f995:	xor    %edx,%edx
  42f997:	mov    $0x6a,%esi
  42f99c:	mov    %rbp,%rdi
  42f99f:	mov    (%rax),%rcx
  42f9a2:	callq  412af0 <BIO_ctrl@plt>
  42f9a7:	jmpq   42f1a1 <X509_get0_pubkey_bitstr@plt+0x187d1>
  42f9ac:	mov    0x10(%rsp),%rdi
  42f9b1:	mov    $0x1,%r12d
  42f9b7:	xor    %r13d,%r13d
  42f9ba:	callq  4142c0 <perror@plt>
  42f9bf:	jmpq   42f3ce <X509_get0_pubkey_bitstr@plt+0x189fe>
  42f9c4:	lea    0x351e3(%rip),%rdi        # 464bae <_fini+0x76aa>
  42f9cb:	mov    $0x9,%ecx
  42f9d0:	mov    %rdx,%rsi
  42f9d3:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42f9d5:	je     42fad0 <X509_get0_pubkey_bitstr@plt+0x19100>
  42f9db:	lea    0x2e305(%rip),%rdi        # 45dce7 <_fini+0x7e3>
  42f9e2:	mov    $0x7,%ecx
  42f9e7:	mov    %rdx,%rsi
  42f9ea:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42f9ec:	je     42fcae <X509_get0_pubkey_bitstr@plt+0x192de>
  42f9f2:	lea    0x340ac(%rip),%rdi        # 463aa5 <_fini+0x65a1>
  42f9f9:	mov    %rdx,%rsi
  42f9fc:	mov    %r13,%rcx
  42f9ff:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42fa01:	je     42fcdf <X509_get0_pubkey_bitstr@plt+0x1930f>
  42fa07:	lea    0x2e7f3(%rip),%rdi        # 45e201 <_fini+0xcfd>
  42fa0e:	mov    $0x6,%ecx
  42fa13:	mov    %rdx,%rsi
  42fa16:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42fa18:	jne    42fda8 <X509_get0_pubkey_bitstr@plt+0x193d8>
  42fa1e:	sub    $0x1,%ebp
  42fa21:	je     42f4d0 <X509_get0_pubkey_bitstr@plt+0x18b00>
  42fa27:	mov    0x8(%r8),%rax
  42fa2b:	lea    0x8(%r8),%r12
  42fa2f:	movl   $0x1,0x70(%rsp)
  42fa37:	mov    %rax,0x68(%rsp)
  42fa3c:	jmpq   42f0b9 <X509_get0_pubkey_bitstr@plt+0x186e9>
  42fa41:	nopl   0x0(%rax)
  42fa48:	mov    0x18(%rsp),%rdi
  42fa4d:	mov    $0x1,%r12d
  42fa53:	xor    %r13d,%r13d
  42fa56:	callq  4142c0 <perror@plt>
  42fa5b:	jmpq   42f3ce <X509_get0_pubkey_bitstr@plt+0x189fe>
  42fa60:	mov    0x70(%rsp),%esi
  42fa64:	test   %esi,%esi
  42fa66:	jne    42fc55 <X509_get0_pubkey_bitstr@plt+0x19285>
  42fa6c:	mov    0x74(%rsp),%edx
  42fa70:	xor    %r12d,%r12d
  42fa73:	test   %edx,%edx
  42fa75:	je     42f34c <X509_get0_pubkey_bitstr@plt+0x1897c>
  42fa7b:	callq  413ff0 <EC_KEY_new@plt>
  42fa80:	test   %rax,%rax
  42fa83:	je     430286 <X509_get0_pubkey_bitstr@plt+0x198b6>
  42fa89:	lea    0x3526a(%rip),%rcx        # 464cfa <_fini+0x77f6>
  42fa90:	lea    0x35120(%rip),%rsi        # 464bb7 <_fini+0x76b3>
  42fa97:	lea    0x34038(%rip),%rdi        # 463ad6 <_fini+0x65d2>
  42fa9e:	mov    $0x287,%edx
  42faa3:	callq  413d40 <__assert_fail@plt>
  42faa8:	nopl   0x0(%rax,%rax,1)
  42fab0:	xor    %edx,%edx
  42fab2:	mov    %r13,%rsi
  42fab5:	mov    %rbp,%rdi
  42fab8:	callq  413f00 <ECPKParameters_print@plt>
  42fabd:	test   %eax,%eax
  42fabf:	jne    42f28a <X509_get0_pubkey_bitstr@plt+0x188ba>
  42fac5:	mov    $0x1,%r12d
  42facb:	jmpq   42f3ce <X509_get0_pubkey_bitstr@plt+0x189fe>
  42fad0:	mov    %r8,%r12
  42fad3:	movl   $0x1,0x78(%rsp)
  42fadb:	jmpq   42f0b9 <X509_get0_pubkey_bitstr@plt+0x186e9>
  42fae0:	cmp    $0x1,%r15d
  42fae4:	je     42fd82 <X509_get0_pubkey_bitstr@plt+0x193b2>
  42faea:	cmp    $0x3,%r15d
  42faee:	je     42fd30 <X509_get0_pubkey_bitstr@plt+0x19360>
  42faf4:	mov    (%rbx),%rdi
  42faf7:	lea    0x2ff41(%rip),%rsi        # 45fa3f <_fini+0x253b>
  42fafe:	xor    %eax,%eax
  42fb00:	mov    $0x1,%r12d
  42fb06:	xor    %r13d,%r13d
  42fb09:	callq  413c40 <BIO_printf@plt>
  42fb0e:	jmpq   42f3ce <X509_get0_pubkey_bitstr@plt+0x189fe>
  42fb13:	movl   $0x1,0x50(%rsp)
  42fb1b:	movl   $0x4,0x4c(%rsp)
  42fb23:	jmpq   42f0b9 <X509_get0_pubkey_bitstr@plt+0x186e9>
  42fb28:	movl   $0x1,0x64(%rsp)
  42fb30:	movl   $0x1,0x54(%rsp)
  42fb38:	jmpq   42f0b9 <X509_get0_pubkey_bitstr@plt+0x186e9>
  42fb3d:	mov    $0x1,%r12d
  42fb43:	xor    %r13d,%r13d
  42fb46:	jmpq   42f3ce <X509_get0_pubkey_bitstr@plt+0x189fe>
  42fb4b:	mov    %r13,%rdi
  42fb4e:	callq  414700 <EC_GROUP_method_of@plt>
  42fb53:	mov    %rax,%r12
  42fb56:	callq  416760 <BN_new@plt>
  42fb5b:	test   %rax,%rax
  42fb5e:	mov    %rax,0x20(%rsp)
  42fb63:	je     42fbf6 <X509_get0_pubkey_bitstr@plt+0x19226>
  42fb69:	callq  416760 <BN_new@plt>
  42fb6e:	test   %rax,%rax
  42fb71:	mov    %rax,0x38(%rsp)
  42fb76:	je     42fbf6 <X509_get0_pubkey_bitstr@plt+0x19226>
  42fb78:	callq  416760 <BN_new@plt>
  42fb7d:	test   %rax,%rax
  42fb80:	mov    %rax,0x40(%rsp)
  42fb85:	je     42fdd8 <X509_get0_pubkey_bitstr@plt+0x19408>
  42fb8b:	callq  416760 <BN_new@plt>
  42fb90:	test   %rax,%rax
  42fb93:	mov    %rax,0x28(%rsp)
  42fb98:	je     42fd9a <X509_get0_pubkey_bitstr@plt+0x193ca>
  42fb9e:	callq  416760 <BN_new@plt>
  42fba3:	test   %rax,%rax
  42fba6:	mov    %rax,0x10(%rsp)
  42fbab:	je     42fc1a <X509_get0_pubkey_bitstr@plt+0x1924a>
  42fbad:	callq  416760 <BN_new@plt>
  42fbb2:	test   %rax,%rax
  42fbb5:	mov    %rax,0x18(%rsp)
  42fbba:	je     42fc1a <X509_get0_pubkey_bitstr@plt+0x1924a>
  42fbbc:	mov    %r12,%rdi
  42fbbf:	callq  414d10 <EC_METHOD_get_field_type@plt>
  42fbc4:	cmp    $0x196,%eax
  42fbc9:	je     42fdef <X509_get0_pubkey_bitstr@plt+0x1941f>
  42fbcf:	xor    %r15d,%r15d
  42fbd2:	mov    $0x1,%r12d
  42fbd8:	jmpq   42f354 <X509_get0_pubkey_bitstr@plt+0x18984>
  42fbdd:	nopl   (%rax)
  42fbe0:	mov    (%rbx),%rdi
  42fbe3:	lea    0x312d7(%rip),%rsi        # 460ec1 <_fini+0x39bd>
  42fbea:	xor    %eax,%eax
  42fbec:	callq  413c40 <BIO_printf@plt>
  42fbf1:	jmpq   42f2cc <X509_get0_pubkey_bitstr@plt+0x188fc>
  42fbf6:	movq   $0x0,0x10(%rsp)
  42fbff:	movq   $0x0,0x28(%rsp)
  42fc08:	movq   $0x0,0x40(%rsp)
  42fc11:	movq   $0x0,0x38(%rsp)
  42fc1a:	lea    0x2fe8e(%rip),%rdi        # 45faaf <_fini+0x25ab>
  42fc21:	xor    %r15d,%r15d
  42fc24:	mov    $0x1,%r12d
  42fc2a:	callq  4142c0 <perror@plt>
  42fc2f:	movq   $0x0,0x18(%rsp)
  42fc38:	jmpq   42f34c <X509_get0_pubkey_bitstr@plt+0x1897c>
  42fc3d:	mov    0x8(%rsp),%rdi
  42fc42:	mov    $0x1,%r12d
  42fc48:	xor    %r13d,%r13d
  42fc4b:	callq  415020 <CRYPTO_free@plt>
  42fc50:	jmpq   42f3ce <X509_get0_pubkey_bitstr@plt+0x189fe>
  42fc55:	cmpq   $0x0,0x68(%rsp)
  42fc5b:	mov    (%rbx),%rsi
  42fc5e:	setne  %r12b
  42fc62:	xor    %edi,%edi
  42fc64:	movzbl %r12b,%edx
  42fc68:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  42fc6d:	test   %r12b,%r12b
  42fc70:	je     42fc90 <X509_get0_pubkey_bitstr@plt+0x192c0>
  42fc72:	mov    0x68(%rsp),%rdi
  42fc77:	callq  44a710 <X509_get0_pubkey_bitstr@plt+0x33d40>
  42fc7c:	mov    (%rbx),%rdi
  42fc7f:	lea    0x3010b(%rip),%rsi        # 45fd91 <_fini+0x288d>
  42fc86:	mov    %rax,%rdx
  42fc89:	xor    %eax,%eax
  42fc8b:	callq  413c40 <BIO_printf@plt>
  42fc90:	mov    0x74(%rsp),%eax
  42fc94:	test   %eax,%eax
  42fc96:	jne    43020f <X509_get0_pubkey_bitstr@plt+0x1983f>
  42fc9c:	mov    (%rbx),%rsi
  42fc9f:	xor    %edi,%edi
  42fca1:	xor    %r12d,%r12d
  42fca4:	callq  44a660 <X509_get0_pubkey_bitstr@plt+0x33c90>
  42fca9:	jmpq   42f34c <X509_get0_pubkey_bitstr@plt+0x1897c>
  42fcae:	mov    %r8,%r12
  42fcb1:	movl   $0x1,0x7c(%rsp)
  42fcb9:	jmpq   42f0b9 <X509_get0_pubkey_bitstr@plt+0x186e9>
  42fcbe:	mov    0x30(%rsp),%rdx
  42fcc3:	mov    (%rbx),%rdi
  42fcc6:	lea    0x34f2b(%rip),%rsi        # 464bf8 <_fini+0x76f4>
  42fccd:	xor    %eax,%eax
  42fccf:	mov    $0x1,%r12d
  42fcd5:	callq  413c40 <BIO_printf@plt>
  42fcda:	jmpq   42f3ce <X509_get0_pubkey_bitstr@plt+0x189fe>
  42fcdf:	mov    %r8,%r12
  42fce2:	movl   $0x1,0x74(%rsp)
  42fcea:	movl   $0x1,0x70(%rsp)
  42fcf2:	jmpq   42f0b9 <X509_get0_pubkey_bitstr@plt+0x186e9>
  42fcf7:	mov    %r13,%rsi
  42fcfa:	mov    %rbp,%rdi
  42fcfd:	callq  414ad0 <PEM_write_bio_ECPKParameters@plt>
  42fd02:	test   %eax,%eax
  42fd04:	jne    42fa60 <X509_get0_pubkey_bitstr@plt+0x19090>
  42fd0a:	mov    (%rbx),%rdi
  42fd0d:	lea    0x34e54(%rip),%rsi        # 464b68 <_fini+0x7664>
  42fd14:	mov    $0x1,%r12d
  42fd1a:	callq  413c40 <BIO_printf@plt>
  42fd1f:	mov    (%rbx),%rdi
  42fd22:	callq  413f40 <ERR_print_errors@plt>
  42fd27:	jmpq   42f34c <X509_get0_pubkey_bitstr@plt+0x1897c>
  42fd2c:	nopl   0x0(%rax)
  42fd30:	xor    %ecx,%ecx
  42fd32:	xor    %edx,%edx
  42fd34:	xor    %esi,%esi
  42fd36:	mov    %r14,%rdi
  42fd39:	callq  414b00 <PEM_read_bio_ECPKParameters@plt>
  42fd3e:	mov    %rax,%r13
  42fd41:	test   %r13,%r13
  42fd44:	jne    42f23a <X509_get0_pubkey_bitstr@plt+0x1886a>
  42fd4a:	mov    (%rbx),%rdi
  42fd4d:	lea    0x349cc(%rip),%rsi        # 464720 <_fini+0x721c>
  42fd54:	xor    %eax,%eax
  42fd56:	mov    $0x1,%r12d
  42fd5c:	callq  413c40 <BIO_printf@plt>
  42fd61:	mov    (%rbx),%rdi
  42fd64:	callq  413f40 <ERR_print_errors@plt>
  42fd69:	jmpq   42f3ce <X509_get0_pubkey_bitstr@plt+0x189fe>
  42fd6e:	mov    0x246233(%rip),%rdi        # 675fa8 <_fini+0x218aa4>
  42fd75:	mov    %r13,%rdx
  42fd78:	mov    %rbp,%rsi
  42fd7b:	callq  413c70 <ASN1_i2d_bio@plt>
  42fd80:	jmp    42fd02 <X509_get0_pubkey_bitstr@plt+0x19332>
  42fd82:	mov    0x24620f(%rip),%rsi        # 675f98 <_fini+0x218a94>
  42fd89:	xor    %ecx,%ecx
  42fd8b:	mov    %r14,%rdx
  42fd8e:	xor    %edi,%edi
  42fd90:	callq  415520 <ASN1_d2i_bio@plt>
  42fd95:	mov    %rax,%r13
  42fd98:	jmp    42fd41 <X509_get0_pubkey_bitstr@plt+0x19371>
  42fd9a:	movq   $0x0,0x10(%rsp)
  42fda3:	jmpq   42fc1a <X509_get0_pubkey_bitstr@plt+0x1924a>
  42fda8:	lea    0x2ddb3(%rip),%rdi        # 45db62 <_fini+0x65e>
  42fdaf:	mov    %rdx,%rsi
  42fdb2:	mov    %r13,%rcx
  42fdb5:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  42fdb7:	jne    42f4bb <X509_get0_pubkey_bitstr@plt+0x18aeb>
  42fdbd:	sub    $0x1,%ebp
  42fdc0:	je     42f4d0 <X509_get0_pubkey_bitstr@plt+0x18b00>
  42fdc6:	mov    0x8(%r8),%rax
  42fdca:	lea    0x8(%r8),%r12
  42fdce:	mov    %rax,0x58(%rsp)
  42fdd3:	jmpq   42f0b9 <X509_get0_pubkey_bitstr@plt+0x186e9>
  42fdd8:	movq   $0x0,0x10(%rsp)
  42fde1:	movq   $0x0,0x28(%rsp)
  42fdea:	jmpq   42fc1a <X509_get0_pubkey_bitstr@plt+0x1924a>
  42fdef:	mov    0x40(%rsp),%rcx
  42fdf4:	mov    0x38(%rsp),%rdx
  42fdf9:	xor    %r8d,%r8d
  42fdfc:	mov    0x20(%rsp),%rsi
  42fe01:	mov    %r13,%rdi
  42fe04:	callq  415a70 <EC_GROUP_get_curve_GFp@plt>
  42fe09:	test   %eax,%eax
  42fe0b:	je     42fbcf <X509_get0_pubkey_bitstr@plt+0x191ff>
  42fe11:	mov    %r13,%rdi
  42fe14:	callq  412960 <EC_GROUP_get0_generator@plt>
  42fe19:	test   %rax,%rax
  42fe1c:	mov    %rax,%r12
  42fe1f:	je     42fbcf <X509_get0_pubkey_bitstr@plt+0x191ff>
  42fe25:	mov    %r13,%rdi
  42fe28:	callq  412dd0 <EC_GROUP_get_point_conversion_form@plt>
  42fe2d:	mov    0x28(%rsp),%rcx
  42fe32:	xor    %r8d,%r8d
  42fe35:	mov    %eax,%edx
  42fe37:	mov    %r12,%rsi
  42fe3a:	mov    %r13,%rdi
  42fe3d:	callq  414d90 <EC_POINT_point2bn@plt>
  42fe42:	test   %rax,%rax
  42fe45:	je     42fbcf <X509_get0_pubkey_bitstr@plt+0x191ff>
  42fe4b:	mov    0x10(%rsp),%rsi
  42fe50:	xor    %edx,%edx
  42fe52:	mov    %r13,%rdi
  42fe55:	callq  414c40 <EC_GROUP_get_order@plt>
  42fe5a:	test   %eax,%eax
  42fe5c:	je     42fbcf <X509_get0_pubkey_bitstr@plt+0x191ff>
  42fe62:	mov    0x18(%rsp),%rsi
  42fe67:	xor    %edx,%edx
  42fe69:	mov    %r13,%rdi
  42fe6c:	callq  414350 <EC_GROUP_get_cofactor@plt>
  42fe71:	test   %eax,%eax
  42fe73:	je     42fbcf <X509_get0_pubkey_bitstr@plt+0x191ff>
  42fe79:	mov    0x10(%rsp),%rdi
  42fe7e:	callq  415810 <BN_num_bits@plt>
  42fe83:	mov    0x20(%rsp),%rdi
  42fe88:	mov    %eax,%r12d
  42fe8b:	callq  415810 <BN_num_bits@plt>
  42fe90:	lea    0xe(%rax),%edx
  42fe93:	mov    0x38(%rsp),%rdi
  42fe98:	add    $0x7,%eax
  42fe9b:	cmovs  %edx,%eax
  42fe9e:	sar    $0x3,%eax
  42fea1:	movslq %eax,%r15
  42fea4:	callq  415810 <BN_num_bits@plt>
  42fea9:	lea    0xe(%rax),%edx
  42feac:	add    $0x7,%eax
  42feaf:	mov    0x40(%rsp),%rdi
  42feb4:	cmovs  %edx,%eax
  42feb7:	sar    $0x3,%eax
  42feba:	cltq   
  42febc:	cmp    %r15,%rax
  42febf:	cmovae %rax,%r15
  42fec3:	callq  415810 <BN_num_bits@plt>
  42fec8:	lea    0xe(%rax),%edx
  42fecb:	add    $0x7,%eax
  42fece:	mov    0x28(%rsp),%rdi
  42fed3:	cmovs  %edx,%eax
  42fed6:	sar    $0x3,%eax
  42fed9:	cltq   
  42fedb:	cmp    %rax,%r15
  42fede:	cmovb  %rax,%r15
  42fee2:	callq  415810 <BN_num_bits@plt>
  42fee7:	lea    0xe(%rax),%edx
  42feea:	add    $0x7,%eax
  42feed:	mov    0x10(%rsp),%rdi
  42fef2:	cmovs  %edx,%eax
  42fef5:	sar    $0x3,%eax
  42fef8:	cltq   
  42fefa:	cmp    %rax,%r15
  42fefd:	cmovb  %rax,%r15
  42ff01:	callq  415810 <BN_num_bits@plt>
  42ff06:	lea    0xe(%rax),%edx
  42ff09:	add    $0x7,%eax
  42ff0c:	mov    0x18(%rsp),%rdi
  42ff11:	cmovs  %edx,%eax
  42ff14:	sar    $0x3,%eax
  42ff17:	cltq   
  42ff19:	cmp    %rax,%r15
  42ff1c:	cmovb  %rax,%r15
  42ff20:	callq  415810 <BN_num_bits@plt>
  42ff25:	lea    0xe(%rax),%edx
  42ff28:	add    $0x7,%eax
  42ff2b:	lea    0x34c85(%rip),%rsi        # 464bb7 <_fini+0x76b3>
  42ff32:	cmovs  %edx,%eax
  42ff35:	mov    $0x21a,%edx
  42ff3a:	sar    $0x3,%eax
  42ff3d:	cltq   
  42ff3f:	cmp    %rax,%r15
  42ff42:	cmovae %r15,%rax
  42ff46:	mov    %rax,%rdi
  42ff49:	callq  413d50 <CRYPTO_malloc@plt>
  42ff4e:	test   %rax,%rax
  42ff51:	mov    %rax,%r15
  42ff54:	je     430275 <X509_get0_pubkey_bitstr@plt+0x198a5>
  42ff5a:	mov    0x20(%rsp),%rsi
  42ff5f:	lea    0x34caf(%rip),%rdx        # 464c15 <_fini+0x7711>
  42ff66:	mov    %r12d,%ecx
  42ff69:	mov    %rbp,%rdi
  42ff6c:	mov    %rax,%r8
  42ff6f:	callq  41820c <X509_get0_pubkey_bitstr@plt+0x183c>
  42ff74:	mov    0x38(%rsp),%rsi
  42ff79:	lea    0x34c9a(%rip),%rdx        # 464c1a <_fini+0x7716>
  42ff80:	mov    %r15,%r8
  42ff83:	mov    %r12d,%ecx
  42ff86:	mov    %rbp,%rdi
  42ff89:	callq  41820c <X509_get0_pubkey_bitstr@plt+0x183c>
  42ff8e:	mov    0x40(%rsp),%rsi
  42ff93:	lea    0x34c85(%rip),%rdx        # 464c1f <_fini+0x771b>
  42ff9a:	mov    %r15,%r8
  42ff9d:	mov    %r12d,%ecx
  42ffa0:	mov    %rbp,%rdi
  42ffa3:	callq  41820c <X509_get0_pubkey_bitstr@plt+0x183c>
  42ffa8:	mov    0x28(%rsp),%rsi
  42ffad:	lea    0x34c70(%rip),%rdx        # 464c24 <_fini+0x7720>
  42ffb4:	mov    %r15,%r8
  42ffb7:	mov    %r12d,%ecx
  42ffba:	mov    %rbp,%rdi
  42ffbd:	callq  41820c <X509_get0_pubkey_bitstr@plt+0x183c>
  42ffc2:	mov    0x10(%rsp),%rsi
  42ffc7:	lea    0x34c5d(%rip),%rdx        # 464c2b <_fini+0x7727>
  42ffce:	mov    %r15,%r8
  42ffd1:	mov    %r12d,%ecx
  42ffd4:	mov    %rbp,%rdi
  42ffd7:	callq  41820c <X509_get0_pubkey_bitstr@plt+0x183c>
  42ffdc:	mov    0x18(%rsp),%rsi
  42ffe1:	lea    0x34c4c(%rip),%rdx        # 464c34 <_fini+0x7730>
  42ffe8:	mov    %r15,%r8
  42ffeb:	mov    %r12d,%ecx
  42ffee:	mov    %rbp,%rdi
  42fff1:	callq  41820c <X509_get0_pubkey_bitstr@plt+0x183c>
  42fff6:	lea    0x34ba1(%rip),%rsi        # 464b9e <_fini+0x769a>
  42fffd:	mov    %rbp,%rdi
  430000:	xor    %eax,%eax
  430002:	callq  413c40 <BIO_printf@plt>
  430007:	lea    0x3476a(%rip),%rsi        # 464778 <_fini+0x7274>
  43000e:	mov    %r12d,%edx
  430011:	mov    %rbp,%rdi
  430014:	xor    %eax,%eax
  430016:	callq  413c40 <BIO_printf@plt>
  43001b:	lea    0x34c1e(%rip),%rsi        # 464c40 <_fini+0x773c>
  430022:	mov    %rbp,%rdi
  430025:	xor    %eax,%eax
  430027:	callq  413c40 <BIO_printf@plt>
  43002c:	lea    0x34c19(%rip),%rsi        # 464c4c <_fini+0x7748>
  430033:	mov    %rbp,%rdi
  430036:	xor    %eax,%eax
  430038:	callq  413c40 <BIO_printf@plt>
  43003d:	lea    0x34c22(%rip),%rsi        # 464c66 <_fini+0x7762>
  430044:	mov    %rbp,%rdi
  430047:	xor    %eax,%eax
  430049:	callq  413c40 <BIO_printf@plt>
  43004e:	lea    0x3474b(%rip),%rsi        # 4647a0 <_fini+0x729c>
  430055:	mov    %rbp,%rdi
  430058:	xor    %eax,%eax
  43005a:	callq  413c40 <BIO_printf@plt>
  43005f:	lea    0x3477a(%rip),%rsi        # 4647e0 <_fini+0x72dc>
  430066:	mov    %r12d,%ecx
  430069:	mov    %r12d,%edx
  43006c:	mov    %rbp,%rdi
  43006f:	xor    %eax,%eax
  430071:	callq  413c40 <BIO_printf@plt>
  430076:	lea    0x347b3(%rip),%rsi        # 464830 <_fini+0x732c>
  43007d:	mov    %r12d,%ecx
  430080:	mov    %r12d,%edx
  430083:	mov    %rbp,%rdi
  430086:	xor    %eax,%eax
  430088:	callq  413c40 <BIO_printf@plt>
  43008d:	lea    0x347ec(%rip),%rsi        # 464880 <_fini+0x737c>
  430094:	mov    %r12d,%ecx
  430097:	mov    %r12d,%edx
  43009a:	mov    %rbp,%rdi
  43009d:	xor    %eax,%eax
  43009f:	callq  413c40 <BIO_printf@plt>
  4300a4:	lea    0x34825(%rip),%rsi        # 4648d0 <_fini+0x73cc>
  4300ab:	mov    %rbp,%rdi
  4300ae:	xor    %eax,%eax
  4300b0:	callq  413c40 <BIO_printf@plt>
  4300b5:	lea    0x34bc4(%rip),%rsi        # 464c80 <_fini+0x777c>
  4300bc:	mov    %rbp,%rdi
  4300bf:	xor    %eax,%eax
  4300c1:	callq  413c40 <BIO_printf@plt>
  4300c6:	lea    0x3485b(%rip),%rsi        # 464928 <_fini+0x7424>
  4300cd:	mov    %r12d,%ecx
  4300d0:	mov    %r12d,%edx
  4300d3:	mov    %rbp,%rdi
  4300d6:	xor    %eax,%eax
  4300d8:	callq  413c40 <BIO_printf@plt>
  4300dd:	lea    0x3489c(%rip),%rsi        # 464980 <_fini+0x747c>
  4300e4:	mov    %rbp,%rdi
  4300e7:	xor    %eax,%eax
  4300e9:	callq  413c40 <BIO_printf@plt>
  4300ee:	lea    0x348c3(%rip),%rsi        # 4649b8 <_fini+0x74b4>
  4300f5:	mov    %rbp,%rdi
  4300f8:	xor    %eax,%eax
  4300fa:	callq  413c40 <BIO_printf@plt>
  4300ff:	lea    0x348da(%rip),%rsi        # 4649e0 <_fini+0x74dc>
  430106:	mov    %r12d,%ecx
  430109:	mov    %r12d,%edx
  43010c:	mov    %rbp,%rdi
  43010f:	xor    %eax,%eax
  430111:	callq  413c40 <BIO_printf@plt>
  430116:	lea    0x3491b(%rip),%rsi        # 464a38 <_fini+0x7534>
  43011d:	mov    %r12d,%ecx
  430120:	mov    %r12d,%edx
  430123:	mov    %rbp,%rdi
  430126:	xor    %eax,%eax
  430128:	callq  413c40 <BIO_printf@plt>
  43012d:	lea    0x34964(%rip),%rsi        # 464a98 <_fini+0x7594>
  430134:	mov    %rbp,%rdi
  430137:	xor    %eax,%eax
  430139:	callq  413c40 <BIO_printf@plt>
  43013e:	lea    0x34b53(%rip),%rsi        # 464c98 <_fini+0x7794>
  430145:	mov    %rbp,%rdi
  430148:	xor    %eax,%eax
  43014a:	callq  413c40 <BIO_printf@plt>
  43014f:	lea    0x34b4b(%rip),%rsi        # 464ca1 <_fini+0x779d>
  430156:	mov    %rbp,%rdi
  430159:	xor    %eax,%eax
  43015b:	callq  413c40 <BIO_printf@plt>
  430160:	lea    0x34979(%rip),%rsi        # 464ae0 <_fini+0x75dc>
  430167:	mov    %rbp,%rdi
  43016a:	xor    %eax,%eax
  43016c:	callq  413c40 <BIO_printf@plt>
  430171:	lea    0x34988(%rip),%rsi        # 464b00 <_fini+0x75fc>
  430178:	mov    %rbp,%rdi
  43017b:	xor    %eax,%eax
  43017d:	callq  413c40 <BIO_printf@plt>
  430182:	lea    0x34997(%rip),%rsi        # 464b20 <_fini+0x761c>
  430189:	mov    %rbp,%rdi
  43018c:	xor    %eax,%eax
  43018e:	callq  413c40 <BIO_printf@plt>
  430193:	lea    0x349a6(%rip),%rsi        # 464b40 <_fini+0x763c>
  43019a:	mov    %rbp,%rdi
  43019d:	xor    %eax,%eax
  43019f:	callq  413c40 <BIO_printf@plt>
  4301a4:	lea    0x34afc(%rip),%rsi        # 464ca7 <_fini+0x77a3>
  4301ab:	mov    %rbp,%rdi
  4301ae:	xor    %eax,%eax
  4301b0:	callq  413c40 <BIO_printf@plt>
  4301b5:	lea    0x34af6(%rip),%rsi        # 464cb2 <_fini+0x77ae>
  4301bc:	mov    %rbp,%rdi
  4301bf:	xor    %eax,%eax
  4301c1:	callq  413c40 <BIO_printf@plt>
  4301c6:	lea    0x34aea(%rip),%rsi        # 464cb7 <_fini+0x77b3>
  4301cd:	mov    %rbp,%rdi
  4301d0:	xor    %eax,%eax
  4301d2:	callq  413c40 <BIO_printf@plt>
  4301d7:	lea    0x34af2(%rip),%rsi        # 464cd0 <_fini+0x77cc>
  4301de:	mov    %rbp,%rdi
  4301e1:	xor    %eax,%eax
  4301e3:	callq  413c40 <BIO_printf@plt>
  4301e8:	lea    0x34af2(%rip),%rsi        # 464ce1 <_fini+0x77dd>
  4301ef:	mov    %rbp,%rdi
  4301f2:	xor    %eax,%eax
  4301f4:	callq  413c40 <BIO_printf@plt>
  4301f9:	lea    0x34ae6(%rip),%rsi        # 464ce6 <_fini+0x77e2>
  430200:	mov    %rbp,%rdi
  430203:	xor    %eax,%eax
  430205:	callq  413c40 <BIO_printf@plt>
  43020a:	jmpq   42f313 <X509_get0_pubkey_bitstr@plt+0x18943>
  43020f:	callq  413ff0 <EC_KEY_new@plt>
  430214:	test   %rax,%rax
  430217:	mov    %rax,0x30(%rsp)
  43021c:	je     430286 <X509_get0_pubkey_bitstr@plt+0x198b6>
  43021e:	mov    0x30(%rsp),%rdi
  430223:	mov    %r13,%rsi
  430226:	mov    $0x1,%r12d
  43022c:	callq  4141c0 <EC_KEY_set_group@plt>
  430231:	test   %eax,%eax
  430233:	je     42f34c <X509_get0_pubkey_bitstr@plt+0x1897c>
  430239:	mov    0x30(%rsp),%rdi
  43023e:	callq  413140 <EC_KEY_generate_key@plt>
  430243:	test   %eax,%eax
  430245:	je     430266 <X509_get0_pubkey_bitstr@plt+0x19896>
  430247:	cmpl   $0x1,0x8(%rsp)
  43024c:	je     4302bf <X509_get0_pubkey_bitstr@plt+0x198ef>
  43024e:	cmpl   $0x3,0x8(%rsp)
  430253:	je     430291 <X509_get0_pubkey_bitstr@plt+0x198c1>
  430255:	mov    (%rbx),%rdi
  430258:	lea    0x2f111(%rip),%rsi        # 45f370 <_fini+0x1e6c>
  43025f:	xor    %eax,%eax
  430261:	callq  413c40 <BIO_printf@plt>
  430266:	mov    0x30(%rsp),%rdi
  43026b:	callq  415bf0 <EC_KEY_free@plt>
  430270:	jmpq   42f34c <X509_get0_pubkey_bitstr@plt+0x1897c>
  430275:	lea    0x2f833(%rip),%rdi        # 45faaf <_fini+0x25ab>
  43027c:	callq  4142c0 <perror@plt>
  430281:	jmpq   42fbcf <X509_get0_pubkey_bitstr@plt+0x191ff>
  430286:	mov    $0x1,%r12d
  43028c:	jmpq   42f34c <X509_get0_pubkey_bitstr@plt+0x1897c>
  430291:	mov    0x30(%rsp),%rsi
  430296:	movq   $0x0,(%rsp)
  43029e:	xor    %r9d,%r9d
  4302a1:	xor    %r8d,%r8d
  4302a4:	xor    %ecx,%ecx
  4302a6:	xor    %edx,%edx
  4302a8:	mov    %rbp,%rdi
  4302ab:	callq  415d90 <PEM_write_bio_ECPrivateKey@plt>
  4302b0:	mov    0x30(%rsp),%rdi
  4302b5:	callq  415bf0 <EC_KEY_free@plt>
  4302ba:	jmpq   42fc9c <X509_get0_pubkey_bitstr@plt+0x192cc>
  4302bf:	mov    0x30(%rsp),%rsi
  4302c4:	mov    %rbp,%rdi
  4302c7:	callq  414d00 <i2d_ECPrivateKey_bio@plt>
  4302cc:	jmp    4302b0 <X509_get0_pubkey_bitstr@plt+0x198e0>
  4302ce:	xchg   %ax,%ax
  4302d0:	push   %r13
  4302d2:	push   %r12
  4302d4:	mov    %edi,%r12d
  4302d7:	mov    %rsi,%rdi
  4302da:	push   %rbp
  4302db:	push   %rbx
  4302dc:	mov    %rsi,%rbx
  4302df:	sub    $0x8,%rsp
  4302e3:	callq  415050 <X509_STORE_CTX_get_error@plt>
  4302e8:	cmp    $0x12,%eax
  4302eb:	mov    %eax,%ebp
  4302ed:	je     430388 <X509_get0_pubkey_bitstr@plt+0x199b8>
  4302f3:	test   %r12d,%r12d
  4302f6:	jne    430360 <X509_get0_pubkey_bitstr@plt+0x19990>
  4302f8:	mov    %rbx,%rdi
  4302fb:	callq  414470 <X509_STORE_CTX_get_current_cert@plt>
  430300:	mov    %rax,%rdi
  430303:	callq  414400 <X509_get_subject_name@plt>
  430308:	lea    0x24aa31(%rip),%r12        # 67ad40 <_edata+0x38>
  43030f:	xor    %ecx,%ecx
  430311:	mov    %rax,%rdx
  430314:	xor    %esi,%esi
  430316:	mov    (%r12),%rdi
  43031a:	callq  4467d0 <X509_get0_pubkey_bitstr@plt+0x2fe00>
  43031f:	movslq %ebp,%rdi
  430322:	callq  415690 <X509_verify_cert_error_string@plt>
  430327:	mov    %rbx,%rdi
  43032a:	mov    %rax,%r13
  43032d:	callq  4167a0 <X509_STORE_CTX_get_error_depth@plt>
  430332:	mov    (%r12),%rdi
  430336:	lea    0x34a0b(%rip),%rsi        # 464d48 <_fini+0x7844>
  43033d:	mov    %r13,%r8
  430340:	mov    %eax,%ecx
  430342:	mov    %ebp,%edx
  430344:	xor    %eax,%eax
  430346:	callq  413c40 <BIO_printf@plt>
  43034b:	add    $0x8,%rsp
  43034f:	mov    $0x1,%eax
  430354:	pop    %rbx
  430355:	pop    %rbp
  430356:	pop    %r12
  430358:	pop    %r13
  43035a:	retq   
  43035b:	nopl   0x0(%rax,%rax,1)
  430360:	lea    0x24a9d9(%rip),%rax        # 67ad40 <_edata+0x38>
  430367:	lea    0x3499a(%rip),%rsi        # 464d08 <_fini+0x7804>
  43036e:	mov    (%rax),%rdi
  430371:	xor    %eax,%eax
  430373:	callq  413c40 <BIO_printf@plt>
  430378:	add    $0x8,%rsp
  43037c:	xor    %eax,%eax
  43037e:	pop    %rbx
  43037f:	pop    %rbp
  430380:	pop    %r12
  430382:	pop    %r13
  430384:	retq   
  430385:	nopl   (%rax)
  430388:	add    $0x8,%rsp
  43038c:	mov    $0x1,%eax
  430391:	pop    %rbx
  430392:	pop    %rbp
  430393:	pop    %r12
  430395:	pop    %r13
  430397:	retq   
  430398:	nopl   0x0(%rax,%rax,1)
  4303a0:	push   %r15
  4303a2:	push   %r14
  4303a4:	push   %r13
  4303a6:	push   %r12
  4303a8:	push   %rbp
  4303a9:	mov    %edi,%ebp
  4303ab:	mov    $0xd,%edi
  4303b0:	push   %rbx
  4303b1:	mov    %rsi,%rbx
  4303b4:	mov    $0x1,%esi
  4303b9:	sub    $0x418,%rsp
  4303c0:	movl   $0x0,0x24af7e(%rip)        # 67b348 <_edata+0x640>
  4303ca:	mov    %fs:0x28,%rax
  4303d3:	mov    %rax,0x408(%rsp)
  4303db:	xor    %eax,%eax
  4303dd:	movq   $0x0,0x168(%rsp)
  4303e9:	movq   $0x0,0x170(%rsp)
  4303f5:	movq   $0x0,0x178(%rsp)
  430401:	callq  414ee0 <signal@plt>
  430406:	lea    0x24a933(%rip),%rax        # 67ad40 <_edata+0x38>
  43040d:	mov    (%rax),%rdi
  430410:	test   %rdi,%rdi
  430413:	je     4305b8 <X509_get0_pubkey_bitstr@plt+0x19be8>
  430419:	xor    %esi,%esi
  43041b:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  430420:	test   %eax,%eax
  430422:	jne    430568 <X509_get0_pubkey_bitstr@plt+0x19b98>
  430428:	movq   $0x0,0x30(%rsp)
  430431:	movq   $0x0,0x18(%rsp)
  43043a:	xor    %r14d,%r14d
  43043d:	movq   $0x0,0x48(%rsp)
  430446:	movq   $0x0,0x40(%rsp)
  43044f:	xor    %r15d,%r15d
  430452:	xor    %r12d,%r12d
  430455:	movq   $0x0,0x38(%rsp)
  43045e:	movq   $0x0,0x10(%rsp)
  430467:	movq   $0x0,0x8(%rsp)
  430470:	xor    %ebx,%ebx
  430472:	movq   $0x0,0x20(%rsp)
  43047b:	xor    %ebp,%ebp
  43047d:	movq   $0x0,0x28(%rsp)
  430486:	mov    $0x1,%r13d
  43048c:	callq  414120 <OBJ_cleanup@plt>
  430491:	mov    0x30(%rsp),%rdi
  430496:	callq  4137f0 <NCONF_free@plt>
  43049b:	mov    %r12,%rdi
  43049e:	callq  416570 <BIO_free_all@plt>
  4304a3:	mov    %r15,%rdi
  4304a6:	callq  416570 <BIO_free_all@plt>
  4304ab:	mov    %r14,%rdi
  4304ae:	callq  4134b0 <X509_STORE_free@plt>
  4304b3:	mov    0x28(%rsp),%rdi
  4304b8:	callq  4154a0 <X509_REQ_free@plt>
  4304bd:	mov    %rbp,%rdi
  4304c0:	callq  4153a0 <X509_free@plt>
  4304c5:	mov    0x20(%rsp),%rdi
  4304ca:	callq  4153a0 <X509_free@plt>
  4304cf:	mov    0x8(%rsp),%rdi
  4304d4:	callq  412b00 <EVP_PKEY_free@plt>
  4304d9:	mov    0x10(%rsp),%rdi
  4304de:	callq  412b00 <EVP_PKEY_free@plt>
  4304e3:	test   %rbx,%rbx
  4304e6:	je     4304f0 <X509_get0_pubkey_bitstr@plt+0x19b20>
  4304e8:	mov    %rbx,%rdi
  4304eb:	callq  4143f0 <sk_free@plt>
  4304f0:	mov    0x18(%rsp),%rdi
  4304f5:	callq  4154a0 <X509_REQ_free@plt>
  4304fa:	mov    0x38(%rsp),%rdi
  4304ff:	callq  412a90 <ASN1_INTEGER_free@plt>
  430504:	mov    0x245a0d(%rip),%rbx        # 675f18 <_fini+0x218a14>
  43050b:	mov    0x40(%rsp),%rdi
  430510:	mov    %rbx,%rsi
  430513:	callq  416250 <sk_pop_free@plt>
  430518:	mov    0x48(%rsp),%rdi
  43051d:	mov    %rbx,%rsi
  430520:	callq  416250 <sk_pop_free@plt>
  430525:	mov    0x168(%rsp),%rdi
  43052d:	test   %rdi,%rdi
  430530:	je     430537 <X509_get0_pubkey_bitstr@plt+0x19b67>
  430532:	callq  415020 <CRYPTO_free@plt>
  430537:	mov    0x408(%rsp),%rdx
  43053f:	xor    %fs:0x28,%rdx
  430548:	mov    %r13d,%eax
  43054b:	jne    430d1b <X509_get0_pubkey_bitstr@plt+0x1a34b>
  430551:	add    $0x418,%rsp
  430558:	pop    %rbx
  430559:	pop    %rbp
  43055a:	pop    %r12
  43055c:	pop    %r13
  43055e:	pop    %r14
  430560:	pop    %r15
  430562:	retq   
  430563:	nopl   0x0(%rax,%rax,1)
  430568:	mov    0x245949(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  43056f:	xor    %esi,%esi
  430571:	mov    (%rax),%rdi
  430574:	callq  4161e0 <BIO_new_fp@plt>
  430579:	mov    %rax,%r15
  43057c:	callq  4166c0 <X509_STORE_new@plt>
  430581:	test   %rax,%rax
  430584:	mov    %rax,%r14
  430587:	jne    4305e0 <X509_get0_pubkey_bitstr@plt+0x19c10>
  430589:	movq   $0x0,0x30(%rsp)
  430592:	movq   $0x0,0x18(%rsp)
  43059b:	movq   $0x0,0x48(%rsp)
  4305a4:	movq   $0x0,0x40(%rsp)
  4305ad:	jmpq   430452 <X509_get0_pubkey_bitstr@plt+0x19a82>
  4305b2:	nopw   0x0(%rax,%rax,1)
  4305b8:	mov    0x2459c1(%rip),%rax        # 675f80 <_fini+0x218a7c>
  4305bf:	xor    %esi,%esi
  4305c1:	mov    (%rax),%rdi
  4305c4:	callq  4161e0 <BIO_new_fp@plt>
  4305c9:	mov    %rax,%rdi
  4305cc:	lea    0x24a76d(%rip),%rax        # 67ad40 <_edata+0x38>
  4305d3:	mov    %rdi,(%rax)
  4305d6:	jmpq   430419 <X509_get0_pubkey_bitstr@plt+0x19a49>
  4305db:	nopl   0x0(%rax,%rax,1)
  4305e0:	lea    -0x317(%rip),%rsi        # 4302d0 <X509_get0_pubkey_bitstr@plt+0x19900>
  4305e7:	lea    -0x1(%rbp),%r13d
  4305eb:	mov    %rax,%rdi
  4305ee:	callq  416470 <X509_STORE_set_verify_cb@plt>
  4305f3:	test   %r13d,%r13d
  4305f6:	movq   $0x0,0xb8(%rsp)
  430602:	movl   $0x0,0x158(%rsp)
  43060d:	movl   $0x0,0x134(%rsp)
  430618:	movl   $0x0,0x50(%rsp)
  430620:	lea    0x8(%rbx),%rdx
  430624:	movq   $0x0,0x30(%rsp)
  43062d:	movq   $0x0,0x28(%rsp)
  430636:	movq   $0x0,0x68(%rsp)
  43063f:	movq   $0x0,0x88(%rsp)
  43064b:	movl   $0x0,0x130(%rsp)
  430656:	movl   $0x0,0x12c(%rsp)
  430661:	movl   $0x0,0x128(%rsp)
  43066c:	movl   $0x0,0x124(%rsp)
  430677:	movl   $0x1e,0x84(%rsp)
  430682:	movl   $0x0,0xf0(%rsp)
  43068d:	movl   $0x0,0x120(%rsp)
  430698:	movl   $0x0,0xc0(%rsp)
  4306a3:	movl   $0x0,0x11c(%rsp)
  4306ae:	movl   $0x0,0x110(%rsp)
  4306b9:	movl   $0x0,0x108(%rsp)
  4306c4:	movl   $0x0,0x78(%rsp)
  4306cc:	movl   $0x0,0xe4(%rsp)
  4306d7:	movl   $0x0,0xe0(%rsp)
  4306e2:	movl   $0x0,0x118(%rsp)
  4306ed:	movl   $0x0,0xb4(%rsp)
  4306f8:	movl   $0x0,0xdc(%rsp)
  430703:	movl   $0x0,0x80(%rsp)
  43070e:	movl   $0x0,0x104(%rsp)
  430719:	movl   $0x0,0x100(%rsp)
  430724:	movl   $0x0,0xfc(%rsp)
  43072f:	movl   $0x0,0xf8(%rsp)
  43073a:	movl   $0x0,0xf4(%rsp)
  430745:	movl   $0x0,0xb0(%rsp)
  430750:	movl   $0x0,0xd8(%rsp)
  43075b:	movl   $0x0,0xd4(%rsp)
  430766:	movl   $0x0,0xd0(%rsp)
  430771:	movl   $0x0,0xcc(%rsp)
  43077c:	movl   $0x0,0xc8(%rsp)
  430787:	movl   $0x0,0xc4(%rsp)
  430792:	movq   $0x0,0xe8(%rsp)
  43079e:	movq   $0x0,0xa8(%rsp)
  4307aa:	movq   $0x0,0xa0(%rsp)
  4307b6:	movq   $0x0,0x70(%rsp)
  4307bf:	movq   $0x0,0x98(%rsp)
  4307cb:	movq   $0x0,0x90(%rsp)
  4307d7:	movq   $0x0,0x20(%rsp)
  4307e0:	movl   $0x3,0x64(%rsp)
  4307e8:	movl   $0x3,0x58(%rsp)
  4307f0:	movl   $0x3,0x54(%rsp)
  4307f8:	jle    430d67 <X509_get0_pubkey_bitstr@plt+0x1a397>
  4307fe:	lea    0x170(%rsp),%rax
  430806:	xor    %ebx,%ebx
  430808:	mov    $0x3,%esi
  43080d:	mov    $0x3,%ecx
  430812:	mov    %rbx,0x8(%rsp)
  430817:	mov    %r15,0x10(%rsp)
  43081c:	mov    %rax,0x138(%rsp)
  430824:	lea    0x178(%rsp),%rax
  43082c:	mov    %r14,0x18(%rsp)
  430831:	movq   $0x0,0x48(%rsp)
  43083a:	mov    %r13d,%r14d
  43083d:	movq   $0x0,0x40(%rsp)
  430846:	movl   $0x0,0x60(%rsp)
  43084e:	movq   $0x0,0x38(%rsp)
  430857:	mov    $0x8,%r12d
  43085d:	mov    %rax,0x140(%rsp)
  430865:	mov    %esi,%r15d
  430868:	mov    %ecx,%r13d
  43086b:	mov    %rdx,%rbx
  43086e:	jmp    43089b <X509_get0_pubkey_bitstr@plt+0x19ecb>
  430870:	sub    $0x1,%r14d
  430874:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  43087a:	mov    0x8(%rbx),%rdi
  43087e:	lea    0x8(%rbx),%rbp
  430882:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  430887:	mov    %eax,%r13d
  43088a:	sub    $0x1,%r14d
  43088e:	lea    0x8(%rbp),%rbx
  430892:	test   %r14d,%r14d
  430895:	jle    4309b7 <X509_get0_pubkey_bitstr@plt+0x19fe7>
  43089b:	mov    (%rbx),%rbp
  43089e:	lea    0x2d43a(%rip),%rdi        # 45dcdf <_fini+0x7db>
  4308a5:	mov    %r12,%rcx
  4308a8:	mov    %rbp,%rsi
  4308ab:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4308ad:	je     430870 <X509_get0_pubkey_bitstr@plt+0x19ea0>
  4308af:	lea    0x2d8da(%rip),%rdi        # 45e190 <_fini+0xc8c>
  4308b6:	mov    %rbp,%rsi
  4308b9:	mov    $0x9,%ecx
  4308be:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4308c0:	jne    4308e0 <X509_get0_pubkey_bitstr@plt+0x19f10>
  4308c2:	sub    $0x1,%r14d
  4308c6:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  4308cc:	mov    0x8(%rbx),%rdi
  4308d0:	lea    0x8(%rbx),%rbp
  4308d4:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  4308d9:	mov    %eax,%r15d
  4308dc:	jmp    43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  4308de:	xchg   %ax,%ax
  4308e0:	lea    0x2d8f8(%rip),%rdi        # 45e1df <_fini+0xcdb>
  4308e7:	mov    %rbp,%rsi
  4308ea:	mov    $0x9,%ecx
  4308ef:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4308f1:	jne    430918 <X509_get0_pubkey_bitstr@plt+0x19f48>
  4308f3:	sub    $0x1,%r14d
  4308f7:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  4308fd:	mov    0x8(%rbx),%rdi
  430901:	lea    0x8(%rbx),%rbp
  430905:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  43090a:	mov    %eax,0x54(%rsp)
  43090e:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  430913:	nopl   0x0(%rax,%rax,1)
  430918:	lea    0x35156(%rip),%rdi        # 465a75 <_fini+0x8571>
  43091f:	mov    $0x5,%ecx
  430924:	mov    %rbp,%rsi
  430927:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  430929:	jne    430948 <X509_get0_pubkey_bitstr@plt+0x19f78>
  43092b:	movl   $0x1,0x24aa13(%rip)        # 67b348 <_edata+0x640>
  430935:	mov    %rbx,%rbp
  430938:	movl   $0x1,0x50(%rsp)
  430940:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  430945:	nopl   (%rax)
  430948:	lea    0x3512b(%rip),%rdi        # 465a7a <_fini+0x8576>
  43094f:	mov    %rbp,%rsi
  430952:	mov    %r12,%rcx
  430955:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  430957:	jne    430980 <X509_get0_pubkey_bitstr@plt+0x19fb0>
  430959:	sub    $0x1,%r14d
  43095d:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  430963:	mov    0x8(%rbx),%rdi
  430967:	lea    0x8(%rbx),%rbp
  43096b:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  430970:	mov    %eax,0x58(%rsp)
  430974:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  430979:	nopl   0x0(%rax)
  430980:	lea    0x350fb(%rip),%rdi        # 465a82 <_fini+0x857e>
  430987:	mov    $0xb,%ecx
  43098c:	mov    %rbp,%rsi
  43098f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  430991:	jne    430b1a <X509_get0_pubkey_bitstr@plt+0x1a14a>
  430997:	sub    $0x1,%r14d
  43099b:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  4309a1:	mov    0x8(%rbx),%rdi
  4309a5:	lea    0x8(%rbx),%rbp
  4309a9:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  4309ae:	mov    %eax,0x64(%rsp)
  4309b2:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  4309b7:	mov    %r15d,0x138(%rsp)
  4309bf:	mov    0x18(%rsp),%r14
  4309c4:	mov    0x10(%rsp),%r15
  4309c9:	mov    0x8(%rsp),%rbx
  4309ce:	mov    %r13d,0x8(%rsp)
  4309d3:	lea    0x24a366(%rip),%rax        # 67ad40 <_edata+0x38>
  4309da:	mov    0xb8(%rsp),%rsi
  4309e2:	xor    %edx,%edx
  4309e4:	mov    (%rax),%rdi
  4309e7:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  4309ec:	mov    0x50(%rsp),%ecx
  4309f0:	mov    %rax,0x140(%rsp)
  4309f8:	test   %ecx,%ecx
  4309fa:	jne    430c82 <X509_get0_pubkey_bitstr@plt+0x1a2b2>
  430a00:	callq  416990 <ERR_load_crypto_strings@plt>
  430a05:	lea    0x24a334(%rip),%rax        # 67ad40 <_edata+0x38>
  430a0c:	mov    0x30(%rsp),%rsi
  430a11:	lea    0x168(%rsp),%rcx
  430a19:	xor    %r8d,%r8d
  430a1c:	xor    %edx,%edx
  430a1e:	mov    (%rax),%rdi
  430a21:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  430a26:	test   %eax,%eax
  430a28:	jne    430bfd <X509_get0_pubkey_bitstr@plt+0x1a22d>
  430a2e:	lea    0x24a30b(%rip),%rax        # 67ad40 <_edata+0x38>
  430a35:	lea    0x2eef8(%rip),%rsi        # 45f934 <_fini+0x2430>
  430a3c:	mov    (%rax),%rdi
  430a3f:	xor    %eax,%eax
  430a41:	callq  413c40 <BIO_printf@plt>
  430a46:	nopw   %cs:0x0(%rax,%rax,1)
  430a50:	movq   $0x0,0x30(%rsp)
  430a59:	movq   $0x0,0x18(%rsp)
  430a62:	xor    %r12d,%r12d
  430a65:	movq   $0x0,0x10(%rsp)
  430a6e:	movq   $0x0,0x8(%rsp)
  430a77:	movq   $0x0,0x20(%rsp)
  430a80:	xor    %ebp,%ebp
  430a82:	movq   $0x0,0x28(%rsp)
  430a8b:	mov    $0x1,%r13d
  430a91:	mov    0x50(%rsp),%eax
  430a95:	test   %eax,%eax
  430a97:	je     43048c <X509_get0_pubkey_bitstr@plt+0x19abc>
  430a9d:	lea    0x24a29c(%rip),%rax        # 67ad40 <_edata+0x38>
  430aa4:	xor    %edi,%edi
  430aa6:	mov    (%rax),%rsi
  430aa9:	callq  44a660 <X509_get0_pubkey_bitstr@plt+0x33c90>
  430aae:	jmpq   43048c <X509_get0_pubkey_bitstr@plt+0x19abc>
  430ab3:	callq  412cd0 <sk_new_null@plt>
  430ab8:	test   %rax,%rax
  430abb:	mov    %rax,0x8(%rsp)
  430ac0:	jne    430b3d <X509_get0_pubkey_bitstr@plt+0x1a16d>
  430ac2:	mov    0x8(%rsp),%rbx
  430ac7:	mov    0x10(%rsp),%r15
  430acc:	mov    0x18(%rsp),%r14
  430ad1:	mov    0x248308(%rip),%rdx        # 678de0 <_fini+0x21b8dc>
  430ad8:	test   %rdx,%rdx
  430adb:	je     430a50 <X509_get0_pubkey_bitstr@plt+0x1a080>
  430ae1:	lea    0x2482f8(%rip),%rbp        # 678de0 <_fini+0x21b8dc>
  430ae8:	nopl   0x0(%rax,%rax,1)
  430af0:	lea    0x24a249(%rip),%rax        # 67ad40 <_edata+0x38>
  430af7:	lea    0x3a066(%rip),%rsi        # 46ab64 <_fini+0xd660>
  430afe:	add    $0x8,%rbp
  430b02:	mov    (%rax),%rdi
  430b05:	xor    %eax,%eax
  430b07:	callq  413c40 <BIO_printf@plt>
  430b0c:	mov    0x0(%rbp),%rdx
  430b10:	test   %rdx,%rdx
  430b13:	jne    430af0 <X509_get0_pubkey_bitstr@plt+0x1a120>
  430b15:	jmpq   430a50 <X509_get0_pubkey_bitstr@plt+0x1a080>
  430b1a:	lea    0x2d6f7(%rip),%rdi        # 45e218 <_fini+0xd14>
  430b21:	mov    %rbp,%rsi
  430b24:	mov    %r12,%rcx
  430b27:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  430b29:	jne    430b60 <X509_get0_pubkey_bitstr@plt+0x1a190>
  430b2b:	sub    $0x1,%r14d
  430b2f:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  430b31:	cmpq   $0x0,0x8(%rsp)
  430b37:	je     430ab3 <X509_get0_pubkey_bitstr@plt+0x1a0e3>
  430b3d:	mov    0x8(%rbx),%rsi
  430b41:	mov    0x8(%rsp),%rdi
  430b46:	lea    0x8(%rbx),%rbp
  430b4a:	callq  412fe0 <sk_push@plt>
  430b4f:	test   %eax,%eax
  430b51:	jne    43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  430b57:	jmpq   430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  430b5c:	nopl   0x0(%rax)
  430b60:	lea    0x2d732(%rip),%rdi        # 45e299 <_fini+0xd95>
  430b67:	mov    $0x6,%ecx
  430b6c:	mov    %rbp,%rsi
  430b6f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  430b71:	jne    430bd0 <X509_get0_pubkey_bitstr@plt+0x1a200>
  430b73:	sub    $0x1,%r14d
  430b77:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  430b7d:	mov    0x8(%rbx),%rdi
  430b81:	xor    %esi,%esi
  430b83:	mov    $0xa,%edx
  430b88:	lea    0x8(%rbx),%rbp
  430b8c:	callq  4155d0 <strtol@plt>
  430b91:	test   %eax,%eax
  430b93:	mov    %eax,0x84(%rsp)
  430b9a:	jne    43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  430ba0:	lea    0x24a199(%rip),%rax        # 67ad40 <_edata+0x38>
  430ba7:	lea    0x34edf(%rip),%rsi        # 465a8d <_fini+0x8589>
  430bae:	mov    0x8(%rsp),%rbx
  430bb3:	mov    0x10(%rsp),%r15
  430bb8:	mov    0x18(%rsp),%r14
  430bbd:	mov    (%rax),%rdi
  430bc0:	xor    %eax,%eax
  430bc2:	callq  413c40 <BIO_printf@plt>
  430bc7:	jmpq   430ad1 <X509_get0_pubkey_bitstr@plt+0x1a101>
  430bcc:	nopl   0x0(%rax)
  430bd0:	lea    0x2d619(%rip),%rdi        # 45e1f0 <_fini+0xcec>
  430bd7:	mov    %rbp,%rsi
  430bda:	mov    %r12,%rcx
  430bdd:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  430bdf:	jne    430c4f <X509_get0_pubkey_bitstr@plt+0x1a27f>
  430be1:	sub    $0x1,%r14d
  430be5:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  430beb:	mov    0x8(%rbx),%rax
  430bef:	lea    0x8(%rbx),%rbp
  430bf3:	mov    %rax,0x30(%rsp)
  430bf8:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  430bfd:	mov    %r14,%rdi
  430c00:	callq  412840 <X509_STORE_set_default_paths@plt>
  430c05:	test   %eax,%eax
  430c07:	je     430d20 <X509_get0_pubkey_bitstr@plt+0x1a350>
  430c0d:	mov    0xb4(%rsp),%edx
  430c14:	test   %edx,%edx
  430c16:	setne  %r12b
  430c1a:	je     430ca7 <X509_get0_pubkey_bitstr@plt+0x1a2d7>
  430c20:	cmpq   $0x0,0xa0(%rsp)
  430c29:	jne    430ca7 <X509_get0_pubkey_bitstr@plt+0x1a2d7>
  430c2b:	cmpl   $0x3,0x58(%rsp)
  430c30:	je     430c9a <X509_get0_pubkey_bitstr@plt+0x1a2ca>
  430c32:	lea    0x24a107(%rip),%rax        # 67ad40 <_edata+0x38>
  430c39:	lea    0x341a0(%rip),%rsi        # 464de0 <_fini+0x78dc>
  430c40:	mov    (%rax),%rdi
  430c43:	xor    %eax,%eax
  430c45:	callq  413c40 <BIO_printf@plt>
  430c4a:	jmpq   430a50 <X509_get0_pubkey_bitstr@plt+0x1a080>
  430c4f:	lea    0x303d2(%rip),%rdi        # 461028 <_fini+0x3b24>
  430c56:	mov    %rbp,%rsi
  430c59:	mov    $0x9,%ecx
  430c5e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  430c60:	jne    430d34 <X509_get0_pubkey_bitstr@plt+0x1a364>
  430c66:	sub    $0x1,%r14d
  430c6a:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  430c70:	mov    0x8(%rbx),%rax
  430c74:	lea    0x8(%rbx),%rbp
  430c78:	mov    %rax,0x28(%rsp)
  430c7d:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  430c82:	lea    0x24a0b7(%rip),%rax        # 67ad40 <_edata+0x38>
  430c89:	xor    %edx,%edx
  430c8b:	xor    %edi,%edi
  430c8d:	mov    (%rax),%rsi
  430c90:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  430c95:	jmpq   430a00 <X509_get0_pubkey_bitstr@plt+0x1a030>
  430c9a:	mov    0x70(%rsp),%rax
  430c9f:	mov    %rax,0xa0(%rsp)
  430ca7:	mov    0x28(%rsp),%rbp
  430cac:	test   %rbp,%rbp
  430caf:	je     430e37 <X509_get0_pubkey_bitstr@plt+0x1a467>
  430cb5:	xor    %edi,%edi
  430cb7:	movq   $0xffffffffffffffff,0x180(%rsp)
  430cc3:	callq  413cd0 <NCONF_new@plt>
  430cc8:	lea    0x180(%rsp),%rdx
  430cd0:	mov    %rbp,%rsi
  430cd3:	mov    %rax,%rdi
  430cd6:	mov    %rax,0x30(%rsp)
  430cdb:	callq  414c50 <NCONF_load@plt>
  430ce0:	test   %eax,%eax
  430ce2:	jne    430da4 <X509_get0_pubkey_bitstr@plt+0x1a3d4>
  430ce8:	mov    0x180(%rsp),%rdx
  430cf0:	test   %rdx,%rdx
  430cf3:	jle    431205 <X509_get0_pubkey_bitstr@plt+0x1a835>
  430cf9:	lea    0x24a040(%rip),%rax        # 67ad40 <_edata+0x38>
  430d00:	mov    0x28(%rsp),%rcx
  430d05:	lea    0x30df4(%rip),%rsi        # 461b00 <_fini+0x45fc>
  430d0c:	mov    (%rax),%rdi
  430d0f:	xor    %eax,%eax
  430d11:	callq  413c40 <BIO_printf@plt>
  430d16:	jmpq   430a59 <X509_get0_pubkey_bitstr@plt+0x1a089>
  430d1b:	callq  414c30 <__stack_chk_fail@plt>
  430d20:	lea    0x24a019(%rip),%rax        # 67ad40 <_edata+0x38>
  430d27:	mov    (%rax),%rdi
  430d2a:	callq  413f40 <ERR_print_errors@plt>
  430d2f:	jmpq   430a50 <X509_get0_pubkey_bitstr@plt+0x1a080>
  430d34:	lea    0x2d570(%rip),%rsi        # 45e2ab <_fini+0xda7>
  430d3b:	mov    %rbp,%rdi
  430d3e:	callq  4155c0 <strcmp@plt>
  430d43:	test   %eax,%eax
  430d45:	jne    430e42 <X509_get0_pubkey_bitstr@plt+0x1a472>
  430d4b:	sub    $0x1,%r14d
  430d4f:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  430d55:	mov    0x8(%rbx),%rax
  430d59:	lea    0x8(%rbx),%rbp
  430d5d:	mov    %rax,0x68(%rsp)
  430d62:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  430d67:	movl   $0x3,0x138(%rsp)
  430d72:	movl   $0x3,0x8(%rsp)
  430d7a:	xor    %ebx,%ebx
  430d7c:	movq   $0x0,0x48(%rsp)
  430d85:	movq   $0x0,0x40(%rsp)
  430d8e:	movl   $0x0,0x60(%rsp)
  430d96:	movq   $0x0,0x38(%rsp)
  430d9f:	jmpq   4309d3 <X509_get0_pubkey_bitstr@plt+0x1a003>
  430da4:	cmpq   $0x0,0x68(%rsp)
  430daa:	je     43274f <X509_get0_pubkey_bitstr@plt+0x1bd7f>
  430db0:	lea    0x1c0(%rsp),%rbp
  430db8:	xor    %r8d,%r8d
  430dbb:	xor    %ecx,%ecx
  430dbd:	xor    %edx,%edx
  430dbf:	mov    $0x1,%r9d
  430dc5:	xor    %esi,%esi
  430dc7:	mov    %rbp,%rdi
  430dca:	callq  413910 <X509V3_set_ctx@plt>
  430dcf:	mov    0x30(%rsp),%r13
  430dd4:	mov    %rbp,%rdi
  430dd7:	mov    %r13,%rsi
  430dda:	callq  4155a0 <X509V3_set_nconf@plt>
  430ddf:	mov    0x68(%rsp),%rdx
  430de4:	xor    %ecx,%ecx
  430de6:	mov    %rbp,%rsi
  430de9:	mov    %r13,%rdi
  430dec:	callq  4168d0 <X509V3_EXT_add_nconf@plt>
  430df1:	test   %eax,%eax
  430df3:	je     431275 <X509_get0_pubkey_bitstr@plt+0x1a8a5>
  430df9:	cmpl   $0x0,0x24a548(%rip)        # 67b348 <_edata+0x640>
  430e00:	je     430fe1 <X509_get0_pubkey_bitstr@plt+0x1a611>
  430e06:	mov    0xb4(%rsp),%eax
  430e0d:	or     0xdc(%rsp),%eax
  430e14:	jne    430eb6 <X509_get0_pubkey_bitstr@plt+0x1a4e6>
  430e1a:	lea    0x249f1f(%rip),%rax        # 67ad40 <_edata+0x38>
  430e21:	lea    0x33ff0(%rip),%rsi        # 464e18 <_fini+0x7914>
  430e28:	mov    (%rax),%rdi
  430e2b:	xor    %eax,%eax
  430e2d:	callq  413c40 <BIO_printf@plt>
  430e32:	jmpq   430a59 <X509_get0_pubkey_bitstr@plt+0x1a089>
  430e37:	movq   $0x0,0x30(%rsp)
  430e40:	jmp    430df9 <X509_get0_pubkey_bitstr@plt+0x1a429>
  430e42:	movzbl 0x0(%rbp),%eax
  430e46:	sub    $0x2d,%eax
  430e49:	mov    %eax,0x148(%rsp)
  430e50:	jne    430e80 <X509_get0_pubkey_bitstr@plt+0x1a4b0>
  430e52:	cmpb   $0x69,0x1(%rbp)
  430e56:	jne    430e80 <X509_get0_pubkey_bitstr@plt+0x1a4b0>
  430e58:	cmpb   $0x6e,0x2(%rbp)
  430e5c:	jne    430e80 <X509_get0_pubkey_bitstr@plt+0x1a4b0>
  430e5e:	cmpb   $0x0,0x3(%rbp)
  430e62:	jne    430e80 <X509_get0_pubkey_bitstr@plt+0x1a4b0>
  430e64:	sub    $0x1,%r14d
  430e68:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  430e6e:	mov    0x8(%rbx),%rax
  430e72:	lea    0x8(%rbx),%rbp
  430e76:	mov    %rax,0x20(%rsp)
  430e7b:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  430e80:	lea    0x2cfbf(%rip),%rsi        # 45de46 <_fini+0x942>
  430e87:	mov    %rbp,%rdi
  430e8a:	callq  4155c0 <strcmp@plt>
  430e8f:	test   %eax,%eax
  430e91:	jne    431227 <X509_get0_pubkey_bitstr@plt+0x1a857>
  430e97:	sub    $0x1,%r14d
  430e9b:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  430ea1:	mov    0x8(%rbx),%rax
  430ea5:	lea    0x8(%rbx),%rbp
  430ea9:	mov    %rax,0x90(%rsp)
  430eb1:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  430eb6:	callq  4152b0 <BIO_s_file@plt>
  430ebb:	mov    %rax,%rdi
  430ebe:	callq  414a20 <BIO_new@plt>
  430ec3:	test   %rax,%rax
  430ec6:	mov    %rax,%rbp
  430ec9:	je     4326b7 <X509_get0_pubkey_bitstr@plt+0x1bce7>
  430ecf:	cmpq   $0x0,0x20(%rsp)
  430ed5:	je     432a4c <X509_get0_pubkey_bitstr@plt+0x1c07c>
  430edb:	mov    0x20(%rsp),%rcx
  430ee0:	mov    $0x3,%edx
  430ee5:	mov    $0x6c,%esi
  430eea:	mov    %rax,%rdi
  430eed:	callq  412af0 <BIO_ctrl@plt>
  430ef2:	test   %rax,%rax
  430ef5:	jle    432a6d <X509_get0_pubkey_bitstr@plt+0x1c09d>
  430efb:	xor    %ecx,%ecx
  430efd:	xor    %edx,%edx
  430eff:	xor    %esi,%esi
  430f01:	mov    %rbp,%rdi
  430f04:	callq  415280 <PEM_read_bio_X509_REQ@plt>
  430f09:	mov    %rbp,%rdi
  430f0c:	mov    %rax,%r13
  430f0f:	mov    %rax,0x28(%rsp)
  430f14:	callq  413960 <BIO_free@plt>
  430f19:	test   %r13,%r13
  430f1c:	je     432a0c <X509_get0_pubkey_bitstr@plt+0x1c03c>
  430f22:	mov    0x28(%rsp),%rax
  430f27:	mov    (%rax),%rax
  430f2a:	test   %rax,%rax
  430f2d:	je     4312a6 <X509_get0_pubkey_bitstr@plt+0x1a8d6>
  430f33:	mov    0x28(%rax),%rax
  430f37:	test   %rax,%rax
  430f3a:	je     4312a6 <X509_get0_pubkey_bitstr@plt+0x1a8d6>
  430f40:	mov    0x8(%rax),%rax
  430f44:	test   %rax,%rax
  430f47:	je     4312a6 <X509_get0_pubkey_bitstr@plt+0x1a8d6>
  430f4d:	cmpq   $0x0,0x8(%rax)
  430f52:	je     4312a6 <X509_get0_pubkey_bitstr@plt+0x1a8d6>
  430f58:	mov    0x28(%rsp),%rdi
  430f5d:	callq  413b00 <X509_REQ_get_pubkey@plt>
  430f62:	test   %rax,%rax
  430f65:	mov    %rax,%rbp
  430f68:	je     432508 <X509_get0_pubkey_bitstr@plt+0x1bb38>
  430f6e:	mov    0x28(%rsp),%rdi
  430f73:	mov    %rax,%rsi
  430f76:	callq  4132b0 <X509_REQ_verify@plt>
  430f7b:	mov    %rbp,%rdi
  430f7e:	mov    %eax,%r13d
  430f81:	callq  412b00 <EVP_PKEY_free@plt>
  430f86:	test   %r13d,%r13d
  430f89:	js     4328ea <X509_get0_pubkey_bitstr@plt+0x1bf1a>
  430f8f:	jne    4327eb <X509_get0_pubkey_bitstr@plt+0x1be1b>
  430f95:	lea    0x249da4(%rip),%rax        # 67ad40 <_edata+0x38>
  430f9c:	lea    0x30afd(%rip),%rsi        # 461aa0 <_fini+0x459c>
  430fa3:	mov    (%rax),%rdi
  430fa6:	xor    %eax,%eax
  430fa8:	callq  413c40 <BIO_printf@plt>
  430fad:	movq   $0x0,0x18(%rsp)
  430fb6:	xor    %r12d,%r12d
  430fb9:	movq   $0x0,0x10(%rsp)
  430fc2:	movq   $0x0,0x8(%rsp)
  430fcb:	movq   $0x0,0x20(%rsp)
  430fd4:	xor    %ebp,%ebp
  430fd6:	mov    $0x1,%r13d
  430fdc:	jmpq   430a91 <X509_get0_pubkey_bitstr@plt+0x1a0c1>
  430fe1:	lea    0x249d58(%rip),%rax        # 67ad40 <_edata+0x38>
  430fe8:	mov    0x140(%rsp),%r8
  430ff0:	lea    0x3ab0e(%rip),%r9        # 46bb05 <_fini+0xe601>
  430ff7:	mov    0x8(%rsp),%edx
  430ffb:	mov    0x20(%rsp),%rsi
  431000:	xor    %ecx,%ecx
  431002:	mov    (%rax),%rdi
  431005:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  43100a:	test   %rax,%rax
  43100d:	mov    %rax,%rbp
  431010:	je     4326c6 <X509_get0_pubkey_bitstr@plt+0x1bcf6>
  431016:	movq   $0x0,0x28(%rsp)
  43101f:	test   %r12b,%r12b
  431022:	movq   $0x0,0x20(%rsp)
  43102b:	jne    432657 <X509_get0_pubkey_bitstr@plt+0x1bc87>
  431031:	cmpl   $0x0,0x80(%rsp)
  431039:	je     431053 <X509_get0_pubkey_bitstr@plt+0x1a683>
  43103b:	cmpl   $0x0,0xc4(%rsp)
  431043:	jne    431053 <X509_get0_pubkey_bitstr@plt+0x1a683>
  431045:	cmpl   $0x0,0xb0(%rsp)
  43104d:	je     4311fd <X509_get0_pubkey_bitstr@plt+0x1a82d>
  431053:	lea    0x34b8d(%rip),%rdx        # 465be7 <_fini+0x86e3>
  43105a:	lea    0x34b9d(%rip),%rsi        # 465bfe <_fini+0x86fa>
  431061:	lea    0x34b9e(%rip),%rdi        # 465c06 <_fini+0x8702>
  431068:	callq  414060 <OBJ_create@plt>
  43106d:	callq  4152b0 <BIO_s_file@plt>
  431072:	mov    %rax,%rdi
  431075:	callq  414a20 <BIO_new@plt>
  43107a:	test   %rax,%rax
  43107d:	mov    %rax,%r12
  431080:	je     432622 <X509_get0_pubkey_bitstr@plt+0x1bc52>
  431086:	cmpq   $0x0,0x90(%rsp)
  43108f:	je     4324ea <X509_get0_pubkey_bitstr@plt+0x1bb1a>
  431095:	mov    0x90(%rsp),%rcx
  43109d:	mov    $0x5,%edx
  4310a2:	mov    $0x6c,%esi
  4310a7:	mov    %rax,%rdi
  4310aa:	callq  412af0 <BIO_ctrl@plt>
  4310af:	test   %rax,%rax
  4310b2:	jle    4324b7 <X509_get0_pubkey_bitstr@plt+0x1bae7>
  4310b8:	mov    0xe8(%rsp),%rsi
  4310c0:	test   %rsi,%rsi
  4310c3:	je     4310d0 <X509_get0_pubkey_bitstr@plt+0x1a700>
  4310c5:	or     $0xffffffff,%edx
  4310c8:	mov    %rbp,%rdi
  4310cb:	callq  413400 <X509_alias_set1@plt>
  4310d0:	cmpl   $0x0,0x108(%rsp)
  4310d8:	jne    4324aa <X509_get0_pubkey_bitstr@plt+0x1bada>
  4310de:	cmpl   $0x0,0x110(%rsp)
  4310e6:	jne    43249d <X509_get0_pubkey_bitstr@plt+0x1bacd>
  4310ec:	xor    %r13d,%r13d
  4310ef:	cmpq   $0x0,0x40(%rsp)
  4310f5:	jne    43111c <X509_get0_pubkey_bitstr@plt+0x1a74c>
  4310f7:	jmp    43112b <X509_get0_pubkey_bitstr@plt+0x1a75b>
  4310f9:	nopl   0x0(%rax)
  431100:	mov    0x40(%rsp),%rdi
  431105:	mov    %r13d,%esi
  431108:	add    $0x1,%r13d
  43110c:	callq  412b30 <sk_value@plt>
  431111:	mov    %rbp,%rdi
  431114:	mov    %rax,%rsi
  431117:	callq  415800 <X509_add1_trust_object@plt>
  43111c:	mov    0x40(%rsp),%rdi
  431121:	callq  4156d0 <sk_num@plt>
  431126:	cmp    %eax,%r13d
  431129:	jl     431100 <X509_get0_pubkey_bitstr@plt+0x1a730>
  43112b:	xor    %r13d,%r13d
  43112e:	cmpq   $0x0,0x48(%rsp)
  431134:	jne    43115c <X509_get0_pubkey_bitstr@plt+0x1a78c>
  431136:	jmp    43116b <X509_get0_pubkey_bitstr@plt+0x1a79b>
  431138:	nopl   0x0(%rax,%rax,1)
  431140:	mov    0x48(%rsp),%rdi
  431145:	mov    %r13d,%esi
  431148:	add    $0x1,%r13d
  43114c:	callq  412b30 <sk_value@plt>
  431151:	mov    %rbp,%rdi
  431154:	mov    %rax,%rsi
  431157:	callq  414f90 <X509_add1_reject_object@plt>
  43115c:	mov    0x48(%rsp),%rdi
  431161:	callq  4156d0 <sk_num@plt>
  431166:	cmp    %eax,%r13d
  431169:	jl     431140 <X509_get0_pubkey_bitstr@plt+0x1a770>
  43116b:	cmpl   $0x0,0x60(%rsp)
  431170:	jne    4312db <X509_get0_pubkey_bitstr@plt+0x1a90b>
  431176:	movq   $0x0,0x18(%rsp)
  43117f:	movq   $0x0,0x10(%rsp)
  431188:	movq   $0x0,0x8(%rsp)
  431191:	cmpl   $0x0,0x134(%rsp)
  431199:	jne    432552 <X509_get0_pubkey_bitstr@plt+0x1bb82>
  43119f:	xor    %r13d,%r13d
  4311a2:	cmpl   $0x0,0x80(%rsp)
  4311aa:	jne    430a91 <X509_get0_pubkey_bitstr@plt+0x1a0c1>
  4311b0:	cmpl   $0x1,0x138(%rsp)
  4311b8:	je     4325ee <X509_get0_pubkey_bitstr@plt+0x1bc1e>
  4311be:	cmpl   $0x3,0x138(%rsp)
  4311c6:	je     4325a2 <X509_get0_pubkey_bitstr@plt+0x1bbd2>
  4311cc:	cmpl   $0x4,0x138(%rsp)
  4311d4:	lea    0x2e195(%rip),%rsi        # 45f370 <_fini+0x1e6c>
  4311db:	je     432701 <X509_get0_pubkey_bitstr@plt+0x1bd31>
  4311e1:	lea    0x249b58(%rip),%rax        # 67ad40 <_edata+0x38>
  4311e8:	mov    $0x1,%r13d
  4311ee:	mov    (%rax),%rdi
  4311f1:	xor    %eax,%eax
  4311f3:	callq  413c40 <BIO_printf@plt>
  4311f8:	jmpq   430a91 <X509_get0_pubkey_bitstr@plt+0x1a0c1>
  4311fd:	xor    %r12d,%r12d
  431200:	jmpq   4310b8 <X509_get0_pubkey_bitstr@plt+0x1a6e8>
  431205:	lea    0x249b34(%rip),%rax        # 67ad40 <_edata+0x38>
  43120c:	mov    0x28(%rsp),%rdx
  431211:	lea    0x308c0(%rip),%rsi        # 461ad8 <_fini+0x45d4>
  431218:	mov    (%rax),%rdi
  43121b:	xor    %eax,%eax
  43121d:	callq  413c40 <BIO_printf@plt>
  431222:	jmpq   430a59 <X509_get0_pubkey_bitstr@plt+0x1a089>
  431227:	lea    0x34873(%rip),%rsi        # 465aa1 <_fini+0x859d>
  43122e:	mov    %rbp,%rdi
  431231:	callq  4155c0 <strcmp@plt>
  431236:	test   %eax,%eax
  431238:	jne    43278b <X509_get0_pubkey_bitstr@plt+0x1bdbb>
  43123e:	sub    $0x1,%r14d
  431242:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  431248:	mov    0x8(%rbx),%rax
  43124c:	addl   $0x1,0x60(%rsp)
  431251:	lea    0x8(%rbx),%rbp
  431255:	movl   $0x1,0x50(%rsp)
  43125d:	mov    %rax,0x98(%rsp)
  431265:	mov    0x60(%rsp),%eax
  431269:	mov    %eax,0xdc(%rsp)
  431270:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  431275:	lea    0x249ac4(%rip),%rax        # 67ad40 <_edata+0x38>
  43127c:	mov    0x68(%rsp),%rdx
  431281:	lea    0x2dcd8(%rip),%rsi        # 45ef60 <_fini+0x1a5c>
  431288:	mov    (%rax),%rdi
  43128b:	xor    %eax,%eax
  43128d:	callq  413c40 <BIO_printf@plt>
  431292:	lea    0x249aa7(%rip),%rax        # 67ad40 <_edata+0x38>
  431299:	mov    (%rax),%rdi
  43129c:	callq  413f40 <ERR_print_errors@plt>
  4312a1:	jmpq   430a59 <X509_get0_pubkey_bitstr@plt+0x1a089>
  4312a6:	lea    0x249a93(%rip),%rax        # 67ad40 <_edata+0x38>
  4312ad:	lea    0x33b8c(%rip),%rsi        # 464e40 <_fini+0x793c>
  4312b4:	mov    (%rax),%rdi
  4312b7:	xor    %eax,%eax
  4312b9:	callq  413c40 <BIO_printf@plt>
  4312be:	lea    0x249a7b(%rip),%rax        # 67ad40 <_edata+0x38>
  4312c5:	lea    0x33ba4(%rip),%rsi        # 464e70 <_fini+0x796c>
  4312cc:	mov    (%rax),%rdi
  4312cf:	xor    %eax,%eax
  4312d1:	callq  413c40 <BIO_printf@plt>
  4312d6:	jmpq   430fad <X509_get0_pubkey_bitstr@plt+0x1a5dd>
  4312db:	movslq 0x84(%rsp),%rax
  4312e3:	lea    0x180(%rsp),%rdx
  4312eb:	mov    %r12,0x58(%rsp)
  4312f0:	movq   $0x0,0x18(%rsp)
  4312f9:	mov    $0x1,%r13d
  4312ff:	movq   $0x0,0x10(%rsp)
  431308:	mov    %rdx,0x108(%rsp)
  431310:	lea    0x2c0(%rsp),%rdx
  431318:	movq   $0x0,0x8(%rsp)
  431321:	mov    %rbx,0x90(%rsp)
  431329:	mov    %r14,0xb8(%rsp)
  431331:	imul   $0x15180,%rax,%rax
  431338:	mov    %rdx,0x110(%rsp)
  431340:	lea    0x300(%rsp),%rdx
  431348:	mov    %rdx,0x150(%rsp)
  431350:	mov    %rax,0x148(%rsp)
  431358:	lea    0x1c0(%rsp),%rax
  431360:	mov    %rax,%r12
  431363:	cmp    %r13d,0xd0(%rsp)
  43136b:	je     432473 <X509_get0_pubkey_bitstr@plt+0x1baa3>
  431371:	cmp    %r13d,0xcc(%rsp)
  431379:	je     432449 <X509_get0_pubkey_bitstr@plt+0x1ba79>
  43137f:	cmp    %r13d,0xc8(%rsp)
  431387:	je     43240f <X509_get0_pubkey_bitstr@plt+0x1ba3f>
  43138d:	cmp    %r13d,0xb0(%rsp)
  431395:	je     432392 <X509_get0_pubkey_bitstr@plt+0x1b9c2>
  43139b:	cmp    %r13d,0xe0(%rsp)
  4313a3:	sete   %al
  4313a6:	cmp    %r13d,0xe4(%rsp)
  4313ae:	jne    431428 <X509_get0_pubkey_bitstr@plt+0x1aa58>
  4313b0:	test   %al,%al
  4313b2:	jne    43142c <X509_get0_pubkey_bitstr@plt+0x1aa5c>
  4313b4:	mov    %rbp,%rdi
  4313b7:	callq  414fe0 <X509_get1_ocsp@plt>
  4313bc:	mov    %rax,%r14
  4313bf:	xor    %ebx,%ebx
  4313c1:	jmp    4313e4 <X509_get0_pubkey_bitstr@plt+0x1aa14>
  4313c3:	mov    %ebx,%esi
  4313c5:	mov    %r14,%rdi
  4313c8:	add    $0x1,%ebx
  4313cb:	callq  412b30 <sk_value@plt>
  4313d0:	lea    0x2f3e2(%rip),%rsi        # 4607b9 <_fini+0x32b5>
  4313d7:	mov    %rax,%rdx
  4313da:	mov    %r15,%rdi
  4313dd:	xor    %eax,%eax
  4313df:	callq  413c40 <BIO_printf@plt>
  4313e4:	mov    %r14,%rdi
  4313e7:	callq  4156d0 <sk_num@plt>
  4313ec:	cmp    %eax,%ebx
  4313ee:	jl     4313c3 <X509_get0_pubkey_bitstr@plt+0x1a9f3>
  4313f0:	mov    %r14,%rdi
  4313f3:	callq  415e40 <X509_email_free@plt>
  4313f8:	add    $0x1,%r13d
  4313fc:	cmp    0x60(%rsp),%r13d
  431401:	jle    431363 <X509_get0_pubkey_bitstr@plt+0x1a993>
  431407:	mov    0x90(%rsp),%rbx
  43140f:	mov    0x58(%rsp),%r12
  431414:	mov    0xb8(%rsp),%r14
  43141c:	jmpq   431191 <X509_get0_pubkey_bitstr@plt+0x1a7c1>
  431421:	nopl   0x0(%rax)
  431428:	test   %al,%al
  43142a:	je     431440 <X509_get0_pubkey_bitstr@plt+0x1aa70>
  43142c:	mov    %rbp,%rdi
  43142f:	callq  412c80 <X509_get1_email@plt>
  431434:	mov    %rax,%r14
  431437:	jmp    4313bf <X509_get0_pubkey_bitstr@plt+0x1a9ef>
  431439:	nopl   0x0(%rax)
  431440:	cmp    %r13d,0x11c(%rsp)
  431448:	je     431dfc <X509_get0_pubkey_bitstr@plt+0x1b42c>
  43144e:	cmp    %r13d,0xf4(%rsp)
  431456:	je     431def <X509_get0_pubkey_bitstr@plt+0x1b41f>
  43145c:	cmp    %r13d,0x100(%rsp)
  431464:	je     431de2 <X509_get0_pubkey_bitstr@plt+0x1b412>
  43146a:	cmp    %r13d,0xf8(%rsp)
  431472:	je     431dd7 <X509_get0_pubkey_bitstr@plt+0x1b407>
  431478:	cmp    %r13d,0x104(%rsp)
  431480:	je     431d61 <X509_get0_pubkey_bitstr@plt+0x1b391>
  431486:	cmp    %r13d,0x12c(%rsp)
  43148e:	je     431c59 <X509_get0_pubkey_bitstr@plt+0x1b289>
  431494:	cmp    %r13d,0x124(%rsp)
  43149c:	je     431b69 <X509_get0_pubkey_bitstr@plt+0x1b199>
  4314a2:	cmp    %r13d,0x128(%rsp)
  4314aa:	je     431b41 <X509_get0_pubkey_bitstr@plt+0x1b171>
  4314b0:	cmp    %r13d,0x120(%rsp)
  4314b8:	je     43188f <X509_get0_pubkey_bitstr@plt+0x1aebf>
  4314be:	cmp    %r13d,0xc4(%rsp)
  4314c6:	je     43186f <X509_get0_pubkey_bitstr@plt+0x1ae9f>
  4314cc:	cmp    %r13d,0xd4(%rsp)
  4314d4:	je     431832 <X509_get0_pubkey_bitstr@plt+0x1ae62>
  4314da:	cmp    %r13d,0xd8(%rsp)
  4314e2:	je     4317fb <X509_get0_pubkey_bitstr@plt+0x1ae2b>
  4314e8:	cmp    %r13d,0x130(%rsp)
  4314f0:	je     431758 <X509_get0_pubkey_bitstr@plt+0x1ad88>
  4314f6:	cmp    %r13d,0xdc(%rsp)
  4314fe:	je     43153c <X509_get0_pubkey_bitstr@plt+0x1ab6c>
  431500:	cmp    %r13d,0xb4(%rsp)
  431508:	je     431ef5 <X509_get0_pubkey_bitstr@plt+0x1b525>
  43150e:	cmp    %r13d,0xf0(%rsp)
  431516:	je     431e28 <X509_get0_pubkey_bitstr@plt+0x1b458>
  43151c:	cmp    %r13d,0xfc(%rsp)
  431524:	jne    4313f8 <X509_get0_pubkey_bitstr@plt+0x1aa28>
  43152a:	mov    0x58(%rsp),%rdi
  43152f:	mov    %rbp,%rsi
  431532:	callq  415120 <X509_ocspid_print@plt>
  431537:	jmpq   4313f8 <X509_get0_pubkey_bitstr@plt+0x1aa28>
  43153c:	cmpl   $0x0,0xf0(%rsp)
  431544:	jne    431500 <X509_get0_pubkey_bitstr@plt+0x1ab30>
  431546:	lea    0x2497f3(%rip),%rax        # 67ad40 <_edata+0x38>
  43154d:	lea    0x34766(%rip),%rsi        # 465cba <_fini+0x87b6>
  431554:	mov    (%rax),%rdi
  431557:	xor    %eax,%eax
  431559:	callq  413c40 <BIO_printf@plt>
  43155e:	cmpq   $0x0,0x8(%rsp)
  431564:	je     4316f2 <X509_get0_pubkey_bitstr@plt+0x1ad22>
  43156a:	cmpl   $0x0,0x50(%rsp)
  43156f:	je     4316d3 <X509_get0_pubkey_bitstr@plt+0x1ad03>
  431575:	mov    %rbp,%rdi
  431578:	callq  4161b0 <X509_get_pubkey@plt>
  43157d:	mov    0x8(%rsp),%rsi
  431582:	mov    %rax,%rbx
  431585:	mov    %rax,%rdi
  431588:	callq  416330 <EVP_PKEY_copy_parameters@plt>
  43158d:	mov    $0x1,%esi
  431592:	mov    %rbx,%rdi
  431595:	callq  415d40 <EVP_PKEY_save_parameters@plt>
  43159a:	mov    %rbx,%rdi
  43159d:	callq  412b00 <EVP_PKEY_free@plt>
  4315a2:	mov    %rbp,%rdi
  4315a5:	callq  414400 <X509_get_subject_name@plt>
  4315aa:	mov    %rbp,%rdi
  4315ad:	mov    %rax,%rsi
  4315b0:	callq  4159c0 <X509_set_issuer_name@plt>
  4315b5:	test   %eax,%eax
  4315b7:	je     431688 <X509_get0_pubkey_bitstr@plt+0x1acb8>
  4315bd:	mov    0x0(%rbp),%rax
  4315c1:	xor    %esi,%esi
  4315c3:	mov    0x20(%rax),%rax
  4315c7:	mov    (%rax),%rdi
  4315ca:	callq  4164f0 <X509_gmtime_adj@plt>
  4315cf:	test   %rax,%rax
  4315d2:	je     431688 <X509_get0_pubkey_bitstr@plt+0x1acb8>
  4315d8:	mov    0x0(%rbp),%rax
  4315dc:	mov    0x148(%rsp),%rsi
  4315e4:	mov    0x20(%rax),%rax
  4315e8:	mov    0x8(%rax),%rdi
  4315ec:	callq  4164f0 <X509_gmtime_adj@plt>
  4315f1:	test   %rax,%rax
  4315f4:	je     431688 <X509_get0_pubkey_bitstr@plt+0x1acb8>
  4315fa:	mov    0x8(%rsp),%rsi
  4315ff:	mov    %rbp,%rdi
  431602:	callq  416930 <X509_set_pubkey@plt>
  431607:	test   %eax,%eax
  431609:	je     431688 <X509_get0_pubkey_bitstr@plt+0x1acb8>
  43160b:	cmpl   $0x0,0xc0(%rsp)
  431613:	jne    4316b7 <X509_get0_pubkey_bitstr@plt+0x1ace7>
  431619:	cmpq   $0x0,0x30(%rsp)
  43161f:	je     43166b <X509_get0_pubkey_bitstr@plt+0x1ac9b>
  431621:	mov    $0x2,%esi
  431626:	mov    %rbp,%rdi
  431629:	callq  416170 <X509_set_version@plt>
  43162e:	xor    %r9d,%r9d
  431631:	xor    %r8d,%r8d
  431634:	xor    %ecx,%ecx
  431636:	mov    %rbp,%rdx
  431639:	mov    %rbp,%rsi
  43163c:	mov    %r12,%rdi
  43163f:	callq  413910 <X509V3_set_ctx@plt>
  431644:	mov    0x30(%rsp),%rbx
  431649:	mov    %r12,%rdi
  43164c:	mov    %rbx,%rsi
  43164f:	callq  4155a0 <X509V3_set_nconf@plt>
  431654:	mov    0x68(%rsp),%rdx
  431659:	mov    %rbp,%rcx
  43165c:	mov    %r12,%rsi
  43165f:	mov    %rbx,%rdi
  431662:	callq  4168d0 <X509V3_EXT_add_nconf@plt>
  431667:	test   %eax,%eax
  431669:	je     431688 <X509_get0_pubkey_bitstr@plt+0x1acb8>
  43166b:	mov    0x88(%rsp),%rdx
  431673:	mov    0x8(%rsp),%rsi
  431678:	mov    %rbp,%rdi
  43167b:	callq  4133f0 <X509_sign@plt>
  431680:	test   %eax,%eax
  431682:	jne    4313f8 <X509_get0_pubkey_bitstr@plt+0x1aa28>
  431688:	lea    0x2496b1(%rip),%rax        # 67ad40 <_edata+0x38>
  43168f:	mov    0x90(%rsp),%rbx
  431697:	mov    $0x1,%r13d
  43169d:	mov    0x58(%rsp),%r12
  4316a2:	mov    0xb8(%rsp),%r14
  4316aa:	mov    (%rax),%rdi
  4316ad:	callq  413f40 <ERR_print_errors@plt>
  4316b2:	jmpq   430a91 <X509_get0_pubkey_bitstr@plt+0x1a0c1>
  4316b7:	mov    %rbp,%rdi
  4316ba:	callq  412880 <X509_get_ext_count@plt>
  4316bf:	test   %eax,%eax
  4316c1:	jle    431619 <X509_get0_pubkey_bitstr@plt+0x1ac49>
  4316c7:	xor    %esi,%esi
  4316c9:	mov    %rbp,%rdi
  4316cc:	callq  413f10 <X509_delete_ext@plt>
  4316d1:	jmp    4316b7 <X509_get0_pubkey_bitstr@plt+0x1ace7>
  4316d3:	lea    0x346d9(%rip),%rcx        # 465db3 <_fini+0x88af>
  4316da:	lea    0x345bd(%rip),%rsi        # 465c9e <_fini+0x879a>
  4316e1:	lea    0x323ee(%rip),%rdi        # 463ad6 <_fini+0x65d2>
  4316e8:	mov    $0x3c6,%edx
  4316ed:	callq  413d40 <__assert_fail@plt>
  4316f2:	lea    0x345d6(%rip),%rax        # 465ccf <_fini+0x87cb>
  4316f9:	mov    0x140(%rsp),%r9
  431701:	mov    0x168(%rsp),%r8
  431709:	mov    0x54(%rsp),%edx
  43170d:	mov    0x98(%rsp),%rsi
  431715:	xor    %ecx,%ecx
  431717:	mov    %rax,(%rsp)
  43171b:	lea    0x24961e(%rip),%rax        # 67ad40 <_edata+0x38>
  431722:	mov    (%rax),%rdi
  431725:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  43172a:	test   %rax,%rax
  43172d:	mov    %rax,0x8(%rsp)
  431732:	jne    43156a <X509_get0_pubkey_bitstr@plt+0x1ab9a>
  431738:	mov    0x90(%rsp),%rbx
  431740:	mov    0x58(%rsp),%r12
  431745:	mov    $0x1,%r13d
  43174b:	mov    0xb8(%rsp),%r14
  431753:	jmpq   430a91 <X509_get0_pubkey_bitstr@plt+0x1a0c1>
  431758:	mov    0x88(%rsp),%rax
  431760:	test   %rax,%rax
  431763:	mov    %rax,%rbx
  431766:	jne    431770 <X509_get0_pubkey_bitstr@plt+0x1ada0>
  431768:	callq  413790 <EVP_sha1@plt>
  43176d:	mov    %rax,%rbx
  431770:	mov    0x110(%rsp),%rdx
  431778:	mov    %r12,%rcx
  43177b:	mov    %rbx,%rsi
  43177e:	mov    %rbp,%rdi
  431781:	callq  413710 <X509_digest@plt>
  431786:	test   %eax,%eax
  431788:	je     43184e <X509_get0_pubkey_bitstr@plt+0x1ae7e>
  43178e:	mov    %rbx,%rdi
  431791:	xor    %r14d,%r14d
  431794:	mov    $0x3a,%ebx
  431799:	callq  415290 <EVP_MD_type@plt>
  43179e:	mov    %eax,%edi
  4317a0:	callq  415b30 <OBJ_nid2sn@plt>
  4317a5:	lea    0x315cd(%rip),%rsi        # 462d79 <_fini+0x5875>
  4317ac:	mov    %rax,%rdx
  4317af:	mov    %r15,%rdi
  4317b2:	xor    %eax,%eax
  4317b4:	callq  413c40 <BIO_printf@plt>
  4317b9:	mov    0x1c0(%rsp),%eax
  4317c0:	cmp    %r14d,%eax
  4317c3:	jle    4313f8 <X509_get0_pubkey_bitstr@plt+0x1aa28>
  4317c9:	lea    0x1(%r14),%edx
  4317cd:	mov    $0xa,%ecx
  4317d2:	lea    0x315b0(%rip),%rsi        # 462d89 <_fini+0x5885>
  4317d9:	mov    %r15,%rdi
  4317dc:	cmp    %eax,%edx
  4317de:	mov    0x110(%rsp),%rax
  4317e6:	cmovne %ebx,%ecx
  4317e9:	movzbl (%rax,%r14,1),%edx
  4317ee:	xor    %eax,%eax
  4317f0:	add    $0x1,%r14
  4317f4:	callq  413c40 <BIO_printf@plt>
  4317f9:	jmp    4317b9 <X509_get0_pubkey_bitstr@plt+0x1ade9>
  4317fb:	lea    0x344ae(%rip),%rsi        # 465cb0 <_fini+0x87ac>
  431802:	mov    %r15,%rdi
  431805:	callq  413b70 <BIO_puts@plt>
  43180a:	mov    0x0(%rbp),%rax
  43180e:	mov    0x20(%rax),%rax
  431812:	mov    0x8(%rax),%rsi
  431816:	mov    %r15,%rdi
  431819:	callq  415f50 <ASN1_TIME_print@plt>
  43181e:	lea    0x3337a(%rip),%rsi        # 464b9f <_fini+0x769b>
  431825:	mov    %r15,%rdi
  431828:	callq  413b70 <BIO_puts@plt>
  43182d:	jmpq   4313f8 <X509_get0_pubkey_bitstr@plt+0x1aa28>
  431832:	lea    0x3446c(%rip),%rsi        # 465ca5 <_fini+0x87a1>
  431839:	mov    %r15,%rdi
  43183c:	callq  413b70 <BIO_puts@plt>
  431841:	mov    0x0(%rbp),%rax
  431845:	mov    0x20(%rax),%rax
  431849:	mov    (%rax),%rsi
  43184c:	jmp    431816 <X509_get0_pubkey_bitstr@plt+0x1ae46>
  43184e:	mov    0x90(%rsp),%rbx
  431856:	mov    0x58(%rsp),%r12
  43185b:	lea    0x2e051(%rip),%rsi        # 45f8b3 <_fini+0x23af>
  431862:	mov    0xb8(%rsp),%r14
  43186a:	jmpq   4311e1 <X509_get0_pubkey_bitstr@plt+0x1a811>
  43186f:	mov    0x178(%rsp),%rcx
  431877:	mov    0x170(%rsp),%rdx
  43187f:	mov    %rbp,%rsi
  431882:	mov    %r15,%rdi
  431885:	callq  412950 <X509_print_ex@plt>
  43188a:	jmpq   4313f8 <X509_get0_pubkey_bitstr@plt+0x1aa28>
  43188f:	mov    %rbp,%rdi
  431892:	callq  414400 <X509_get_subject_name@plt>
  431897:	mov    0x150(%rsp),%rbx
  43189f:	mov    $0x100,%edx
  4318a4:	mov    %rax,%rdi
  4318a7:	mov    %rbx,%rsi
  4318aa:	callq  4139a0 <X509_NAME_oneline@plt>
  4318af:	lea    0x343c4(%rip),%rsi        # 465c7a <_fini+0x8776>
  4318b6:	mov    %rbx,%rdx
  4318b9:	mov    %r15,%rdi
  4318bc:	xor    %eax,%eax
  4318be:	callq  413c40 <BIO_printf@plt>
  4318c3:	mov    %rbp,%rdi
  4318c6:	callq  412940 <X509_get_issuer_name@plt>
  4318cb:	mov    %rbx,%rsi
  4318ce:	mov    $0x100,%edx
  4318d3:	mov    %rax,%rdi
  4318d6:	callq  4139a0 <X509_NAME_oneline@plt>
  4318db:	lea    0x343aa(%rip),%rsi        # 465c8c <_fini+0x8788>
  4318e2:	mov    %rbx,%rdx
  4318e5:	mov    %r15,%rdi
  4318e8:	xor    %eax,%eax
  4318ea:	callq  413c40 <BIO_printf@plt>
  4318ef:	xor    %esi,%esi
  4318f1:	mov    %rbp,%rdi
  4318f4:	callq  416150 <i2d_X509@plt>
  4318f9:	lea    0x3439e(%rip),%rsi        # 465c9e <_fini+0x879a>
  431900:	mov    $0x369,%edx
  431905:	mov    %eax,%edi
  431907:	callq  413d50 <CRYPTO_malloc@plt>
  43190c:	mov    %rbp,%rdi
  43190f:	mov    %rax,%rbx
  431912:	mov    %rax,0x1c0(%rsp)
  43191a:	callq  414400 <X509_get_subject_name@plt>
  43191f:	mov    %r12,%rsi
  431922:	mov    %rax,%rdi
  431925:	callq  415e60 <i2d_X509_NAME@plt>
  43192a:	lea    0x33567(%rip),%rsi        # 464e98 <_fini+0x7994>
  431931:	mov    %eax,%edx
  431933:	mov    %eax,%r14d
  431936:	mov    %r15,%rdi
  431939:	xor    %eax,%eax
  43193b:	callq  413c40 <BIO_printf@plt>
  431940:	xor    %ecx,%ecx
  431942:	mov    %rbx,0x1c0(%rsp)
  43194a:	mov    %rbx,0xe8(%rsp)
  431952:	mov    %rcx,%rbx
  431955:	cmp    %r14d,%ebx
  431958:	jge    431998 <X509_get0_pubkey_bitstr@plt+0x1afc8>
  43195a:	mov    0x1c0(%rsp),%rax
  431962:	lea    0x2e15d(%rip),%rsi        # 45fac6 <_fini+0x25c2>
  431969:	mov    %r15,%rdi
  43196c:	movzbl (%rax,%rbx,1),%edx
  431970:	xor    %eax,%eax
  431972:	callq  413c40 <BIO_printf@plt>
  431977:	mov    %ebx,%eax
  431979:	and    $0xf,%eax
  43197c:	cmp    $0xf,%eax
  43197f:	jne    431992 <X509_get0_pubkey_bitstr@plt+0x1afc2>
  431981:	lea    0x33217(%rip),%rsi        # 464b9f <_fini+0x769b>
  431988:	mov    %r15,%rdi
  43198b:	xor    %eax,%eax
  43198d:	callq  413c40 <BIO_printf@plt>
  431992:	add    $0x1,%rbx
  431996:	jmp    431955 <X509_get0_pubkey_bitstr@plt+0x1af85>
  431998:	xor    %eax,%eax
  43199a:	test   %r14d,%r14d
  43199d:	mov    0xe8(%rsp),%rbx
  4319a5:	cmovns %r14d,%eax
  4319a9:	test   $0xf,%al
  4319ab:	je     4319be <X509_get0_pubkey_bitstr@plt+0x1afee>
  4319ad:	lea    0x331eb(%rip),%rsi        # 464b9f <_fini+0x769b>
  4319b4:	mov    %r15,%rdi
  4319b7:	xor    %eax,%eax
  4319b9:	callq  413c40 <BIO_printf@plt>
  4319be:	lea    0x2e10b(%rip),%rsi        # 45fad0 <_fini+0x25cc>
  4319c5:	mov    %r15,%rdi
  4319c8:	xor    %eax,%eax
  4319ca:	callq  413c40 <BIO_printf@plt>
  4319cf:	mov    0x0(%rbp),%rax
  4319d3:	mov    %r12,%rsi
  4319d6:	mov    0x30(%rax),%rdi
  4319da:	callq  414a30 <i2d_X509_PUBKEY@plt>
  4319df:	lea    0x334da(%rip),%rsi        # 464ec0 <_fini+0x79bc>
  4319e6:	mov    %eax,%edx
  4319e8:	mov    %eax,%r14d
  4319eb:	mov    %r15,%rdi
  4319ee:	xor    %eax,%eax
  4319f0:	callq  413c40 <BIO_printf@plt>
  4319f5:	xor    %ecx,%ecx
  4319f7:	mov    %rbx,0x1c0(%rsp)
  4319ff:	mov    %rbx,0xe8(%rsp)
  431a07:	mov    %rcx,%rbx
  431a0a:	cmp    %r14d,%ebx
  431a0d:	jge    431a4d <X509_get0_pubkey_bitstr@plt+0x1b07d>
  431a0f:	mov    0x1c0(%rsp),%rax
  431a17:	lea    0x2e0a8(%rip),%rsi        # 45fac6 <_fini+0x25c2>
  431a1e:	mov    %r15,%rdi
  431a21:	movzbl (%rax,%rbx,1),%edx
  431a25:	xor    %eax,%eax
  431a27:	callq  413c40 <BIO_printf@plt>
  431a2c:	mov    %ebx,%eax
  431a2e:	and    $0xf,%eax
  431a31:	cmp    $0xf,%eax
  431a34:	jne    431a47 <X509_get0_pubkey_bitstr@plt+0x1b077>
  431a36:	lea    0x33162(%rip),%rsi        # 464b9f <_fini+0x769b>
  431a3d:	mov    %r15,%rdi
  431a40:	xor    %eax,%eax
  431a42:	callq  413c40 <BIO_printf@plt>
  431a47:	add    $0x1,%rbx
  431a4b:	jmp    431a0a <X509_get0_pubkey_bitstr@plt+0x1b03a>
  431a4d:	xor    %eax,%eax
  431a4f:	test   %r14d,%r14d
  431a52:	mov    0xe8(%rsp),%rbx
  431a5a:	cmovns %r14d,%eax
  431a5e:	test   $0xf,%al
  431a60:	je     431a73 <X509_get0_pubkey_bitstr@plt+0x1b0a3>
  431a62:	lea    0x33136(%rip),%rsi        # 464b9f <_fini+0x769b>
  431a69:	mov    %r15,%rdi
  431a6c:	xor    %eax,%eax
  431a6e:	callq  413c40 <BIO_printf@plt>
  431a73:	lea    0x2e056(%rip),%rsi        # 45fad0 <_fini+0x25cc>
  431a7a:	mov    %r15,%rdi
  431a7d:	xor    %eax,%eax
  431a7f:	callq  413c40 <BIO_printf@plt>
  431a84:	mov    %r12,%rsi
  431a87:	mov    %rbp,%rdi
  431a8a:	callq  416150 <i2d_X509@plt>
  431a8f:	lea    0x33452(%rip),%rsi        # 464ee8 <_fini+0x79e4>
  431a96:	mov    %eax,%edx
  431a98:	mov    %eax,%r14d
  431a9b:	mov    %r15,%rdi
  431a9e:	xor    %eax,%eax
  431aa0:	callq  413c40 <BIO_printf@plt>
  431aa5:	xor    %ecx,%ecx
  431aa7:	mov    %rbx,0x1c0(%rsp)
  431aaf:	mov    %rbx,0xe8(%rsp)
  431ab7:	mov    %rcx,%rbx
  431aba:	cmp    %r14d,%ebx
  431abd:	jge    431afd <X509_get0_pubkey_bitstr@plt+0x1b12d>
  431abf:	mov    0x1c0(%rsp),%rax
  431ac7:	lea    0x2dff8(%rip),%rsi        # 45fac6 <_fini+0x25c2>
  431ace:	mov    %r15,%rdi
  431ad1:	movzbl (%rax,%rbx,1),%edx
  431ad5:	xor    %eax,%eax
  431ad7:	callq  413c40 <BIO_printf@plt>
  431adc:	mov    %ebx,%eax
  431ade:	and    $0xf,%eax
  431ae1:	cmp    $0xf,%eax
  431ae4:	jne    431af7 <X509_get0_pubkey_bitstr@plt+0x1b127>
  431ae6:	lea    0x330b2(%rip),%rsi        # 464b9f <_fini+0x769b>
  431aed:	mov    %r15,%rdi
  431af0:	xor    %eax,%eax
  431af2:	callq  413c40 <BIO_printf@plt>
  431af7:	add    $0x1,%rbx
  431afb:	jmp    431aba <X509_get0_pubkey_bitstr@plt+0x1b0ea>
  431afd:	xor    %eax,%eax
  431aff:	test   %r14d,%r14d
  431b02:	mov    0xe8(%rsp),%rbx
  431b0a:	cmovns %r14d,%eax
  431b0e:	test   $0xf,%al
  431b10:	je     431b23 <X509_get0_pubkey_bitstr@plt+0x1b153>
  431b12:	lea    0x33086(%rip),%rsi        # 464b9f <_fini+0x769b>
  431b19:	mov    %r15,%rdi
  431b1c:	xor    %eax,%eax
  431b1e:	callq  413c40 <BIO_printf@plt>
  431b23:	lea    0x2dfa6(%rip),%rsi        # 45fad0 <_fini+0x25cc>
  431b2a:	mov    %r15,%rdi
  431b2d:	xor    %eax,%eax
  431b2f:	callq  413c40 <BIO_printf@plt>
  431b34:	mov    %rbx,%rdi
  431b37:	callq  415020 <CRYPTO_free@plt>
  431b3c:	jmpq   4313f8 <X509_get0_pubkey_bitstr@plt+0x1aa28>
  431b41:	mov    %rbp,%rdi
  431b44:	callq  4161b0 <X509_get_pubkey@plt>
  431b49:	test   %rax,%rax
  431b4c:	mov    %rax,%rbx
  431b4f:	je     431bcd <X509_get0_pubkey_bitstr@plt+0x1b1fd>
  431b51:	mov    %r15,%rdi
  431b54:	mov    %rax,%rsi
  431b57:	callq  414610 <PEM_write_bio_PUBKEY@plt>
  431b5c:	mov    %rbx,%rdi
  431b5f:	callq  412b00 <EVP_PKEY_free@plt>
  431b64:	jmpq   4313f8 <X509_get0_pubkey_bitstr@plt+0x1aa28>
  431b69:	mov    %rbp,%rdi
  431b6c:	callq  4161b0 <X509_get_pubkey@plt>
  431b71:	test   %rax,%rax
  431b74:	mov    %rax,%rbx
  431b77:	je     431c3b <X509_get0_pubkey_bitstr@plt+0x1b26b>
  431b7d:	lea    0x2ca27(%rip),%rsi        # 45e5ab <_fini+0x10a7>
  431b84:	xor    %eax,%eax
  431b86:	mov    %r15,%rdi
  431b89:	callq  413c40 <BIO_printf@plt>
  431b8e:	mov    (%rbx),%eax
  431b90:	cmp    $0x6,%eax
  431b93:	je     431c26 <X509_get0_pubkey_bitstr@plt+0x1b256>
  431b99:	cmp    $0x74,%eax
  431b9c:	je     431c14 <X509_get0_pubkey_bitstr@plt+0x1b244>
  431b9e:	lea    0x2ca0f(%rip),%rsi        # 45e5b4 <_fini+0x10b0>
  431ba5:	mov    %r15,%rdi
  431ba8:	xor    %eax,%eax
  431baa:	callq  413c40 <BIO_printf@plt>
  431baf:	lea    0x32fe9(%rip),%rsi        # 464b9f <_fini+0x769b>
  431bb6:	mov    %r15,%rdi
  431bb9:	xor    %eax,%eax
  431bbb:	callq  413c40 <BIO_printf@plt>
  431bc0:	mov    %rbx,%rdi
  431bc3:	callq  412b00 <EVP_PKEY_free@plt>
  431bc8:	jmpq   4313f8 <X509_get0_pubkey_bitstr@plt+0x1aa28>
  431bcd:	mov    0x90(%rsp),%rbx
  431bd5:	mov    0x58(%rsp),%r12
  431bda:	lea    0x2c99b(%rip),%rsi        # 45e57c <_fini+0x1078>
  431be1:	mov    0xb8(%rsp),%r14
  431be9:	lea    0x249150(%rip),%rax        # 67ad40 <_edata+0x38>
  431bf0:	mov    $0x1,%r13d
  431bf6:	mov    (%rax),%rdi
  431bf9:	xor    %eax,%eax
  431bfb:	callq  413c40 <BIO_printf@plt>
  431c00:	lea    0x249139(%rip),%rax        # 67ad40 <_edata+0x38>
  431c07:	mov    (%rax),%rdi
  431c0a:	callq  413f40 <ERR_print_errors@plt>
  431c0f:	jmpq   430a91 <X509_get0_pubkey_bitstr@plt+0x1a0c1>
  431c14:	mov    0x20(%rbx),%rax
  431c18:	mov    %r15,%rdi
  431c1b:	mov    0x30(%rax),%rsi
  431c1f:	callq  413c20 <BN_print@plt>
  431c24:	jmp    431baf <X509_get0_pubkey_bitstr@plt+0x1b1df>
  431c26:	mov    0x20(%rbx),%rax
  431c2a:	mov    %r15,%rdi
  431c2d:	mov    0x20(%rax),%rsi
  431c31:	callq  413c20 <BN_print@plt>
  431c36:	jmpq   431baf <X509_get0_pubkey_bitstr@plt+0x1b1df>
  431c3b:	mov    0x90(%rsp),%rbx
  431c43:	mov    0x58(%rsp),%r12
  431c48:	lea    0x2c947(%rip),%rsi        # 45e596 <_fini+0x1092>
  431c4f:	mov    0xb8(%rsp),%r14
  431c57:	jmp    431be9 <X509_get0_pubkey_bitstr@plt+0x1b219>
  431c59:	lea    0x33fd7(%rip),%rsi        # 465c37 <_fini+0x8733>
  431c60:	mov    %r15,%rdi
  431c63:	xor    %eax,%eax
  431c65:	callq  413c40 <BIO_printf@plt>
  431c6a:	movl   $0x0,0xe8(%rsp)
  431c75:	callq  413700 <X509_PURPOSE_get_count@plt>
  431c7a:	cmp    %eax,0xe8(%rsp)
  431c81:	jge    4313f8 <X509_get0_pubkey_bitstr@plt+0x1aa28>
  431c87:	mov    0xe8(%rsp),%edi
  431c8e:	callq  413ce0 <X509_PURPOSE_get0@plt>
  431c93:	mov    %rax,%rbx
  431c96:	mov    %rax,%rdi
  431c99:	callq  413620 <X509_PURPOSE_get_id@plt>
  431c9e:	mov    %rbx,%rdi
  431ca1:	mov    %eax,%r14d
  431ca4:	callq  413d20 <X509_PURPOSE_get0_name@plt>
  431ca9:	xor    %edx,%edx
  431cab:	mov    %r14d,%esi
  431cae:	mov    %rbp,%rdi
  431cb1:	mov    %rax,%rbx
  431cb4:	callq  4128d0 <X509_check_purpose@plt>
  431cb9:	lea    0x2e102(%rip),%rcx        # 45fdc2 <_fini+0x28be>
  431cc0:	lea    0x33f87(%rip),%rsi        # 465c4e <_fini+0x874a>
  431cc7:	mov    %eax,0x15c(%rsp)
  431cce:	mov    %rbx,%rdx
  431cd1:	xor    %eax,%eax
  431cd3:	mov    %r15,%rdi
  431cd6:	callq  413c40 <BIO_printf@plt>
  431cdb:	mov    0x15c(%rsp),%r8d
  431ce3:	cmp    $0x1,%r8d
  431ce7:	je     431dc1 <X509_get0_pubkey_bitstr@plt+0x1b3f1>
  431ced:	test   %r8d,%r8d
  431cf0:	je     431dab <X509_get0_pubkey_bitstr@plt+0x1b3db>
  431cf6:	lea    0x33f59(%rip),%rsi        # 465c56 <_fini+0x8752>
  431cfd:	mov    %r8d,%edx
  431d00:	mov    %r15,%rdi
  431d03:	xor    %eax,%eax
  431d05:	callq  413c40 <BIO_printf@plt>
  431d0a:	mov    %r14d,%esi
  431d0d:	mov    $0x1,%edx
  431d12:	mov    %rbp,%rdi
  431d15:	callq  4128d0 <X509_check_purpose@plt>
  431d1a:	lea    0x33f55(%rip),%rcx        # 465c76 <_fini+0x8772>
  431d21:	lea    0x33f26(%rip),%rsi        # 465c4e <_fini+0x874a>
  431d28:	mov    %eax,%r14d
  431d2b:	mov    %rbx,%rdx
  431d2e:	xor    %eax,%eax
  431d30:	mov    %r15,%rdi
  431d33:	callq  413c40 <BIO_printf@plt>
  431d38:	cmp    $0x1,%r14d
  431d3c:	je     431d98 <X509_get0_pubkey_bitstr@plt+0x1b3c8>
  431d3e:	test   %r14d,%r14d
  431d41:	jne    431d82 <X509_get0_pubkey_bitstr@plt+0x1b3b2>
  431d43:	lea    0x33f23(%rip),%rsi        # 465c6d <_fini+0x8769>
  431d4a:	mov    %r15,%rdi
  431d4d:	xor    %eax,%eax
  431d4f:	callq  413c40 <BIO_printf@plt>
  431d54:	addl   $0x1,0xe8(%rsp)
  431d5c:	jmpq   431c75 <X509_get0_pubkey_bitstr@plt+0x1b2a5>
  431d61:	mov    %rbp,%rdi
  431d64:	callq  415250 <X509_issuer_name_hash_old@plt>
  431d69:	lea    0x30fe5(%rip),%rsi        # 462d55 <_fini+0x5851>
  431d70:	mov    %rax,%rdx
  431d73:	mov    %r15,%rdi
  431d76:	xor    %eax,%eax
  431d78:	callq  413c40 <BIO_printf@plt>
  431d7d:	jmpq   4313f8 <X509_get0_pubkey_bitstr@plt+0x1aa28>
  431d82:	lea    0x33ecd(%rip),%rsi        # 465c56 <_fini+0x8752>
  431d89:	mov    %r14d,%edx
  431d8c:	mov    %r15,%rdi
  431d8f:	xor    %eax,%eax
  431d91:	callq  413c40 <BIO_printf@plt>
  431d96:	jmp    431d54 <X509_get0_pubkey_bitstr@plt+0x1b384>
  431d98:	lea    0x33ed2(%rip),%rsi        # 465c71 <_fini+0x876d>
  431d9f:	mov    %r15,%rdi
  431da2:	xor    %eax,%eax
  431da4:	callq  413c40 <BIO_printf@plt>
  431da9:	jmp    431d54 <X509_get0_pubkey_bitstr@plt+0x1b384>
  431dab:	lea    0x33ebb(%rip),%rsi        # 465c6d <_fini+0x8769>
  431db2:	mov    %r15,%rdi
  431db5:	xor    %eax,%eax
  431db7:	callq  413c40 <BIO_printf@plt>
  431dbc:	jmpq   431d0a <X509_get0_pubkey_bitstr@plt+0x1b33a>
  431dc1:	lea    0x33ea9(%rip),%rsi        # 465c71 <_fini+0x876d>
  431dc8:	mov    %r15,%rdi
  431dcb:	xor    %eax,%eax
  431dcd:	callq  413c40 <BIO_printf@plt>
  431dd2:	jmpq   431d0a <X509_get0_pubkey_bitstr@plt+0x1b33a>
  431dd7:	mov    %rbp,%rdi
  431dda:	callq  412e90 <X509_issuer_name_hash@plt>
  431ddf:	nop
  431de0:	jmp    431d69 <X509_get0_pubkey_bitstr@plt+0x1b399>
  431de2:	mov    %rbp,%rdi
  431de5:	callq  416820 <X509_subject_name_hash_old@plt>
  431dea:	jmpq   431d69 <X509_get0_pubkey_bitstr@plt+0x1b399>
  431def:	mov    %rbp,%rdi
  431df2:	callq  4146a0 <X509_subject_name_hash@plt>
  431df7:	jmpq   431d69 <X509_get0_pubkey_bitstr@plt+0x1b399>
  431dfc:	xor    %esi,%esi
  431dfe:	mov    %rbp,%rdi
  431e01:	callq  415230 <X509_alias_get0@plt>
  431e06:	test   %rax,%rax
  431e09:	je     43232d <X509_get0_pubkey_bitstr@plt+0x1b95d>
  431e0f:	lea    0x2e9a3(%rip),%rsi        # 4607b9 <_fini+0x32b5>
  431e16:	mov    %rax,%rdx
  431e19:	mov    %r15,%rdi
  431e1c:	xor    %eax,%eax
  431e1e:	callq  413c40 <BIO_printf@plt>
  431e23:	jmpq   4313f8 <X509_get0_pubkey_bitstr@plt+0x1aa28>
  431e28:	lea    0x248f11(%rip),%rax        # 67ad40 <_edata+0x38>
  431e2f:	lea    0x33eef(%rip),%rsi        # 465d25 <_fini+0x8821>
  431e36:	mov    (%rax),%rdi
  431e39:	xor    %eax,%eax
  431e3b:	callq  413c40 <BIO_printf@plt>
  431e40:	cmpq   $0x0,0x98(%rsp)
  431e49:	je     432371 <X509_get0_pubkey_bitstr@plt+0x1b9a1>
  431e4f:	lea    0x33eec(%rip),%rax        # 465d42 <_fini+0x883e>
  431e56:	mov    0x140(%rsp),%r9
  431e5e:	mov    0x168(%rsp),%r8
  431e66:	mov    0x54(%rsp),%edx
  431e6a:	mov    0x98(%rsp),%rsi
  431e72:	xor    %ecx,%ecx
  431e74:	mov    %rax,(%rsp)
  431e78:	lea    0x248ec1(%rip),%rax        # 67ad40 <_edata+0x38>
  431e7f:	mov    (%rax),%rdi
  431e82:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  431e87:	test   %rax,%rax
  431e8a:	mov    %rax,%rbx
  431e8d:	je     431738 <X509_get0_pubkey_bitstr@plt+0x1ad68>
  431e93:	lea    0x248ea6(%rip),%rax        # 67ad40 <_edata+0x38>
  431e9a:	lea    0x3308f(%rip),%rsi        # 464f30 <_fini+0x7a2c>
  431ea1:	mov    (%rax),%rdi
  431ea4:	xor    %eax,%eax
  431ea6:	callq  413c40 <BIO_printf@plt>
  431eab:	mov    0x88(%rsp),%rdx
  431eb3:	mov    %rbx,%rsi
  431eb6:	mov    %rbp,%rdi
  431eb9:	callq  412d00 <X509_to_X509_REQ@plt>
  431ebe:	mov    %rbx,%rdi
  431ec1:	mov    %rax,%r14
  431ec4:	mov    %rax,0x18(%rsp)
  431ec9:	callq  412b00 <EVP_PKEY_free@plt>
  431ece:	test   %r14,%r14
  431ed1:	je     431688 <X509_get0_pubkey_bitstr@plt+0x1acb8>
  431ed7:	cmpl   $0x0,0x80(%rsp)
  431edf:	je     432341 <X509_get0_pubkey_bitstr@plt+0x1b971>
  431ee5:	movl   $0x1,0x80(%rsp)
  431ef0:	jmpq   4313f8 <X509_get0_pubkey_bitstr@plt+0x1aa28>
  431ef5:	lea    0x248e44(%rip),%rax        # 67ad40 <_edata+0x38>
  431efc:	lea    0x33dd8(%rip),%rsi        # 465cdb <_fini+0x87d7>
  431f03:	mov    (%rax),%rdi
  431f06:	xor    %eax,%eax
  431f08:	callq  413c40 <BIO_printf@plt>
  431f0d:	mov    0xa0(%rsp),%rsi
  431f15:	test   %rsi,%rsi
  431f18:	je     431f58 <X509_get0_pubkey_bitstr@plt+0x1b588>
  431f1a:	lea    0x33dd2(%rip),%rax        # 465cf3 <_fini+0x87ef>
  431f21:	mov    0x140(%rsp),%r9
  431f29:	mov    0x168(%rsp),%r8
  431f31:	mov    0x64(%rsp),%edx
  431f35:	xor    %ecx,%ecx
  431f37:	mov    %rax,(%rsp)
  431f3b:	lea    0x248dfe(%rip),%rax        # 67ad40 <_edata+0x38>
  431f42:	mov    (%rax),%rdi
  431f45:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  431f4a:	test   %rax,%rax
  431f4d:	mov    %rax,0x10(%rsp)
  431f52:	je     431738 <X509_get0_pubkey_bitstr@plt+0x1ad68>
  431f58:	cmpl   $0x0,0x50(%rsp)
  431f5d:	je     43230e <X509_get0_pubkey_bitstr@plt+0x1b93e>
  431f63:	mov    0x20(%rsp),%rdi
  431f68:	callq  4161b0 <X509_get_pubkey@plt>
  431f6d:	mov    0x10(%rsp),%rsi
  431f72:	mov    %rax,%rbx
  431f75:	mov    %rax,%rdi
  431f78:	callq  416330 <EVP_PKEY_copy_parameters@plt>
  431f7d:	mov    %rbx,%rdi
  431f80:	callq  412b00 <EVP_PKEY_free@plt>
  431f85:	mov    0xb8(%rsp),%rsi
  431f8d:	xor    %ecx,%ecx
  431f8f:	mov    %rbp,%rdx
  431f92:	mov    %r12,%rdi
  431f95:	callq  413380 <X509_STORE_CTX_init@plt>
  431f9a:	test   %eax,%eax
  431f9c:	je     4322bb <X509_get0_pubkey_bitstr@plt+0x1b8eb>
  431fa2:	mov    0x38(%rsp),%rax
  431fa7:	test   %rax,%rax
  431faa:	mov    %rax,%rbx
  431fad:	je     43217f <X509_get0_pubkey_bitstr@plt+0x1b7af>
  431fb3:	mov    %rbp,%rsi
  431fb6:	mov    %r12,%rdi
  431fb9:	callq  414210 <X509_STORE_CTX_set_cert@plt>
  431fbe:	mov    $0x4000,%esi
  431fc3:	mov    %r12,%rdi
  431fc6:	callq  414360 <X509_STORE_CTX_set_flags@plt>
  431fcb:	cmpl   $0x0,0x249376(%rip)        # 67b348 <_edata+0x640>
  431fd2:	je     43216a <X509_get0_pubkey_bitstr@plt+0x1b79a>
  431fd8:	mov    0x10(%rsp),%rsi
  431fdd:	mov    0x20(%rsp),%rdi
  431fe2:	callq  416430 <X509_check_private_key@plt>
  431fe7:	test   %eax,%eax
  431fe9:	jne    43203b <X509_get0_pubkey_bitstr@plt+0x1b66b>
  431feb:	lea    0x248d4e(%rip),%rax        # 67ad40 <_edata+0x38>
  431ff2:	lea    0x2fb57(%rip),%rsi        # 461b50 <_fini+0x464c>
  431ff9:	mov    (%rax),%rdi
  431ffc:	xor    %eax,%eax
  431ffe:	callq  413c40 <BIO_printf@plt>
  432003:	mov    %r12,%rdi
  432006:	xor    %r14d,%r14d
  432009:	callq  413780 <X509_STORE_CTX_cleanup@plt>
  43200e:	lea    0x248d2b(%rip),%rax        # 67ad40 <_edata+0x38>
  432015:	mov    (%rax),%rdi
  432018:	callq  413f40 <ERR_print_errors@plt>
  43201d:	cmpq   $0x0,0x38(%rsp)
  432023:	jne    43202d <X509_get0_pubkey_bitstr@plt+0x1b65d>
  432025:	mov    %rbx,%rdi
  432028:	callq  412a90 <ASN1_INTEGER_free@plt>
  43202d:	test   %r14d,%r14d
  432030:	jne    4313f8 <X509_get0_pubkey_bitstr@plt+0x1aa28>
  432036:	jmpq   431738 <X509_get0_pubkey_bitstr@plt+0x1ad68>
  43203b:	mov    0x20(%rsp),%rdi
  432040:	callq  414400 <X509_get_subject_name@plt>
  432045:	mov    %rbp,%rdi
  432048:	mov    %rax,%rsi
  43204b:	callq  4159c0 <X509_set_issuer_name@plt>
  432050:	test   %eax,%eax
  432052:	je     432003 <X509_get0_pubkey_bitstr@plt+0x1b633>
  432054:	mov    %rbx,%rsi
  432057:	mov    %rbp,%rdi
  43205a:	callq  412e40 <X509_set_serialNumber@plt>
  43205f:	test   %eax,%eax
  432061:	je     432003 <X509_get0_pubkey_bitstr@plt+0x1b633>
  432063:	mov    0x0(%rbp),%rax
  432067:	xor    %esi,%esi
  432069:	mov    0x20(%rax),%rax
  43206d:	mov    (%rax),%rdi
  432070:	callq  4164f0 <X509_gmtime_adj@plt>
  432075:	test   %rax,%rax
  432078:	je     432003 <X509_get0_pubkey_bitstr@plt+0x1b633>
  43207a:	mov    0x0(%rbp),%rax
  43207e:	mov    0x84(%rsp),%esi
  432085:	xor    %ecx,%ecx
  432087:	xor    %edx,%edx
  432089:	mov    0x20(%rax),%rax
  43208d:	mov    0x8(%rax),%rdi
  432091:	callq  413f50 <X509_time_adj_ex@plt>
  432096:	test   %rax,%rax
  432099:	je     432003 <X509_get0_pubkey_bitstr@plt+0x1b633>
  43209f:	cmpl   $0x0,0xc0(%rsp)
  4320a7:	jne    43214e <X509_get0_pubkey_bitstr@plt+0x1b77e>
  4320ad:	cmpq   $0x0,0x30(%rsp)
  4320b3:	je     43210c <X509_get0_pubkey_bitstr@plt+0x1b73c>
  4320b5:	mov    $0x2,%esi
  4320ba:	mov    %rbp,%rdi
  4320bd:	callq  416170 <X509_set_version@plt>
  4320c2:	mov    0x108(%rsp),%r14
  4320ca:	mov    0x20(%rsp),%rsi
  4320cf:	xor    %r9d,%r9d
  4320d2:	xor    %r8d,%r8d
  4320d5:	xor    %ecx,%ecx
  4320d7:	mov    %rbp,%rdx
  4320da:	mov    %r14,%rdi
  4320dd:	callq  413910 <X509V3_set_ctx@plt>
  4320e2:	mov    0x30(%rsp),%rsi
  4320e7:	mov    %r14,%rdi
  4320ea:	callq  4155a0 <X509V3_set_nconf@plt>
  4320ef:	mov    0x68(%rsp),%rdx
  4320f4:	mov    0x30(%rsp),%rdi
  4320f9:	mov    %rbp,%rcx
  4320fc:	mov    %r14,%rsi
  4320ff:	callq  4168d0 <X509V3_EXT_add_nconf@plt>
  432104:	test   %eax,%eax
  432106:	je     432003 <X509_get0_pubkey_bitstr@plt+0x1b633>
  43210c:	lea    0x248c2d(%rip),%rax        # 67ad40 <_edata+0x38>
  432113:	mov    0x90(%rsp),%r8
  43211b:	mov    %rbp,%rsi
  43211e:	mov    0x88(%rsp),%rcx
  432126:	mov    0x10(%rsp),%rdx
  43212b:	mov    (%rax),%rdi
  43212e:	callq  41abf0 <X509_get0_pubkey_bitstr@plt+0x4220>
  432133:	test   %eax,%eax
  432135:	je     432003 <X509_get0_pubkey_bitstr@plt+0x1b633>
  43213b:	mov    %r12,%rdi
  43213e:	mov    $0x1,%r14d
  432144:	callq  413780 <X509_STORE_CTX_cleanup@plt>
  432149:	jmpq   43201d <X509_get0_pubkey_bitstr@plt+0x1b64d>
  43214e:	mov    %rbp,%rdi
  432151:	callq  412880 <X509_get_ext_count@plt>
  432156:	test   %eax,%eax
  432158:	jle    4320ad <X509_get0_pubkey_bitstr@plt+0x1b6dd>
  43215e:	xor    %esi,%esi
  432160:	mov    %rbp,%rdi
  432163:	callq  413f10 <X509_delete_ext@plt>
  432168:	jmp    43214e <X509_get0_pubkey_bitstr@plt+0x1b77e>
  43216a:	mov    %r12,%rdi
  43216d:	callq  413610 <X509_verify_cert@plt>
  432172:	test   %eax,%eax
  432174:	jg     431fd8 <X509_get0_pubkey_bitstr@plt+0x1b608>
  43217a:	jmpq   432003 <X509_get0_pubkey_bitstr@plt+0x1b633>
  43217f:	cmpq   $0x0,0xa8(%rsp)
  432188:	movq   $0x0,0x180(%rsp)
  432194:	je     432268 <X509_get0_pubkey_bitstr@plt+0x1b898>
  43219a:	mov    0xa8(%rsp),%rdi
  4321a2:	xor    %eax,%eax
  4321a4:	or     $0xffffffffffffffff,%rcx
  4321a8:	lea    0x33aef(%rip),%rsi        # 465c9e <_fini+0x879a>
  4321af:	mov    $0x45d,%edx
  4321b4:	repnz scas %es:(%rdi),%al
  4321b6:	mov    %rcx,%r14
  4321b9:	not    %r14
  4321bc:	mov    %r14d,%edi
  4321bf:	callq  413d50 <CRYPTO_malloc@plt>
  4321c4:	test   %rax,%rax
  4321c7:	mov    %rax,%rbx
  4321ca:	je     43224b <X509_get0_pubkey_bitstr@plt+0x1b87b>
  4321cc:	mov    0xa8(%rsp),%rsi
  4321d4:	mov    %r14,%rdx
  4321d7:	mov    %rax,%rdi
  4321da:	callq  413560 <BUF_strlcpy@plt>
  4321df:	mov    0x118(%rsp),%esi
  4321e6:	xor    %edx,%edx
  4321e8:	mov    %rbx,%rdi
  4321eb:	callq  447090 <X509_get0_pubkey_bitstr@plt+0x306c0>
  4321f0:	test   %rax,%rax
  4321f3:	mov    %rax,%r14
  4321f6:	je     432225 <X509_get0_pubkey_bitstr@plt+0x1b855>
  4321f8:	mov    $0x1,%esi
  4321fd:	mov    %rax,%rdi
  432200:	callq  414220 <BN_add_word@plt>
  432205:	test   %eax,%eax
  432207:	jne    4322da <X509_get0_pubkey_bitstr@plt+0x1b90a>
  43220d:	lea    0x248b2c(%rip),%rax        # 67ad40 <_edata+0x38>
  432214:	lea    0x33af8(%rip),%rsi        # 465d13 <_fini+0x880f>
  43221b:	mov    (%rax),%rdi
  43221e:	xor    %eax,%eax
  432220:	callq  413c40 <BIO_printf@plt>
  432225:	mov    %rbx,%rdi
  432228:	callq  415020 <CRYPTO_free@plt>
  43222d:	mov    %r14,%rdi
  432230:	callq  4138e0 <BN_free@plt>
  432235:	mov    0x180(%rsp),%rbx
  43223d:	test   %rbx,%rbx
  432240:	jne    431fb3 <X509_get0_pubkey_bitstr@plt+0x1b5e3>
  432246:	jmpq   432003 <X509_get0_pubkey_bitstr@plt+0x1b633>
  43224b:	lea    0x248aee(%rip),%rax        # 67ad40 <_edata+0x38>
  432252:	lea    0x33aa9(%rip),%rsi        # 465d02 <_fini+0x87fe>
  432259:	xor    %r14d,%r14d
  43225c:	mov    (%rax),%rdi
  43225f:	xor    %eax,%eax
  432261:	callq  413c40 <BIO_printf@plt>
  432266:	jmp    43222d <X509_get0_pubkey_bitstr@plt+0x1b85d>
  432268:	mov    0x70(%rsp),%rdi
  43226d:	or     $0xffffffffffffffff,%rcx
  432271:	lea    0x33a26(%rip),%rsi        # 465c9e <_fini+0x879a>
  432278:	mov    $0x45d,%edx
  43227d:	repnz scas %es:(%rdi),%al
  43227f:	not    %rcx
  432282:	lea    0x5(%rcx),%r14
  432286:	mov    %r14d,%edi
  432289:	callq  413d50 <CRYPTO_malloc@plt>
  43228e:	test   %rax,%rax
  432291:	mov    %rax,%rbx
  432294:	je     43224b <X509_get0_pubkey_bitstr@plt+0x1b87b>
  432296:	mov    0x70(%rsp),%rsi
  43229b:	mov    %r14,%rdx
  43229e:	mov    %rax,%rdi
  4322a1:	callq  413560 <BUF_strlcpy@plt>
  4322a6:	mov    %rbx,%rax
  4322a9:	movzbl (%rax),%edx
  4322ac:	test   %dl,%dl
  4322ae:	je     4322f7 <X509_get0_pubkey_bitstr@plt+0x1b927>
  4322b0:	cmp    $0x2e,%dl
  4322b3:	je     4322f4 <X509_get0_pubkey_bitstr@plt+0x1b924>
  4322b5:	add    $0x1,%rax
  4322b9:	jmp    4322a9 <X509_get0_pubkey_bitstr@plt+0x1b8d9>
  4322bb:	lea    0x248a7e(%rip),%rax        # 67ad40 <_edata+0x38>
  4322c2:	lea    0x30aef(%rip),%rsi        # 462db8 <_fini+0x58b4>
  4322c9:	xor    %ebx,%ebx
  4322cb:	mov    (%rax),%rdi
  4322ce:	xor    %eax,%eax
  4322d0:	callq  413c40 <BIO_printf@plt>
  4322d5:	jmpq   432003 <X509_get0_pubkey_bitstr@plt+0x1b633>
  4322da:	mov    0x108(%rsp),%rcx
  4322e2:	mov    %r14,%rdx
  4322e5:	xor    %esi,%esi
  4322e7:	mov    %rbx,%rdi
  4322ea:	callq  446c90 <X509_get0_pubkey_bitstr@plt+0x302c0>
  4322ef:	jmpq   432225 <X509_get0_pubkey_bitstr@plt+0x1b855>
  4322f4:	movb   $0x0,(%rax)
  4322f7:	lea    0x33a10(%rip),%rsi        # 465d0e <_fini+0x880a>
  4322fe:	mov    %r14,%rdx
  432301:	mov    %rbx,%rdi
  432304:	callq  414b30 <BUF_strlcat@plt>
  432309:	jmpq   4321df <X509_get0_pubkey_bitstr@plt+0x1b80f>
  43230e:	lea    0x33a9e(%rip),%rcx        # 465db3 <_fini+0x88af>
  432315:	lea    0x33982(%rip),%rsi        # 465c9e <_fini+0x879a>
  43231c:	lea    0x317b3(%rip),%rdi        # 463ad6 <_fini+0x65d2>
  432323:	mov    $0x3d6,%edx
  432328:	callq  413d40 <__assert_fail@plt>
  43232d:	lea    0x338f7(%rip),%rsi        # 465c2b <_fini+0x8727>
  432334:	mov    %r15,%rdi
  432337:	callq  413b70 <BIO_puts@plt>
  43233c:	jmpq   4313f8 <X509_get0_pubkey_bitstr@plt+0x1aa28>
  432341:	mov    0x18(%rsp),%r14
  432346:	mov    0x58(%rsp),%rbx
  43234b:	mov    %r14,%rsi
  43234e:	mov    %rbx,%rdi
  432351:	callq  414810 <X509_REQ_print@plt>
  432356:	mov    %r14,%rsi
  432359:	mov    %rbx,%rdi
  43235c:	callq  412ca0 <PEM_write_bio_X509_REQ@plt>
  432361:	movl   $0x1,0x80(%rsp)
  43236c:	jmpq   4313f8 <X509_get0_pubkey_bitstr@plt+0x1aa28>
  432371:	mov    0x90(%rsp),%rbx
  432379:	mov    0x58(%rsp),%r12
  43237e:	lea    0x32b8b(%rip),%rsi        # 464f10 <_fini+0x7a0c>
  432385:	mov    0xb8(%rsp),%r14
  43238d:	jmpq   4311e1 <X509_get0_pubkey_bitstr@plt+0x1a811>
  432392:	mov    %rbp,%rdi
  432395:	callq  4128c0 <X509_get_serialNumber@plt>
  43239a:	xor    %esi,%esi
  43239c:	mov    %rax,%rdi
  43239f:	callq  412f90 <ASN1_INTEGER_to_BN@plt>
  4323a4:	test   %rax,%rax
  4323a7:	mov    %rax,%r14
  4323aa:	je     431738 <X509_get0_pubkey_bitstr@plt+0x1ad68>
  4323b0:	mov    $0x1,%esi
  4323b5:	mov    %rax,%rdi
  4323b8:	callq  414220 <BN_add_word@plt>
  4323bd:	test   %eax,%eax
  4323bf:	je     431738 <X509_get0_pubkey_bitstr@plt+0x1ad68>
  4323c5:	xor    %esi,%esi
  4323c7:	mov    %r14,%rdi
  4323ca:	callq  412da0 <BN_to_ASN1_INTEGER@plt>
  4323cf:	test   %rax,%rax
  4323d2:	mov    %rax,%rbx
  4323d5:	je     431738 <X509_get0_pubkey_bitstr@plt+0x1ad68>
  4323db:	mov    %r14,%rdi
  4323de:	callq  4138e0 <BN_free@plt>
  4323e3:	mov    0x58(%rsp),%r14
  4323e8:	mov    %rbx,%rsi
  4323eb:	mov    %r14,%rdi
  4323ee:	callq  414ea0 <i2a_ASN1_INTEGER@plt>
  4323f3:	mov    %rbx,%rdi
  4323f6:	callq  412a90 <ASN1_INTEGER_free@plt>
  4323fb:	lea    0x3279d(%rip),%rsi        # 464b9f <_fini+0x769b>
  432402:	mov    %r14,%rdi
  432405:	callq  413b70 <BIO_puts@plt>
  43240a:	jmpq   4313f8 <X509_get0_pubkey_bitstr@plt+0x1aa28>
  43240f:	lea    0x3380d(%rip),%rsi        # 465c23 <_fini+0x871f>
  432416:	mov    %r15,%rdi
  432419:	xor    %eax,%eax
  43241b:	callq  413c40 <BIO_printf@plt>
  432420:	mov    %rbp,%rdi
  432423:	callq  4128c0 <X509_get_serialNumber@plt>
  432428:	mov    %r15,%rdi
  43242b:	mov    %rax,%rsi
  43242e:	callq  414ea0 <i2a_ASN1_INTEGER@plt>
  432433:	lea    0x32765(%rip),%rsi        # 464b9f <_fini+0x769b>
  43243a:	mov    %r15,%rdi
  43243d:	xor    %eax,%eax
  43243f:	callq  413c40 <BIO_printf@plt>
  432444:	jmpq   4313f8 <X509_get0_pubkey_bitstr@plt+0x1aa28>
  432449:	mov    0x170(%rsp),%rbx
  432451:	mov    %rbp,%rdi
  432454:	callq  414400 <X509_get_subject_name@plt>
  432459:	lea    0x337b9(%rip),%rsi        # 465c19 <_fini+0x8715>
  432460:	mov    %rax,%rdx
  432463:	mov    %r15,%rdi
  432466:	mov    %rbx,%rcx
  432469:	callq  4467d0 <X509_get0_pubkey_bitstr@plt+0x2fe00>
  43246e:	jmpq   4313f8 <X509_get0_pubkey_bitstr@plt+0x1aa28>
  432473:	mov    0x170(%rsp),%rbx
  43247b:	mov    %rbp,%rdi
  43247e:	callq  412940 <X509_get_issuer_name@plt>
  432483:	lea    0x33786(%rip),%rsi        # 465c10 <_fini+0x870c>
  43248a:	mov    %rax,%rdx
  43248d:	mov    %r15,%rdi
  432490:	mov    %rbx,%rcx
  432493:	callq  4467d0 <X509_get0_pubkey_bitstr@plt+0x2fe00>
  432498:	jmpq   4313f8 <X509_get0_pubkey_bitstr@plt+0x1aa28>
  43249d:	mov    %rbp,%rdi
  4324a0:	callq  414ac0 <X509_reject_clear@plt>
  4324a5:	jmpq   4310ec <X509_get0_pubkey_bitstr@plt+0x1a71c>
  4324aa:	mov    %rbp,%rdi
  4324ad:	callq  413270 <X509_trust_clear@plt>
  4324b2:	jmpq   4310de <X509_get0_pubkey_bitstr@plt+0x1a70e>
  4324b7:	mov    0x90(%rsp),%rdi
  4324bf:	mov    $0x1,%r13d
  4324c5:	callq  4142c0 <perror@plt>
  4324ca:	movq   $0x0,0x18(%rsp)
  4324d3:	movq   $0x0,0x10(%rsp)
  4324dc:	movq   $0x0,0x8(%rsp)
  4324e5:	jmpq   430a91 <X509_get0_pubkey_bitstr@plt+0x1a0c1>
  4324ea:	mov    0x2439c7(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  4324f1:	xor    %edx,%edx
  4324f3:	mov    $0x6a,%esi
  4324f8:	mov    %r12,%rdi
  4324fb:	mov    (%rax),%rcx
  4324fe:	callq  412af0 <BIO_ctrl@plt>
  432503:	jmpq   4310b8 <X509_get0_pubkey_bitstr@plt+0x1a6e8>
  432508:	lea    0x248831(%rip),%rax        # 67ad40 <_edata+0x38>
  43250f:	lea    0x2e985(%rip),%rsi        # 460e9b <_fini+0x3997>
  432516:	mov    (%rax),%rdi
  432519:	xor    %eax,%eax
  43251b:	callq  413c40 <BIO_printf@plt>
  432520:	movq   $0x0,0x18(%rsp)
  432529:	xor    %r12d,%r12d
  43252c:	movq   $0x0,0x10(%rsp)
  432535:	movq   $0x0,0x8(%rsp)
  43253e:	movq   $0x0,0x20(%rsp)
  432547:	mov    $0x1,%r13d
  43254d:	jmpq   430a91 <X509_get0_pubkey_bitstr@plt+0x1a0c1>
  432552:	xor    %edi,%edi
  432554:	callq  414560 <time@plt>
  432559:	movslq 0x158(%rsp),%rdx
  432561:	lea    0x1c0(%rsp),%rsi
  432569:	add    %rdx,%rax
  43256c:	mov    %rax,0x1c0(%rsp)
  432574:	mov    0x0(%rbp),%rax
  432578:	mov    0x20(%rax),%rax
  43257c:	mov    0x8(%rax),%rdi
  432580:	callq  412f70 <X509_cmp_time@plt>
  432585:	test   %eax,%eax
  432587:	js     4325fb <X509_get0_pubkey_bitstr@plt+0x1bc2b>
  432589:	lea    0x337d7(%rip),%rsi        # 465d67 <_fini+0x8863>
  432590:	mov    %r12,%rdi
  432593:	xor    %eax,%eax
  432595:	xor    %r13d,%r13d
  432598:	callq  413c40 <BIO_printf@plt>
  43259d:	jmpq   430a91 <X509_get0_pubkey_bitstr@plt+0x1a0c1>
  4325a2:	cmpl   $0x0,0x78(%rsp)
  4325a7:	mov    %rbp,%rsi
  4325aa:	mov    %r12,%rdi
  4325ad:	je     432617 <X509_get0_pubkey_bitstr@plt+0x1bc47>
  4325af:	callq  416630 <PEM_write_bio_X509_AUX@plt>
  4325b4:	xor    %r13d,%r13d
  4325b7:	test   %eax,%eax
  4325b9:	jne    430a91 <X509_get0_pubkey_bitstr@plt+0x1a0c1>
  4325bf:	lea    0x24877a(%rip),%rax        # 67ad40 <_edata+0x38>
  4325c6:	lea    0x337b7(%rip),%rsi        # 465d84 <_fini+0x8880>
  4325cd:	mov    $0x1,%r13b
  4325d0:	mov    (%rax),%rdi
  4325d3:	xor    %eax,%eax
  4325d5:	callq  413c40 <BIO_printf@plt>
  4325da:	lea    0x24875f(%rip),%rax        # 67ad40 <_edata+0x38>
  4325e1:	mov    (%rax),%rdi
  4325e4:	callq  413f40 <ERR_print_errors@plt>
  4325e9:	jmpq   430a91 <X509_get0_pubkey_bitstr@plt+0x1a0c1>
  4325ee:	mov    %rbp,%rsi
  4325f1:	mov    %r12,%rdi
  4325f4:	callq  412850 <i2d_X509_bio@plt>
  4325f9:	jmp    4325b4 <X509_get0_pubkey_bitstr@plt+0x1bbe4>
  4325fb:	lea    0x3374c(%rip),%rsi        # 465d4e <_fini+0x884a>
  432602:	mov    %r12,%rdi
  432605:	xor    %eax,%eax
  432607:	mov    $0x1,%r13d
  43260d:	callq  413c40 <BIO_printf@plt>
  432612:	jmpq   430a91 <X509_get0_pubkey_bitstr@plt+0x1a0c1>
  432617:	callq  413490 <PEM_write_bio_X509@plt>
  43261c:	nopl   0x0(%rax)
  432620:	jmp    4325b4 <X509_get0_pubkey_bitstr@plt+0x1bbe4>
  432622:	lea    0x248717(%rip),%rax        # 67ad40 <_edata+0x38>
  432629:	mov    $0x1,%r13d
  43262f:	mov    (%rax),%rdi
  432632:	callq  413f40 <ERR_print_errors@plt>
  432637:	movq   $0x0,0x18(%rsp)
  432640:	movq   $0x0,0x10(%rsp)
  432649:	movq   $0x0,0x8(%rsp)
  432652:	jmpq   430a91 <X509_get0_pubkey_bitstr@plt+0x1a0c1>
  432657:	lea    0x2486e2(%rip),%rax        # 67ad40 <_edata+0x38>
  43265e:	mov    0x140(%rsp),%r8
  432666:	lea    0x3356b(%rip),%r9        # 465bd8 <_fini+0x86d4>
  43266d:	mov    0x58(%rsp),%edx
  432671:	mov    0x70(%rsp),%rsi
  432676:	xor    %ecx,%ecx
  432678:	mov    (%rax),%rdi
  43267b:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  432680:	test   %rax,%rax
  432683:	mov    %rax,0x20(%rsp)
  432688:	jne    431031 <X509_get0_pubkey_bitstr@plt+0x1a661>
  43268e:	movq   $0x0,0x18(%rsp)
  432697:	xor    %r12d,%r12d
  43269a:	movq   $0x0,0x10(%rsp)
  4326a3:	movq   $0x0,0x8(%rsp)
  4326ac:	mov    $0x1,%r13d
  4326b2:	jmpq   430a91 <X509_get0_pubkey_bitstr@plt+0x1a0c1>
  4326b7:	lea    0x248682(%rip),%rax        # 67ad40 <_edata+0x38>
  4326be:	mov    (%rax),%rdi
  4326c1:	callq  413f40 <ERR_print_errors@plt>
  4326c6:	movq   $0x0,0x18(%rsp)
  4326cf:	xor    %r12d,%r12d
  4326d2:	movq   $0x0,0x10(%rsp)
  4326db:	movq   $0x0,0x8(%rsp)
  4326e4:	movq   $0x0,0x20(%rsp)
  4326ed:	mov    $0x1,%r13d
  4326f3:	movq   $0x0,0x28(%rsp)
  4326fc:	jmpq   430a91 <X509_get0_pubkey_bitstr@plt+0x1a0c1>
  432701:	lea    0x2ea6a(%rip),%rax        # 461172 <_fini+0x3c6e>
  432708:	mov    0x243851(%rip),%rdi        # 675f60 <_fini+0x218a5c>
  43270f:	lea    0x180(%rsp),%rdx
  432717:	mov    %r12,%rsi
  43271a:	movl   $0xb,0x1c0(%rsp)
  432725:	mov    %rbp,0x188(%rsp)
  43272d:	mov    %rax,0x1c8(%rsp)
  432735:	lea    0x1c0(%rsp),%rax
  43273d:	mov    %rax,0x180(%rsp)
  432745:	callq  412bd0 <ASN1_item_i2d_bio@plt>
  43274a:	jmpq   4325b4 <X509_get0_pubkey_bitstr@plt+0x1bbe4>
  43274f:	mov    0x30(%rsp),%rdi
  432754:	lea    0x2bb51(%rip),%rdx        # 45e2ac <_fini+0xda8>
  43275b:	lea    0x38894(%rip),%rsi        # 46aff6 <_fini+0xdaf2>
  432762:	callq  413fd0 <NCONF_get_string@plt>
  432767:	test   %rax,%rax
  43276a:	mov    %rax,0x68(%rsp)
  43276f:	jne    430db0 <X509_get0_pubkey_bitstr@plt+0x1a3e0>
  432775:	callq  412890 <ERR_clear_error@plt>
  43277a:	lea    0x38875(%rip),%rax        # 46aff6 <_fini+0xdaf2>
  432781:	mov    %rax,0x68(%rsp)
  432786:	jmpq   430db0 <X509_get0_pubkey_bitstr@plt+0x1a3e0>
  43278b:	cmpl   $0x0,0x148(%rsp)
  432793:	jne    432916 <X509_get0_pubkey_bitstr@plt+0x1bf46>
  432799:	cmpb   $0x43,0x1(%rbp)
  43279d:	jne    432916 <X509_get0_pubkey_bitstr@plt+0x1bf46>
  4327a3:	cmpb   $0x41,0x2(%rbp)
  4327a7:	jne    432916 <X509_get0_pubkey_bitstr@plt+0x1bf46>
  4327ad:	cmpb   $0x0,0x3(%rbp)
  4327b1:	jne    432916 <X509_get0_pubkey_bitstr@plt+0x1bf46>
  4327b7:	sub    $0x1,%r14d
  4327bb:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  4327c1:	mov    0x8(%rbx),%rax
  4327c5:	addl   $0x1,0x60(%rsp)
  4327ca:	lea    0x8(%rbx),%rbp
  4327ce:	movl   $0x1,0x50(%rsp)
  4327d6:	mov    %rax,0x70(%rsp)
  4327db:	mov    0x60(%rsp),%eax
  4327df:	mov    %eax,0xb4(%rsp)
  4327e6:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  4327eb:	lea    0x24854e(%rip),%rax        # 67ad40 <_edata+0x38>
  4327f2:	lea    0x2e6be(%rip),%rsi        # 460eb7 <_fini+0x39b3>
  4327f9:	mov    (%rax),%rdi
  4327fc:	xor    %eax,%eax
  4327fe:	callq  413c40 <BIO_printf@plt>
  432803:	mov    0x28(%rsp),%rax
  432808:	mov    0x170(%rsp),%rcx
  432810:	lea    0x2bd31(%rip),%rsi        # 45e548 <_fini+0x1044>
  432817:	mov    (%rax),%rax
  43281a:	mov    0x20(%rax),%rdx
  43281e:	lea    0x24851b(%rip),%rax        # 67ad40 <_edata+0x38>
  432825:	mov    (%rax),%rdi
  432828:	callq  4467d0 <X509_get0_pubkey_bitstr@plt+0x2fe00>
  43282d:	callq  413ec0 <X509_new@plt>
  432832:	test   %rax,%rax
  432835:	mov    %rax,%rbp
  432838:	je     432520 <X509_get0_pubkey_bitstr@plt+0x1bb50>
  43283e:	cmpq   $0x0,0x38(%rsp)
  432844:	je     432948 <X509_get0_pubkey_bitstr@plt+0x1bf78>
  43284a:	mov    0x38(%rsp),%rsi
  43284f:	mov    %rax,%rdi
  432852:	callq  412e40 <X509_set_serialNumber@plt>
  432857:	test   %eax,%eax
  432859:	je     432520 <X509_get0_pubkey_bitstr@plt+0x1bb50>
  43285f:	mov    0x28(%rsp),%rax
  432864:	mov    %rbp,%rdi
  432867:	mov    (%rax),%rax
  43286a:	mov    0x20(%rax),%rsi
  43286e:	callq  4159c0 <X509_set_issuer_name@plt>
  432873:	test   %eax,%eax
  432875:	je     432520 <X509_get0_pubkey_bitstr@plt+0x1bb50>
  43287b:	mov    0x28(%rsp),%rax
  432880:	mov    %rbp,%rdi
  432883:	mov    (%rax),%rax
  432886:	mov    0x20(%rax),%rsi
  43288a:	callq  413ea0 <X509_set_subject_name@plt>
  43288f:	test   %eax,%eax
  432891:	je     432520 <X509_get0_pubkey_bitstr@plt+0x1bb50>
  432897:	mov    0x0(%rbp),%rax
  43289b:	xor    %esi,%esi
  43289d:	mov    0x20(%rax),%rax
  4328a1:	mov    (%rax),%rdi
  4328a4:	callq  4164f0 <X509_gmtime_adj@plt>
  4328a9:	mov    0x0(%rbp),%rax
  4328ad:	mov    0x84(%rsp),%esi
  4328b4:	xor    %ecx,%ecx
  4328b6:	xor    %edx,%edx
  4328b8:	mov    0x20(%rax),%rax
  4328bc:	mov    0x8(%rax),%rdi
  4328c0:	callq  413f50 <X509_time_adj_ex@plt>
  4328c5:	mov    0x28(%rsp),%rdi
  4328ca:	callq  413b00 <X509_REQ_get_pubkey@plt>
  4328cf:	mov    %rbp,%rdi
  4328d2:	mov    %rax,%r13
  4328d5:	mov    %rax,%rsi
  4328d8:	callq  416930 <X509_set_pubkey@plt>
  4328dd:	mov    %r13,%rdi
  4328e0:	callq  412b00 <EVP_PKEY_free@plt>
  4328e5:	jmpq   43101f <X509_get0_pubkey_bitstr@plt+0x1a64f>
  4328ea:	lea    0x24844f(%rip),%rax        # 67ad40 <_edata+0x38>
  4328f1:	lea    0x332c2(%rip),%rsi        # 465bba <_fini+0x86b6>
  4328f8:	mov    (%rax),%rdi
  4328fb:	xor    %eax,%eax
  4328fd:	callq  413c40 <BIO_printf@plt>
  432902:	lea    0x248437(%rip),%rax        # 67ad40 <_edata+0x38>
  432909:	mov    (%rax),%rdi
  43290c:	callq  413f40 <ERR_print_errors@plt>
  432911:	jmpq   430fad <X509_get0_pubkey_bitstr@plt+0x1a5dd>
  432916:	lea    0x3318d(%rip),%rsi        # 465aaa <_fini+0x85a6>
  43291d:	mov    %rbp,%rdi
  432920:	callq  4155c0 <strcmp@plt>
  432925:	test   %eax,%eax
  432927:	jne    43296d <X509_get0_pubkey_bitstr@plt+0x1bf9d>
  432929:	sub    $0x1,%r14d
  43292d:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  432933:	mov    0x8(%rbx),%rax
  432937:	lea    0x8(%rbx),%rbp
  43293b:	mov    %rax,0xa0(%rsp)
  432943:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432948:	callq  4162e0 <ASN1_INTEGER_new@plt>
  43294d:	test   %rax,%rax
  432950:	mov    %rax,%r13
  432953:	je     4329bb <X509_get0_pubkey_bitstr@plt+0x1bfeb>
  432955:	xor    %edi,%edi
  432957:	mov    %rax,%rsi
  43295a:	callq  447000 <X509_get0_pubkey_bitstr@plt+0x30630>
  43295f:	test   %eax,%eax
  432961:	jne    43299f <X509_get0_pubkey_bitstr@plt+0x1bfcf>
  432963:	mov    %r13,0x38(%rsp)
  432968:	jmpq   432520 <X509_get0_pubkey_bitstr@plt+0x1bb50>
  43296d:	lea    0x3313d(%rip),%rsi        # 465ab1 <_fini+0x85ad>
  432974:	mov    %rbp,%rdi
  432977:	callq  4155c0 <strcmp@plt>
  43297c:	test   %eax,%eax
  43297e:	jne    4329c9 <X509_get0_pubkey_bitstr@plt+0x1bff9>
  432980:	sub    $0x1,%r14d
  432984:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  43298a:	mov    0x8(%rbx),%rax
  43298e:	lea    0x8(%rbx),%rbp
  432992:	mov    %rax,0xa8(%rsp)
  43299a:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  43299f:	mov    %r13,%rsi
  4329a2:	mov    %rbp,%rdi
  4329a5:	callq  412e40 <X509_set_serialNumber@plt>
  4329aa:	test   %eax,%eax
  4329ac:	je     432963 <X509_get0_pubkey_bitstr@plt+0x1bf93>
  4329ae:	mov    %r13,%rdi
  4329b1:	callq  412a90 <ASN1_INTEGER_free@plt>
  4329b6:	jmpq   43285f <X509_get0_pubkey_bitstr@plt+0x1be8f>
  4329bb:	movq   $0x0,0x38(%rsp)
  4329c4:	jmpq   432520 <X509_get0_pubkey_bitstr@plt+0x1bb50>
  4329c9:	lea    0x2b8cf(%rip),%rsi        # 45e29f <_fini+0xd9b>
  4329d0:	mov    %rbp,%rdi
  4329d3:	callq  4155c0 <strcmp@plt>
  4329d8:	test   %eax,%eax
  4329da:	jne    432a84 <X509_get0_pubkey_bitstr@plt+0x1c0b4>
  4329e0:	sub    $0x1,%r14d
  4329e4:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  4329ea:	mov    0x8(%rbx),%rsi
  4329ee:	xor    %edi,%edi
  4329f0:	lea    0x8(%rbx),%rbp
  4329f4:	callq  415200 <s2i_ASN1_INTEGER@plt>
  4329f9:	test   %rax,%rax
  4329fc:	mov    %rax,0x38(%rsp)
  432a01:	jne    43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432a07:	jmpq   430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  432a0c:	lea    0x24832d(%rip),%rax        # 67ad40 <_edata+0x38>
  432a13:	xor    %r12d,%r12d
  432a16:	xor    %ebp,%ebp
  432a18:	mov    $0x1,%r13b
  432a1b:	mov    (%rax),%rdi
  432a1e:	callq  413f40 <ERR_print_errors@plt>
  432a23:	movq   $0x0,0x18(%rsp)
  432a2c:	movq   $0x0,0x10(%rsp)
  432a35:	movq   $0x0,0x8(%rsp)
  432a3e:	movq   $0x0,0x20(%rsp)
  432a47:	jmpq   430a91 <X509_get0_pubkey_bitstr@plt+0x1a0c1>
  432a4c:	mov    0x2434bd(%rip),%rax        # 675f10 <_fini+0x218a0c>
  432a53:	mov    $0x10,%edx
  432a58:	mov    $0x6a,%esi
  432a5d:	mov    %rbp,%rdi
  432a60:	mov    (%rax),%rcx
  432a63:	callq  412af0 <BIO_ctrl@plt>
  432a68:	jmpq   430efb <X509_get0_pubkey_bitstr@plt+0x1a52b>
  432a6d:	mov    0x20(%rsp),%rdi
  432a72:	callq  4142c0 <perror@plt>
  432a77:	mov    %rbp,%rdi
  432a7a:	callq  413960 <BIO_free@plt>
  432a7f:	jmpq   430a59 <X509_get0_pubkey_bitstr@plt+0x1a089>
  432a84:	lea    0x33030(%rip),%rsi        # 465abb <_fini+0x85b7>
  432a8b:	mov    %rbp,%rdi
  432a8e:	callq  4155c0 <strcmp@plt>
  432a93:	test   %eax,%eax
  432a95:	jne    432b22 <X509_get0_pubkey_bitstr@plt+0x1c152>
  432a9b:	sub    $0x1,%r14d
  432a9f:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  432aa5:	mov    0x8(%rbx),%rdi
  432aa9:	xor    %esi,%esi
  432aab:	lea    0x8(%rbx),%rbp
  432aaf:	callq  414870 <OBJ_txt2obj@plt>
  432ab4:	test   %rax,%rax
  432ab7:	mov    %rax,%rsi
  432aba:	je     432aef <X509_get0_pubkey_bitstr@plt+0x1c11f>
  432abc:	cmpq   $0x0,0x40(%rsp)
  432ac2:	jne    432ad8 <X509_get0_pubkey_bitstr@plt+0x1c108>
  432ac4:	mov    %rax,0x78(%rsp)
  432ac9:	callq  412cd0 <sk_new_null@plt>
  432ace:	mov    0x78(%rsp),%rsi
  432ad3:	mov    %rax,0x40(%rsp)
  432ad8:	mov    0x40(%rsp),%rdi
  432add:	callq  412fe0 <sk_push@plt>
  432ae2:	movl   $0x1,0x78(%rsp)
  432aea:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432aef:	lea    0x24824a(%rip),%rax        # 67ad40 <_edata+0x38>
  432af6:	mov    %rbx,%rdx
  432af9:	lea    0x32280(%rip),%rsi        # 464d80 <_fini+0x787c>
  432b00:	mov    0x8(%rdx),%rdx
  432b04:	mov    0x10(%rsp),%r15
  432b09:	mov    0x18(%rsp),%r14
  432b0e:	mov    0x8(%rsp),%rbx
  432b13:	mov    (%rax),%rdi
  432b16:	xor    %eax,%eax
  432b18:	callq  413c40 <BIO_printf@plt>
  432b1d:	jmpq   430ad1 <X509_get0_pubkey_bitstr@plt+0x1a101>
  432b22:	lea    0x32f9c(%rip),%rsi        # 465ac5 <_fini+0x85c1>
  432b29:	mov    %rbp,%rdi
  432b2c:	callq  4155c0 <strcmp@plt>
  432b31:	test   %eax,%eax
  432b33:	jne    432bc0 <X509_get0_pubkey_bitstr@plt+0x1c1f0>
  432b39:	sub    $0x1,%r14d
  432b3d:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  432b43:	mov    0x8(%rbx),%rdi
  432b47:	xor    %esi,%esi
  432b49:	lea    0x8(%rbx),%rbp
  432b4d:	callq  414870 <OBJ_txt2obj@plt>
  432b52:	test   %rax,%rax
  432b55:	mov    %rax,%rsi
  432b58:	je     432b8d <X509_get0_pubkey_bitstr@plt+0x1c1bd>
  432b5a:	cmpq   $0x0,0x48(%rsp)
  432b60:	jne    432b76 <X509_get0_pubkey_bitstr@plt+0x1c1a6>
  432b62:	mov    %rax,0x78(%rsp)
  432b67:	callq  412cd0 <sk_new_null@plt>
  432b6c:	mov    0x78(%rsp),%rsi
  432b71:	mov    %rax,0x48(%rsp)
  432b76:	mov    0x48(%rsp),%rdi
  432b7b:	callq  412fe0 <sk_push@plt>
  432b80:	movl   $0x1,0x78(%rsp)
  432b88:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432b8d:	lea    0x2481ac(%rip),%rax        # 67ad40 <_edata+0x38>
  432b94:	mov    %rbx,%rdx
  432b97:	lea    0x32202(%rip),%rsi        # 464da0 <_fini+0x789c>
  432b9e:	mov    0x8(%rdx),%rdx
  432ba2:	mov    0x10(%rsp),%r15
  432ba7:	mov    0x18(%rsp),%r14
  432bac:	mov    0x8(%rsp),%rbx
  432bb1:	mov    (%rax),%rdi
  432bb4:	xor    %eax,%eax
  432bb6:	callq  413c40 <BIO_printf@plt>
  432bbb:	jmpq   430ad1 <X509_get0_pubkey_bitstr@plt+0x1a101>
  432bc0:	lea    0x32f09(%rip),%rsi        # 465ad0 <_fini+0x85cc>
  432bc7:	mov    %rbp,%rdi
  432bca:	callq  4155c0 <strcmp@plt>
  432bcf:	test   %eax,%eax
  432bd1:	jne    432bfa <X509_get0_pubkey_bitstr@plt+0x1c22a>
  432bd3:	sub    $0x1,%r14d
  432bd7:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  432bdd:	mov    0x8(%rbx),%rax
  432be1:	lea    0x8(%rbx),%rbp
  432be5:	movl   $0x1,0x78(%rsp)
  432bed:	mov    %rax,0xe8(%rsp)
  432bf5:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432bfa:	lea    0x32ed9(%rip),%rsi        # 465ada <_fini+0x85d6>
  432c01:	mov    %rbp,%rdi
  432c04:	callq  4155c0 <strcmp@plt>
  432c09:	test   %eax,%eax
  432c0b:	jne    432c39 <X509_get0_pubkey_bitstr@plt+0x1c269>
  432c0d:	sub    $0x1,%r14d
  432c11:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  432c17:	mov    0x8(%rbx),%rsi
  432c1b:	mov    0x140(%rsp),%rdi
  432c23:	lea    0x8(%rbx),%rbp
  432c27:	callq  4465f0 <X509_get0_pubkey_bitstr@plt+0x2fc20>
  432c2c:	test   %eax,%eax
  432c2e:	jne    43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432c34:	jmpq   430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  432c39:	lea    0x2b60d(%rip),%rsi        # 45e24d <_fini+0xd49>
  432c40:	mov    %rbp,%rdi
  432c43:	callq  4155c0 <strcmp@plt>
  432c48:	test   %eax,%eax
  432c4a:	jne    432c78 <X509_get0_pubkey_bitstr@plt+0x1c2a8>
  432c4c:	sub    $0x1,%r14d
  432c50:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  432c56:	mov    0x8(%rbx),%rsi
  432c5a:	mov    0x138(%rsp),%rdi
  432c62:	lea    0x8(%rbx),%rbp
  432c66:	callq  446600 <X509_get0_pubkey_bitstr@plt+0x2fc30>
  432c6b:	test   %eax,%eax
  432c6d:	jne    43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432c73:	jmpq   430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  432c78:	lea    0x2aee3(%rip),%rsi        # 45db62 <_fini+0x65e>
  432c7f:	mov    %rbp,%rdi
  432c82:	callq  4155c0 <strcmp@plt>
  432c87:	test   %eax,%eax
  432c89:	jne    432caa <X509_get0_pubkey_bitstr@plt+0x1c2da>
  432c8b:	sub    $0x1,%r14d
  432c8f:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  432c95:	mov    0x8(%rbx),%rax
  432c99:	lea    0x8(%rbx),%rbp
  432c9d:	mov    %rax,0xb8(%rsp)
  432ca5:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432caa:	cmpl   $0x0,0x148(%rsp)
  432cb2:	jne    432cd8 <X509_get0_pubkey_bitstr@plt+0x1c308>
  432cb4:	cmpb   $0x43,0x1(%rbp)
  432cb8:	jne    432cd8 <X509_get0_pubkey_bitstr@plt+0x1c308>
  432cba:	cmpb   $0x0,0x2(%rbp)
  432cbe:	jne    432cd8 <X509_get0_pubkey_bitstr@plt+0x1c308>
  432cc0:	addl   $0x1,0x60(%rsp)
  432cc5:	mov    %rbx,%rbp
  432cc8:	mov    0x60(%rsp),%eax
  432ccc:	mov    %eax,0x120(%rsp)
  432cd3:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432cd8:	lea    0x32e04(%rip),%rsi        # 465ae3 <_fini+0x85df>
  432cdf:	mov    %rbp,%rdi
  432ce2:	callq  4155c0 <strcmp@plt>
  432ce7:	test   %eax,%eax
  432ce9:	jne    432d03 <X509_get0_pubkey_bitstr@plt+0x1c333>
  432ceb:	addl   $0x1,0x60(%rsp)
  432cf0:	mov    %rbx,%rbp
  432cf3:	mov    0x60(%rsp),%eax
  432cf7:	mov    %eax,0xe0(%rsp)
  432cfe:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432d03:	lea    0x32de0(%rip),%rsi        # 465aea <_fini+0x85e6>
  432d0a:	mov    %rbp,%rdi
  432d0d:	callq  4155c0 <strcmp@plt>
  432d12:	test   %eax,%eax
  432d14:	jne    432d2e <X509_get0_pubkey_bitstr@plt+0x1c35e>
  432d16:	addl   $0x1,0x60(%rsp)
  432d1b:	mov    %rbx,%rbp
  432d1e:	mov    0x60(%rsp),%eax
  432d22:	mov    %eax,0xe4(%rsp)
  432d29:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432d2e:	lea    0x32dbf(%rip),%rsi        # 465af4 <_fini+0x85f0>
  432d35:	mov    %rbp,%rdi
  432d38:	callq  4155c0 <strcmp@plt>
  432d3d:	test   %eax,%eax
  432d3f:	jne    432d59 <X509_get0_pubkey_bitstr@plt+0x1c389>
  432d41:	addl   $0x1,0x60(%rsp)
  432d46:	mov    %rbx,%rbp
  432d49:	mov    0x60(%rsp),%eax
  432d4d:	mov    %eax,0xc8(%rsp)
  432d54:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432d59:	lea    0x32d9c(%rip),%rsi        # 465afc <_fini+0x85f8>
  432d60:	mov    %rbp,%rdi
  432d63:	callq  4155c0 <strcmp@plt>
  432d68:	test   %eax,%eax
  432d6a:	jne    432d84 <X509_get0_pubkey_bitstr@plt+0x1c3b4>
  432d6c:	addl   $0x1,0x60(%rsp)
  432d71:	mov    %rbx,%rbp
  432d74:	mov    0x60(%rsp),%eax
  432d78:	mov    %eax,0xb0(%rsp)
  432d7f:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432d84:	lea    0x2b4a4(%rip),%rsi        # 45e22f <_fini+0xd2b>
  432d8b:	mov    %rbp,%rdi
  432d8e:	callq  4155c0 <strcmp@plt>
  432d93:	test   %eax,%eax
  432d95:	jne    432daf <X509_get0_pubkey_bitstr@plt+0x1c3df>
  432d97:	addl   $0x1,0x60(%rsp)
  432d9c:	mov    %rbx,%rbp
  432d9f:	mov    0x60(%rsp),%eax
  432da3:	mov    %eax,0x124(%rsp)
  432daa:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432daf:	lea    0x2b414(%rip),%rsi        # 45e1ca <_fini+0xcc6>
  432db6:	mov    %rbp,%rdi
  432db9:	callq  4155c0 <strcmp@plt>
  432dbe:	test   %eax,%eax
  432dc0:	jne    432dda <X509_get0_pubkey_bitstr@plt+0x1c40a>
  432dc2:	addl   $0x1,0x60(%rsp)
  432dc7:	mov    %rbx,%rbp
  432dca:	mov    0x60(%rsp),%eax
  432dce:	mov    %eax,0x128(%rsp)
  432dd5:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432dda:	lea    0x32d28(%rip),%rsi        # 465b09 <_fini+0x8605>
  432de1:	mov    %rbp,%rdi
  432de4:	callq  4155c0 <strcmp@plt>
  432de9:	test   %eax,%eax
  432deb:	jne    432e05 <X509_get0_pubkey_bitstr@plt+0x1c435>
  432ded:	addl   $0x1,0x60(%rsp)
  432df2:	mov    %rbx,%rbp
  432df5:	mov    0x60(%rsp),%eax
  432df9:	mov    %eax,0xf0(%rsp)
  432e00:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432e05:	lea    0x2b45b(%rip),%rsi        # 45e267 <_fini+0xd63>
  432e0c:	mov    %rbp,%rdi
  432e0f:	callq  4155c0 <strcmp@plt>
  432e14:	test   %eax,%eax
  432e16:	jne    432e30 <X509_get0_pubkey_bitstr@plt+0x1c460>
  432e18:	addl   $0x1,0x60(%rsp)
  432e1d:	mov    %rbx,%rbp
  432e20:	mov    0x60(%rsp),%eax
  432e24:	mov    %eax,0xc4(%rsp)
  432e2b:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432e30:	lea    0x2fedb(%rip),%rsi        # 462d12 <_fini+0x580e>
  432e37:	mov    %rbp,%rdi
  432e3a:	callq  4155c0 <strcmp@plt>
  432e3f:	test   %eax,%eax
  432e41:	je     432e56 <X509_get0_pubkey_bitstr@plt+0x1c486>
  432e43:	lea    0x32cca(%rip),%rsi        # 465b14 <_fini+0x8610>
  432e4a:	mov    %rbp,%rdi
  432e4d:	callq  4155c0 <strcmp@plt>
  432e52:	test   %eax,%eax
  432e54:	jne    432e6e <X509_get0_pubkey_bitstr@plt+0x1c49e>
  432e56:	addl   $0x1,0x60(%rsp)
  432e5b:	mov    %rbx,%rbp
  432e5e:	mov    0x60(%rsp),%eax
  432e62:	mov    %eax,0xf4(%rsp)
  432e69:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432e6e:	lea    0x32cad(%rip),%rsi        # 465b22 <_fini+0x861e>
  432e75:	mov    %rbp,%rdi
  432e78:	callq  4155c0 <strcmp@plt>
  432e7d:	test   %eax,%eax
  432e7f:	jne    432e99 <X509_get0_pubkey_bitstr@plt+0x1c4c9>
  432e81:	addl   $0x1,0x60(%rsp)
  432e86:	mov    %rbx,%rbp
  432e89:	mov    0x60(%rsp),%eax
  432e8d:	mov    %eax,0x100(%rsp)
  432e94:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432e99:	lea    0x32c94(%rip),%rsi        # 465b34 <_fini+0x8630>
  432ea0:	mov    %rbp,%rdi
  432ea3:	callq  4155c0 <strcmp@plt>
  432ea8:	test   %eax,%eax
  432eaa:	jne    432ec4 <X509_get0_pubkey_bitstr@plt+0x1c4f4>
  432eac:	addl   $0x1,0x60(%rsp)
  432eb1:	mov    %rbx,%rbp
  432eb4:	mov    0x60(%rsp),%eax
  432eb8:	mov    %eax,0xf8(%rsp)
  432ebf:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432ec4:	lea    0x32c76(%rip),%rsi        # 465b41 <_fini+0x863d>
  432ecb:	mov    %rbp,%rdi
  432ece:	callq  4155c0 <strcmp@plt>
  432ed3:	test   %eax,%eax
  432ed5:	jne    432eef <X509_get0_pubkey_bitstr@plt+0x1c51f>
  432ed7:	addl   $0x1,0x60(%rsp)
  432edc:	mov    %rbx,%rbp
  432edf:	mov    0x60(%rsp),%eax
  432ee3:	mov    %eax,0x104(%rsp)
  432eea:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432eef:	lea    0x2b368(%rip),%rsi        # 45e25e <_fini+0xd5a>
  432ef6:	mov    %rbp,%rdi
  432ef9:	callq  4155c0 <strcmp@plt>
  432efe:	test   %eax,%eax
  432f00:	jne    432f1a <X509_get0_pubkey_bitstr@plt+0x1c54a>
  432f02:	addl   $0x1,0x60(%rsp)
  432f07:	mov    %rbx,%rbp
  432f0a:	mov    0x60(%rsp),%eax
  432f0e:	mov    %eax,0xcc(%rsp)
  432f15:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432f1a:	lea    0x2fdf7(%rip),%rsi        # 462d18 <_fini+0x5814>
  432f21:	mov    %rbp,%rdi
  432f24:	callq  4155c0 <strcmp@plt>
  432f29:	test   %eax,%eax
  432f2b:	jne    432f45 <X509_get0_pubkey_bitstr@plt+0x1c575>
  432f2d:	addl   $0x1,0x60(%rsp)
  432f32:	mov    %rbx,%rbp
  432f35:	mov    0x60(%rsp),%eax
  432f39:	mov    %eax,0xd0(%rsp)
  432f40:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432f45:	lea    0x2c9a3(%rip),%rsi        # 45f8ef <_fini+0x23eb>
  432f4c:	mov    %rbp,%rdi
  432f4f:	callq  4155c0 <strcmp@plt>
  432f54:	test   %eax,%eax
  432f56:	jne    432f70 <X509_get0_pubkey_bitstr@plt+0x1c5a0>
  432f58:	addl   $0x1,0x60(%rsp)
  432f5d:	mov    %rbx,%rbp
  432f60:	mov    0x60(%rsp),%eax
  432f64:	mov    %eax,0x130(%rsp)
  432f6b:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432f70:	lea    0x32bdb(%rip),%rsi        # 465b52 <_fini+0x864e>
  432f77:	mov    %rbp,%rdi
  432f7a:	callq  4155c0 <strcmp@plt>
  432f7f:	test   %eax,%eax
  432f81:	jne    432fa9 <X509_get0_pubkey_bitstr@plt+0x1c5d9>
  432f83:	mov    0x60(%rsp),%eax
  432f87:	addl   $0x2,0x60(%rsp)
  432f8c:	mov    %rbx,%rbp
  432f8f:	add    $0x1,%eax
  432f92:	mov    %eax,0xd4(%rsp)
  432f99:	mov    0x60(%rsp),%eax
  432f9d:	mov    %eax,0xd8(%rsp)
  432fa4:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432fa9:	lea    0x32ba9(%rip),%rsi        # 465b59 <_fini+0x8655>
  432fb0:	mov    %rbp,%rdi
  432fb3:	callq  4155c0 <strcmp@plt>
  432fb8:	test   %eax,%eax
  432fba:	jne    432fd4 <X509_get0_pubkey_bitstr@plt+0x1c604>
  432fbc:	addl   $0x1,0x60(%rsp)
  432fc1:	mov    %rbx,%rbp
  432fc4:	mov    0x60(%rsp),%eax
  432fc8:	mov    %eax,0x12c(%rsp)
  432fcf:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432fd4:	lea    0x2dfa2(%rip),%rsi        # 460f7d <_fini+0x3a79>
  432fdb:	mov    %rbp,%rdi
  432fde:	callq  4155c0 <strcmp@plt>
  432fe3:	test   %eax,%eax
  432fe5:	jne    432fff <X509_get0_pubkey_bitstr@plt+0x1c62f>
  432fe7:	addl   $0x1,0x60(%rsp)
  432fec:	mov    %rbx,%rbp
  432fef:	mov    0x60(%rsp),%eax
  432ff3:	mov    %eax,0xd4(%rsp)
  432ffa:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  432fff:	lea    0x2df82(%rip),%rsi        # 460f88 <_fini+0x3a84>
  433006:	mov    %rbp,%rdi
  433009:	callq  4155c0 <strcmp@plt>
  43300e:	test   %eax,%eax
  433010:	jne    43302a <X509_get0_pubkey_bitstr@plt+0x1c65a>
  433012:	addl   $0x1,0x60(%rsp)
  433017:	mov    %rbx,%rbp
  43301a:	mov    0x60(%rsp),%eax
  43301e:	mov    %eax,0xd8(%rsp)
  433025:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  43302a:	lea    0x32b31(%rip),%rsi        # 465b62 <_fini+0x865e>
  433031:	mov    %rbp,%rdi
  433034:	callq  4155c0 <strcmp@plt>
  433039:	test   %eax,%eax
  43303b:	jne    433072 <X509_get0_pubkey_bitstr@plt+0x1c6a2>
  43303d:	sub    $0x1,%r14d
  433041:	je     430ac2 <X509_get0_pubkey_bitstr@plt+0x1a0f2>
  433047:	mov    0x8(%rbx),%rdi
  43304b:	mov    $0xa,%edx
  433050:	xor    %esi,%esi
  433052:	lea    0x8(%rbx),%rbp
  433056:	callq  4155d0 <strtol@plt>
  43305b:	movl   $0x1,0x134(%rsp)
  433066:	mov    %eax,0x158(%rsp)
  43306d:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  433072:	lea    0x2ac6e(%rip),%rsi        # 45dce7 <_fini+0x7e3>
  433079:	mov    %rbp,%rdi
  43307c:	callq  4155c0 <strcmp@plt>
  433081:	test   %eax,%eax
  433083:	jne    43309d <X509_get0_pubkey_bitstr@plt+0x1c6cd>
  433085:	addl   $0x1,0x60(%rsp)
  43308a:	mov    %rbx,%rbp
  43308d:	mov    0x60(%rsp),%eax
  433091:	mov    %eax,0x80(%rsp)
  433098:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  43309d:	lea    0x32ac8(%rip),%rsi        # 465b6c <_fini+0x8668>
  4330a4:	mov    %rbp,%rdi
  4330a7:	callq  4155c0 <strcmp@plt>
  4330ac:	test   %eax,%eax
  4330ae:	je     4330db <X509_get0_pubkey_bitstr@plt+0x1c70b>
  4330b0:	lea    0x32abf(%rip),%rsi        # 465b76 <_fini+0x8672>
  4330b7:	mov    %rbp,%rdi
  4330ba:	callq  4155c0 <strcmp@plt>
  4330bf:	test   %eax,%eax
  4330c1:	jne    4330eb <X509_get0_pubkey_bitstr@plt+0x1c71b>
  4330c3:	addl   $0x1,0x60(%rsp)
  4330c8:	mov    %rbx,%rbp
  4330cb:	mov    0x60(%rsp),%eax
  4330cf:	mov    %eax,0x108(%rsp)
  4330d6:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  4330db:	mov    %rbx,%rbp
  4330de:	movl   $0x1,0x78(%rsp)
  4330e6:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  4330eb:	lea    0x32a8e(%rip),%rsi        # 465b80 <_fini+0x867c>
  4330f2:	mov    %rbp,%rdi
  4330f5:	callq  4155c0 <strcmp@plt>
  4330fa:	test   %eax,%eax
  4330fc:	jne    433116 <X509_get0_pubkey_bitstr@plt+0x1c746>
  4330fe:	addl   $0x1,0x60(%rsp)
  433103:	mov    %rbx,%rbp
  433106:	mov    0x60(%rsp),%eax
  43310a:	mov    %eax,0x110(%rsp)
  433111:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  433116:	lea    0x32a6e(%rip),%rsi        # 465b8b <_fini+0x8687>
  43311d:	mov    %rbp,%rdi
  433120:	callq  4155c0 <strcmp@plt>
  433125:	test   %eax,%eax
  433127:	jne    433141 <X509_get0_pubkey_bitstr@plt+0x1c771>
  433129:	addl   $0x1,0x60(%rsp)
  43312e:	mov    %rbx,%rbp
  433131:	mov    0x60(%rsp),%eax
  433135:	mov    %eax,0x11c(%rsp)
  43313c:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  433141:	lea    0x32a4a(%rip),%rsi        # 465b92 <_fini+0x868e>
  433148:	mov    %rbp,%rdi
  43314b:	callq  4155c0 <strcmp@plt>
  433150:	test   %eax,%eax
  433152:	jne    43316c <X509_get0_pubkey_bitstr@plt+0x1c79c>
  433154:	addl   $0x1,0x60(%rsp)
  433159:	mov    %rbx,%rbp
  43315c:	mov    0x60(%rsp),%eax
  433160:	mov    %eax,0x118(%rsp)
  433167:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  43316c:	lea    0x32a2f(%rip),%rsi        # 465ba2 <_fini+0x869e>
  433173:	mov    %rbp,%rdi
  433176:	callq  4155c0 <strcmp@plt>
  43317b:	test   %eax,%eax
  43317d:	je     4331bd <X509_get0_pubkey_bitstr@plt+0x1c7ed>
  43317f:	lea    0x32a24(%rip),%rsi        # 465baa <_fini+0x86a6>
  433186:	mov    %rbp,%rdi
  433189:	callq  4155c0 <strcmp@plt>
  43318e:	test   %eax,%eax
  433190:	je     4331ee <X509_get0_pubkey_bitstr@plt+0x1c81e>
  433192:	lea    0x32a19(%rip),%rsi        # 465bb2 <_fini+0x86ae>
  433199:	mov    %rbp,%rdi
  43319c:	callq  4155c0 <strcmp@plt>
  4331a1:	test   %eax,%eax
  4331a3:	jne    4331d0 <X509_get0_pubkey_bitstr@plt+0x1c800>
  4331a5:	addl   $0x1,0x60(%rsp)
  4331aa:	mov    %rbx,%rbp
  4331ad:	mov    0x60(%rsp),%eax
  4331b1:	mov    %eax,0xfc(%rsp)
  4331b8:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  4331bd:	mov    %rbx,%rbp
  4331c0:	movl   $0x1,0xc0(%rsp)
  4331cb:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  4331d0:	lea    0x1(%rbp),%rdi
  4331d4:	callq  416720 <EVP_get_digestbyname@plt>
  4331d9:	test   %rax,%rax
  4331dc:	je     433219 <X509_get0_pubkey_bitstr@plt+0x1c849>
  4331de:	mov    %rax,0x88(%rsp)
  4331e6:	mov    %rbx,%rbp
  4331e9:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  4331ee:	lea    0x247b4b(%rip),%rax        # 67ad40 <_edata+0x38>
  4331f5:	lea    0x31bc4(%rip),%rsi        # 464dc0 <_fini+0x78bc>
  4331fc:	mov    %rbx,%rbp
  4331ff:	mov    (%rax),%rdi
  433202:	xor    %eax,%eax
  433204:	callq  413c40 <BIO_printf@plt>
  433209:	movl   $0x1,0xc0(%rsp)
  433214:	jmpq   43088a <X509_get0_pubkey_bitstr@plt+0x19eba>
  433219:	lea    0x247b20(%rip),%rax        # 67ad40 <_edata+0x38>
  433220:	mov    %rbx,%rdx
  433223:	lea    0x2ab02(%rip),%rsi        # 45dd2c <_fini+0x828>
  43322a:	mov    (%rdx),%rdx
  43322d:	mov    0x10(%rsp),%r15
  433232:	mov    0x18(%rsp),%r14
  433237:	mov    0x8(%rsp),%rbx
  43323c:	mov    (%rax),%rdi
  43323f:	xor    %eax,%eax
  433241:	callq  413c40 <BIO_printf@plt>
  433246:	jmpq   430ad1 <X509_get0_pubkey_bitstr@plt+0x1a101>
  43324b:	nopl   0x0(%rax,%rax,1)
  433250:	push   %rbx
  433251:	mov    %rdx,%rbx
  433254:	sub    $0x10,%rsp
  433258:	mov    %fs:0x28,%rax
  433261:	mov    %rax,0x8(%rsp)
  433266:	xor    %eax,%eax
  433268:	test   %edi,%edi
  43326a:	movb   $0x2a,0x7(%rsp)
  43326f:	jne    4332c0 <X509_get0_pubkey_bitstr@plt+0x1c8f0>
  433271:	movb   $0x2e,0x7(%rsp)
  433276:	mov    0x8(%rbx),%rdi
  43327a:	lea    0x7(%rsp),%rsi
  43327f:	mov    $0x1,%edx
  433284:	callq  412db0 <BIO_write@plt>
  433289:	mov    0x8(%rbx),%rdi
  43328d:	xor    %ecx,%ecx
  43328f:	xor    %edx,%edx
  433291:	mov    $0xb,%esi
  433296:	callq  412af0 <BIO_ctrl@plt>
  43329b:	mov    0x8(%rsp),%rcx
  4332a0:	xor    %fs:0x28,%rcx
  4332a9:	mov    $0x1,%eax
  4332ae:	jne    4332e1 <X509_get0_pubkey_bitstr@plt+0x1c911>
  4332b0:	add    $0x10,%rsp
  4332b4:	pop    %rbx
  4332b5:	retq   
  4332b6:	nopw   %cs:0x0(%rax,%rax,1)
  4332c0:	cmp    $0x1,%edi
  4332c3:	jne    4332d0 <X509_get0_pubkey_bitstr@plt+0x1c900>
  4332c5:	movb   $0x2b,0x7(%rsp)
  4332ca:	jmp    433276 <X509_get0_pubkey_bitstr@plt+0x1c8a6>
  4332cc:	nopl   0x0(%rax)
  4332d0:	cmp    $0x2,%edi
  4332d3:	je     433276 <X509_get0_pubkey_bitstr@plt+0x1c8a6>
  4332d5:	cmp    $0x3,%edi
  4332d8:	jne    433276 <X509_get0_pubkey_bitstr@plt+0x1c8a6>
  4332da:	movb   $0xa,0x7(%rsp)
  4332df:	jmp    433276 <X509_get0_pubkey_bitstr@plt+0x1c8a6>
  4332e1:	callq  414c30 <__stack_chk_fail@plt>
  4332e6:	nopw   %cs:0x0(%rax,%rax,1)
  4332f0:	push   %r15
  4332f2:	mov    $0x1,%r15d
  4332f8:	push   %r14
  4332fa:	push   %r13
  4332fc:	push   %r12
  4332fe:	push   %rbp
  4332ff:	mov    %rsi,%rbp
  433302:	push   %rbx
  433303:	mov    %edi,%ebx
  433305:	sub    $0x98,%rsp
  43330c:	mov    %fs:0x28,%rax
  433315:	mov    %rax,0x88(%rsp)
  43331d:	xor    %eax,%eax
  43331f:	movl   $0x400,0x54(%rsp)
  433327:	movq   $0x0,0x58(%rsp)
  433330:	callq  416760 <BN_new@plt>
  433335:	test   %rax,%rax
  433338:	mov    %rax,%r13
  43333b:	je     4333a5 <X509_get0_pubkey_bitstr@plt+0x1c9d5>
  43333d:	mov    $0xd,%edi
  433342:	mov    $0x1,%esi
  433347:	callq  414ee0 <signal@plt>
  43334c:	lea    0x2479ed(%rip),%r12        # 67ad40 <_edata+0x38>
  433353:	lea    -0x10a(%rip),%rax        # 433250 <X509_get0_pubkey_bitstr@plt+0x1c880>
  43335a:	movl   $0x2,0x70(%rsp)
  433362:	mov    %rax,0x80(%rsp)
  43336a:	mov    (%r12),%rdi
  43336e:	test   %rdi,%rdi
  433371:	mov    %rdi,0x78(%rsp)
  433376:	je     433952 <X509_get0_pubkey_bitstr@plt+0x1cf82>
  43337c:	xor    %esi,%esi
  43337e:	xor    %r14d,%r14d
  433381:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  433386:	test   %eax,%eax
  433388:	jne    4333f8 <X509_get0_pubkey_bitstr@plt+0x1ca28>
  43338a:	mov    %r13,%rdi
  43338d:	mov    $0x1,%r15d
  433393:	callq  4138e0 <BN_free@plt>
  433398:	test   %r14,%r14
  43339b:	je     4333a5 <X509_get0_pubkey_bitstr@plt+0x1c9d5>
  43339d:	mov    %r14,%rdi
  4333a0:	callq  416570 <BIO_free_all@plt>
  4333a5:	mov    0x58(%rsp),%rdi
  4333aa:	test   %rdi,%rdi
  4333ad:	je     4333b4 <X509_get0_pubkey_bitstr@plt+0x1c9e4>
  4333af:	callq  415020 <CRYPTO_free@plt>
  4333b4:	test   %r15d,%r15d
  4333b7:	je     4333c8 <X509_get0_pubkey_bitstr@plt+0x1c9f8>
  4333b9:	lea    0x247980(%rip),%rax        # 67ad40 <_edata+0x38>
  4333c0:	mov    (%rax),%rdi
  4333c3:	callq  413f40 <ERR_print_errors@plt>
  4333c8:	mov    0x88(%rsp),%rbx
  4333d0:	xor    %fs:0x28,%rbx
  4333d9:	mov    %r15d,%eax
  4333dc:	jne    433c13 <X509_get0_pubkey_bitstr@plt+0x1d243>
  4333e2:	add    $0x98,%rsp
  4333e9:	pop    %rbx
  4333ea:	pop    %rbp
  4333eb:	pop    %r12
  4333ed:	pop    %r13
  4333ef:	pop    %r14
  4333f1:	pop    %r15
  4333f3:	retq   
  4333f4:	nopl   0x0(%rax)
  4333f8:	callq  4152b0 <BIO_s_file@plt>
  4333fd:	mov    %rax,%rdi
  433400:	callq  414a20 <BIO_new@plt>
  433405:	test   %rax,%rax
  433408:	mov    %rax,%r14
  43340b:	je     43393b <X509_get0_pubkey_bitstr@plt+0x1cf6b>
  433411:	sub    $0x1,%ebx
  433414:	lea    0x8(%rbp),%rdx
  433418:	xor    %r10d,%r10d
  43341b:	xor    %ebp,%ebp
  43341d:	test   %ebx,%ebx
  43341f:	movq   $0x0,0x18(%rsp)
  433428:	movq   $0x0,0x28(%rsp)
  433431:	mov    $0x10001,%r15d
  433437:	movq   $0x0,0x20(%rsp)
  433440:	movl   $0x0,0x14(%rsp)
  433448:	jle    433520 <X509_get0_pubkey_bitstr@plt+0x1cb50>
  43344e:	lea    0x2a9f1(%rip),%r11        # 45de46 <_fini+0x942>
  433455:	mov    $0x5,%r8d
  43345b:	jmp    433480 <X509_get0_pubkey_bitstr@plt+0x1cab0>
  43345d:	nopl   (%rax)
  433460:	sub    $0x1,%ebx
  433463:	je     4337b8 <X509_get0_pubkey_bitstr@plt+0x1cde8>
  433469:	mov    0x8(%rdx),%rbp
  43346d:	lea    0x8(%rdx),%rax
  433471:	sub    $0x1,%ebx
  433474:	lea    0x8(%rax),%rdx
  433478:	test   %ebx,%ebx
  43347a:	jle    433520 <X509_get0_pubkey_bitstr@plt+0x1cb50>
  433480:	mov    (%rdx),%rax
  433483:	mov    %r11,%rdi
  433486:	mov    %r8,%rcx
  433489:	mov    %rax,%rsi
  43348c:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43348e:	je     433460 <X509_get0_pubkey_bitstr@plt+0x1ca90>
  433490:	cmpb   $0x2d,(%rax)
  433493:	je     4334e0 <X509_get0_pubkey_bitstr@plt+0x1cb10>
  433495:	lea    0x3018f(%rip),%rdi        # 46362b <_fini+0x6127>
  43349c:	mov    $0x6,%ecx
  4334a1:	mov    %rax,%rsi
  4334a4:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4334a6:	je     433650 <X509_get0_pubkey_bitstr@plt+0x1cc80>
  4334ac:	lea    0x2a6af(%rip),%rdi        # 45db62 <_fini+0x65e>
  4334b3:	mov    $0x8,%ecx
  4334b8:	mov    %rax,%rsi
  4334bb:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4334bd:	jne    433660 <X509_get0_pubkey_bitstr@plt+0x1cc90>
  4334c3:	sub    $0x1,%ebx
  4334c6:	je     4337b8 <X509_get0_pubkey_bitstr@plt+0x1cde8>
  4334cc:	lea    0x8(%rdx),%rax
  4334d0:	mov    0x8(%rdx),%r10
  4334d4:	jmp    433471 <X509_get0_pubkey_bitstr@plt+0x1caa1>
  4334d6:	nopw   %cs:0x0(%rax,%rax,1)
  4334e0:	movzbl 0x1(%rax),%ecx
  4334e4:	cmp    $0x33,%cl
  4334e7:	je     433630 <X509_get0_pubkey_bitstr@plt+0x1cc60>
  4334ed:	cmp    $0x46,%cl
  4334f0:	jne    433c18 <X509_get0_pubkey_bitstr@plt+0x1d248>
  4334f6:	cmpb   $0x34,0x2(%rax)
  4334fa:	jne    433495 <X509_get0_pubkey_bitstr@plt+0x1cac5>
  4334fc:	cmpb   $0x0,0x3(%rax)
  433500:	jne    433495 <X509_get0_pubkey_bitstr@plt+0x1cac5>
  433502:	sub    $0x1,%ebx
  433505:	mov    %rdx,%rax
  433508:	mov    $0x10001,%r15d
  43350e:	test   %ebx,%ebx
  433510:	lea    0x8(%rax),%rdx
  433514:	jg     433480 <X509_get0_pubkey_bitstr@plt+0x1cab0>
  43351a:	nopw   0x0(%rax,%rax,1)
  433520:	mov    %r10,0x30(%rsp)
  433525:	callq  416990 <ERR_load_crypto_strings@plt>
  43352a:	mov    0x28(%rsp),%rdx
  43352f:	mov    (%r12),%rdi
  433533:	lea    0x58(%rsp),%r8
  433538:	xor    %ecx,%ecx
  43353a:	xor    %esi,%esi
  43353c:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  433541:	test   %eax,%eax
  433543:	mov    0x30(%rsp),%r10
  433548:	je     433926 <X509_get0_pubkey_bitstr@plt+0x1cf56>
  43354e:	mov    (%r12),%rdi
  433552:	xor    %edx,%edx
  433554:	mov    %r10,%rsi
  433557:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  43355c:	test   %rbp,%rbp
  43355f:	mov    %rax,%rbx
  433562:	je     433aea <X509_get0_pubkey_bitstr@plt+0x1d11a>
  433568:	mov    %rbp,%rcx
  43356b:	mov    $0x5,%edx
  433570:	mov    $0x6c,%esi
  433575:	mov    %r14,%rdi
  433578:	callq  412af0 <BIO_ctrl@plt>
  43357d:	test   %rax,%rax
  433580:	jle    433b08 <X509_get0_pubkey_bitstr@plt+0x1d138>
  433586:	mov    (%r12),%rsi
  43358a:	xor    %edi,%edi
  43358c:	mov    $0x1,%edx
  433591:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  433596:	test   %eax,%eax
  433598:	jne    433991 <X509_get0_pubkey_bitstr@plt+0x1cfc1>
  43359e:	cmpq   $0x0,0x18(%rsp)
  4335a4:	je     433bae <X509_get0_pubkey_bitstr@plt+0x1d1de>
  4335aa:	mov    0x18(%rsp),%rdi
  4335af:	callq  44a710 <X509_get0_pubkey_bitstr@plt+0x33d40>
  4335b4:	mov    (%r12),%rdi
  4335b8:	lea    0x2c7d2(%rip),%rsi        # 45fd91 <_fini+0x288d>
  4335bf:	mov    %rax,%rdx
  4335c2:	xor    %eax,%eax
  4335c4:	callq  413c40 <BIO_printf@plt>
  4335c9:	mov    0x54(%rsp),%edx
  4335cd:	mov    (%r12),%rdi
  4335d1:	lea    0x32a58(%rip),%rsi        # 466030 <_fini+0x8b2c>
  4335d8:	xor    %eax,%eax
  4335da:	callq  413c40 <BIO_printf@plt>
  4335df:	mov    %rbx,%rdi
  4335e2:	callq  4169b0 <RSA_new_method@plt>
  4335e7:	test   %rax,%rax
  4335ea:	mov    %rax,%rbx
  4335ed:	je     43338a <X509_get0_pubkey_bitstr@plt+0x1c9ba>
  4335f3:	mov    0x14(%rsp),%eax
  4335f7:	mov    %r15,%rsi
  4335fa:	mov    %r13,%rdi
  4335fd:	test   %eax,%eax
  4335ff:	je     4339dc <X509_get0_pubkey_bitstr@plt+0x1d00c>
  433605:	callq  414d20 <BN_set_word@plt>
  43360a:	test   %eax,%eax
  43360c:	mov    $0x1,%r15d
  433612:	jne    433b33 <X509_get0_pubkey_bitstr@plt+0x1d163>
  433618:	mov    %r13,%rdi
  43361b:	callq  4138e0 <BN_free@plt>
  433620:	mov    %rbx,%rdi
  433623:	callq  414970 <RSA_free@plt>
  433628:	jmpq   43339d <X509_get0_pubkey_bitstr@plt+0x1c9cd>
  43362d:	nopl   (%rax)
  433630:	cmpb   $0x0,0x2(%rax)
  433634:	jne    433495 <X509_get0_pubkey_bitstr@plt+0x1cac5>
  43363a:	mov    %rdx,%rax
  43363d:	mov    $0x3,%r15d
  433643:	jmpq   433471 <X509_get0_pubkey_bitstr@plt+0x1caa1>
  433648:	nopl   0x0(%rax,%rax,1)
  433650:	mov    %rdx,%rax
  433653:	movl   $0x1,0x14(%rsp)
  43365b:	jmpq   433471 <X509_get0_pubkey_bitstr@plt+0x1caa1>
  433660:	lea    0x2ab9a(%rip),%rdi        # 45e201 <_fini+0xcfd>
  433667:	mov    $0x6,%ecx
  43366c:	mov    %rax,%rsi
  43366f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  433671:	je     43390b <X509_get0_pubkey_bitstr@plt+0x1cf3b>
  433677:	lea    0x329eb(%rip),%rdi        # 466069 <_fini+0x8b65>
  43367e:	mov    %rax,%rsi
  433681:	mov    %r8,%rcx
  433684:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  433686:	je     4339a2 <X509_get0_pubkey_bitstr@plt+0x1cfd2>
  43368c:	lea    0x329db(%rip),%rdi        # 46606e <_fini+0x8b6a>
  433693:	mov    $0x6,%ecx
  433698:	mov    %rax,%rsi
  43369b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43369d:	je     433a90 <X509_get0_pubkey_bitstr@plt+0x1d0c0>
  4336a3:	lea    0x329ca(%rip),%rdi        # 466074 <_fini+0x8b70>
  4336aa:	mov    $0x6,%ecx
  4336af:	mov    %rax,%rsi
  4336b2:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4336b4:	je     433aae <X509_get0_pubkey_bitstr@plt+0x1d0de>
  4336ba:	lea    0x329b9(%rip),%rdi        # 46607a <_fini+0x8b76>
  4336c1:	mov    $0x6,%ecx
  4336c6:	mov    %rax,%rsi
  4336c9:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4336cb:	je     433acc <X509_get0_pubkey_bitstr@plt+0x1d0fc>
  4336d1:	lea    0x329a8(%rip),%rdi        # 466080 <_fini+0x8b7c>
  4336d8:	mov    $0x8,%ecx
  4336dd:	mov    %rax,%rsi
  4336e0:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4336e2:	je     433b15 <X509_get0_pubkey_bitstr@plt+0x1d145>
  4336e8:	lea    0x32999(%rip),%rdi        # 466088 <_fini+0x8b84>
  4336ef:	mov    $0x8,%ecx
  4336f4:	mov    %rax,%rsi
  4336f7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4336f9:	je     433b54 <X509_get0_pubkey_bitstr@plt+0x1d184>
  4336ff:	lea    0x3298a(%rip),%rdi        # 466090 <_fini+0x8b8c>
  433706:	mov    $0x8,%ecx
  43370b:	mov    %rax,%rsi
  43370e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  433710:	je     433b72 <X509_get0_pubkey_bitstr@plt+0x1d1a2>
  433716:	lea    0x3297b(%rip),%rdi        # 466098 <_fini+0x8b94>
  43371d:	mov    $0xd,%ecx
  433722:	mov    %rax,%rsi
  433725:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  433727:	je     433b90 <X509_get0_pubkey_bitstr@plt+0x1d1c0>
  43372d:	lea    0x32971(%rip),%rdi        # 4660a5 <_fini+0x8ba1>
  433734:	mov    $0xd,%ecx
  433739:	mov    %rax,%rsi
  43373c:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43373e:	je     433bee <X509_get0_pubkey_bitstr@plt+0x1d21e>
  433744:	lea    0x32967(%rip),%rdi        # 4660b2 <_fini+0x8bae>
  43374b:	mov    $0xd,%ecx
  433750:	mov    %rax,%rsi
  433753:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  433755:	je     433bd0 <X509_get0_pubkey_bitstr@plt+0x1d200>
  43375b:	lea    0x2aa96(%rip),%rdi        # 45e1f8 <_fini+0xcf4>
  433762:	mov    $0x9,%ecx
  433767:	mov    %rax,%rsi
  43376a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43376c:	jne    433785 <X509_get0_pubkey_bitstr@plt+0x1cdb5>
  43376e:	sub    $0x1,%ebx
  433771:	je     4337b8 <X509_get0_pubkey_bitstr@plt+0x1cde8>
  433773:	lea    0x8(%rdx),%rax
  433777:	mov    0x8(%rdx),%rdx
  43377b:	mov    %rdx,0x28(%rsp)
  433780:	jmpq   433471 <X509_get0_pubkey_bitstr@plt+0x1caa1>
  433785:	lea    0x54(%rsp),%rdx
  43378a:	lea    0x362b6(%rip),%rsi        # 469a47 <_fini+0xc543>
  433791:	mov    %rax,%rdi
  433794:	xor    %eax,%eax
  433796:	mov    %r10,0x30(%rsp)
  43379b:	callq  4147b0 <__isoc99_sscanf@plt>
  4337a0:	test   %eax,%eax
  4337a2:	mov    0x30(%rsp),%r10
  4337a7:	je     4337b8 <X509_get0_pubkey_bitstr@plt+0x1cde8>
  4337a9:	mov    0x54(%rsp),%edx
  4337ad:	test   %edx,%edx
  4337af:	jns    433520 <X509_get0_pubkey_bitstr@plt+0x1cb50>
  4337b5:	nopl   (%rax)
  4337b8:	mov    (%r12),%rdi
  4337bc:	lea    0x32625(%rip),%rsi        # 465de8 <_fini+0x88e4>
  4337c3:	xor    %eax,%eax
  4337c5:	callq  413c40 <BIO_printf@plt>
  4337ca:	mov    (%r12),%rdi
  4337ce:	lea    0x32633(%rip),%rsi        # 465e08 <_fini+0x8904>
  4337d5:	xor    %eax,%eax
  4337d7:	callq  413c40 <BIO_printf@plt>
  4337dc:	mov    (%r12),%rdi
  4337e0:	lea    0x32669(%rip),%rsi        # 465e50 <_fini+0x894c>
  4337e7:	xor    %eax,%eax
  4337e9:	callq  413c40 <BIO_printf@plt>
  4337ee:	mov    (%r12),%rdi
  4337f2:	lea    0x326af(%rip),%rsi        # 465ea8 <_fini+0x89a4>
  4337f9:	xor    %eax,%eax
  4337fb:	callq  413c40 <BIO_printf@plt>
  433800:	mov    (%r12),%rdi
  433804:	lea    0x32856(%rip),%rsi        # 466061 <_fini+0x8b5d>
  43380b:	xor    %eax,%eax
  43380d:	callq  413c40 <BIO_printf@plt>
  433812:	mov    (%r12),%rdi
  433816:	lea    0x326d3(%rip),%rsi        # 465ef0 <_fini+0x89ec>
  43381d:	xor    %eax,%eax
  43381f:	callq  413c40 <BIO_printf@plt>
  433824:	mov    (%r12),%rdi
  433828:	lea    0x2f8e7(%rip),%rsi        # 463116 <_fini+0x5c12>
  43382f:	xor    %eax,%eax
  433831:	callq  413c40 <BIO_printf@plt>
  433836:	mov    (%r12),%rdi
  43383a:	lea    0x2fb9f(%rip),%rsi        # 4633e0 <_fini+0x5edc>
  433841:	xor    %eax,%eax
  433843:	callq  413c40 <BIO_printf@plt>
  433848:	mov    (%r12),%rdi
  43384c:	lea    0x2fbc5(%rip),%rsi        # 463418 <_fini+0x5f14>
  433853:	xor    %eax,%eax
  433855:	callq  413c40 <BIO_printf@plt>
  43385a:	mov    (%r12),%rdi
  43385e:	lea    0x2fbe3(%rip),%rsi        # 463448 <_fini+0x5f44>
  433865:	xor    %eax,%eax
  433867:	callq  413c40 <BIO_printf@plt>
  43386c:	mov    (%r12),%rdi
  433870:	lea    0x326b1(%rip),%rsi        # 465f28 <_fini+0x8a24>
  433877:	xor    %eax,%eax
  433879:	callq  413c40 <BIO_printf@plt>
  43387e:	mov    (%r12),%rdi
  433882:	lea    0x2fa2f(%rip),%rsi        # 4632b8 <_fini+0x5db4>
  433889:	xor    %eax,%eax
  43388b:	callq  413c40 <BIO_printf@plt>
  433890:	mov    (%r12),%rdi
  433894:	lea    0x326bd(%rip),%rsi        # 465f58 <_fini+0x8a54>
  43389b:	xor    %eax,%eax
  43389d:	callq  413c40 <BIO_printf@plt>
  4338a2:	mov    (%r12),%rdi
  4338a6:	lea    0x326e3(%rip),%rsi        # 465f90 <_fini+0x8a8c>
  4338ad:	xor    %eax,%eax
  4338af:	callq  413c40 <BIO_printf@plt>
  4338b4:	mov    (%r12),%rdi
  4338b8:	lea    0x2fcd1(%rip),%rsi        # 463590 <_fini+0x608c>
  4338bf:	xor    %eax,%eax
  4338c1:	callq  413c40 <BIO_printf@plt>
  4338c6:	mov    (%r12),%rdi
  4338ca:	lea    0x2aa59(%rip),%rsi        # 45e32a <_fini+0xe26>
  4338d1:	mov    $0x3a,%ecx
  4338d6:	mov    $0x3a,%edx
  4338db:	xor    %eax,%eax
  4338dd:	callq  413c40 <BIO_printf@plt>
  4338e2:	mov    (%r12),%rdi
  4338e6:	lea    0x326cb(%rip),%rsi        # 465fb8 <_fini+0x8ab4>
  4338ed:	xor    %eax,%eax
  4338ef:	callq  413c40 <BIO_printf@plt>
  4338f4:	mov    (%r12),%rdi
  4338f8:	lea    0x32701(%rip),%rsi        # 466000 <_fini+0x8afc>
  4338ff:	xor    %eax,%eax
  433901:	callq  413c40 <BIO_printf@plt>
  433906:	jmpq   43338a <X509_get0_pubkey_bitstr@plt+0x1c9ba>
  43390b:	sub    $0x1,%ebx
  43390e:	je     4337b8 <X509_get0_pubkey_bitstr@plt+0x1cde8>
  433914:	lea    0x8(%rdx),%rax
  433918:	mov    0x8(%rdx),%rdx
  43391c:	mov    %rdx,0x18(%rsp)
  433921:	jmpq   433471 <X509_get0_pubkey_bitstr@plt+0x1caa1>
  433926:	mov    (%r12),%rdi
  43392a:	lea    0x2c003(%rip),%rsi        # 45f934 <_fini+0x2430>
  433931:	callq  413c40 <BIO_printf@plt>
  433936:	jmpq   43338a <X509_get0_pubkey_bitstr@plt+0x1c9ba>
  43393b:	mov    (%r12),%rdi
  43393f:	lea    0x3247a(%rip),%rsi        # 465dc0 <_fini+0x88bc>
  433946:	xor    %eax,%eax
  433948:	callq  413c40 <BIO_printf@plt>
  43394d:	jmpq   43338a <X509_get0_pubkey_bitstr@plt+0x1c9ba>
  433952:	callq  4152b0 <BIO_s_file@plt>
  433957:	mov    %rax,%rdi
  43395a:	callq  414a20 <BIO_new@plt>
  43395f:	test   %rax,%rax
  433962:	mov    %rax,%rdi
  433965:	mov    %rax,(%r12)
  433969:	je     43337c <X509_get0_pubkey_bitstr@plt+0x1c9ac>
  43396f:	mov    0x24260a(%rip),%rax        # 675f80 <_fini+0x218a7c>
  433976:	mov    $0x10,%edx
  43397b:	mov    $0x6a,%esi
  433980:	mov    (%rax),%rcx
  433983:	callq  412af0 <BIO_ctrl@plt>
  433988:	mov    (%r12),%rdi
  43398c:	jmpq   43337c <X509_get0_pubkey_bitstr@plt+0x1c9ac>
  433991:	cmpq   $0x0,0x18(%rsp)
  433997:	je     4335c9 <X509_get0_pubkey_bitstr@plt+0x1cbf9>
  43399d:	jmpq   4335aa <X509_get0_pubkey_bitstr@plt+0x1cbda>
  4339a2:	mov    %rdx,0x48(%rsp)
  4339a7:	mov    %r10,0x40(%rsp)
  4339ac:	mov    %r8,0x38(%rsp)
  4339b1:	mov    %r11,0x30(%rsp)
  4339b6:	callq  414280 <EVP_des_cbc@plt>
  4339bb:	mov    0x48(%rsp),%rdx
  4339c0:	mov    %rax,0x20(%rsp)
  4339c5:	mov    0x30(%rsp),%r11
  4339ca:	mov    0x38(%rsp),%r8
  4339cf:	mov    0x40(%rsp),%r10
  4339d4:	mov    %rdx,%rax
  4339d7:	jmpq   433471 <X509_get0_pubkey_bitstr@plt+0x1caa1>
  4339dc:	callq  414d20 <BN_set_word@plt>
  4339e1:	test   %eax,%eax
  4339e3:	mov    $0x1,%r15d
  4339e9:	je     433618 <X509_get0_pubkey_bitstr@plt+0x1cc48>
  4339ef:	mov    0x54(%rsp),%esi
  4339f3:	lea    0x70(%rsp),%rcx
  4339f8:	mov    %r13,%rdx
  4339fb:	mov    %rbx,%rdi
  4339fe:	callq  415ff0 <RSA_generate_key_ex@plt>
  433a03:	test   %eax,%eax
  433a05:	je     433618 <X509_get0_pubkey_bitstr@plt+0x1cc48>
  433a0b:	mov    (%r12),%rsi
  433a0f:	xor    %edi,%edi
  433a11:	callq  44a660 <X509_get0_pubkey_bitstr@plt+0x33c90>
  433a16:	mov    0x28(%rbx),%rax
  433a1a:	mov    0x8(%rax),%edx
  433a1d:	test   %edx,%edx
  433a1f:	jle    433c0c <X509_get0_pubkey_bitstr@plt+0x1d23c>
  433a25:	mov    (%rax),%rsi
  433a28:	xor    %eax,%eax
  433a2a:	mov    (%rsi,%rax,8),%rcx
  433a2e:	add    $0x1,%rax
  433a32:	cmp    %eax,%edx
  433a34:	jg     433a2a <X509_get0_pubkey_bitstr@plt+0x1d05a>
  433a36:	mov    %rcx,%rdx
  433a39:	mov    (%r12),%rdi
  433a3d:	lea    0x3267b(%rip),%rsi        # 4660bf <_fini+0x8bbb>
  433a44:	mov    %rdx,%rcx
  433a47:	xor    %eax,%eax
  433a49:	xor    %r15d,%r15d
  433a4c:	callq  413c40 <BIO_printf@plt>
  433a51:	mov    0x58(%rsp),%rax
  433a56:	lea    0x10fc3(%rip),%r9        # 444a20 <X509_get0_pubkey_bitstr@plt+0x2e050>
  433a5d:	xor    %r8d,%r8d
  433a60:	mov    0x20(%rsp),%rdx
  433a65:	xor    %ecx,%ecx
  433a67:	mov    %rbx,%rsi
  433a6a:	mov    %r14,%rdi
  433a6d:	mov    %rbp,0x68(%rsp)
  433a72:	mov    %rax,0x60(%rsp)
  433a77:	lea    0x60(%rsp),%rax
  433a7c:	mov    %rax,(%rsp)
  433a80:	callq  414460 <PEM_write_bio_RSAPrivateKey@plt>
  433a85:	test   %eax,%eax
  433a87:	sete   %r15b
  433a8b:	jmpq   433618 <X509_get0_pubkey_bitstr@plt+0x1cc48>
  433a90:	mov    %rdx,0x48(%rsp)
  433a95:	mov    %r10,0x40(%rsp)
  433a9a:	mov    %r8,0x38(%rsp)
  433a9f:	mov    %r11,0x30(%rsp)
  433aa4:	callq  415db0 <EVP_des_ede3_cbc@plt>
  433aa9:	jmpq   4339bb <X509_get0_pubkey_bitstr@plt+0x1cfeb>
  433aae:	mov    %rdx,0x48(%rsp)
  433ab3:	mov    %r10,0x40(%rsp)
  433ab8:	mov    %r8,0x38(%rsp)
  433abd:	mov    %r11,0x30(%rsp)
  433ac2:	callq  413810 <EVP_idea_cbc@plt>
  433ac7:	jmpq   4339bb <X509_get0_pubkey_bitstr@plt+0x1cfeb>
  433acc:	mov    %rdx,0x48(%rsp)
  433ad1:	mov    %r10,0x40(%rsp)
  433ad6:	mov    %r8,0x38(%rsp)
  433adb:	mov    %r11,0x30(%rsp)
  433ae0:	callq  4166e0 <EVP_seed_cbc@plt>
  433ae5:	jmpq   4339bb <X509_get0_pubkey_bitstr@plt+0x1cfeb>
  433aea:	mov    0x2423c7(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  433af1:	xor    %edx,%edx
  433af3:	mov    $0x6a,%esi
  433af8:	mov    %r14,%rdi
  433afb:	mov    (%rax),%rcx
  433afe:	callq  412af0 <BIO_ctrl@plt>
  433b03:	jmpq   433586 <X509_get0_pubkey_bitstr@plt+0x1cbb6>
  433b08:	mov    %rbp,%rdi
  433b0b:	callq  4142c0 <perror@plt>
  433b10:	jmpq   43338a <X509_get0_pubkey_bitstr@plt+0x1c9ba>
  433b15:	mov    %rdx,0x48(%rsp)
  433b1a:	mov    %r10,0x40(%rsp)
  433b1f:	mov    %r8,0x38(%rsp)
  433b24:	mov    %r11,0x30(%rsp)
  433b29:	callq  412f60 <EVP_aes_128_cbc@plt>
  433b2e:	jmpq   4339bb <X509_get0_pubkey_bitstr@plt+0x1cfeb>
  433b33:	mov    0x54(%rsp),%esi
  433b37:	lea    0x70(%rsp),%rcx
  433b3c:	mov    %r13,%rdx
  433b3f:	mov    %rbx,%rdi
  433b42:	callq  415010 <RSA_X931_generate_key_ex@plt>
  433b47:	test   %eax,%eax
  433b49:	je     433618 <X509_get0_pubkey_bitstr@plt+0x1cc48>
  433b4f:	jmpq   433a0b <X509_get0_pubkey_bitstr@plt+0x1d03b>
  433b54:	mov    %rdx,0x48(%rsp)
  433b59:	mov    %r10,0x40(%rsp)
  433b5e:	mov    %r8,0x38(%rsp)
  433b63:	mov    %r11,0x30(%rsp)
  433b68:	callq  4131e0 <EVP_aes_192_cbc@plt>
  433b6d:	jmpq   4339bb <X509_get0_pubkey_bitstr@plt+0x1cfeb>
  433b72:	mov    %rdx,0x48(%rsp)
  433b77:	mov    %r10,0x40(%rsp)
  433b7c:	mov    %r8,0x38(%rsp)
  433b81:	mov    %r11,0x30(%rsp)
  433b86:	callq  4129c0 <EVP_aes_256_cbc@plt>
  433b8b:	jmpq   4339bb <X509_get0_pubkey_bitstr@plt+0x1cfeb>
  433b90:	mov    %rdx,0x48(%rsp)
  433b95:	mov    %r10,0x40(%rsp)
  433b9a:	mov    %r8,0x38(%rsp)
  433b9f:	mov    %r11,0x30(%rsp)
  433ba4:	callq  415f60 <EVP_camellia_128_cbc@plt>
  433ba9:	jmpq   4339bb <X509_get0_pubkey_bitstr@plt+0x1cfeb>
  433bae:	callq  416420 <RAND_status@plt>
  433bb3:	test   %eax,%eax
  433bb5:	jne    4335c9 <X509_get0_pubkey_bitstr@plt+0x1cbf9>
  433bbb:	mov    (%r12),%rdi
  433bbf:	lea    0x2c3ca(%rip),%rsi        # 45ff90 <_fini+0x2a8c>
  433bc6:	callq  413c40 <BIO_printf@plt>
  433bcb:	jmpq   4335c9 <X509_get0_pubkey_bitstr@plt+0x1cbf9>
  433bd0:	mov    %rdx,0x48(%rsp)
  433bd5:	mov    %r10,0x40(%rsp)
  433bda:	mov    %r8,0x38(%rsp)
  433bdf:	mov    %r11,0x30(%rsp)
  433be4:	callq  4160b0 <EVP_camellia_256_cbc@plt>
  433be9:	jmpq   4339bb <X509_get0_pubkey_bitstr@plt+0x1cfeb>
  433bee:	mov    %rdx,0x48(%rsp)
  433bf3:	mov    %r10,0x40(%rsp)
  433bf8:	mov    %r8,0x38(%rsp)
  433bfd:	mov    %r11,0x30(%rsp)
  433c02:	callq  413460 <EVP_camellia_192_cbc@plt>
  433c07:	jmpq   4339bb <X509_get0_pubkey_bitstr@plt+0x1cfeb>
  433c0c:	xor    %edx,%edx
  433c0e:	jmpq   433a39 <X509_get0_pubkey_bitstr@plt+0x1d069>
  433c13:	callq  414c30 <__stack_chk_fail@plt>
  433c18:	cmp    $0x66,%cl
  433c1b:	je     4334f6 <X509_get0_pubkey_bitstr@plt+0x1cb26>
  433c21:	jmpq   433495 <X509_get0_pubkey_bitstr@plt+0x1cac5>
  433c26:	nopw   %cs:0x0(%rax,%rax,1)
  433c30:	push   %r15
  433c32:	push   %r14
  433c34:	push   %r13
  433c36:	push   %r12
  433c38:	push   %rbp
  433c39:	mov    %rsi,%rbp
  433c3c:	mov    $0x1,%esi
  433c41:	push   %rbx
  433c42:	mov    %edi,%ebx
  433c44:	mov    $0xd,%edi
  433c49:	sub    $0x48,%rsp
  433c4d:	mov    %fs:0x28,%rax
  433c56:	mov    %rax,0x38(%rsp)
  433c5b:	xor    %eax,%eax
  433c5d:	movq   $0x0,0x30(%rsp)
  433c66:	callq  414ee0 <signal@plt>
  433c6b:	lea    0x2470ce(%rip),%r14        # 67ad40 <_edata+0x38>
  433c72:	mov    (%r14),%rdi
  433c75:	test   %rdi,%rdi
  433c78:	je     4342c0 <X509_get0_pubkey_bitstr@plt+0x1d8f0>
  433c7e:	xor    %esi,%esi
  433c80:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  433c85:	test   %eax,%eax
  433c87:	je     433d90 <X509_get0_pubkey_bitstr@plt+0x1d3c0>
  433c8d:	sub    $0x1,%ebx
  433c90:	add    $0x8,%rbp
  433c94:	test   %ebx,%ebx
  433c96:	jle    433df0 <X509_get0_pubkey_bitstr@plt+0x1d420>
  433c9c:	xor    %r10d,%r10d
  433c9f:	xor    %r8d,%r8d
  433ca2:	xor    %r9d,%r9d
  433ca5:	movq   $0x0,0x18(%rsp)
  433cae:	movq   $0x0,0x10(%rsp)
  433cb7:	xor    %r15d,%r15d
  433cba:	lea    0x2a185(%rip),%r13        # 45de46 <_fini+0x942>
  433cc1:	mov    $0x5,%r12d
  433cc7:	mov    %r10,%rax
  433cca:	jmp    433cec <X509_get0_pubkey_bitstr@plt+0x1d31c>
  433ccc:	nopl   0x0(%rax)
  433cd0:	sub    $0x1,%ebx
  433cd3:	je     433df0 <X509_get0_pubkey_bitstr@plt+0x1d420>
  433cd9:	mov    0x8(%rbp),%r15
  433cdd:	lea    0x8(%rbp),%rdx
  433ce1:	sub    $0x1,%ebx
  433ce4:	lea    0x8(%rdx),%rbp
  433ce8:	test   %ebx,%ebx
  433cea:	jle    433d30 <X509_get0_pubkey_bitstr@plt+0x1d360>
  433cec:	mov    0x0(%rbp),%rdx
  433cf0:	mov    %r13,%rdi
  433cf3:	mov    %r12,%rcx
  433cf6:	mov    %rdx,%rsi
  433cf9:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  433cfb:	je     433cd0 <X509_get0_pubkey_bitstr@plt+0x1d300>
  433cfd:	lea    0x2a4f4(%rip),%rdi        # 45e1f8 <_fini+0xcf4>
  433d04:	mov    $0x9,%ecx
  433d09:	mov    %rdx,%rsi
  433d0c:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  433d0e:	jne    433f28 <X509_get0_pubkey_bitstr@plt+0x1d558>
  433d14:	sub    $0x1,%ebx
  433d17:	je     433df0 <X509_get0_pubkey_bitstr@plt+0x1d420>
  433d1d:	lea    0x8(%rbp),%rdx
  433d21:	sub    $0x1,%ebx
  433d24:	mov    0x8(%rbp),%r9
  433d28:	test   %ebx,%ebx
  433d2a:	lea    0x8(%rdx),%rbp
  433d2e:	jg     433cec <X509_get0_pubkey_bitstr@plt+0x1d31c>
  433d30:	cmpq   $0x0,0x18(%rsp)
  433d36:	mov    %r9,0x28(%rsp)
  433d3b:	mov    %rax,0x20(%rsp)
  433d40:	je     433df0 <X509_get0_pubkey_bitstr@plt+0x1d420>
  433d46:	mov    (%r14),%rdi
  433d49:	xor    %edx,%edx
  433d4b:	mov    %r8,%rsi
  433d4e:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  433d53:	mov    0x28(%rsp),%r9
  433d58:	mov    (%r14),%rdi
  433d5b:	lea    0x30(%rsp),%r8
  433d60:	xor    %ecx,%ecx
  433d62:	xor    %esi,%esi
  433d64:	mov    %r9,%rdx
  433d67:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  433d6c:	test   %eax,%eax
  433d6e:	mov    0x20(%rsp),%r10
  433d73:	jne    43413a <X509_get0_pubkey_bitstr@plt+0x1d76a>
  433d79:	mov    (%r14),%rdi
  433d7c:	lea    0x2bbb1(%rip),%rsi        # 45f934 <_fini+0x2430>
  433d83:	xor    %r12d,%r12d
  433d86:	xor    %ebx,%ebx
  433d88:	callq  413c40 <BIO_printf@plt>
  433d8d:	jmp    433d95 <X509_get0_pubkey_bitstr@plt+0x1d3c5>
  433d8f:	nop
  433d90:	xor    %r12d,%r12d
  433d93:	xor    %ebx,%ebx
  433d95:	mov    (%r14),%rdi
  433d98:	mov    $0x1,%ebp
  433d9d:	callq  413f40 <ERR_print_errors@plt>
  433da2:	test   %r12,%r12
  433da5:	je     433daf <X509_get0_pubkey_bitstr@plt+0x1d3df>
  433da7:	mov    %r12,%rdi
  433daa:	callq  416570 <BIO_free_all@plt>
  433daf:	test   %rbx,%rbx
  433db2:	je     433dbc <X509_get0_pubkey_bitstr@plt+0x1d3ec>
  433db4:	mov    %rbx,%rdi
  433db7:	callq  4159d0 <DSA_free@plt>
  433dbc:	mov    0x30(%rsp),%rdi
  433dc1:	test   %rdi,%rdi
  433dc4:	je     433dcb <X509_get0_pubkey_bitstr@plt+0x1d3fb>
  433dc6:	callq  415020 <CRYPTO_free@plt>
  433dcb:	mov    0x38(%rsp),%rbx
  433dd0:	xor    %fs:0x28,%rbx
  433dd9:	mov    %ebp,%eax
  433ddb:	jne    434461 <X509_get0_pubkey_bitstr@plt+0x1da91>
  433de1:	add    $0x48,%rsp
  433de5:	pop    %rbx
  433de6:	pop    %rbp
  433de7:	pop    %r12
  433de9:	pop    %r13
  433deb:	pop    %r14
  433ded:	pop    %r15
  433def:	retq   
  433df0:	mov    (%r14),%rdi
  433df3:	lea    0x322de(%rip),%rsi        # 4660d8 <_fini+0x8bd4>
  433dfa:	xor    %eax,%eax
  433dfc:	callq  413c40 <BIO_printf@plt>
  433e01:	mov    (%r14),%rdi
  433e04:	lea    0x322f5(%rip),%rsi        # 466100 <_fini+0x8bfc>
  433e0b:	xor    %eax,%eax
  433e0d:	callq  413c40 <BIO_printf@plt>
  433e12:	mov    (%r14),%rdi
  433e15:	lea    0x3230c(%rip),%rsi        # 466128 <_fini+0x8c24>
  433e1c:	xor    %eax,%eax
  433e1e:	callq  413c40 <BIO_printf@plt>
  433e23:	mov    (%r14),%rdi
  433e26:	lea    0x3233b(%rip),%rsi        # 466168 <_fini+0x8c64>
  433e2d:	xor    %eax,%eax
  433e2f:	callq  413c40 <BIO_printf@plt>
  433e34:	mov    (%r14),%rdi
  433e37:	lea    0x3237a(%rip),%rsi        # 4661b8 <_fini+0x8cb4>
  433e3e:	xor    %eax,%eax
  433e40:	callq  413c40 <BIO_printf@plt>
  433e45:	mov    (%r14),%rdi
  433e48:	lea    0x32212(%rip),%rsi        # 466061 <_fini+0x8b5d>
  433e4f:	xor    %eax,%eax
  433e51:	callq  413c40 <BIO_printf@plt>
  433e56:	mov    (%r14),%rdi
  433e59:	lea    0x32090(%rip),%rsi        # 465ef0 <_fini+0x89ec>
  433e60:	xor    %eax,%eax
  433e62:	callq  413c40 <BIO_printf@plt>
  433e67:	mov    (%r14),%rdi
  433e6a:	lea    0x2f2a5(%rip),%rsi        # 463116 <_fini+0x5c12>
  433e71:	xor    %eax,%eax
  433e73:	callq  413c40 <BIO_printf@plt>
  433e78:	mov    (%r14),%rdi
  433e7b:	lea    0x2f55e(%rip),%rsi        # 4633e0 <_fini+0x5edc>
  433e82:	xor    %eax,%eax
  433e84:	callq  413c40 <BIO_printf@plt>
  433e89:	mov    (%r14),%rdi
  433e8c:	lea    0x2f585(%rip),%rsi        # 463418 <_fini+0x5f14>
  433e93:	xor    %eax,%eax
  433e95:	callq  413c40 <BIO_printf@plt>
  433e9a:	mov    (%r14),%rdi
  433e9d:	lea    0x2f5a4(%rip),%rsi        # 463448 <_fini+0x5f44>
  433ea4:	xor    %eax,%eax
  433ea6:	callq  413c40 <BIO_printf@plt>
  433eab:	mov    (%r14),%rdi
  433eae:	lea    0x2ccf3(%rip),%rsi        # 460ba8 <_fini+0x36a4>
  433eb5:	xor    %eax,%eax
  433eb7:	callq  413c40 <BIO_printf@plt>
  433ebc:	mov    (%r14),%rdi
  433ebf:	lea    0x2a464(%rip),%rsi        # 45e32a <_fini+0xe26>
  433ec6:	mov    $0x3a,%ecx
  433ecb:	mov    $0x3a,%edx
  433ed0:	xor    %eax,%eax
  433ed2:	callq  413c40 <BIO_printf@plt>
  433ed7:	mov    (%r14),%rdi
  433eda:	lea    0x2ccff(%rip),%rsi        # 460be0 <_fini+0x36dc>
  433ee1:	xor    %eax,%eax
  433ee3:	callq  413c40 <BIO_printf@plt>
  433ee8:	mov    (%r14),%rdi
  433eeb:	lea    0x2cd36(%rip),%rsi        # 460c28 <_fini+0x3724>
  433ef2:	xor    %eax,%eax
  433ef4:	callq  413c40 <BIO_printf@plt>
  433ef9:	mov    (%r14),%rdi
  433efc:	lea    0x32360(%rip),%rsi        # 466263 <_fini+0x8d5f>
  433f03:	xor    %eax,%eax
  433f05:	callq  413c40 <BIO_printf@plt>
  433f0a:	mov    (%r14),%rdi
  433f0d:	lea    0x322e4(%rip),%rsi        # 4661f8 <_fini+0x8cf4>
  433f14:	xor    %eax,%eax
  433f16:	callq  413c40 <BIO_printf@plt>
  433f1b:	xor    %r12d,%r12d
  433f1e:	xor    %ebx,%ebx
  433f20:	jmpq   433d95 <X509_get0_pubkey_bitstr@plt+0x1d3c5>
  433f25:	nopl   (%rax)
  433f28:	lea    0x29c33(%rip),%rdi        # 45db62 <_fini+0x65e>
  433f2f:	mov    $0x8,%ecx
  433f34:	mov    %rdx,%rsi
  433f37:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  433f39:	jne    433f58 <X509_get0_pubkey_bitstr@plt+0x1d588>
  433f3b:	sub    $0x1,%ebx
  433f3e:	je     433df0 <X509_get0_pubkey_bitstr@plt+0x1d420>
  433f44:	lea    0x8(%rbp),%rdx
  433f48:	mov    0x8(%rbp),%r8
  433f4c:	jmpq   433ce1 <X509_get0_pubkey_bitstr@plt+0x1d311>
  433f51:	nopl   0x0(%rax)
  433f58:	lea    0x2a2a2(%rip),%rdi        # 45e201 <_fini+0xcfd>
  433f5f:	mov    $0x6,%ecx
  433f64:	mov    %rdx,%rsi
  433f67:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  433f69:	jne    433f90 <X509_get0_pubkey_bitstr@plt+0x1d5c0>
  433f6b:	sub    $0x1,%ebx
  433f6e:	je     433df0 <X509_get0_pubkey_bitstr@plt+0x1d420>
  433f74:	mov    0x8(%rbp),%rdi
  433f78:	lea    0x8(%rbp),%rdx
  433f7c:	mov    %rdi,0x10(%rsp)
  433f81:	jmpq   433ce1 <X509_get0_pubkey_bitstr@plt+0x1d311>
  433f86:	nopw   %cs:0x0(%rax,%rax,1)
  433f90:	movzbl (%rdx),%r10d
  433f94:	cmp    $0x2d,%r10b
  433f98:	jne    433fa4 <X509_get0_pubkey_bitstr@plt+0x1d5d4>
  433f9a:	cmpb   $0x0,0x1(%rdx)
  433f9e:	je     433df0 <X509_get0_pubkey_bitstr@plt+0x1d420>
  433fa4:	lea    0x320be(%rip),%rdi        # 466069 <_fini+0x8b65>
  433fab:	mov    %rdx,%rsi
  433fae:	mov    %r12,%rcx
  433fb1:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  433fb3:	je     4340b0 <X509_get0_pubkey_bitstr@plt+0x1d6e0>
  433fb9:	lea    0x320ae(%rip),%rdi        # 46606e <_fini+0x8b6a>
  433fc0:	mov    $0x6,%ecx
  433fc5:	mov    %rdx,%rsi
  433fc8:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  433fca:	je     4340f8 <X509_get0_pubkey_bitstr@plt+0x1d728>
  433fd0:	lea    0x3209d(%rip),%rdi        # 466074 <_fini+0x8b70>
  433fd7:	mov    $0x6,%ecx
  433fdc:	mov    %rdx,%rsi
  433fdf:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  433fe1:	je     434119 <X509_get0_pubkey_bitstr@plt+0x1d749>
  433fe7:	lea    0x3208c(%rip),%rdi        # 46607a <_fini+0x8b76>
  433fee:	mov    $0x6,%ecx
  433ff3:	mov    %rdx,%rsi
  433ff6:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  433ff8:	je     4340d1 <X509_get0_pubkey_bitstr@plt+0x1d701>
  433ffe:	lea    0x3207b(%rip),%rdi        # 466080 <_fini+0x8b7c>
  434005:	mov    $0x8,%ecx
  43400a:	mov    %rdx,%rsi
  43400d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43400f:	je     4342fd <X509_get0_pubkey_bitstr@plt+0x1d92d>
  434015:	lea    0x3206c(%rip),%rdi        # 466088 <_fini+0x8b84>
  43401c:	mov    $0x8,%ecx
  434021:	mov    %rdx,%rsi
  434024:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  434026:	je     434368 <X509_get0_pubkey_bitstr@plt+0x1d998>
  43402c:	lea    0x3205d(%rip),%rdi        # 466090 <_fini+0x8b8c>
  434033:	mov    $0x8,%ecx
  434038:	mov    %rdx,%rsi
  43403b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43403d:	je     434389 <X509_get0_pubkey_bitstr@plt+0x1d9b9>
  434043:	lea    0x3204e(%rip),%rdi        # 466098 <_fini+0x8b94>
  43404a:	mov    $0xd,%ecx
  43404f:	mov    %rdx,%rsi
  434052:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  434054:	je     4343aa <X509_get0_pubkey_bitstr@plt+0x1d9da>
  43405a:	lea    0x32044(%rip),%rdi        # 4660a5 <_fini+0x8ba1>
  434061:	mov    $0xd,%ecx
  434066:	mov    %rdx,%rsi
  434069:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43406b:	je     434347 <X509_get0_pubkey_bitstr@plt+0x1d977>
  434071:	lea    0x3203a(%rip),%rdi        # 4660b2 <_fini+0x8bae>
  434078:	mov    $0xd,%ecx
  43407d:	mov    %rdx,%rsi
  434080:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  434082:	je     4343dc <X509_get0_pubkey_bitstr@plt+0x1da0c>
  434088:	cmp    $0x2d,%r10b
  43408c:	je     433df0 <X509_get0_pubkey_bitstr@plt+0x1d420>
  434092:	cmpq   $0x0,0x18(%rsp)
  434098:	jne    433df0 <X509_get0_pubkey_bitstr@plt+0x1d420>
  43409e:	mov    %rdx,0x18(%rsp)
  4340a3:	mov    %rbp,%rdx
  4340a6:	jmpq   433ce1 <X509_get0_pubkey_bitstr@plt+0x1d311>
  4340ab:	nopl   0x0(%rax,%rax,1)
  4340b0:	mov    %r8,0x28(%rsp)
  4340b5:	mov    %r9,0x20(%rsp)
  4340ba:	callq  414280 <EVP_des_cbc@plt>
  4340bf:	mov    %rbp,%rdx
  4340c2:	mov    0x20(%rsp),%r9
  4340c7:	mov    0x28(%rsp),%r8
  4340cc:	jmpq   433ce1 <X509_get0_pubkey_bitstr@plt+0x1d311>
  4340d1:	mov    %r8,0x28(%rsp)
  4340d6:	mov    %r9,0x20(%rsp)
  4340db:	callq  4166e0 <EVP_seed_cbc@plt>
  4340e0:	mov    %rbp,%rdx
  4340e3:	mov    0x20(%rsp),%r9
  4340e8:	mov    0x28(%rsp),%r8
  4340ed:	jmpq   433ce1 <X509_get0_pubkey_bitstr@plt+0x1d311>
  4340f2:	nopw   0x0(%rax,%rax,1)
  4340f8:	mov    %r8,0x28(%rsp)
  4340fd:	mov    %r9,0x20(%rsp)
  434102:	callq  415db0 <EVP_des_ede3_cbc@plt>
  434107:	mov    %rbp,%rdx
  43410a:	mov    0x20(%rsp),%r9
  43410f:	mov    0x28(%rsp),%r8
  434114:	jmpq   433ce1 <X509_get0_pubkey_bitstr@plt+0x1d311>
  434119:	mov    %r8,0x28(%rsp)
  43411e:	mov    %r9,0x20(%rsp)
  434123:	callq  413810 <EVP_idea_cbc@plt>
  434128:	mov    %rbp,%rdx
  43412b:	mov    0x20(%rsp),%r9
  434130:	mov    0x28(%rsp),%r8
  434135:	jmpq   433ce1 <X509_get0_pubkey_bitstr@plt+0x1d311>
  43413a:	mov    %r10,0x20(%rsp)
  43413f:	callq  4152b0 <BIO_s_file@plt>
  434144:	mov    %rax,%rdi
  434147:	callq  414a20 <BIO_new@plt>
  43414c:	mov    0x18(%rsp),%rcx
  434151:	mov    $0x3,%edx
  434156:	mov    $0x6c,%esi
  43415b:	mov    %rax,%rdi
  43415e:	mov    %rax,%rbp
  434161:	callq  412af0 <BIO_ctrl@plt>
  434166:	test   %rax,%rax
  434169:	mov    0x20(%rsp),%r10
  43416e:	je     43431e <X509_get0_pubkey_bitstr@plt+0x1d94e>
  434174:	xor    %ecx,%ecx
  434176:	xor    %edx,%edx
  434178:	xor    %esi,%esi
  43417a:	mov    %rbp,%rdi
  43417d:	mov    %r10,0x18(%rsp)
  434182:	callq  415380 <PEM_read_bio_DSAparams@plt>
  434187:	test   %rax,%rax
  43418a:	mov    %rax,%rbx
  43418d:	mov    0x18(%rsp),%r10
  434192:	je     4343fd <X509_get0_pubkey_bitstr@plt+0x1da2d>
  434198:	mov    %rbp,%rdi
  43419b:	mov    %r10,0x18(%rsp)
  4341a0:	callq  413960 <BIO_free@plt>
  4341a5:	callq  4152b0 <BIO_s_file@plt>
  4341aa:	mov    %rax,%rdi
  4341ad:	callq  414a20 <BIO_new@plt>
  4341b2:	test   %rax,%rax
  4341b5:	mov    %rax,%r12
  4341b8:	je     433d95 <X509_get0_pubkey_bitstr@plt+0x1d3c5>
  4341be:	test   %r15,%r15
  4341c1:	mov    0x18(%rsp),%r10
  4341c6:	je     434413 <X509_get0_pubkey_bitstr@plt+0x1da43>
  4341cc:	mov    %r15,%rcx
  4341cf:	mov    $0x5,%edx
  4341d4:	mov    $0x6c,%esi
  4341d9:	mov    %rax,%rdi
  4341dc:	mov    %r10,0x18(%rsp)
  4341e1:	callq  412af0 <BIO_ctrl@plt>
  4341e6:	test   %rax,%rax
  4341e9:	mov    0x18(%rsp),%r10
  4341ee:	jle    434436 <X509_get0_pubkey_bitstr@plt+0x1da66>
  4341f4:	mov    (%r14),%rsi
  4341f7:	xor    %edi,%edi
  4341f9:	mov    $0x1,%edx
  4341fe:	mov    %r10,0x18(%rsp)
  434203:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  434208:	test   %eax,%eax
  43420a:	mov    0x18(%rsp),%r10
  43420f:	jne    4343cb <X509_get0_pubkey_bitstr@plt+0x1d9fb>
  434215:	cmpq   $0x0,0x10(%rsp)
  43421b:	je     434443 <X509_get0_pubkey_bitstr@plt+0x1da73>
  434221:	mov    0x10(%rsp),%rdi
  434226:	mov    %r10,0x18(%rsp)
  43422b:	callq  44a710 <X509_get0_pubkey_bitstr@plt+0x33d40>
  434230:	mov    (%r14),%rdi
  434233:	lea    0x2bb57(%rip),%rsi        # 45fd91 <_fini+0x288d>
  43423a:	mov    %rax,%rdx
  43423d:	xor    %eax,%eax
  43423f:	callq  413c40 <BIO_printf@plt>
  434244:	mov    0x18(%rsp),%r10
  434249:	mov    0x18(%rbx),%rdi
  43424d:	mov    %r10,0x10(%rsp)
  434252:	callq  415810 <BN_num_bits@plt>
  434257:	mov    (%r14),%rdi
  43425a:	lea    0x32012(%rip),%rsi        # 466273 <_fini+0x8d6f>
  434261:	mov    %eax,%edx
  434263:	xor    %eax,%eax
  434265:	callq  413c40 <BIO_printf@plt>
  43426a:	mov    %rbx,%rdi
  43426d:	callq  414be0 <DSA_generate_key@plt>
  434272:	test   %eax,%eax
  434274:	je     433d95 <X509_get0_pubkey_bitstr@plt+0x1d3c5>
  43427a:	mov    (%r14),%rsi
  43427d:	xor    %edi,%edi
  43427f:	xor    %ebp,%ebp
  434281:	callq  44a660 <X509_get0_pubkey_bitstr@plt+0x33c90>
  434286:	mov    0x30(%rsp),%rax
  43428b:	mov    0x10(%rsp),%r10
  434290:	xor    %r9d,%r9d
  434293:	xor    %r8d,%r8d
  434296:	xor    %ecx,%ecx
  434298:	mov    %rbx,%rsi
  43429b:	mov    %r12,%rdi
  43429e:	mov    %rax,(%rsp)
  4342a2:	mov    %r10,%rdx
  4342a5:	callq  415000 <PEM_write_bio_DSAPrivateKey@plt>
  4342aa:	test   %eax,%eax
  4342ac:	jne    433da7 <X509_get0_pubkey_bitstr@plt+0x1d3d7>
  4342b2:	jmpq   433d95 <X509_get0_pubkey_bitstr@plt+0x1d3c5>
  4342b7:	nopw   0x0(%rax,%rax,1)
  4342c0:	callq  4152b0 <BIO_s_file@plt>
  4342c5:	mov    %rax,%rdi
  4342c8:	callq  414a20 <BIO_new@plt>
  4342cd:	test   %rax,%rax
  4342d0:	mov    %rax,%rdi
  4342d3:	mov    %rax,(%r14)
  4342d6:	je     433c7e <X509_get0_pubkey_bitstr@plt+0x1d2ae>
  4342dc:	mov    0x241c9d(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  4342e3:	mov    $0x6a,%esi
  4342e8:	mov    (%rdx),%rcx
  4342eb:	mov    $0x10,%edx
  4342f0:	callq  412af0 <BIO_ctrl@plt>
  4342f5:	mov    (%r14),%rdi
  4342f8:	jmpq   433c7e <X509_get0_pubkey_bitstr@plt+0x1d2ae>
  4342fd:	mov    %r8,0x28(%rsp)
  434302:	mov    %r9,0x20(%rsp)
  434307:	callq  412f60 <EVP_aes_128_cbc@plt>
  43430c:	mov    %rbp,%rdx
  43430f:	mov    0x20(%rsp),%r9
  434314:	mov    0x28(%rsp),%r8
  434319:	jmpq   433ce1 <X509_get0_pubkey_bitstr@plt+0x1d311>
  43431e:	mov    0x18(%rsp),%rdi
  434323:	callq  4142c0 <perror@plt>
  434328:	mov    (%r14),%rdi
  43432b:	callq  413f40 <ERR_print_errors@plt>
  434330:	test   %rbp,%rbp
  434333:	je     43433d <X509_get0_pubkey_bitstr@plt+0x1d96d>
  434335:	mov    %rbp,%rdi
  434338:	callq  413960 <BIO_free@plt>
  43433d:	mov    $0x1,%ebp
  434342:	jmpq   433dbc <X509_get0_pubkey_bitstr@plt+0x1d3ec>
  434347:	mov    %r8,0x28(%rsp)
  43434c:	mov    %r9,0x20(%rsp)
  434351:	callq  413460 <EVP_camellia_192_cbc@plt>
  434356:	mov    %rbp,%rdx
  434359:	mov    0x20(%rsp),%r9
  43435e:	mov    0x28(%rsp),%r8
  434363:	jmpq   433ce1 <X509_get0_pubkey_bitstr@plt+0x1d311>
  434368:	mov    %r8,0x28(%rsp)
  43436d:	mov    %r9,0x20(%rsp)
  434372:	callq  4131e0 <EVP_aes_192_cbc@plt>
  434377:	mov    %rbp,%rdx
  43437a:	mov    0x20(%rsp),%r9
  43437f:	mov    0x28(%rsp),%r8
  434384:	jmpq   433ce1 <X509_get0_pubkey_bitstr@plt+0x1d311>
  434389:	mov    %r8,0x28(%rsp)
  43438e:	mov    %r9,0x20(%rsp)
  434393:	callq  4129c0 <EVP_aes_256_cbc@plt>
  434398:	mov    %rbp,%rdx
  43439b:	mov    0x20(%rsp),%r9
  4343a0:	mov    0x28(%rsp),%r8
  4343a5:	jmpq   433ce1 <X509_get0_pubkey_bitstr@plt+0x1d311>
  4343aa:	mov    %r8,0x28(%rsp)
  4343af:	mov    %r9,0x20(%rsp)
  4343b4:	callq  415f60 <EVP_camellia_128_cbc@plt>
  4343b9:	mov    %rbp,%rdx
  4343bc:	mov    0x20(%rsp),%r9
  4343c1:	mov    0x28(%rsp),%r8
  4343c6:	jmpq   433ce1 <X509_get0_pubkey_bitstr@plt+0x1d311>
  4343cb:	cmpq   $0x0,0x10(%rsp)
  4343d1:	je     434249 <X509_get0_pubkey_bitstr@plt+0x1d879>
  4343d7:	jmpq   434221 <X509_get0_pubkey_bitstr@plt+0x1d851>
  4343dc:	mov    %r8,0x28(%rsp)
  4343e1:	mov    %r9,0x20(%rsp)
  4343e6:	callq  4160b0 <EVP_camellia_256_cbc@plt>
  4343eb:	mov    %rbp,%rdx
  4343ee:	mov    0x20(%rsp),%r9
  4343f3:	mov    0x28(%rsp),%r8
  4343f8:	jmpq   433ce1 <X509_get0_pubkey_bitstr@plt+0x1d311>
  4343fd:	mov    (%r14),%rdi
  434400:	lea    0x31e39(%rip),%rsi        # 466240 <_fini+0x8d3c>
  434407:	xor    %eax,%eax
  434409:	callq  413c40 <BIO_printf@plt>
  43440e:	jmpq   434328 <X509_get0_pubkey_bitstr@plt+0x1d958>
  434413:	mov    0x241a9e(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  43441a:	xor    %edx,%edx
  43441c:	mov    $0x6a,%esi
  434421:	mov    %r12,%rdi
  434424:	mov    (%rax),%rcx
  434427:	callq  412af0 <BIO_ctrl@plt>
  43442c:	mov    0x18(%rsp),%r10
  434431:	jmpq   4341f4 <X509_get0_pubkey_bitstr@plt+0x1d824>
  434436:	mov    %r15,%rdi
  434439:	callq  4142c0 <perror@plt>
  43443e:	jmpq   433d95 <X509_get0_pubkey_bitstr@plt+0x1d3c5>
  434443:	mov    (%r14),%rdi
  434446:	lea    0x2bb43(%rip),%rsi        # 45ff90 <_fini+0x2a8c>
  43444d:	mov    %r10,0x10(%rsp)
  434452:	callq  413c40 <BIO_printf@plt>
  434457:	mov    0x10(%rsp),%r10
  43445c:	jmpq   434249 <X509_get0_pubkey_bitstr@plt+0x1d879>
  434461:	callq  414c30 <__stack_chk_fail@plt>
  434466:	nopw   %cs:0x0(%rax,%rax,1)
  434470:	push   %rbp
  434471:	mov    %rdi,%rbp
  434474:	push   %rbx
  434475:	sub    $0x18,%rsp
  434479:	mov    %fs:0x28,%rax
  434482:	mov    %rax,0x8(%rsp)
  434487:	xor    %eax,%eax
  434489:	movb   $0x2a,0x7(%rsp)
  43448e:	callq  413d00 <EVP_PKEY_CTX_get_app_data@plt>
  434493:	xor    %esi,%esi
  434495:	mov    %rbp,%rdi
  434498:	mov    %rax,%rbx
  43449b:	callq  4153e0 <EVP_PKEY_CTX_get_keygen_info@plt>
  4344a0:	test   %eax,%eax
  4344a2:	jne    4344f0 <X509_get0_pubkey_bitstr@plt+0x1db20>
  4344a4:	movb   $0x2e,0x7(%rsp)
  4344a9:	lea    0x7(%rsp),%rsi
  4344ae:	mov    $0x1,%edx
  4344b3:	mov    %rbx,%rdi
  4344b6:	callq  412db0 <BIO_write@plt>
  4344bb:	xor    %ecx,%ecx
  4344bd:	xor    %edx,%edx
  4344bf:	mov    $0xb,%esi
  4344c4:	mov    %rbx,%rdi
  4344c7:	callq  412af0 <BIO_ctrl@plt>
  4344cc:	mov    0x8(%rsp),%rcx
  4344d1:	xor    %fs:0x28,%rcx
  4344da:	mov    $0x1,%eax
  4344df:	jne    43450c <X509_get0_pubkey_bitstr@plt+0x1db3c>
  4344e1:	add    $0x18,%rsp
  4344e5:	pop    %rbx
  4344e6:	pop    %rbp
  4344e7:	retq   
  4344e8:	nopl   0x0(%rax,%rax,1)
  4344f0:	cmp    $0x1,%eax
  4344f3:	jne    434500 <X509_get0_pubkey_bitstr@plt+0x1db30>
  4344f5:	movb   $0x2b,0x7(%rsp)
  4344fa:	jmp    4344a9 <X509_get0_pubkey_bitstr@plt+0x1dad9>
  4344fc:	nopl   0x0(%rax)
  434500:	cmp    $0x2,%eax
  434503:	jne    434511 <X509_get0_pubkey_bitstr@plt+0x1db41>
  434505:	movb   $0x2a,0x7(%rsp)
  43450a:	jmp    4344a9 <X509_get0_pubkey_bitstr@plt+0x1dad9>
  43450c:	callq  414c30 <__stack_chk_fail@plt>
  434511:	cmp    $0x3,%eax
  434514:	jne    4344a9 <X509_get0_pubkey_bitstr@plt+0x1dad9>
  434516:	movb   $0xa,0x7(%rsp)
  43451b:	jmp    4344a9 <X509_get0_pubkey_bitstr@plt+0x1dad9>
  43451d:	nopl   (%rax)
  434520:	push   %r15
  434522:	push   %r14
  434524:	push   %r13
  434526:	push   %r12
  434528:	push   %rbp
  434529:	mov    %rdi,%rbp
  43452c:	push   %rbx
  43452d:	mov    %rsi,%rbx
  434530:	sub    $0x28,%rsp
  434534:	mov    %fs:0x28,%rax
  43453d:	mov    %rax,0x18(%rsp)
  434542:	xor    %eax,%eax
  434544:	cmpq   $0x0,(%rsi)
  434548:	movq   $0x0,0x10(%rsp)
  434551:	je     434588 <X509_get0_pubkey_bitstr@plt+0x1dbb8>
  434553:	lea    0x31d36(%rip),%rsi        # 466290 <_fini+0x8d8c>
  43455a:	callq  413b70 <BIO_puts@plt>
  43455f:	xor    %eax,%eax
  434561:	mov    0x18(%rsp),%rcx
  434566:	xor    %fs:0x28,%rcx
  43456f:	jne    4346b5 <X509_get0_pubkey_bitstr@plt+0x1dce5>
  434575:	add    $0x28,%rsp
  434579:	pop    %rbx
  43457a:	pop    %rbp
  43457b:	pop    %r12
  43457d:	pop    %r13
  43457f:	pop    %r14
  434581:	pop    %r15
  434583:	retq   
  434584:	nopl   0x0(%rax)
  434588:	mov    %rdx,%r12
  43458b:	lea    0x10(%rsp),%rdi
  434590:	mov    $0xffffffff,%edx
  434595:	mov    %r12,%rsi
  434598:	mov    %rcx,%r13
  43459b:	mov    %r8d,%r14d
  43459e:	callq  413640 <EVP_PKEY_asn1_find_str@plt>
  4345a3:	test   %rax,%rax
  4345a6:	mov    %rax,%r15
  4345a9:	je     434618 <X509_get0_pubkey_bitstr@plt+0x1dc48>
  4345ab:	test   %r15,%r15
  4345ae:	je     434670 <X509_get0_pubkey_bitstr@plt+0x1dca0>
  4345b4:	callq  412890 <ERR_clear_error@plt>
  4345b9:	lea    0xc(%rsp),%rdi
  4345be:	xor    %r8d,%r8d
  4345c1:	xor    %ecx,%ecx
  4345c3:	xor    %edx,%edx
  4345c5:	xor    %esi,%esi
  4345c7:	mov    %r15,%r9
  4345ca:	callq  414ec0 <EVP_PKEY_asn1_get0_info@plt>
  4345cf:	mov    0x10(%rsp),%rdi
  4345d4:	test   %rdi,%rdi
  4345d7:	je     4345de <X509_get0_pubkey_bitstr@plt+0x1dc0e>
  4345d9:	callq  412e70 <ENGINE_finish@plt>
  4345de:	mov    0xc(%rsp),%edi
  4345e2:	mov    %r13,%rsi
  4345e5:	callq  415530 <EVP_PKEY_CTX_new_id@plt>
  4345ea:	test   %rax,%rax
  4345ed:	mov    %rax,%r13
  4345f0:	je     434692 <X509_get0_pubkey_bitstr@plt+0x1dcc2>
  4345f6:	test   %r14d,%r14d
  4345f9:	mov    %rax,%rdi
  4345fc:	je     434638 <X509_get0_pubkey_bitstr@plt+0x1dc68>
  4345fe:	callq  414180 <EVP_PKEY_paramgen_init@plt>
  434603:	test   %eax,%eax
  434605:	jle    434642 <X509_get0_pubkey_bitstr@plt+0x1dc72>
  434607:	mov    %r13,(%rbx)
  43460a:	mov    $0x1,%eax
  43460f:	jmpq   434561 <X509_get0_pubkey_bitstr@plt+0x1db91>
  434614:	nopl   0x0(%rax)
  434618:	test   %r13,%r13
  43461b:	je     4345ab <X509_get0_pubkey_bitstr@plt+0x1dbdb>
  43461d:	mov    $0xffffffff,%edx
  434622:	mov    %r12,%rsi
  434625:	mov    %r13,%rdi
  434628:	callq  412b50 <ENGINE_get_pkey_asn1_meth_str@plt>
  43462d:	mov    %rax,%r15
  434630:	jmpq   4345ab <X509_get0_pubkey_bitstr@plt+0x1dbdb>
  434635:	nopl   (%rax)
  434638:	callq  415140 <EVP_PKEY_keygen_init@plt>
  43463d:	test   %eax,%eax
  43463f:	nop
  434640:	jg     434607 <X509_get0_pubkey_bitstr@plt+0x1dc37>
  434642:	lea    0x31dbf(%rip),%rsi        # 466408 <_fini+0x8f04>
  434649:	mov    %r12,%rdx
  43464c:	mov    %rbp,%rdi
  43464f:	xor    %eax,%eax
  434651:	callq  413c40 <BIO_printf@plt>
  434656:	mov    %rbp,%rdi
  434659:	callq  413f40 <ERR_print_errors@plt>
  43465e:	mov    %r13,%rdi
  434661:	callq  4143b0 <EVP_PKEY_CTX_free@plt>
  434666:	xor    %eax,%eax
  434668:	jmpq   434561 <X509_get0_pubkey_bitstr@plt+0x1db91>
  43466d:	nopl   (%rax)
  434670:	lea    0x2466c9(%rip),%rax        # 67ad40 <_edata+0x38>
  434677:	lea    0x31c2a(%rip),%rsi        # 4662a8 <_fini+0x8da4>
  43467e:	mov    %r12,%rdx
  434681:	mov    (%rax),%rdi
  434684:	xor    %eax,%eax
  434686:	callq  413c40 <BIO_printf@plt>
  43468b:	xor    %eax,%eax
  43468d:	jmpq   434561 <X509_get0_pubkey_bitstr@plt+0x1db91>
  434692:	lea    0x31d6f(%rip),%rsi        # 466408 <_fini+0x8f04>
  434699:	mov    %r12,%rdx
  43469c:	mov    %rbp,%rdi
  43469f:	xor    %eax,%eax
  4346a1:	callq  413c40 <BIO_printf@plt>
  4346a6:	mov    %rbp,%rdi
  4346a9:	callq  413f40 <ERR_print_errors@plt>
  4346ae:	xor    %eax,%eax
  4346b0:	jmpq   434561 <X509_get0_pubkey_bitstr@plt+0x1db91>
  4346b5:	callq  414c30 <__stack_chk_fail@plt>
  4346ba:	nopw   0x0(%rax,%rax,1)
  4346c0:	push   %r15
  4346c2:	push   %r14
  4346c4:	push   %r13
  4346c6:	push   %r12
  4346c8:	push   %rbp
  4346c9:	mov    %rsi,%rbp
  4346cc:	push   %rbx
  4346cd:	sub    $0x78,%rsp
  4346d1:	lea    0x246668(%rip),%rbx        # 67ad40 <_edata+0x38>
  4346d8:	mov    %fs:0x28,%rax
  4346e1:	mov    %rax,0x68(%rsp)
  4346e6:	xor    %eax,%eax
  4346e8:	movq   $0x0,0x50(%rsp)
  4346f1:	movq   $0x0,0x58(%rsp)
  4346fa:	mov    (%rbx),%rdi
  4346fd:	movq   $0x0,0x60(%rsp)
  434706:	test   %rdi,%rdi
  434709:	je     434c40 <X509_get0_pubkey_bitstr@plt+0x1e270>
  43470f:	xor    %esi,%esi
  434711:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  434716:	test   %eax,%eax
  434718:	jne    434790 <X509_get0_pubkey_bitstr@plt+0x1ddc0>
  43471a:	mov    $0x1,%r12d
  434720:	xor    %ebp,%ebp
  434722:	mov    0x50(%rsp),%rdi
  434727:	test   %rdi,%rdi
  43472a:	je     434731 <X509_get0_pubkey_bitstr@plt+0x1dd61>
  43472c:	callq  412b00 <EVP_PKEY_free@plt>
  434731:	mov    0x58(%rsp),%rdi
  434736:	test   %rdi,%rdi
  434739:	je     434740 <X509_get0_pubkey_bitstr@plt+0x1dd70>
  43473b:	callq  4143b0 <EVP_PKEY_CTX_free@plt>
  434740:	test   %rbp,%rbp
  434743:	je     43474d <X509_get0_pubkey_bitstr@plt+0x1dd7d>
  434745:	mov    %rbp,%rdi
  434748:	callq  416570 <BIO_free_all@plt>
  43474d:	xor    %edi,%edi
  43474f:	callq  413960 <BIO_free@plt>
  434754:	mov    0x60(%rsp),%rdi
  434759:	test   %rdi,%rdi
  43475c:	je     434763 <X509_get0_pubkey_bitstr@plt+0x1dd93>
  43475e:	callq  415020 <CRYPTO_free@plt>
  434763:	mov    0x68(%rsp),%rbx
  434768:	xor    %fs:0x28,%rbx
  434771:	mov    %r12d,%eax
  434774:	jne    434ed9 <X509_get0_pubkey_bitstr@plt+0x1e509>
  43477a:	add    $0x78,%rsp
  43477e:	pop    %rbx
  43477f:	pop    %rbp
  434780:	pop    %r12
  434782:	pop    %r13
  434784:	pop    %r14
  434786:	pop    %r15
  434788:	retq   
  434789:	nopl   0x0(%rax)
  434790:	callq  416990 <ERR_load_crypto_strings@plt>
  434795:	callq  412cf0 <OPENSSL_add_all_algorithms_noconf@plt>
  43479a:	lea    0x58(%rsp),%rax
  43479f:	lea    0x8(%rbp),%r14
  4347a3:	movl   $0x0,0x10(%rsp)
  4347ab:	movl   $0x0,0x24(%rsp)
  4347b3:	mov    $0x3,%r12d
  4347b9:	movq   $0x0,0x28(%rsp)
  4347c2:	xor    %ebp,%ebp
  4347c4:	xor    %r15d,%r15d
  4347c7:	xor    %r13d,%r13d
  4347ca:	mov    %rax,0x18(%rsp)
  4347cf:	mov    (%r14),%rax
  4347d2:	test   %rax,%rax
  4347d5:	je     434818 <X509_get0_pubkey_bitstr@plt+0x1de48>
  4347d7:	cmpb   $0x2d,(%rax)
  4347da:	jne    434818 <X509_get0_pubkey_bitstr@plt+0x1de48>
  4347dc:	lea    0x299ad(%rip),%rdi        # 45e190 <_fini+0xc8c>
  4347e3:	mov    $0x9,%ecx
  4347e8:	mov    %rax,%rsi
  4347eb:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4347ed:	jne    434918 <X509_get0_pubkey_bitstr@plt+0x1df48>
  4347f3:	mov    0x8(%r14),%rdi
  4347f7:	test   %rdi,%rdi
  4347fa:	je     434a40 <X509_get0_pubkey_bitstr@plt+0x1e070>
  434800:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  434805:	add    $0x8,%r14
  434809:	mov    %eax,%r12d
  43480c:	add    $0x8,%r14
  434810:	mov    (%r14),%rax
  434813:	test   %rax,%rax
  434816:	jne    4347d7 <X509_get0_pubkey_bitstr@plt+0x1de07>
  434818:	cmpq   $0x0,0x58(%rsp)
  43481e:	je     434a40 <X509_get0_pubkey_bitstr@plt+0x1e070>
  434824:	mov    (%rbx),%rdi
  434827:	lea    0x60(%rsp),%rcx
  43482c:	xor    %r8d,%r8d
  43482f:	xor    %edx,%edx
  434831:	mov    %rbp,%rsi
  434834:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  434839:	test   %eax,%eax
  43483b:	je     434d46 <X509_get0_pubkey_bitstr@plt+0x1e376>
  434841:	test   %r15,%r15
  434844:	je     434da3 <X509_get0_pubkey_bitstr@plt+0x1e3d3>
  43484a:	lea    0x2955a(%rip),%rsi        # 45ddab <_fini+0x8a7>
  434851:	mov    %r15,%rdi
  434854:	callq  412ba0 <BIO_new_file@plt>
  434859:	test   %rax,%rax
  43485c:	mov    %rax,%rbp
  43485f:	je     434e9e <X509_get0_pubkey_bitstr@plt+0x1e4ce>
  434865:	mov    0x58(%rsp),%rdi
  43486a:	lea    -0x401(%rip),%rsi        # 434470 <X509_get0_pubkey_bitstr@plt+0x1daa0>
  434871:	callq  415c00 <EVP_PKEY_CTX_set_cb@plt>
  434876:	mov    (%rbx),%rsi
  434879:	mov    0x58(%rsp),%rdi
  43487e:	callq  414590 <EVP_PKEY_CTX_set_app_data@plt>
  434883:	mov    0x10(%rsp),%ecx
  434887:	lea    0x50(%rsp),%rsi
  43488c:	mov    0x58(%rsp),%rdi
  434891:	test   %ecx,%ecx
  434893:	je     434d06 <X509_get0_pubkey_bitstr@plt+0x1e336>
  434899:	callq  414160 <EVP_PKEY_paramgen@plt>
  43489e:	test   %eax,%eax
  4348a0:	lea    0x31adf(%rip),%rsi        # 466386 <_fini+0x8e82>
  4348a7:	jle    434dfb <X509_get0_pubkey_bitstr@plt+0x1e42b>
  4348ad:	mov    0x50(%rsp),%rsi
  4348b2:	mov    %rbp,%rdi
  4348b5:	callq  415910 <PEM_write_bio_Parameters@plt>
  4348ba:	test   %eax,%eax
  4348bc:	jle    434ebd <X509_get0_pubkey_bitstr@plt+0x1e4ed>
  4348c2:	mov    0x24(%rsp),%edx
  4348c6:	xor    %r12d,%r12d
  4348c9:	test   %edx,%edx
  4348cb:	je     434722 <X509_get0_pubkey_bitstr@plt+0x1dd52>
  4348d1:	mov    0x10(%rsp),%eax
  4348d5:	xor    %ecx,%ecx
  4348d7:	xor    %edx,%edx
  4348d9:	mov    0x50(%rsp),%rsi
  4348de:	mov    %rbp,%rdi
  4348e1:	test   %eax,%eax
  4348e3:	je     434e16 <X509_get0_pubkey_bitstr@plt+0x1e446>
  4348e9:	callq  413bf0 <EVP_PKEY_print_params@plt>
  4348ee:	xor    %r12d,%r12d
  4348f1:	test   %eax,%eax
  4348f3:	jg     434722 <X509_get0_pubkey_bitstr@plt+0x1dd52>
  4348f9:	mov    (%rbx),%rdi
  4348fc:	lea    0x31ad1(%rip),%rsi        # 4663d4 <_fini+0x8ed0>
  434903:	callq  413b70 <BIO_puts@plt>
  434908:	mov    (%rbx),%rdi
  43490b:	callq  413f40 <ERR_print_errors@plt>
  434910:	jmpq   434722 <X509_get0_pubkey_bitstr@plt+0x1dd52>
  434915:	nopl   (%rax)
  434918:	lea    0x2b877(%rip),%rdi        # 460196 <_fini+0x2c92>
  43491f:	mov    $0x6,%ecx
  434924:	mov    %rax,%rsi
  434927:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  434929:	jne    434948 <X509_get0_pubkey_bitstr@plt+0x1df78>
  43492b:	mov    0x8(%r14),%rbp
  43492f:	test   %rbp,%rbp
  434932:	je     434a40 <X509_get0_pubkey_bitstr@plt+0x1e070>
  434938:	add    $0x8,%r14
  43493c:	jmpq   43480c <X509_get0_pubkey_bitstr@plt+0x1de3c>
  434941:	nopl   0x0(%rax)
  434948:	lea    0x29213(%rip),%rdi        # 45db62 <_fini+0x65e>
  43494f:	mov    $0x8,%ecx
  434954:	mov    %rax,%rsi
  434957:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  434959:	jne    434980 <X509_get0_pubkey_bitstr@plt+0x1dfb0>
  43495b:	mov    0x8(%r14),%rsi
  43495f:	test   %rsi,%rsi
  434962:	je     434a40 <X509_get0_pubkey_bitstr@plt+0x1e070>
  434968:	mov    (%rbx),%rdi
  43496b:	xor    %edx,%edx
  43496d:	add    $0x8,%r14
  434971:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  434976:	mov    %rax,%r13
  434979:	jmpq   43480c <X509_get0_pubkey_bitstr@plt+0x1de3c>
  43497e:	xchg   %ax,%ax
  434980:	lea    0x31939(%rip),%rdi        # 4662c0 <_fini+0x8dbc>
  434987:	mov    $0xb,%ecx
  43498c:	mov    %rax,%rsi
  43498f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  434991:	jne    4349d0 <X509_get0_pubkey_bitstr@plt+0x1e000>
  434993:	mov    0x8(%r14),%rdx
  434997:	test   %rdx,%rdx
  43499a:	je     434a40 <X509_get0_pubkey_bitstr@plt+0x1e070>
  4349a0:	cmpl   $0x1,0x10(%rsp)
  4349a5:	je     434a40 <X509_get0_pubkey_bitstr@plt+0x1e070>
  4349ab:	cmpq   $0x0,0x58(%rsp)
  4349b1:	mov    (%rbx),%rcx
  4349b4:	je     434b48 <X509_get0_pubkey_bitstr@plt+0x1e178>
  4349ba:	lea    0x3190a(%rip),%rsi        # 4662cb <_fini+0x8dc7>
  4349c1:	mov    %rcx,%rdi
  4349c4:	callq  413b70 <BIO_puts@plt>
  4349c9:	jmpq   43471a <X509_get0_pubkey_bitstr@plt+0x1dd4a>
  4349ce:	xchg   %ax,%ax
  4349d0:	lea    0x2946f(%rip),%rdi        # 45de46 <_fini+0x942>
  4349d7:	mov    $0x5,%ecx
  4349dc:	mov    %rax,%rsi
  4349df:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4349e1:	je     434b30 <X509_get0_pubkey_bitstr@plt+0x1e160>
  4349e7:	lea    0x318f6(%rip),%rdi        # 4662e4 <_fini+0x8de0>
  4349ee:	mov    $0xb,%ecx
  4349f3:	mov    %rax,%rsi
  4349f6:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4349f8:	jne    434c60 <X509_get0_pubkey_bitstr@plt+0x1e290>
  4349fe:	mov    0x8(%r14),%rdx
  434a02:	test   %rdx,%rdx
  434a05:	je     434a40 <X509_get0_pubkey_bitstr@plt+0x1e070>
  434a07:	mov    0x10(%rsp),%r8d
  434a0c:	mov    0x18(%rsp),%rsi
  434a11:	mov    %r13,%rcx
  434a14:	mov    (%rbx),%rdi
  434a17:	add    $0x8,%r14
  434a1b:	callq  434520 <X509_get0_pubkey_bitstr@plt+0x1db50>
  434a20:	test   %eax,%eax
  434a22:	jne    43480c <X509_get0_pubkey_bitstr@plt+0x1de3c>
  434a28:	jmpq   43471a <X509_get0_pubkey_bitstr@plt+0x1dd4a>
  434a2d:	mov    (%rbx),%rdi
  434a30:	lea    0x318b8(%rip),%rsi        # 4662ef <_fini+0x8deb>
  434a37:	callq  413b70 <BIO_puts@plt>
  434a3c:	nopl   0x0(%rax)
  434a40:	mov    (%rbx),%rdi
  434a43:	lea    0x318f1(%rip),%rsi        # 46633b <_fini+0x8e37>
  434a4a:	xor    %eax,%eax
  434a4c:	mov    $0x1,%r12d
  434a52:	xor    %ebp,%ebp
  434a54:	callq  413c40 <BIO_printf@plt>
  434a59:	mov    (%rbx),%rdi
  434a5c:	lea    0x318f2(%rip),%rsi        # 466355 <_fini+0x8e51>
  434a63:	xor    %eax,%eax
  434a65:	callq  413c40 <BIO_printf@plt>
  434a6a:	mov    (%rbx),%rdi
  434a6d:	lea    0x319b4(%rip),%rsi        # 466428 <_fini+0x8f24>
  434a74:	xor    %eax,%eax
  434a76:	callq  413c40 <BIO_printf@plt>
  434a7b:	mov    (%rbx),%rdi
  434a7e:	lea    0x319c3(%rip),%rsi        # 466448 <_fini+0x8f44>
  434a85:	xor    %eax,%eax
  434a87:	callq  413c40 <BIO_printf@plt>
  434a8c:	mov    (%rbx),%rdi
  434a8f:	lea    0x319e2(%rip),%rsi        # 466478 <_fini+0x8f74>
  434a96:	xor    %eax,%eax
  434a98:	callq  413c40 <BIO_printf@plt>
  434a9d:	mov    (%rbx),%rdi
  434aa0:	lea    0x31a09(%rip),%rsi        # 4664b0 <_fini+0x8fac>
  434aa7:	xor    %eax,%eax
  434aa9:	callq  413c40 <BIO_printf@plt>
  434aae:	mov    (%rbx),%rdi
  434ab1:	lea    0x31a38(%rip),%rsi        # 4664f0 <_fini+0x8fec>
  434ab8:	xor    %eax,%eax
  434aba:	callq  413c40 <BIO_printf@plt>
  434abf:	mov    (%rbx),%rdi
  434ac2:	lea    0x31a67(%rip),%rsi        # 466530 <_fini+0x902c>
  434ac9:	xor    %eax,%eax
  434acb:	callq  413c40 <BIO_printf@plt>
  434ad0:	mov    (%rbx),%rdi
  434ad3:	lea    0x31a7e(%rip),%rsi        # 466558 <_fini+0x9054>
  434ada:	xor    %eax,%eax
  434adc:	callq  413c40 <BIO_printf@plt>
  434ae1:	mov    (%rbx),%rdi
  434ae4:	lea    0x31a9d(%rip),%rsi        # 466588 <_fini+0x9084>
  434aeb:	xor    %eax,%eax
  434aed:	callq  413c40 <BIO_printf@plt>
  434af2:	mov    (%rbx),%rdi
  434af5:	lea    0x31af4(%rip),%rsi        # 4665f0 <_fini+0x90ec>
  434afc:	xor    %eax,%eax
  434afe:	callq  413c40 <BIO_printf@plt>
  434b03:	mov    (%rbx),%rdi
  434b06:	lea    0x31b1b(%rip),%rsi        # 466628 <_fini+0x9124>
  434b0d:	xor    %eax,%eax
  434b0f:	callq  413c40 <BIO_printf@plt>
  434b14:	mov    (%rbx),%rdi
  434b17:	lea    0x31b32(%rip),%rsi        # 466650 <_fini+0x914c>
  434b1e:	xor    %eax,%eax
  434b20:	callq  413c40 <BIO_printf@plt>
  434b25:	jmpq   434722 <X509_get0_pubkey_bitstr@plt+0x1dd52>
  434b2a:	nopw   0x0(%rax,%rax,1)
  434b30:	mov    0x8(%r14),%r15
  434b34:	test   %r15,%r15
  434b37:	jne    434938 <X509_get0_pubkey_bitstr@plt+0x1df68>
  434b3d:	nopl   (%rax)
  434b40:	jmpq   434a40 <X509_get0_pubkey_bitstr@plt+0x1e070>
  434b45:	nopl   (%rax)
  434b48:	lea    0x296de(%rip),%rsi        # 45e22d <_fini+0xd29>
  434b4f:	mov    %rdx,%rdi
  434b52:	mov    %rcx,0x38(%rsp)
  434b57:	mov    %rdx,0x30(%rsp)
  434b5c:	callq  412ba0 <BIO_new_file@plt>
  434b61:	test   %rax,%rax
  434b64:	mov    0x30(%rsp),%rdx
  434b69:	mov    0x38(%rsp),%rcx
  434b6e:	je     434cf0 <X509_get0_pubkey_bitstr@plt+0x1e320>
  434b74:	xor    %esi,%esi
  434b76:	mov    %rax,%rdi
  434b79:	mov    %rcx,0x48(%rsp)
  434b7e:	mov    %rdx,0x40(%rsp)
  434b83:	mov    %rax,0x38(%rsp)
  434b88:	callq  413ee0 <PEM_read_bio_Parameters@plt>
  434b8d:	mov    0x38(%rsp),%r8
  434b92:	mov    %rax,0x30(%rsp)
  434b97:	mov    %r8,%rdi
  434b9a:	callq  413960 <BIO_free@plt>
  434b9f:	cmpq   $0x0,0x30(%rsp)
  434ba5:	mov    0x40(%rsp),%rdx
  434baa:	mov    0x48(%rsp),%rcx
  434baf:	je     434e60 <X509_get0_pubkey_bitstr@plt+0x1e490>
  434bb5:	mov    0x30(%rsp),%rdi
  434bba:	mov    %r13,%rsi
  434bbd:	mov    %rcx,0x38(%rsp)
  434bc2:	callq  4135e0 <EVP_PKEY_CTX_new@plt>
  434bc7:	test   %rax,%rax
  434bca:	mov    0x38(%rsp),%rcx
  434bcf:	je     434dce <X509_get0_pubkey_bitstr@plt+0x1e3fe>
  434bd5:	mov    %rax,%rdi
  434bd8:	mov    %rcx,0x40(%rsp)
  434bdd:	mov    %rax,0x38(%rsp)
  434be2:	callq  415140 <EVP_PKEY_keygen_init@plt>
  434be7:	test   %eax,%eax
  434be9:	mov    0x38(%rsp),%rdx
  434bee:	mov    0x40(%rsp),%rcx
  434bf3:	jg     434d86 <X509_get0_pubkey_bitstr@plt+0x1e3b6>
  434bf9:	lea    0x317e8(%rip),%rsi        # 4663e8 <_fini+0x8ee4>
  434c00:	mov    %rcx,%rdi
  434c03:	mov    %rdx,0x18(%rsp)
  434c08:	mov    %rcx,0x10(%rsp)
  434c0d:	callq  413b70 <BIO_puts@plt>
  434c12:	mov    0x10(%rsp),%rcx
  434c17:	mov    %rcx,%rdi
  434c1a:	callq  413f40 <ERR_print_errors@plt>
  434c1f:	mov    0x18(%rsp),%rdx
  434c24:	mov    %rdx,%rdi
  434c27:	callq  4143b0 <EVP_PKEY_CTX_free@plt>
  434c2c:	mov    0x30(%rsp),%rdi
  434c31:	callq  412b00 <EVP_PKEY_free@plt>
  434c36:	jmpq   43471a <X509_get0_pubkey_bitstr@plt+0x1dd4a>
  434c3b:	nopl   0x0(%rax,%rax,1)
  434c40:	mov    0x241339(%rip),%rax        # 675f80 <_fini+0x218a7c>
  434c47:	xor    %esi,%esi
  434c49:	mov    (%rax),%rdi
  434c4c:	callq  4161e0 <BIO_new_fp@plt>
  434c51:	mov    %rax,%rdi
  434c54:	mov    %rax,(%rbx)
  434c57:	jmpq   43470f <X509_get0_pubkey_bitstr@plt+0x1dd3f>
  434c5c:	nopl   0x0(%rax)
  434c60:	lea    0x295a8(%rip),%rdi        # 45e20f <_fini+0xd0b>
  434c67:	mov    $0x9,%ecx
  434c6c:	mov    %rax,%rsi
  434c6f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  434c71:	jne    434cc0 <X509_get0_pubkey_bitstr@plt+0x1e2f0>
  434c73:	mov    0x8(%r14),%rsi
  434c77:	test   %rsi,%rsi
  434c7a:	je     434a40 <X509_get0_pubkey_bitstr@plt+0x1e070>
  434c80:	mov    0x58(%rsp),%rdi
  434c85:	test   %rdi,%rdi
  434c88:	je     434a2d <X509_get0_pubkey_bitstr@plt+0x1e05d>
  434c8e:	add    $0x8,%r14
  434c92:	callq  448760 <X509_get0_pubkey_bitstr@plt+0x31d90>
  434c97:	test   %eax,%eax
  434c99:	jg     43480c <X509_get0_pubkey_bitstr@plt+0x1de3c>
  434c9f:	mov    (%rbx),%rdi
  434ca2:	lea    0x3165c(%rip),%rsi        # 466305 <_fini+0x8e01>
  434ca9:	callq  413b70 <BIO_puts@plt>
  434cae:	mov    (%rbx),%rdi
  434cb1:	callq  413f40 <ERR_print_errors@plt>
  434cb6:	jmpq   43471a <X509_get0_pubkey_bitstr@plt+0x1dd4a>
  434cbb:	nopl   0x0(%rax,%rax,1)
  434cc0:	lea    0x31657(%rip),%rdi        # 46631e <_fini+0x8e1a>
  434cc7:	mov    $0xa,%ecx
  434ccc:	mov    %rax,%rsi
  434ccf:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  434cd1:	jne    434d62 <X509_get0_pubkey_bitstr@plt+0x1e392>
  434cd7:	cmpq   $0x0,0x58(%rsp)
  434cdd:	jne    434a40 <X509_get0_pubkey_bitstr@plt+0x1e070>
  434ce3:	movl   $0x1,0x10(%rsp)
  434ceb:	jmpq   43480c <X509_get0_pubkey_bitstr@plt+0x1de3c>
  434cf0:	lea    0x29460(%rip),%rsi        # 45e157 <_fini+0xc53>
  434cf7:	mov    %rcx,%rdi
  434cfa:	xor    %eax,%eax
  434cfc:	callq  413c40 <BIO_printf@plt>
  434d01:	jmpq   43471a <X509_get0_pubkey_bitstr@plt+0x1dd4a>
  434d06:	callq  412ec0 <EVP_PKEY_keygen@plt>
  434d0b:	test   %eax,%eax
  434d0d:	nopl   (%rax)
  434d10:	jle    434df4 <X509_get0_pubkey_bitstr@plt+0x1e424>
  434d16:	cmp    $0x3,%r12d
  434d1a:	je     434e76 <X509_get0_pubkey_bitstr@plt+0x1e4a6>
  434d20:	cmp    $0x1,%r12d
  434d24:	je     434dbc <X509_get0_pubkey_bitstr@plt+0x1e3ec>
  434d2a:	mov    (%rbx),%rdi
  434d2d:	lea    0x3166f(%rip),%rsi        # 4663a3 <_fini+0x8e9f>
  434d34:	xor    %eax,%eax
  434d36:	mov    $0x1,%r12d
  434d3c:	callq  413c40 <BIO_printf@plt>
  434d41:	jmpq   434722 <X509_get0_pubkey_bitstr@plt+0x1dd52>
  434d46:	mov    (%rbx),%rdi
  434d49:	lea    0x2abe4(%rip),%rsi        # 45f934 <_fini+0x2430>
  434d50:	mov    $0x1,%r12d
  434d56:	xor    %ebp,%ebp
  434d58:	callq  413b70 <BIO_puts@plt>
  434d5d:	jmpq   434722 <X509_get0_pubkey_bitstr@plt+0x1dd52>
  434d62:	lea    0x294fe(%rip),%rdi        # 45e267 <_fini+0xd63>
  434d69:	mov    $0x6,%ecx
  434d6e:	mov    %rax,%rsi
  434d71:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  434d73:	jne    434e25 <X509_get0_pubkey_bitstr@plt+0x1e455>
  434d79:	movl   $0x1,0x24(%rsp)
  434d81:	jmpq   43480c <X509_get0_pubkey_bitstr@plt+0x1de3c>
  434d86:	mov    0x30(%rsp),%rdi
  434d8b:	add    $0x8,%r14
  434d8f:	callq  412b00 <EVP_PKEY_free@plt>
  434d94:	mov    0x38(%rsp),%rdx
  434d99:	mov    %rdx,0x58(%rsp)
  434d9e:	jmpq   43480c <X509_get0_pubkey_bitstr@plt+0x1de3c>
  434da3:	mov    0x24110e(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  434daa:	xor    %esi,%esi
  434dac:	mov    (%rax),%rdi
  434daf:	callq  4161e0 <BIO_new_fp@plt>
  434db4:	mov    %rax,%rbp
  434db7:	jmpq   434865 <X509_get0_pubkey_bitstr@plt+0x1de95>
  434dbc:	mov    0x50(%rsp),%rsi
  434dc1:	mov    %rbp,%rdi
  434dc4:	callq  4156c0 <i2d_PrivateKey_bio@plt>
  434dc9:	jmpq   4348ba <X509_get0_pubkey_bitstr@plt+0x1deea>
  434dce:	lea    0x31613(%rip),%rsi        # 4663e8 <_fini+0x8ee4>
  434dd5:	mov    %rcx,%rdi
  434dd8:	mov    %rcx,0x10(%rsp)
  434ddd:	callq  413b70 <BIO_puts@plt>
  434de2:	mov    0x10(%rsp),%rcx
  434de7:	mov    %rcx,%rdi
  434dea:	callq  413f40 <ERR_print_errors@plt>
  434def:	jmpq   434c2c <X509_get0_pubkey_bitstr@plt+0x1e25c>
  434df4:	lea    0x2ab89(%rip),%rsi        # 45f984 <_fini+0x2480>
  434dfb:	mov    (%rbx),%rdi
  434dfe:	mov    $0x1,%r12d
  434e04:	callq  413b70 <BIO_puts@plt>
  434e09:	mov    (%rbx),%rdi
  434e0c:	callq  413f40 <ERR_print_errors@plt>
  434e11:	jmpq   434722 <X509_get0_pubkey_bitstr@plt+0x1dd52>
  434e16:	callq  413870 <EVP_PKEY_print_private@plt>
  434e1b:	nopl   0x0(%rax,%rax,1)
  434e20:	jmpq   4348ee <X509_get0_pubkey_bitstr@plt+0x1df1e>
  434e25:	lea    0x1(%rax),%rdi
  434e29:	callq  416810 <EVP_get_cipherbyname@plt>
  434e2e:	mov    %rax,%rdx
  434e31:	mov    %rax,0x28(%rsp)
  434e36:	xor    %eax,%eax
  434e38:	test   %rdx,%rdx
  434e3b:	je     434ede <X509_get0_pubkey_bitstr@plt+0x1e50e>
  434e41:	cmpl   $0x1,0x10(%rsp)
  434e46:	je     434a40 <X509_get0_pubkey_bitstr@plt+0x1e070>
  434e4c:	add    $0x8,%r14
  434e50:	test   %eax,%eax
  434e52:	je     4347cf <X509_get0_pubkey_bitstr@plt+0x1ddff>
  434e58:	jmpq   434a40 <X509_get0_pubkey_bitstr@plt+0x1e070>
  434e5d:	nopl   (%rax)
  434e60:	mov    (%rbx),%rdi
  434e63:	lea    0x2977e(%rip),%rsi        # 45e5e8 <_fini+0x10e4>
  434e6a:	xor    %eax,%eax
  434e6c:	callq  413c40 <BIO_printf@plt>
  434e71:	jmpq   43471a <X509_get0_pubkey_bitstr@plt+0x1dd4a>
  434e76:	mov    0x60(%rsp),%rax
  434e7b:	mov    0x28(%rsp),%rdx
  434e80:	xor    %r9d,%r9d
  434e83:	mov    0x50(%rsp),%rsi
  434e88:	xor    %r8d,%r8d
  434e8b:	xor    %ecx,%ecx
  434e8d:	mov    %rbp,%rdi
  434e90:	mov    %rax,(%rsp)
  434e94:	callq  4148c0 <PEM_write_bio_PrivateKey@plt>
  434e99:	jmpq   4348ba <X509_get0_pubkey_bitstr@plt+0x1deea>
  434e9e:	mov    (%rbx),%rdi
  434ea1:	lea    0x314c3(%rip),%rsi        # 46636b <_fini+0x8e67>
  434ea8:	mov    %r15,%rdx
  434eab:	xor    %eax,%eax
  434ead:	mov    $0x1,%r12d
  434eb3:	callq  413c40 <BIO_printf@plt>
  434eb8:	jmpq   434722 <X509_get0_pubkey_bitstr@plt+0x1dd52>
  434ebd:	mov    (%rbx),%rdi
  434ec0:	lea    0x314fa(%rip),%rsi        # 4663c1 <_fini+0x8ebd>
  434ec7:	callq  413b70 <BIO_puts@plt>
  434ecc:	mov    (%rbx),%rdi
  434ecf:	callq  413f40 <ERR_print_errors@plt>
  434ed4:	jmpq   4348c2 <X509_get0_pubkey_bitstr@plt+0x1def2>
  434ed9:	callq  414c30 <__stack_chk_fail@plt>
  434ede:	mov    (%r14),%rax
  434ee1:	mov    (%rbx),%rdi
  434ee4:	lea    0x3143d(%rip),%rsi        # 466328 <_fini+0x8e24>
  434eeb:	lea    0x1(%rax),%rdx
  434eef:	xor    %eax,%eax
  434ef1:	callq  413c40 <BIO_printf@plt>
  434ef6:	mov    $0x1,%eax
  434efb:	jmpq   434e41 <X509_get0_pubkey_bitstr@plt+0x1e471>
  434f00:	mov    (%rcx),%rax
  434f03:	mov    %rax,(%rsi)
  434f06:	mov    0x8(%rcx),%eax
  434f09:	mov    %eax,(%rdx)
  434f0b:	xor    %eax,%eax
  434f0d:	retq   
  434f0e:	xchg   %ax,%ax
  434f10:	push   %r12
  434f12:	xor    %ecx,%ecx
  434f14:	xor    %edx,%edx
  434f16:	push   %rbp
  434f17:	mov    %rdi,%rbp
  434f1a:	push   %rbx
  434f1b:	mov    %rsi,%rbx
  434f1e:	mov    $0x14,%esi
  434f23:	mov    %rbx,%rdi
  434f26:	callq  413e30 <SSL_CTX_ctrl@plt>
  434f2b:	lea    0x3175e(%rip),%rsi        # 466690 <_fini+0x918c>
  434f32:	mov    %rax,%rdx
  434f35:	mov    %rbp,%rdi
  434f38:	xor    %eax,%eax
  434f3a:	callq  413c40 <BIO_printf@plt>
  434f3f:	xor    %ecx,%ecx
  434f41:	xor    %edx,%edx
  434f43:	mov    %rbx,%rdi
  434f46:	mov    $0x15,%esi
  434f4b:	callq  413e30 <SSL_CTX_ctrl@plt>
  434f50:	lea    0x31761(%rip),%rsi        # 4666b8 <_fini+0x91b4>
  434f57:	mov    %rax,%rdx
  434f5a:	mov    %rbp,%rdi
  434f5d:	xor    %eax,%eax
  434f5f:	callq  413c40 <BIO_printf@plt>
  434f64:	xor    %ecx,%ecx
  434f66:	xor    %edx,%edx
  434f68:	mov    %rbx,%rdi
  434f6b:	mov    $0x17,%esi
  434f70:	callq  413e30 <SSL_CTX_ctrl@plt>
  434f75:	lea    0x31764(%rip),%rsi        # 4666e0 <_fini+0x91dc>
  434f7c:	mov    %rax,%rdx
  434f7f:	mov    %rbp,%rdi
  434f82:	xor    %eax,%eax
  434f84:	callq  413c40 <BIO_printf@plt>
  434f89:	xor    %ecx,%ecx
  434f8b:	xor    %edx,%edx
  434f8d:	mov    %rbx,%rdi
  434f90:	mov    $0x16,%esi
  434f95:	callq  413e30 <SSL_CTX_ctrl@plt>
  434f9a:	lea    0x3176f(%rip),%rsi        # 466710 <_fini+0x920c>
  434fa1:	mov    %rax,%rdx
  434fa4:	mov    %rbp,%rdi
  434fa7:	xor    %eax,%eax
  434fa9:	callq  413c40 <BIO_printf@plt>
  434fae:	xor    %ecx,%ecx
  434fb0:	xor    %edx,%edx
  434fb2:	mov    %rbx,%rdi
  434fb5:	mov    $0x18,%esi
  434fba:	callq  413e30 <SSL_CTX_ctrl@plt>
  434fbf:	lea    0x31772(%rip),%rsi        # 466738 <_fini+0x9234>
  434fc6:	mov    %rax,%rdx
  434fc9:	mov    %rbp,%rdi
  434fcc:	xor    %eax,%eax
  434fce:	callq  413c40 <BIO_printf@plt>
  434fd3:	xor    %ecx,%ecx
  434fd5:	xor    %edx,%edx
  434fd7:	mov    %rbx,%rdi
  434fda:	mov    $0x1a,%esi
  434fdf:	callq  413e30 <SSL_CTX_ctrl@plt>
  434fe4:	lea    0x31775(%rip),%rsi        # 466760 <_fini+0x925c>
  434feb:	mov    %rax,%rdx
  434fee:	mov    %rbp,%rdi
  434ff1:	xor    %eax,%eax
  434ff3:	callq  413c40 <BIO_printf@plt>
  434ff8:	xor    %ecx,%ecx
  434ffa:	xor    %edx,%edx
  434ffc:	mov    %rbx,%rdi
  434fff:	mov    $0x19,%esi
  435004:	callq  413e30 <SSL_CTX_ctrl@plt>
  435009:	lea    0x31780(%rip),%rsi        # 466790 <_fini+0x928c>
  435010:	mov    %rax,%rdx
  435013:	mov    %rbp,%rdi
  435016:	xor    %eax,%eax
  435018:	callq  413c40 <BIO_printf@plt>
  43501d:	xor    %ecx,%ecx
  43501f:	mov    %rbx,%rdi
  435022:	xor    %edx,%edx
  435024:	mov    $0x1b,%esi
  435029:	callq  413e30 <SSL_CTX_ctrl@plt>
  43502e:	lea    0x32f77(%rip),%rsi        # 467fac <_fini+0xaaa8>
  435035:	mov    %rax,%rdx
  435038:	mov    %rbp,%rdi
  43503b:	xor    %eax,%eax
  43503d:	callq  413c40 <BIO_printf@plt>
  435042:	xor    %ecx,%ecx
  435044:	mov    %rbx,%rdi
  435047:	xor    %edx,%edx
  435049:	mov    $0x1d,%esi
  43504e:	callq  413e30 <SSL_CTX_ctrl@plt>
  435053:	lea    0x32f6b(%rip),%rsi        # 467fc5 <_fini+0xaac1>
  43505a:	mov    %rax,%rdx
  43505d:	mov    %rbp,%rdi
  435060:	xor    %eax,%eax
  435062:	callq  413c40 <BIO_printf@plt>
  435067:	xor    %ecx,%ecx
  435069:	mov    %rbx,%rdi
  43506c:	xor    %edx,%edx
  43506e:	mov    $0x1e,%esi
  435073:	callq  413e30 <SSL_CTX_ctrl@plt>
  435078:	lea    0x32f61(%rip),%rsi        # 467fe0 <_fini+0xaadc>
  43507f:	mov    %rax,%rdx
  435082:	mov    %rbp,%rdi
  435085:	xor    %eax,%eax
  435087:	callq  413c40 <BIO_printf@plt>
  43508c:	xor    %ecx,%ecx
  43508e:	mov    %rbx,%rdi
  435091:	xor    %edx,%edx
  435093:	mov    $0x1c,%esi
  435098:	callq  413e30 <SSL_CTX_ctrl@plt>
  43509d:	lea    0x32f59(%rip),%rsi        # 467ffd <_fini+0xaaf9>
  4350a4:	mov    %rax,%rdx
  4350a7:	mov    %rbp,%rdi
  4350aa:	xor    %eax,%eax
  4350ac:	callq  413c40 <BIO_printf@plt>
  4350b1:	mov    %rbx,%rdi
  4350b4:	xor    %ecx,%ecx
  4350b6:	xor    %edx,%edx
  4350b8:	mov    $0x2b,%esi
  4350bd:	callq  413e30 <SSL_CTX_ctrl@plt>
  4350c2:	mov    %rbx,%rdi
  4350c5:	xor    %ecx,%ecx
  4350c7:	xor    %edx,%edx
  4350c9:	mov    $0x1f,%esi
  4350ce:	mov    %rax,%r12
  4350d1:	callq  413e30 <SSL_CTX_ctrl@plt>
  4350d6:	pop    %rbx
  4350d7:	mov    %rbp,%rdi
  4350da:	mov    %r12,%rcx
  4350dd:	lea    0x316d4(%rip),%rsi        # 4667b8 <_fini+0x92b4>
  4350e4:	pop    %rbp
  4350e5:	pop    %r12
  4350e7:	mov    %rax,%rdx
  4350ea:	xor    %eax,%eax
  4350ec:	jmpq   413c40 <BIO_printf@plt>
  4350f1:	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  435100:	push   %r15
  435102:	push   %r14
  435104:	push   %r13
  435106:	push   %r12
  435108:	push   %rbp
  435109:	push   %rbx
  43510a:	mov    %rsi,%rbx
  43510d:	sub    $0x168,%rsp
  435114:	mov    0x28(%rsi),%ecx
  435117:	mov    0x20(%rsi),%r14
  43511b:	mov    %fs:0x28,%rax
  435124:	mov    %rax,0x158(%rsp)
  43512c:	xor    %eax,%eax
  43512e:	mov    %rdi,0x10(%rsp)
  435133:	movq   $0x0,0x40(%rsp)
  43513c:	test   %ecx,%ecx
  43513e:	jne    4352d0 <X509_get0_pubkey_bitstr@plt+0x1e900>
  435144:	mov    0x10(%rsp),%rdi
  435149:	callq  416280 <SSL_get_certificate@plt>
  43514e:	mov    %rax,%rdi
  435151:	mov    %rax,%r13
  435154:	callq  414fe0 <X509_get1_ocsp@plt>
  435159:	test   %rax,%rax
  43515c:	mov    %rax,%rbp
  43515f:	je     435298 <X509_get0_pubkey_bitstr@plt+0x1e8c8>
  435165:	xor    %esi,%esi
  435167:	mov    %rax,%rdi
  43516a:	callq  412b30 <sk_value@plt>
  43516f:	lea    0x38(%rsp),%rcx
  435174:	lea    0x30(%rsp),%rdx
  435179:	lea    0x28(%rsp),%rsi
  43517e:	lea    0x24(%rsp),%r8
  435183:	mov    %rax,%rdi
  435186:	callq  413650 <OCSP_parse_url@plt>
  43518b:	test   %eax,%eax
  43518d:	je     435270 <X509_get0_pubkey_bitstr@plt+0x1e8a0>
  435193:	mov    0x28(%rbx),%edx
  435196:	test   %edx,%edx
  435198:	jne    4352e8 <X509_get0_pubkey_bitstr@plt+0x1e918>
  43519e:	mov    0x10(%rsp),%rdi
  4351a3:	callq  415c60 <SSL_get_SSL_CTX@plt>
  4351a8:	mov    %rax,%rdi
  4351ab:	callq  412ed0 <SSL_CTX_get_cert_store@plt>
  4351b0:	lea    0x60(%rsp),%rcx
  4351b5:	xor    %edx,%edx
  4351b7:	mov    %rax,%rsi
  4351ba:	mov    %rcx,%rdi
  4351bd:	mov    %rcx,0x18(%rsp)
  4351c2:	xor    %ecx,%ecx
  4351c4:	callq  413380 <X509_STORE_CTX_init@plt>
  4351c9:	test   %eax,%eax
  4351cb:	jne    435310 <X509_get0_pubkey_bitstr@plt+0x1e940>
  4351d1:	movl   $0x2,0x18(%rsp)
  4351d9:	xor    %r15d,%r15d
  4351dc:	xor    %r13d,%r13d
  4351df:	xor    %r12d,%r12d
  4351e2:	mov    %r14,%rdi
  4351e5:	callq  413f40 <ERR_print_errors@plt>
  4351ea:	test   %rbp,%rbp
  4351ed:	je     435215 <X509_get0_pubkey_bitstr@plt+0x1e845>
  4351ef:	mov    0x28(%rsp),%rdi
  4351f4:	callq  415020 <CRYPTO_free@plt>
  4351f9:	mov    0x38(%rsp),%rdi
  4351fe:	callq  415020 <CRYPTO_free@plt>
  435203:	mov    0x30(%rsp),%rdi
  435208:	callq  415020 <CRYPTO_free@plt>
  43520d:	mov    %rbp,%rdi
  435210:	callq  415e40 <X509_email_free@plt>
  435215:	test   %r15,%r15
  435218:	je     435222 <X509_get0_pubkey_bitstr@plt+0x1e852>
  43521a:	mov    %r15,%rdi
  43521d:	callq  412a80 <OCSP_CERTID_free@plt>
  435222:	test   %r12,%r12
  435225:	je     43522f <X509_get0_pubkey_bitstr@plt+0x1e85f>
  435227:	mov    %r12,%rdi
  43522a:	callq  4149b0 <OCSP_REQUEST_free@plt>
  43522f:	test   %r13,%r13
  435232:	je     43523c <X509_get0_pubkey_bitstr@plt+0x1e86c>
  435234:	mov    %r13,%rdi
  435237:	callq  412e30 <OCSP_RESPONSE_free@plt>
  43523c:	mov    0x158(%rsp),%rdx
  435244:	xor    %fs:0x28,%rdx
  43524d:	mov    0x18(%rsp),%eax
  435251:	jne    435522 <X509_get0_pubkey_bitstr@plt+0x1eb52>
  435257:	add    $0x168,%rsp
  43525e:	pop    %rbx
  43525f:	pop    %rbp
  435260:	pop    %r12
  435262:	pop    %r13
  435264:	pop    %r14
  435266:	pop    %r15
  435268:	retq   
  435269:	nopl   0x0(%rax)
  435270:	lea    0x31571(%rip),%rsi        # 4667e8 <_fini+0x92e4>
  435277:	mov    %r14,%rdi
  43527a:	xor    %r15d,%r15d
  43527d:	xor    %r13d,%r13d
  435280:	xor    %r12d,%r12d
  435283:	callq  413b70 <BIO_puts@plt>
  435288:	movl   $0x2,0x18(%rsp)
  435290:	jmpq   4351e2 <X509_get0_pubkey_bitstr@plt+0x1e812>
  435295:	nopl   (%rax)
  435298:	mov    (%rbx),%rax
  43529b:	test   %rax,%rax
  43529e:	je     4354b0 <X509_get0_pubkey_bitstr@plt+0x1eae0>
  4352a4:	mov    %rax,0x28(%rsp)
  4352a9:	mov    0x8(%rbx),%rax
  4352ad:	mov    %rax,0x38(%rsp)
  4352b2:	mov    0x10(%rbx),%rax
  4352b6:	mov    %rax,0x30(%rsp)
  4352bb:	mov    0x18(%rbx),%eax
  4352be:	mov    %eax,0x24(%rsp)
  4352c2:	jmpq   43519e <X509_get0_pubkey_bitstr@plt+0x1e7ce>
  4352c7:	nopw   0x0(%rax,%rax,1)
  4352d0:	lea    0x32d40(%rip),%rsi        # 468017 <_fini+0xab13>
  4352d7:	mov    %r14,%rdi
  4352da:	callq  413b70 <BIO_puts@plt>
  4352df:	jmpq   435144 <X509_get0_pubkey_bitstr@plt+0x1e774>
  4352e4:	nopl   0x0(%rax)
  4352e8:	xor    %esi,%esi
  4352ea:	mov    %rbp,%rdi
  4352ed:	callq  412b30 <sk_value@plt>
  4352f2:	lea    0x32d3c(%rip),%rsi        # 468035 <_fini+0xab31>
  4352f9:	mov    %rax,%rdx
  4352fc:	mov    %r14,%rdi
  4352ff:	xor    %eax,%eax
  435301:	callq  413c40 <BIO_printf@plt>
  435306:	jmpq   43519e <X509_get0_pubkey_bitstr@plt+0x1e7ce>
  43530b:	nopl   0x0(%rax,%rax,1)
  435310:	mov    %r13,%rdi
  435313:	callq  412940 <X509_get_issuer_name@plt>
  435318:	mov    0x18(%rsp),%rdi
  43531d:	lea    0x50(%rsp),%rcx
  435322:	mov    %rax,%rdx
  435325:	mov    $0x1,%esi
  43532a:	callq  415f70 <X509_STORE_get_by_subject@plt>
  43532f:	test   %eax,%eax
  435331:	jle    435478 <X509_get0_pubkey_bitstr@plt+0x1eaa8>
  435337:	callq  412d70 <OCSP_REQUEST_new@plt>
  43533c:	test   %rax,%rax
  43533f:	mov    %rax,%r12
  435342:	je     4351d1 <X509_get0_pubkey_bitstr@plt+0x1e801>
  435348:	mov    0x58(%rsp),%rdx
  43534d:	mov    %r13,%rsi
  435350:	xor    %edi,%edi
  435352:	callq  414d70 <OCSP_cert_to_id@plt>
  435357:	mov    0x58(%rsp),%rdi
  43535c:	mov    %rax,%r15
  43535f:	callq  4153a0 <X509_free@plt>
  435364:	mov    0x18(%rsp),%rdi
  435369:	callq  413780 <X509_STORE_CTX_cleanup@plt>
  43536e:	test   %r15,%r15
  435371:	je     4354e0 <X509_get0_pubkey_bitstr@plt+0x1eb10>
  435377:	mov    %r15,%rsi
  43537a:	mov    %r12,%rdi
  43537d:	callq  414450 <OCSP_request_add0_id@plt>
  435382:	test   %rax,%rax
  435385:	je     4354e0 <X509_get0_pubkey_bitstr@plt+0x1eb10>
  43538b:	mov    0x10(%rsp),%rdi
  435390:	lea    0x48(%rsp),%rcx
  435395:	xor    %edx,%edx
  435397:	mov    $0x42,%esi
  43539c:	xor    %r13d,%r13d
  43539f:	callq  4162b0 <SSL_ctrl@plt>
  4353a4:	jmp    4353d9 <X509_get0_pubkey_bitstr@plt+0x1ea09>
  4353a6:	nopw   %cs:0x0(%rax,%rax,1)
  4353b0:	mov    0x48(%rsp),%rdi
  4353b5:	mov    %r13d,%esi
  4353b8:	callq  412b30 <sk_value@plt>
  4353bd:	mov    $0xffffffff,%edx
  4353c2:	mov    %rax,%rsi
  4353c5:	mov    %r12,%rdi
  4353c8:	callq  412d60 <OCSP_REQUEST_add_ext@plt>
  4353cd:	test   %eax,%eax
  4353cf:	je     4354f0 <X509_get0_pubkey_bitstr@plt+0x1eb20>
  4353d5:	add    $0x1,%r13d
  4353d9:	mov    0x48(%rsp),%rdi
  4353de:	callq  4156d0 <sk_num@plt>
  4353e3:	cmp    %eax,%r13d
  4353e6:	jl     4353b0 <X509_get0_pubkey_bitstr@plt+0x1e9e0>
  4353e8:	mov    0x1c(%rbx),%eax
  4353eb:	mov    0x24(%rsp),%r9d
  4353f0:	mov    %r12,%rsi
  4353f3:	mov    0x30(%rsp),%r8
  4353f8:	mov    0x38(%rsp),%rcx
  4353fd:	mov    %r14,%rdi
  435400:	mov    0x28(%rsp),%rdx
  435405:	movq   $0x0,(%rsp)
  43540d:	mov    %eax,0x8(%rsp)
  435411:	callq  458800 <X509_get0_pubkey_bitstr@plt+0x41e30>
  435416:	test   %rax,%rax
  435419:	mov    %rax,%r13
  43541c:	je     435503 <X509_get0_pubkey_bitstr@plt+0x1eb33>
  435422:	lea    0x40(%rsp),%rsi
  435427:	mov    %rax,%rdi
  43542a:	xor    %r15d,%r15d
  43542d:	callq  412fb0 <i2d_OCSP_RESPONSE@plt>
  435432:	test   %eax,%eax
  435434:	movl   $0x2,0x18(%rsp)
  43543c:	jle    4351e2 <X509_get0_pubkey_bitstr@plt+0x1e812>
  435442:	mov    0x40(%rsp),%rcx
  435447:	mov    0x10(%rsp),%rdi
  43544c:	movslq %eax,%rdx
  43544f:	mov    $0x47,%esi
  435454:	callq  4162b0 <SSL_ctrl@plt>
  435459:	mov    0x28(%rbx),%eax
  43545c:	test   %eax,%eax
  43545e:	jne    435527 <X509_get0_pubkey_bitstr@plt+0x1eb57>
  435464:	movl   $0x0,0x18(%rsp)
  43546c:	xor    %r15d,%r15d
  43546f:	jmpq   4351ea <X509_get0_pubkey_bitstr@plt+0x1e81a>
  435474:	nopl   0x0(%rax)
  435478:	lea    0x313c9(%rip),%rsi        # 466848 <_fini+0x9344>
  43547f:	mov    %r14,%rdi
  435482:	xor    %r15d,%r15d
  435485:	xor    %r13d,%r13d
  435488:	xor    %r12d,%r12d
  43548b:	callq  413b70 <BIO_puts@plt>
  435490:	mov    0x18(%rsp),%rdi
  435495:	callq  413780 <X509_STORE_CTX_cleanup@plt>
  43549a:	movl   $0x3,0x18(%rsp)
  4354a2:	jmpq   4351e2 <X509_get0_pubkey_bitstr@plt+0x1e812>
  4354a7:	nopw   0x0(%rax,%rax,1)
  4354b0:	mov    0x20(%rbx),%rdi
  4354b4:	lea    0x31355(%rip),%rsi        # 466810 <_fini+0x930c>
  4354bb:	xor    %r15d,%r15d
  4354be:	xor    %r13d,%r13d
  4354c1:	xor    %r12d,%r12d
  4354c4:	callq  413b70 <BIO_puts@plt>
  4354c9:	movl   $0x3,0x18(%rsp)
  4354d1:	jmpq   4351e2 <X509_get0_pubkey_bitstr@plt+0x1e812>
  4354d6:	nopw   %cs:0x0(%rax,%rax,1)
  4354e0:	movl   $0x2,0x18(%rsp)
  4354e8:	xor    %r13d,%r13d
  4354eb:	jmpq   4351e2 <X509_get0_pubkey_bitstr@plt+0x1e812>
  4354f0:	movl   $0x2,0x18(%rsp)
  4354f8:	xor    %r15d,%r15d
  4354fb:	xor    %r13d,%r13d
  4354fe:	jmpq   4351e2 <X509_get0_pubkey_bitstr@plt+0x1e812>
  435503:	lea    0x31376(%rip),%rsi        # 466880 <_fini+0x937c>
  43550a:	mov    %r14,%rdi
  43550d:	xor    %r15d,%r15d
  435510:	callq  413b70 <BIO_puts@plt>
  435515:	movl   $0x3,0x18(%rsp)
  43551d:	jmpq   4351e2 <X509_get0_pubkey_bitstr@plt+0x1e812>
  435522:	callq  414c30 <__stack_chk_fail@plt>
  435527:	lea    0x3137a(%rip),%rsi        # 4668a8 <_fini+0x93a4>
  43552e:	mov    %r14,%rdi
  435531:	callq  413b70 <BIO_puts@plt>
  435536:	mov    $0x2,%edx
  43553b:	mov    %r13,%rsi
  43553e:	mov    %r14,%rdi
  435541:	callq  4131a0 <OCSP_RESPONSE_print@plt>
  435546:	jmpq   435464 <X509_get0_pubkey_bitstr@plt+0x1ea94>
  43554b:	nopl   0x0(%rax,%rax,1)
  435550:	push   %r12
  435552:	push   %rbp
  435553:	push   %rbx
  435554:	mov    %rdi,%rbx
  435557:	sub    $0x2030,%rsp
  43555e:	mov    %fs:0x28,%rax
  435567:	mov    %rax,0x2028(%rsp)
  43556f:	xor    %eax,%eax
  435571:	callq  413120 <SSL_accept@plt>
  435576:	test   %eax,%eax
  435578:	jle    4358b0 <X509_get0_pubkey_bitstr@plt+0x1eee0>
  43557e:	mov    %rbx,%rdi
  435581:	lea    0x20(%rsp),%rbp
  435586:	callq  416670 <SSL_get_session@plt>
  43558b:	mov    0x245e3e(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  435592:	mov    %rax,%rsi
  435595:	callq  416460 <PEM_write_bio_SSL_SESSION@plt>
  43559a:	mov    %rbx,%rdi
  43559d:	callq  416300 <SSL_get_peer_certificate@plt>
  4355a2:	test   %rax,%rax
  4355a5:	mov    %rax,%r12
  4355a8:	je     43563f <X509_get0_pubkey_bitstr@plt+0x1ec6f>
  4355ae:	mov    0x245e1b(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4355b5:	lea    0x32abe(%rip),%rsi        # 46807a <_fini+0xab76>
  4355bc:	xor    %eax,%eax
  4355be:	lea    0x20(%rsp),%rbp
  4355c3:	callq  413c40 <BIO_printf@plt>
  4355c8:	mov    0x245e01(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4355cf:	mov    %r12,%rsi
  4355d2:	callq  413490 <PEM_write_bio_X509@plt>
  4355d7:	mov    %r12,%rdi
  4355da:	callq  414400 <X509_get_subject_name@plt>
  4355df:	mov    $0x2000,%edx
  4355e4:	mov    %rbp,%rsi
  4355e7:	mov    %rax,%rdi
  4355ea:	callq  4139a0 <X509_NAME_oneline@plt>
  4355ef:	mov    0x245dda(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4355f6:	lea    0x32a91(%rip),%rsi        # 46808e <_fini+0xab8a>
  4355fd:	mov    %rbp,%rdx
  435600:	xor    %eax,%eax
  435602:	callq  413c40 <BIO_printf@plt>
  435607:	mov    %r12,%rdi
  43560a:	callq  412940 <X509_get_issuer_name@plt>
  43560f:	mov    $0x2000,%edx
  435614:	mov    %rbp,%rsi
  435617:	mov    %rax,%rdi
  43561a:	callq  4139a0 <X509_NAME_oneline@plt>
  43561f:	mov    0x245daa(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  435626:	lea    0x32a6d(%rip),%rsi        # 46809a <_fini+0xab96>
  43562d:	mov    %rbp,%rdx
  435630:	xor    %eax,%eax
  435632:	callq  413c40 <BIO_printf@plt>
  435637:	mov    %r12,%rdi
  43563a:	callq  4153a0 <X509_free@plt>
  43563f:	mov    $0x2000,%edx
  435644:	mov    %rbp,%rsi
  435647:	mov    %rbx,%rdi
  43564a:	callq  4140c0 <SSL_get_shared_ciphers@plt>
  43564f:	test   %rax,%rax
  435652:	je     43566c <X509_get0_pubkey_bitstr@plt+0x1ec9c>
  435654:	mov    0x245d75(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  43565b:	lea    0x32a43(%rip),%rsi        # 4680a5 <_fini+0xaba1>
  435662:	mov    %rbp,%rdx
  435665:	xor    %eax,%eax
  435667:	callq  413c40 <BIO_printf@plt>
  43566c:	mov    %rbx,%rdi
  43566f:	callq  413050 <SSL_get_current_cipher@plt>
  435674:	mov    %rax,%rdi
  435677:	callq  415410 <SSL_CIPHER_get_name@plt>
  43567c:	mov    0x245d4d(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  435683:	lea    0x329c5(%rip),%rdx        # 46804f <_fini+0xab4b>
  43568a:	test   %rax,%rax
  43568d:	lea    0x32a24(%rip),%rsi        # 4680b8 <_fini+0xabb4>
  435694:	cmovne %rax,%rdx
  435698:	xor    %eax,%eax
  43569a:	callq  413c40 <BIO_printf@plt>
  43569f:	lea    0x14(%rsp),%rdx
  4356a4:	lea    0x18(%rsp),%rsi
  4356a9:	mov    %rbx,%rdi
  4356ac:	callq  4128f0 <SSL_get0_next_proto_negotiated@plt>
  4356b1:	cmpq   $0x0,0x18(%rsp)
  4356b7:	je     4356f8 <X509_get0_pubkey_bitstr@plt+0x1ed28>
  4356b9:	mov    0x245d10(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4356c0:	lea    0x329ff(%rip),%rsi        # 4680c6 <_fini+0xabc2>
  4356c7:	xor    %eax,%eax
  4356c9:	callq  413c40 <BIO_printf@plt>
  4356ce:	mov    0x18(%rsp),%rsi
  4356d3:	mov    0x245cf6(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4356da:	mov    0x14(%rsp),%edx
  4356de:	callq  412db0 <BIO_write@plt>
  4356e3:	mov    0x245ce6(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4356ea:	lea    0x2f4ae(%rip),%rsi        # 464b9f <_fini+0x769b>
  4356f1:	xor    %eax,%eax
  4356f3:	callq  413c40 <BIO_printf@plt>
  4356f8:	mov    %rbx,%rdi
  4356fb:	callq  413d70 <SSL_get_selected_srtp_profile@plt>
  435700:	test   %rax,%rax
  435703:	je     43571d <X509_get0_pubkey_bitstr@plt+0x1ed4d>
  435705:	mov    (%rax),%rdx
  435708:	mov    0x245cc1(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  43570f:	lea    0x311ba(%rip),%rsi        # 4668d0 <_fini+0x93cc>
  435716:	xor    %eax,%eax
  435718:	callq  413c40 <BIO_printf@plt>
  43571d:	mov    %rbx,%rdi
  435720:	callq  412dc0 <SSL_cache_hit@plt>
  435725:	test   %eax,%eax
  435727:	jne    4359a0 <X509_get0_pubkey_bitstr@plt+0x1efd0>
  43572d:	xor    %ecx,%ecx
  43572f:	xor    %edx,%edx
  435731:	mov    $0xd,%esi
  435736:	mov    %rbx,%rdi
  435739:	callq  4162b0 <SSL_ctrl@plt>
  43573e:	test   $0x8,%al
  435740:	jne    435980 <X509_get0_pubkey_bitstr@plt+0x1efb0>
  435746:	mov    %rbx,%rdi
  435749:	callq  4145e0 <SSL_get0_kssl_ctx@plt>
  43574e:	mov    %rax,%rdi
  435751:	callq  414960 <kssl_ctx_get0_client_princ@plt>
  435756:	test   %rax,%rax
  435759:	je     435773 <X509_get0_pubkey_bitstr@plt+0x1eda3>
  43575b:	mov    0x245c6e(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  435762:	lea    0x311b7(%rip),%rsi        # 466920 <_fini+0x941c>
  435769:	mov    %rax,%rdx
  43576c:	xor    %eax,%eax
  43576e:	callq  413c40 <BIO_printf@plt>
  435773:	xor    %ecx,%ecx
  435775:	xor    %edx,%edx
  435777:	mov    $0x4c,%esi
  43577c:	mov    %rbx,%rdi
  43577f:	callq  4162b0 <SSL_ctrl@plt>
  435784:	lea    0x2a637(%rip),%rdx        # 45fdc2 <_fini+0x28be>
  43578b:	test   %rax,%rax
  43578e:	mov    0x245c3b(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  435795:	lea    0x328ba(%rip),%rax        # 468056 <_fini+0xab52>
  43579c:	lea    0x3119d(%rip),%rsi        # 466940 <_fini+0x943c>
  4357a3:	cmove  %rax,%rdx
  4357a7:	xor    %eax,%eax
  4357a9:	callq  413c40 <BIO_printf@plt>
  4357ae:	cmpq   $0x0,0x245bfa(%rip)        # 67b3b0 <_edata+0x6a8>
  4357b6:	je     435884 <X509_get0_pubkey_bitstr@plt+0x1eeb4>
  4357bc:	mov    0x245c0d(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4357c3:	lea    0x3291d(%rip),%rsi        # 4680e7 <_fini+0xabe3>
  4357ca:	xor    %eax,%eax
  4357cc:	callq  413c40 <BIO_printf@plt>
  4357d1:	mov    0x245bd8(%rip),%rdx        # 67b3b0 <_edata+0x6a8>
  4357d8:	mov    0x245bf1(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4357df:	lea    0x3291c(%rip),%rsi        # 468102 <_fini+0xabfe>
  4357e6:	xor    %eax,%eax
  4357e8:	callq  413c40 <BIO_printf@plt>
  4357ed:	mov    0x24389d(%rip),%edx        # 679090 <_fini+0x21bb8c>
  4357f3:	mov    0x245bd6(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4357fa:	lea    0x32912(%rip),%rsi        # 468113 <_fini+0xac0f>
  435801:	xor    %eax,%eax
  435803:	callq  413c40 <BIO_printf@plt>
  435808:	mov    0x243882(%rip),%edi        # 679090 <_fini+0x21bb8c>
  43580e:	lea    0x32914(%rip),%rsi        # 468129 <_fini+0xac25>
  435815:	mov    $0x9cd,%edx
  43581a:	callq  413d50 <CRYPTO_malloc@plt>
  43581f:	test   %rax,%rax
  435822:	mov    %rax,%rbp
  435825:	je     435884 <X509_get0_pubkey_bitstr@plt+0x1eeb4>
  435827:	mov    0x245b82(%rip),%r12        # 67b3b0 <_edata+0x6a8>
  43582e:	mov    %r12,%rdi
  435831:	callq  413470 <strlen@plt>
  435836:	movslq 0x243853(%rip),%rdx        # 679090 <_fini+0x21bb8c>
  43583d:	xor    %r9d,%r9d
  435840:	mov    %rax,%r8
  435843:	movl   $0x0,0x8(%rsp)
  43584b:	movq   $0x0,(%rsp)
  435853:	mov    %r12,%rcx
  435856:	mov    %rbp,%rsi
  435859:	mov    %rbx,%rdi
  43585c:	callq  413410 <SSL_export_keying_material@plt>
  435861:	test   %eax,%eax
  435863:	jne    435910 <X509_get0_pubkey_bitstr@plt+0x1ef40>
  435869:	mov    0x245b60(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  435870:	lea    0x328bd(%rip),%rsi        # 468134 <_fini+0xac30>
  435877:	callq  413c40 <BIO_printf@plt>
  43587c:	mov    %rbp,%rdi
  43587f:	callq  415020 <CRYPTO_free@plt>
  435884:	mov    $0x1,%ebp
  435889:	mov    0x2028(%rsp),%rcx
  435891:	xor    %fs:0x28,%rcx
  43589a:	mov    %ebp,%eax
  43589c:	jne    4359ee <X509_get0_pubkey_bitstr@plt+0x1f01e>
  4358a2:	add    $0x2030,%rsp
  4358a9:	pop    %rbx
  4358aa:	pop    %rbp
  4358ab:	pop    %r12
  4358ad:	retq   
  4358ae:	xchg   %ax,%ax
  4358b0:	mov    %eax,%edi
  4358b2:	callq  4165d0 <BIO_sock_should_retry@plt>
  4358b7:	test   %eax,%eax
  4358b9:	mov    %eax,%ebp
  4358bb:	jne    4359c0 <X509_get0_pubkey_bitstr@plt+0x1eff0>
  4358c1:	lea    0x245478(%rip),%r12        # 67ad40 <_edata+0x38>
  4358c8:	lea    0x32793(%rip),%rsi        # 468062 <_fini+0xab5e>
  4358cf:	xor    %eax,%eax
  4358d1:	mov    (%r12),%rdi
  4358d5:	callq  413c40 <BIO_printf@plt>
  4358da:	mov    %rbx,%rdi
  4358dd:	callq  412820 <SSL_get_verify_result@plt>
  4358e2:	test   %rax,%rax
  4358e5:	je     4359e0 <X509_get0_pubkey_bitstr@plt+0x1f010>
  4358eb:	mov    %rax,%rdi
  4358ee:	callq  415690 <X509_verify_cert_error_string@plt>
  4358f3:	mov    (%r12),%rdi
  4358f7:	lea    0x3276b(%rip),%rsi        # 468069 <_fini+0xab65>
  4358fe:	mov    %rax,%rdx
  435901:	xor    %eax,%eax
  435903:	callq  413c40 <BIO_printf@plt>
  435908:	jmpq   435889 <X509_get0_pubkey_bitstr@plt+0x1eeb9>
  43590d:	nopl   (%rax)
  435910:	mov    0x245ab9(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  435917:	lea    0x32821(%rip),%rsi        # 46813f <_fini+0xac3b>
  43591e:	xor    %eax,%eax
  435920:	xor    %ebx,%ebx
  435922:	callq  413c40 <BIO_printf@plt>
  435927:	mov    0x243763(%rip),%eax        # 679090 <_fini+0x21bb8c>
  43592d:	test   %eax,%eax
  43592f:	jle    435961 <X509_get0_pubkey_bitstr@plt+0x1ef91>
  435931:	nopl   0x0(%rax)
  435938:	movzbl 0x0(%rbp,%rbx,1),%edx
  43593d:	mov    0x245a8c(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  435944:	lea    0x2b455(%rip),%rsi        # 460da0 <_fini+0x389c>
  43594b:	xor    %eax,%eax
  43594d:	callq  413c40 <BIO_printf@plt>
  435952:	lea    0x1(%rbx),%edx
  435955:	add    $0x1,%rbx
  435959:	cmp    %edx,0x243731(%rip)        # 679090 <_fini+0x21bb8c>
  43595f:	jg     435938 <X509_get0_pubkey_bitstr@plt+0x1ef68>
  435961:	mov    0x245a68(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  435968:	lea    0x2f230(%rip),%rsi        # 464b9f <_fini+0x769b>
  43596f:	xor    %eax,%eax
  435971:	callq  413c40 <BIO_printf@plt>
  435976:	jmpq   43587c <X509_get0_pubkey_bitstr@plt+0x1eeac>
  43597b:	nopl   0x0(%rax,%rax,1)
  435980:	mov    0x245a49(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  435987:	lea    0x30f6a(%rip),%rsi        # 4668f8 <_fini+0x93f4>
  43598e:	xor    %eax,%eax
  435990:	callq  413c40 <BIO_printf@plt>
  435995:	jmpq   435746 <X509_get0_pubkey_bitstr@plt+0x1ed76>
  43599a:	nopw   0x0(%rax,%rax,1)
  4359a0:	mov    0x245a29(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4359a7:	lea    0x32726(%rip),%rsi        # 4680d4 <_fini+0xabd0>
  4359ae:	xor    %eax,%eax
  4359b0:	callq  413c40 <BIO_printf@plt>
  4359b5:	jmpq   43572d <X509_get0_pubkey_bitstr@plt+0x1ed5d>
  4359ba:	nopw   0x0(%rax,%rax,1)
  4359c0:	mov    0x245a09(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4359c7:	lea    0x3268d(%rip),%rsi        # 46805b <_fini+0xab57>
  4359ce:	xor    %eax,%eax
  4359d0:	mov    $0x1,%ebp
  4359d5:	callq  413c40 <BIO_printf@plt>
  4359da:	jmpq   435889 <X509_get0_pubkey_bitstr@plt+0x1eeb9>
  4359df:	nop
  4359e0:	mov    (%r12),%rdi
  4359e4:	callq  413f40 <ERR_print_errors@plt>
  4359e9:	jmpq   435889 <X509_get0_pubkey_bitstr@plt+0x1eeb9>
  4359ee:	callq  414c30 <__stack_chk_fail@plt>
  4359f3:	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  435a00:	push   %r15
  435a02:	mov    $0x4000,%edi
  435a07:	push   %r14
  435a09:	mov    %rdx,%r14
  435a0c:	mov    $0x7c4,%edx
  435a11:	push   %r13
  435a13:	push   %r12
  435a15:	mov    %esi,%r12d
  435a18:	lea    0x3270a(%rip),%rsi        # 468129 <_fini+0xac25>
  435a1f:	push   %rbp
  435a20:	push   %rbx
  435a21:	sub    $0xd8,%rsp
  435a28:	mov    %fs:0x28,%rax
  435a31:	mov    %rax,0xc8(%rsp)
  435a39:	xor    %eax,%eax
  435a3b:	callq  413d50 <CRYPTO_malloc@plt>
  435a40:	test   %rax,%rax
  435a43:	mov    %rax,%rbp
  435a46:	je     436390 <X509_get0_pubkey_bitstr@plt+0x1f9c0>
  435a4c:	mov    0x2459a1(%rip),%r13d        # 67b3f4 <_edata+0x6ec>
  435a53:	test   %r13d,%r13d
  435a56:	jne    435e28 <X509_get0_pubkey_bitstr@plt+0x1f458>
  435a5c:	mov    0x245985(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  435a63:	callq  413ae0 <SSL_new@plt>
  435a68:	mov    0x245955(%rip),%r11d        # 67b3c4 <_edata+0x6bc>
  435a6f:	mov    %rax,%rbx
  435a72:	test   %r11d,%r11d
  435a75:	jne    4360e0 <X509_get0_pubkey_bitstr@plt+0x1f710>
  435a7b:	mov    0x24593e(%rip),%r10d        # 67b3c0 <_edata+0x6b8>
  435a82:	test   %r10d,%r10d
  435a85:	jne    436090 <X509_get0_pubkey_bitstr@plt+0x1f6c0>
  435a8b:	callq  412a00 <kssl_ctx_new@plt>
  435a90:	test   %rax,%rax
  435a93:	mov    %rax,%r13
  435a96:	je     435acb <X509_get0_pubkey_bitstr@plt+0x1f0fb>
  435a98:	mov    %rax,%rsi
  435a9b:	mov    %rbx,%rdi
  435a9e:	callq  4140b0 <SSL_set0_kssl_ctx@plt>
  435aa3:	lea    0x32e39(%rip),%rdx        # 4688e3 <_fini+0xb3df>
  435aaa:	mov    $0x3,%esi
  435aaf:	mov    %r13,%rdi
  435ab2:	callq  414fa0 <kssl_ctx_setstring@plt>
  435ab7:	lea    0x326c6(%rip),%rdx        # 468184 <_fini+0xac80>
  435abe:	mov    $0x4,%esi
  435ac3:	mov    %r13,%rdi
  435ac6:	callq  414fa0 <kssl_ctx_setstring@plt>
  435acb:	test   %r14,%r14
  435ace:	je     435ae5 <X509_get0_pubkey_bitstr@plt+0x1f115>
  435ad0:	mov    %r14,%rdi
  435ad3:	callq  413470 <strlen@plt>
  435ad8:	mov    %r14,%rsi
  435adb:	mov    %eax,%edx
  435add:	mov    %rbx,%rdi
  435ae0:	callq  414e40 <SSL_set_session_id_context@plt>
  435ae5:	mov    %rbx,%rdi
  435ae8:	callq  414e00 <SSL_clear@plt>
  435aed:	mov    %rbx,%rdi
  435af0:	callq  415c90 <SSL_version@plt>
  435af5:	xor    %esi,%esi
  435af7:	cmp    $0xfeff,%eax
  435afc:	mov    %r12d,%edi
  435aff:	je     436110 <X509_get0_pubkey_bitstr@plt+0x1f740>
  435b05:	callq  4160f0 <BIO_new_socket@plt>
  435b0a:	mov    %rax,%r13
  435b0d:	mov    0x2458dc(%rip),%r8d        # 67b3f0 <_edata+0x6e8>
  435b14:	test   %r8d,%r8d
  435b17:	jne    436068 <X509_get0_pubkey_bitstr@plt+0x1f698>
  435b1d:	mov    %r13,%rdx
  435b20:	mov    %r13,%rsi
  435b23:	mov    %rbx,%rdi
  435b26:	callq  413bb0 <SSL_set_bio@plt>
  435b2b:	mov    %rbx,%rdi
  435b2e:	callq  4162d0 <SSL_set_accept_state@plt>
  435b33:	mov    0x24588f(%rip),%edi        # 67b3c8 <_edata+0x6c0>
  435b39:	test   %edi,%edi
  435b3b:	jne    436020 <X509_get0_pubkey_bitstr@plt+0x1f650>
  435b41:	mov    0x245875(%rip),%esi        # 67b3bc <_edata+0x6b4>
  435b47:	test   %esi,%esi
  435b49:	jne    435fb8 <X509_get0_pubkey_bitstr@plt+0x1f5e8>
  435b4f:	mov    0x24586f(%rip),%ecx        # 67b3c4 <_edata+0x6bc>
  435b55:	test   %ecx,%ecx
  435b57:	jne    435feb <X509_get0_pubkey_bitstr@plt+0x1f61b>
  435b5d:	lea    0x1(%r12),%eax
  435b62:	movq   $0x1,(%rsp)
  435b6a:	mov    %eax,0x1c(%rsp)
  435b6e:	mov    %r12d,%eax
  435b71:	sar    $0x1f,%eax
  435b74:	shr    $0x1a,%eax
  435b77:	lea    (%r12,%rax,1),%ecx
  435b7b:	and    $0x3f,%ecx
  435b7e:	sub    %eax,%ecx
  435b80:	lea    0x40(%rsp),%rax
  435b85:	shlq   %cl,(%rsp)
  435b89:	mov    %rax,0x8(%rsp)
  435b8e:	movslq %r12d,%rax
  435b91:	mov    %rax,0x10(%rsp)
  435b96:	lea    0x30(%rsp),%rax
  435b9b:	mov    %rax,0x20(%rsp)
  435ba0:	mov    %rbx,%rdi
  435ba3:	callq  415040 <SSL_pending@plt>
  435ba8:	test   %eax,%eax
  435baa:	je     435be8 <X509_get0_pubkey_bitstr@plt+0x1f218>
  435bac:	mov    %rbx,%rdi
  435baf:	callq  415970 <SSL_state@plt>
  435bb4:	cmp    $0x3,%eax
  435bb7:	je     436238 <X509_get0_pubkey_bitstr@plt+0x1f868>
  435bbd:	mov    %rbx,%rdi
  435bc0:	callq  435550 <X509_get0_pubkey_bitstr@plt+0x1eb80>
  435bc5:	test   %eax,%eax
  435bc7:	js     43641c <X509_get0_pubkey_bitstr@plt+0x1fa4c>
  435bcd:	nopl   (%rax)
  435bd0:	je     435e94 <X509_get0_pubkey_bitstr@plt+0x1f4c4>
  435bd6:	mov    %rbx,%rdi
  435bd9:	callq  415040 <SSL_pending@plt>
  435bde:	test   %eax,%eax
  435be0:	jne    435bac <X509_get0_pubkey_bitstr@plt+0x1f1dc>
  435be2:	nopw   0x0(%rax,%rax,1)
  435be8:	mov    $0x10,%ecx
  435bed:	mov    0x8(%rsp),%rdi
  435bf2:	cld    
  435bf3:	rep stos %rax,%es:(%rdi)
  435bf6:	mov    0x240313(%rip),%r13        # 675f10 <_fini+0x218a0c>
  435bfd:	mov    0x0(%r13),%rdi
  435c01:	callq  4149a0 <fileno@plt>
  435c06:	movslq %eax,%rdi
  435c09:	callq  415c10 <__fdelt_chk@plt>
  435c0e:	mov    0x0(%r13),%rdi
  435c12:	mov    %rax,%r15
  435c15:	mov    0x40(%rsp,%rax,8),%r14
  435c1a:	callq  4149a0 <fileno@plt>
  435c1f:	cltd   
  435c20:	mov    0x10(%rsp),%rdi
  435c25:	shr    $0x1a,%edx
  435c28:	lea    (%rax,%rdx,1),%ecx
  435c2b:	and    $0x3f,%ecx
  435c2e:	sub    %edx,%ecx
  435c30:	mov    $0x1,%edx
  435c35:	shl    %cl,%rdx
  435c38:	or     %r14,%rdx
  435c3b:	mov    %rdx,0x40(%rsp,%r15,8)
  435c40:	callq  415c10 <__fdelt_chk@plt>
  435c45:	mov    %rbx,%rdi
  435c48:	mov    (%rsp),%rdx
  435c4c:	or     %rdx,0x40(%rsp,%rax,8)
  435c51:	callq  415c90 <SSL_version@plt>
  435c56:	xor    %r8d,%r8d
  435c59:	cmp    $0xfeff,%eax
  435c5e:	je     436320 <X509_get0_pubkey_bitstr@plt+0x1f950>
  435c64:	mov    0x8(%rsp),%rsi
  435c69:	xor    %ecx,%ecx
  435c6b:	xor    %edx,%edx
  435c6d:	mov    0x1c(%rsp),%edi
  435c71:	callq  4146b0 <select@plt>
  435c76:	mov    %rbx,%rdi
  435c79:	mov    %eax,%r14d
  435c7c:	callq  415c90 <SSL_version@plt>
  435c81:	cmp    $0xfeff,%eax
  435c86:	je     436350 <X509_get0_pubkey_bitstr@plt+0x1f980>
  435c8c:	test   %r14d,%r14d
  435c8f:	jle    435ba0 <X509_get0_pubkey_bitstr@plt+0x1f1d0>
  435c95:	mov    0x0(%r13),%rdi
  435c99:	callq  4149a0 <fileno@plt>
  435c9e:	movslq %eax,%rdi
  435ca1:	callq  415c10 <__fdelt_chk@plt>
  435ca6:	mov    0x0(%r13),%rdi
  435caa:	mov    0x40(%rsp,%rax,8),%r15
  435caf:	callq  4149a0 <fileno@plt>
  435cb4:	mov    0x10(%rsp),%rdi
  435cb9:	mov    %eax,%r14d
  435cbc:	callq  415c10 <__fdelt_chk@plt>
  435cc1:	mov    %r14d,%edx
  435cc4:	mov    0x40(%rsp,%rax,8),%rax
  435cc9:	sar    $0x1f,%edx
  435ccc:	shr    $0x1a,%edx
  435ccf:	mov    %rax,0x28(%rsp)
  435cd4:	lea    (%r14,%rdx,1),%eax
  435cd8:	and    $0x3f,%eax
  435cdb:	sub    %edx,%eax
  435cdd:	bt     %rax,%r15
  435ce1:	jae    435f87 <X509_get0_pubkey_bitstr@plt+0x1f5b7>
  435ce7:	lea    0x24566a(%rip),%rax        # 67b358 <_edata+0x650>
  435cee:	mov    (%rax),%edx
  435cf0:	test   %edx,%edx
  435cf2:	je     435fa0 <X509_get0_pubkey_bitstr@plt+0x1f5d0>
  435cf8:	mov    $0x2000,%esi
  435cfd:	mov    %rbp,%rdi
  435d00:	callq  448a50 <X509_get0_pubkey_bitstr@plt+0x32080>
  435d05:	test   %eax,%eax
  435d07:	mov    %eax,%r14d
  435d0a:	jle    436428 <X509_get0_pubkey_bitstr@plt+0x1fa58>
  435d10:	xor    %ecx,%ecx
  435d12:	xor    %esi,%esi
  435d14:	nopl   0x0(%rax)
  435d18:	xor    %eax,%eax
  435d1a:	cmpb   $0xa,0x0(%rbp,%rcx,1)
  435d1f:	sete   %al
  435d22:	add    $0x1,%rcx
  435d26:	add    %eax,%esi
  435d28:	cmp    %ecx,%r14d
  435d2b:	jg     435d18 <X509_get0_pubkey_bitstr@plt+0x1f348>
  435d2d:	mov    %r14d,%ecx
  435d30:	sub    $0x1,%ecx
  435d33:	js     435d7c <X509_get0_pubkey_bitstr@plt+0x1f3ac>
  435d35:	movslq %ecx,%r8
  435d38:	add    %rbp,%r8
  435d3b:	jmp    435d4c <X509_get0_pubkey_bitstr@plt+0x1f37c>
  435d3d:	nopl   (%rax)
  435d40:	sub    $0x1,%ecx
  435d43:	sub    $0x1,%r8
  435d47:	cmp    $0xffffffff,%ecx
  435d4a:	je     435d7c <X509_get0_pubkey_bitstr@plt+0x1f3ac>
  435d4c:	movzbl (%r8),%edx
  435d50:	lea    (%rcx,%rsi,1),%eax
  435d53:	cltq   
  435d55:	mov    %dl,0x0(%rbp,%rax,1)
  435d59:	cmpb   $0xa,(%r8)
  435d5d:	jne    435d40 <X509_get0_pubkey_bitstr@plt+0x1f370>
  435d5f:	sub    $0x1,%esi
  435d62:	add    $0x1,%r14d
  435d66:	sub    $0x1,%r8
  435d6a:	lea    (%rcx,%rsi,1),%eax
  435d6d:	sub    $0x1,%ecx
  435d70:	cmp    $0xffffffff,%ecx
  435d73:	cltq   
  435d75:	movb   $0xd,0x0(%rbp,%rax,1)
  435d7a:	jne    435d4c <X509_get0_pubkey_bitstr@plt+0x1f37c>
  435d7c:	test   %esi,%esi
  435d7e:	jne    4364e6 <X509_get0_pubkey_bitstr@plt+0x1fb16>
  435d84:	mov    0x24562e(%rip),%eax        # 67b3b8 <_edata+0x6b0>
  435d8a:	test   %eax,%eax
  435d8c:	jne    435de0 <X509_get0_pubkey_bitstr@plt+0x1f410>
  435d8e:	test   %r14d,%r14d
  435d91:	jle    43642f <X509_get0_pubkey_bitstr@plt+0x1fa5f>
  435d97:	movzbl 0x0(%rbp),%eax
  435d9b:	cmp    $0x51,%al
  435d9d:	je     43642f <X509_get0_pubkey_bitstr@plt+0x1fa5f>
  435da3:	cmp    $0x71,%al
  435da5:	je     43649c <X509_get0_pubkey_bitstr@plt+0x1facc>
  435dab:	cmp    $0x42,%al
  435dad:	je     436298 <X509_get0_pubkey_bitstr@plt+0x1f8c8>
  435db3:	cmp    $0x72,%al
  435db5:	je     4362e0 <X509_get0_pubkey_bitstr@plt+0x1f910>
  435dbb:	cmp    $0x52,%al
  435dbd:	nopl   (%rax)
  435dc0:	jne    436190 <X509_get0_pubkey_bitstr@plt+0x1f7c0>
  435dc6:	movzbl 0x1(%rbp),%eax
  435dca:	cmp    $0xd,%al
  435dcc:	je     436408 <X509_get0_pubkey_bitstr@plt+0x1fa38>
  435dd2:	cmp    $0xa,%al
  435dd4:	je     436408 <X509_get0_pubkey_bitstr@plt+0x1fa38>
  435dda:	nopw   0x0(%rax,%rax,1)
  435de0:	xor    %r15d,%r15d
  435de3:	lea    0x0(%rbp,%r15,1),%rsi
  435de8:	mov    %r14d,%edx
  435deb:	mov    %rbx,%rdi
  435dee:	callq  4136c0 <SSL_write@plt>
  435df3:	mov    %rbx,%rdi
  435df6:	mov    %eax,%esi
  435df8:	mov    %eax,%r13d
  435dfb:	callq  416920 <SSL_get_error@plt>
  435e00:	cmp    $0x6,%eax
  435e03:	ja     435f75 <X509_get0_pubkey_bitstr@plt+0x1f5a5>
  435e09:	mov    %eax,%ecx
  435e0b:	lea    0x32936(%rip),%rax        # 468748 <_fini+0xb244>
  435e12:	lea    0x3292f(%rip),%rdx        # 468748 <_fini+0xb244>
  435e19:	movslq (%rax,%rcx,4),%rax
  435e1d:	add    %rdx,%rax
  435e20:	jmpq   *%rax
  435e22:	nopw   0x0(%rax,%rax,1)
  435e28:	mov    0x24558a(%rip),%ebx        # 67b3b8 <_edata+0x6b0>
  435e2e:	movq   $0x1,0x30(%rsp)
  435e37:	test   %ebx,%ebx
  435e39:	je     436278 <X509_get0_pubkey_bitstr@plt+0x1f8a8>
  435e3f:	lea    0x30(%rsp),%rdx
  435e44:	mov    $0x5421,%esi
  435e49:	mov    %r12d,%edi
  435e4c:	callq  415590 <BIO_socket_ioctl@plt>
  435e51:	test   %eax,%eax
  435e53:	jns    435a5c <X509_get0_pubkey_bitstr@plt+0x1f08c>
  435e59:	lea    0x244ee0(%rip),%rax        # 67ad40 <_edata+0x38>
  435e60:	mov    (%rax),%rdi
  435e63:	callq  413f40 <ERR_print_errors@plt>
  435e68:	jmpq   435a5c <X509_get0_pubkey_bitstr@plt+0x1f08c>
  435e6d:	nopl   (%rax)
  435e70:	mov    0x245559(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  435e77:	lea    0x321e4(%rip),%rsi        # 468062 <_fini+0xab5e>
  435e7e:	xor    %eax,%eax
  435e80:	callq  413c40 <BIO_printf@plt>
  435e85:	lea    0x244eb4(%rip),%rax        # 67ad40 <_edata+0x38>
  435e8c:	mov    (%rax),%rdi
  435e8f:	callq  413f40 <ERR_print_errors@plt>
  435e94:	mov    $0x1,%r12d
  435e9a:	test   %rbx,%rbx
  435e9d:	je     435ec9 <X509_get0_pubkey_bitstr@plt+0x1f4f9>
  435e9f:	mov    0x24552a(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  435ea6:	lea    0x3237e(%rip),%rsi        # 46822b <_fini+0xad27>
  435ead:	xor    %eax,%eax
  435eaf:	callq  413c40 <BIO_printf@plt>
  435eb4:	mov    %rbx,%rdi
  435eb7:	mov    $0x3,%esi
  435ebc:	callq  416740 <SSL_set_shutdown@plt>
  435ec1:	mov    %rbx,%rdi
  435ec4:	callq  413820 <SSL_free@plt>
  435ec9:	mov    0x245500(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  435ed0:	lea    0x3227e(%rip),%rsi        # 468155 <_fini+0xac51>
  435ed7:	xor    %eax,%eax
  435ed9:	callq  413c40 <BIO_printf@plt>
  435ede:	mov    $0x4000,%esi
  435ee3:	mov    %rbp,%rdi
  435ee6:	callq  413ef0 <OPENSSL_cleanse@plt>
  435eeb:	mov    %rbp,%rdi
  435eee:	callq  415020 <CRYPTO_free@plt>
  435ef3:	test   %r12d,%r12d
  435ef6:	js     435f0d <X509_get0_pubkey_bitstr@plt+0x1f53d>
  435ef8:	mov    0x2454d1(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  435eff:	lea    0x32338(%rip),%rsi        # 46823e <_fini+0xad3a>
  435f06:	xor    %eax,%eax
  435f08:	callq  413c40 <BIO_printf@plt>
  435f0d:	mov    0xc8(%rsp),%rbx
  435f15:	xor    %fs:0x28,%rbx
  435f1e:	mov    %r12d,%eax
  435f21:	jne    4364e1 <X509_get0_pubkey_bitstr@plt+0x1fb11>
  435f27:	add    $0xd8,%rsp
  435f2e:	pop    %rbx
  435f2f:	pop    %rbp
  435f30:	pop    %r12
  435f32:	pop    %r13
  435f34:	pop    %r14
  435f36:	pop    %r15
  435f38:	retq   
  435f39:	nopl   0x0(%rax)
  435f40:	mov    0x245489(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  435f47:	lea    0x32264(%rip),%rsi        # 4681b2 <_fini+0xacae>
  435f4e:	xor    %eax,%eax
  435f50:	mov    $0x1,%r12d
  435f56:	callq  413c40 <BIO_printf@plt>
  435f5b:	jmpq   435e9a <X509_get0_pubkey_bitstr@plt+0x1f4ca>
  435f60:	mov    0x245469(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  435f67:	lea    0x322a4(%rip),%rsi        # 468212 <_fini+0xad0e>
  435f6e:	xor    %eax,%eax
  435f70:	callq  413c40 <BIO_printf@plt>
  435f75:	movslq %r13d,%rax
  435f78:	sub    %r13d,%r14d
  435f7b:	add    %rax,%r15
  435f7e:	test   %r14d,%r14d
  435f81:	jg     435de3 <X509_get0_pubkey_bitstr@plt+0x1f413>
  435f87:	mov    0x28(%rsp),%rax
  435f8c:	test   %rax,(%rsp)
  435f90:	je     435ba0 <X509_get0_pubkey_bitstr@plt+0x1f1d0>
  435f96:	jmpq   435bac <X509_get0_pubkey_bitstr@plt+0x1f1dc>
  435f9b:	nopl   0x0(%rax,%rax,1)
  435fa0:	mov    $0x4000,%esi
  435fa5:	mov    %rbp,%rdi
  435fa8:	callq  448a50 <X509_get0_pubkey_bitstr@plt+0x32080>
  435fad:	mov    %eax,%r14d
  435fb0:	jmpq   435d84 <X509_get0_pubkey_bitstr@plt+0x1f3b4>
  435fb5:	nopl   (%rax)
  435fb8:	lea    0x13151(%rip),%rsi        # 449110 <X509_get0_pubkey_bitstr@plt+0x32740>
  435fbf:	mov    %rbx,%rdi
  435fc2:	callq  416500 <SSL_set_msg_callback@plt>
  435fc7:	mov    0x245402(%rip),%rcx        # 67b3d0 <_edata+0x6c8>
  435fce:	xor    %edx,%edx
  435fd0:	mov    $0x10,%esi
  435fd5:	mov    %rbx,%rdi
  435fd8:	callq  4162b0 <SSL_ctrl@plt>
  435fdd:	mov    0x2453e1(%rip),%ecx        # 67b3c4 <_edata+0x6bc>
  435fe3:	test   %ecx,%ecx
  435fe5:	je     435b5d <X509_get0_pubkey_bitstr@plt+0x1f18d>
  435feb:	lea    0x137ee(%rip),%rdx        # 4497e0 <X509_get0_pubkey_bitstr@plt+0x32e10>
  435ff2:	mov    %rbx,%rdi
  435ff5:	mov    $0x38,%esi
  435ffa:	callq  415d50 <SSL_callback_ctrl@plt>
  435fff:	mov    0x2453ca(%rip),%rcx        # 67b3d0 <_edata+0x6c8>
  436006:	xor    %edx,%edx
  436008:	mov    $0x39,%esi
  43600d:	mov    %rbx,%rdi
  436010:	callq  4162b0 <SSL_ctrl@plt>
  436015:	jmpq   435b5d <X509_get0_pubkey_bitstr@plt+0x1f18d>
  43601a:	nopw   0x0(%rax,%rax,1)
  436020:	mov    $0x1,%esi
  436025:	mov    %rbx,%rdi
  436028:	callq  4134a0 <SSL_set_debug@plt>
  43602d:	mov    %rbx,%rdi
  436030:	callq  415990 <SSL_get_rbio@plt>
  436035:	lea    0x12e04(%rip),%rsi        # 448e40 <X509_get0_pubkey_bitstr@plt+0x32470>
  43603c:	mov    %rax,%rdi
  43603f:	callq  413800 <BIO_set_callback@plt>
  436044:	mov    0x245385(%rip),%r13        # 67b3d0 <_edata+0x6c8>
  43604b:	mov    %rbx,%rdi
  43604e:	callq  415990 <SSL_get_rbio@plt>
  436053:	mov    %rax,%rdi
  436056:	mov    %r13,%rsi
  436059:	callq  4140d0 <BIO_set_callback_arg@plt>
  43605e:	jmpq   435b41 <X509_get0_pubkey_bitstr@plt+0x1f171>
  436063:	nopl   0x0(%rax,%rax,1)
  436068:	callq  415f20 <BIO_f_nbio_test@plt>
  43606d:	mov    %rax,%rdi
  436070:	callq  414a20 <BIO_new@plt>
  436075:	mov    %r13,%rsi
  436078:	mov    %rax,%rdi
  43607b:	callq  415ac0 <BIO_push@plt>
  436080:	mov    %rax,%r13
  436083:	jmpq   435b1d <X509_get0_pubkey_bitstr@plt+0x1f14d>
  436088:	nopl   0x0(%rax,%rax,1)
  436090:	mov    0x245351(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  436097:	lea    -0xf9e(%rip),%rdx        # 435100 <X509_get0_pubkey_bitstr@plt+0x1e730>
  43609e:	mov    $0x3f,%esi
  4360a3:	callq  414a60 <SSL_CTX_callback_ctrl@plt>
  4360a8:	lea    0x244c91(%rip),%rax        # 67ad40 <_edata+0x38>
  4360af:	mov    0x245332(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  4360b6:	lea    0x242fa3(%rip),%rcx        # 679060 <_fini+0x21bb5c>
  4360bd:	xor    %edx,%edx
  4360bf:	mov    $0x40,%esi
  4360c4:	mov    (%rax),%rax
  4360c7:	mov    %rax,0x242fb2(%rip)        # 679080 <_fini+0x21bb7c>
  4360ce:	callq  413e30 <SSL_CTX_ctrl@plt>
  4360d3:	jmpq   435a8b <X509_get0_pubkey_bitstr@plt+0x1f0bb>
  4360d8:	nopl   0x0(%rax,%rax,1)
  4360e0:	lea    0x136f9(%rip),%rdx        # 4497e0 <X509_get0_pubkey_bitstr@plt+0x32e10>
  4360e7:	mov    $0x38,%esi
  4360ec:	mov    %rax,%rdi
  4360ef:	callq  415d50 <SSL_callback_ctrl@plt>
  4360f4:	mov    0x2452d5(%rip),%rcx        # 67b3d0 <_edata+0x6c8>
  4360fb:	xor    %edx,%edx
  4360fd:	mov    $0x39,%esi
  436102:	mov    %rbx,%rdi
  436105:	callq  4162b0 <SSL_ctrl@plt>
  43610a:	jmpq   435a7b <X509_get0_pubkey_bitstr@plt+0x1f0ab>
  43610f:	nop
  436110:	callq  415d20 <BIO_new_dgram@plt>
  436115:	mov    0x245274(%rip),%r9d        # 67b390 <_edata+0x688>
  43611c:	mov    %rax,%r13
  43611f:	test   %r9d,%r9d
  436122:	jne    4361e0 <X509_get0_pubkey_bitstr@plt+0x1f810>
  436128:	xor    %ecx,%ecx
  43612a:	cmpq   $0x1c,0x245256(%rip)        # 67b388 <_edata+0x680>
  436132:	jg     436160 <X509_get0_pubkey_bitstr@plt+0x1f790>
  436134:	xor    %edx,%edx
  436136:	mov    $0x27,%esi
  43613b:	mov    %r13,%rdi
  43613e:	callq  412af0 <BIO_ctrl@plt>
  436143:	xor    %ecx,%ecx
  436145:	mov    $0x2000,%edx
  43614a:	mov    $0x20,%esi
  43614f:	mov    %rbx,%rdi
  436152:	callq  4162b0 <SSL_ctrl@plt>
  436157:	jmpq   435b0d <X509_get0_pubkey_bitstr@plt+0x1f13d>
  43615c:	nopl   0x0(%rax)
  436160:	mov    %rbx,%rdi
  436163:	mov    $0x1000,%edx
  436168:	mov    $0x20,%esi
  43616d:	callq  4162b0 <SSL_ctrl@plt>
  436172:	mov    0x24520f(%rip),%rax        # 67b388 <_edata+0x680>
  436179:	xor    %ecx,%ecx
  43617b:	mov    $0x11,%esi
  436180:	mov    %rbx,%rdi
  436183:	lea    -0x1c(%rax),%rdx
  436187:	callq  4162b0 <SSL_ctrl@plt>
  43618c:	jmp    436143 <X509_get0_pubkey_bitstr@plt+0x1f773>
  43618e:	xchg   %ax,%ax
  436190:	cmp    $0x50,%al
  436192:	jne    4361b4 <X509_get0_pubkey_bitstr@plt+0x1f7e4>
  436194:	mov    %rbx,%rdi
  436197:	callq  413c50 <SSL_get_wbio@plt>
  43619c:	lea    0x32053(%rip),%rsi        # 4681f6 <_fini+0xacf2>
  4361a3:	mov    $0x1b,%edx
  4361a8:	mov    %rax,%rdi
  4361ab:	callq  412db0 <BIO_write@plt>
  4361b0:	movzbl 0x0(%rbp),%eax
  4361b4:	cmp    $0x53,%al
  4361b6:	jne    435de0 <X509_get0_pubkey_bitstr@plt+0x1f410>
  4361bc:	mov    %rbx,%rdi
  4361bf:	callq  415c60 <SSL_get_SSL_CTX@plt>
  4361c4:	mov    0x245205(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4361cb:	mov    %rax,%rsi
  4361ce:	callq  434f10 <X509_get0_pubkey_bitstr@plt+0x1e540>
  4361d3:	jmpq   435de0 <X509_get0_pubkey_bitstr@plt+0x1f410>
  4361d8:	nopl   0x0(%rax,%rax,1)
  4361e0:	lea    0x30(%rsp),%r14
  4361e5:	xor    %edx,%edx
  4361e7:	mov    $0x21,%esi
  4361ec:	mov    %rax,%rdi
  4361ef:	movq   $0x0,0x30(%rsp)
  4361f8:	movq   $0x3d090,0x38(%rsp)
  436201:	mov    %r14,%rcx
  436204:	callq  412af0 <BIO_ctrl@plt>
  436209:	mov    %r14,%rcx
  43620c:	xor    %edx,%edx
  43620e:	mov    $0x23,%esi
  436213:	mov    %r13,%rdi
  436216:	movq   $0x0,0x30(%rsp)
  43621f:	movq   $0x3d090,0x38(%rsp)
  436228:	callq  412af0 <BIO_ctrl@plt>
  43622d:	jmpq   436128 <X509_get0_pubkey_bitstr@plt+0x1f758>
  436232:	nopw   0x0(%rax,%rax,1)
  436238:	lea    0x32525(%rip),%r13        # 468764 <_fini+0xb260>
  43623f:	mov    $0x4000,%edx
  436244:	mov    %rbp,%rsi
  436247:	mov    %rbx,%rdi
  43624a:	callq  414a40 <SSL_read@plt>
  43624f:	mov    %rbx,%rdi
  436252:	mov    %eax,%esi
  436254:	mov    %eax,%r14d
  436257:	callq  416920 <SSL_get_error@plt>
  43625c:	cmp    $0x6,%eax
  43625f:	ja     435ba0 <X509_get0_pubkey_bitstr@plt+0x1f1d0>
  436265:	mov    %eax,%edx
  436267:	movslq 0x0(%r13,%rdx,4),%rdx
  43626c:	add    %r13,%rdx
  43626f:	jmpq   *%rdx
  436271:	nopl   0x0(%rax)
  436278:	lea    0x244ac1(%rip),%rax        # 67ad40 <_edata+0x38>
  43627f:	lea    0x31ee2(%rip),%rsi        # 468168 <_fini+0xac64>
  436286:	mov    (%rax),%rdi
  436289:	xor    %eax,%eax
  43628b:	callq  413c40 <BIO_printf@plt>
  436290:	jmpq   435e3f <X509_get0_pubkey_bitstr@plt+0x1f46f>
  436295:	nopl   (%rax)
  436298:	movzbl 0x1(%rbp),%eax
  43629c:	cmp    $0xd,%al
  43629e:	je     4362a8 <X509_get0_pubkey_bitstr@plt+0x1f8d8>
  4362a0:	cmp    $0xa,%al
  4362a2:	jne    435de0 <X509_get0_pubkey_bitstr@plt+0x1f410>
  4362a8:	lea    0x244a91(%rip),%rax        # 67ad40 <_edata+0x38>
  4362af:	lea    0x31f1a(%rip),%rsi        # 4681d0 <_fini+0xaccc>
  4362b6:	mov    (%rax),%rdi
  4362b9:	xor    %eax,%eax
  4362bb:	callq  413c40 <BIO_printf@plt>
  4362c0:	xor    %ecx,%ecx
  4362c2:	xor    %edx,%edx
  4362c4:	mov    $0x55,%esi
  4362c9:	mov    %rbx,%rdi
  4362cc:	callq  4162b0 <SSL_ctrl@plt>
  4362d1:	jmpq   435ba0 <X509_get0_pubkey_bitstr@plt+0x1f1d0>
  4362d6:	nopw   %cs:0x0(%rax,%rax,1)
  4362e0:	movzbl 0x1(%rbp),%eax
  4362e4:	cmp    $0xd,%al
  4362e6:	je     4362f0 <X509_get0_pubkey_bitstr@plt+0x1f920>
  4362e8:	cmp    $0xa,%al
  4362ea:	jne    435de0 <X509_get0_pubkey_bitstr@plt+0x1f410>
  4362f0:	mov    %rbx,%rdi
  4362f3:	callq  413e00 <SSL_renegotiate@plt>
  4362f8:	mov    %rbx,%rdi
  4362fb:	callq  413350 <SSL_do_handshake@plt>
  436300:	lea    0x31ed7(%rip),%rsi        # 4681de <_fini+0xacda>
  436307:	mov    %eax,%edx
  436309:	mov    $0x1,%edi
  43630e:	xor    %eax,%eax
  436310:	callq  412780 <__printf_chk@plt>
  436315:	jmpq   435ba0 <X509_get0_pubkey_bitstr@plt+0x1f1d0>
  43631a:	nopw   0x0(%rax,%rax,1)
  436320:	mov    0x20(%rsp),%r15
  436325:	xor    %edx,%edx
  436327:	mov    $0x49,%esi
  43632c:	mov    %rbx,%rdi
  43632f:	mov    %r8,0x28(%rsp)
  436334:	mov    %r15,%rcx
  436337:	callq  4162b0 <SSL_ctrl@plt>
  43633c:	mov    0x28(%rsp),%r8
  436341:	test   %rax,%rax
  436344:	cmovne %r15,%r8
  436348:	jmpq   435c64 <X509_get0_pubkey_bitstr@plt+0x1f294>
  43634d:	nopl   (%rax)
  436350:	xor    %ecx,%ecx
  436352:	xor    %edx,%edx
  436354:	mov    $0x4a,%esi
  436359:	mov    %rbx,%rdi
  43635c:	callq  4162b0 <SSL_ctrl@plt>
  436361:	test   %rax,%rax
  436364:	jle    435c8c <X509_get0_pubkey_bitstr@plt+0x1f2bc>
  43636a:	lea    0x2449cf(%rip),%rax        # 67ad40 <_edata+0x38>
  436371:	lea    0x31e1d(%rip),%rsi        # 468195 <_fini+0xac91>
  436378:	mov    (%rax),%rdi
  43637b:	xor    %eax,%eax
  43637d:	callq  413c40 <BIO_printf@plt>
  436382:	jmpq   435c8c <X509_get0_pubkey_bitstr@plt+0x1f2bc>
  436387:	nopw   0x0(%rax,%rax,1)
  436390:	lea    0x2449a9(%rip),%rax        # 67ad40 <_edata+0x38>
  436397:	lea    0x29515(%rip),%rsi        # 45f8b3 <_fini+0x23af>
  43639e:	mov    $0x1,%r12d
  4363a4:	mov    (%rax),%rdi
  4363a7:	xor    %eax,%eax
  4363a9:	callq  413c40 <BIO_printf@plt>
  4363ae:	mov    0x24501b(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4363b5:	lea    0x31d99(%rip),%rsi        # 468155 <_fini+0xac51>
  4363bc:	xor    %eax,%eax
  4363be:	callq  413c40 <BIO_printf@plt>
  4363c3:	jmpq   435ef8 <X509_get0_pubkey_bitstr@plt+0x1f528>
  4363c8:	mov    0x245001(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4363cf:	lea    0x31e49(%rip),%rsi        # 46821f <_fini+0xad1b>
  4363d6:	xor    %eax,%eax
  4363d8:	callq  413c40 <BIO_printf@plt>
  4363dd:	jmpq   435ba0 <X509_get0_pubkey_bitstr@plt+0x1f1d0>
  4363e2:	mov    %r14d,%esi
  4363e5:	mov    %rbp,%rdi
  4363e8:	callq  448a80 <X509_get0_pubkey_bitstr@plt+0x320b0>
  4363ed:	mov    %rbx,%rdi
  4363f0:	callq  415040 <SSL_pending@plt>
  4363f5:	test   %eax,%eax
  4363f7:	jne    43623f <X509_get0_pubkey_bitstr@plt+0x1f86f>
  4363fd:	nopl   (%rax)
  436400:	jmpq   435ba0 <X509_get0_pubkey_bitstr@plt+0x1f1d0>
  436405:	nopl   (%rax)
  436408:	xor    %edx,%edx
  43640a:	mov    $0x5,%esi
  43640f:	mov    %rbx,%rdi
  436412:	callq  413530 <SSL_set_verify@plt>
  436417:	jmpq   4362f0 <X509_get0_pubkey_bitstr@plt+0x1f920>
  43641c:	xor    %r12d,%r12d
  43641f:	jmpq   435e9a <X509_get0_pubkey_bitstr@plt+0x1f4ca>
  436424:	nopl   0x0(%rax)
  436428:	xor    %esi,%esi
  43642a:	jmpq   435d2d <X509_get0_pubkey_bitstr@plt+0x1f35d>
  43642f:	mov    0x244f9a(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  436436:	lea    0x31d75(%rip),%rsi        # 4681b2 <_fini+0xacae>
  43643d:	xor    %eax,%eax
  43643f:	callq  413c40 <BIO_printf@plt>
  436444:	xor    %esi,%esi
  436446:	mov    %r12d,%edi
  436449:	callq  415460 <shutdown@plt>
  43644e:	mov    %r12d,%edi
  436451:	mov    $0xfffffff5,%r12d
  436457:	callq  4168a0 <close@plt>
  43645c:	lea    0x2448dd(%rip),%rax        # 67ad40 <_edata+0x38>
  436463:	lea    0x31d4e(%rip),%rsi        # 4681b8 <_fini+0xacb4>
  43646a:	mov    (%rax),%rdi
  43646d:	xor    %eax,%eax
  43646f:	callq  413c40 <BIO_printf@plt>
  436474:	mov    0x242c1e(%rip),%edi        # 679098 <_fini+0x21bb94>
  43647a:	test   %edi,%edi
  43647c:	js     435e9a <X509_get0_pubkey_bitstr@plt+0x1f4ca>
  436482:	mov    $0x2,%esi
  436487:	callq  415460 <shutdown@plt>
  43648c:	mov    0x242c06(%rip),%edi        # 679098 <_fini+0x21bb94>
  436492:	callq  4168a0 <close@plt>
  436497:	jmpq   435e9a <X509_get0_pubkey_bitstr@plt+0x1f4ca>
  43649c:	mov    0x244f2d(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4364a3:	lea    0x31d08(%rip),%rsi        # 4681b2 <_fini+0xacae>
  4364aa:	xor    %eax,%eax
  4364ac:	callq  413c40 <BIO_printf@plt>
  4364b1:	mov    %rbx,%rdi
  4364b4:	callq  415c90 <SSL_version@plt>
  4364b9:	cmp    $0xfeff,%eax
  4364be:	je     435e94 <X509_get0_pubkey_bitstr@plt+0x1f4c4>
  4364c4:	mov    %r12d,%edi
  4364c7:	xor    %esi,%esi
  4364c9:	callq  415460 <shutdown@plt>
  4364ce:	mov    %r12d,%edi
  4364d1:	mov    $0x1,%r12d
  4364d7:	callq  4168a0 <close@plt>
  4364dc:	jmpq   435e9a <X509_get0_pubkey_bitstr@plt+0x1f4ca>
  4364e1:	callq  414c30 <__stack_chk_fail@plt>
  4364e6:	lea    0x32293(%rip),%rcx        # 468780 <_fini+0xb27c>
  4364ed:	lea    0x31c35(%rip),%rsi        # 468129 <_fini+0xac25>
  4364f4:	lea    0x31cab(%rip),%rdi        # 4681a6 <_fini+0xaca2>
  4364fb:	mov    $0x891,%edx
  436500:	callq  413d40 <__assert_fail@plt>
  436505:	data32 nopw %cs:0x0(%rax,%rax,1)
  436510:	push   %r15
  436512:	mov    $0x4000,%edi
  436517:	push   %r14
  436519:	mov    %rdx,%r14
  43651c:	mov    $0xa1a,%edx
  436521:	push   %r13
  436523:	mov    %esi,%r13d
  436526:	lea    0x31bfc(%rip),%rsi        # 468129 <_fini+0xac25>
  43652d:	push   %r12
  43652f:	push   %rbp
  436530:	push   %rbx
  436531:	sub    $0x38,%rsp
  436535:	mov    %fs:0x28,%rax
  43653e:	mov    %rax,0x28(%rsp)
  436543:	xor    %eax,%eax
  436545:	callq  413d50 <CRYPTO_malloc@plt>
  43654a:	mov    %rax,%rbp
  43654d:	xor    %eax,%eax
  43654f:	test   %rbp,%rbp
  436552:	je     4365a8 <X509_get0_pubkey_bitstr@plt+0x1fbd8>
  436554:	callq  413840 <BIO_f_buffer@plt>
  436559:	mov    %rax,%rdi
  43655c:	callq  414a20 <BIO_new@plt>
  436561:	mov    %rax,%rbx
  436564:	callq  412d20 <BIO_f_ssl@plt>
  436569:	mov    %rax,%rdi
  43656c:	callq  414a20 <BIO_new@plt>
  436571:	test   %rax,%rax
  436574:	mov    %rax,%r15
  436577:	jne    4365d0 <X509_get0_pubkey_bitstr@plt+0x1fc00>
  436579:	mov    0x244e50(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  436580:	lea    0x31cb7(%rip),%rsi        # 46823e <_fini+0xad3a>
  436587:	xor    %eax,%eax
  436589:	callq  413c40 <BIO_printf@plt>
  43658e:	mov    %rbp,%rdi
  436591:	callq  415020 <CRYPTO_free@plt>
  436596:	test   %rbx,%rbx
  436599:	je     4365a3 <X509_get0_pubkey_bitstr@plt+0x1fbd3>
  43659b:	mov    %rbx,%rdi
  43659e:	callq  416570 <BIO_free_all@plt>
  4365a3:	mov    $0x1,%eax
  4365a8:	mov    0x28(%rsp),%rcx
  4365ad:	xor    %fs:0x28,%rcx
  4365b6:	jne    436e6b <X509_get0_pubkey_bitstr@plt+0x2049b>
  4365bc:	add    $0x38,%rsp
  4365c0:	pop    %rbx
  4365c1:	pop    %rbp
  4365c2:	pop    %r12
  4365c4:	pop    %r13
  4365c6:	pop    %r14
  4365c8:	pop    %r15
  4365ca:	retq   
  4365cb:	nopl   0x0(%rax,%rax,1)
  4365d0:	test   %rbx,%rbx
  4365d3:	je     436579 <X509_get0_pubkey_bitstr@plt+0x1fba9>
  4365d5:	mov    0x244e18(%rip),%r11d        # 67b3f4 <_edata+0x6ec>
  4365dc:	test   %r11d,%r11d
  4365df:	je     436614 <X509_get0_pubkey_bitstr@plt+0x1fc44>
  4365e1:	mov    0x244dd0(%rip),%r10d        # 67b3b8 <_edata+0x6b0>
  4365e8:	movq   $0x1,0x20(%rsp)
  4365f1:	test   %r10d,%r10d
  4365f4:	je     436b50 <X509_get0_pubkey_bitstr@plt+0x20180>
  4365fa:	lea    0x20(%rsp),%rdx
  4365ff:	mov    $0x5421,%esi
  436604:	mov    %r13d,%edi
  436607:	callq  415590 <BIO_socket_ioctl@plt>
  43660c:	test   %eax,%eax
  43660e:	js     436b70 <X509_get0_pubkey_bitstr@plt+0x201a0>
  436614:	mov    $0x1,%ecx
  436619:	mov    $0x4000,%edx
  43661e:	mov    $0x75,%esi
  436623:	mov    %rbx,%rdi
  436626:	callq  415b70 <BIO_int_ctrl@plt>
  43662b:	test   %rax,%rax
  43662e:	je     436579 <X509_get0_pubkey_bitstr@plt+0x1fba9>
  436634:	mov    0x244dad(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  43663b:	callq  413ae0 <SSL_new@plt>
  436640:	test   %rax,%rax
  436643:	mov    %rax,%r12
  436646:	je     436579 <X509_get0_pubkey_bitstr@plt+0x1fba9>
  43664c:	mov    0x244d71(%rip),%r9d        # 67b3c4 <_edata+0x6bc>
  436653:	test   %r9d,%r9d
  436656:	jne    436c30 <X509_get0_pubkey_bitstr@plt+0x20260>
  43665c:	callq  412a00 <kssl_ctx_new@plt>
  436661:	test   %rax,%rax
  436664:	je     436698 <X509_get0_pubkey_bitstr@plt+0x1fcc8>
  436666:	lea    0x32276(%rip),%rdx        # 4688e3 <_fini+0xb3df>
  43666d:	mov    $0x3,%esi
  436672:	mov    %rax,%rdi
  436675:	mov    %rax,0x8(%rsp)
  43667a:	callq  414fa0 <kssl_ctx_setstring@plt>
  43667f:	mov    0x8(%rsp),%rcx
  436684:	lea    0x31af9(%rip),%rdx        # 468184 <_fini+0xac80>
  43668b:	mov    $0x4,%esi
  436690:	mov    %rcx,%rdi
  436693:	callq  414fa0 <kssl_ctx_setstring@plt>
  436698:	test   %r14,%r14
  43669b:	je     4366b2 <X509_get0_pubkey_bitstr@plt+0x1fce2>
  43669d:	mov    %r14,%rdi
  4366a0:	callq  413470 <strlen@plt>
  4366a5:	mov    %r14,%rsi
  4366a8:	mov    %eax,%edx
  4366aa:	mov    %r12,%rdi
  4366ad:	callq  414e40 <SSL_set_session_id_context@plt>
  4366b2:	xor    %esi,%esi
  4366b4:	mov    %r13d,%edi
  4366b7:	callq  4160f0 <BIO_new_socket@plt>
  4366bc:	mov    0x244d2d(%rip),%r8d        # 67b3f0 <_edata+0x6e8>
  4366c3:	mov    %rax,%rsi
  4366c6:	test   %r8d,%r8d
  4366c9:	jne    436c00 <X509_get0_pubkey_bitstr@plt+0x20230>
  4366cf:	mov    %rsi,%rdx
  4366d2:	mov    %r12,%rdi
  4366d5:	callq  413bb0 <SSL_set_bio@plt>
  4366da:	mov    %r12,%rdi
  4366dd:	callq  4162d0 <SSL_set_accept_state@plt>
  4366e2:	mov    %r12,%rcx
  4366e5:	mov    $0x1,%edx
  4366ea:	mov    $0x6d,%esi
  4366ef:	mov    %r15,%rdi
  4366f2:	callq  412af0 <BIO_ctrl@plt>
  4366f7:	mov    %rbx,%rdi
  4366fa:	mov    %r15,%rsi
  4366fd:	callq  415ac0 <BIO_push@plt>
  436702:	mov    0x244cc0(%rip),%edi        # 67b3c8 <_edata+0x6c0>
  436708:	test   %edi,%edi
  43670a:	jne    436bb8 <X509_get0_pubkey_bitstr@plt+0x201e8>
  436710:	mov    0x244ca6(%rip),%esi        # 67b3bc <_edata+0x6b4>
  436716:	test   %esi,%esi
  436718:	jne    436b88 <X509_get0_pubkey_bitstr@plt+0x201b8>
  43671e:	mov    $0x1,%r13d
  436724:	nopl   0x0(%rax)
  436728:	mov    0x244c7a(%rip),%ecx        # 67b3a8 <_edata+0x6a0>
  43672e:	test   %ecx,%ecx
  436730:	je     436776 <X509_get0_pubkey_bitstr@plt+0x1fda6>
  436732:	mov    %r12,%rdi
  436735:	callq  413120 <SSL_accept@plt>
  43673a:	mov    %r12,%rdi
  43673d:	mov    %eax,%esi
  43673f:	callq  416920 <SSL_get_error@plt>
  436744:	lea    -0x1(%rax),%ecx
  436747:	cmp    $0x5,%ecx
  43674a:	ja     436762 <X509_get0_pubkey_bitstr@plt+0x1fd92>
  43674c:	mov    %r13,%rax
  43674f:	shl    %cl,%rax
  436752:	test   $0x31,%al
  436754:	mov    %rax,%rcx
  436757:	jne    436579 <X509_get0_pubkey_bitstr@plt+0x1fba9>
  43675d:	and    $0xe,%ecx
  436760:	jne    436728 <X509_get0_pubkey_bitstr@plt+0x1fd58>
  436762:	mov    %r12,%rdi
  436765:	callq  413e00 <SSL_renegotiate@plt>
  43676a:	xor    %edx,%edx
  43676c:	xor    %esi,%esi
  43676e:	mov    %r12,%rdi
  436771:	callq  4136c0 <SSL_write@plt>
  436776:	mov    $0x3fff,%edx
  43677b:	mov    %rbp,%rsi
  43677e:	mov    %rbx,%rdi
  436781:	callq  4138a0 <BIO_gets@plt>
  436786:	test   %eax,%eax
  436788:	js     436af8 <X509_get0_pubkey_bitstr@plt+0x20128>
  43678e:	je     436dae <X509_get0_pubkey_bitstr@plt+0x203de>
  436794:	mov    0x244c3e(%rip),%eax        # 67b3d8 <_edata+0x6d0>
  43679a:	cmp    $0x1,%eax
  43679d:	je     4367c0 <X509_get0_pubkey_bitstr@plt+0x1fdf0>
  43679f:	cmp    $0x2,%eax
  4367a2:	je     436a60 <X509_get0_pubkey_bitstr@plt+0x20090>
  4367a8:	cmp    $0x3,%eax
  4367ab:	jne    436728 <X509_get0_pubkey_bitstr@plt+0x1fd58>
  4367b1:	jmpq   436a77 <X509_get0_pubkey_bitstr@plt+0x200a7>
  4367b6:	nopw   %cs:0x0(%rax,%rax,1)
  4367c0:	lea    0x31aa4(%rip),%rsi        # 46826b <_fini+0xad67>
  4367c7:	mov    $0x4,%ecx
  4367cc:	mov    %rbp,%rdi
  4367cf:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4367d1:	jne    436728 <X509_get0_pubkey_bitstr@plt+0x1fd58>
  4367d7:	lea    0x3018a(%rip),%rsi        # 466968 <_fini+0x9464>
  4367de:	mov    %rbx,%rdi
  4367e1:	xor    %r14d,%r14d
  4367e4:	xor    %r13d,%r13d
  4367e7:	callq  413b70 <BIO_puts@plt>
  4367ec:	lea    0x301a5(%rip),%rsi        # 466998 <_fini+0x9494>
  4367f3:	mov    %rbx,%rdi
  4367f6:	callq  413b70 <BIO_puts@plt>
  4367fb:	lea    0x31a7a(%rip),%rsi        # 46827c <_fini+0xad78>
  436802:	mov    %rbx,%rdi
  436805:	callq  413b70 <BIO_puts@plt>
  43680a:	lea    0x2e38e(%rip),%rsi        # 464b9f <_fini+0x769b>
  436811:	mov    %rbx,%rdi
  436814:	callq  413b70 <BIO_puts@plt>
  436819:	mov    0x244b61(%rip),%eax        # 67b380 <_edata+0x678>
  43681f:	test   %eax,%eax
  436821:	jle    436860 <X509_get0_pubkey_bitstr@plt+0x1fe90>
  436823:	nopl   0x0(%rax,%rax,1)
  436828:	mov    0x244b49(%rip),%rax        # 67b378 <_edata+0x670>
  43682f:	mov    %rbx,%rdi
  436832:	add    $0x1,%r13d
  436836:	mov    (%rax,%r14,1),%rsi
  43683a:	add    $0x8,%r14
  43683e:	callq  413b70 <BIO_puts@plt>
  436843:	lea    0x35359(%rip),%rsi        # 46bba3 <_fini+0xe69f>
  43684a:	mov    $0x1,%edx
  43684f:	mov    %rbx,%rdi
  436852:	callq  412db0 <BIO_write@plt>
  436857:	cmp    %r13d,0x244b22(%rip)        # 67b380 <_edata+0x678>
  43685e:	jg     436828 <X509_get0_pubkey_bitstr@plt+0x1fe58>
  436860:	lea    0x2e338(%rip),%rsi        # 464b9f <_fini+0x769b>
  436867:	mov    %rbx,%rdi
  43686a:	callq  413b70 <BIO_puts@plt>
  43686f:	xor    %ecx,%ecx
  436871:	xor    %edx,%edx
  436873:	mov    $0x4c,%esi
  436878:	mov    %r12,%rdi
  43687b:	callq  4162b0 <SSL_ctrl@plt>
  436880:	lea    0x317cf(%rip),%rdx        # 468056 <_fini+0xab52>
  436887:	test   %rax,%rax
  43688a:	lea    0x29531(%rip),%rax        # 45fdc2 <_fini+0x28be>
  436891:	lea    0x300a8(%rip),%rsi        # 466940 <_fini+0x943c>
  436898:	mov    %rbx,%rdi
  43689b:	cmovne %rax,%rdx
  43689f:	xor    %eax,%eax
  4368a1:	callq  413c40 <BIO_printf@plt>
  4368a6:	lea    0x3010b(%rip),%rsi        # 4669b8 <_fini+0x94b4>
  4368ad:	mov    %rbx,%rdi
  4368b0:	xor    %eax,%eax
  4368b2:	callq  413c40 <BIO_printf@plt>
  4368b7:	mov    %r12,%rdi
  4368ba:	callq  4162f0 <SSL_get_ciphers@plt>
  4368bf:	mov    %rax,%rdi
  4368c2:	mov    %rax,0x10(%rsp)
  4368c7:	callq  4156d0 <sk_num@plt>
  4368cc:	test   %eax,%eax
  4368ce:	mov    %eax,0x8(%rsp)
  4368d2:	jle    436988 <X509_get0_pubkey_bitstr@plt+0x1ffb8>
  4368d8:	mov    0x10(%rsp),%rdi
  4368dd:	xor    %esi,%esi
  4368df:	callq  412b30 <sk_value@plt>
  4368e4:	mov    %rax,%r13
  4368e7:	mov    %rax,%rdi
  4368ea:	callq  415410 <SSL_CIPHER_get_name@plt>
  4368ef:	mov    %r13,%rdi
  4368f2:	mov    %rax,0x18(%rsp)
  4368f7:	mov    $0x1,%r13d
  4368fd:	callq  4148d0 <SSL_CIPHER_get_version@plt>
  436902:	mov    0x18(%rsp),%rcx
  436907:	lea    0x31975(%rip),%rsi        # 468283 <_fini+0xad7f>
  43690e:	mov    %rax,%rdx
  436911:	mov    %rbx,%rdi
  436914:	xor    %eax,%eax
  436916:	callq  413c40 <BIO_printf@plt>
  43691b:	nopl   0x0(%rax,%rax,1)
  436920:	cmp    0x8(%rsp),%r13d
  436925:	je     436988 <X509_get0_pubkey_bitstr@plt+0x1ffb8>
  436927:	mov    0x10(%rsp),%rdi
  43692c:	mov    %r13d,%esi
  43692f:	add    $0x1,%r13d
  436933:	callq  412b30 <sk_value@plt>
  436938:	mov    %rax,%r14
  43693b:	mov    %rax,%rdi
  43693e:	callq  415410 <SSL_CIPHER_get_name@plt>
  436943:	mov    %r14,%rdi
  436946:	mov    %rax,%r15
  436949:	callq  4148d0 <SSL_CIPHER_get_version@plt>
  43694e:	lea    0x3192e(%rip),%rsi        # 468283 <_fini+0xad7f>
  436955:	mov    %rax,%rdx
  436958:	mov    %r15,%rcx
  43695b:	xor    %eax,%eax
  43695d:	mov    %rbx,%rdi
  436960:	callq  413c40 <BIO_printf@plt>
  436965:	test   $0x1,%r13b
  436969:	jne    436920 <X509_get0_pubkey_bitstr@plt+0x1ff50>
  43696b:	cmp    %r13d,0x8(%rsp)
  436970:	je     436988 <X509_get0_pubkey_bitstr@plt+0x1ffb8>
  436972:	lea    0x2e226(%rip),%rsi        # 464b9f <_fini+0x769b>
  436979:	mov    %rbx,%rdi
  43697c:	callq  413b70 <BIO_puts@plt>
  436981:	cmp    0x8(%rsp),%r13d
  436986:	jne    436927 <X509_get0_pubkey_bitstr@plt+0x1ff57>
  436988:	lea    0x2e210(%rip),%rsi        # 464b9f <_fini+0x769b>
  43698f:	mov    %rbx,%rdi
  436992:	callq  413b70 <BIO_puts@plt>
  436997:	mov    $0x4000,%edx
  43699c:	mov    %rbp,%rsi
  43699f:	mov    %r12,%rdi
  4369a2:	callq  4140c0 <SSL_get_shared_ciphers@plt>
  4369a7:	test   %rax,%rax
  4369aa:	mov    %rax,%r15
  4369ad:	je     436c93 <X509_get0_pubkey_bitstr@plt+0x202c3>
  4369b3:	lea    0x30026(%rip),%rsi        # 4669e0 <_fini+0x94dc>
  4369ba:	xor    %eax,%eax
  4369bc:	mov    %rbx,%rdi
  4369bf:	xor    %r14d,%r14d
  4369c2:	xor    %r13d,%r13d
  4369c5:	callq  413c40 <BIO_printf@plt>
  4369ca:	movzbl (%r15),%eax
  4369ce:	test   %al,%al
  4369d0:	jne    436a04 <X509_get0_pubkey_bitstr@plt+0x20034>
  4369d2:	jmpq   436c84 <X509_get0_pubkey_bitstr@plt+0x202b4>
  4369d7:	nopw   0x0(%rax,%rax,1)
  4369e0:	mov    $0x1,%edx
  4369e5:	mov    %r15,%rsi
  4369e8:	mov    %rbx,%rdi
  4369eb:	add    $0x1,%r14d
  4369ef:	callq  412db0 <BIO_write@plt>
  4369f4:	add    $0x1,%r15
  4369f8:	movzbl (%r15),%eax
  4369fc:	test   %al,%al
  4369fe:	je     436c84 <X509_get0_pubkey_bitstr@plt+0x202b4>
  436a04:	cmp    $0x3a,%al
  436a06:	jne    4369e0 <X509_get0_pubkey_bitstr@plt+0x20010>
  436a08:	lea    0x31880(%rip),%rsi        # 46828f <_fini+0xad8b>
  436a0f:	mov    $0x1a,%edx
  436a14:	mov    %rbx,%rdi
  436a17:	sub    %r14d,%edx
  436a1a:	add    $0x1,%r13d
  436a1e:	callq  412db0 <BIO_write@plt>
  436a23:	mov    $0x55555556,%eax
  436a28:	lea    0x35174(%rip),%rsi        # 46bba3 <_fini+0xe69f>
  436a2f:	mov    %rbx,%rdi
  436a32:	imul   %r13d
  436a35:	mov    %r13d,%eax
  436a38:	sar    $0x1f,%eax
  436a3b:	sub    %eax,%edx
  436a3d:	lea    (%rdx,%rdx,2),%eax
  436a40:	mov    $0x1,%edx
  436a45:	cmp    %eax,%r13d
  436a48:	lea    0x2e150(%rip),%rax        # 464b9f <_fini+0x769b>
  436a4f:	cmove  %rax,%rsi
  436a53:	xor    %r14d,%r14d
  436a56:	callq  412db0 <BIO_write@plt>
  436a5b:	jmp    4369f4 <X509_get0_pubkey_bitstr@plt+0x20024>
  436a5d:	nopl   (%rax)
  436a60:	lea    0x31809(%rip),%rsi        # 468270 <_fini+0xad6c>
  436a67:	mov    $0xa,%ecx
  436a6c:	mov    %rbp,%rdi
  436a6f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  436a71:	je     4367d7 <X509_get0_pubkey_bitstr@plt+0x1fe07>
  436a77:	lea    0x31851(%rip),%rsi        # 4682cf <_fini+0xadcb>
  436a7e:	mov    $0x5,%ecx
  436a83:	mov    %rbp,%rdi
  436a86:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  436a88:	jne    436728 <X509_get0_pubkey_bitstr@plt+0x1fd58>
  436a8e:	movzbl 0x5(%rbp),%eax
  436a92:	lea    0x5(%rbp),%r13
  436a96:	test   %al,%al
  436a98:	je     436de7 <X509_get0_pubkey_bitstr@plt+0x20417>
  436a9e:	cmp    $0x20,%al
  436aa0:	je     436feb <X509_get0_pubkey_bitstr@plt+0x2061b>
  436aa6:	mov    %r13,%rdx
  436aa9:	mov    $0x1,%ecx
  436aae:	jmp    436add <X509_get0_pubkey_bitstr@plt+0x2010d>
  436ab0:	cmp    $0x3,%ecx
  436ab3:	je     436dd5 <X509_get0_pubkey_bitstr@plt+0x20405>
  436ab9:	cmp    $0x1,%ecx
  436abc:	je     436dc0 <X509_get0_pubkey_bitstr@plt+0x203f0>
  436ac2:	test   %ecx,%ecx
  436ac4:	je     436aeb <X509_get0_pubkey_bitstr@plt+0x2011b>
  436ac6:	add    $0x1,%rdx
  436aca:	movzbl (%rdx),%eax
  436acd:	test   %al,%al
  436acf:	je     436de7 <X509_get0_pubkey_bitstr@plt+0x20417>
  436ad5:	cmp    $0x20,%al
  436ad7:	je     436e0c <X509_get0_pubkey_bitstr@plt+0x2043c>
  436add:	cmp    $0x2,%ecx
  436ae0:	jne    436ab0 <X509_get0_pubkey_bitstr@plt+0x200e0>
  436ae2:	cmp    $0x2e,%al
  436ae4:	mov    $0x3,%ecx
  436ae9:	je     436ac6 <X509_get0_pubkey_bitstr@plt+0x200f6>
  436aeb:	xor    %ecx,%ecx
  436aed:	cmp    $0x2f,%al
  436aef:	sete   %cl
  436af2:	jmp    436ac6 <X509_get0_pubkey_bitstr@plt+0x200f6>
  436af4:	nopl   0x0(%rax)
  436af8:	mov    $0x8,%esi
  436afd:	mov    %rbx,%rdi
  436b00:	callq  415c30 <BIO_test_flags@plt>
  436b05:	test   %eax,%eax
  436b07:	jne    436c60 <X509_get0_pubkey_bitstr@plt+0x20290>
  436b0d:	mov    0x2448a5(%rip),%edx        # 67b3b8 <_edata+0x6b0>
  436b13:	test   %edx,%edx
  436b15:	jne    436579 <X509_get0_pubkey_bitstr@plt+0x1fba9>
  436b1b:	lea    0x24421e(%rip),%rax        # 67ad40 <_edata+0x38>
  436b22:	mov    (%rax),%rdi
  436b25:	callq  413f40 <ERR_print_errors@plt>
  436b2a:	mov    0x24489f(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  436b31:	lea    0x31706(%rip),%rsi        # 46823e <_fini+0xad3a>
  436b38:	xor    %eax,%eax
  436b3a:	callq  413c40 <BIO_printf@plt>
  436b3f:	mov    %rbp,%rdi
  436b42:	callq  415020 <CRYPTO_free@plt>
  436b47:	jmpq   43659b <X509_get0_pubkey_bitstr@plt+0x1fbcb>
  436b4c:	nopl   0x0(%rax)
  436b50:	lea    0x2441e9(%rip),%rax        # 67ad40 <_edata+0x38>
  436b57:	lea    0x3160a(%rip),%rsi        # 468168 <_fini+0xac64>
  436b5e:	mov    (%rax),%rdi
  436b61:	xor    %eax,%eax
  436b63:	callq  413c40 <BIO_printf@plt>
  436b68:	jmpq   4365fa <X509_get0_pubkey_bitstr@plt+0x1fc2a>
  436b6d:	nopl   (%rax)
  436b70:	lea    0x2441c9(%rip),%rax        # 67ad40 <_edata+0x38>
  436b77:	mov    (%rax),%rdi
  436b7a:	callq  413f40 <ERR_print_errors@plt>
  436b7f:	jmpq   436614 <X509_get0_pubkey_bitstr@plt+0x1fc44>
  436b84:	nopl   0x0(%rax)
  436b88:	lea    0x12581(%rip),%rsi        # 449110 <X509_get0_pubkey_bitstr@plt+0x32740>
  436b8f:	mov    %r12,%rdi
  436b92:	callq  416500 <SSL_set_msg_callback@plt>
  436b97:	mov    0x244832(%rip),%rcx        # 67b3d0 <_edata+0x6c8>
  436b9e:	xor    %edx,%edx
  436ba0:	mov    $0x10,%esi
  436ba5:	mov    %r12,%rdi
  436ba8:	callq  4162b0 <SSL_ctrl@plt>
  436bad:	jmpq   43671e <X509_get0_pubkey_bitstr@plt+0x1fd4e>
  436bb2:	nopw   0x0(%rax,%rax,1)
  436bb8:	mov    $0x1,%esi
  436bbd:	mov    %r12,%rdi
  436bc0:	callq  4134a0 <SSL_set_debug@plt>
  436bc5:	mov    %r12,%rdi
  436bc8:	callq  415990 <SSL_get_rbio@plt>
  436bcd:	lea    0x1226c(%rip),%rsi        # 448e40 <X509_get0_pubkey_bitstr@plt+0x32470>
  436bd4:	mov    %rax,%rdi
  436bd7:	callq  413800 <BIO_set_callback@plt>
  436bdc:	mov    0x2447ed(%rip),%r13        # 67b3d0 <_edata+0x6c8>
  436be3:	mov    %r12,%rdi
  436be6:	callq  415990 <SSL_get_rbio@plt>
  436beb:	mov    %rax,%rdi
  436bee:	mov    %r13,%rsi
  436bf1:	callq  4140d0 <BIO_set_callback_arg@plt>
  436bf6:	jmpq   436710 <X509_get0_pubkey_bitstr@plt+0x1fd40>
  436bfb:	nopl   0x0(%rax,%rax,1)
  436c00:	mov    %rax,0x8(%rsp)
  436c05:	callq  415f20 <BIO_f_nbio_test@plt>
  436c0a:	mov    %rax,%rdi
  436c0d:	callq  414a20 <BIO_new@plt>
  436c12:	mov    0x8(%rsp),%rsi
  436c17:	mov    %rax,%rdi
  436c1a:	callq  415ac0 <BIO_push@plt>
  436c1f:	mov    %rax,%rsi
  436c22:	jmpq   4366cf <X509_get0_pubkey_bitstr@plt+0x1fcff>
  436c27:	nopw   0x0(%rax,%rax,1)
  436c30:	lea    0x12ba9(%rip),%rdx        # 4497e0 <X509_get0_pubkey_bitstr@plt+0x32e10>
  436c37:	mov    $0x38,%esi
  436c3c:	mov    %rax,%rdi
  436c3f:	callq  415d50 <SSL_callback_ctrl@plt>
  436c44:	mov    0x244785(%rip),%rcx        # 67b3d0 <_edata+0x6c8>
  436c4b:	xor    %edx,%edx
  436c4d:	mov    $0x39,%esi
  436c52:	mov    %r12,%rdi
  436c55:	callq  4162b0 <SSL_ctrl@plt>
  436c5a:	jmpq   43665c <X509_get0_pubkey_bitstr@plt+0x1fc8c>
  436c5f:	nop
  436c60:	mov    0x244769(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  436c67:	lea    0x315ef(%rip),%rsi        # 46825d <_fini+0xad59>
  436c6e:	xor    %eax,%eax
  436c70:	callq  413c40 <BIO_printf@plt>
  436c75:	mov    $0x1,%edi
  436c7a:	callq  413fb0 <sleep@plt>
  436c7f:	jmpq   436728 <X509_get0_pubkey_bitstr@plt+0x1fd58>
  436c84:	lea    0x2df14(%rip),%rsi        # 464b9f <_fini+0x769b>
  436c8b:	mov    %rbx,%rdi
  436c8e:	callq  413b70 <BIO_puts@plt>
  436c93:	mov    %r12,%rdi
  436c96:	callq  412dc0 <SSL_cache_hit@plt>
  436c9b:	lea    0x315a4(%rip),%rsi        # 468246 <_fini+0xad42>
  436ca2:	test   %eax,%eax
  436ca4:	lea    0x315a8(%rip),%rax        # 468253 <_fini+0xad4f>
  436cab:	mov    %rbx,%rdi
  436cae:	cmove  %rax,%rsi
  436cb2:	xor    %eax,%eax
  436cb4:	callq  413c40 <BIO_printf@plt>
  436cb9:	mov    %r12,%rdi
  436cbc:	callq  413050 <SSL_get_current_cipher@plt>
  436cc1:	mov    %rax,%r13
  436cc4:	mov    %rax,%rdi
  436cc7:	callq  415410 <SSL_CIPHER_get_name@plt>
  436ccc:	mov    %r13,%rdi
  436ccf:	mov    %rax,%r14
  436cd2:	callq  4148d0 <SSL_CIPHER_get_version@plt>
  436cd7:	lea    0x315cc(%rip),%rsi        # 4682aa <_fini+0xada6>
  436cde:	mov    %rax,%rdx
  436ce1:	mov    %r14,%rcx
  436ce4:	mov    %rbx,%rdi
  436ce7:	xor    %eax,%eax
  436ce9:	callq  413c40 <BIO_printf@plt>
  436cee:	mov    %r12,%rdi
  436cf1:	callq  416670 <SSL_get_session@plt>
  436cf6:	mov    %rbx,%rdi
  436cf9:	mov    %rax,%rsi
  436cfc:	callq  416020 <SSL_SESSION_print@plt>
  436d01:	lea    0x2775f(%rip),%rsi        # 45e467 <_fini+0xf63>
  436d08:	mov    %rbx,%rdi
  436d0b:	xor    %eax,%eax
  436d0d:	callq  413c40 <BIO_printf@plt>
  436d12:	mov    %r12,%rdi
  436d15:	callq  415c60 <SSL_get_SSL_CTX@plt>
  436d1a:	mov    %rbx,%rdi
  436d1d:	mov    %rax,%rsi
  436d20:	callq  434f10 <X509_get0_pubkey_bitstr@plt+0x1e540>
  436d25:	lea    0x2773b(%rip),%rsi        # 45e467 <_fini+0xf63>
  436d2c:	mov    %rbx,%rdi
  436d2f:	xor    %eax,%eax
  436d31:	callq  413c40 <BIO_printf@plt>
  436d36:	mov    %r12,%rdi
  436d39:	callq  416300 <SSL_get_peer_certificate@plt>
  436d3e:	test   %rax,%rax
  436d41:	mov    %rax,%r13
  436d44:	je     436e57 <X509_get0_pubkey_bitstr@plt+0x20487>
  436d4a:	lea    0x31329(%rip),%rsi        # 46807a <_fini+0xab76>
  436d51:	mov    %rbx,%rdi
  436d54:	xor    %eax,%eax
  436d56:	callq  413c40 <BIO_printf@plt>
  436d5b:	mov    %r13,%rsi
  436d5e:	mov    %rbx,%rdi
  436d61:	callq  414e30 <X509_print@plt>
  436d66:	mov    %r13,%rsi
  436d69:	mov    %rbx,%rdi
  436d6c:	callq  413490 <PEM_write_bio_X509@plt>
  436d71:	lea    0x31544(%rip),%rsi        # 4682bc <_fini+0xadb8>
  436d78:	mov    %rbx,%rdi
  436d7b:	callq  413b70 <BIO_puts@plt>
  436d80:	jmp    436d99 <X509_get0_pubkey_bitstr@plt+0x203c9>
  436d82:	nopw   0x0(%rax,%rax,1)
  436d88:	mov    $0x8,%esi
  436d8d:	mov    %rbx,%rdi
  436d90:	callq  415c30 <BIO_test_flags@plt>
  436d95:	test   %eax,%eax
  436d97:	je     436dae <X509_get0_pubkey_bitstr@plt+0x203de>
  436d99:	xor    %ecx,%ecx
  436d9b:	xor    %edx,%edx
  436d9d:	mov    $0xb,%esi
  436da2:	mov    %rbx,%rdi
  436da5:	callq  412af0 <BIO_ctrl@plt>
  436daa:	test   %eax,%eax
  436dac:	jle    436d88 <X509_get0_pubkey_bitstr@plt+0x203b8>
  436dae:	mov    $0x3,%esi
  436db3:	mov    %r12,%rdi
  436db6:	callq  416740 <SSL_set_shutdown@plt>
  436dbb:	jmpq   436b2a <X509_get0_pubkey_bitstr@plt+0x2015a>
  436dc0:	cmp    $0x2e,%al
  436dc2:	mov    $0x2,%cl
  436dc4:	jne    436aeb <X509_get0_pubkey_bitstr@plt+0x2011b>
  436dca:	nopw   0x0(%rax,%rax,1)
  436dd0:	jmpq   436ac6 <X509_get0_pubkey_bitstr@plt+0x200f6>
  436dd5:	cmp    $0x2f,%al
  436dd7:	mov    $0xffffffff,%ecx
  436ddc:	jne    436aeb <X509_get0_pubkey_bitstr@plt+0x2011b>
  436de2:	jmpq   436ac6 <X509_get0_pubkey_bitstr@plt+0x200f6>
  436de7:	lea    0x2fc52(%rip),%rsi        # 466a40 <_fini+0x953c>
  436dee:	mov    %rbx,%rdi
  436df1:	callq  413b70 <BIO_puts@plt>
  436df6:	lea    0x2fc93(%rip),%rsi        # 466a90 <_fini+0x958c>
  436dfd:	mov    %r13,%rdx
  436e00:	mov    %rbx,%rdi
  436e03:	xor    %eax,%eax
  436e05:	callq  413c40 <BIO_printf@plt>
  436e0a:	jmp    436d99 <X509_get0_pubkey_bitstr@plt+0x203c9>
  436e0c:	cmp    $0xffffffff,%ecx
  436e0f:	movb   $0x0,(%rdx)
  436e12:	je     436e70 <X509_get0_pubkey_bitstr@plt+0x204a0>
  436e14:	cmp    $0x3,%ecx
  436e17:	je     436e70 <X509_get0_pubkey_bitstr@plt+0x204a0>
  436e19:	cmpb   $0x2f,0x5(%rbp)
  436e1d:	je     436e98 <X509_get0_pubkey_bitstr@plt+0x204c8>
  436e1f:	mov    %r13,%rdi
  436e22:	callq  4489e0 <X509_get0_pubkey_bitstr@plt+0x32010>
  436e27:	test   %eax,%eax
  436e29:	jle    436ec0 <X509_get0_pubkey_bitstr@plt+0x204f0>
  436e2f:	lea    0x2fc0a(%rip),%rsi        # 466a40 <_fini+0x953c>
  436e36:	mov    %rbx,%rdi
  436e39:	callq  413b70 <BIO_puts@plt>
  436e3e:	lea    0x314aa(%rip),%rsi        # 4682ef <_fini+0xadeb>
  436e45:	mov    %r13,%rdx
  436e48:	mov    %rbx,%rdi
  436e4b:	xor    %eax,%eax
  436e4d:	callq  413c40 <BIO_printf@plt>
  436e52:	jmpq   436d99 <X509_get0_pubkey_bitstr@plt+0x203c9>
  436e57:	lea    0x2fbba(%rip),%rsi        # 466a18 <_fini+0x9514>
  436e5e:	mov    %rbx,%rdi
  436e61:	callq  413b70 <BIO_puts@plt>
  436e66:	jmpq   436d71 <X509_get0_pubkey_bitstr@plt+0x203a1>
  436e6b:	callq  414c30 <__stack_chk_fail@plt>
  436e70:	lea    0x2fbc9(%rip),%rsi        # 466a40 <_fini+0x953c>
  436e77:	mov    %rbx,%rdi
  436e7a:	callq  413b70 <BIO_puts@plt>
  436e7f:	lea    0x2fbea(%rip),%rsi        # 466a70 <_fini+0x956c>
  436e86:	mov    %r13,%rdx
  436e89:	mov    %rbx,%rdi
  436e8c:	xor    %eax,%eax
  436e8e:	callq  413c40 <BIO_printf@plt>
  436e93:	jmpq   436d99 <X509_get0_pubkey_bitstr@plt+0x203c9>
  436e98:	lea    0x2fba1(%rip),%rsi        # 466a40 <_fini+0x953c>
  436e9f:	mov    %rbx,%rdi
  436ea2:	callq  413b70 <BIO_puts@plt>
  436ea7:	lea    0x31427(%rip),%rsi        # 4682d5 <_fini+0xadd1>
  436eae:	mov    %r13,%rdx
  436eb1:	mov    %rbx,%rdi
  436eb4:	xor    %eax,%eax
  436eb6:	callq  413c40 <BIO_printf@plt>
  436ebb:	jmpq   436d99 <X509_get0_pubkey_bitstr@plt+0x203c9>
  436ec0:	lea    0x27366(%rip),%rsi        # 45e22d <_fini+0xd29>
  436ec7:	mov    %r13,%rdi
  436eca:	callq  412ba0 <BIO_new_file@plt>
  436ecf:	test   %rax,%rax
  436ed2:	mov    %rax,%r14
  436ed5:	je     437012 <X509_get0_pubkey_bitstr@plt+0x20642>
  436edb:	cmpl   $0x0,0x2444d6(%rip)        # 67b3b8 <_edata+0x6b0>
  436ee2:	jne    436eff <X509_get0_pubkey_bitstr@plt+0x2052f>
  436ee4:	lea    0x243e55(%rip),%rax        # 67ad40 <_edata+0x38>
  436eeb:	lea    0x31428(%rip),%rsi        # 46831a <_fini+0xae16>
  436ef2:	mov    %r13,%rdx
  436ef5:	mov    (%rax),%rdi
  436ef8:	xor    %eax,%eax
  436efa:	callq  413c40 <BIO_printf@plt>
  436eff:	cmpl   $0x2,0x2444d2(%rip)        # 67b3d8 <_edata+0x6d0>
  436f06:	je     436f7d <X509_get0_pubkey_bitstr@plt+0x205ad>
  436f08:	mov    $0x4000,%edx
  436f0d:	mov    %rbp,%rsi
  436f10:	mov    %r14,%rdi
  436f13:	callq  413930 <BIO_read@plt>
  436f18:	test   %eax,%eax
  436f1a:	mov    %eax,%r15d
  436f1d:	jle    436f70 <X509_get0_pubkey_bitstr@plt+0x205a0>
  436f1f:	xor    %r13d,%r13d
  436f22:	jmp    436f30 <X509_get0_pubkey_bitstr@plt+0x20560>
  436f24:	nopl   0x0(%rax)
  436f28:	add    %eax,%r13d
  436f2b:	cmp    %r15d,%r13d
  436f2e:	jge    436f08 <X509_get0_pubkey_bitstr@plt+0x20538>
  436f30:	mov    %r15d,%edx
  436f33:	movslq %r13d,%rsi
  436f36:	mov    %rbx,%rdi
  436f39:	sub    %r13d,%edx
  436f3c:	add    %rbp,%rsi
  436f3f:	callq  412db0 <BIO_write@plt>
  436f44:	test   %eax,%eax
  436f46:	jg     436f28 <X509_get0_pubkey_bitstr@plt+0x20558>
  436f48:	mov    $0x8,%esi
  436f4d:	mov    %rbx,%rdi
  436f50:	callq  415c30 <BIO_test_flags@plt>
  436f55:	test   %eax,%eax
  436f57:	je     436f70 <X509_get0_pubkey_bitstr@plt+0x205a0>
  436f59:	mov    0x244470(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  436f60:	lea    0x313cc(%rip),%rsi        # 468333 <_fini+0xae2f>
  436f67:	xor    %eax,%eax
  436f69:	callq  413c40 <BIO_printf@plt>
  436f6e:	jmp    436f2b <X509_get0_pubkey_bitstr@plt+0x2055b>
  436f70:	mov    %r14,%rdi
  436f73:	callq  413960 <BIO_free@plt>
  436f78:	jmpq   436d99 <X509_get0_pubkey_bitstr@plt+0x203c9>
  436f7d:	xor    %eax,%eax
  436f7f:	or     $0xffffffffffffffff,%rcx
  436f83:	mov    %r13,%rdi
  436f86:	repnz scas %es:(%rdi),%al
  436f88:	not    %rcx
  436f8b:	sub    $0x1,%rcx
  436f8f:	cmp    $0x5,%ecx
  436f92:	jle    437008 <X509_get0_pubkey_bitstr@plt+0x20638>
  436f94:	movslq %ecx,%r15
  436f97:	lea    0x31385(%rip),%rsi        # 468323 <_fini+0xae1f>
  436f9e:	lea    -0x5(%r13,%r15,1),%rdi
  436fa3:	callq  4155c0 <strcmp@plt>
  436fa8:	test   %eax,%eax
  436faa:	je     436ff4 <X509_get0_pubkey_bitstr@plt+0x20624>
  436fac:	lea    -0x4(%r13,%r15,1),%r13
  436fb1:	lea    0x31371(%rip),%rsi        # 468329 <_fini+0xae25>
  436fb8:	mov    %r13,%rdi
  436fbb:	callq  4155c0 <strcmp@plt>
  436fc0:	test   %eax,%eax
  436fc2:	je     436ff4 <X509_get0_pubkey_bitstr@plt+0x20624>
  436fc4:	lea    0x31363(%rip),%rsi        # 46832e <_fini+0xae2a>
  436fcb:	mov    %r13,%rdi
  436fce:	callq  4155c0 <strcmp@plt>
  436fd3:	test   %eax,%eax
  436fd5:	je     436ff4 <X509_get0_pubkey_bitstr@plt+0x20624>
  436fd7:	lea    0x2fa62(%rip),%rsi        # 466a40 <_fini+0x953c>
  436fde:	mov    %rbx,%rdi
  436fe1:	callq  413b70 <BIO_puts@plt>
  436fe6:	jmpq   436f08 <X509_get0_pubkey_bitstr@plt+0x20538>
  436feb:	movb   $0x0,0x5(%rbp)
  436fef:	jmpq   436e1f <X509_get0_pubkey_bitstr@plt+0x2044f>
  436ff4:	lea    0x2f96d(%rip),%rsi        # 466968 <_fini+0x9464>
  436ffb:	mov    %rbx,%rdi
  436ffe:	callq  413b70 <BIO_puts@plt>
  437003:	jmpq   436f08 <X509_get0_pubkey_bitstr@plt+0x20538>
  437008:	jne    436fd7 <X509_get0_pubkey_bitstr@plt+0x20607>
  43700a:	mov    $0x5,%r15d
  437010:	jmp    436fac <X509_get0_pubkey_bitstr@plt+0x205dc>
  437012:	lea    0x2fa27(%rip),%rsi        # 466a40 <_fini+0x953c>
  437019:	mov    %rbx,%rdi
  43701c:	callq  413b70 <BIO_puts@plt>
  437021:	lea    0x312dd(%rip),%rsi        # 468305 <_fini+0xae01>
  437028:	mov    %rbx,%rdi
  43702b:	mov    %r13,%rdx
  43702e:	xor    %eax,%eax
  437030:	callq  413c40 <BIO_printf@plt>
  437035:	mov    %rbx,%rdi
  437038:	callq  413f40 <ERR_print_errors@plt>
  43703d:	jmpq   436d99 <X509_get0_pubkey_bitstr@plt+0x203c9>
  437042:	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  437050:	push   %r12
  437052:	mov    %rdx,%r12
  437055:	push   %rbp
  437056:	mov    %ecx,%ebp
  437058:	push   %rbx
  437059:	mov    %rsi,%rbx
  43705c:	sub    $0x10,%rsp
  437060:	mov    0x244362(%rip),%edi        # 67b3c8 <_edata+0x6c0>
  437066:	mov    %fs:0x28,%rax
  43706f:	mov    %rax,0x8(%rsp)
  437074:	xor    %eax,%eax
  437076:	movq   $0x0,(%rsp)
  43707e:	test   %edi,%edi
  437080:	jne    4371f8 <X509_get0_pubkey_bitstr@plt+0x20828>
  437086:	test   %rbx,%rbx
  437089:	je     4371c8 <X509_get0_pubkey_bitstr@plt+0x207f8>
  43708f:	mov    0x244333(%rip),%esi        # 67b3c8 <_edata+0x6c0>
  437095:	test   %esi,%esi
  437097:	jne    437130 <X509_get0_pubkey_bitstr@plt+0x20760>
  43709d:	lea    0x312cb(%rip),%r8        # 46836f <_fini+0xae6b>
  4370a4:	mov    $0x10,%ecx
  4370a9:	mov    %rbx,%rsi
  4370ac:	mov    %r8,%rdi
  4370af:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4370b1:	jne    437210 <X509_get0_pubkey_bitstr@plt+0x20840>
  4370b7:	mov    0x24430b(%rip),%ecx        # 67b3c8 <_edata+0x6c0>
  4370bd:	test   %ecx,%ecx
  4370bf:	jne    437240 <X509_get0_pubkey_bitstr@plt+0x20870>
  4370c5:	lea    0x244284(%rip),%rbx        # 67b350 <_edata+0x648>
  4370cc:	mov    %rsp,%rdi
  4370cf:	mov    (%rbx),%rsi
  4370d2:	callq  413030 <BN_hex2bn@plt>
  4370d7:	test   %eax,%eax
  4370d9:	jne    437160 <X509_get0_pubkey_bitstr@plt+0x20790>
  4370df:	lea    0x243c5a(%rip),%rax        # 67ad40 <_edata+0x38>
  4370e6:	mov    (%rbx),%rdx
  4370e9:	lea    0x2fa30(%rip),%rsi        # 466b20 <_fini+0x961c>
  4370f0:	mov    (%rax),%rdi
  4370f3:	xor    %eax,%eax
  4370f5:	callq  413c40 <BIO_printf@plt>
  4370fa:	mov    (%rsp),%rdi
  4370fe:	test   %rdi,%rdi
  437101:	je     4371ea <X509_get0_pubkey_bitstr@plt+0x2081a>
  437107:	xor    %ebx,%ebx
  437109:	callq  4138e0 <BN_free@plt>
  43710e:	mov    0x8(%rsp),%rcx
  437113:	xor    %fs:0x28,%rcx
  43711c:	mov    %ebx,%eax
  43711e:	jne    4372b8 <X509_get0_pubkey_bitstr@plt+0x208e8>
  437124:	add    $0x10,%rsp
  437128:	pop    %rbx
  437129:	pop    %rbp
  43712a:	pop    %r12
  43712c:	retq   
  43712d:	nopl   (%rax)
  437130:	mov    %rbx,%rdi
  437133:	callq  413470 <strlen@plt>
  437138:	mov    0x244291(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  43713f:	lea    0x3120c(%rip),%rsi        # 468352 <_fini+0xae4e>
  437146:	mov    %eax,%edx
  437148:	mov    %rbx,%rcx
  43714b:	xor    %eax,%eax
  43714d:	callq  413c40 <BIO_printf@plt>
  437152:	jmpq   43709d <X509_get0_pubkey_bitstr@plt+0x206cd>
  437157:	nopw   0x0(%rax,%rax,1)
  437160:	mov    (%rsp),%rdi
  437164:	callq  415810 <BN_num_bits@plt>
  437169:	lea    0xe(%rax),%edx
  43716c:	add    $0x7,%eax
  43716f:	cmovs  %edx,%eax
  437172:	sar    $0x3,%eax
  437175:	cmp    %ebp,%eax
  437177:	jg     437280 <X509_get0_pubkey_bitstr@plt+0x208b0>
  43717d:	mov    (%rsp),%rdi
  437181:	mov    %r12,%rsi
  437184:	callq  413390 <BN_bn2bin@plt>
  437189:	mov    (%rsp),%rdi
  43718d:	mov    %eax,%ebx
  43718f:	callq  4138e0 <BN_free@plt>
  437194:	test   %ebx,%ebx
  437196:	js     4371e0 <X509_get0_pubkey_bitstr@plt+0x20810>
  437198:	mov    0x24422a(%rip),%edx        # 67b3c8 <_edata+0x6c0>
  43719e:	test   %edx,%edx
  4371a0:	je     43710e <X509_get0_pubkey_bitstr@plt+0x2073e>
  4371a6:	mov    0x244223(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4371ad:	lea    0x311e6(%rip),%rsi        # 46839a <_fini+0xae96>
  4371b4:	mov    %ebx,%edx
  4371b6:	xor    %eax,%eax
  4371b8:	callq  413c40 <BIO_printf@plt>
  4371bd:	jmpq   43710e <X509_get0_pubkey_bitstr@plt+0x2073e>
  4371c2:	nopw   0x0(%rax,%rax,1)
  4371c8:	lea    0x243b71(%rip),%rax        # 67ad40 <_edata+0x38>
  4371cf:	lea    0x2f8da(%rip),%rsi        # 466ab0 <_fini+0x95ac>
  4371d6:	mov    (%rax),%rdi
  4371d9:	xor    %eax,%eax
  4371db:	callq  413c40 <BIO_printf@plt>
  4371e0:	mov    0x2441e2(%rip),%eax        # 67b3c8 <_edata+0x6c0>
  4371e6:	test   %eax,%eax
  4371e8:	jne    437260 <X509_get0_pubkey_bitstr@plt+0x20890>
  4371ea:	xor    %ebx,%ebx
  4371ec:	jmpq   43710e <X509_get0_pubkey_bitstr@plt+0x2073e>
  4371f1:	nopl   0x0(%rax)
  4371f8:	mov    0x2441d1(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4371ff:	lea    0x3113d(%rip),%rsi        # 468343 <_fini+0xae3f>
  437206:	callq  413c40 <BIO_printf@plt>
  43720b:	jmpq   437086 <X509_get0_pubkey_bitstr@plt+0x206b6>
  437210:	mov    0x2441b9(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  437217:	lea    0x2f8c2(%rip),%rsi        # 466ae0 <_fini+0x95dc>
  43721e:	xor    %eax,%eax
  437220:	mov    %r8,%rcx
  437223:	mov    %rbx,%rdx
  437226:	callq  413c40 <BIO_printf@plt>
  43722b:	mov    0x244197(%rip),%eax        # 67b3c8 <_edata+0x6c0>
  437231:	test   %eax,%eax
  437233:	je     4371ea <X509_get0_pubkey_bitstr@plt+0x2081a>
  437235:	jmp    437260 <X509_get0_pubkey_bitstr@plt+0x20890>
  437237:	nopw   0x0(%rax,%rax,1)
  437240:	mov    0x244189(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  437247:	lea    0x31131(%rip),%rsi        # 46837f <_fini+0xae7b>
  43724e:	xor    %eax,%eax
  437250:	callq  413c40 <BIO_printf@plt>
  437255:	jmpq   4370c5 <X509_get0_pubkey_bitstr@plt+0x206f5>
  43725a:	nopw   0x0(%rax,%rax,1)
  437260:	lea    0x243ad9(%rip),%rax        # 67ad40 <_edata+0x38>
  437267:	lea    0x31140(%rip),%rsi        # 4683ae <_fini+0xaeaa>
  43726e:	xor    %ebx,%ebx
  437270:	mov    (%rax),%rdi
  437273:	xor    %eax,%eax
  437275:	callq  413c40 <BIO_printf@plt>
  43727a:	jmpq   43710e <X509_get0_pubkey_bitstr@plt+0x2073e>
  43727f:	nop
  437280:	mov    (%rsp),%rdi
  437284:	callq  415810 <BN_num_bits@plt>
  437289:	lea    0xe(%rax),%ecx
  43728c:	add    $0x7,%eax
  43728f:	lea    0x2f8ba(%rip),%rsi        # 466b50 <_fini+0x964c>
  437296:	mov    %ebp,%edx
  437298:	cmovns %eax,%ecx
  43729b:	lea    0x243a9e(%rip),%rax        # 67ad40 <_edata+0x38>
  4372a2:	sar    $0x3,%ecx
  4372a5:	mov    (%rax),%rdi
  4372a8:	xor    %eax,%eax
  4372aa:	callq  413c40 <BIO_printf@plt>
  4372af:	mov    (%rsp),%rdi
  4372b3:	jmpq   437107 <X509_get0_pubkey_bitstr@plt+0x20737>
  4372b8:	callq  414c30 <__stack_chk_fail@plt>
  4372bd:	nopl   (%rax)
  4372c0:	cmpq   $0x0,0x244098(%rip)        # 67b360 <_edata+0x658>
  4372c8:	je     4372d8 <X509_get0_pubkey_bitstr@plt+0x20908>
  4372ca:	mov    0x24408f(%rip),%rax        # 67b360 <_edata+0x658>
  4372d1:	retq   
  4372d2:	nopw   0x0(%rax,%rax,1)
  4372d8:	push   %r12
  4372da:	push   %rbp
  4372db:	push   %rbx
  4372dc:	mov    %edx,%ebx
  4372de:	callq  416760 <BN_new@plt>
  4372e3:	test   %rax,%rax
  4372e6:	mov    %rax,%rbp
  4372e9:	je     4373e6 <X509_get0_pubkey_bitstr@plt+0x20a16>
  4372ef:	cmpq   $0x0,0x244069(%rip)        # 67b360 <_edata+0x658>
  4372f7:	jne    437342 <X509_get0_pubkey_bitstr@plt+0x20972>
  4372f9:	mov    0x2440b9(%rip),%edx        # 67b3b8 <_edata+0x6b0>
  4372ff:	test   %edx,%edx
  437301:	je     437380 <X509_get0_pubkey_bitstr@plt+0x209b0>
  437303:	mov    $0x10001,%esi
  437308:	mov    %rbp,%rdi
  43730b:	callq  414d20 <BN_set_word@plt>
  437310:	test   %eax,%eax
  437312:	jne    437350 <X509_get0_pubkey_bitstr@plt+0x20980>
  437314:	mov    0x244045(%rip),%rdi        # 67b360 <_edata+0x658>
  43731b:	test   %rdi,%rdi
  43731e:	je     437325 <X509_get0_pubkey_bitstr@plt+0x20955>
  437320:	callq  414970 <RSA_free@plt>
  437325:	movq   $0x0,0x244030(%rip)        # 67b360 <_edata+0x658>
  437330:	mov    0x244082(%rip),%eax        # 67b3b8 <_edata+0x6b0>
  437336:	test   %eax,%eax
  437338:	je     4373b8 <X509_get0_pubkey_bitstr@plt+0x209e8>
  43733a:	mov    %rbp,%rdi
  43733d:	callq  4138e0 <BN_free@plt>
  437342:	pop    %rbx
  437343:	pop    %rbp
  437344:	mov    0x244015(%rip),%rax        # 67b360 <_edata+0x658>
  43734b:	pop    %r12
  43734d:	retq   
  43734e:	xchg   %ax,%ax
  437350:	callq  4144a0 <RSA_new@plt>
  437355:	test   %rax,%rax
  437358:	mov    %rax,0x244001(%rip)        # 67b360 <_edata+0x658>
  43735f:	je     437325 <X509_get0_pubkey_bitstr@plt+0x20955>
  437361:	xor    %ecx,%ecx
  437363:	mov    %rbp,%rdx
  437366:	mov    %ebx,%esi
  437368:	mov    %rax,%rdi
  43736b:	callq  415ff0 <RSA_generate_key_ex@plt>
  437370:	test   %eax,%eax
  437372:	je     437314 <X509_get0_pubkey_bitstr@plt+0x20944>
  437374:	jmp    437330 <X509_get0_pubkey_bitstr@plt+0x20960>
  437376:	nopw   %cs:0x0(%rax,%rax,1)
  437380:	lea    0x2439b9(%rip),%r12        # 67ad40 <_edata+0x38>
  437387:	lea    0x2f822(%rip),%rsi        # 466bb0 <_fini+0x96ac>
  43738e:	mov    %ebx,%edx
  437390:	xor    %eax,%eax
  437392:	mov    (%r12),%rdi
  437396:	callq  413c40 <BIO_printf@plt>
  43739b:	mov    (%r12),%rdi
  43739f:	xor    %ecx,%ecx
  4373a1:	xor    %edx,%edx
  4373a3:	mov    $0xb,%esi
  4373a8:	callq  412af0 <BIO_ctrl@plt>
  4373ad:	jmpq   437303 <X509_get0_pubkey_bitstr@plt+0x20933>
  4373b2:	nopw   0x0(%rax,%rax,1)
  4373b8:	lea    0x243981(%rip),%rbx        # 67ad40 <_edata+0x38>
  4373bf:	lea    0x2d7d9(%rip),%rsi        # 464b9f <_fini+0x769b>
  4373c6:	xor    %eax,%eax
  4373c8:	mov    (%rbx),%rdi
  4373cb:	callq  413c40 <BIO_printf@plt>
  4373d0:	mov    (%rbx),%rdi
  4373d3:	xor    %ecx,%ecx
  4373d5:	xor    %edx,%edx
  4373d7:	mov    $0xb,%esi
  4373dc:	callq  412af0 <BIO_ctrl@plt>
  4373e1:	jmpq   43733a <X509_get0_pubkey_bitstr@plt+0x2096a>
  4373e6:	lea    0x243953(%rip),%rax        # 67ad40 <_edata+0x38>
  4373ed:	lea    0x2f794(%rip),%rsi        # 466b88 <_fini+0x9684>
  4373f4:	mov    (%rax),%rdi
  4373f7:	xor    %eax,%eax
  4373f9:	callq  413c40 <BIO_printf@plt>
  4373fe:	jmpq   437342 <X509_get0_pubkey_bitstr@plt+0x20972>
  437403:	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  437410:	push   %r14
  437412:	mov    %rdi,%r14
  437415:	push   %r13
  437417:	push   %r12
  437419:	mov    $0xa,%r12d
  43741f:	push   %rbp
  437420:	mov    %rsi,%rbp
  437423:	push   %rbx
  437424:	mov    %rdx,%rbx
  437427:	nopw   0x0(%rax,%rax,1)
  437430:	mov    (%rbx),%esi
  437432:	mov    %rbp,%rdi
  437435:	callq  415560 <RAND_pseudo_bytes@plt>
  43743a:	mov    0x243f57(%rip),%r13        # 67b398 <_edata+0x690>
  437441:	mov    %r13,%rdi
  437444:	callq  413470 <strlen@plt>
  437449:	mov    (%rbx),%edx
  43744b:	mov    %r13,%rsi
  43744e:	mov    %rbp,%rdi
  437451:	cmp    %rdx,%rax
  437454:	cmovbe %rax,%rdx
  437458:	callq  414250 <memcpy@plt>
  43745d:	mov    (%rbx),%edx
  43745f:	mov    %rbp,%rsi
  437462:	mov    %r14,%rdi
  437465:	callq  4143a0 <SSL_has_matching_session_id@plt>
  43746a:	test   %eax,%eax
  43746c:	je     437480 <X509_get0_pubkey_bitstr@plt+0x20ab0>
  43746e:	sub    $0x1,%r12d
  437472:	jne    437430 <X509_get0_pubkey_bitstr@plt+0x20a60>
  437474:	pop    %rbx
  437475:	pop    %rbp
  437476:	pop    %r12
  437478:	pop    %r13
  43747a:	xor    %eax,%eax
  43747c:	pop    %r14
  43747e:	retq   
  43747f:	nop
  437480:	pop    %rbx
  437481:	pop    %rbp
  437482:	pop    %r12
  437484:	pop    %r13
  437486:	mov    $0x1,%eax
  43748b:	pop    %r14
  43748d:	retq   
  43748e:	xchg   %ax,%ax
  437490:	push   %rbp
  437491:	lea    0x26d95(%rip),%rsi        # 45e22d <_fini+0xd29>
  437498:	push   %rbx
  437499:	sub    $0x8,%rsp
  43749d:	callq  412ba0 <BIO_new_file@plt>
  4374a2:	test   %rax,%rax
  4374a5:	mov    %rax,%rbx
  4374a8:	je     4374d0 <X509_get0_pubkey_bitstr@plt+0x20b00>
  4374aa:	mov    %rax,%rdi
  4374ad:	xor    %ecx,%ecx
  4374af:	xor    %edx,%edx
  4374b1:	xor    %esi,%esi
  4374b3:	callq  413f70 <PEM_read_bio_DHparams@plt>
  4374b8:	mov    %rbx,%rdi
  4374bb:	mov    %rax,%rbp
  4374be:	callq  413960 <BIO_free@plt>
  4374c3:	add    $0x8,%rsp
  4374c7:	mov    %rbp,%rax
  4374ca:	pop    %rbx
  4374cb:	pop    %rbp
  4374cc:	retq   
  4374cd:	nopl   (%rax)
  4374d0:	xor    %ebp,%ebp
  4374d2:	jmp    4374c3 <X509_get0_pubkey_bitstr@plt+0x20af3>
  4374d4:	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4374e0:	push   %r12
  4374e2:	xor    %esi,%esi
  4374e4:	mov    %rdi,%r12
  4374e7:	push   %rbp
  4374e8:	mov    %rdx,%rbp
  4374eb:	push   %rbx
  4374ec:	callq  413a00 <SSL_get_servername@plt>
  4374f1:	test   %rax,%rax
  4374f4:	mov    %rax,%rbx
  4374f7:	je     437560 <X509_get0_pubkey_bitstr@plt+0x20b90>
  4374f9:	mov    0x8(%rbp),%rdi
  4374fd:	test   %rdi,%rdi
  437500:	je     437513 <X509_get0_pubkey_bitstr@plt+0x20b43>
  437502:	lea    0x2f6cf(%rip),%rsi        # 466bd8 <_fini+0x96d4>
  437509:	mov    %rax,%rdx
  43750c:	xor    %eax,%eax
  43750e:	callq  413c40 <BIO_printf@plt>
  437513:	mov    0x0(%rbp),%rsi
  437517:	test   %rsi,%rsi
  43751a:	je     437570 <X509_get0_pubkey_bitstr@plt+0x20ba0>
  43751c:	mov    %rbx,%rdi
  43751f:	callq  414af0 <strcasecmp@plt>
  437524:	test   %eax,%eax
  437526:	mov    %eax,%ebx
  437528:	jne    437580 <X509_get0_pubkey_bitstr@plt+0x20bb0>
  43752a:	cmpq   $0x0,0x243eae(%rip)        # 67b3e0 <_edata+0x6d8>
  437532:	je     437567 <X509_get0_pubkey_bitstr@plt+0x20b97>
  437534:	mov    0x8(%rbp),%rdi
  437538:	lea    0x30e8d(%rip),%rsi        # 4683cc <_fini+0xaec8>
  43753f:	xor    %eax,%eax
  437541:	callq  413c40 <BIO_printf@plt>
  437546:	mov    0x243e93(%rip),%rsi        # 67b3e0 <_edata+0x6d8>
  43754d:	mov    %r12,%rdi
  437550:	callq  413860 <SSL_set_SSL_CTX@plt>
  437555:	mov    %ebx,%eax
  437557:	pop    %rbx
  437558:	pop    %rbp
  437559:	pop    %r12
  43755b:	retq   
  43755c:	nopl   0x0(%rax)
  437560:	cmpq   $0x0,0x0(%rbp)
  437565:	je     437570 <X509_get0_pubkey_bitstr@plt+0x20ba0>
  437567:	xor    %ebx,%ebx
  437569:	mov    %ebx,%eax
  43756b:	pop    %rbx
  43756c:	pop    %rbp
  43756d:	pop    %r12
  43756f:	retq   
  437570:	mov    $0x3,%ebx
  437575:	mov    %ebx,%eax
  437577:	pop    %rbx
  437578:	pop    %rbp
  437579:	pop    %r12
  43757b:	retq   
  43757c:	nopl   0x0(%rax)
  437580:	mov    0x10(%rbp),%ebx
  437583:	mov    %ebx,%eax
  437585:	pop    %rbx
  437586:	pop    %rbp
  437587:	pop    %r12
  437589:	retq   
  43758a:	nopw   0x0(%rax,%rax,1)
  437590:	push   %r15
  437592:	push   %r14
  437594:	push   %r13
  437596:	push   %r12
  437598:	push   %rbp
  437599:	push   %rbx
  43759a:	sub    $0x128,%rsp
  4375a1:	mov    %edi,0xcc(%rsp)
  4375a8:	mov    %rsi,0xc0(%rsp)
  4375b0:	mov    %fs:0x28,%rax
  4375b9:	mov    %rax,0x118(%rsp)
  4375c1:	xor    %eax,%eax
  4375c3:	movq   $0x0,0xd8(%rsp)
  4375cf:	movl   $0x0,0xd4(%rsp)
  4375da:	movq   $0x0,0xe0(%rsp)
  4375e6:	movq   $0x0,0xe8(%rsp)
  4375f2:	movq   $0x0,0x100(%rsp)
  4375fe:	movq   $0x0,0x108(%rsp)
  43760a:	movl   $0x1,0x110(%rsp)
  437615:	callq  4163d0 <SSLv23_server_method@plt>
  43761a:	mov    %rax,%r15
  43761d:	mov    0xcc(%rsp),%eax
  437624:	mov    $0xd,%edi
  437629:	mov    $0x1,%esi
  43762e:	mov    %eax,0x243d4c(%rip)        # 67b380 <_edata+0x678>
  437634:	mov    0xc0(%rsp),%rax
  43763c:	mov    %rax,0x243d35(%rip)        # 67b378 <_edata+0x670>
  437643:	callq  414ee0 <signal@plt>
  437648:	lea    0x2436f1(%rip),%rbx        # 67ad40 <_edata+0x38>
  43764f:	lea    0x30d91(%rip),%rax        # 4683e7 <_fini+0xaee3>
  437656:	movl   $0xffffffff,0x241a38(%rip)        # 679098 <_fini+0x21bb94>
  437660:	movq   $0x0,0x243db5(%rip)        # 67b420 <_edata+0x718>
  43766b:	movl   $0x0,0x243da3(%rip)        # 67b418 <_edata+0x710>
  437675:	mov    %rax,0x241a2c(%rip)        # 6790a8 <_fini+0x21bba4>
  43767c:	lea    0x30d6f(%rip),%rax        # 4683f2 <_fini+0xaeee>
  437683:	movq   $0x0,0x243d72(%rip)        # 67b400 <_edata+0x6f8>
  43768e:	mov    (%rbx),%rdi
  437691:	movq   $0x0,0x243d5c(%rip)        # 67b3f8 <_edata+0x6f0>
  43769c:	movq   $0x0,0x243d69(%rip)        # 67b410 <_edata+0x708>
  4376a7:	mov    %rax,0x2419f2(%rip)        # 6790a0 <_fini+0x21bb9c>
  4376ae:	movq   $0x0,0x243d4f(%rip)        # 67b408 <_edata+0x700>
  4376b9:	movq   $0x0,0x243d1c(%rip)        # 67b3e0 <_edata+0x6d8>
  4376c4:	test   %rdi,%rdi
  4376c7:	movl   $0x0,0x243d23(%rip)        # 67b3f4 <_edata+0x6ec>
  4376d1:	movl   $0x0,0x243d15(%rip)        # 67b3f0 <_edata+0x6e8>
  4376db:	movq   $0x0,0x243d02(%rip)        # 67b3e8 <_edata+0x6e0>
  4376e6:	movl   $0x0,0x243ce8(%rip)        # 67b3d8 <_edata+0x6d0>
  4376f0:	movq   $0x0,0x243cd5(%rip)        # 67b3d0 <_edata+0x6c8>
  4376fb:	movl   $0x0,0x243cc3(%rip)        # 67b3c8 <_edata+0x6c0>
  437705:	movl   $0x0,0x243cad(%rip)        # 67b3bc <_edata+0x6b4>
  43770f:	movl   $0x0,0x243c9f(%rip)        # 67b3b8 <_edata+0x6b0>
  437719:	movl   $0x0,0x243c85(%rip)        # 67b3a8 <_edata+0x6a0>
  437723:	movq   $0x0,0x243c72(%rip)        # 67b3a0 <_edata+0x698>
  43772e:	je     438af1 <X509_get0_pubkey_bitstr@plt+0x22121>
  437734:	xor    %esi,%esi
  437736:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  43773b:	test   %eax,%eax
  43773d:	je     437fa7 <X509_get0_pubkey_bitstr@plt+0x215d7>
  437743:	mov    0xcc(%rsp),%eax
  43774a:	lea    0x2444b3(%rip),%rbp        # 67bc04 <_edata+0xefc>
  437751:	xor    %r13d,%r13d
  437754:	movl   $0x0,0x243c96(%rip)        # 67b3f4 <_edata+0x6ec>
  43775e:	movl   $0x0,0x243c88(%rip)        # 67b3f0 <_edata+0x6e8>
  437768:	lea    0x330b3(%rip),%r14        # 46a822 <_fini+0xd31e>
  43776f:	addq   $0x8,0xc0(%rsp)
  437778:	movq   $0x0,0x68(%rsp)
  437781:	lea    -0x1(%rax),%r12d
  437785:	lea    0xd8(%rsp),%rax
  43778d:	movl   $0x0,0x0(%rbp)
  437794:	movl   $0x0,0x88(%rsp)
  43779f:	movl   $0x3,0x64(%rsp)
  4377a7:	mov    %rax,0x10(%rsp)
  4377ac:	lea    0xd4(%rsp),%rax
  4377b4:	mov    %r12d,0xcc(%rsp)
  4377bc:	mov    %rax,0x18(%rsp)
  4377c1:	lea    0xcc(%rsp),%rax
  4377c9:	movl   $0x3,0x84(%rsp)
  4377d4:	movq   $0x0,0x8(%rsp)
  4377dd:	movl   $0x3,0x80(%rsp)
  4377e8:	mov    %rax,0x98(%rsp)
  4377f0:	lea    0xc0(%rsp),%rax
  4377f8:	movl   $0x3,0x30(%rsp)
  437800:	movq   $0x0,0x58(%rsp)
  437809:	movl   $0x1,0x60(%rsp)
  437811:	movl   $0x0,0x7c(%rsp)
  437819:	movl   $0x0,0x3c(%rsp)
  437821:	movl   $0x0,0x94(%rsp)
  43782c:	movl   $0x0,0x90(%rsp)
  437837:	movl   $0x0,0x8c(%rsp)
  437842:	movl   $0x0,0x28(%rsp)
  43784a:	movl   $0x0,0x78(%rsp)
  437852:	movq   $0x0,0x48(%rsp)
  43785b:	movq   $0x0,0x70(%rsp)
  437864:	movq   $0x0,0x20(%rsp)
  43786d:	movq   $0x0,0x40(%rsp)
  437876:	movq   $0x0,0x50(%rsp)
  43787f:	mov    %rax,0xa0(%rsp)
  437887:	jmpq   437938 <X509_get0_pubkey_bitstr@plt+0x20f68>
  43788c:	nopl   0x0(%rax)
  437890:	lea    0x30b6d(%rip),%rdi        # 468404 <_fini+0xaf00>
  437897:	mov    $0x8,%ecx
  43789c:	mov    %rdx,%rsi
  43789f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4378a1:	je     437963 <X509_get0_pubkey_bitstr@plt+0x20f93>
  4378a7:	lea    0x2698a(%rip),%rdi        # 45e238 <_fini+0xd34>
  4378ae:	mov    $0x8,%ecx
  4378b3:	mov    %rdx,%rsi
  4378b6:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4378b8:	jne    437988 <X509_get0_pubkey_bitstr@plt+0x20fb8>
  4378be:	sub    $0x1,%r12d
  4378c2:	movl   $0x5,0x243b4c(%rip)        # 67b418 <_edata+0x710>
  4378cc:	test   %r12d,%r12d
  4378cf:	mov    %r12d,0xcc(%rsp)
  4378d7:	je     437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  4378dd:	lea    0x8(%rax),%rdx
  4378e1:	mov    0x8(%rax),%rdi
  4378e5:	xor    %esi,%esi
  4378e7:	mov    %rdx,0xc0(%rsp)
  4378ef:	mov    $0xa,%edx
  4378f4:	callq  4155d0 <strtol@plt>
  4378f9:	lea    0x30b0c(%rip),%rsi        # 46840c <_fini+0xaf08>
  437900:	mov    %eax,0x0(%rbp)
  437903:	mov    %eax,%edx
  437905:	mov    (%rbx),%rdi
  437908:	xor    %eax,%eax
  43790a:	callq  413c40 <BIO_printf@plt>
  43790f:	mov    0xcc(%rsp),%r12d
  437917:	mov    0xc0(%rsp),%rax
  43791f:	nop
  437920:	sub    $0x1,%r12d
  437924:	add    $0x8,%rax
  437928:	mov    %r12d,0xcc(%rsp)
  437930:	mov    %rax,0xc0(%rsp)
  437938:	test   %r12d,%r12d
  43793b:	jle    4381b8 <X509_get0_pubkey_bitstr@plt+0x217e8>
  437941:	mov    0xc0(%rsp),%rax
  437949:	lea    0x30aae(%rip),%rdi        # 4683fe <_fini+0xaefa>
  437950:	mov    $0x6,%ecx
  437955:	mov    (%rax),%rdx
  437958:	mov    %rdx,%rsi
  43795b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43795d:	jne    437890 <X509_get0_pubkey_bitstr@plt+0x20ec0>
  437963:	sub    $0x1,%r12d
  437967:	test   %r12d,%r12d
  43796a:	mov    %r12d,0xcc(%rsp)
  437972:	je     437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  437978:	mov    0x8(%rax),%r14
  43797c:	add    $0x8,%rax
  437980:	jmp    437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  437982:	nopw   0x0(%rax,%rax,1)
  437988:	lea    0x30a91(%rip),%rdi        # 468420 <_fini+0xaf1c>
  43798f:	mov    $0x8,%ecx
  437994:	mov    %rdx,%rsi
  437997:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  437999:	jne    438100 <X509_get0_pubkey_bitstr@plt+0x21730>
  43799f:	mov    0xcc(%rsp),%edx
  4379a6:	movl   $0x7,0x243a68(%rip)        # 67b418 <_edata+0x710>
  4379b0:	sub    $0x1,%edx
  4379b3:	test   %edx,%edx
  4379b5:	mov    %edx,0xcc(%rsp)
  4379bc:	jle    437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  4379c2:	lea    0x8(%rax),%rdx
  4379c6:	mov    0x8(%rax),%rdi
  4379ca:	xor    %esi,%esi
  4379cc:	mov    %rdx,0xc0(%rsp)
  4379d4:	mov    $0xa,%edx
  4379d9:	callq  4155d0 <strtol@plt>
  4379de:	lea    0x2f21b(%rip),%rsi        # 466c00 <_fini+0x96fc>
  4379e5:	mov    %eax,0x0(%rbp)
  4379e8:	mov    %eax,%edx
  4379ea:	jmpq   437905 <X509_get0_pubkey_bitstr@plt+0x20f35>
  4379ef:	lea    0x30b13(%rip),%rdi        # 468509 <_fini+0xb005>
  4379f6:	mov    $0xc,%ecx
  4379fb:	mov    %rdx,%rsi
  4379fe:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  437a00:	jne    439781 <X509_get0_pubkey_bitstr@plt+0x22db1>
  437a06:	mov    0xcc(%rsp),%edx
  437a0d:	movl   $0x1,0x2439a9(%rip)        # 67b3c0 <_edata+0x6b8>
  437a17:	sub    $0x1,%edx
  437a1a:	test   %edx,%edx
  437a1c:	mov    %edx,0xcc(%rsp)
  437a23:	jle    437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  437a25:	lea    0x8(%rax),%rdx
  437a29:	mov    0x8(%rax),%rdi
  437a2d:	lea    0x241644(%rip),%r8        # 679078 <_fini+0x21bb74>
  437a34:	lea    0x24162d(%rip),%rcx        # 679068 <_fini+0x21bb64>
  437a3b:	lea    0x24161e(%rip),%rsi        # 679060 <_fini+0x21bb5c>
  437a42:	mov    %rdx,0xc0(%rsp)
  437a4a:	lea    0x24161f(%rip),%rdx        # 679070 <_fini+0x21bb6c>
  437a51:	callq  413650 <OCSP_parse_url@plt>
  437a56:	test   %eax,%eax
  437a58:	jne    43790f <X509_get0_pubkey_bitstr@plt+0x20f3f>
  437a5e:	mov    (%rbx),%rdi
  437a61:	lea    0x30aad(%rip),%rsi        # 468515 <_fini+0xb011>
  437a68:	xor    %eax,%eax
  437a6a:	callq  413c40 <BIO_printf@plt>
  437a6f:	nop
  437a70:	mov    (%rbx),%rdi
  437a73:	lea    0x30c10(%rip),%rsi        # 46868a <_fini+0xb186>
  437a7a:	xor    %eax,%eax
  437a7c:	callq  413c40 <BIO_printf@plt>
  437a81:	mov    (%rbx),%rdi
  437a84:	lea    0x2d114(%rip),%rsi        # 464b9f <_fini+0x769b>
  437a8b:	xor    %eax,%eax
  437a8d:	callq  413c40 <BIO_printf@plt>
  437a92:	mov    (%rbx),%rdi
  437a95:	lea    0x2f194(%rip),%rsi        # 466c30 <_fini+0x972c>
  437a9c:	mov    $0x1151,%edx
  437aa1:	xor    %eax,%eax
  437aa3:	callq  413c40 <BIO_printf@plt>
  437aa8:	mov    (%rbx),%rdi
  437aab:	lea    0x2f1b6(%rip),%rsi        # 466c68 <_fini+0x9764>
  437ab2:	xor    %eax,%eax
  437ab4:	callq  413c40 <BIO_printf@plt>
  437ab9:	mov    (%rbx),%rdi
  437abc:	lea    0x2f1d5(%rip),%rsi        # 466c98 <_fini+0x9794>
  437ac3:	xor    %eax,%eax
  437ac5:	callq  413c40 <BIO_printf@plt>
  437aca:	mov    (%rbx),%rdi
  437acd:	lea    0x2f1fc(%rip),%rsi        # 466cd0 <_fini+0x97cc>
  437ad4:	xor    %eax,%eax
  437ad6:	callq  413c40 <BIO_printf@plt>
  437adb:	mov    (%rbx),%rdi
  437ade:	lea    0x2f23b(%rip),%rsi        # 466d20 <_fini+0x981c>
  437ae5:	xor    %eax,%eax
  437ae7:	callq  413c40 <BIO_printf@plt>
  437aec:	mov    (%rbx),%rdi
  437aef:	lea    0x308f1(%rip),%rdx        # 4683e7 <_fini+0xaee3>
  437af6:	lea    0x2f253(%rip),%rsi        # 466d50 <_fini+0x984c>
  437afd:	xor    %eax,%eax
  437aff:	callq  413c40 <BIO_printf@plt>
  437b04:	mov    (%rbx),%rdi
  437b07:	lea    0x2f26a(%rip),%rsi        # 466d78 <_fini+0x9874>
  437b0e:	xor    %eax,%eax
  437b10:	callq  413c40 <BIO_printf@plt>
  437b15:	mov    (%rbx),%rdi
  437b18:	lea    0x2f2e9(%rip),%rsi        # 466e08 <_fini+0x9904>
  437b1f:	xor    %eax,%eax
  437b21:	callq  413c40 <BIO_printf@plt>
  437b26:	mov    (%rbx),%rdi
  437b29:	lea    0x2f3a0(%rip),%rsi        # 466ed0 <_fini+0x99cc>
  437b30:	xor    %eax,%eax
  437b32:	callq  413c40 <BIO_printf@plt>
  437b37:	mov    (%rbx),%rdi
  437b3a:	lea    0x2f3cf(%rip),%rsi        # 466f10 <_fini+0x9a0c>
  437b41:	xor    %eax,%eax
  437b43:	callq  413c40 <BIO_printf@plt>
  437b48:	mov    (%rbx),%rdi
  437b4b:	lea    0x30895(%rip),%rdx        # 4683e7 <_fini+0xaee3>
  437b52:	lea    0x2f3f7(%rip),%rsi        # 466f50 <_fini+0x9a4c>
  437b59:	xor    %eax,%eax
  437b5b:	callq  413c40 <BIO_printf@plt>
  437b60:	mov    (%rbx),%rdi
  437b63:	lea    0x2f416(%rip),%rsi        # 466f80 <_fini+0x9a7c>
  437b6a:	xor    %eax,%eax
  437b6c:	callq  413c40 <BIO_printf@plt>
  437b71:	mov    (%rbx),%rdi
  437b74:	lea    0x2f445(%rip),%rsi        # 466fc0 <_fini+0x9abc>
  437b7b:	xor    %eax,%eax
  437b7d:	callq  413c40 <BIO_printf@plt>
  437b82:	mov    (%rbx),%rdi
  437b85:	lea    0x2f46c(%rip),%rsi        # 466ff8 <_fini+0x9af4>
  437b8c:	xor    %eax,%eax
  437b8e:	callq  413c40 <BIO_printf@plt>
  437b93:	mov    (%rbx),%rdi
  437b96:	lea    0x2f4a3(%rip),%rsi        # 467040 <_fini+0x9b3c>
  437b9d:	xor    %eax,%eax
  437b9f:	callq  413c40 <BIO_printf@plt>
  437ba4:	mov    (%rbx),%rdi
  437ba7:	lea    0x2f4da(%rip),%rsi        # 467088 <_fini+0x9b84>
  437bae:	xor    %eax,%eax
  437bb0:	callq  413c40 <BIO_printf@plt>
  437bb5:	mov    (%rbx),%rdi
  437bb8:	lea    0x2f511(%rip),%rsi        # 4670d0 <_fini+0x9bcc>
  437bbf:	xor    %eax,%eax
  437bc1:	callq  413c40 <BIO_printf@plt>
  437bc6:	mov    (%rbx),%rdi
  437bc9:	lea    0x2f548(%rip),%rsi        # 467118 <_fini+0x9c14>
  437bd0:	xor    %eax,%eax
  437bd2:	callq  413c40 <BIO_printf@plt>
  437bd7:	mov    (%rbx),%rdi
  437bda:	lea    0x2f577(%rip),%rsi        # 467158 <_fini+0x9c54>
  437be1:	xor    %eax,%eax
  437be3:	callq  413c40 <BIO_printf@plt>
  437be8:	mov    (%rbx),%rdi
  437beb:	lea    0x2f5b6(%rip),%rsi        # 4671a8 <_fini+0x9ca4>
  437bf2:	xor    %eax,%eax
  437bf4:	callq  413c40 <BIO_printf@plt>
  437bf9:	mov    (%rbx),%rdi
  437bfc:	lea    0x2f5e5(%rip),%rsi        # 4671e8 <_fini+0x9ce4>
  437c03:	xor    %eax,%eax
  437c05:	callq  413c40 <BIO_printf@plt>
  437c0a:	mov    (%rbx),%rdi
  437c0d:	lea    0x2f68c(%rip),%rsi        # 4672a0 <_fini+0x9d9c>
  437c14:	xor    %eax,%eax
  437c16:	callq  413c40 <BIO_printf@plt>
  437c1b:	mov    (%rbx),%rdi
  437c1e:	lea    0x2f6ab(%rip),%rsi        # 4672d0 <_fini+0x9dcc>
  437c25:	xor    %eax,%eax
  437c27:	callq  413c40 <BIO_printf@plt>
  437c2c:	mov    (%rbx),%rdi
  437c2f:	lea    0x2f6d2(%rip),%rsi        # 467308 <_fini+0x9e04>
  437c36:	xor    %eax,%eax
  437c38:	callq  413c40 <BIO_printf@plt>
  437c3d:	mov    (%rbx),%rdi
  437c40:	lea    0x2f6f9(%rip),%rsi        # 467340 <_fini+0x9e3c>
  437c47:	xor    %eax,%eax
  437c49:	callq  413c40 <BIO_printf@plt>
  437c4e:	mov    (%rbx),%rdi
  437c51:	lea    0x2f710(%rip),%rsi        # 467368 <_fini+0x9e64>
  437c58:	xor    %eax,%eax
  437c5a:	callq  413c40 <BIO_printf@plt>
  437c5f:	mov    (%rbx),%rdi
  437c62:	lea    0x2f72f(%rip),%rsi        # 467398 <_fini+0x9e94>
  437c69:	xor    %eax,%eax
  437c6b:	callq  413c40 <BIO_printf@plt>
  437c70:	mov    (%rbx),%rdi
  437c73:	lea    0x2f746(%rip),%rsi        # 4673c0 <_fini+0x9ebc>
  437c7a:	xor    %eax,%eax
  437c7c:	callq  413c40 <BIO_printf@plt>
  437c81:	mov    (%rbx),%rdi
  437c84:	lea    0x2f765(%rip),%rsi        # 4673f0 <_fini+0x9eec>
  437c8b:	xor    %eax,%eax
  437c8d:	callq  413c40 <BIO_printf@plt>
  437c92:	mov    (%rbx),%rdi
  437c95:	lea    0x2f784(%rip),%rsi        # 467420 <_fini+0x9f1c>
  437c9c:	xor    %eax,%eax
  437c9e:	callq  413c40 <BIO_printf@plt>
  437ca3:	mov    (%rbx),%rdi
  437ca6:	lea    0x2f7bb(%rip),%rsi        # 467468 <_fini+0x9f64>
  437cad:	xor    %eax,%eax
  437caf:	callq  413c40 <BIO_printf@plt>
  437cb4:	mov    (%rbx),%rdi
  437cb7:	lea    0x2f7e2(%rip),%rsi        # 4674a0 <_fini+0x9f9c>
  437cbe:	xor    %eax,%eax
  437cc0:	callq  413c40 <BIO_printf@plt>
  437cc5:	mov    (%rbx),%rdi
  437cc8:	lea    0x2f819(%rip),%rsi        # 4674e8 <_fini+0x9fe4>
  437ccf:	xor    %eax,%eax
  437cd1:	callq  413c40 <BIO_printf@plt>
  437cd6:	mov    (%rbx),%rdi
  437cd9:	lea    0x2f840(%rip),%rsi        # 467520 <_fini+0xa01c>
  437ce0:	xor    %eax,%eax
  437ce2:	callq  413c40 <BIO_printf@plt>
  437ce7:	mov    (%rbx),%rdi
  437cea:	lea    0x2f857(%rip),%rsi        # 467548 <_fini+0xa044>
  437cf1:	xor    %eax,%eax
  437cf3:	callq  413c40 <BIO_printf@plt>
  437cf8:	mov    (%rbx),%rdi
  437cfb:	lea    0x2f876(%rip),%rsi        # 467578 <_fini+0xa074>
  437d02:	xor    %eax,%eax
  437d04:	callq  413c40 <BIO_printf@plt>
  437d09:	mov    (%rbx),%rdi
  437d0c:	lea    0x2f895(%rip),%rsi        # 4675a8 <_fini+0xa0a4>
  437d13:	xor    %eax,%eax
  437d15:	callq  413c40 <BIO_printf@plt>
  437d1a:	mov    (%rbx),%rdi
  437d1d:	lea    0x2f8b4(%rip),%rsi        # 4675d8 <_fini+0xa0d4>
  437d24:	xor    %eax,%eax
  437d26:	callq  413c40 <BIO_printf@plt>
  437d2b:	mov    (%rbx),%rdi
  437d2e:	lea    0x2f8cb(%rip),%rsi        # 467600 <_fini+0xa0fc>
  437d35:	xor    %eax,%eax
  437d37:	callq  413c40 <BIO_printf@plt>
  437d3c:	mov    (%rbx),%rdi
  437d3f:	lea    0x2f8e2(%rip),%rsi        # 467628 <_fini+0xa124>
  437d46:	xor    %eax,%eax
  437d48:	callq  413c40 <BIO_printf@plt>
  437d4d:	mov    (%rbx),%rdi
  437d50:	lea    0x2f8f9(%rip),%rsi        # 467650 <_fini+0xa14c>
  437d57:	xor    %eax,%eax
  437d59:	callq  413c40 <BIO_printf@plt>
  437d5e:	mov    (%rbx),%rdi
  437d61:	lea    0x2f910(%rip),%rsi        # 467678 <_fini+0xa174>
  437d68:	xor    %eax,%eax
  437d6a:	callq  413c40 <BIO_printf@plt>
  437d6f:	mov    (%rbx),%rdi
  437d72:	lea    0x2f927(%rip),%rsi        # 4676a0 <_fini+0xa19c>
  437d79:	xor    %eax,%eax
  437d7b:	callq  413c40 <BIO_printf@plt>
  437d80:	mov    (%rbx),%rdi
  437d83:	lea    0x2f93e(%rip),%rsi        # 4676c8 <_fini+0xa1c4>
  437d8a:	xor    %eax,%eax
  437d8c:	callq  413c40 <BIO_printf@plt>
  437d91:	mov    (%rbx),%rdi
  437d94:	lea    0x2f955(%rip),%rsi        # 4676f0 <_fini+0xa1ec>
  437d9b:	xor    %eax,%eax
  437d9d:	callq  413c40 <BIO_printf@plt>
  437da2:	mov    (%rbx),%rdi
  437da5:	lea    0x2f96c(%rip),%rsi        # 467718 <_fini+0xa214>
  437dac:	xor    %eax,%eax
  437dae:	callq  413c40 <BIO_printf@plt>
  437db3:	mov    (%rbx),%rdi
  437db6:	lea    0x2f98b(%rip),%rsi        # 467748 <_fini+0xa244>
  437dbd:	xor    %eax,%eax
  437dbf:	callq  413c40 <BIO_printf@plt>
  437dc4:	mov    (%rbx),%rdi
  437dc7:	lea    0x2f9a2(%rip),%rsi        # 467770 <_fini+0xa26c>
  437dce:	xor    %eax,%eax
  437dd0:	callq  413c40 <BIO_printf@plt>
  437dd5:	mov    (%rbx),%rdi
  437dd8:	lea    0x2f9b9(%rip),%rsi        # 467798 <_fini+0xa294>
  437ddf:	xor    %eax,%eax
  437de1:	callq  413c40 <BIO_printf@plt>
  437de6:	mov    (%rbx),%rdi
  437de9:	lea    0x2f9d0(%rip),%rsi        # 4677c0 <_fini+0xa2bc>
  437df0:	xor    %eax,%eax
  437df2:	callq  413c40 <BIO_printf@plt>
  437df7:	mov    (%rbx),%rdi
  437dfa:	lea    0x2f9e7(%rip),%rsi        # 4677e8 <_fini+0xa2e4>
  437e01:	xor    %eax,%eax
  437e03:	callq  413c40 <BIO_printf@plt>
  437e08:	mov    (%rbx),%rdi
  437e0b:	lea    0x2f9fe(%rip),%rsi        # 467810 <_fini+0xa30c>
  437e12:	xor    %eax,%eax
  437e14:	callq  413c40 <BIO_printf@plt>
  437e19:	mov    (%rbx),%rdi
  437e1c:	lea    0x2fa15(%rip),%rsi        # 467838 <_fini+0xa334>
  437e23:	xor    %eax,%eax
  437e25:	callq  413c40 <BIO_printf@plt>
  437e2a:	mov    (%rbx),%rdi
  437e2d:	lea    0x2fa34(%rip),%rsi        # 467868 <_fini+0xa364>
  437e34:	xor    %eax,%eax
  437e36:	callq  413c40 <BIO_printf@plt>
  437e3b:	mov    (%rbx),%rdi
  437e3e:	lea    0x2fa53(%rip),%rsi        # 467898 <_fini+0xa394>
  437e45:	xor    %eax,%eax
  437e47:	callq  413c40 <BIO_printf@plt>
  437e4c:	mov    (%rbx),%rdi
  437e4f:	lea    0x2fa82(%rip),%rsi        # 4678d8 <_fini+0xa3d4>
  437e56:	xor    %eax,%eax
  437e58:	callq  413c40 <BIO_printf@plt>
  437e5d:	mov    (%rbx),%rdi
  437e60:	lea    0x2fac1(%rip),%rsi        # 467928 <_fini+0xa424>
  437e67:	xor    %eax,%eax
  437e69:	callq  413c40 <BIO_printf@plt>
  437e6e:	mov    (%rbx),%rdi
  437e71:	lea    0x2fb00(%rip),%rsi        # 467978 <_fini+0xa474>
  437e78:	xor    %eax,%eax
  437e7a:	callq  413c40 <BIO_printf@plt>
  437e7f:	mov    (%rbx),%rdi
  437e82:	lea    0x2fb3f(%rip),%rsi        # 4679c8 <_fini+0xa4c4>
  437e89:	xor    %eax,%eax
  437e8b:	callq  413c40 <BIO_printf@plt>
  437e90:	mov    (%rbx),%rdi
  437e93:	lea    0x2fb6e(%rip),%rsi        # 467a08 <_fini+0xa504>
  437e9a:	xor    %eax,%eax
  437e9c:	callq  413c40 <BIO_printf@plt>
  437ea1:	mov    (%rbx),%rdi
  437ea4:	lea    0x2647f(%rip),%rsi        # 45e32a <_fini+0xe26>
  437eab:	mov    $0x3a,%ecx
  437eb0:	mov    $0x3a,%edx
  437eb5:	xor    %eax,%eax
  437eb7:	callq  413c40 <BIO_printf@plt>
  437ebc:	mov    (%rbx),%rdi
  437ebf:	lea    0x2fb8a(%rip),%rsi        # 467a50 <_fini+0xa54c>
  437ec6:	xor    %eax,%eax
  437ec8:	callq  413c40 <BIO_printf@plt>
  437ecd:	mov    (%rbx),%rdi
  437ed0:	lea    0x2fbb9(%rip),%rsi        # 467a90 <_fini+0xa58c>
  437ed7:	xor    %eax,%eax
  437ed9:	callq  413c40 <BIO_printf@plt>
  437ede:	mov    (%rbx),%rdi
  437ee1:	lea    0x2fbf8(%rip),%rsi        # 467ae0 <_fini+0xa5dc>
  437ee8:	xor    %eax,%eax
  437eea:	callq  413c40 <BIO_printf@plt>
  437eef:	mov    (%rbx),%rdi
  437ef2:	lea    0x304f9(%rip),%rdx        # 4683f2 <_fini+0xaeee>
  437ef9:	lea    0x2ee50(%rip),%rsi        # 466d50 <_fini+0x984c>
  437f00:	xor    %eax,%eax
  437f02:	callq  413c40 <BIO_printf@plt>
  437f07:	mov    (%rbx),%rdi
  437f0a:	lea    0x2fc0f(%rip),%rsi        # 467b20 <_fini+0xa61c>
  437f11:	xor    %eax,%eax
  437f13:	callq  413c40 <BIO_printf@plt>
  437f18:	mov    (%rbx),%rdi
  437f1b:	lea    0x304d0(%rip),%rdx        # 4683f2 <_fini+0xaeee>
  437f22:	lea    0x2f027(%rip),%rsi        # 466f50 <_fini+0x9a4c>
  437f29:	xor    %eax,%eax
  437f2b:	callq  413c40 <BIO_printf@plt>
  437f30:	mov    (%rbx),%rdi
  437f33:	lea    0x2fc36(%rip),%rsi        # 467b70 <_fini+0xa66c>
  437f3a:	xor    %eax,%eax
  437f3c:	callq  413c40 <BIO_printf@plt>
  437f41:	mov    (%rbx),%rdi
  437f44:	lea    0x2fc65(%rip),%rsi        # 467bb0 <_fini+0xa6ac>
  437f4b:	xor    %eax,%eax
  437f4d:	callq  413c40 <BIO_printf@plt>
  437f52:	mov    (%rbx),%rdi
  437f55:	lea    0x2fc94(%rip),%rsi        # 467bf0 <_fini+0xa6ec>
  437f5c:	xor    %eax,%eax
  437f5e:	callq  413c40 <BIO_printf@plt>
  437f63:	mov    (%rbx),%rdi
  437f66:	lea    0x2fcd3(%rip),%rsi        # 467c40 <_fini+0xa73c>
  437f6d:	xor    %eax,%eax
  437f6f:	callq  413c40 <BIO_printf@plt>
  437f74:	mov    (%rbx),%rdi
  437f77:	lea    0x2fd22(%rip),%rsi        # 467ca0 <_fini+0xa79c>
  437f7e:	xor    %eax,%eax
  437f80:	callq  413c40 <BIO_printf@plt>
  437f85:	mov    (%rbx),%rdi
  437f88:	lea    0x2fd69(%rip),%rsi        # 467cf8 <_fini+0xa7f4>
  437f8f:	xor    %eax,%eax
  437f91:	callq  413c40 <BIO_printf@plt>
  437f96:	mov    (%rbx),%rdi
  437f99:	lea    0x2fd98(%rip),%rsi        # 467d38 <_fini+0xa834>
  437fa0:	xor    %eax,%eax
  437fa2:	callq  413c40 <BIO_printf@plt>
  437fa7:	xor    %r13d,%r13d
  437faa:	movq   $0x0,0x8(%rsp)
  437fb3:	xor    %r12d,%r12d
  437fb6:	movq   $0x0,0x18(%rsp)
  437fbf:	xor    %ebp,%ebp
  437fc1:	movq   $0x0,0x10(%rsp)
  437fca:	mov    $0x1,%r15d
  437fd0:	mov    0x243411(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  437fd7:	test   %rdi,%rdi
  437fda:	je     437fe1 <X509_get0_pubkey_bitstr@plt+0x21611>
  437fdc:	callq  412c50 <SSL_CTX_free@plt>
  437fe1:	mov    0x10(%rsp),%rdi
  437fe6:	test   %rdi,%rdi
  437fe9:	je     437ff0 <X509_get0_pubkey_bitstr@plt+0x21620>
  437feb:	callq  4153a0 <X509_free@plt>
  437ff0:	test   %rbp,%rbp
  437ff3:	je     437ffd <X509_get0_pubkey_bitstr@plt+0x2162d>
  437ff5:	mov    %rbp,%rdi
  437ff8:	callq  4153a0 <X509_free@plt>
  437ffd:	mov    0x18(%rsp),%rdi
  438002:	test   %rdi,%rdi
  438005:	je     43800c <X509_get0_pubkey_bitstr@plt+0x2163c>
  438007:	callq  412b00 <EVP_PKEY_free@plt>
  43800c:	test   %r12,%r12
  43800f:	je     438019 <X509_get0_pubkey_bitstr@plt+0x21649>
  438011:	mov    %r12,%rdi
  438014:	callq  412b00 <EVP_PKEY_free@plt>
  438019:	mov    0xe0(%rsp),%rdi
  438021:	test   %rdi,%rdi
  438024:	je     43802b <X509_get0_pubkey_bitstr@plt+0x2165b>
  438026:	callq  415020 <CRYPTO_free@plt>
  43802b:	mov    0xe8(%rsp),%rdi
  438033:	test   %rdi,%rdi
  438036:	je     43803d <X509_get0_pubkey_bitstr@plt+0x2166d>
  438038:	callq  415020 <CRYPTO_free@plt>
  43803d:	mov    0xd8(%rsp),%rdi
  438045:	test   %rdi,%rdi
  438048:	je     43804f <X509_get0_pubkey_bitstr@plt+0x2167f>
  43804a:	callq  412f10 <X509_VERIFY_PARAM_free@plt>
  43804f:	mov    0x24100a(%rip),%rdi        # 679060 <_fini+0x21bb5c>
  438056:	test   %rdi,%rdi
  438059:	je     438060 <X509_get0_pubkey_bitstr@plt+0x21690>
  43805b:	callq  415020 <CRYPTO_free@plt>
  438060:	mov    0x241009(%rip),%rdi        # 679070 <_fini+0x21bb6c>
  438067:	test   %rdi,%rdi
  43806a:	je     438071 <X509_get0_pubkey_bitstr@plt+0x216a1>
  43806c:	callq  415020 <CRYPTO_free@plt>
  438071:	mov    0x240ff0(%rip),%rdi        # 679068 <_fini+0x21bb64>
  438078:	test   %rdi,%rdi
  43807b:	je     438082 <X509_get0_pubkey_bitstr@plt+0x216b2>
  43807d:	callq  415020 <CRYPTO_free@plt>
  438082:	mov    0x243357(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  438089:	test   %rdi,%rdi
  43808c:	je     438093 <X509_get0_pubkey_bitstr@plt+0x216c3>
  43808e:	callq  412c50 <SSL_CTX_free@plt>
  438093:	test   %r13,%r13
  438096:	je     4380a0 <X509_get0_pubkey_bitstr@plt+0x216d0>
  438098:	mov    %r13,%rdi
  43809b:	callq  4153a0 <X509_free@plt>
  4380a0:	mov    0x8(%rsp),%rdi
  4380a5:	test   %rdi,%rdi
  4380a8:	je     4380af <X509_get0_pubkey_bitstr@plt+0x216df>
  4380aa:	callq  412b00 <EVP_PKEY_free@plt>
  4380af:	mov    0x24331a(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4380b6:	test   %rdi,%rdi
  4380b9:	je     4380cb <X509_get0_pubkey_bitstr@plt+0x216fb>
  4380bb:	callq  413960 <BIO_free@plt>
  4380c0:	movq   $0x0,0x243305(%rip)        # 67b3d0 <_edata+0x6c8>
  4380cb:	mov    0x118(%rsp),%rbx
  4380d3:	xor    %fs:0x28,%rbx
  4380dc:	mov    %r15d,%eax
  4380df:	jne    439120 <X509_get0_pubkey_bitstr@plt+0x22750>
  4380e5:	add    $0x128,%rsp
  4380ec:	pop    %rbx
  4380ed:	pop    %rbp
  4380ee:	pop    %r12
  4380f0:	pop    %r13
  4380f2:	pop    %r14
  4380f4:	pop    %r15
  4380f6:	retq   
  4380f7:	nopw   0x0(%rax,%rax,1)
  438100:	lea    0x30321(%rip),%rdi        # 468428 <_fini+0xaf24>
  438107:	mov    $0x9,%ecx
  43810c:	mov    %rdx,%rsi
  43810f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  438111:	jne    438140 <X509_get0_pubkey_bitstr@plt+0x21770>
  438113:	sub    $0x1,%r12d
  438117:	test   %r12d,%r12d
  43811a:	mov    %r12d,0xcc(%rsp)
  438122:	je     437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  438128:	mov    0x8(%rax),%rdx
  43812c:	add    $0x8,%rax
  438130:	mov    %rdx,0x20(%rsp)
  438135:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  43813a:	nopw   0x0(%rax,%rax,1)
  438140:	lea    0x28e5b(%rip),%rdi        # 460fa2 <_fini+0x3a9e>
  438147:	mov    $0x6,%ecx
  43814c:	mov    %rdx,%rsi
  43814f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  438151:	je     438a88 <X509_get0_pubkey_bitstr@plt+0x220b8>
  438157:	lea    0x302d3(%rip),%rdi        # 468431 <_fini+0xaf2d>
  43815e:	mov    $0xa,%ecx
  438163:	mov    %rdx,%rsi
  438166:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  438168:	jne    438ab1 <X509_get0_pubkey_bitstr@plt+0x220e1>
  43816e:	sub    $0x1,%r12d
  438172:	test   %r12d,%r12d
  438175:	mov    %r12d,0xcc(%rsp)
  43817d:	je     437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  438183:	mov    0x8(%rax),%rdi
  438187:	lea    0x8(%rax),%rdx
  43818b:	mov    %rdx,0xc0(%rsp)
  438193:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  438198:	mov    0xcc(%rsp),%r12d
  4381a0:	mov    %eax,0x30(%rsp)
  4381a4:	mov    0xc0(%rsp),%rax
  4381ac:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  4381b1:	nopl   0x0(%rax)
  4381b8:	callq  412f00 <SSL_load_error_strings@plt>
  4381bd:	callq  414ce0 <SSL_library_init@plt>
  4381c2:	mov    0x2431d7(%rip),%rsi        # 67b3a0 <_edata+0x698>
  4381c9:	mov    (%rbx),%rdi
  4381cc:	mov    $0x1,%edx
  4381d1:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  4381d6:	mov    0x8(%rsp),%rdx
  4381db:	mov    (%rbx),%rdi
  4381de:	lea    0xe0(%rsp),%rcx
  4381e6:	lea    0xe8(%rsp),%r8
  4381ee:	mov    %r13,%rsi
  4381f1:	mov    %rax,%rbp
  4381f4:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  4381f9:	test   %eax,%eax
  4381fb:	je     438b0d <X509_get0_pubkey_bitstr@plt+0x2213d>
  438201:	cmpq   $0x0,0x243207(%rip)        # 67b410 <_edata+0x708>
  438209:	je     438c20 <X509_get0_pubkey_bitstr@plt+0x22250>
  43820f:	cmpq   $0x0,0x2431f1(%rip)        # 67b408 <_edata+0x700>
  438217:	je     438c33 <X509_get0_pubkey_bitstr@plt+0x22263>
  43821d:	mov    0x3c(%rsp),%esi
  438221:	test   %esi,%esi
  438223:	je     438b23 <X509_get0_pubkey_bitstr@plt+0x22153>
  438229:	xor    %r13d,%r13d
  43822c:	movq   $0x0,0x8(%rsp)
  438235:	movq   $0x0,0x18(%rsp)
  43823e:	movq   $0x0,0x10(%rsp)
  438247:	mov    0x68(%rsp),%rsi
  43824c:	test   %rsi,%rsi
  43824f:	je     438d10 <X509_get0_pubkey_bitstr@plt+0x22340>
  438255:	lea    0xd2(%rsp),%rdi
  43825d:	callq  4488a0 <X509_get0_pubkey_bitstr@plt+0x31ed0>
  438262:	test   %rax,%rax
  438265:	mov    %rax,0xf0(%rsp)
  43826d:	je     438ebd <X509_get0_pubkey_bitstr@plt+0x224ed>
  438273:	movzwl 0xd2(%rsp),%eax
  43827b:	mov    %eax,0xf8(%rsp)
  438282:	mov    0x243177(%rip),%rax        # 67b400 <_edata+0x6f8>
  438289:	test   %rax,%rax
  43828c:	je     438f39 <X509_get0_pubkey_bitstr@plt+0x22569>
  438292:	mov    0x24315f(%rip),%rsi        # 67b3f8 <_edata+0x6f0>
  438299:	test   %rsi,%rsi
  43829c:	je     438e45 <X509_get0_pubkey_bitstr@plt+0x22475>
  4382a2:	lea    0x2fb57(%rip),%rax        # 467e00 <_fini+0xa8fc>
  4382a9:	mov    0xe8(%rsp),%r8
  4382b1:	mov    0x64(%rsp),%edx
  4382b5:	xor    %ecx,%ecx
  4382b7:	mov    %rbp,%r9
  4382ba:	mov    %rax,(%rsp)
  4382be:	mov    (%rbx),%rdi
  4382c1:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  4382c6:	test   %rax,%rax
  4382c9:	mov    %rax,%r12
  4382cc:	je     438e1d <X509_get0_pubkey_bitstr@plt+0x2244d>
  4382d2:	mov    0x84(%rsp),%edx
  4382d9:	mov    0x243120(%rip),%rsi        # 67b400 <_edata+0x6f8>
  4382e0:	lea    0x2faf9(%rip),%r9        # 467de0 <_fini+0xa8dc>
  4382e7:	mov    (%rbx),%rdi
  4382ea:	mov    %rbp,%r8
  4382ed:	xor    %ecx,%ecx
  4382ef:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  4382f4:	test   %rax,%rax
  4382f7:	mov    %rax,%rbp
  4382fa:	je     438cae <X509_get0_pubkey_bitstr@plt+0x222de>
  438300:	mov    (%rbx),%rsi
  438303:	xor    %edi,%edi
  438305:	mov    $0x1,%edx
  43830a:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  43830f:	test   %eax,%eax
  438311:	jne    438cff <X509_get0_pubkey_bitstr@plt+0x2232f>
  438317:	cmpq   $0x0,0x58(%rsp)
  43831d:	je     4390f5 <X509_get0_pubkey_bitstr@plt+0x22725>
  438323:	mov    0x58(%rsp),%rdi
  438328:	callq  44a710 <X509_get0_pubkey_bitstr@plt+0x33d40>
  43832d:	mov    (%rbx),%rdi
  438330:	lea    0x27a5a(%rip),%rsi        # 45fd91 <_fini+0x288d>
  438337:	mov    %rax,%rdx
  43833a:	xor    %eax,%eax
  43833c:	callq  413c40 <BIO_printf@plt>
  438341:	cmpq   $0x0,0x243087(%rip)        # 67b3d0 <_edata+0x6c8>
  438349:	je     438e71 <X509_get0_pubkey_bitstr@plt+0x224a1>
  43834f:	mov    0x3c(%rsp),%eax
  438353:	test   %eax,%eax
  438355:	je     438399 <X509_get0_pubkey_bitstr@plt+0x219c9>
  438357:	movq   $0x0,0x240d46(%rip)        # 6790a8 <_fini+0x21bba4>
  438362:	movq   $0x0,0x2430a3(%rip)        # 67b410 <_edata+0x708>
  43836d:	movq   $0x0,0x243088(%rip)        # 67b400 <_edata+0x6f8>
  438378:	movq   $0x0,0x243075(%rip)        # 67b3f8 <_edata+0x6f0>
  438383:	movq   $0x0,0x240d12(%rip)        # 6790a0 <_fini+0x21bb9c>
  43838e:	movq   $0x0,0x24306f(%rip)        # 67b408 <_edata+0x700>
  438399:	mov    %r15,%rdi
  43839c:	callq  413890 <SSL_CTX_new@plt>
  4383a1:	test   %rax,%rax
  4383a4:	mov    %rax,%rdx
  4383a7:	mov    %rax,0x24303a(%rip)        # 67b3e8 <_edata+0x6e0>
  4383ae:	je     438cae <X509_get0_pubkey_bitstr@plt+0x222de>
  4383b4:	mov    0x242fdd(%rip),%rdi        # 67b398 <_edata+0x690>
  4383bb:	test   %rdi,%rdi
  4383be:	je     438419 <X509_get0_pubkey_bitstr@plt+0x21a49>
  4383c0:	mov    %rax,0x30(%rsp)
  4383c5:	callq  413470 <strlen@plt>
  4383ca:	cmp    $0x1f,%rax
  4383ce:	mov    0x30(%rsp),%rdx
  4383d3:	ja     438da5 <X509_get0_pubkey_bitstr@plt+0x223d5>
  4383d9:	cmp    $0xf,%rax
  4383dd:	ja     438dc2 <X509_get0_pubkey_bitstr@plt+0x223f2>
  4383e3:	lea    -0xfda(%rip),%rsi        # 437410 <X509_get0_pubkey_bitstr@plt+0x20a40>
  4383ea:	mov    %rdx,%rdi
  4383ed:	callq  4138d0 <SSL_CTX_set_generate_session_id@plt>
  4383f2:	test   %eax,%eax
  4383f4:	je     438cf6 <X509_get0_pubkey_bitstr@plt+0x22326>
  4383fa:	mov    0x242f97(%rip),%rdx        # 67b398 <_edata+0x690>
  438401:	mov    (%rbx),%rdi
  438404:	lea    0x302ce(%rip),%rsi        # 4686d9 <_fini+0xb1d5>
  43840b:	xor    %eax,%eax
  43840d:	callq  413c40 <BIO_printf@plt>
  438412:	mov    0x242fcf(%rip),%rdx        # 67b3e8 <_edata+0x6e0>
  438419:	mov    $0x1,%esi
  43841e:	mov    %rdx,%rdi
  438421:	callq  4147d0 <SSL_CTX_set_quiet_shutdown@plt>
  438426:	mov    0x78(%rsp),%eax
  43842a:	test   %eax,%eax
  43842c:	jne    438e54 <X509_get0_pubkey_bitstr@plt+0x22484>
  438432:	mov    0x242f70(%rip),%eax        # 67b3a8 <_edata+0x6a0>
  438438:	test   %eax,%eax
  43843a:	jne    438ea0 <X509_get0_pubkey_bitstr@plt+0x224d0>
  438440:	movslq 0x28(%rsp),%rax
  438445:	mov    0x242f9c(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  43844c:	xor    %ecx,%ecx
  43844e:	mov    $0x20,%esi
  438453:	mov    %rax,%rdx
  438456:	mov    %rax,0x28(%rsp)
  43845b:	callq  413e30 <SSL_CTX_ctrl@plt>
  438460:	cmpl   $0x2,0x60(%rsp)
  438465:	je     438fa0 <X509_get0_pubkey_bitstr@plt+0x225d0>
  43846b:	mov    0x7c(%rsp),%eax
  43846f:	test   %eax,%eax
  438471:	jne    438ecd <X509_get0_pubkey_bitstr@plt+0x224fd>
  438477:	mov    0x88(%rsp),%eax
  43847e:	xor    %ecx,%ecx
  438480:	test   %eax,%eax
  438482:	je     438d8a <X509_get0_pubkey_bitstr@plt+0x223ba>
  438488:	mov    0x242f59(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  43848f:	xor    %edx,%edx
  438491:	mov    $0x2c,%esi
  438496:	callq  413e30 <SSL_CTX_ctrl@plt>
  43849b:	mov    0x242ece(%rip),%rsi        # 67b370 <_edata+0x668>
  4384a2:	test   %rsi,%rsi
  4384a5:	je     4384b3 <X509_get0_pubkey_bitstr@plt+0x21ae3>
  4384a7:	mov    0x242f3a(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  4384ae:	callq  413ed0 <SSL_CTX_set_tlsext_use_srtp@plt>
  4384b3:	cmpq   $0x0,0x50(%rsp)
  4384b9:	jne    438d5f <X509_get0_pubkey_bitstr@plt+0x2238f>
  4384bf:	cmpq   $0x0,0x40(%rsp)
  4384c5:	jne    438d5f <X509_get0_pubkey_bitstr@plt+0x2238f>
  4384cb:	mov    0x242f16(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  4384d2:	callq  4160c0 <SSL_CTX_set_default_verify_paths@plt>
  4384d7:	test   %eax,%eax
  4384d9:	je     438d7d <X509_get0_pubkey_bitstr@plt+0x223ad>
  4384df:	mov    0xd8(%rsp),%rsi
  4384e7:	test   %rsi,%rsi
  4384ea:	je     4384f8 <X509_get0_pubkey_bitstr@plt+0x21b28>
  4384ec:	mov    0x242ef5(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  4384f3:	callq  414980 <SSL_CTX_set1_param@plt>
  4384f8:	test   %r13,%r13
  4384fb:	je     438e32 <X509_get0_pubkey_bitstr@plt+0x22462>
  438501:	mov    %r15,%rdi
  438504:	callq  413890 <SSL_CTX_new@plt>
  438509:	test   %rax,%rax
  43850c:	mov    %rax,0x242ecd(%rip)        # 67b3e0 <_edata+0x6d8>
  438513:	je     438cae <X509_get0_pubkey_bitstr@plt+0x222de>
  438519:	mov    0x242eb0(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  438520:	lea    0x2f981(%rip),%rsi        # 467ea8 <_fini+0xa9a4>
  438527:	xor    %eax,%eax
  438529:	callq  413c40 <BIO_printf@plt>
  43852e:	mov    0x242e63(%rip),%rdi        # 67b398 <_edata+0x690>
  438535:	test   %rdi,%rdi
  438538:	je     438593 <X509_get0_pubkey_bitstr@plt+0x21bc3>
  43853a:	callq  413470 <strlen@plt>
  43853f:	cmp    $0x1f,%rax
  438543:	ja     438ef6 <X509_get0_pubkey_bitstr@plt+0x22526>
  438549:	cmp    $0xf,%rax
  43854d:	jbe    438560 <X509_get0_pubkey_bitstr@plt+0x21b90>
  43854f:	mov    (%rbx),%rdi
  438552:	lea    0x2f917(%rip),%rsi        # 467e70 <_fini+0xa96c>
  438559:	xor    %eax,%eax
  43855b:	callq  413c40 <BIO_printf@plt>
  438560:	mov    0x242e79(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  438567:	lea    -0x115e(%rip),%rsi        # 437410 <X509_get0_pubkey_bitstr@plt+0x20a40>
  43856e:	callq  4138d0 <SSL_CTX_set_generate_session_id@plt>
  438573:	test   %eax,%eax
  438575:	je     438cf6 <X509_get0_pubkey_bitstr@plt+0x22326>
  43857b:	mov    0x242e16(%rip),%rdx        # 67b398 <_edata+0x690>
  438582:	mov    (%rbx),%rdi
  438585:	lea    0x3014d(%rip),%rsi        # 4686d9 <_fini+0xb1d5>
  43858c:	xor    %eax,%eax
  43858e:	callq  413c40 <BIO_printf@plt>
  438593:	mov    0x242e46(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  43859a:	mov    $0x1,%esi
  43859f:	callq  4147d0 <SSL_CTX_set_quiet_shutdown@plt>
  4385a4:	mov    0x78(%rsp),%r11d
  4385a9:	test   %r11d,%r11d
  4385ac:	jne    43909c <X509_get0_pubkey_bitstr@plt+0x226cc>
  4385b2:	mov    0x242def(%rip),%r10d        # 67b3a8 <_edata+0x6a0>
  4385b9:	test   %r10d,%r10d
  4385bc:	jne    43907f <X509_get0_pubkey_bitstr@plt+0x226af>
  4385c2:	mov    0x28(%rsp),%rdx
  4385c7:	mov    0x242e12(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  4385ce:	xor    %ecx,%ecx
  4385d0:	mov    $0x20,%esi
  4385d5:	callq  413e30 <SSL_CTX_ctrl@plt>
  4385da:	cmpl   $0x2,0x60(%rsp)
  4385df:	je     4391d2 <X509_get0_pubkey_bitstr@plt+0x22802>
  4385e5:	mov    0x7c(%rsp),%r9d
  4385ea:	test   %r9d,%r9d
  4385ed:	jne    439180 <X509_get0_pubkey_bitstr@plt+0x227b0>
  4385f3:	mov    0x88(%rsp),%r8d
  4385fb:	xor    %ecx,%ecx
  4385fd:	test   %r8d,%r8d
  438600:	je     438fee <X509_get0_pubkey_bitstr@plt+0x2261e>
  438606:	mov    0x242dd3(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  43860d:	xor    %edx,%edx
  43860f:	mov    $0x2c,%esi
  438614:	callq  413e30 <SSL_CTX_ctrl@plt>
  438619:	mov    0x50(%rsp),%rdx
  43861e:	mov    0x40(%rsp),%rsi
  438623:	mov    0x242db6(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  43862a:	callq  4128b0 <SSL_CTX_load_verify_locations@plt>
  43862f:	test   %eax,%eax
  438631:	je     439198 <X509_get0_pubkey_bitstr@plt+0x227c8>
  438637:	mov    0x242da2(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  43863e:	callq  4160c0 <SSL_CTX_set_default_verify_paths@plt>
  438643:	test   %eax,%eax
  438645:	je     439278 <X509_get0_pubkey_bitstr@plt+0x228a8>
  43864b:	mov    0xd8(%rsp),%rsi
  438653:	test   %rsi,%rsi
  438656:	je     438664 <X509_get0_pubkey_bitstr@plt+0x21c94>
  438658:	mov    0x242d81(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  43865f:	callq  414980 <SSL_CTX_set1_param@plt>
  438664:	cmpq   $0x0,0xf0(%rsp)
  43866d:	je     43868a <X509_get0_pubkey_bitstr@plt+0x21cba>
  43866f:	mov    0x242d72(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  438676:	lea    0xf0(%rsp),%rdx
  43867e:	lea    -0x3785(%rip),%rsi        # 434f00 <X509_get0_pubkey_bitstr@plt+0x1e530>
  438685:	callq  415a00 <SSL_CTX_set_next_protos_advertised_cb@plt>
  43868a:	mov    0x90(%rsp),%edi
  438691:	test   %edi,%edi
  438693:	jne    438727 <X509_get0_pubkey_bitstr@plt+0x21d57>
  438699:	mov    0x70(%rsp),%rdi
  43869e:	test   %rdi,%rdi
  4386a1:	je     4391ef <X509_get0_pubkey_bitstr@plt+0x2281f>
  4386a7:	callq  437490 <X509_get0_pubkey_bitstr@plt+0x20ac0>
  4386ac:	test   %rax,%rax
  4386af:	mov    %rax,%r15
  4386b2:	je     4391ff <X509_get0_pubkey_bitstr@plt+0x2282f>
  4386b8:	mov    0x242d11(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4386bf:	lea    0x30028(%rip),%rsi        # 4686ee <_fini+0xb1ea>
  4386c6:	xor    %eax,%eax
  4386c8:	callq  413c40 <BIO_printf@plt>
  4386cd:	mov    0x242cfc(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4386d4:	xor    %ecx,%ecx
  4386d6:	xor    %edx,%edx
  4386d8:	mov    $0xb,%esi
  4386dd:	callq  412af0 <BIO_ctrl@plt>
  4386e2:	mov    0x242cff(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  4386e9:	xor    %edx,%edx
  4386eb:	mov    %r15,%rcx
  4386ee:	mov    $0x3,%esi
  4386f3:	callq  413e30 <SSL_CTX_ctrl@plt>
  4386f8:	mov    0x242ce1(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  4386ff:	test   %rdi,%rdi
  438702:	je     43871f <X509_get0_pubkey_bitstr@plt+0x21d4f>
  438704:	cmpq   $0x0,0x70(%rsp)
  43870a:	je     4392c9 <X509_get0_pubkey_bitstr@plt+0x228f9>
  438710:	mov    %r15,%rcx
  438713:	xor    %edx,%edx
  438715:	mov    $0x3,%esi
  43871a:	callq  413e30 <SSL_CTX_ctrl@plt>
  43871f:	mov    %r15,%rdi
  438722:	callq  413d80 <DH_free@plt>
  438727:	mov    0x94(%rsp),%esi
  43872e:	test   %esi,%esi
  438730:	jne    4387c1 <X509_get0_pubkey_bitstr@plt+0x21df1>
  438736:	mov    0x48(%rsp),%rsi
  43873b:	test   %rsi,%rsi
  43873e:	je     439285 <X509_get0_pubkey_bitstr@plt+0x228b5>
  438744:	lea    0x2ffbf(%rip),%rdi        # 46870a <_fini+0xb206>
  43874b:	mov    $0x5,%ecx
  438750:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  438752:	jne    438fbd <X509_get0_pubkey_bitstr@plt+0x225ed>
  438758:	mov    0x242c89(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  43875f:	xor    %ecx,%ecx
  438761:	mov    $0x1,%edx
  438766:	mov    $0x5e,%esi
  43876b:	xor    %r15d,%r15d
  43876e:	callq  413e30 <SSL_CTX_ctrl@plt>
  438773:	mov    0x242c56(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  43877a:	xor    %ecx,%ecx
  43877c:	xor    %edx,%edx
  43877e:	mov    $0xb,%esi
  438783:	callq  412af0 <BIO_ctrl@plt>
  438788:	mov    0x242c59(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  43878f:	xor    %edx,%edx
  438791:	mov    %r15,%rcx
  438794:	mov    $0x4,%esi
  438799:	callq  413e30 <SSL_CTX_ctrl@plt>
  43879e:	mov    0x242c3b(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  4387a5:	test   %rdi,%rdi
  4387a8:	je     4387b9 <X509_get0_pubkey_bitstr@plt+0x21de9>
  4387aa:	mov    %r15,%rcx
  4387ad:	xor    %edx,%edx
  4387af:	mov    $0x4,%esi
  4387b4:	callq  413e30 <SSL_CTX_ctrl@plt>
  4387b9:	mov    %r15,%rdi
  4387bc:	callq  415bf0 <EC_KEY_free@plt>
  4387c1:	mov    0x18(%rsp),%rdx
  4387c6:	mov    0x10(%rsp),%rsi
  4387cb:	mov    $0x1,%r15d
  4387d1:	mov    0x242c10(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  4387d8:	callq  448d90 <X509_get0_pubkey_bitstr@plt+0x323c0>
  4387dd:	test   %eax,%eax
  4387df:	je     437fd0 <X509_get0_pubkey_bitstr@plt+0x21600>
  4387e5:	mov    0x242bf4(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  4387ec:	test   %rdi,%rdi
  4387ef:	je     438806 <X509_get0_pubkey_bitstr@plt+0x21e36>
  4387f1:	mov    0x8(%rsp),%rdx
  4387f6:	mov    %r13,%rsi
  4387f9:	callq  448d90 <X509_get0_pubkey_bitstr@plt+0x323c0>
  4387fe:	test   %eax,%eax
  438800:	je     437fd0 <X509_get0_pubkey_bitstr@plt+0x21600>
  438806:	test   %rbp,%rbp
  438809:	je     43882b <X509_get0_pubkey_bitstr@plt+0x21e5b>
  43880b:	mov    0x242bd6(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  438812:	mov    %r12,%rdx
  438815:	mov    %rbp,%rsi
  438818:	mov    $0x1,%r15d
  43881e:	callq  448d90 <X509_get0_pubkey_bitstr@plt+0x323c0>
  438823:	test   %eax,%eax
  438825:	je     437fd0 <X509_get0_pubkey_bitstr@plt+0x21600>
  43882b:	mov    0x8c(%rsp),%ecx
  438832:	test   %ecx,%ecx
  438834:	je     4393e7 <X509_get0_pubkey_bitstr@plt+0x22a17>
  43883a:	lea    0x242b0f(%rip),%rax        # 67b350 <_edata+0x648>
  438841:	cmpq   $0x0,(%rax)
  438845:	je     438868 <X509_get0_pubkey_bitstr@plt+0x21e98>
  438847:	mov    0x242b7b(%rip),%edx        # 67b3c8 <_edata+0x6c0>
  43884d:	test   %edx,%edx
  43884f:	jne    43941b <X509_get0_pubkey_bitstr@plt+0x22a4b>
  438855:	mov    0x242b8c(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  43885c:	lea    -0x1813(%rip),%rsi        # 437050 <X509_get0_pubkey_bitstr@plt+0x20680>
  438863:	callq  4145c0 <SSL_CTX_set_psk_server_callback@plt>
  438868:	mov    0x242af9(%rip),%rsi        # 67b368 <_edata+0x660>
  43886f:	mov    0x242b72(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  438876:	callq  416350 <SSL_CTX_use_psk_identity_hint@plt>
  43887b:	test   %eax,%eax
  43887d:	lea    0x2f6fc(%rip),%rsi        # 467f80 <_fini+0xaa7c>
  438884:	je     438ca6 <X509_get0_pubkey_bitstr@plt+0x222d6>
  43888a:	mov    0x242b8f(%rip),%rsi        # 67b420 <_edata+0x718>
  438891:	test   %rsi,%rsi
  438894:	je     4388ca <X509_get0_pubkey_bitstr@plt+0x21efa>
  438896:	mov    0x242b4b(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  43889d:	callq  412c10 <SSL_CTX_set_cipher_list@plt>
  4388a2:	test   %eax,%eax
  4388a4:	je     438c9f <X509_get0_pubkey_bitstr@plt+0x222cf>
  4388aa:	mov    0x242b2f(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  4388b1:	test   %rdi,%rdi
  4388b4:	je     4388ca <X509_get0_pubkey_bitstr@plt+0x21efa>
  4388b6:	mov    0x242b63(%rip),%rsi        # 67b420 <_edata+0x718>
  4388bd:	callq  412c10 <SSL_CTX_set_cipher_list@plt>
  4388c2:	test   %eax,%eax
  4388c4:	je     438c9f <X509_get0_pubkey_bitstr@plt+0x222cf>
  4388ca:	lea    0x101df(%rip),%rbx        # 448ab0 <X509_get0_pubkey_bitstr@plt+0x320e0>
  4388d1:	mov    0x242b41(%rip),%esi        # 67b418 <_edata+0x710>
  4388d7:	mov    0x242b0a(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  4388de:	mov    %rbx,%rdx
  4388e1:	callq  4151f0 <SSL_CTX_set_verify@plt>
  4388e6:	mov    0x242afb(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  4388ed:	lea    0x2407a0(%rip),%rsi        # 679094 <_fini+0x21bb90>
  4388f4:	mov    $0x4,%edx
  4388f9:	callq  415ce0 <SSL_CTX_set_session_id_context@plt>
  4388fe:	lea    0x110bb(%rip),%rsi        # 4499c0 <X509_get0_pubkey_bitstr@plt+0x32ff0>
  438905:	mov    0x242adc(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  43890c:	callq  413db0 <SSL_CTX_set_cookie_generate_cb@plt>
  438911:	mov    0x242ad0(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  438918:	lea    0x112c1(%rip),%rsi        # 449be0 <X509_get0_pubkey_bitstr@plt+0x33210>
  43891f:	callq  413c00 <SSL_CTX_set_cookie_verify_cb@plt>
  438924:	mov    0x242ab5(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  43892b:	test   %rdi,%rdi
  43892e:	je     4389cd <X509_get0_pubkey_bitstr@plt+0x21ffd>
  438934:	mov    0x242ade(%rip),%esi        # 67b418 <_edata+0x710>
  43893a:	mov    %rbx,%rdx
  43893d:	lea    0x100(%rsp),%rbx
  438945:	callq  4151f0 <SSL_CTX_set_verify@plt>
  43894a:	mov    0x242a8f(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  438951:	lea    0x24073c(%rip),%rsi        # 679094 <_fini+0x21bb90>
  438958:	mov    $0x4,%edx
  43895d:	callq  415ce0 <SSL_CTX_set_session_id_context@plt>
  438962:	mov    0x242a67(%rip),%rax        # 67b3d0 <_edata+0x6c8>
  438969:	mov    0x242a70(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  438970:	lea    -0x1497(%rip),%rdx        # 4374e0 <X509_get0_pubkey_bitstr@plt+0x20b10>
  438977:	mov    $0x35,%esi
  43897c:	mov    %rax,0x108(%rsp)
  438984:	callq  414a60 <SSL_CTX_callback_ctrl@plt>
  438989:	mov    0x242a50(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  438990:	mov    %rbx,%rcx
  438993:	xor    %edx,%edx
  438995:	mov    $0x36,%esi
  43899a:	callq  413e30 <SSL_CTX_ctrl@plt>
  43899f:	mov    0x242a42(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  4389a6:	lea    -0x14cd(%rip),%rdx        # 4374e0 <X509_get0_pubkey_bitstr@plt+0x20b10>
  4389ad:	mov    $0x35,%esi
  4389b2:	callq  414a60 <SSL_CTX_callback_ctrl@plt>
  4389b7:	mov    0x242a2a(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  4389be:	mov    %rbx,%rcx
  4389c1:	xor    %edx,%edx
  4389c3:	mov    $0x36,%esi
  4389c8:	callq  413e30 <SSL_CTX_ctrl@plt>
  4389cd:	mov    0x40(%rsp),%rbx
  4389d2:	test   %rbx,%rbx
  4389d5:	je     438a0f <X509_get0_pubkey_bitstr@plt+0x2203f>
  4389d7:	mov    %rbx,%rdi
  4389da:	callq  415890 <SSL_load_client_CA_file@plt>
  4389df:	mov    0x242a02(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  4389e6:	mov    %rax,%rsi
  4389e9:	callq  4157f0 <SSL_CTX_set_client_CA_list@plt>
  4389ee:	cmpq   $0x0,0x2429ea(%rip)        # 67b3e0 <_edata+0x6d8>
  4389f6:	je     438a0f <X509_get0_pubkey_bitstr@plt+0x2203f>
  4389f8:	mov    %rbx,%rdi
  4389fb:	callq  415890 <SSL_load_client_CA_file@plt>
  438a00:	mov    0x2429d9(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  438a07:	mov    %rax,%rsi
  438a0a:	callq  4157f0 <SSL_CTX_set_client_CA_list@plt>
  438a0f:	mov    0x2429ba(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  438a16:	lea    0x2f821(%rip),%rsi        # 46823e <_fini+0xad3a>
  438a1d:	xor    %eax,%eax
  438a1f:	callq  413c40 <BIO_printf@plt>
  438a24:	mov    0x2429a5(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  438a2b:	xor    %ecx,%ecx
  438a2d:	xor    %edx,%edx
  438a2f:	mov    $0xb,%esi
  438a34:	callq  412af0 <BIO_ctrl@plt>
  438a39:	mov    0x242999(%rip),%eax        # 67b3d8 <_edata+0x6d0>
  438a3f:	mov    0x20(%rsp),%r8
  438a44:	test   %eax,%eax
  438a46:	je     4393c8 <X509_get0_pubkey_bitstr@plt+0x229f8>
  438a4c:	mov    0x60(%rsp),%esi
  438a50:	lea    -0x2547(%rip),%rcx        # 436510 <X509_get0_pubkey_bitstr@plt+0x1fb40>
  438a57:	lea    0x24063a(%rip),%rdx        # 679098 <_fini+0x21bb94>
  438a5e:	mov    %r14,%rdi
  438a61:	callq  44a160 <X509_get0_pubkey_bitstr@plt+0x33790>
  438a66:	mov    0x24297b(%rip),%rsi        # 67b3e8 <_edata+0x6e0>
  438a6d:	mov    0x24295c(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  438a74:	xor    %r15d,%r15d
  438a77:	callq  434f10 <X509_get0_pubkey_bitstr@plt+0x1e540>
  438a7c:	jmpq   437fd0 <X509_get0_pubkey_bitstr@plt+0x21600>
  438a81:	nopl   0x0(%rax)
  438a88:	sub    $0x1,%r12d
  438a8c:	test   %r12d,%r12d
  438a8f:	mov    %r12d,0xcc(%rsp)
  438a97:	je     437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  438a9d:	mov    0x8(%rax),%rdx
  438aa1:	add    $0x8,%rax
  438aa5:	mov    %rdx,0x2405fc(%rip)        # 6790a8 <_fini+0x21bba4>
  438aac:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  438ab1:	lea    0x2570d(%rip),%rdi        # 45e1c5 <_fini+0xcc1>
  438ab8:	mov    $0x5,%ecx
  438abd:	mov    %rdx,%rsi
  438ac0:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  438ac2:	jne    438c46 <X509_get0_pubkey_bitstr@plt+0x22276>
  438ac8:	sub    $0x1,%r12d
  438acc:	test   %r12d,%r12d
  438acf:	mov    %r12d,0xcc(%rsp)
  438ad7:	je     437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  438add:	mov    0x8(%rax),%rdx
  438ae1:	add    $0x8,%rax
  438ae5:	mov    %rdx,0x242924(%rip)        # 67b410 <_edata+0x708>
  438aec:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  438af1:	mov    0x23d488(%rip),%rax        # 675f80 <_fini+0x218a7c>
  438af8:	xor    %esi,%esi
  438afa:	mov    (%rax),%rdi
  438afd:	callq  4161e0 <BIO_new_fp@plt>
  438b02:	mov    %rax,%rdi
  438b05:	mov    %rax,(%rbx)
  438b08:	jmpq   437734 <X509_get0_pubkey_bitstr@plt+0x20d64>
  438b0d:	mov    (%rbx),%rdi
  438b10:	lea    0x26e1d(%rip),%rsi        # 45f934 <_fini+0x2430>
  438b17:	xor    %eax,%eax
  438b19:	callq  413c40 <BIO_printf@plt>
  438b1e:	jmpq   437fa7 <X509_get0_pubkey_bitstr@plt+0x215d7>
  438b23:	lea    0x2f25e(%rip),%rax        # 467d88 <_fini+0xa884>
  438b2a:	mov    0xe0(%rsp),%r8
  438b32:	mov    0x80(%rsp),%edx
  438b39:	mov    0x2428d0(%rip),%rsi        # 67b410 <_edata+0x708>
  438b40:	xor    %ecx,%ecx
  438b42:	mov    %rbp,%r9
  438b45:	mov    %rax,(%rsp)
  438b49:	mov    (%rbx),%rdi
  438b4c:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  438b51:	test   %rax,%rax
  438b54:	mov    %rax,0x18(%rsp)
  438b59:	je     438f0c <X509_get0_pubkey_bitstr@plt+0x2253c>
  438b5f:	mov    0x30(%rsp),%edx
  438b63:	mov    0x24053e(%rip),%rsi        # 6790a8 <_fini+0x21bba4>
  438b6a:	lea    0x2fb35(%rip),%r9        # 4686a6 <_fini+0xb1a2>
  438b71:	mov    (%rbx),%rdi
  438b74:	xor    %ecx,%ecx
  438b76:	mov    %rbp,%r8
  438b79:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  438b7e:	test   %rax,%rax
  438b81:	mov    %rax,0x10(%rsp)
  438b86:	je     43905b <X509_get0_pubkey_bitstr@plt+0x2268b>
  438b8c:	cmpq   $0x0,0x100(%rsp)
  438b95:	je     438ee5 <X509_get0_pubkey_bitstr@plt+0x22515>
  438b9b:	lea    0x2f20e(%rip),%rax        # 467db0 <_fini+0xa8ac>
  438ba2:	mov    0xe0(%rsp),%r8
  438baa:	mov    0x80(%rsp),%edx
  438bb1:	mov    0x242850(%rip),%rsi        # 67b408 <_edata+0x700>
  438bb8:	xor    %ecx,%ecx
  438bba:	mov    %rbp,%r9
  438bbd:	mov    %rax,(%rsp)
  438bc1:	mov    (%rbx),%rdi
  438bc4:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  438bc9:	test   %rax,%rax
  438bcc:	mov    %rax,0x8(%rsp)
  438bd1:	je     439040 <X509_get0_pubkey_bitstr@plt+0x22670>
  438bd7:	mov    0x30(%rsp),%edx
  438bdb:	mov    0x2404be(%rip),%rsi        # 6790a0 <_fini+0x21bb9c>
  438be2:	lea    0x2f1f7(%rip),%r9        # 467de0 <_fini+0xa8dc>
  438be9:	mov    (%rbx),%rdi
  438bec:	xor    %ecx,%ecx
  438bee:	mov    %rbp,%r8
  438bf1:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  438bf6:	test   %rax,%rax
  438bf9:	mov    %rax,%r13
  438bfc:	jne    438247 <X509_get0_pubkey_bitstr@plt+0x21877>
  438c02:	mov    (%rbx),%rdi
  438c05:	xor    %r12d,%r12d
  438c08:	xor    %ebp,%ebp
  438c0a:	mov    $0x1,%r15d
  438c10:	callq  413f40 <ERR_print_errors@plt>
  438c15:	jmpq   437fd0 <X509_get0_pubkey_bitstr@plt+0x21600>
  438c1a:	nopw   0x0(%rax,%rax,1)
  438c20:	mov    0x240481(%rip),%rax        # 6790a8 <_fini+0x21bba4>
  438c27:	mov    %rax,0x2427e2(%rip)        # 67b410 <_edata+0x708>
  438c2e:	jmpq   43820f <X509_get0_pubkey_bitstr@plt+0x2183f>
  438c33:	mov    0x240466(%rip),%rax        # 6790a0 <_fini+0x21bb9c>
  438c3a:	mov    %rax,0x2427c7(%rip)        # 67b408 <_edata+0x700>
  438c41:	jmpq   43821d <X509_get0_pubkey_bitstr@plt+0x2184d>
  438c46:	lea    0x25592(%rip),%rdi        # 45e1df <_fini+0xcdb>
  438c4d:	mov    $0x9,%ecx
  438c52:	mov    %rdx,%rsi
  438c55:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  438c57:	jne    438cc1 <X509_get0_pubkey_bitstr@plt+0x222f1>
  438c59:	sub    $0x1,%r12d
  438c5d:	test   %r12d,%r12d
  438c60:	mov    %r12d,0xcc(%rsp)
  438c68:	je     437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  438c6e:	mov    0x8(%rax),%rdi
  438c72:	lea    0x8(%rax),%rdx
  438c76:	mov    %rdx,0xc0(%rsp)
  438c7e:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  438c83:	mov    0xcc(%rsp),%r12d
  438c8b:	mov    %eax,0x80(%rsp)
  438c92:	mov    0xc0(%rsp),%rax
  438c9a:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  438c9f:	lea    0x2fa69(%rip),%rsi        # 46870f <_fini+0xb20b>
  438ca6:	mov    (%rbx),%rdi
  438ca9:	callq  413c40 <BIO_printf@plt>
  438cae:	mov    (%rbx),%rdi
  438cb1:	mov    $0x1,%r15d
  438cb7:	callq  413f40 <ERR_print_errors@plt>
  438cbc:	jmpq   437fd0 <X509_get0_pubkey_bitstr@plt+0x21600>
  438cc1:	lea    0x274ce(%rip),%rdi        # 460196 <_fini+0x2c92>
  438cc8:	mov    $0x6,%ecx
  438ccd:	mov    %rdx,%rsi
  438cd0:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  438cd2:	jne    438d21 <X509_get0_pubkey_bitstr@plt+0x22351>
  438cd4:	sub    $0x1,%r12d
  438cd8:	test   %r12d,%r12d
  438cdb:	mov    %r12d,0xcc(%rsp)
  438ce3:	je     437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  438ce9:	mov    0x8(%rax),%r13
  438ced:	add    $0x8,%rax
  438cf1:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  438cf6:	lea    0x2f9c1(%rip),%rsi        # 4686be <_fini+0xb1ba>
  438cfd:	jmp    438ca6 <X509_get0_pubkey_bitstr@plt+0x222d6>
  438cff:	cmpq   $0x0,0x58(%rsp)
  438d05:	je     438341 <X509_get0_pubkey_bitstr@plt+0x21971>
  438d0b:	jmpq   438323 <X509_get0_pubkey_bitstr@plt+0x21953>
  438d10:	movq   $0x0,0xf0(%rsp)
  438d1c:	jmpq   438282 <X509_get0_pubkey_bitstr@plt+0x218b2>
  438d21:	lea    0x2f713(%rip),%rdi        # 46843b <_fini+0xaf37>
  438d28:	mov    $0x9,%ecx
  438d2d:	mov    %rdx,%rsi
  438d30:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  438d32:	jne    438ddf <X509_get0_pubkey_bitstr@plt+0x2240f>
  438d38:	sub    $0x1,%r12d
  438d3c:	test   %r12d,%r12d
  438d3f:	mov    %r12d,0xcc(%rsp)
  438d47:	je     437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  438d4d:	mov    0x8(%rax),%rdx
  438d51:	add    $0x8,%rax
  438d55:	mov    %rdx,0x70(%rsp)
  438d5a:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  438d5f:	mov    0x50(%rsp),%rdx
  438d64:	mov    0x40(%rsp),%rsi
  438d69:	mov    0x242678(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  438d70:	callq  4128b0 <SSL_CTX_load_verify_locations@plt>
  438d75:	test   %eax,%eax
  438d77:	jne    4384df <X509_get0_pubkey_bitstr@plt+0x21b0f>
  438d7d:	mov    (%rbx),%rdi
  438d80:	callq  413f40 <ERR_print_errors@plt>
  438d85:	jmpq   4384df <X509_get0_pubkey_bitstr@plt+0x21b0f>
  438d8a:	mov    0x242657(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  438d91:	mov    $0x80,%edx
  438d96:	mov    $0x2a,%esi
  438d9b:	callq  413e30 <SSL_CTX_ctrl@plt>
  438da0:	jmpq   43849b <X509_get0_pubkey_bitstr@plt+0x21acb>
  438da5:	mov    (%rbx),%rdi
  438da8:	lea    0x2f079(%rip),%rsi        # 467e28 <_fini+0xa924>
  438daf:	xor    %eax,%eax
  438db1:	callq  413c40 <BIO_printf@plt>
  438db6:	mov    0x24262b(%rip),%rdx        # 67b3e8 <_edata+0x6e0>
  438dbd:	jmpq   4383e3 <X509_get0_pubkey_bitstr@plt+0x21a13>
  438dc2:	mov    (%rbx),%rdi
  438dc5:	lea    0x2f0a4(%rip),%rsi        # 467e70 <_fini+0xa96c>
  438dcc:	xor    %eax,%eax
  438dce:	callq  413c40 <BIO_printf@plt>
  438dd3:	mov    0x24260e(%rip),%rdx        # 67b3e8 <_edata+0x6e0>
  438dda:	jmpq   4383e3 <X509_get0_pubkey_bitstr@plt+0x21a13>
  438ddf:	lea    0x2f65e(%rip),%rdi        # 468444 <_fini+0xaf40>
  438de6:	mov    $0xd,%ecx
  438deb:	mov    %rdx,%rsi
  438dee:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  438df0:	jne    438f43 <X509_get0_pubkey_bitstr@plt+0x22573>
  438df6:	sub    $0x1,%r12d
  438dfa:	test   %r12d,%r12d
  438dfd:	mov    %r12d,0xcc(%rsp)
  438e05:	je     437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  438e0b:	mov    0x8(%rax),%rdx
  438e0f:	add    $0x8,%rax
  438e13:	mov    %rdx,0x48(%rsp)
  438e18:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  438e1d:	mov    (%rbx),%rdi
  438e20:	xor    %ebp,%ebp
  438e22:	mov    $0x1,%r15d
  438e28:	callq  413f40 <ERR_print_errors@plt>
  438e2d:	jmpq   437fd0 <X509_get0_pubkey_bitstr@plt+0x21600>
  438e32:	cmpq   $0x0,0x2425a6(%rip)        # 67b3e0 <_edata+0x6d8>
  438e3a:	je     438664 <X509_get0_pubkey_bitstr@plt+0x21c94>
  438e40:	jmpq   438519 <X509_get0_pubkey_bitstr@plt+0x21b49>
  438e45:	mov    %rax,0x2425ac(%rip)        # 67b3f8 <_edata+0x6f0>
  438e4c:	mov    %rax,%rsi
  438e4f:	jmpq   4382a2 <X509_get0_pubkey_bitstr@plt+0x218d2>
  438e54:	mov    0x24258d(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  438e5b:	xor    %ecx,%ecx
  438e5d:	mov    $0x80000bf7,%edx
  438e62:	mov    $0x20,%esi
  438e67:	callq  413e30 <SSL_CTX_ctrl@plt>
  438e6c:	jmpq   438432 <X509_get0_pubkey_bitstr@plt+0x21a62>
  438e71:	mov    0x242541(%rip),%ecx        # 67b3b8 <_edata+0x6b0>
  438e77:	test   %ecx,%ecx
  438e79:	jne    439009 <X509_get0_pubkey_bitstr@plt+0x22639>
  438e7f:	mov    0x23d032(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  438e86:	xor    %esi,%esi
  438e88:	mov    (%rax),%rdi
  438e8b:	callq  4161e0 <BIO_new_fp@plt>
  438e90:	mov    %rax,0x242539(%rip)        # 67b3d0 <_edata+0x6c8>
  438e97:	jmpq   43834f <X509_get0_pubkey_bitstr@plt+0x2197f>
  438e9c:	nopl   0x0(%rax)
  438ea0:	mov    0x242541(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  438ea7:	xor    %ecx,%ecx
  438ea9:	mov    $0x40000000,%edx
  438eae:	mov    $0x20,%esi
  438eb3:	callq  413e30 <SSL_CTX_ctrl@plt>
  438eb8:	jmpq   438440 <X509_get0_pubkey_bitstr@plt+0x21a70>
  438ebd:	xor    %r12d,%r12d
  438ec0:	xor    %ebp,%ebp
  438ec2:	mov    $0x1,%r15d
  438ec8:	jmpq   437fd0 <X509_get0_pubkey_bitstr@plt+0x21600>
  438ecd:	lea    0x1000c(%rip),%rsi        # 448ee0 <X509_get0_pubkey_bitstr@plt+0x32510>
  438ed4:	mov    0x24250d(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  438edb:	callq  413250 <SSL_CTX_set_info_callback@plt>
  438ee0:	jmpq   438477 <X509_get0_pubkey_bitstr@plt+0x21aa7>
  438ee5:	xor    %r13d,%r13d
  438ee8:	movq   $0x0,0x8(%rsp)
  438ef1:	jmpq   438247 <X509_get0_pubkey_bitstr@plt+0x21877>
  438ef6:	mov    (%rbx),%rdi
  438ef9:	lea    0x2ef28(%rip),%rsi        # 467e28 <_fini+0xa924>
  438f00:	xor    %eax,%eax
  438f02:	callq  413c40 <BIO_printf@plt>
  438f07:	jmpq   438560 <X509_get0_pubkey_bitstr@plt+0x21b90>
  438f0c:	mov    (%rbx),%rdi
  438f0f:	xor    %r13d,%r13d
  438f12:	xor    %r12d,%r12d
  438f15:	xor    %ebp,%ebp
  438f17:	mov    $0x1,%r15d
  438f1d:	callq  413f40 <ERR_print_errors@plt>
  438f22:	movq   $0x0,0x8(%rsp)
  438f2b:	movq   $0x0,0x10(%rsp)
  438f34:	jmpq   437fd0 <X509_get0_pubkey_bitstr@plt+0x21600>
  438f39:	xor    %r12d,%r12d
  438f3c:	xor    %ebp,%ebp
  438f3e:	jmpq   438300 <X509_get0_pubkey_bitstr@plt+0x21930>
  438f43:	lea    0x2f507(%rip),%rdi        # 468451 <_fini+0xaf4d>
  438f4a:	mov    $0xb,%ecx
  438f4f:	mov    %rdx,%rsi
  438f52:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  438f54:	jne    4390b9 <X509_get0_pubkey_bitstr@plt+0x226e9>
  438f5a:	sub    $0x1,%r12d
  438f5e:	test   %r12d,%r12d
  438f61:	mov    %r12d,0xcc(%rsp)
  438f69:	je     437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  438f6f:	mov    0x8(%rax),%rdi
  438f73:	lea    0x8(%rax),%rdx
  438f77:	mov    %rdx,0xc0(%rsp)
  438f7f:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  438f84:	mov    0xcc(%rsp),%r12d
  438f8c:	mov    %eax,0x84(%rsp)
  438f93:	mov    0xc0(%rsp),%rax
  438f9b:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  438fa0:	mov    0x242441(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  438fa7:	xor    %ecx,%ecx
  438fa9:	mov    $0x1,%edx
  438fae:	mov    $0x29,%esi
  438fb3:	callq  413e30 <SSL_CTX_ctrl@plt>
  438fb8:	jmpq   43846b <X509_get0_pubkey_bitstr@plt+0x21a9b>
  438fbd:	mov    0x48(%rsp),%rdi
  438fc2:	callq  4140a0 <OBJ_sn2nid@plt>
  438fc7:	test   %eax,%eax
  438fc9:	jne    4391a5 <X509_get0_pubkey_bitstr@plt+0x227d5>
  438fcf:	mov    0x48(%rsp),%rdx
  438fd4:	mov    (%rbx),%rdi
  438fd7:	lea    0x2bc01(%rip),%rsi        # 464bdf <_fini+0x76db>
  438fde:	mov    $0x1,%r15d
  438fe4:	callq  413c40 <BIO_printf@plt>
  438fe9:	jmpq   437fd0 <X509_get0_pubkey_bitstr@plt+0x21600>
  438fee:	mov    0x2423eb(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  438ff5:	mov    $0x80,%edx
  438ffa:	mov    $0x2a,%esi
  438fff:	callq  413e30 <SSL_CTX_ctrl@plt>
  439004:	jmpq   438619 <X509_get0_pubkey_bitstr@plt+0x21c49>
  439009:	mov    0x2423b9(%rip),%edx        # 67b3c8 <_edata+0x6c0>
  43900f:	test   %edx,%edx
  439011:	jne    438e7f <X509_get0_pubkey_bitstr@plt+0x224af>
  439017:	mov    0x24239f(%rip),%eax        # 67b3bc <_edata+0x6b4>
  43901d:	test   %eax,%eax
  43901f:	jne    438e7f <X509_get0_pubkey_bitstr@plt+0x224af>
  439025:	callq  4159f0 <BIO_s_null@plt>
  43902a:	mov    %rax,%rdi
  43902d:	callq  414a20 <BIO_new@plt>
  439032:	mov    %rax,0x242397(%rip)        # 67b3d0 <_edata+0x6c8>
  439039:	jmpq   43834f <X509_get0_pubkey_bitstr@plt+0x2197f>
  43903e:	xchg   %ax,%ax
  439040:	mov    (%rbx),%rdi
  439043:	xor    %r13d,%r13d
  439046:	xor    %r12d,%r12d
  439049:	xor    %ebp,%ebp
  43904b:	mov    $0x1,%r15d
  439051:	callq  413f40 <ERR_print_errors@plt>
  439056:	jmpq   437fd0 <X509_get0_pubkey_bitstr@plt+0x21600>
  43905b:	mov    (%rbx),%rdi
  43905e:	xor    %r13d,%r13d
  439061:	xor    %r12d,%r12d
  439064:	xor    %ebp,%ebp
  439066:	mov    $0x1,%r15d
  43906c:	callq  413f40 <ERR_print_errors@plt>
  439071:	movq   $0x0,0x8(%rsp)
  43907a:	jmpq   437fd0 <X509_get0_pubkey_bitstr@plt+0x21600>
  43907f:	mov    0x24235a(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  439086:	xor    %ecx,%ecx
  439088:	mov    $0x40000000,%edx
  43908d:	mov    $0x20,%esi
  439092:	callq  413e30 <SSL_CTX_ctrl@plt>
  439097:	jmpq   4385c2 <X509_get0_pubkey_bitstr@plt+0x21bf2>
  43909c:	mov    0x24233d(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  4390a3:	xor    %ecx,%ecx
  4390a5:	mov    $0x80000bf7,%edx
  4390aa:	mov    $0x20,%esi
  4390af:	callq  413e30 <SSL_CTX_ctrl@plt>
  4390b4:	jmpq   4385b2 <X509_get0_pubkey_bitstr@plt+0x21be2>
  4390b9:	lea    0x2f39c(%rip),%rdi        # 46845c <_fini+0xaf58>
  4390c0:	mov    $0x7,%ecx
  4390c5:	mov    %rdx,%rsi
  4390c8:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4390ca:	jne    439125 <X509_get0_pubkey_bitstr@plt+0x22755>
  4390cc:	sub    $0x1,%r12d
  4390d0:	test   %r12d,%r12d
  4390d3:	mov    %r12d,0xcc(%rsp)
  4390db:	je     437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  4390e1:	mov    0x8(%rax),%rdx
  4390e5:	add    $0x8,%rax
  4390e9:	mov    %rdx,0x242310(%rip)        # 67b400 <_edata+0x6f8>
  4390f0:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  4390f5:	callq  416420 <RAND_status@plt>
  4390fa:	test   %eax,%eax
  4390fc:	jne    438341 <X509_get0_pubkey_bitstr@plt+0x21971>
  439102:	mov    (%rbx),%rdi
  439105:	lea    0x26e84(%rip),%rsi        # 45ff90 <_fini+0x2a8c>
  43910c:	callq  413c40 <BIO_printf@plt>
  439111:	jmpq   438341 <X509_get0_pubkey_bitstr@plt+0x21971>
  439116:	nopw   %cs:0x0(%rax,%rax,1)
  439120:	callq  414c30 <__stack_chk_fail@plt>
  439125:	lea    0x2f337(%rip),%rdi        # 468463 <_fini+0xaf5f>
  43912c:	mov    $0xa,%ecx
  439131:	mov    %rdx,%rsi
  439134:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439136:	jne    439330 <X509_get0_pubkey_bitstr@plt+0x22960>
  43913c:	sub    $0x1,%r12d
  439140:	test   %r12d,%r12d
  439143:	mov    %r12d,0xcc(%rsp)
  43914b:	je     437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  439151:	mov    0x8(%rax),%rdi
  439155:	lea    0x8(%rax),%rdx
  439159:	mov    %rdx,0xc0(%rsp)
  439161:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  439166:	mov    0xcc(%rsp),%r12d
  43916e:	mov    %eax,0x64(%rsp)
  439172:	mov    0xc0(%rsp),%rax
  43917a:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  43917f:	nop
  439180:	lea    0xfd59(%rip),%rsi        # 448ee0 <X509_get0_pubkey_bitstr@plt+0x32510>
  439187:	mov    0x242252(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  43918e:	callq  413250 <SSL_CTX_set_info_callback@plt>
  439193:	jmpq   4385f3 <X509_get0_pubkey_bitstr@plt+0x21c23>
  439198:	mov    (%rbx),%rdi
  43919b:	callq  413f40 <ERR_print_errors@plt>
  4391a0:	jmpq   438637 <X509_get0_pubkey_bitstr@plt+0x21c67>
  4391a5:	mov    %eax,%edi
  4391a7:	callq  415fc0 <EC_KEY_new_by_curve_name@plt>
  4391ac:	test   %rax,%rax
  4391af:	mov    %rax,%r15
  4391b2:	je     43936a <X509_get0_pubkey_bitstr@plt+0x2299a>
  4391b8:	mov    0x242211(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4391bf:	lea    0x2f564(%rip),%rsi        # 46872a <_fini+0xb226>
  4391c6:	xor    %eax,%eax
  4391c8:	callq  413c40 <BIO_printf@plt>
  4391cd:	jmpq   438773 <X509_get0_pubkey_bitstr@plt+0x21da3>
  4391d2:	mov    0x242207(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  4391d9:	xor    %ecx,%ecx
  4391db:	mov    $0x1,%edx
  4391e0:	mov    $0x29,%esi
  4391e5:	callq  413e30 <SSL_CTX_ctrl@plt>
  4391ea:	jmpq   4385e5 <X509_get0_pubkey_bitstr@plt+0x21c15>
  4391ef:	mov    0x23feb2(%rip),%rdi        # 6790a8 <_fini+0x21bba4>
  4391f6:	test   %rdi,%rdi
  4391f9:	jne    4386a7 <X509_get0_pubkey_bitstr@plt+0x21cd7>
  4391ff:	mov    0x2421ca(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  439206:	lea    0x2ecc3(%rip),%rsi        # 467ed0 <_fini+0xa9cc>
  43920d:	xor    %eax,%eax
  43920f:	callq  413c40 <BIO_printf@plt>
  439214:	callq  4137d0 <DH_new@plt>
  439219:	test   %rax,%rax
  43921c:	mov    %rax,%r15
  43921f:	je     4386cd <X509_get0_pubkey_bitstr@plt+0x21cfd>
  439225:	lea    0x23fdb4(%rip),%rdi        # 678fe0 <_fini+0x21badc>
  43922c:	xor    %edx,%edx
  43922e:	mov    $0x80,%esi
  439233:	callq  414aa0 <BN_bin2bn@plt>
  439238:	lea    0x23fd81(%rip),%rdi        # 678fc0 <_fini+0x21babc>
  43923f:	xor    %edx,%edx
  439241:	mov    %rax,0x8(%r15)
  439245:	mov    $0x1,%esi
  43924a:	callq  414aa0 <BN_bin2bn@plt>
  43924f:	cmpq   $0x0,0x8(%r15)
  439254:	mov    %rax,0x10(%r15)
  439258:	je     439263 <X509_get0_pubkey_bitstr@plt+0x22893>
  43925a:	test   %rax,%rax
  43925d:	jne    4386cd <X509_get0_pubkey_bitstr@plt+0x21cfd>
  439263:	mov    %r15,%rdi
  439266:	xor    %r15d,%r15d
  439269:	callq  413d80 <DH_free@plt>
  43926e:	jmpq   4386cd <X509_get0_pubkey_bitstr@plt+0x21cfd>
  439273:	nopl   0x0(%rax,%rax,1)
  439278:	mov    (%rbx),%rdi
  43927b:	callq  413f40 <ERR_print_errors@plt>
  439280:	jmpq   43864b <X509_get0_pubkey_bitstr@plt+0x21c7b>
  439285:	mov    0x242144(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  43928c:	lea    0x2ec65(%rip),%rsi        # 467ef8 <_fini+0xa9f4>
  439293:	xor    %eax,%eax
  439295:	callq  413c40 <BIO_printf@plt>
  43929a:	mov    $0x19f,%edi
  43929f:	callq  415fc0 <EC_KEY_new_by_curve_name@plt>
  4392a4:	test   %rax,%rax
  4392a7:	mov    %rax,%r15
  4392aa:	jne    438773 <X509_get0_pubkey_bitstr@plt+0x21da3>
  4392b0:	mov    (%rbx),%rdi
  4392b3:	lea    0x2ec66(%rip),%rsi        # 467f20 <_fini+0xaa1c>
  4392ba:	xor    %eax,%eax
  4392bc:	mov    $0x1,%r15b
  4392bf:	callq  413c40 <BIO_printf@plt>
  4392c4:	jmpq   437fd0 <X509_get0_pubkey_bitstr@plt+0x21600>
  4392c9:	mov    0x23fdd0(%rip),%rdi        # 6790a0 <_fini+0x21bb9c>
  4392d0:	callq  437490 <X509_get0_pubkey_bitstr@plt+0x20ac0>
  4392d5:	test   %rax,%rax
  4392d8:	mov    0x242101(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  4392df:	je     438710 <X509_get0_pubkey_bitstr@plt+0x21d40>
  4392e5:	mov    0x2420e4(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  4392ec:	lea    0x2f3fb(%rip),%rsi        # 4686ee <_fini+0xb1ea>
  4392f3:	mov    %rax,0x28(%rsp)
  4392f8:	xor    %eax,%eax
  4392fa:	callq  413c40 <BIO_printf@plt>
  4392ff:	mov    0x2420ca(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  439306:	xor    %ecx,%ecx
  439308:	xor    %edx,%edx
  43930a:	mov    $0xb,%esi
  43930f:	callq  412af0 <BIO_ctrl@plt>
  439314:	mov    %r15,%rdi
  439317:	callq  413d80 <DH_free@plt>
  43931c:	mov    0x28(%rsp),%r8
  439321:	mov    0x2420b8(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  439328:	mov    %r8,%r15
  43932b:	jmpq   438710 <X509_get0_pubkey_bitstr@plt+0x21d40>
  439330:	lea    0x2f136(%rip),%rdi        # 46846d <_fini+0xaf69>
  439337:	mov    $0x7,%ecx
  43933c:	mov    %rdx,%rsi
  43933f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439341:	jne    439388 <X509_get0_pubkey_bitstr@plt+0x229b8>
  439343:	sub    $0x1,%r12d
  439347:	test   %r12d,%r12d
  43934a:	mov    %r12d,0xcc(%rsp)
  439352:	je     437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  439358:	mov    0x8(%rax),%rdx
  43935c:	add    $0x8,%rax
  439360:	mov    %rdx,0x8(%rsp)
  439365:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  43936a:	mov    0x48(%rsp),%rdx
  43936f:	mov    (%rbx),%rdi
  439372:	lea    0x2b87f(%rip),%rsi        # 464bf8 <_fini+0x76f4>
  439379:	xor    %eax,%eax
  43937b:	mov    $0x1,%r15b
  43937e:	callq  413c40 <BIO_printf@plt>
  439383:	jmpq   437fd0 <X509_get0_pubkey_bitstr@plt+0x21600>
  439388:	lea    0x2f0e5(%rip),%rdi        # 468474 <_fini+0xaf70>
  43938f:	mov    $0x6,%ecx
  439394:	mov    %rdx,%rsi
  439397:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439399:	jne    439435 <X509_get0_pubkey_bitstr@plt+0x22a65>
  43939f:	sub    $0x1,%r12d
  4393a3:	test   %r12d,%r12d
  4393a6:	mov    %r12d,0xcc(%rsp)
  4393ae:	je     437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  4393b4:	mov    0x8(%rax),%rdx
  4393b8:	add    $0x8,%rax
  4393bc:	mov    %rdx,0x242035(%rip)        # 67b3f8 <_edata+0x6f0>
  4393c3:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  4393c8:	mov    0x60(%rsp),%esi
  4393cc:	lea    -0x39d3(%rip),%rcx        # 435a00 <X509_get0_pubkey_bitstr@plt+0x1f030>
  4393d3:	lea    0x23fcbe(%rip),%rdx        # 679098 <_fini+0x21bb94>
  4393da:	mov    %r14,%rdi
  4393dd:	callq  44a160 <X509_get0_pubkey_bitstr@plt+0x33790>
  4393e2:	jmpq   438a66 <X509_get0_pubkey_bitstr@plt+0x22096>
  4393e7:	mov    0x241ffa(%rip),%rdi        # 67b3e8 <_edata+0x6e0>
  4393ee:	lea    -0x2135(%rip),%rsi        # 4372c0 <X509_get0_pubkey_bitstr@plt+0x208f0>
  4393f5:	callq  416050 <SSL_CTX_set_tmp_rsa_callback@plt>
  4393fa:	mov    0x241fdf(%rip),%rdi        # 67b3e0 <_edata+0x6d8>
  439401:	test   %rdi,%rdi
  439404:	je     43883a <X509_get0_pubkey_bitstr@plt+0x21e6a>
  43940a:	lea    -0x2151(%rip),%rsi        # 4372c0 <X509_get0_pubkey_bitstr@plt+0x208f0>
  439411:	callq  416050 <SSL_CTX_set_tmp_rsa_callback@plt>
  439416:	jmpq   43883a <X509_get0_pubkey_bitstr@plt+0x21e6a>
  43941b:	mov    0x241fae(%rip),%rdi        # 67b3d0 <_edata+0x6c8>
  439422:	lea    0x2eb1f(%rip),%rsi        # 467f48 <_fini+0xaa44>
  439429:	xor    %eax,%eax
  43942b:	callq  413c40 <BIO_printf@plt>
  439430:	jmpq   438855 <X509_get0_pubkey_bitstr@plt+0x21e85>
  439435:	lea    0x2f03e(%rip),%rdi        # 46847a <_fini+0xaf76>
  43943c:	mov    $0x8,%ecx
  439441:	mov    %rdx,%rsi
  439444:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439446:	je     439482 <X509_get0_pubkey_bitstr@plt+0x22ab2>
  439448:	lea    0x246e6(%rip),%rdi        # 45db35 <_fini+0x631>
  43944f:	mov    $0x8,%ecx
  439454:	mov    %rdx,%rsi
  439457:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439459:	jne    43948f <X509_get0_pubkey_bitstr@plt+0x22abf>
  43945b:	sub    $0x1,%r12d
  43945f:	test   %r12d,%r12d
  439462:	mov    %r12d,0xcc(%rsp)
  43946a:	je     437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  439470:	mov    0x8(%rax),%rdx
  439474:	add    $0x8,%rax
  439478:	mov    %rdx,0x50(%rsp)
  43947d:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439482:	movl   $0x1,0x3c(%rsp)
  43948a:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  43948f:	lea    0x2efec(%rip),%rdi        # 468482 <_fini+0xaf7e>
  439496:	mov    $0xa,%ecx
  43949b:	mov    %rdx,%rsi
  43949e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4394a0:	jne    4394b2 <X509_get0_pubkey_bitstr@plt+0x22ae2>
  4394a2:	movl   $0x1,0x88(%rsp)
  4394ad:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  4394b2:	mov    0x10(%rsp),%r8
  4394b7:	mov    (%rbx),%rcx
  4394ba:	mov    0x18(%rsp),%rdx
  4394bf:	mov    0x98(%rsp),%rsi
  4394c7:	mov    0xa0(%rsp),%rdi
  4394cf:	callq  447ee0 <X509_get0_pubkey_bitstr@plt+0x31510>
  4394d4:	test   %eax,%eax
  4394d6:	je     4394f4 <X509_get0_pubkey_bitstr@plt+0x22b24>
  4394d8:	mov    0xd4(%rsp),%edi
  4394df:	test   %edi,%edi
  4394e1:	jne    437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  4394e7:	mov    0xcc(%rsp),%r12d
  4394ef:	jmpq   437938 <X509_get0_pubkey_bitstr@plt+0x20f68>
  4394f4:	mov    0xc0(%rsp),%rax
  4394fc:	lea    0x2ef89(%rip),%rdi        # 46848c <_fini+0xaf88>
  439503:	mov    $0x15,%ecx
  439508:	mov    (%rax),%rdx
  43950b:	mov    %rdx,%rsi
  43950e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439510:	jne    43952c <X509_get0_pubkey_bitstr@plt+0x22b5c>
  439512:	lea    0x2426e3(%rip),%rdx        # 67bbfc <_edata+0xef4>
  439519:	movl   $0x1,(%rdx)
  43951f:	mov    0xcc(%rsp),%r12d
  439527:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  43952c:	lea    0x2ef6e(%rip),%rdi        # 4684a1 <_fini+0xaf9d>
  439533:	mov    $0xc,%ecx
  439538:	mov    %rdx,%rsi
  43953b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43953d:	jne    439554 <X509_get0_pubkey_bitstr@plt+0x22b84>
  43953f:	orl    $0x400000,0x28(%rsp)
  439547:	mov    0xcc(%rsp),%r12d
  43954f:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439554:	lea    0x2ef52(%rip),%rdi        # 4684ad <_fini+0xafa9>
  43955b:	mov    $0x16,%ecx
  439560:	mov    %rdx,%rsi
  439563:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439565:	jne    43957c <X509_get0_pubkey_bitstr@plt+0x22bac>
  439567:	orl    $0x40000,0x28(%rsp)
  43956f:	mov    0xcc(%rsp),%r12d
  439577:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  43957c:	lea    0x2ef40(%rip),%rdi        # 4684c3 <_fini+0xafbf>
  439583:	mov    $0x8,%ecx
  439588:	mov    %rdx,%rsi
  43958b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43958d:	jne    4395bf <X509_get0_pubkey_bitstr@plt+0x22bef>
  43958f:	mov    0xcc(%rsp),%edx
  439596:	lea    -0x1(%rdx),%r12d
  43959a:	test   %r12d,%r12d
  43959d:	mov    %r12d,0xcc(%rsp)
  4395a5:	jle    437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  4395ab:	mov    0x8(%rax),%rdx
  4395af:	add    $0x8,%rax
  4395b3:	mov    %rdx,0x241e66(%rip)        # 67b420 <_edata+0x718>
  4395ba:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  4395bf:	lea    0x24577(%rip),%rdi        # 45db3d <_fini+0x639>
  4395c6:	mov    $0x8,%ecx
  4395cb:	mov    %rdx,%rsi
  4395ce:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4395d0:	jne    439600 <X509_get0_pubkey_bitstr@plt+0x22c30>
  4395d2:	mov    0xcc(%rsp),%edx
  4395d9:	lea    -0x1(%rdx),%r12d
  4395dd:	test   %r12d,%r12d
  4395e0:	mov    %r12d,0xcc(%rsp)
  4395e8:	jle    437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  4395ee:	mov    0x8(%rax),%rdx
  4395f2:	add    $0x8,%rax
  4395f6:	mov    %rdx,0x40(%rsp)
  4395fb:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439600:	lea    0x2eec4(%rip),%rdi        # 4684cb <_fini+0xafc7>
  439607:	mov    $0x6,%ecx
  43960c:	mov    %rdx,%rsi
  43960f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439611:	jne    43962a <X509_get0_pubkey_bitstr@plt+0x22c5a>
  439613:	movl   $0x1,0x241dd7(%rip)        # 67b3f4 <_edata+0x6ec>
  43961d:	mov    0xcc(%rsp),%r12d
  439625:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  43962a:	lea    0x2eea0(%rip),%rdi        # 4684d1 <_fini+0xafcd>
  439631:	mov    $0xb,%ecx
  439636:	mov    %rdx,%rsi
  439639:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43963b:	jne    43965e <X509_get0_pubkey_bitstr@plt+0x22c8e>
  43963d:	movl   $0x1,0x241dad(%rip)        # 67b3f4 <_edata+0x6ec>
  439647:	movl   $0x1,0x241d9f(%rip)        # 67b3f0 <_edata+0x6e8>
  439651:	mov    0xcc(%rsp),%r12d
  439659:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  43965e:	lea    0x26b4c(%rip),%rdi        # 4601b1 <_fini+0x2cad>
  439665:	mov    $0x7,%ecx
  43966a:	mov    %rdx,%rsi
  43966d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43966f:	jne    439688 <X509_get0_pubkey_bitstr@plt+0x22cb8>
  439671:	movl   $0x1,0x241d4d(%rip)        # 67b3c8 <_edata+0x6c0>
  43967b:	mov    0xcc(%rsp),%r12d
  439683:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439688:	lea    0x2ee4d(%rip),%rdi        # 4684dc <_fini+0xafd8>
  43968f:	mov    $0xd,%ecx
  439694:	mov    %rdx,%rsi
  439697:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439699:	jne    4396b2 <X509_get0_pubkey_bitstr@plt+0x22ce2>
  43969b:	movl   $0x1,0x241d1f(%rip)        # 67b3c4 <_edata+0x6bc>
  4396a5:	mov    0xcc(%rsp),%r12d
  4396ad:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  4396b2:	lea    0x27978(%rip),%rdi        # 461031 <_fini+0x3b2d>
  4396b9:	mov    $0x8,%ecx
  4396be:	mov    %rdx,%rsi
  4396c1:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4396c3:	jne    4396dc <X509_get0_pubkey_bitstr@plt+0x22d0c>
  4396c5:	movl   $0x1,0x241cf1(%rip)        # 67b3c0 <_edata+0x6b8>
  4396cf:	mov    0xcc(%rsp),%r12d
  4396d7:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  4396dc:	lea    0x2ee06(%rip),%rdi        # 4684e9 <_fini+0xafe5>
  4396e3:	mov    $0x10,%ecx
  4396e8:	mov    %rdx,%rsi
  4396eb:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4396ed:	jne    439710 <X509_get0_pubkey_bitstr@plt+0x22d40>
  4396ef:	movl   $0x1,0x241cc7(%rip)        # 67b3c0 <_edata+0x6b8>
  4396f9:	movl   $0x1,0x23f985(%rip)        # 679088 <_fini+0x21bb84>
  439703:	mov    0xcc(%rsp),%r12d
  43970b:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439710:	lea    0x2ede2(%rip),%rdi        # 4684f9 <_fini+0xaff5>
  439717:	mov    $0x10,%ecx
  43971c:	mov    %rdx,%rsi
  43971f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439721:	jne    4379ef <X509_get0_pubkey_bitstr@plt+0x2101f>
  439727:	mov    0xcc(%rsp),%edx
  43972e:	movl   $0x1,0x241c88(%rip)        # 67b3c0 <_edata+0x6b8>
  439738:	sub    $0x1,%edx
  43973b:	test   %edx,%edx
  43973d:	mov    %edx,0xcc(%rsp)
  439744:	jle    437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  43974a:	lea    0x8(%rax),%rdx
  43974e:	mov    0x8(%rax),%rdi
  439752:	xor    %esi,%esi
  439754:	mov    %rdx,0xc0(%rsp)
  43975c:	mov    $0xa,%edx
  439761:	callq  4155d0 <strtol@plt>
  439766:	mov    0xcc(%rsp),%r12d
  43976e:	mov    %eax,0x23f908(%rip)        # 67907c <_fini+0x21bb78>
  439774:	mov    0xc0(%rsp),%rax
  43977c:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439781:	lea    0x2eda0(%rip),%rdi        # 468528 <_fini+0xb024>
  439788:	mov    $0x5,%ecx
  43978d:	mov    %rdx,%rsi
  439790:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439792:	jne    4397ab <X509_get0_pubkey_bitstr@plt+0x22ddb>
  439794:	movl   $0x1,0x241c1e(%rip)        # 67b3bc <_edata+0x6b4>
  43979e:	mov    0xcc(%rsp),%r12d
  4397a6:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  4397ab:	lea    0x2ed7b(%rip),%rdi        # 46852d <_fini+0xb029>
  4397b2:	mov    $0x6,%ecx
  4397b7:	mov    %rdx,%rsi
  4397ba:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4397bc:	jne    4397d5 <X509_get0_pubkey_bitstr@plt+0x22e05>
  4397be:	movl   $0x1,0x241be0(%rip)        # 67b3a8 <_edata+0x6a0>
  4397c8:	mov    0xcc(%rsp),%r12d
  4397d0:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  4397d5:	lea    0x2ed57(%rip),%rdi        # 468533 <_fini+0xb02f>
  4397dc:	mov    $0x7,%ecx
  4397e1:	mov    %rdx,%rsi
  4397e4:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4397e6:	jne    4397fd <X509_get0_pubkey_bitstr@plt+0x22e2d>
  4397e8:	mov    0xcc(%rsp),%r12d
  4397f0:	movl   $0x1,0x7c(%rsp)
  4397f8:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  4397fd:	lea    0x2ed36(%rip),%rdi        # 46853a <_fini+0xb036>
  439804:	mov    $0x6,%ecx
  439809:	mov    %rdx,%rsi
  43980c:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43980e:	jne    43982a <X509_get0_pubkey_bitstr@plt+0x22e5a>
  439810:	lea    0x241b41(%rip),%rdx        # 67b358 <_edata+0x650>
  439817:	movl   $0x1,(%rdx)
  43981d:	mov    0xcc(%rsp),%r12d
  439825:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  43982a:	lea    0x26faa(%rip),%rdi        # 4607db <_fini+0x32d7>
  439831:	mov    $0x7,%ecx
  439836:	mov    %rdx,%rsi
  439839:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43983b:	jne    439854 <X509_get0_pubkey_bitstr@plt+0x22e84>
  43983d:	movl   $0x1,0x241b71(%rip)        # 67b3b8 <_edata+0x6b0>
  439847:	mov    0xcc(%rsp),%r12d
  43984f:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439854:	lea    0x2ece5(%rip),%rdi        # 468540 <_fini+0xb03c>
  43985b:	mov    $0x6,%ecx
  439860:	mov    %rdx,%rsi
  439863:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439865:	jne    43987c <X509_get0_pubkey_bitstr@plt+0x22eac>
  439867:	mov    0xcc(%rsp),%r12d
  43986f:	movl   $0x1,0x78(%rsp)
  439877:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  43987c:	lea    0x2ecc3(%rip),%rdi        # 468546 <_fini+0xb042>
  439883:	mov    $0xc,%ecx
  439888:	mov    %rdx,%rsi
  43988b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43988d:	jne    4398a7 <X509_get0_pubkey_bitstr@plt+0x22ed7>
  43988f:	mov    0xcc(%rsp),%r12d
  439897:	movl   $0x1,0x8c(%rsp)
  4398a2:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  4398a7:	lea    0x2eca4(%rip),%rdi        # 468552 <_fini+0xb04e>
  4398ae:	mov    $0x8,%ecx
  4398b3:	mov    %rdx,%rsi
  4398b6:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4398b8:	jne    4398d2 <X509_get0_pubkey_bitstr@plt+0x22f02>
  4398ba:	mov    0xcc(%rsp),%r12d
  4398c2:	movl   $0x1,0x90(%rsp)
  4398cd:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  4398d2:	lea    0x2ec81(%rip),%rdi        # 46855a <_fini+0xb056>
  4398d9:	mov    $0xa,%ecx
  4398de:	mov    %rdx,%rsi
  4398e1:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4398e3:	jne    4398fd <X509_get0_pubkey_bitstr@plt+0x22f2d>
  4398e5:	mov    0xcc(%rsp),%r12d
  4398ed:	movl   $0x1,0x94(%rsp)
  4398f8:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  4398fd:	lea    0x2ec60(%rip),%rdi        # 468564 <_fini+0xb060>
  439904:	mov    $0xa,%ecx
  439909:	mov    %rdx,%rsi
  43990c:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43990e:	jne    439940 <X509_get0_pubkey_bitstr@plt+0x22f70>
  439910:	mov    0xcc(%rsp),%edx
  439917:	lea    -0x1(%rdx),%r12d
  43991b:	test   %r12d,%r12d
  43991e:	mov    %r12d,0xcc(%rsp)
  439926:	jle    437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  43992c:	mov    0x8(%rax),%rdx
  439930:	add    $0x8,%rax
  439934:	mov    %rdx,0x241a2d(%rip)        # 67b368 <_edata+0x660>
  43993b:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439940:	lea    0x2ec27(%rip),%rdi        # 46856e <_fini+0xb06a>
  439947:	mov    $0x5,%ecx
  43994c:	mov    %rdx,%rsi
  43994f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439951:	jne    4399f8 <X509_get0_pubkey_bitstr@plt+0x23028>
  439957:	mov    0xcc(%rsp),%edx
  43995e:	sub    $0x1,%edx
  439961:	test   %edx,%edx
  439963:	mov    %edx,0xc8(%rsp)
  43996a:	mov    %edx,0xcc(%rsp)
  439971:	jle    437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  439977:	mov    0x8(%rax),%r12
  43997b:	lea    0x8(%rax),%rdx
  43997f:	lea    0x2419ca(%rip),%rax        # 67b350 <_edata+0x648>
  439986:	mov    %rdx,0xa8(%rsp)
  43998e:	mov    %rdx,0xc0(%rsp)
  439996:	mov    %r12,%rdi
  439999:	mov    %r12,(%rax)
  43999c:	callq  413470 <strlen@plt>
  4399a1:	add    %r12,%rax
  4399a4:	mov    %r12,%rcx
  4399a7:	mov    %rax,0xb0(%rsp)
  4399af:	cmp    0xb0(%rsp),%rcx
  4399b7:	je     439a22 <X509_get0_pubkey_bitstr@plt+0x23052>
  4399b9:	mov    %rcx,0xb8(%rsp)
  4399c1:	callq  414ae0 <__ctype_b_loc@plt>
  4399c6:	mov    0xb8(%rsp),%rcx
  4399ce:	mov    (%rax),%rax
  4399d1:	movzbl (%rcx),%edx
  4399d4:	add    $0x1,%rcx
  4399d8:	testb  $0x10,0x1(%rax,%rdx,2)
  4399dd:	jne    4399af <X509_get0_pubkey_bitstr@plt+0x22fdf>
  4399df:	mov    (%rbx),%rdi
  4399e2:	lea    0x2eb8a(%rip),%rsi        # 468573 <_fini+0xb06f>
  4399e9:	mov    %r12,%rdx
  4399ec:	xor    %eax,%eax
  4399ee:	callq  413c40 <BIO_printf@plt>
  4399f3:	jmpq   437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  4399f8:	lea    0x2eb8b(%rip),%rdi        # 46858a <_fini+0xb086>
  4399ff:	mov    $0x5,%ecx
  439a04:	mov    %rdx,%rsi
  439a07:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439a09:	jne    439a37 <X509_get0_pubkey_bitstr@plt+0x23067>
  439a0b:	movl   $0x1,0x2419c3(%rip)        # 67b3d8 <_edata+0x6d0>
  439a15:	mov    0xcc(%rsp),%r12d
  439a1d:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439a22:	mov    0xa8(%rsp),%rax
  439a2a:	mov    0xc8(%rsp),%r12d
  439a32:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439a37:	lea    0x2eb51(%rip),%rdi        # 46858f <_fini+0xb08b>
  439a3e:	mov    $0x5,%ecx
  439a43:	mov    %rdx,%rsi
  439a46:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439a48:	jne    439a61 <X509_get0_pubkey_bitstr@plt+0x23091>
  439a4a:	movl   $0x2,0x241984(%rip)        # 67b3d8 <_edata+0x6d0>
  439a54:	mov    0xcc(%rsp),%r12d
  439a5c:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439a61:	lea    0x2eb2c(%rip),%rdi        # 468594 <_fini+0xb090>
  439a68:	mov    $0x6,%ecx
  439a6d:	mov    %rdx,%rsi
  439a70:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439a72:	jne    439a8b <X509_get0_pubkey_bitstr@plt+0x230bb>
  439a74:	movl   $0x3,0x24195a(%rip)        # 67b3d8 <_edata+0x6d0>
  439a7e:	mov    0xcc(%rsp),%r12d
  439a86:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439a8b:	lea    0x2eb08(%rip),%rdi        # 46859a <_fini+0xb096>
  439a92:	mov    $0x9,%ecx
  439a97:	mov    %rdx,%rsi
  439a9a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439a9c:	jne    439ab3 <X509_get0_pubkey_bitstr@plt+0x230e3>
  439a9e:	orl    $0x1000000,0x28(%rsp)
  439aa6:	mov    0xcc(%rsp),%r12d
  439aae:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439ab3:	lea    0x2eae9(%rip),%rdi        # 4685a3 <_fini+0xb09f>
  439aba:	mov    $0x9,%ecx
  439abf:	mov    %rdx,%rsi
  439ac2:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439ac4:	jne    439adb <X509_get0_pubkey_bitstr@plt+0x2310b>
  439ac6:	orl    $0x2000000,0x28(%rsp)
  439ace:	mov    0xcc(%rsp),%r12d
  439ad6:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439adb:	lea    0x2eaca(%rip),%rdi        # 4685ac <_fini+0xb0a8>
  439ae2:	mov    $0x9,%ecx
  439ae7:	mov    %rdx,%rsi
  439aea:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439aec:	jne    439b03 <X509_get0_pubkey_bitstr@plt+0x23133>
  439aee:	orl    $0x4000000,0x28(%rsp)
  439af6:	mov    0xcc(%rsp),%r12d
  439afe:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439b03:	lea    0x2eaab(%rip),%rdi        # 4685b5 <_fini+0xb0b1>
  439b0a:	mov    $0xb,%ecx
  439b0f:	mov    %rdx,%rsi
  439b12:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439b14:	jne    439b2b <X509_get0_pubkey_bitstr@plt+0x2315b>
  439b16:	orl    $0x10000000,0x28(%rsp)
  439b1e:	mov    0xcc(%rsp),%r12d
  439b26:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439b2b:	lea    0x2ea8e(%rip),%rdi        # 4685c0 <_fini+0xb0bc>
  439b32:	mov    $0xb,%ecx
  439b37:	mov    %rdx,%rsi
  439b3a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439b3c:	jne    439b53 <X509_get0_pubkey_bitstr@plt+0x23183>
  439b3e:	orl    $0x8000000,0x28(%rsp)
  439b46:	mov    0xcc(%rsp),%r12d
  439b4e:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439b53:	lea    0x2ea71(%rip),%rdi        # 4685cb <_fini+0xb0c7>
  439b5a:	mov    $0x9,%ecx
  439b5f:	mov    %rdx,%rsi
  439b62:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439b64:	jne    439b7b <X509_get0_pubkey_bitstr@plt+0x231ab>
  439b66:	orl    $0x20000,0x28(%rsp)
  439b6e:	mov    0xcc(%rsp),%r12d
  439b76:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439b7b:	lea    0x2ea52(%rip),%rdi        # 4685d4 <_fini+0xb0d0>
  439b82:	mov    $0xb,%ecx
  439b87:	mov    %rdx,%rsi
  439b8a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439b8c:	jne    439ba3 <X509_get0_pubkey_bitstr@plt+0x231d3>
  439b8e:	orl    $0x4000,0x28(%rsp)
  439b96:	mov    0xcc(%rsp),%r12d
  439b9e:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439ba3:	lea    0x2ea35(%rip),%rdi        # 4685df <_fini+0xb0db>
  439baa:	mov    $0x6,%ecx
  439baf:	mov    %rdx,%rsi
  439bb2:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439bb4:	je     439c57 <X509_get0_pubkey_bitstr@plt+0x23287>
  439bba:	lea    0x2ea24(%rip),%rdi        # 4685e5 <_fini+0xb0e1>
  439bc1:	mov    $0x6,%ecx
  439bc6:	mov    %rdx,%rsi
  439bc9:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439bcb:	je     439d65 <X509_get0_pubkey_bitstr@plt+0x23395>
  439bd1:	lea    0x2ea13(%rip),%rdi        # 4685eb <_fini+0xb0e7>
  439bd8:	mov    $0x6,%ecx
  439bdd:	mov    %rdx,%rsi
  439be0:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439be2:	je     439d48 <X509_get0_pubkey_bitstr@plt+0x23378>
  439be8:	lea    0x2ea02(%rip),%rdi        # 4685f1 <_fini+0xb0ed>
  439bef:	mov    $0x8,%ecx
  439bf4:	mov    %rdx,%rsi
  439bf7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439bf9:	je     439d82 <X509_get0_pubkey_bitstr@plt+0x233b2>
  439bff:	lea    0x2e9f3(%rip),%rdi        # 4685f9 <_fini+0xb0f5>
  439c06:	mov    $0x8,%ecx
  439c0b:	mov    %rdx,%rsi
  439c0e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439c10:	je     439d2b <X509_get0_pubkey_bitstr@plt+0x2335b>
  439c16:	lea    0x2e9e4(%rip),%rdi        # 468601 <_fini+0xb0fd>
  439c1d:	mov    $0x7,%ecx
  439c22:	mov    %rdx,%rsi
  439c25:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439c27:	je     439cd8 <X509_get0_pubkey_bitstr@plt+0x23308>
  439c2d:	lea    0x2e9d4(%rip),%rdi        # 468608 <_fini+0xb104>
  439c34:	mov    $0x9,%ecx
  439c39:	mov    %rdx,%rsi
  439c3c:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439c3e:	jne    439c74 <X509_get0_pubkey_bitstr@plt+0x232a4>
  439c40:	movl   $0x1,0x241746(%rip)        # 67b390 <_edata+0x688>
  439c4a:	mov    0xcc(%rsp),%r12d
  439c52:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439c57:	callq  415cf0 <SSLv2_server_method@plt>
  439c5c:	mov    0xcc(%rsp),%r12d
  439c64:	mov    %rax,%r15
  439c67:	mov    0xc0(%rsp),%rax
  439c6f:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439c74:	lea    0x2e996(%rip),%rdi        # 468611 <_fini+0xb10d>
  439c7b:	mov    $0x5,%ecx
  439c80:	mov    %rdx,%rsi
  439c83:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439c85:	jne    439cfd <X509_get0_pubkey_bitstr@plt+0x2332d>
  439c87:	mov    0xcc(%rsp),%edx
  439c8e:	sub    $0x1,%edx
  439c91:	test   %edx,%edx
  439c93:	mov    %edx,0xcc(%rsp)
  439c9a:	jle    437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  439ca0:	lea    0x8(%rax),%rdx
  439ca4:	mov    0x8(%rax),%rdi
  439ca8:	xor    %esi,%esi
  439caa:	mov    %rdx,0xc0(%rsp)
  439cb2:	mov    $0xa,%edx
  439cb7:	callq  4155d0 <strtol@plt>
  439cbc:	mov    0xcc(%rsp),%r12d
  439cc4:	mov    %rax,0x2416bd(%rip)        # 67b388 <_edata+0x680>
  439ccb:	mov    0xc0(%rsp),%rax
  439cd3:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439cd8:	callq  4140f0 <DTLSv1_server_method@plt>
  439cdd:	mov    0xcc(%rsp),%r12d
  439ce5:	mov    %rax,%r15
  439ce8:	movl   $0x2,0x60(%rsp)
  439cf0:	mov    0xc0(%rsp),%rax
  439cf8:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439cfd:	lea    0x2e912(%rip),%rdi        # 468616 <_fini+0xb112>
  439d04:	mov    $0x7,%ecx
  439d09:	mov    %rdx,%rsi
  439d0c:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439d0e:	jne    439d9f <X509_get0_pubkey_bitstr@plt+0x233cf>
  439d14:	movl   $0x1,0x241666(%rip)        # 67b384 <_edata+0x67c>
  439d1e:	mov    0xcc(%rsp),%r12d
  439d26:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439d2b:	callq  412970 <TLSv1_2_server_method@plt>
  439d30:	mov    0xcc(%rsp),%r12d
  439d38:	mov    %rax,%r15
  439d3b:	mov    0xc0(%rsp),%rax
  439d43:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439d48:	callq  413370 <TLSv1_server_method@plt>
  439d4d:	mov    0xcc(%rsp),%r12d
  439d55:	mov    %rax,%r15
  439d58:	mov    0xc0(%rsp),%rax
  439d60:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439d65:	callq  414880 <SSLv3_server_method@plt>
  439d6a:	mov    0xcc(%rsp),%r12d
  439d72:	mov    %rax,%r15
  439d75:	mov    0xc0(%rsp),%rax
  439d7d:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439d82:	callq  413eb0 <TLSv1_1_server_method@plt>
  439d87:	mov    0xcc(%rsp),%r12d
  439d8f:	mov    %rax,%r15
  439d92:	mov    0xc0(%rsp),%rax
  439d9a:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439d9f:	lea    0x2e877(%rip),%rdi        # 46861d <_fini+0xb119>
  439da6:	mov    $0xb,%ecx
  439dab:	mov    %rdx,%rsi
  439dae:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439db0:	jne    439de2 <X509_get0_pubkey_bitstr@plt+0x23412>
  439db2:	mov    0xcc(%rsp),%edx
  439db9:	lea    -0x1(%rdx),%r12d
  439dbd:	test   %r12d,%r12d
  439dc0:	mov    %r12d,0xcc(%rsp)
  439dc8:	jle    437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  439dce:	mov    0x8(%rax),%rdx
  439dd2:	add    $0x8,%rax
  439dd6:	mov    %rdx,0x2415bb(%rip)        # 67b398 <_edata+0x690>
  439ddd:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439de2:	lea    0x23d79(%rip),%rdi        # 45db62 <_fini+0x65e>
  439de9:	mov    $0x8,%ecx
  439dee:	mov    %rdx,%rsi
  439df1:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439df3:	jne    439e25 <X509_get0_pubkey_bitstr@plt+0x23455>
  439df5:	mov    0xcc(%rsp),%edx
  439dfc:	lea    -0x1(%rdx),%r12d
  439e00:	test   %r12d,%r12d
  439e03:	mov    %r12d,0xcc(%rsp)
  439e0b:	jle    437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  439e11:	mov    0x8(%rax),%rdx
  439e15:	add    $0x8,%rax
  439e19:	mov    %rdx,0x241580(%rip)        # 67b3a0 <_edata+0x698>
  439e20:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439e25:	lea    0x243d5(%rip),%rdi        # 45e201 <_fini+0xcfd>
  439e2c:	mov    $0x6,%ecx
  439e31:	mov    %rdx,%rsi
  439e34:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439e36:	jne    439e66 <X509_get0_pubkey_bitstr@plt+0x23496>
  439e38:	mov    0xcc(%rsp),%edx
  439e3f:	lea    -0x1(%rdx),%r12d
  439e43:	test   %r12d,%r12d
  439e46:	mov    %r12d,0xcc(%rsp)
  439e4e:	jle    437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  439e54:	mov    0x8(%rax),%rdx
  439e58:	add    $0x8,%rax
  439e5c:	mov    %rdx,0x58(%rsp)
  439e61:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439e66:	lea    0x2e7bb(%rip),%rdi        # 468628 <_fini+0xb124>
  439e6d:	mov    $0xc,%ecx
  439e72:	mov    %rdx,%rsi
  439e75:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439e77:	jne    439eaa <X509_get0_pubkey_bitstr@plt+0x234da>
  439e79:	mov    0xcc(%rsp),%edx
  439e80:	lea    -0x1(%rdx),%r12d
  439e84:	test   %r12d,%r12d
  439e87:	mov    %r12d,0xcc(%rsp)
  439e8f:	jle    437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  439e95:	mov    0x8(%rax),%rdx
  439e99:	add    $0x8,%rax
  439e9d:	mov    %rdx,0x100(%rsp)
  439ea5:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439eaa:	lea    0x2e783(%rip),%rdi        # 468634 <_fini+0xb130>
  439eb1:	mov    $0x12,%ecx
  439eb6:	mov    %rdx,%rsi
  439eb9:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439ebb:	jne    439ed5 <X509_get0_pubkey_bitstr@plt+0x23505>
  439ebd:	movl   $0x2,0x110(%rsp)
  439ec8:	mov    0xcc(%rsp),%r12d
  439ed0:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439ed5:	lea    0x2e76a(%rip),%rdi        # 468646 <_fini+0xb142>
  439edc:	mov    $0x7,%ecx
  439ee1:	mov    %rdx,%rsi
  439ee4:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439ee6:	jne    439f18 <X509_get0_pubkey_bitstr@plt+0x23548>
  439ee8:	mov    0xcc(%rsp),%edx
  439eef:	lea    -0x1(%rdx),%r12d
  439ef3:	test   %r12d,%r12d
  439ef6:	mov    %r12d,0xcc(%rsp)
  439efe:	jle    437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  439f04:	mov    0x8(%rax),%rdx
  439f08:	add    $0x8,%rax
  439f0c:	mov    %rdx,0x23f18d(%rip)        # 6790a0 <_fini+0x21bb9c>
  439f13:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439f18:	lea    0x2e72e(%rip),%rdi        # 46864d <_fini+0xb149>
  439f1f:	mov    $0x6,%ecx
  439f24:	mov    %rdx,%rsi
  439f27:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439f29:	jne    439f5b <X509_get0_pubkey_bitstr@plt+0x2358b>
  439f2b:	mov    0xcc(%rsp),%edx
  439f32:	lea    -0x1(%rdx),%r12d
  439f36:	test   %r12d,%r12d
  439f39:	mov    %r12d,0xcc(%rsp)
  439f41:	jle    437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  439f47:	mov    0x8(%rax),%rdx
  439f4b:	add    $0x8,%rax
  439f4f:	mov    %rdx,0x2414b2(%rip)        # 67b408 <_edata+0x700>
  439f56:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439f5b:	lea    0x2e6f1(%rip),%rdi        # 468653 <_fini+0xb14f>
  439f62:	mov    $0xe,%ecx
  439f67:	mov    %rdx,%rsi
  439f6a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439f6c:	jne    439f9c <X509_get0_pubkey_bitstr@plt+0x235cc>
  439f6e:	mov    0xcc(%rsp),%edx
  439f75:	lea    -0x1(%rdx),%r12d
  439f79:	test   %r12d,%r12d
  439f7c:	mov    %r12d,0xcc(%rsp)
  439f84:	jle    437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  439f8a:	mov    0x8(%rax),%rdx
  439f8e:	add    $0x8,%rax
  439f92:	mov    %rdx,0x68(%rsp)
  439f97:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439f9c:	lea    0x2e6be(%rip),%rdi        # 468661 <_fini+0xb15d>
  439fa3:	mov    $0xa,%ecx
  439fa8:	mov    %rdx,%rsi
  439fab:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439fad:	jne    439fdf <X509_get0_pubkey_bitstr@plt+0x2360f>
  439faf:	mov    0xcc(%rsp),%edx
  439fb6:	lea    -0x1(%rdx),%r12d
  439fba:	test   %r12d,%r12d
  439fbd:	mov    %r12d,0xcc(%rsp)
  439fc5:	jle    437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  439fcb:	mov    0x8(%rax),%rdx
  439fcf:	add    $0x8,%rax
  439fd3:	mov    %rdx,0x241396(%rip)        # 67b370 <_edata+0x668>
  439fda:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  439fdf:	lea    0x2e685(%rip),%rdi        # 46866b <_fini+0xb167>
  439fe6:	mov    $0xe,%ecx
  439feb:	mov    %rdx,%rsi
  439fee:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  439ff0:	jne    43a022 <X509_get0_pubkey_bitstr@plt+0x23652>
  439ff2:	mov    0xcc(%rsp),%edx
  439ff9:	lea    -0x1(%rdx),%r12d
  439ffd:	test   %r12d,%r12d
  43a000:	mov    %r12d,0xcc(%rsp)
  43a008:	jle    437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  43a00e:	mov    0x8(%rax),%rdx
  43a012:	add    $0x8,%rax
  43a016:	mov    %rdx,0x241393(%rip)        # 67b3b0 <_edata+0x6a8>
  43a01d:	jmpq   437920 <X509_get0_pubkey_bitstr@plt+0x20f50>
  43a022:	lea    0x2e650(%rip),%rdi        # 468679 <_fini+0xb175>
  43a029:	mov    $0x11,%ecx
  43a02e:	mov    %rdx,%rsi
  43a031:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43a033:	jne    43a07d <X509_get0_pubkey_bitstr@plt+0x236ad>
  43a035:	mov    0xcc(%rsp),%edx
  43a03c:	sub    $0x1,%edx
  43a03f:	test   %edx,%edx
  43a041:	mov    %edx,0xcc(%rsp)
  43a048:	jle    437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  43a04e:	lea    0x8(%rax),%rdx
  43a052:	mov    0x8(%rax),%rdi
  43a056:	xor    %esi,%esi
  43a058:	mov    %rdx,0xc0(%rsp)
  43a060:	mov    $0xa,%edx
  43a065:	callq  4155d0 <strtol@plt>
  43a06a:	test   %eax,%eax
  43a06c:	mov    %eax,0x23f01e(%rip)        # 679090 <_fini+0x21bb8c>
  43a072:	jne    43790f <X509_get0_pubkey_bitstr@plt+0x20f3f>
  43a078:	jmpq   437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  43a07d:	mov    (%rbx),%rdi
  43a080:	lea    0x23ca5(%rip),%rsi        # 45dd2c <_fini+0x828>
  43a087:	xor    %eax,%eax
  43a089:	callq  413c40 <BIO_printf@plt>
  43a08e:	jmpq   437a70 <X509_get0_pubkey_bitstr@plt+0x210a0>
  43a093:	nopw   %cs:0x0(%rax,%rax,1)
  43a09d:	nopl   (%rax)
  43a0a0:	push   %r12
  43a0a2:	xor    %edx,%edx
  43a0a4:	push   %rbp
  43a0a5:	push   %rbx
  43a0a6:	mov    %rsi,%rbx
  43a0a9:	mov    $0x46,%esi
  43a0ae:	sub    $0x10,%rsp
  43a0b2:	mov    %rsp,%rcx
  43a0b5:	mov    %fs:0x28,%rax
  43a0be:	mov    %rax,0x8(%rsp)
  43a0c3:	xor    %eax,%eax
  43a0c5:	callq  4162b0 <SSL_ctrl@plt>
  43a0ca:	lea    0x2e6b7(%rip),%rsi        # 468788 <_fini+0xb284>
  43a0d1:	mov    %rbx,%rdi
  43a0d4:	mov    %rax,%r12
  43a0d7:	callq  413b70 <BIO_puts@plt>
  43a0dc:	cmpq   $0x0,(%rsp)
  43a0e1:	je     43a150 <X509_get0_pubkey_bitstr@plt+0x23780>
  43a0e3:	xor    %edi,%edi
  43a0e5:	movslq %r12d,%rdx
  43a0e8:	mov    %rsp,%rsi
  43a0eb:	callq  414770 <d2i_OCSP_RESPONSE@plt>
  43a0f0:	test   %rax,%rax
  43a0f3:	mov    %rax,%rbp
  43a0f6:	je     43a170 <X509_get0_pubkey_bitstr@plt+0x237a0>
  43a0f8:	lea    0x2ea39(%rip),%rsi        # 468b38 <_fini+0xb634>
  43a0ff:	mov    %rbx,%rdi
  43a102:	callq  413b70 <BIO_puts@plt>
  43a107:	xor    %edx,%edx
  43a109:	mov    %rbp,%rsi
  43a10c:	mov    %rbx,%rdi
  43a10f:	callq  4131a0 <OCSP_RESPONSE_print@plt>
  43a114:	lea    0x2ea4d(%rip),%rsi        # 468b68 <_fini+0xb664>
  43a11b:	mov    %rbx,%rdi
  43a11e:	callq  413b70 <BIO_puts@plt>
  43a123:	mov    %rbp,%rdi
  43a126:	callq  412e30 <OCSP_RESPONSE_free@plt>
  43a12b:	mov    $0x1,%eax
  43a130:	mov    0x8(%rsp),%rcx
  43a135:	xor    %fs:0x28,%rcx
  43a13e:	jne    43a197 <X509_get0_pubkey_bitstr@plt+0x237c7>
  43a140:	add    $0x10,%rsp
  43a144:	pop    %rbx
  43a145:	pop    %rbp
  43a146:	pop    %r12
  43a148:	retq   
  43a149:	nopl   0x0(%rax)
  43a150:	lea    0x2e641(%rip),%rsi        # 468798 <_fini+0xb294>
  43a157:	mov    %rbx,%rdi
  43a15a:	callq  413b70 <BIO_puts@plt>
  43a15f:	mov    $0x1,%eax
  43a164:	jmp    43a130 <X509_get0_pubkey_bitstr@plt+0x23760>
  43a166:	nopw   %cs:0x0(%rax,%rax,1)
  43a170:	lea    0x2e633(%rip),%rsi        # 4687aa <_fini+0xb2a6>
  43a177:	mov    %rbx,%rdi
  43a17a:	callq  413b70 <BIO_puts@plt>
  43a17f:	mov    (%rsp),%rsi
  43a183:	mov    $0x4,%ecx
  43a188:	mov    %r12d,%edx
  43a18b:	mov    %rbx,%rdi
  43a18e:	callq  414490 <BIO_dump_indent@plt>
  43a193:	xor    %eax,%eax
  43a195:	jmp    43a130 <X509_get0_pubkey_bitstr@plt+0x23760>
  43a197:	callq  414c30 <__stack_chk_fail@plt>
  43a19c:	nopl   0x0(%rax)
  43a1a0:	push   %r15
  43a1a2:	mov    %rdx,%r15
  43a1a5:	push   %r14
  43a1a7:	push   %r13
  43a1a9:	mov    %r9,%r13
  43a1ac:	push   %r12
  43a1ae:	mov    %r8d,%r12d
  43a1b1:	push   %rbp
  43a1b2:	mov    %rcx,%rbp
  43a1b5:	push   %rbx
  43a1b6:	sub    $0x18,%rsp
  43a1ba:	mov    0x241294(%rip),%eax        # 67b454 <_edata+0x74c>
  43a1c0:	mov    %rsi,0x8(%rsp)
  43a1c5:	test   %eax,%eax
  43a1c7:	je     43a200 <X509_get0_pubkey_bitstr@plt+0x23830>
  43a1c9:	movzwl 0x8(%r13),%r9d
  43a1ce:	mov    0x0(%r13),%r8
  43a1d2:	mov    %r12d,%ecx
  43a1d5:	mov    0x8(%rsp),%rdi
  43a1da:	mov    %rbp,%rdx
  43a1dd:	mov    %r15,%rsi
  43a1e0:	callq  415eb0 <SSL_select_next_proto@plt>
  43a1e5:	mov    %eax,0xc(%r13)
  43a1e9:	add    $0x18,%rsp
  43a1ed:	xor    %eax,%eax
  43a1ef:	pop    %rbx
  43a1f0:	pop    %rbp
  43a1f1:	pop    %r12
  43a1f3:	pop    %r13
  43a1f5:	pop    %r14
  43a1f7:	pop    %r15
  43a1f9:	retq   
  43a1fa:	nopw   0x0(%rax,%rax,1)
  43a200:	mov    0x241251(%rip),%rdi        # 67b458 <_edata+0x750>
  43a207:	lea    0x2e982(%rip),%rsi        # 468b90 <_fini+0xb68c>
  43a20e:	xor    %eax,%eax
  43a210:	xor    %ebx,%ebx
  43a212:	callq  413c40 <BIO_printf@plt>
  43a217:	test   %r12d,%r12d
  43a21a:	je     43a270 <X509_get0_pubkey_bitstr@plt+0x238a0>
  43a21c:	nopl   0x0(%rax)
  43a220:	mov    %ebx,%ecx
  43a222:	lea    0x1(%rbx),%esi
  43a225:	mov    0x24122c(%rip),%rdi        # 67b458 <_edata+0x750>
  43a22c:	lea    0x0(%rbp,%rcx,1),%r14
  43a231:	add    %rbp,%rsi
  43a234:	movzbl (%r14),%edx
  43a238:	callq  412db0 <BIO_write@plt>
  43a23d:	movzbl (%r14),%eax
  43a241:	lea    0x1(%rbx,%rax,1),%ebx
  43a245:	cmp    %ebx,%r12d
  43a248:	jbe    43a270 <X509_get0_pubkey_bitstr@plt+0x238a0>
  43a24a:	test   %ebx,%ebx
  43a24c:	je     43a220 <X509_get0_pubkey_bitstr@plt+0x23850>
  43a24e:	mov    0x241203(%rip),%rdi        # 67b458 <_edata+0x750>
  43a255:	lea    0x2dff4(%rip),%rsi        # 468250 <_fini+0xad4c>
  43a25c:	mov    $0x2,%edx
  43a261:	callq  412db0 <BIO_write@plt>
  43a266:	jmp    43a220 <X509_get0_pubkey_bitstr@plt+0x23850>
  43a268:	nopl   0x0(%rax,%rax,1)
  43a270:	mov    0x2411e1(%rip),%rdi        # 67b458 <_edata+0x750>
  43a277:	lea    0x2a921(%rip),%rsi        # 464b9f <_fini+0x769b>
  43a27e:	mov    $0x1,%edx
  43a283:	callq  412db0 <BIO_write@plt>
  43a288:	jmpq   43a1c9 <X509_get0_pubkey_bitstr@plt+0x237f9>
  43a28d:	nopl   (%rax)
  43a290:	push   %r14
  43a292:	push   %r13
  43a294:	mov    %r8,%r13
  43a297:	push   %r12
  43a299:	mov    %r9d,%r12d
  43a29c:	push   %rbp
  43a29d:	mov    %rdx,%rbp
  43a2a0:	push   %rbx
  43a2a1:	mov    %ecx,%ebx
  43a2a3:	sub    $0x10,%rsp
  43a2a7:	mov    0x2411cb(%rip),%edi        # 67b478 <_edata+0x770>
  43a2ad:	mov    %fs:0x28,%rax
  43a2b6:	mov    %rax,0x8(%rsp)
  43a2bb:	xor    %eax,%eax
  43a2bd:	movq   $0x0,(%rsp)
  43a2c5:	test   %edi,%edi
  43a2c7:	jne    43a410 <X509_get0_pubkey_bitstr@plt+0x23a40>
  43a2cd:	mov    0x23ede4(%rip),%rcx        # 6790b8 <_fini+0x21bbb4>
  43a2d4:	lea    0x30889(%rip),%rdx        # 46ab64 <_fini+0xd660>
  43a2db:	xor    %eax,%eax
  43a2dd:	mov    %ebx,%esi
  43a2df:	mov    %rbp,%rdi
  43a2e2:	callq  412fc0 <BIO_snprintf@plt>
  43a2e7:	cmp    %ebx,%eax
  43a2e9:	ja     43a2f4 <X509_get0_pubkey_bitstr@plt+0x23924>
  43a2eb:	mov    %eax,%edx
  43a2ed:	shr    $0x1f,%edx
  43a2f0:	test   %dl,%dl
  43a2f2:	je     43a330 <X509_get0_pubkey_bitstr@plt+0x23960>
  43a2f4:	mov    0x24117e(%rip),%eax        # 67b478 <_edata+0x770>
  43a2fa:	test   %eax,%eax
  43a2fc:	jne    43a3f0 <X509_get0_pubkey_bitstr@plt+0x23a20>
  43a302:	xor    %ebx,%ebx
  43a304:	mov    0x8(%rsp),%rcx
  43a309:	xor    %fs:0x28,%rcx
  43a312:	mov    %ebx,%eax
  43a314:	jne    43a4e2 <X509_get0_pubkey_bitstr@plt+0x23b12>
  43a31a:	add    $0x10,%rsp
  43a31e:	pop    %rbx
  43a31f:	pop    %rbp
  43a320:	pop    %r12
  43a322:	pop    %r13
  43a324:	pop    %r14
  43a326:	retq   
  43a327:	nopw   0x0(%rax,%rax,1)
  43a330:	mov    0x241142(%rip),%ecx        # 67b478 <_edata+0x770>
  43a336:	test   %ecx,%ecx
  43a338:	jne    43a460 <X509_get0_pubkey_bitstr@plt+0x23a90>
  43a33e:	lea    0x24100b(%rip),%rbx        # 67b350 <_edata+0x648>
  43a345:	mov    %rsp,%rdi
  43a348:	mov    (%rbx),%rsi
  43a34b:	callq  413030 <BN_hex2bn@plt>
  43a350:	test   %eax,%eax
  43a352:	jne    43a388 <X509_get0_pubkey_bitstr@plt+0x239b8>
  43a354:	lea    0x2409e5(%rip),%rax        # 67ad40 <_edata+0x38>
  43a35b:	mov    (%rbx),%rdx
  43a35e:	lea    0x2c7bb(%rip),%rsi        # 466b20 <_fini+0x961c>
  43a365:	mov    (%rax),%rdi
  43a368:	xor    %eax,%eax
  43a36a:	callq  413c40 <BIO_printf@plt>
  43a36f:	mov    (%rsp),%rdi
  43a373:	test   %rdi,%rdi
  43a376:	je     43a302 <X509_get0_pubkey_bitstr@plt+0x23932>
  43a378:	callq  4138e0 <BN_free@plt>
  43a37d:	xor    %ebx,%ebx
  43a37f:	jmp    43a304 <X509_get0_pubkey_bitstr@plt+0x23934>
  43a381:	nopl   0x0(%rax)
  43a388:	mov    (%rsp),%rdi
  43a38c:	callq  415810 <BN_num_bits@plt>
  43a391:	lea    0xe(%rax),%edx
  43a394:	add    $0x7,%eax
  43a397:	cmovs  %edx,%eax
  43a39a:	sar    $0x3,%eax
  43a39d:	cmp    %r12d,%eax
  43a3a0:	ja     43a480 <X509_get0_pubkey_bitstr@plt+0x23ab0>
  43a3a6:	mov    (%rsp),%rdi
  43a3aa:	mov    %r13,%rsi
  43a3ad:	callq  413390 <BN_bn2bin@plt>
  43a3b2:	mov    (%rsp),%rdi
  43a3b6:	mov    %eax,%ebx
  43a3b8:	callq  4138e0 <BN_free@plt>
  43a3bd:	test   %ebx,%ebx
  43a3bf:	je     43a2f4 <X509_get0_pubkey_bitstr@plt+0x23924>
  43a3c5:	mov    0x2410ad(%rip),%edx        # 67b478 <_edata+0x770>
  43a3cb:	test   %edx,%edx
  43a3cd:	je     43a304 <X509_get0_pubkey_bitstr@plt+0x23934>
  43a3d3:	mov    0x24107e(%rip),%rdi        # 67b458 <_edata+0x750>
  43a3da:	lea    0x2e40c(%rip),%rsi        # 4687ed <_fini+0xb2e9>
  43a3e1:	mov    %ebx,%edx
  43a3e3:	xor    %eax,%eax
  43a3e5:	callq  413c40 <BIO_printf@plt>
  43a3ea:	jmpq   43a304 <X509_get0_pubkey_bitstr@plt+0x23934>
  43a3ef:	nop
  43a3f0:	lea    0x240949(%rip),%rax        # 67ad40 <_edata+0x38>
  43a3f7:	lea    0x2e403(%rip),%rsi        # 468801 <_fini+0xb2fd>
  43a3fe:	mov    (%rax),%rdi
  43a401:	xor    %eax,%eax
  43a403:	callq  413c40 <BIO_printf@plt>
  43a408:	jmpq   43a302 <X509_get0_pubkey_bitstr@plt+0x23932>
  43a40d:	nopl   (%rax)
  43a410:	mov    0x241041(%rip),%rdi        # 67b458 <_edata+0x750>
  43a417:	mov    %rsi,%r14
  43a41a:	lea    0x2e39f(%rip),%rsi        # 4687c0 <_fini+0xb2bc>
  43a421:	callq  413c40 <BIO_printf@plt>
  43a426:	test   %r14,%r14
  43a429:	mov    0x241049(%rip),%eax        # 67b478 <_edata+0x770>
  43a42f:	je     43a4c0 <X509_get0_pubkey_bitstr@plt+0x23af0>
  43a435:	test   %eax,%eax
  43a437:	je     43a2cd <X509_get0_pubkey_bitstr@plt+0x238fd>
  43a43d:	mov    0x241014(%rip),%rdi        # 67b458 <_edata+0x750>
  43a444:	lea    0x2e7a5(%rip),%rsi        # 468bf0 <_fini+0xb6ec>
  43a44b:	mov    %r14,%rdx
  43a44e:	xor    %eax,%eax
  43a450:	callq  413c40 <BIO_printf@plt>
  43a455:	jmpq   43a2cd <X509_get0_pubkey_bitstr@plt+0x238fd>
  43a45a:	nopw   0x0(%rax,%rax,1)
  43a460:	mov    0x240ff1(%rip),%rdi        # 67b458 <_edata+0x750>
  43a467:	lea    0x2e361(%rip),%rsi        # 4687cf <_fini+0xb2cb>
  43a46e:	mov    %eax,%ecx
  43a470:	mov    %rbp,%rdx
  43a473:	xor    %eax,%eax
  43a475:	callq  413c40 <BIO_printf@plt>
  43a47a:	jmpq   43a33e <X509_get0_pubkey_bitstr@plt+0x2396e>
  43a47f:	nop
  43a480:	mov    (%rsp),%rdi
  43a484:	callq  415810 <BN_num_bits@plt>
  43a489:	lea    0xe(%rax),%ecx
  43a48c:	add    $0x7,%eax
  43a48f:	lea    0x2c6ba(%rip),%rsi        # 466b50 <_fini+0x964c>
  43a496:	mov    %r12d,%edx
  43a499:	cmovns %eax,%ecx
  43a49c:	lea    0x24089d(%rip),%rax        # 67ad40 <_edata+0x38>
  43a4a3:	sar    $0x3,%ecx
  43a4a6:	mov    (%rax),%rdi
  43a4a9:	xor    %eax,%eax
  43a4ab:	callq  413c40 <BIO_printf@plt>
  43a4b0:	mov    (%rsp),%rdi
  43a4b4:	jmpq   43a378 <X509_get0_pubkey_bitstr@plt+0x239a8>
  43a4b9:	nopl   0x0(%rax)
  43a4c0:	test   %eax,%eax
  43a4c2:	je     43a2cd <X509_get0_pubkey_bitstr@plt+0x238fd>
  43a4c8:	mov    0x240f89(%rip),%rdi        # 67b458 <_edata+0x750>
  43a4cf:	lea    0x2e6e2(%rip),%rsi        # 468bb8 <_fini+0xb6b4>
  43a4d6:	xor    %eax,%eax
  43a4d8:	callq  413c40 <BIO_printf@plt>
  43a4dd:	jmpq   43a2cd <X509_get0_pubkey_bitstr@plt+0x238fd>
  43a4e2:	callq  414c30 <__stack_chk_fail@plt>
  43a4e7:	nopw   0x0(%rax,%rax,1)
  43a4f0:	push   %r15
  43a4f2:	push   %r14
  43a4f4:	push   %r13
  43a4f6:	push   %r12
  43a4f8:	xor    %r12d,%r12d
  43a4fb:	push   %rbp
  43a4fc:	mov    %rsi,%rbp
  43a4ff:	push   %rbx
  43a500:	mov    %rdi,%rbx
  43a503:	sub    $0x2038,%rsp
  43a50a:	mov    %fs:0x28,%rax
  43a513:	mov    %rax,0x2028(%rsp)
  43a51b:	xor    %eax,%eax
  43a51d:	test   %edx,%edx
  43a51f:	jne    43a800 <X509_get0_pubkey_bitstr@plt+0x23e30>
  43a525:	mov    %rbp,%rdi
  43a528:	callq  412dc0 <SSL_cache_hit@plt>
  43a52d:	lea    0x2dd12(%rip),%rsi        # 468246 <_fini+0xad42>
  43a534:	test   %eax,%eax
  43a536:	lea    0x2dd16(%rip),%rax        # 468253 <_fini+0xad4f>
  43a53d:	mov    %rbx,%rdi
  43a540:	cmove  %rax,%rsi
  43a544:	xor    %eax,%eax
  43a546:	callq  413c40 <BIO_printf@plt>
  43a54b:	mov    %rbp,%rdi
  43a54e:	callq  413050 <SSL_get_current_cipher@plt>
  43a553:	mov    %rax,%r13
  43a556:	mov    %rax,%rdi
  43a559:	callq  415410 <SSL_CIPHER_get_name@plt>
  43a55e:	mov    %r13,%rdi
  43a561:	mov    %rax,%r14
  43a564:	callq  4148d0 <SSL_CIPHER_get_version@plt>
  43a569:	lea    0x2dd3a(%rip),%rsi        # 4682aa <_fini+0xada6>
  43a570:	mov    %rax,%rdx
  43a573:	mov    %r14,%rcx
  43a576:	xor    %eax,%eax
  43a578:	mov    %rbx,%rdi
  43a57b:	callq  413c40 <BIO_printf@plt>
  43a580:	test   %r12,%r12
  43a583:	je     43a5b3 <X509_get0_pubkey_bitstr@plt+0x23be3>
  43a585:	mov    %r12,%rdi
  43a588:	callq  4161b0 <X509_get_pubkey@plt>
  43a58d:	mov    %rax,%rdi
  43a590:	mov    %rax,%r13
  43a593:	callq  415370 <EVP_PKEY_bits@plt>
  43a598:	lea    0x2e2be(%rip),%rsi        # 46885d <_fini+0xb359>
  43a59f:	mov    %eax,%edx
  43a5a1:	mov    %rbx,%rdi
  43a5a4:	xor    %eax,%eax
  43a5a6:	callq  413c40 <BIO_printf@plt>
  43a5ab:	mov    %r13,%rdi
  43a5ae:	callq  412b00 <EVP_PKEY_free@plt>
  43a5b3:	xor    %ecx,%ecx
  43a5b5:	xor    %edx,%edx
  43a5b7:	mov    $0x4c,%esi
  43a5bc:	mov    %rbp,%rdi
  43a5bf:	callq  4162b0 <SSL_ctrl@plt>
  43a5c4:	lea    0x257f7(%rip),%rdx        # 45fdc2 <_fini+0x28be>
  43a5cb:	test   %rax,%rax
  43a5ce:	lea    0x2da81(%rip),%rax        # 468056 <_fini+0xab52>
  43a5d5:	lea    0x2c364(%rip),%rsi        # 466940 <_fini+0x943c>
  43a5dc:	mov    %rbx,%rdi
  43a5df:	cmove  %rax,%rdx
  43a5e3:	xor    %eax,%eax
  43a5e5:	callq  413c40 <BIO_printf@plt>
  43a5ea:	mov    %rbp,%rdi
  43a5ed:	callq  4134f0 <SSL_get_current_compression@plt>
  43a5f2:	mov    %rbp,%rdi
  43a5f5:	mov    %rax,%r14
  43a5f8:	callq  416260 <SSL_get_current_expansion@plt>
  43a5fd:	test   %r14,%r14
  43a600:	mov    %rax,%r13
  43a603:	lea    0x2876a(%rip),%rdx        # 462d74 <_fini+0x5870>
  43a60a:	je     43a617 <X509_get0_pubkey_bitstr@plt+0x23c47>
  43a60c:	mov    %r14,%rdi
  43a60f:	callq  414db0 <SSL_COMP_get_name@plt>
  43a614:	mov    %rax,%rdx
  43a617:	lea    0x2e25c(%rip),%rsi        # 46887a <_fini+0xb376>
  43a61e:	xor    %eax,%eax
  43a620:	mov    %rbx,%rdi
  43a623:	callq  413c40 <BIO_printf@plt>
  43a628:	test   %r13,%r13
  43a62b:	lea    0x28742(%rip),%rdx        # 462d74 <_fini+0x5870>
  43a632:	je     43a63f <X509_get0_pubkey_bitstr@plt+0x23c6f>
  43a634:	mov    %r13,%rdi
  43a637:	callq  414db0 <SSL_COMP_get_name@plt>
  43a63c:	mov    %rax,%rdx
  43a63f:	lea    0x2e245(%rip),%rsi        # 46888b <_fini+0xb387>
  43a646:	xor    %eax,%eax
  43a648:	mov    %rbx,%rdi
  43a64b:	callq  413c40 <BIO_printf@plt>
  43a650:	cmpl   $0xffffffff,0x240df5(%rip)        # 67b44c <_edata+0x744>
  43a657:	je     43a6a7 <X509_get0_pubkey_bitstr@plt+0x23cd7>
  43a659:	lea    0x14(%rsp),%rdx
  43a65e:	lea    0x18(%rsp),%rsi
  43a663:	mov    %rbp,%rdi
  43a666:	callq  4128f0 <SSL_get0_next_proto_negotiated@plt>
  43a66b:	mov    0x240ddb(%rip),%edx        # 67b44c <_edata+0x744>
  43a671:	lea    0x2e222(%rip),%rsi        # 46889a <_fini+0xb396>
  43a678:	mov    %rbx,%rdi
  43a67b:	xor    %eax,%eax
  43a67d:	callq  413c40 <BIO_printf@plt>
  43a682:	mov    0x14(%rsp),%edx
  43a686:	mov    0x18(%rsp),%rsi
  43a68b:	mov    %rbx,%rdi
  43a68e:	callq  412db0 <BIO_write@plt>
  43a693:	lea    0x2a505(%rip),%rsi        # 464b9f <_fini+0x769b>
  43a69a:	mov    $0x1,%edx
  43a69f:	mov    %rbx,%rdi
  43a6a2:	callq  412db0 <BIO_write@plt>
  43a6a7:	mov    %rbp,%rdi
  43a6aa:	callq  413d70 <SSL_get_selected_srtp_profile@plt>
  43a6af:	test   %rax,%rax
  43a6b2:	je     43a6c8 <X509_get0_pubkey_bitstr@plt+0x23cf8>
  43a6b4:	mov    (%rax),%rdx
  43a6b7:	lea    0x2c212(%rip),%rsi        # 4668d0 <_fini+0x93cc>
  43a6be:	mov    %rbx,%rdi
  43a6c1:	xor    %eax,%eax
  43a6c3:	callq  413c40 <BIO_printf@plt>
  43a6c8:	mov    %rbp,%rdi
  43a6cb:	callq  416670 <SSL_get_session@plt>
  43a6d0:	mov    %rbx,%rdi
  43a6d3:	mov    %rax,%rsi
  43a6d6:	callq  416020 <SSL_SESSION_print@plt>
  43a6db:	cmpq   $0x0,0x240d7d(%rip)        # 67b460 <_edata+0x758>
  43a6e3:	je     43a7a1 <X509_get0_pubkey_bitstr@plt+0x23dd1>
  43a6e9:	lea    0x2d9f7(%rip),%rsi        # 4680e7 <_fini+0xabe3>
  43a6f0:	mov    %rbx,%rdi
  43a6f3:	xor    %eax,%eax
  43a6f5:	callq  413c40 <BIO_printf@plt>
  43a6fa:	mov    0x240d5f(%rip),%rdx        # 67b460 <_edata+0x758>
  43a701:	lea    0x2d9fa(%rip),%rsi        # 468102 <_fini+0xabfe>
  43a708:	mov    %rbx,%rdi
  43a70b:	xor    %eax,%eax
  43a70d:	callq  413c40 <BIO_printf@plt>
  43a712:	mov    0x23e998(%rip),%edx        # 6790b0 <_fini+0x21bbac>
  43a718:	lea    0x2d9f4(%rip),%rsi        # 468113 <_fini+0xac0f>
  43a71f:	mov    %rbx,%rdi
  43a722:	xor    %eax,%eax
  43a724:	callq  413c40 <BIO_printf@plt>
  43a729:	mov    0x23e981(%rip),%edi        # 6790b0 <_fini+0x21bbac>
  43a72f:	lea    0x2e179(%rip),%rsi        # 4688af <_fini+0xb3ab>
  43a736:	mov    $0x841,%edx
  43a73b:	callq  413d50 <CRYPTO_malloc@plt>
  43a740:	test   %rax,%rax
  43a743:	mov    %rax,%r13
  43a746:	je     43a7a1 <X509_get0_pubkey_bitstr@plt+0x23dd1>
  43a748:	mov    0x240d11(%rip),%r14        # 67b460 <_edata+0x758>
  43a74f:	mov    %r14,%rdi
  43a752:	callq  413470 <strlen@plt>
  43a757:	movslq 0x23e952(%rip),%rdx        # 6790b0 <_fini+0x21bbac>
  43a75e:	xor    %r9d,%r9d
  43a761:	mov    %rax,%r8
  43a764:	movl   $0x0,0x8(%rsp)
  43a76c:	movq   $0x0,(%rsp)
  43a774:	mov    %r14,%rcx
  43a777:	mov    %r13,%rsi
  43a77a:	mov    %rbp,%rdi
  43a77d:	callq  413410 <SSL_export_keying_material@plt>
  43a782:	test   %eax,%eax
  43a784:	jne    43a8e0 <X509_get0_pubkey_bitstr@plt+0x23f10>
  43a78a:	lea    0x2d9a3(%rip),%rsi        # 468134 <_fini+0xac30>
  43a791:	mov    %rbx,%rdi
  43a794:	callq  413c40 <BIO_printf@plt>
  43a799:	mov    %r13,%rdi
  43a79c:	callq  415020 <CRYPTO_free@plt>
  43a7a1:	lea    0x23cbf(%rip),%rsi        # 45e467 <_fini+0xf63>
  43a7a8:	xor    %eax,%eax
  43a7aa:	mov    %rbx,%rdi
  43a7ad:	callq  413c40 <BIO_printf@plt>
  43a7b2:	test   %r12,%r12
  43a7b5:	je     43a7bf <X509_get0_pubkey_bitstr@plt+0x23def>
  43a7b7:	mov    %r12,%rdi
  43a7ba:	callq  4153a0 <X509_free@plt>
  43a7bf:	xor    %ecx,%ecx
  43a7c1:	xor    %edx,%edx
  43a7c3:	mov    $0xb,%esi
  43a7c8:	mov    %rbx,%rdi
  43a7cb:	callq  412af0 <BIO_ctrl@plt>
  43a7d0:	mov    0x2028(%rsp),%rax
  43a7d8:	xor    %fs:0x28,%rax
  43a7e1:	jne    43ac66 <X509_get0_pubkey_bitstr@plt+0x24296>
  43a7e7:	add    $0x2038,%rsp
  43a7ee:	pop    %rbx
  43a7ef:	pop    %rbp
  43a7f0:	pop    %r12
  43a7f2:	pop    %r13
  43a7f4:	pop    %r14
  43a7f6:	pop    %r15
  43a7f8:	retq   
  43a7f9:	nopl   0x0(%rax)
  43a800:	mov    %rsi,%rdi
  43a803:	callq  412c30 <SSL_get_peer_cert_chain@plt>
  43a808:	test   %rax,%rax
  43a80b:	mov    %rax,%r14
  43a80e:	je     43ac40 <X509_get0_pubkey_bitstr@plt+0x24270>
  43a814:	lea    0x2e004(%rip),%rsi        # 46881f <_fini+0xb31b>
  43a81b:	mov    %rbx,%rdi
  43a81e:	xor    %eax,%eax
  43a820:	lea    0x20(%rsp),%r13
  43a825:	callq  413c40 <BIO_printf@plt>
  43a82a:	jmp    43a834 <X509_get0_pubkey_bitstr@plt+0x23e64>
  43a82c:	nopl   0x0(%rax)
  43a830:	add    $0x1,%r12d
  43a834:	mov    %r14,%rdi
  43a837:	callq  4156d0 <sk_num@plt>
  43a83c:	cmp    %eax,%r12d
  43a83f:	jge    43a940 <X509_get0_pubkey_bitstr@plt+0x23f70>
  43a845:	mov    %r12d,%esi
  43a848:	mov    %r14,%rdi
  43a84b:	callq  412b30 <sk_value@plt>
  43a850:	mov    %rax,%rdi
  43a853:	callq  414400 <X509_get_subject_name@plt>
  43a858:	mov    $0x2000,%edx
  43a85d:	mov    %r13,%rsi
  43a860:	mov    %rax,%rdi
  43a863:	callq  4139a0 <X509_NAME_oneline@plt>
  43a868:	lea    0x2dfc7(%rip),%rsi        # 468836 <_fini+0xb332>
  43a86f:	mov    %r13,%rcx
  43a872:	mov    %r12d,%edx
  43a875:	mov    %rbx,%rdi
  43a878:	xor    %eax,%eax
  43a87a:	callq  413c40 <BIO_printf@plt>
  43a87f:	mov    %r12d,%esi
  43a882:	mov    %r14,%rdi
  43a885:	callq  412b30 <sk_value@plt>
  43a88a:	mov    %rax,%rdi
  43a88d:	callq  412940 <X509_get_issuer_name@plt>
  43a892:	mov    $0x2000,%edx
  43a897:	mov    %r13,%rsi
  43a89a:	mov    %rax,%rdi
  43a89d:	callq  4139a0 <X509_NAME_oneline@plt>
  43a8a2:	lea    0x2df97(%rip),%rsi        # 468840 <_fini+0xb33c>
  43a8a9:	xor    %eax,%eax
  43a8ab:	mov    %r13,%rdx
  43a8ae:	mov    %rbx,%rdi
  43a8b1:	callq  413c40 <BIO_printf@plt>
  43a8b6:	mov    0x240bac(%rip),%ecx        # 67b468 <_edata+0x760>
  43a8bc:	test   %ecx,%ecx
  43a8be:	je     43a830 <X509_get0_pubkey_bitstr@plt+0x23e60>
  43a8c4:	mov    %r12d,%esi
  43a8c7:	mov    %r14,%rdi
  43a8ca:	callq  412b30 <sk_value@plt>
  43a8cf:	mov    %rbx,%rdi
  43a8d2:	mov    %rax,%rsi
  43a8d5:	callq  413490 <PEM_write_bio_X509@plt>
  43a8da:	jmpq   43a830 <X509_get0_pubkey_bitstr@plt+0x23e60>
  43a8df:	nop
  43a8e0:	lea    0x2d858(%rip),%rsi        # 46813f <_fini+0xac3b>
  43a8e7:	xor    %eax,%eax
  43a8e9:	mov    %rbx,%rdi
  43a8ec:	xor    %ebp,%ebp
  43a8ee:	callq  413c40 <BIO_printf@plt>
  43a8f3:	mov    0x23e7b7(%rip),%eax        # 6790b0 <_fini+0x21bbac>
  43a8f9:	test   %eax,%eax
  43a8fb:	jle    43a926 <X509_get0_pubkey_bitstr@plt+0x23f56>
  43a8fd:	nopl   (%rax)
  43a900:	movzbl 0x0(%r13,%rbp,1),%edx
  43a906:	lea    0x26493(%rip),%rsi        # 460da0 <_fini+0x389c>
  43a90d:	xor    %eax,%eax
  43a90f:	mov    %rbx,%rdi
  43a912:	callq  413c40 <BIO_printf@plt>
  43a917:	lea    0x1(%rbp),%edx
  43a91a:	add    $0x1,%rbp
  43a91e:	cmp    0x23e78c(%rip),%edx        # 6790b0 <_fini+0x21bbac>
  43a924:	jl     43a900 <X509_get0_pubkey_bitstr@plt+0x23f30>
  43a926:	lea    0x2a272(%rip),%rsi        # 464b9f <_fini+0x769b>
  43a92d:	mov    %rbx,%rdi
  43a930:	xor    %eax,%eax
  43a932:	callq  413c40 <BIO_printf@plt>
  43a937:	jmpq   43a799 <X509_get0_pubkey_bitstr@plt+0x23dc9>
  43a93c:	nopl   0x0(%rax)
  43a940:	mov    $0x1,%r14d
  43a946:	lea    0x23b1a(%rip),%rsi        # 45e467 <_fini+0xf63>
  43a94d:	mov    %rbx,%rdi
  43a950:	xor    %eax,%eax
  43a952:	callq  413c40 <BIO_printf@plt>
  43a957:	mov    %rbp,%rdi
  43a95a:	callq  416300 <SSL_get_peer_certificate@plt>
  43a95f:	test   %rax,%rax
  43a962:	mov    %rax,%r12
  43a965:	je     43ac50 <X509_get0_pubkey_bitstr@plt+0x24280>
  43a96b:	lea    0x2ded7(%rip),%rsi        # 468849 <_fini+0xb345>
  43a972:	xor    %eax,%eax
  43a974:	mov    %rbx,%rdi
  43a977:	callq  413c40 <BIO_printf@plt>
  43a97c:	mov    0x240ae6(%rip),%edx        # 67b468 <_edata+0x760>
  43a982:	test   %edx,%edx
  43a984:	je     43a98b <X509_get0_pubkey_bitstr@plt+0x23fbb>
  43a986:	test   %r14d,%r14d
  43a989:	jne    43a996 <X509_get0_pubkey_bitstr@plt+0x23fc6>
  43a98b:	mov    %r12,%rsi
  43a98e:	mov    %rbx,%rdi
  43a991:	callq  413490 <PEM_write_bio_X509@plt>
  43a996:	mov    %r12,%rdi
  43a999:	callq  414400 <X509_get_subject_name@plt>
  43a99e:	mov    $0x2000,%edx
  43a9a3:	mov    %r13,%rsi
  43a9a6:	mov    %rax,%rdi
  43a9a9:	callq  4139a0 <X509_NAME_oneline@plt>
  43a9ae:	lea    0x2d6d9(%rip),%rsi        # 46808e <_fini+0xab8a>
  43a9b5:	mov    %r13,%rdx
  43a9b8:	mov    %rbx,%rdi
  43a9bb:	xor    %eax,%eax
  43a9bd:	callq  413c40 <BIO_printf@plt>
  43a9c2:	mov    %r12,%rdi
  43a9c5:	callq  412940 <X509_get_issuer_name@plt>
  43a9ca:	mov    $0x2000,%edx
  43a9cf:	mov    %r13,%rsi
  43a9d2:	mov    %rax,%rdi
  43a9d5:	callq  4139a0 <X509_NAME_oneline@plt>
  43a9da:	lea    0x2d6b9(%rip),%rsi        # 46809a <_fini+0xab96>
  43a9e1:	mov    %r13,%rdx
  43a9e4:	mov    %rbx,%rdi
  43a9e7:	xor    %eax,%eax
  43a9e9:	callq  413c40 <BIO_printf@plt>
  43a9ee:	mov    %rbp,%rdi
  43a9f1:	callq  415700 <SSL_get_client_CA_list@plt>
  43a9f6:	test   %rax,%rax
  43a9f9:	mov    %rax,%r15
  43a9fc:	je     43ac20 <X509_get0_pubkey_bitstr@plt+0x24250>
  43aa02:	mov    %rax,%rdi
  43aa05:	callq  4156d0 <sk_num@plt>
  43aa0a:	test   %eax,%eax
  43aa0c:	jle    43ac20 <X509_get0_pubkey_bitstr@plt+0x24250>
  43aa12:	lea    0x2e21f(%rip),%rsi        # 468c38 <_fini+0xb734>
  43aa19:	mov    %rbx,%rdi
  43aa1c:	xor    %eax,%eax
  43aa1e:	xor    %r14d,%r14d
  43aa21:	callq  413c40 <BIO_printf@plt>
  43aa26:	mov    %r15,%rdi
  43aa29:	callq  4156d0 <sk_num@plt>
  43aa2e:	cmp    %eax,%r14d
  43aa31:	jge    43aac7 <X509_get0_pubkey_bitstr@plt+0x240f7>
  43aa37:	nopw   0x0(%rax,%rax,1)
  43aa40:	mov    %r14d,%esi
  43aa43:	mov    %r15,%rdi
  43aa46:	callq  412b30 <sk_value@plt>
  43aa4b:	mov    $0x2000,%edx
  43aa50:	mov    %r13,%rsi
  43aa53:	mov    %rax,%rdi
  43aa56:	callq  4139a0 <X509_NAME_oneline@plt>
  43aa5b:	mov    %r13,%rdx
  43aa5e:	mov    (%rdx),%ecx
  43aa60:	add    $0x4,%rdx
  43aa64:	lea    -0x1010101(%rcx),%eax
  43aa6a:	not    %ecx
  43aa6c:	and    %ecx,%eax
  43aa6e:	and    $0x80808080,%eax
  43aa73:	je     43aa5e <X509_get0_pubkey_bitstr@plt+0x2408e>
  43aa75:	mov    %eax,%ecx
  43aa77:	mov    %r13,%rsi
  43aa7a:	mov    %rbx,%rdi
  43aa7d:	shr    $0x10,%ecx
  43aa80:	test   $0x8080,%eax
  43aa85:	cmove  %ecx,%eax
  43aa88:	lea    0x2(%rdx),%rcx
  43aa8c:	cmove  %rcx,%rdx
  43aa90:	add    %al,%al
  43aa92:	sbb    $0x3,%rdx
  43aa96:	add    $0x1,%r14d
  43aa9a:	sub    %r13,%rdx
  43aa9d:	callq  412db0 <BIO_write@plt>
  43aaa2:	lea    0x2a0f6(%rip),%rsi        # 464b9f <_fini+0x769b>
  43aaa9:	mov    $0x1,%edx
  43aaae:	mov    %rbx,%rdi
  43aab1:	callq  412db0 <BIO_write@plt>
  43aab6:	mov    %r15,%rdi
  43aab9:	callq  4156d0 <sk_num@plt>
  43aabe:	cmp    %eax,%r14d
  43aac1:	jl     43aa40 <X509_get0_pubkey_bitstr@plt+0x24070>
  43aac7:	mov    $0x2000,%edx
  43aacc:	mov    %r13,%rsi
  43aacf:	mov    %rbp,%rdi
  43aad2:	callq  4140c0 <SSL_get_shared_ciphers@plt>
  43aad7:	test   %rax,%rax
  43aada:	mov    %rax,%r15
  43aadd:	je     43abd1 <X509_get0_pubkey_bitstr@plt+0x24201>
  43aae3:	lea    0x2e1ae(%rip),%rsi        # 468c98 <_fini+0xb794>
  43aaea:	xor    %eax,%eax
  43aaec:	mov    %rbx,%rdi
  43aaef:	xor    %r13d,%r13d
  43aaf2:	xor    %r14d,%r14d
  43aaf5:	callq  413c40 <BIO_printf@plt>
  43aafa:	movzbl (%r15),%edx
  43aafe:	test   %dl,%dl
  43ab00:	jne    43ab34 <X509_get0_pubkey_bitstr@plt+0x24164>
  43ab02:	jmpq   43abbd <X509_get0_pubkey_bitstr@plt+0x241ed>
  43ab07:	nopw   0x0(%rax,%rax,1)
  43ab10:	mov    %r15,%rsi
  43ab13:	mov    $0x1,%edx
  43ab18:	add    $0x1,%r15
  43ab1c:	mov    %rbx,%rdi
  43ab1f:	add    $0x1,%r14d
  43ab23:	callq  412db0 <BIO_write@plt>
  43ab28:	movzbl (%r15),%edx
  43ab2c:	test   %dl,%dl
  43ab2e:	je     43abbd <X509_get0_pubkey_bitstr@plt+0x241ed>
  43ab34:	cmp    $0x3a,%dl
  43ab37:	jne    43ab10 <X509_get0_pubkey_bitstr@plt+0x24140>
  43ab39:	mov    $0x51eb851f,%eax
  43ab3e:	mov    %r14d,%r8d
  43ab41:	lea    0x2d751(%rip),%rsi        # 468299 <_fini+0xad95>
  43ab48:	imul   %r14d
  43ab4b:	mov    %r14d,%eax
  43ab4e:	add    $0x1,%r13d
  43ab52:	sar    $0x1f,%eax
  43ab55:	mov    %rbx,%rdi
  43ab58:	sar    $0x3,%edx
  43ab5b:	sub    %eax,%edx
  43ab5d:	lea    (%rdx,%rdx,4),%eax
  43ab60:	mov    $0xf,%edx
  43ab65:	lea    (%rax,%rax,4),%eax
  43ab68:	sub    %eax,%r8d
  43ab6b:	sub    %r8d,%edx
  43ab6e:	callq  412db0 <BIO_write@plt>
  43ab73:	mov    %r13d,%eax
  43ab76:	mov    $0x55555556,%edx
  43ab7b:	lea    0x31021(%rip),%rsi        # 46bba3 <_fini+0xe69f>
  43ab82:	imul   %edx
  43ab84:	mov    %r13d,%eax
  43ab87:	mov    %rbx,%rdi
  43ab8a:	sar    $0x1f,%eax
  43ab8d:	sub    %eax,%edx
  43ab8f:	lea    (%rdx,%rdx,2),%eax
  43ab92:	mov    $0x1,%edx
  43ab97:	cmp    %eax,%r13d
  43ab9a:	lea    0x29ffe(%rip),%rax        # 464b9f <_fini+0x769b>
  43aba1:	cmove  %rax,%rsi
  43aba5:	add    $0x1,%r15
  43aba9:	xor    %r14d,%r14d
  43abac:	callq  412db0 <BIO_write@plt>
  43abb1:	movzbl (%r15),%edx
  43abb5:	test   %dl,%dl
  43abb7:	jne    43ab34 <X509_get0_pubkey_bitstr@plt+0x24164>
  43abbd:	lea    0x29fdb(%rip),%rsi        # 464b9f <_fini+0x769b>
  43abc4:	mov    $0x1,%edx
  43abc9:	mov    %rbx,%rdi
  43abcc:	callq  412db0 <BIO_write@plt>
  43abd1:	mov    %rbp,%rsi
  43abd4:	mov    %rbx,%rdi
  43abd7:	callq  448fe0 <X509_get0_pubkey_bitstr@plt+0x32610>
  43abdc:	mov    %rbp,%rdi
  43abdf:	callq  413c50 <SSL_get_wbio@plt>
  43abe4:	mov    %rax,%rdi
  43abe7:	callq  4158b0 <BIO_number_written@plt>
  43abec:	mov    %rbp,%rdi
  43abef:	mov    %rax,%r13
  43abf2:	callq  415990 <SSL_get_rbio@plt>
  43abf7:	mov    %rax,%rdi
  43abfa:	callq  413730 <BIO_number_read@plt>
  43abff:	lea    0x2e0c2(%rip),%rsi        # 468cc8 <_fini+0xb7c4>
  43ac06:	mov    %rax,%rdx
  43ac09:	mov    %r13,%rcx
  43ac0c:	mov    %rbx,%rdi
  43ac0f:	xor    %eax,%eax
  43ac11:	callq  413c40 <BIO_printf@plt>
  43ac16:	jmpq   43a525 <X509_get0_pubkey_bitstr@plt+0x23b55>
  43ac1b:	nopl   0x0(%rax,%rax,1)
  43ac20:	lea    0x2e041(%rip),%rsi        # 468c68 <_fini+0xb764>
  43ac27:	mov    %rbx,%rdi
  43ac2a:	xor    %eax,%eax
  43ac2c:	callq  413c40 <BIO_printf@plt>
  43ac31:	jmpq   43aac7 <X509_get0_pubkey_bitstr@plt+0x240f7>
  43ac36:	nopw   %cs:0x0(%rax,%rax,1)
  43ac40:	xor    %r14d,%r14d
  43ac43:	lea    0x20(%rsp),%r13
  43ac48:	jmpq   43a946 <X509_get0_pubkey_bitstr@plt+0x23f76>
  43ac4d:	nopl   (%rax)
  43ac50:	lea    0x2dfc1(%rip),%rsi        # 468c18 <_fini+0xb714>
  43ac57:	mov    %rbx,%rdi
  43ac5a:	xor    %eax,%eax
  43ac5c:	callq  413c40 <BIO_printf@plt>
  43ac61:	jmpq   43a9ee <X509_get0_pubkey_bitstr@plt+0x2401e>
  43ac66:	callq  414c30 <__stack_chk_fail@plt>
  43ac6b:	nopl   0x0(%rax,%rax,1)
  43ac70:	push   %r12
  43ac72:	xor    %esi,%esi
  43ac74:	push   %rbp
  43ac75:	mov    %rdx,%rbp
  43ac78:	push   %rbx
  43ac79:	mov    %rdi,%rbx
  43ac7c:	callq  413a00 <SSL_get_servername@plt>
  43ac81:	mov    %rbx,%rdi
  43ac84:	mov    %rax,%r12
  43ac87:	callq  412ab0 <SSL_get_servername_type@plt>
  43ac8c:	cmp    $0xffffffff,%eax
  43ac8f:	je     43acc8 <X509_get0_pubkey_bitstr@plt+0x242f8>
  43ac91:	xor    %ecx,%ecx
  43ac93:	xor    %edx,%edx
  43ac95:	mov    $0x8,%esi
  43ac9a:	mov    %rbx,%rdi
  43ac9d:	callq  4162b0 <SSL_ctrl@plt>
  43aca2:	xor    %ecx,%ecx
  43aca4:	test   %rax,%rax
  43aca7:	je     43acb8 <X509_get0_pubkey_bitstr@plt+0x242e8>
  43aca9:	mov    %ecx,0x8(%rbp)
  43acac:	xor    %eax,%eax
  43acae:	pop    %rbx
  43acaf:	pop    %rbp
  43acb0:	pop    %r12
  43acb2:	retq   
  43acb3:	nopl   0x0(%rax,%rax,1)
  43acb8:	xor    %ecx,%ecx
  43acba:	test   %r12,%r12
  43acbd:	setne  %cl
  43acc0:	jmp    43aca9 <X509_get0_pubkey_bitstr@plt+0x242d9>
  43acc2:	nopw   0x0(%rax,%rax,1)
  43acc8:	lea    0x240071(%rip),%rax        # 67ad40 <_edata+0x38>
  43accf:	lea    0x2dbe4(%rip),%rsi        # 4688ba <_fini+0xb3b6>
  43acd6:	mov    (%rax),%rdi
  43acd9:	xor    %eax,%eax
  43acdb:	callq  413c40 <BIO_printf@plt>
  43ace0:	pop    %rbx
  43ace1:	pop    %rbp
  43ace2:	xor    %eax,%eax
  43ace4:	pop    %r12
  43ace6:	retq   
  43ace7:	nopw   0x0(%rax,%rax,1)
  43acf0:	push   %r15
  43acf2:	push   %r14
  43acf4:	push   %r13
  43acf6:	push   %r12
  43acf8:	push   %rbp
  43acf9:	push   %rbx
  43acfa:	sub    $0x2a8,%rsp
  43ad01:	mov    %fs:0x28,%rax
  43ad0a:	mov    %rax,0x298(%rsp)
  43ad12:	xor    %eax,%eax
  43ad14:	lea    0x2fb07(%rip),%rax        # 46a822 <_fini+0xd31e>
  43ad1b:	mov    %edi,0x11c(%rsp)
  43ad22:	mov    %rsi,0x110(%rsp)
  43ad2a:	movq   $0x0,0x148(%rsp)
  43ad36:	movq   $0x0,0x150(%rsp)
  43ad42:	mov    %rax,0x138(%rsp)
  43ad4a:	lea    0x2db87(%rip),%rax        # 4688d8 <_fini+0xb3d4>
  43ad51:	movl   $0x0,0x130(%rsp)
  43ad5c:	movq   $0x0,0x170(%rsp)
  43ad68:	movl   $0x0,0x178(%rsp)
  43ad73:	mov    %rax,0x140(%rsp)
  43ad7b:	movl   $0x10,0x134(%rsp)
  43ad86:	callq  415730 <SSLv23_client_method@plt>
  43ad8b:	mov    $0xd,%edi
  43ad90:	mov    $0x1,%esi
  43ad95:	mov    %rax,%r13
  43ad98:	callq  414ee0 <signal@plt>
  43ad9d:	lea    0x23ff9c(%rip),%r15        # 67ad40 <_edata+0x38>
  43ada4:	movl   $0x0,0x2406ce(%rip)        # 67b47c <_edata+0x774>
  43adae:	movl   $0x0,0x24069c(%rip)        # 67b454 <_edata+0x74c>
  43adb8:	movl   $0x0,0x24068e(%rip)        # 67b450 <_edata+0x748>
  43adc2:	movl   $0x0,0x2406ac(%rip)        # 67b478 <_edata+0x770>
  43adcc:	movl   $0x0,0x240696(%rip)        # 67b46c <_edata+0x764>
  43add6:	mov    (%r15),%rdi
  43add9:	movl   $0x0,0x240685(%rip)        # 67b468 <_edata+0x760>
  43ade3:	test   %rdi,%rdi
  43ade6:	je     43b970 <X509_get0_pubkey_bitstr@plt+0x24fa0>
  43adec:	xor    %esi,%esi
  43adee:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  43adf3:	test   %eax,%eax
  43adf5:	jne    43af18 <X509_get0_pubkey_bitstr@plt+0x24548>
  43adfb:	xor    %r13d,%r13d
  43adfe:	xor    %ebp,%ebp
  43ae00:	xor    %ebx,%ebx
  43ae02:	movq   $0x0,0x10(%rsp)
  43ae0b:	xor    %r14d,%r14d
  43ae0e:	xor    %r12d,%r12d
  43ae11:	movl   $0x1,0x18(%rsp)
  43ae19:	mov    0x240620(%rip),%rdi        # 67b440 <_edata+0x738>
  43ae20:	test   %rdi,%rdi
  43ae23:	je     43ae2a <X509_get0_pubkey_bitstr@plt+0x2445a>
  43ae25:	callq  415020 <CRYPTO_free@plt>
  43ae2a:	test   %r13,%r13
  43ae2d:	je     43ae37 <X509_get0_pubkey_bitstr@plt+0x24467>
  43ae2f:	mov    %r13,%rdi
  43ae32:	callq  412c50 <SSL_CTX_free@plt>
  43ae37:	test   %rbx,%rbx
  43ae3a:	je     43ae44 <X509_get0_pubkey_bitstr@plt+0x24474>
  43ae3c:	mov    %rbx,%rdi
  43ae3f:	callq  4153a0 <X509_free@plt>
  43ae44:	test   %rbp,%rbp
  43ae47:	je     43ae51 <X509_get0_pubkey_bitstr@plt+0x24481>
  43ae49:	mov    %rbp,%rdi
  43ae4c:	callq  412b00 <EVP_PKEY_free@plt>
  43ae51:	mov    0x148(%rsp),%rdi
  43ae59:	test   %rdi,%rdi
  43ae5c:	je     43ae63 <X509_get0_pubkey_bitstr@plt+0x24493>
  43ae5e:	callq  415020 <CRYPTO_free@plt>
  43ae63:	mov    0x150(%rsp),%rdi
  43ae6b:	test   %rdi,%rdi
  43ae6e:	je     43ae75 <X509_get0_pubkey_bitstr@plt+0x244a5>
  43ae70:	callq  412f10 <X509_VERIFY_PARAM_free@plt>
  43ae75:	test   %r12,%r12
  43ae78:	je     43ae8f <X509_get0_pubkey_bitstr@plt+0x244bf>
  43ae7a:	mov    %r12,%rdi
  43ae7d:	mov    $0x2000,%esi
  43ae82:	callq  413ef0 <OPENSSL_cleanse@plt>
  43ae87:	mov    %r12,%rdi
  43ae8a:	callq  415020 <CRYPTO_free@plt>
  43ae8f:	test   %r14,%r14
  43ae92:	je     43aea9 <X509_get0_pubkey_bitstr@plt+0x244d9>
  43ae94:	mov    %r14,%rdi
  43ae97:	mov    $0x2000,%esi
  43ae9c:	callq  413ef0 <OPENSSL_cleanse@plt>
  43aea1:	mov    %r14,%rdi
  43aea4:	callq  415020 <CRYPTO_free@plt>
  43aea9:	mov    0x10(%rsp),%rbx
  43aeae:	test   %rbx,%rbx
  43aeb1:	je     43aec8 <X509_get0_pubkey_bitstr@plt+0x244f8>
  43aeb3:	mov    %rbx,%rdi
  43aeb6:	mov    $0x2000,%esi
  43aebb:	callq  413ef0 <OPENSSL_cleanse@plt>
  43aec0:	mov    %rbx,%rdi
  43aec3:	callq  415020 <CRYPTO_free@plt>
  43aec8:	mov    0x240589(%rip),%rdi        # 67b458 <_edata+0x750>
  43aecf:	test   %rdi,%rdi
  43aed2:	je     43aee4 <X509_get0_pubkey_bitstr@plt+0x24514>
  43aed4:	callq  413960 <BIO_free@plt>
  43aed9:	movq   $0x0,0x240574(%rip)        # 67b458 <_edata+0x750>
  43aee4:	mov    0x298(%rsp),%rdx
  43aeec:	xor    %fs:0x28,%rdx
  43aef5:	mov    0x18(%rsp),%eax
  43aef9:	jne    43c890 <X509_get0_pubkey_bitstr@plt+0x25ec0>
  43aeff:	add    $0x2a8,%rsp
  43af06:	pop    %rbx
  43af07:	pop    %rbp
  43af08:	pop    %r12
  43af0a:	pop    %r13
  43af0c:	pop    %r14
  43af0e:	pop    %r15
  43af10:	retq   
  43af11:	nopl   0x0(%rax)
  43af18:	lea    0x2d990(%rip),%rsi        # 4688af <_fini+0xb3ab>
  43af1f:	mov    $0x288,%edx
  43af24:	mov    $0x2000,%edi
  43af29:	callq  413d50 <CRYPTO_malloc@plt>
  43af2e:	test   %rax,%rax
  43af31:	mov    %rax,%r12
  43af34:	je     43b1c8 <X509_get0_pubkey_bitstr@plt+0x247f8>
  43af3a:	lea    0x2d96e(%rip),%rsi        # 4688af <_fini+0xb3ab>
  43af41:	mov    $0x289,%edx
  43af46:	mov    $0x2000,%edi
  43af4b:	callq  413d50 <CRYPTO_malloc@plt>
  43af50:	test   %rax,%rax
  43af53:	mov    %rax,%r14
  43af56:	je     43b1c8 <X509_get0_pubkey_bitstr@plt+0x247f8>
  43af5c:	lea    0x2d94c(%rip),%rsi        # 4688af <_fini+0xb3ab>
  43af63:	mov    $0x28a,%edx
  43af68:	mov    $0x2000,%edi
  43af6d:	callq  413d50 <CRYPTO_malloc@plt>
  43af72:	test   %rax,%rax
  43af75:	mov    %rax,0x10(%rsp)
  43af7a:	je     43b1cb <X509_get0_pubkey_bitstr@plt+0x247fb>
  43af80:	lea    0x240c7d(%rip),%rax        # 67bc04 <_edata+0xefc>
  43af87:	movl   $0x0,0x2404ef(%rip)        # 67b480 <_edata+0x778>
  43af91:	addq   $0x8,0x110(%rsp)
  43af9a:	movq   $0x0,0xc0(%rsp)
  43afa6:	movl   $0x0,0xdc(%rsp)
  43afb1:	movl   $0x0,0xd0(%rsp)
  43afbc:	movl   $0x0,(%rax)
  43afc2:	lea    0x240c37(%rip),%rax        # 67bc00 <_edata+0xef8>
  43afc9:	movq   $0x0,0x30(%rsp)
  43afd2:	movq   $0x0,0x48(%rsp)
  43afdb:	movl   $0x0,(%rax)
  43afe1:	mov    0x11c(%rsp),%eax
  43afe8:	movq   $0x0,0x28(%rsp)
  43aff1:	movq   $0x0,0xb8(%rsp)
  43affd:	movq   $0x0,0x70(%rsp)
  43b006:	movq   $0x0,0x68(%rsp)
  43b00f:	lea    -0x1(%rax),%ebp
  43b012:	lea    0x150(%rsp),%rax
  43b01a:	movq   $0x0,0x78(%rsp)
  43b023:	movl   $0x1,0x88(%rsp)
  43b02e:	movl   $0x0,0x80(%rsp)
  43b039:	mov    %ebp,0x11c(%rsp)
  43b040:	movl   $0x0,0x38(%rsp)
  43b048:	movl   $0x0,0xd8(%rsp)
  43b053:	movl   $0x0,0xcc(%rsp)
  43b05e:	movl   $0x0,0xb0(%rsp)
  43b069:	movl   $0x0,0x18(%rsp)
  43b071:	movl   $0x0,0xc8(%rsp)
  43b07c:	movq   $0x0,0xa8(%rsp)
  43b088:	movq   $0x0,0xa0(%rsp)
  43b094:	movq   $0x0,0x98(%rsp)
  43b0a0:	movq   $0x0,0x60(%rsp)
  43b0a9:	movl   $0x3,0x90(%rsp)
  43b0b4:	movl   $0x3,0x50(%rsp)
  43b0bc:	movq   $0x0,0x58(%rsp)
  43b0c5:	mov    %rax,0xe0(%rsp)
  43b0cd:	lea    0x130(%rsp),%rax
  43b0d5:	movq   $0x0,0x20(%rsp)
  43b0de:	movl   $0x0,0x8c(%rsp)
  43b0e9:	movl   $0x0,0x84(%rsp)
  43b0f4:	mov    %rax,0xe8(%rsp)
  43b0fc:	lea    0x11c(%rsp),%rax
  43b104:	movl   $0x0,0x40(%rsp)
  43b10c:	mov    %rax,0xf0(%rsp)
  43b114:	lea    0x110(%rsp),%rax
  43b11c:	mov    %rax,0xf8(%rsp)
  43b124:	jmp    43b168 <X509_get0_pubkey_bitstr@plt+0x24798>
  43b126:	nopw   %cs:0x0(%rax,%rax,1)
  43b130:	sub    $0x1,%ebp
  43b133:	test   %ebp,%ebp
  43b135:	mov    %ebp,0x11c(%rsp)
  43b13c:	je     43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43b142:	mov    0x8(%r8),%rax
  43b146:	lea    0x8(%r8),%rbx
  43b14a:	mov    %rax,0x140(%rsp)
  43b152:	sub    $0x1,%ebp
  43b155:	add    $0x8,%rbx
  43b159:	mov    %ebp,0x11c(%rsp)
  43b160:	mov    %rbx,0x110(%rsp)
  43b168:	test   %ebp,%ebp
  43b16a:	jle    43b790 <X509_get0_pubkey_bitstr@plt+0x24dc0>
  43b170:	mov    0x110(%rsp),%r8
  43b178:	lea    0x2d763(%rip),%rdi        # 4688e2 <_fini+0xb3de>
  43b17f:	mov    $0x6,%ecx
  43b184:	mov    (%r8),%rax
  43b187:	mov    %rax,%rsi
  43b18a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43b18c:	je     43b130 <X509_get0_pubkey_bitstr@plt+0x24760>
  43b18e:	lea    0x2d269(%rip),%rdi        # 4683fe <_fini+0xaefa>
  43b195:	mov    $0x6,%ecx
  43b19a:	mov    %rax,%rsi
  43b19d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43b19f:	jne    43b1f8 <X509_get0_pubkey_bitstr@plt+0x24828>
  43b1a1:	sub    $0x1,%ebp
  43b1a4:	test   %ebp,%ebp
  43b1a6:	mov    %ebp,0x11c(%rsp)
  43b1ad:	je     43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43b1b3:	mov    0x8(%r8),%rax
  43b1b7:	lea    0x8(%r8),%rbx
  43b1bb:	mov    %rax,0x138(%rsp)
  43b1c3:	jmp    43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43b1c5:	nopl   (%rax)
  43b1c8:	xor    %r14d,%r14d
  43b1cb:	mov    (%r15),%rdi
  43b1ce:	lea    0x246de(%rip),%rsi        # 45f8b3 <_fini+0x23af>
  43b1d5:	xor    %eax,%eax
  43b1d7:	xor    %r13d,%r13d
  43b1da:	xor    %ebp,%ebp
  43b1dc:	xor    %ebx,%ebx
  43b1de:	callq  413c40 <BIO_printf@plt>
  43b1e3:	movq   $0x0,0x10(%rsp)
  43b1ec:	jmpq   43ae11 <X509_get0_pubkey_bitstr@plt+0x24441>
  43b1f1:	nopl   0x0(%rax)
  43b1f8:	lea    0x2d6e9(%rip),%rdi        # 4688e8 <_fini+0xb3e4>
  43b1ff:	mov    $0x9,%ecx
  43b204:	mov    %rax,%rsi
  43b207:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43b209:	jne    43b260 <X509_get0_pubkey_bitstr@plt+0x24890>
  43b20b:	sub    $0x1,%ebp
  43b20e:	test   %ebp,%ebp
  43b210:	mov    %ebp,0x11c(%rsp)
  43b217:	je     43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43b21d:	mov    0x8(%r8),%rdi
  43b221:	lea    0x8(%r8),%rax
  43b225:	lea    0x138(%rsp),%rdx
  43b22d:	lea    0x140(%rsp),%rsi
  43b235:	mov    %rax,0x110(%rsp)
  43b23d:	callq  44a480 <X509_get0_pubkey_bitstr@plt+0x33ab0>
  43b242:	test   %eax,%eax
  43b244:	je     43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43b24a:	mov    0x11c(%rsp),%ebp
  43b251:	mov    0x110(%rsp),%rbx
  43b259:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43b25e:	xchg   %ax,%ax
  43b260:	lea    0x22fd1(%rip),%rdi        # 45e238 <_fini+0xd34>
  43b267:	mov    $0x8,%ecx
  43b26c:	mov    %rax,%rsi
  43b26f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43b271:	jne    43b2e0 <X509_get0_pubkey_bitstr@plt+0x24910>
  43b273:	sub    $0x1,%ebp
  43b276:	test   %ebp,%ebp
  43b278:	mov    %ebp,0x11c(%rsp)
  43b27f:	je     43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43b285:	mov    0x8(%r8),%rdi
  43b289:	lea    0x8(%r8),%rax
  43b28d:	mov    $0xa,%edx
  43b292:	xor    %esi,%esi
  43b294:	mov    %rax,0x110(%rsp)
  43b29c:	callq  4155d0 <strtol@plt>
  43b2a1:	lea    0x24095c(%rip),%rdx        # 67bc04 <_edata+0xefc>
  43b2a8:	mov    (%r15),%rdi
  43b2ab:	lea    0x2d15a(%rip),%rsi        # 46840c <_fini+0xaf08>
  43b2b2:	mov    %eax,(%rdx)
  43b2b4:	mov    %eax,%edx
  43b2b6:	xor    %eax,%eax
  43b2b8:	callq  413c40 <BIO_printf@plt>
  43b2bd:	mov    0x11c(%rsp),%ebp
  43b2c4:	mov    0x110(%rsp),%rbx
  43b2cc:	movl   $0x1,0x18(%rsp)
  43b2d4:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43b2d9:	nopl   0x0(%rax)
  43b2e0:	lea    0x25cbb(%rip),%rdi        # 460fa2 <_fini+0x3a9e>
  43b2e7:	mov    $0x6,%ecx
  43b2ec:	mov    %rax,%rsi
  43b2ef:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43b2f1:	jne    43b750 <X509_get0_pubkey_bitstr@plt+0x24d80>
  43b2f7:	sub    $0x1,%ebp
  43b2fa:	test   %ebp,%ebp
  43b2fc:	mov    %ebp,0x11c(%rsp)
  43b303:	je     43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43b305:	mov    0x8(%r8),%rax
  43b309:	lea    0x8(%r8),%rbx
  43b30d:	mov    %rax,0x20(%rsp)
  43b312:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43b317:	mov    (%r15),%rdi
  43b31a:	lea    0x22a0b(%rip),%rsi        # 45dd2c <_fini+0x828>
  43b321:	mov    %rbp,%rdx
  43b324:	xor    %eax,%eax
  43b326:	callq  413c40 <BIO_printf@plt>
  43b32b:	nopl   0x0(%rax,%rax,1)
  43b330:	mov    (%r15),%rdi
  43b333:	lea    0x2d683(%rip),%rsi        # 4689bd <_fini+0xb4b9>
  43b33a:	xor    %eax,%eax
  43b33c:	callq  413c40 <BIO_printf@plt>
  43b341:	mov    (%r15),%rdi
  43b344:	lea    0x29854(%rip),%rsi        # 464b9f <_fini+0x769b>
  43b34b:	xor    %eax,%eax
  43b34d:	callq  413c40 <BIO_printf@plt>
  43b352:	mov    (%r15),%rdi
  43b355:	lea    0x2d9ac(%rip),%rsi        # 468d08 <_fini+0xb804>
  43b35c:	xor    %eax,%eax
  43b35e:	callq  413c40 <BIO_printf@plt>
  43b363:	mov    (%r15),%rdi
  43b366:	lea    0x2d9c3(%rip),%rsi        # 468d30 <_fini+0xb82c>
  43b36d:	xor    %eax,%eax
  43b36f:	callq  413c40 <BIO_printf@plt>
  43b374:	mov    (%r15),%rdi
  43b377:	lea    0x2f4a4(%rip),%rcx        # 46a822 <_fini+0xd31e>
  43b37e:	lea    0x2d553(%rip),%rdx        # 4688d8 <_fini+0xb3d4>
  43b385:	lea    0x2d9cc(%rip),%rsi        # 468d58 <_fini+0xb854>
  43b38c:	xor    %eax,%eax
  43b38e:	callq  413c40 <BIO_printf@plt>
  43b393:	mov    (%r15),%rdi
  43b396:	lea    0x2b8fb(%rip),%rsi        # 466c98 <_fini+0x9794>
  43b39d:	xor    %eax,%eax
  43b39f:	callq  413c40 <BIO_printf@plt>
  43b3a4:	mov    (%r15),%rdi
  43b3a7:	lea    0x2d9ea(%rip),%rsi        # 468d98 <_fini+0xb894>
  43b3ae:	xor    %eax,%eax
  43b3b0:	callq  413c40 <BIO_printf@plt>
  43b3b5:	mov    (%r15),%rdi
  43b3b8:	lea    0x2bb11(%rip),%rsi        # 466ed0 <_fini+0x99cc>
  43b3bf:	xor    %eax,%eax
  43b3c1:	callq  413c40 <BIO_printf@plt>
  43b3c6:	mov    (%r15),%rdi
  43b3c9:	lea    0x2da08(%rip),%rsi        # 468dd8 <_fini+0xb8d4>
  43b3d0:	xor    %eax,%eax
  43b3d2:	callq  413c40 <BIO_printf@plt>
  43b3d7:	mov    (%r15),%rdi
  43b3da:	lea    0x2da37(%rip),%rsi        # 468e18 <_fini+0xb914>
  43b3e1:	xor    %eax,%eax
  43b3e3:	callq  413c40 <BIO_printf@plt>
  43b3e8:	mov    (%r15),%rdi
  43b3eb:	lea    0x2da5e(%rip),%rsi        # 468e50 <_fini+0xb94c>
  43b3f2:	xor    %eax,%eax
  43b3f4:	callq  413c40 <BIO_printf@plt>
  43b3f9:	mov    (%r15),%rdi
  43b3fc:	lea    0x2bbbd(%rip),%rsi        # 466fc0 <_fini+0x9abc>
  43b403:	xor    %eax,%eax
  43b405:	callq  413c40 <BIO_printf@plt>
  43b40a:	mov    (%r15),%rdi
  43b40d:	lea    0x2bfac(%rip),%rsi        # 4673c0 <_fini+0x9ebc>
  43b414:	xor    %eax,%eax
  43b416:	callq  413c40 <BIO_printf@plt>
  43b41b:	mov    (%r15),%rdi
  43b41e:	lea    0x2bfcb(%rip),%rsi        # 4673f0 <_fini+0x9eec>
  43b425:	xor    %eax,%eax
  43b427:	callq  413c40 <BIO_printf@plt>
  43b42c:	mov    (%r15),%rdi
  43b42f:	lea    0x2bfea(%rip),%rsi        # 467420 <_fini+0x9f1c>
  43b436:	xor    %eax,%eax
  43b438:	callq  413c40 <BIO_printf@plt>
  43b43d:	mov    (%r15),%rdi
  43b440:	lea    0x2da41(%rip),%rsi        # 468e88 <_fini+0xb984>
  43b447:	xor    %eax,%eax
  43b449:	callq  413c40 <BIO_printf@plt>
  43b44e:	mov    (%r15),%rdi
  43b451:	lea    0x2da80(%rip),%rsi        # 468ed8 <_fini+0xb9d4>
  43b458:	xor    %eax,%eax
  43b45a:	callq  413c40 <BIO_printf@plt>
  43b45f:	mov    (%r15),%rdi
  43b462:	lea    0x2dab7(%rip),%rsi        # 468f20 <_fini+0xba1c>
  43b469:	xor    %eax,%eax
  43b46b:	callq  413c40 <BIO_printf@plt>
  43b470:	mov    (%r15),%rdi
  43b473:	lea    0x2dade(%rip),%rsi        # 468f58 <_fini+0xba54>
  43b47a:	xor    %eax,%eax
  43b47c:	callq  413c40 <BIO_printf@plt>
  43b481:	mov    (%r15),%rdi
  43b484:	lea    0x2bedd(%rip),%rsi        # 467368 <_fini+0x9e64>
  43b48b:	xor    %eax,%eax
  43b48d:	callq  413c40 <BIO_printf@plt>
  43b492:	mov    (%r15),%rdi
  43b495:	lea    0x2dadc(%rip),%rsi        # 468f78 <_fini+0xba74>
  43b49c:	xor    %eax,%eax
  43b49e:	callq  413c40 <BIO_printf@plt>
  43b4a3:	mov    (%r15),%rdi
  43b4a6:	lea    0x2dafb(%rip),%rsi        # 468fa8 <_fini+0xbaa4>
  43b4ad:	xor    %eax,%eax
  43b4af:	callq  413c40 <BIO_printf@plt>
  43b4b4:	mov    (%r15),%rdi
  43b4b7:	lea    0x2bde2(%rip),%rsi        # 4672a0 <_fini+0x9d9c>
  43b4be:	xor    %eax,%eax
  43b4c0:	callq  413c40 <BIO_printf@plt>
  43b4c5:	mov    (%r15),%rdi
  43b4c8:	lea    0x2be39(%rip),%rsi        # 467308 <_fini+0x9e04>
  43b4cf:	xor    %eax,%eax
  43b4d1:	callq  413c40 <BIO_printf@plt>
  43b4d6:	mov    (%r15),%rdi
  43b4d9:	lea    0x2daf8(%rip),%rsi        # 468fd8 <_fini+0xbad4>
  43b4e0:	xor    %eax,%eax
  43b4e2:	callq  413c40 <BIO_printf@plt>
  43b4e7:	mov    (%r15),%rdi
  43b4ea:	lea    0x2db0f(%rip),%rsi        # 469000 <_fini+0xbafc>
  43b4f1:	xor    %eax,%eax
  43b4f3:	callq  413c40 <BIO_printf@plt>
  43b4f8:	mov    (%r15),%rdi
  43b4fb:	lea    0x2db3e(%rip),%rsi        # 469040 <_fini+0xbb3c>
  43b502:	xor    %eax,%eax
  43b504:	callq  413c40 <BIO_printf@plt>
  43b509:	mov    (%r15),%rdi
  43b50c:	lea    0x2db5d(%rip),%rsi        # 469070 <_fini+0xbb6c>
  43b513:	xor    %eax,%eax
  43b515:	callq  413c40 <BIO_printf@plt>
  43b51a:	mov    (%r15),%rdi
  43b51d:	lea    0x2c084(%rip),%rsi        # 4675a8 <_fini+0xa0a4>
  43b524:	xor    %eax,%eax
  43b526:	callq  413c40 <BIO_printf@plt>
  43b52b:	mov    (%r15),%rdi
  43b52e:	lea    0x2db63(%rip),%rsi        # 469098 <_fini+0xbb94>
  43b535:	xor    %eax,%eax
  43b537:	callq  413c40 <BIO_printf@plt>
  43b53c:	mov    (%r15),%rdi
  43b53f:	lea    0x2db7a(%rip),%rsi        # 4690c0 <_fini+0xbbbc>
  43b546:	xor    %eax,%eax
  43b548:	callq  413c40 <BIO_printf@plt>
  43b54d:	mov    (%r15),%rdi
  43b550:	lea    0x2db91(%rip),%rsi        # 4690e8 <_fini+0xbbe4>
  43b557:	xor    %eax,%eax
  43b559:	callq  413c40 <BIO_printf@plt>
  43b55e:	mov    (%r15),%rdi
  43b561:	lea    0x2dba8(%rip),%rsi        # 469110 <_fini+0xbc0c>
  43b568:	xor    %eax,%eax
  43b56a:	callq  413c40 <BIO_printf@plt>
  43b56f:	mov    (%r15),%rdi
  43b572:	lea    0x2dbbf(%rip),%rsi        # 469138 <_fini+0xbc34>
  43b579:	xor    %eax,%eax
  43b57b:	callq  413c40 <BIO_printf@plt>
  43b580:	mov    (%r15),%rdi
  43b583:	lea    0x2dbd6(%rip),%rsi        # 469160 <_fini+0xbc5c>
  43b58a:	xor    %eax,%eax
  43b58c:	callq  413c40 <BIO_printf@plt>
  43b591:	mov    (%r15),%rdi
  43b594:	lea    0x2dbed(%rip),%rsi        # 469188 <_fini+0xbc84>
  43b59b:	xor    %eax,%eax
  43b59d:	callq  413c40 <BIO_printf@plt>
  43b5a2:	mov    (%r15),%rdi
  43b5a5:	lea    0x2dc0c(%rip),%rsi        # 4691b8 <_fini+0xbcb4>
  43b5ac:	xor    %eax,%eax
  43b5ae:	callq  413c40 <BIO_printf@plt>
  43b5b3:	mov    (%r15),%rdi
  43b5b6:	lea    0x2dc2b(%rip),%rsi        # 4691e8 <_fini+0xbce4>
  43b5bd:	xor    %eax,%eax
  43b5bf:	callq  413c40 <BIO_printf@plt>
  43b5c4:	mov    (%r15),%rdi
  43b5c7:	lea    0x2dc6a(%rip),%rsi        # 469238 <_fini+0xbd34>
  43b5ce:	xor    %eax,%eax
  43b5d0:	callq  413c40 <BIO_printf@plt>
  43b5d5:	mov    (%r15),%rdi
  43b5d8:	lea    0x2dca1(%rip),%rsi        # 469280 <_fini+0xbd7c>
  43b5df:	xor    %eax,%eax
  43b5e1:	callq  413c40 <BIO_printf@plt>
  43b5e6:	mov    (%r15),%rdi
  43b5e9:	lea    0x2dcd0(%rip),%rsi        # 4692c0 <_fini+0xbdbc>
  43b5f0:	xor    %eax,%eax
  43b5f2:	callq  413c40 <BIO_printf@plt>
  43b5f7:	mov    (%r15),%rdi
  43b5fa:	lea    0x2dd07(%rip),%rsi        # 469308 <_fini+0xbe04>
  43b601:	xor    %eax,%eax
  43b603:	callq  413c40 <BIO_printf@plt>
  43b608:	mov    (%r15),%rdi
  43b60b:	lea    0x2dd2e(%rip),%rsi        # 469340 <_fini+0xbe3c>
  43b612:	xor    %eax,%eax
  43b614:	callq  413c40 <BIO_printf@plt>
  43b619:	mov    (%r15),%rdi
  43b61c:	lea    0x2dd5d(%rip),%rsi        # 469380 <_fini+0xbe7c>
  43b623:	xor    %eax,%eax
  43b625:	callq  413c40 <BIO_printf@plt>
  43b62a:	mov    (%r15),%rdi
  43b62d:	lea    0x2dd8c(%rip),%rsi        # 4693c0 <_fini+0xbebc>
  43b634:	xor    %eax,%eax
  43b636:	callq  413c40 <BIO_printf@plt>
  43b63b:	mov    (%r15),%rdi
  43b63e:	lea    0x2ddc3(%rip),%rsi        # 469408 <_fini+0xbf04>
  43b645:	xor    %eax,%eax
  43b647:	callq  413c40 <BIO_printf@plt>
  43b64c:	mov    (%r15),%rdi
  43b64f:	lea    0x2ddf2(%rip),%rsi        # 469448 <_fini+0xbf44>
  43b656:	xor    %eax,%eax
  43b658:	callq  413c40 <BIO_printf@plt>
  43b65d:	mov    (%r15),%rdi
  43b660:	lea    0x2c361(%rip),%rsi        # 4679c8 <_fini+0xa4c4>
  43b667:	xor    %eax,%eax
  43b669:	callq  413c40 <BIO_printf@plt>
  43b66e:	mov    (%r15),%rdi
  43b671:	lea    0x22cb2(%rip),%rsi        # 45e32a <_fini+0xe26>
  43b678:	mov    $0x3a,%ecx
  43b67d:	mov    $0x3a,%edx
  43b682:	xor    %eax,%eax
  43b684:	callq  413c40 <BIO_printf@plt>
  43b689:	mov    (%r15),%rdi
  43b68c:	lea    0x2dddd(%rip),%rsi        # 469470 <_fini+0xbf6c>
  43b693:	xor    %eax,%eax
  43b695:	callq  413c40 <BIO_printf@plt>
  43b69a:	mov    (%r15),%rdi
  43b69d:	lea    0x2ddfc(%rip),%rsi        # 4694a0 <_fini+0xbf9c>
  43b6a4:	xor    %eax,%eax
  43b6a6:	xor    %r13d,%r13d
  43b6a9:	xor    %ebp,%ebp
  43b6ab:	xor    %ebx,%ebx
  43b6ad:	callq  413c40 <BIO_printf@plt>
  43b6b2:	mov    (%r15),%rdi
  43b6b5:	lea    0x2de14(%rip),%rsi        # 4694d0 <_fini+0xbfcc>
  43b6bc:	xor    %eax,%eax
  43b6be:	callq  413c40 <BIO_printf@plt>
  43b6c3:	mov    (%r15),%rdi
  43b6c6:	lea    0x2de4b(%rip),%rsi        # 469518 <_fini+0xc014>
  43b6cd:	xor    %eax,%eax
  43b6cf:	callq  413c40 <BIO_printf@plt>
  43b6d4:	mov    (%r15),%rdi
  43b6d7:	lea    0x2de7a(%rip),%rsi        # 469558 <_fini+0xc054>
  43b6de:	xor    %eax,%eax
  43b6e0:	callq  413c40 <BIO_printf@plt>
  43b6e5:	mov    (%r15),%rdi
  43b6e8:	lea    0x2dea9(%rip),%rsi        # 469598 <_fini+0xc094>
  43b6ef:	xor    %eax,%eax
  43b6f1:	callq  413c40 <BIO_printf@plt>
  43b6f6:	mov    (%r15),%rdi
  43b6f9:	lea    0x2ded8(%rip),%rsi        # 4695d8 <_fini+0xc0d4>
  43b700:	xor    %eax,%eax
  43b702:	callq  413c40 <BIO_printf@plt>
  43b707:	mov    (%r15),%rdi
  43b70a:	lea    0x2c4df(%rip),%rsi        # 467bf0 <_fini+0xa6ec>
  43b711:	xor    %eax,%eax
  43b713:	callq  413c40 <BIO_printf@plt>
  43b718:	mov    (%r15),%rdi
  43b71b:	lea    0x2c57e(%rip),%rsi        # 467ca0 <_fini+0xa79c>
  43b722:	xor    %eax,%eax
  43b724:	callq  413c40 <BIO_printf@plt>
  43b729:	mov    (%r15),%rdi
  43b72c:	lea    0x2c5c5(%rip),%rsi        # 467cf8 <_fini+0xa7f4>
  43b733:	xor    %eax,%eax
  43b735:	callq  413c40 <BIO_printf@plt>
  43b73a:	mov    (%r15),%rdi
  43b73d:	lea    0x2c5f4(%rip),%rsi        # 467d38 <_fini+0xa834>
  43b744:	xor    %eax,%eax
  43b746:	callq  413c40 <BIO_printf@plt>
  43b74b:	jmpq   43ae11 <X509_get0_pubkey_bitstr@plt+0x24441>
  43b750:	lea    0x2d19a(%rip),%rdi        # 4688f1 <_fini+0xb3ed>
  43b757:	mov    $0xa,%ecx
  43b75c:	mov    %rax,%rsi
  43b75f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43b761:	jne    43b990 <X509_get0_pubkey_bitstr@plt+0x24fc0>
  43b767:	sub    $0x1,%ebp
  43b76a:	test   %ebp,%ebp
  43b76c:	mov    %ebp,0x11c(%rsp)
  43b773:	je     43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43b779:	mov    0x8(%r8),%rax
  43b77d:	lea    0x8(%r8),%rbx
  43b781:	mov    %rax,0x30(%rsp)
  43b786:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43b78b:	nopl   0x0(%rax,%rax,1)
  43b790:	callq  414ce0 <SSL_library_init@plt>
  43b795:	callq  412f00 <SSL_load_error_strings@plt>
  43b79a:	cmpq   $0x0,0x28(%rsp)
  43b7a0:	movl   $0xffffffff,0x23fca2(%rip)        # 67b44c <_edata+0x744>
  43b7aa:	je     43ba19 <X509_get0_pubkey_bitstr@plt+0x25049>
  43b7b0:	mov    0x28(%rsp),%rsi
  43b7b5:	lea    0x23fc8c(%rip),%rdi        # 67b448 <_edata+0x740>
  43b7bc:	callq  4488a0 <X509_get0_pubkey_bitstr@plt+0x31ed0>
  43b7c1:	test   %rax,%rax
  43b7c4:	mov    %rax,0x23fc75(%rip)        # 67b440 <_edata+0x738>
  43b7cb:	lea    0x2de76(%rip),%rsi        # 469648 <_fini+0xc144>
  43b7d2:	je     43ba7b <X509_get0_pubkey_bitstr@plt+0x250ab>
  43b7d8:	mov    (%r15),%rdi
  43b7db:	mov    0x68(%rsp),%rsi
  43b7e0:	mov    $0x1,%edx
  43b7e5:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  43b7ea:	mov    0x70(%rsp),%rdi
  43b7ef:	mov    %rax,%rbx
  43b7f2:	test   %rdi,%rdi
  43b7f5:	je     43c414 <X509_get0_pubkey_bitstr@plt+0x25a44>
  43b7fb:	callq  4141e0 <ENGINE_by_id@plt>
  43b800:	test   %rax,%rax
  43b803:	mov    %rax,0x28(%rsp)
  43b808:	lea    0x2de61(%rip),%rsi        # 469670 <_fini+0xc16c>
  43b80f:	je     43ba7b <X509_get0_pubkey_bitstr@plt+0x250ab>
  43b815:	mov    0x60(%rsp),%rsi
  43b81a:	mov    (%r15),%rdi
  43b81d:	lea    0x148(%rsp),%rcx
  43b825:	xor    %r8d,%r8d
  43b828:	xor    %edx,%edx
  43b82a:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  43b82f:	test   %eax,%eax
  43b831:	je     43ba74 <X509_get0_pubkey_bitstr@plt+0x250a4>
  43b837:	cmpq   $0x0,0x58(%rsp)
  43b83d:	je     43c43e <X509_get0_pubkey_bitstr@plt+0x25a6e>
  43b843:	lea    0x2de4e(%rip),%rax        # 469698 <_fini+0xc194>
  43b84a:	mov    0x148(%rsp),%r8
  43b852:	mov    0x90(%rsp),%edx
  43b859:	mov    0x58(%rsp),%rsi
  43b85e:	xor    %ecx,%ecx
  43b860:	mov    %rbx,%r9
  43b863:	mov    %rax,(%rsp)
  43b867:	mov    (%r15),%rdi
  43b86a:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  43b86f:	test   %rax,%rax
  43b872:	mov    %rax,%rbp
  43b875:	je     43c895 <X509_get0_pubkey_bitstr@plt+0x25ec5>
  43b87b:	mov    0x20(%rsp),%rsi
  43b880:	test   %rsi,%rsi
  43b883:	je     43d01a <X509_get0_pubkey_bitstr@plt+0x2664a>
  43b889:	mov    0x50(%rsp),%edx
  43b88d:	mov    (%r15),%rdi
  43b890:	lea    0x2d13c(%rip),%r9        # 4689d3 <_fini+0xb4cf>
  43b897:	mov    %rbx,%r8
  43b89a:	xor    %ecx,%ecx
  43b89c:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  43b8a1:	test   %rax,%rax
  43b8a4:	mov    %rax,%rbx
  43b8a7:	je     43c90f <X509_get0_pubkey_bitstr@plt+0x25f3f>
  43b8ad:	mov    (%r15),%rsi
  43b8b0:	xor    %edi,%edi
  43b8b2:	mov    $0x1,%edx
  43b8b7:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  43b8bc:	test   %eax,%eax
  43b8be:	jne    43c3b3 <X509_get0_pubkey_bitstr@plt+0x259e3>
  43b8c4:	cmpq   $0x0,0x78(%rsp)
  43b8ca:	je     43caaa <X509_get0_pubkey_bitstr@plt+0x260da>
  43b8d0:	mov    0x78(%rsp),%rdi
  43b8d5:	callq  44a710 <X509_get0_pubkey_bitstr@plt+0x33d40>
  43b8da:	mov    (%r15),%rdi
  43b8dd:	lea    0x244ad(%rip),%rsi        # 45fd91 <_fini+0x288d>
  43b8e4:	mov    %rax,%rdx
  43b8e7:	xor    %eax,%eax
  43b8e9:	callq  413c40 <BIO_printf@plt>
  43b8ee:	cmpq   $0x0,0x23fb62(%rip)        # 67b458 <_edata+0x750>
  43b8f6:	je     43c4ca <X509_get0_pubkey_bitstr@plt+0x25afa>
  43b8fc:	mov    %r13,%rdi
  43b8ff:	callq  413890 <SSL_CTX_new@plt>
  43b904:	test   %rax,%rax
  43b907:	mov    %rax,%r13
  43b90a:	je     43c431 <X509_get0_pubkey_bitstr@plt+0x25a61>
  43b910:	mov    0x150(%rsp),%rsi
  43b918:	test   %rsi,%rsi
  43b91b:	je     43b925 <X509_get0_pubkey_bitstr@plt+0x24f55>
  43b91d:	mov    %rax,%rdi
  43b920:	callq  414980 <SSL_CTX_set1_param@plt>
  43b925:	mov    0x28(%rsp),%rsi
  43b92a:	test   %rsi,%rsi
  43b92d:	je     43ba99 <X509_get0_pubkey_bitstr@plt+0x250c9>
  43b933:	mov    %r13,%rdi
  43b936:	callq  412b60 <SSL_CTX_set_client_cert_engine@plt>
  43b93b:	test   %eax,%eax
  43b93d:	jne    43ba8f <X509_get0_pubkey_bitstr@plt+0x250bf>
  43b943:	mov    (%r15),%rdi
  43b946:	lea    0x2dd73(%rip),%rsi        # 4696c0 <_fini+0xc1bc>
  43b94d:	callq  413b70 <BIO_puts@plt>
  43b952:	mov    (%r15),%rdi
  43b955:	callq  413f40 <ERR_print_errors@plt>
  43b95a:	mov    0x28(%rsp),%rdi
  43b95f:	callq  413360 <ENGINE_free@plt>
  43b964:	jmpq   43ae11 <X509_get0_pubkey_bitstr@plt+0x24441>
  43b969:	nopl   0x0(%rax)
  43b970:	mov    0x23a609(%rip),%rax        # 675f80 <_fini+0x218a7c>
  43b977:	xor    %esi,%esi
  43b979:	mov    (%rax),%rdi
  43b97c:	callq  4161e0 <BIO_new_fp@plt>
  43b981:	mov    %rax,%rdi
  43b984:	mov    %rax,(%r15)
  43b987:	jmpq   43adec <X509_get0_pubkey_bitstr@plt+0x2441c>
  43b98c:	nopl   0x0(%rax)
  43b990:	lea    0x2cf64(%rip),%rdi        # 4688fb <_fini+0xb3f7>
  43b997:	mov    $0x9,%ecx
  43b99c:	mov    %rax,%rsi
  43b99f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43b9a1:	je     43b9f5 <X509_get0_pubkey_bitstr@plt+0x25025>
  43b9a3:	lea    0x2ca87(%rip),%rdi        # 468431 <_fini+0xaf2d>
  43b9aa:	mov    $0xa,%ecx
  43b9af:	mov    %rax,%rsi
  43b9b2:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43b9b4:	jne    43ba29 <X509_get0_pubkey_bitstr@plt+0x25059>
  43b9b6:	sub    $0x1,%ebp
  43b9b9:	test   %ebp,%ebp
  43b9bb:	mov    %ebp,0x11c(%rsp)
  43b9c2:	je     43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43b9c8:	mov    0x8(%r8),%rdi
  43b9cc:	lea    0x8(%r8),%rax
  43b9d0:	mov    %rax,0x110(%rsp)
  43b9d8:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  43b9dd:	mov    0x11c(%rsp),%ebp
  43b9e4:	mov    %eax,0x50(%rsp)
  43b9e8:	mov    0x110(%rsp),%rbx
  43b9f0:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43b9f5:	sub    $0x1,%ebp
  43b9f8:	test   %ebp,%ebp
  43b9fa:	mov    %ebp,0x11c(%rsp)
  43ba01:	je     43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43ba07:	mov    0x8(%r8),%rax
  43ba0b:	lea    0x8(%r8),%rbx
  43ba0f:	mov    %rax,0x48(%rsp)
  43ba14:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43ba19:	movq   $0x0,0x23fa1c(%rip)        # 67b440 <_edata+0x738>
  43ba24:	jmpq   43b7d8 <X509_get0_pubkey_bitstr@plt+0x24e08>
  43ba29:	mov    0xe0(%rsp),%r8
  43ba31:	mov    (%r15),%rcx
  43ba34:	mov    0xe8(%rsp),%rdx
  43ba3c:	mov    0xf0(%rsp),%rsi
  43ba44:	mov    0xf8(%rsp),%rdi
  43ba4c:	callq  447ee0 <X509_get0_pubkey_bitstr@plt+0x31510>
  43ba51:	test   %eax,%eax
  43ba53:	je     43c3c5 <X509_get0_pubkey_bitstr@plt+0x259f5>
  43ba59:	mov    0x130(%rsp),%edi
  43ba60:	test   %edi,%edi
  43ba62:	jne    43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43ba68:	mov    0x11c(%rsp),%ebp
  43ba6f:	jmpq   43b168 <X509_get0_pubkey_bitstr@plt+0x24798>
  43ba74:	lea    0x23eb9(%rip),%rsi        # 45f934 <_fini+0x2430>
  43ba7b:	mov    (%r15),%rdi
  43ba7e:	xor    %r13d,%r13d
  43ba81:	xor    %ebp,%ebp
  43ba83:	xor    %ebx,%ebx
  43ba85:	callq  413c40 <BIO_printf@plt>
  43ba8a:	jmpq   43ae11 <X509_get0_pubkey_bitstr@plt+0x24441>
  43ba8f:	mov    0x28(%rsp),%rdi
  43ba94:	callq  413360 <ENGINE_free@plt>
  43ba99:	lea    0x23f8b0(%rip),%rax        # 67b350 <_edata+0x648>
  43baa0:	cmpq   $0x0,(%rax)
  43baa4:	je     43bac3 <X509_get0_pubkey_bitstr@plt+0x250f3>
  43baa6:	mov    0x23f9cc(%rip),%edx        # 67b478 <_edata+0x770>
  43baac:	test   %edx,%edx
  43baae:	jne    43c4b0 <X509_get0_pubkey_bitstr@plt+0x25ae0>
  43bab4:	lea    -0x182b(%rip),%rsi        # 43a290 <X509_get0_pubkey_bitstr@plt+0x238c0>
  43babb:	mov    %r13,%rdi
  43babe:	callq  414a00 <SSL_CTX_set_psk_client_callback@plt>
  43bac3:	lea    0x23f966(%rip),%rax        # 67b430 <_edata+0x728>
  43baca:	mov    (%rax),%rsi
  43bacd:	test   %rsi,%rsi
  43bad0:	je     43bada <X509_get0_pubkey_bitstr@plt+0x2510a>
  43bad2:	mov    %r13,%rdi
  43bad5:	callq  413ed0 <SSL_CTX_set_tlsext_use_srtp@plt>
  43bada:	mov    0xb0(%rsp),%eax
  43bae1:	test   %eax,%eax
  43bae3:	je     43c3fc <X509_get0_pubkey_bitstr@plt+0x25a2c>
  43bae9:	mov    0x40(%rsp),%edx
  43baed:	xor    %ecx,%ecx
  43baef:	mov    $0x20,%esi
  43baf4:	mov    %r13,%rdi
  43baf7:	or     $0x80000bf7,%edx
  43bafd:	callq  413e30 <SSL_CTX_ctrl@plt>
  43bb02:	mov    0x84(%rsp),%eax
  43bb09:	test   %eax,%eax
  43bb0b:	jne    43c481 <X509_get0_pubkey_bitstr@plt+0x25ab1>
  43bb11:	cmpl   $0x2,0x88(%rsp)
  43bb19:	je     43c7c4 <X509_get0_pubkey_bitstr@plt+0x25df4>
  43bb1f:	cmpq   $0x0,0x23f919(%rip)        # 67b440 <_edata+0x738>
  43bb27:	je     43bb3f <X509_get0_pubkey_bitstr@plt+0x2516f>
  43bb29:	lea    0x23f910(%rip),%rdx        # 67b440 <_edata+0x738>
  43bb30:	lea    -0x1997(%rip),%rsi        # 43a1a0 <X509_get0_pubkey_bitstr@plt+0x237d0>
  43bb37:	mov    %r13,%rdi
  43bb3a:	callq  416320 <SSL_CTX_set_next_proto_select_cb@plt>
  43bb3f:	mov    0x8c(%rsp),%eax
  43bb46:	test   %eax,%eax
  43bb48:	jne    43c49c <X509_get0_pubkey_bitstr@plt+0x25acc>
  43bb4e:	mov    0xa8(%rsp),%rsi
  43bb56:	test   %rsi,%rsi
  43bb59:	je     43bb6b <X509_get0_pubkey_bitstr@plt+0x2519b>
  43bb5b:	mov    %r13,%rdi
  43bb5e:	callq  412c10 <SSL_CTX_set_cipher_list@plt>
  43bb63:	test   %eax,%eax
  43bb65:	je     43c422 <X509_get0_pubkey_bitstr@plt+0x25a52>
  43bb6b:	lea    0xcf3e(%rip),%rdx        # 448ab0 <X509_get0_pubkey_bitstr@plt+0x320e0>
  43bb72:	mov    0x18(%rsp),%esi
  43bb76:	mov    %r13,%rdi
  43bb79:	callq  4151f0 <SSL_CTX_set_verify@plt>
  43bb7e:	mov    %rbp,%rdx
  43bb81:	mov    %rbx,%rsi
  43bb84:	mov    %r13,%rdi
  43bb87:	callq  448d90 <X509_get0_pubkey_bitstr@plt+0x323c0>
  43bb8c:	test   %eax,%eax
  43bb8e:	je     43ae11 <X509_get0_pubkey_bitstr@plt+0x24441>
  43bb94:	cmpq   $0x0,0x98(%rsp)
  43bb9d:	jne    43c6cf <X509_get0_pubkey_bitstr@plt+0x25cff>
  43bba3:	cmpq   $0x0,0xa0(%rsp)
  43bbac:	jne    43c6cf <X509_get0_pubkey_bitstr@plt+0x25cff>
  43bbb2:	mov    %r13,%rdi
  43bbb5:	callq  4160c0 <SSL_CTX_set_default_verify_paths@plt>
  43bbba:	test   %eax,%eax
  43bbbc:	je     43c6ef <X509_get0_pubkey_bitstr@plt+0x25d1f>
  43bbc2:	cmpq   $0x0,0xb8(%rsp)
  43bbcb:	je     43bc03 <X509_get0_pubkey_bitstr@plt+0x25233>
  43bbcd:	mov    (%r15),%rax
  43bbd0:	lea    -0xf67(%rip),%rdx        # 43ac70 <X509_get0_pubkey_bitstr@plt+0x242a0>
  43bbd7:	mov    $0x35,%esi
  43bbdc:	mov    %r13,%rdi
  43bbdf:	mov    %rax,0x170(%rsp)
  43bbe7:	callq  414a60 <SSL_CTX_callback_ctrl@plt>
  43bbec:	lea    0x170(%rsp),%rcx
  43bbf4:	xor    %edx,%edx
  43bbf6:	mov    $0x36,%esi
  43bbfb:	mov    %r13,%rdi
  43bbfe:	callq  413e30 <SSL_CTX_ctrl@plt>
  43bc03:	mov    %r13,%rdi
  43bc06:	callq  413ae0 <SSL_new@plt>
  43bc0b:	mov    0x48(%rsp),%rdi
  43bc10:	mov    %rax,0x20(%rsp)
  43bc15:	test   %rdi,%rdi
  43bc18:	je     43bc79 <X509_get0_pubkey_bitstr@plt+0x252a9>
  43bc1a:	lea    0x2260c(%rip),%rsi        # 45e22d <_fini+0xd29>
  43bc21:	callq  412ba0 <BIO_new_file@plt>
  43bc26:	test   %rax,%rax
  43bc29:	je     43c91f <X509_get0_pubkey_bitstr@plt+0x25f4f>
  43bc2f:	xor    %ecx,%ecx
  43bc31:	xor    %edx,%edx
  43bc33:	xor    %esi,%esi
  43bc35:	mov    %rax,%rdi
  43bc38:	mov    %rax,0x28(%rsp)
  43bc3d:	callq  414050 <PEM_read_bio_SSL_SESSION@plt>
  43bc42:	mov    0x28(%rsp),%r8
  43bc47:	mov    %rax,0x18(%rsp)
  43bc4c:	mov    %r8,%rdi
  43bc4f:	callq  413960 <BIO_free@plt>
  43bc54:	cmpq   $0x0,0x18(%rsp)
  43bc5a:	je     43c91f <X509_get0_pubkey_bitstr@plt+0x25f4f>
  43bc60:	mov    0x20(%rsp),%rdi
  43bc65:	mov    0x18(%rsp),%rsi
  43bc6a:	callq  414620 <SSL_set_session@plt>
  43bc6f:	mov    0x18(%rsp),%rdi
  43bc74:	callq  414e10 <SSL_SESSION_free@plt>
  43bc79:	mov    0xd0(%rsp),%eax
  43bc80:	test   %eax,%eax
  43bc82:	je     43bc9a <X509_get0_pubkey_bitstr@plt+0x252ca>
  43bc84:	mov    0x20(%rsp),%rdi
  43bc89:	xor    %ecx,%ecx
  43bc8b:	mov    $0x80,%edx
  43bc90:	mov    $0x21,%esi
  43bc95:	callq  4162b0 <SSL_ctrl@plt>
  43bc9a:	mov    0xb8(%rsp),%rcx
  43bca2:	test   %rcx,%rcx
  43bca5:	je     43bcc1 <X509_get0_pubkey_bitstr@plt+0x252f1>
  43bca7:	mov    0x20(%rsp),%rdi
  43bcac:	xor    %edx,%edx
  43bcae:	mov    $0x37,%esi
  43bcb3:	callq  4162b0 <SSL_ctrl@plt>
  43bcb8:	test   %rax,%rax
  43bcbb:	je     43cbd5 <X509_get0_pubkey_bitstr@plt+0x26205>
  43bcc1:	cmpq   $0x0,0x20(%rsp)
  43bcc7:	je     43bcff <X509_get0_pubkey_bitstr@plt+0x2532f>
  43bcc9:	callq  412a00 <kssl_ctx_new@plt>
  43bcce:	test   %rax,%rax
  43bcd1:	je     43bcff <X509_get0_pubkey_bitstr@plt+0x2532f>
  43bcd3:	mov    0x20(%rsp),%rdi
  43bcd8:	mov    %rax,%rsi
  43bcdb:	mov    %rax,0x18(%rsp)
  43bce0:	callq  4140b0 <SSL_set0_kssl_ctx@plt>
  43bce5:	mov    0x18(%rsp),%rax
  43bcea:	mov    0x140(%rsp),%rdx
  43bcf2:	mov    $0x2,%esi
  43bcf7:	mov    %rax,%rdi
  43bcfa:	callq  414fa0 <kssl_ctx_setstring@plt>
  43bcff:	lea    0x12c(%rsp),%rax
  43bd07:	mov    %r14,0x18(%rsp)
  43bd0c:	mov    %rbx,0x50(%rsp)
  43bd11:	mov    0x10(%rsp),%r14
  43bd16:	mov    0x20(%rsp),%rbx
  43bd1b:	mov    %rax,0xe0(%rsp)
  43bd23:	lea    0x158(%rsp),%rax
  43bd2b:	movl   $0x1,0x60(%rsp)
  43bd33:	mov    %r12,0x28(%rsp)
  43bd38:	mov    %r13,0x40(%rsp)
  43bd3d:	mov    %rax,0xe8(%rsp)
  43bd45:	lea    0x134(%rsp),%rax
  43bd4d:	mov    %rbp,0x48(%rsp)
  43bd52:	mov    %rax,0xf0(%rsp)
  43bd5a:	lea    0x180(%rsp),%rax
  43bd62:	mov    %rax,0xb0(%rsp)
  43bd6a:	mov    0xc0(%rsp),%rax
  43bd72:	sub    $0x1c,%rax
  43bd76:	mov    %rax,0xf8(%rsp)
  43bd7e:	mov    0x88(%rsp),%ecx
  43bd85:	mov    0x138(%rsp),%rdx
  43bd8d:	mov    0x140(%rsp),%rsi
  43bd95:	mov    0xe0(%rsp),%rdi
  43bd9d:	callq  449fa0 <X509_get0_pubkey_bitstr@plt+0x335d0>
  43bda2:	test   %eax,%eax
  43bda4:	je     43d201 <X509_get0_pubkey_bitstr@plt+0x26831>
  43bdaa:	mov    0x12c(%rsp),%edx
  43bdb1:	mov    0x23f6a0(%rip),%rdi        # 67b458 <_edata+0x750>
  43bdb8:	lea    0x2cc5a(%rip),%rsi        # 468a19 <_fini+0xb515>
  43bdbf:	xor    %eax,%eax
  43bdc1:	callq  413c40 <BIO_printf@plt>
  43bdc6:	mov    0x23f6b4(%rip),%eax        # 67b480 <_edata+0x778>
  43bdcc:	test   %eax,%eax
  43bdce:	jne    43cd72 <X509_get0_pubkey_bitstr@plt+0x263a2>
  43bdd4:	testb  $0x1,0x23f6a1(%rip)        # 67b47c <_edata+0x774>
  43bddb:	jne    43cd4c <X509_get0_pubkey_bitstr@plt+0x2637c>
  43bde1:	mov    %rbx,%rdi
  43bde4:	callq  415c90 <SSL_version@plt>
  43bde9:	xor    %esi,%esi
  43bdeb:	cmp    $0xfeff,%eax
  43bdf0:	mov    0x12c(%rsp),%edi
  43bdf7:	je     43ccbd <X509_get0_pubkey_bitstr@plt+0x262ed>
  43bdfd:	callq  4160f0 <BIO_new_socket@plt>
  43be02:	mov    %rax,%rbp
  43be05:	mov    0xd8(%rsp),%eax
  43be0c:	test   %eax,%eax
  43be0e:	jne    43cc9d <X509_get0_pubkey_bitstr@plt+0x262cd>
  43be14:	mov    0x23f65d(%rip),%r13d        # 67b478 <_edata+0x770>
  43be1b:	test   %r13d,%r13d
  43be1e:	jne    43cc6d <X509_get0_pubkey_bitstr@plt+0x2629d>
  43be24:	mov    0x23f641(%rip),%r12d        # 67b46c <_edata+0x764>
  43be2b:	test   %r12d,%r12d
  43be2e:	jne    43cc43 <X509_get0_pubkey_bitstr@plt+0x26273>
  43be34:	mov    0x23f639(%rip),%r11d        # 67b474 <_edata+0x76c>
  43be3b:	test   %r11d,%r11d
  43be3e:	jne    43cc14 <X509_get0_pubkey_bitstr@plt+0x26244>
  43be44:	mov    0x23f625(%rip),%r10d        # 67b470 <_edata+0x768>
  43be4b:	test   %r10d,%r10d
  43be4e:	jne    43ca62 <X509_get0_pubkey_bitstr@plt+0x26092>
  43be54:	mov    %rbp,%rdx
  43be57:	mov    %rbp,%rsi
  43be5a:	mov    %rbx,%rdi
  43be5d:	callq  413bb0 <SSL_set_bio@plt>
  43be62:	mov    %rbx,%rdi
  43be65:	callq  414680 <SSL_set_connect_state@plt>
  43be6a:	mov    %rbx,%rdi
  43be6d:	callq  414df0 <SSL_get_fd@plt>
  43be72:	add    $0x1,%eax
  43be75:	cmpl   $0x1,0x38(%rsp)
  43be7a:	mov    %eax,0xb8(%rsp)
  43be81:	je     43c982 <X509_get0_pubkey_bitstr@plt+0x25fb2>
  43be87:	cmpl   $0x2,0x38(%rsp)
  43be8c:	je     43c94a <X509_get0_pubkey_bitstr@plt+0x25f7a>
  43be92:	cmpl   $0x3,0x38(%rsp)
  43be97:	je     43d35e <X509_get0_pubkey_bitstr@plt+0x2698e>
  43be9d:	cmpl   $0x4,0x38(%rsp)
  43bea2:	je     43d088 <X509_get0_pubkey_bitstr@plt+0x266b8>
  43bea8:	cmpl   $0x5,0x38(%rsp)
  43bead:	je     43cb12 <X509_get0_pubkey_bitstr@plt+0x26142>
  43beb3:	mov    0x60(%rsp),%eax
  43beb7:	mov    $0x1,%edx
  43bebc:	mov    %r14,0x58(%rsp)
  43bec1:	mov    $0x1,%r12d
  43bec7:	mov    $0x1,%r13d
  43becd:	movl   $0x0,0x68(%rsp)
  43bed5:	movl   $0x0,0x8c(%rsp)
  43bee0:	movl   $0x0,0x84(%rsp)
  43beeb:	xor    %ebp,%ebp
  43beed:	mov    %eax,0x70(%rsp)
  43bef1:	lea    0x190(%rsp),%rax
  43bef9:	movl   $0x0,0x78(%rsp)
  43bf01:	mov    %edx,%r14d
  43bf04:	mov    %rax,0x98(%rsp)
  43bf0c:	lea    0x210(%rsp),%rax
  43bf14:	mov    %rax,0xa0(%rsp)
  43bf1c:	lea    0x160(%rsp),%rax
  43bf24:	mov    %rax,0xa8(%rsp)
  43bf2c:	mov    $0x10,%edx
  43bf31:	mov    0x98(%rsp),%rdi
  43bf39:	xor    %eax,%eax
  43bf3b:	mov    %rdx,%rcx
  43bf3e:	cld    
  43bf3f:	rep stos %rax,%es:(%rdi)
  43bf42:	mov    %rdx,%rcx
  43bf45:	mov    0xa0(%rsp),%rdi
  43bf4d:	cld    
  43bf4e:	rep stos %rax,%es:(%rdi)
  43bf51:	mov    %rbx,%rdi
  43bf54:	callq  415c90 <SSL_version@plt>
  43bf59:	cmp    $0xfeff,%eax
  43bf5e:	movq   $0x0,0x90(%rsp)
  43bf6a:	je     43c8d7 <X509_get0_pubkey_bitstr@plt+0x25f07>
  43bf70:	mov    %rbx,%rdi
  43bf73:	callq  415970 <SSL_state@plt>
  43bf78:	test   $0x30,%ah
  43bf7b:	jne    43c6a6 <X509_get0_pubkey_bitstr@plt+0x25cd6>
  43bf81:	mov    0x70(%rsp),%r9d
  43bf86:	mov    $0x1,%edx
  43bf8b:	test   %r9d,%r9d
  43bf8e:	je     43c024 <X509_get0_pubkey_bitstr@plt+0x25654>
  43bf94:	mov    0x30(%rsp),%rdi
  43bf99:	test   %rdi,%rdi
  43bf9c:	je     43bfd7 <X509_get0_pubkey_bitstr@plt+0x25607>
  43bf9e:	lea    0x27673(%rip),%rsi        # 463618 <_fini+0x6114>
  43bfa5:	callq  412ba0 <BIO_new_file@plt>
  43bfaa:	test   %rax,%rax
  43bfad:	mov    %rax,0x70(%rsp)
  43bfb2:	je     43cbf9 <X509_get0_pubkey_bitstr@plt+0x26229>
  43bfb8:	mov    %rbx,%rdi
  43bfbb:	callq  416670 <SSL_get_session@plt>
  43bfc0:	mov    0x70(%rsp),%rdi
  43bfc5:	mov    %rax,%rsi
  43bfc8:	callq  416460 <PEM_write_bio_SSL_SESSION@plt>
  43bfcd:	mov    0x70(%rsp),%rdi
  43bfd2:	callq  413960 <BIO_free@plt>
  43bfd7:	mov    0x60(%rsp),%edx
  43bfdb:	mov    0x23f476(%rip),%rdi        # 67b458 <_edata+0x750>
  43bfe2:	mov    %rbx,%rsi
  43bfe5:	callq  43a4f0 <X509_get0_pubkey_bitstr@plt+0x23b20>
  43bfea:	mov    0x38(%rsp),%r8d
  43bfef:	test   %r8d,%r8d
  43bff2:	jne    43c827 <X509_get0_pubkey_bitstr@plt+0x25e57>
  43bff8:	mov    0xc8(%rsp),%edi
  43bfff:	test   %edi,%edi
  43c001:	jne    43d021 <X509_get0_pubkey_bitstr@plt+0x26651>
  43c007:	movl   $0x0,0x38(%rsp)
  43c00f:	movl   $0x0,0x70(%rsp)
  43c017:	mov    $0x1,%edx
  43c01c:	movl   $0x0,0x60(%rsp)
  43c024:	test   %r14d,%r14d
  43c027:	jne    43c678 <X509_get0_pubkey_bitstr@plt+0x25ca8>
  43c02d:	test   %edx,%edx
  43c02f:	je     43c11c <X509_get0_pubkey_bitstr@plt+0x2574c>
  43c035:	test   %r13d,%r13d
  43c038:	je     43c0a7 <X509_get0_pubkey_bitstr@plt+0x256d7>
  43c03a:	mov    0x239ecf(%rip),%rax        # 675f10 <_fini+0x218a0c>
  43c041:	mov    (%rax),%rdi
  43c044:	callq  4149a0 <fileno@plt>
  43c049:	movslq %eax,%rdi
  43c04c:	callq  415c10 <__fdelt_chk@plt>
  43c051:	mov    0x239eb8(%rip),%rdx        # 675f10 <_fini+0x218a0c>
  43c058:	mov    %rax,%rsi
  43c05b:	mov    0x190(%rsp,%rax,8),%rax
  43c063:	mov    %rsi,0x100(%rsp)
  43c06b:	mov    (%rdx),%rdi
  43c06e:	mov    %rax,0xd0(%rsp)
  43c076:	callq  4149a0 <fileno@plt>
  43c07b:	cltd   
  43c07c:	mov    0x100(%rsp),%rsi
  43c084:	shr    $0x1a,%edx
  43c087:	lea    (%rax,%rdx,1),%ecx
  43c08a:	and    $0x3f,%ecx
  43c08d:	sub    %edx,%ecx
  43c08f:	mov    $0x1,%edx
  43c094:	shl    %cl,%rdx
  43c097:	or     0xd0(%rsp),%rdx
  43c09f:	mov    %rdx,0x190(%rsp,%rsi,8)
  43c0a7:	mov    0x68(%rsp),%esi
  43c0ab:	test   %esi,%esi
  43c0ad:	je     43c11c <X509_get0_pubkey_bitstr@plt+0x2574c>
  43c0af:	mov    0x239e02(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  43c0b6:	mov    (%rax),%rdi
  43c0b9:	callq  4149a0 <fileno@plt>
  43c0be:	movslq %eax,%rdi
  43c0c1:	callq  415c10 <__fdelt_chk@plt>
  43c0c6:	mov    0x239deb(%rip),%rdx        # 675eb8 <_fini+0x2189b4>
  43c0cd:	mov    %rax,%rsi
  43c0d0:	mov    0x210(%rsp,%rax,8),%rax
  43c0d8:	mov    %rsi,0x100(%rsp)
  43c0e0:	mov    (%rdx),%rdi
  43c0e3:	mov    %rax,0xd0(%rsp)
  43c0eb:	callq  4149a0 <fileno@plt>
  43c0f0:	cltd   
  43c0f1:	mov    0x100(%rsp),%rsi
  43c0f9:	shr    $0x1a,%edx
  43c0fc:	lea    (%rax,%rdx,1),%ecx
  43c0ff:	and    $0x3f,%ecx
  43c102:	sub    %edx,%ecx
  43c104:	mov    $0x1,%edx
  43c109:	shl    %cl,%rdx
  43c10c:	or     0xd0(%rsp),%rdx
  43c114:	mov    %rdx,0x210(%rsp,%rsi,8)
  43c11c:	test   %r14d,%r14d
  43c11f:	jne    43c6fc <X509_get0_pubkey_bitstr@plt+0x25d2c>
  43c125:	test   %r12d,%r12d
  43c128:	jne    43c760 <X509_get0_pubkey_bitstr@plt+0x25d90>
  43c12e:	mov    0x90(%rsp),%r8
  43c136:	mov    0xa0(%rsp),%rdx
  43c13e:	xor    %ecx,%ecx
  43c140:	mov    0x98(%rsp),%rsi
  43c148:	mov    0xb8(%rsp),%edi
  43c14f:	callq  4146b0 <select@plt>
  43c154:	test   %eax,%eax
  43c156:	js     43d474 <X509_get0_pubkey_bitstr@plt+0x26aa4>
  43c15c:	movl   $0x0,0x90(%rsp)
  43c167:	mov    %rbx,%rdi
  43c16a:	callq  415c90 <SSL_version@plt>
  43c16f:	cmp    $0xfeff,%eax
  43c174:	je     43c8a7 <X509_get0_pubkey_bitstr@plt+0x25ed7>
  43c17a:	mov    0x90(%rsp),%ecx
  43c181:	test   %ecx,%ecx
  43c183:	je     43c4f8 <X509_get0_pubkey_bitstr@plt+0x25b28>
  43c189:	mov    0x18(%rsp),%rsi
  43c18e:	mov    $0x400,%edx
  43c193:	mov    %rbx,%rdi
  43c196:	callq  414a40 <SSL_read@plt>
  43c19b:	mov    %rbx,%rdi
  43c19e:	mov    %eax,%esi
  43c1a0:	mov    %eax,0x90(%rsp)
  43c1a7:	callq  416920 <SSL_get_error@plt>
  43c1ac:	cmp    $0x6,%eax
  43c1af:	ja     43bf2c <X509_get0_pubkey_bitstr@plt+0x2555c>
  43c1b5:	lea    0x2d770(%rip),%rdx        # 46992c <_fini+0xc428>
  43c1bc:	mov    %eax,%eax
  43c1be:	movslq (%rdx,%rax,4),%rax
  43c1c2:	add    %rdx,%rax
  43c1c5:	mov    0x90(%rsp),%edx
  43c1cc:	jmpq   *%rax
  43c1ce:	mov    0x58(%rsp),%rax
  43c1d3:	mov    0x18(%rsp),%r14
  43c1d8:	mov    0x28(%rsp),%r12
  43c1dd:	mov    0x40(%rsp),%r13
  43c1e2:	mov    0x48(%rsp),%rbp
  43c1e7:	mov    0x50(%rsp),%rbx
  43c1ec:	mov    %rax,0x10(%rsp)
  43c1f1:	callq  412830 <__errno_location@plt>
  43c1f6:	mov    (%rax),%eax
  43c1f8:	mov    (%r15),%rdi
  43c1fb:	lea    0x2c90d(%rip),%rsi        # 468b0f <_fini+0xb60b>
  43c202:	mov    %eax,0x18(%rsp)
  43c206:	mov    %eax,%edx
  43c208:	xor    %eax,%eax
  43c20a:	callq  413c40 <BIO_printf@plt>
  43c20f:	mov    0x70(%rsp),%edx
  43c213:	test   %edx,%edx
  43c215:	jne    43caf8 <X509_get0_pubkey_bitstr@plt+0x26128>
  43c21b:	mov    0x20(%rsp),%r15
  43c220:	mov    %r15,%rdi
  43c223:	callq  414890 <SSL_shutdown@plt>
  43c228:	mov    %r15,%rdi
  43c22b:	callq  414df0 <SSL_get_fd@plt>
  43c230:	xor    %esi,%esi
  43c232:	mov    %eax,%edi
  43c234:	callq  415460 <shutdown@plt>
  43c239:	mov    %r15,%rdi
  43c23c:	callq  414df0 <SSL_get_fd@plt>
  43c241:	mov    %eax,%edi
  43c243:	callq  4168a0 <close@plt>
  43c248:	cmpq   $0x0,0x20(%rsp)
  43c24e:	je     43ae19 <X509_get0_pubkey_bitstr@plt+0x24449>
  43c254:	mov    0x80(%rsp),%eax
  43c25b:	test   %eax,%eax
  43c25d:	jne    43c398 <X509_get0_pubkey_bitstr@plt+0x259c8>
  43c263:	mov    0x20(%rsp),%rdi
  43c268:	callq  413820 <SSL_free@plt>
  43c26d:	jmpq   43ae19 <X509_get0_pubkey_bitstr@plt+0x24449>
  43c272:	mov    0x23f1df(%rip),%rdi        # 67b458 <_edata+0x750>
  43c279:	lea    0x2c881(%rip),%rsi        # 468b01 <_fini+0xb5fd>
  43c280:	xor    %eax,%eax
  43c282:	callq  413c40 <BIO_printf@plt>
  43c287:	jmpq   43bf2c <X509_get0_pubkey_bitstr@plt+0x2555c>
  43c28c:	lea    0x2c860(%rip),%rsi        # 468af3 <_fini+0xb5ef>
  43c293:	mov    0x23f1be(%rip),%rdi        # 67b458 <_edata+0x750>
  43c29a:	xor    %eax,%eax
  43c29c:	mov    $0x1,%r12d
  43c2a2:	xor    %r13d,%r13d
  43c2a5:	callq  413c40 <BIO_printf@plt>
  43c2aa:	jmpq   43bf2c <X509_get0_pubkey_bitstr@plt+0x2555c>
  43c2af:	mov    0x23f1a2(%rip),%rdi        # 67b458 <_edata+0x750>
  43c2b6:	lea    0x2bfa0(%rip),%rsi        # 46825d <_fini+0xad59>
  43c2bd:	xor    %eax,%eax
  43c2bf:	mov    $0x1,%r14d
  43c2c5:	callq  413c40 <BIO_printf@plt>
  43c2ca:	mov    %r12d,%eax
  43c2cd:	movl   $0x0,0x68(%rsp)
  43c2d5:	or     %r13d,%eax
  43c2d8:	mov    $0x0,%eax
  43c2dd:	cmove  %r14d,%r12d
  43c2e1:	cmove  %eax,%r13d
  43c2e5:	jmpq   43bf2c <X509_get0_pubkey_bitstr@plt+0x2555c>
  43c2ea:	mov    0x58(%rsp),%rax
  43c2ef:	mov    (%r15),%rdi
  43c2f2:	mov    0x28(%rsp),%r12
  43c2f7:	mov    0x40(%rsp),%r13
  43c2fc:	mov    0x18(%rsp),%r14
  43c301:	mov    0x48(%rsp),%rbp
  43c306:	mov    %rax,0x10(%rsp)
  43c30b:	mov    0x50(%rsp),%rbx
  43c310:	callq  413f40 <ERR_print_errors@plt>
  43c315:	movl   $0x1,0x18(%rsp)
  43c31d:	jmpq   43c20f <X509_get0_pubkey_bitstr@plt+0x2583f>
  43c322:	test   %edx,%edx
  43c324:	jle    43d2eb <X509_get0_pubkey_bitstr@plt+0x2691b>
  43c32a:	mov    %edx,0x84(%rsp)
  43c331:	xor    %r14d,%r14d
  43c334:	movl   $0x1,0x68(%rsp)
  43c33c:	movl   $0x0,0x8c(%rsp)
  43c347:	jmpq   43bf2c <X509_get0_pubkey_bitstr@plt+0x2555c>
  43c34c:	mov    0x58(%rsp),%rax
  43c351:	mov    0x23f100(%rip),%rdi        # 67b458 <_edata+0x750>
  43c358:	lea    0x2c7bf(%rip),%rsi        # 468b1e <_fini+0xb61a>
  43c35f:	mov    0x28(%rsp),%r12
  43c364:	mov    0x40(%rsp),%r13
  43c369:	mov    0x18(%rsp),%r14
  43c36e:	mov    0x48(%rsp),%rbp
  43c373:	mov    %rax,0x10(%rsp)
  43c378:	xor    %eax,%eax
  43c37a:	mov    0x50(%rsp),%rbx
  43c37f:	callq  413c40 <BIO_printf@plt>
  43c384:	movl   $0x0,0x18(%rsp)
  43c38c:	jmpq   43c20f <X509_get0_pubkey_bitstr@plt+0x2583f>
  43c391:	nopl   0x0(%rax)
  43c398:	mov    0x20(%rsp),%rsi
  43c39d:	mov    0x23f0b4(%rip),%rdi        # 67b458 <_edata+0x750>
  43c3a4:	mov    $0x1,%edx
  43c3a9:	callq  43a4f0 <X509_get0_pubkey_bitstr@plt+0x23b20>
  43c3ae:	jmpq   43c263 <X509_get0_pubkey_bitstr@plt+0x25893>
  43c3b3:	cmpq   $0x0,0x78(%rsp)
  43c3b9:	je     43b8ee <X509_get0_pubkey_bitstr@plt+0x24f1e>
  43c3bf:	nop
  43c3c0:	jmpq   43b8d0 <X509_get0_pubkey_bitstr@plt+0x24f00>
  43c3c5:	mov    0x110(%rsp),%rbx
  43c3cd:	lea    0x2c0b8(%rip),%rdi        # 46848c <_fini+0xaf88>
  43c3d4:	mov    $0x15,%ecx
  43c3d9:	mov    (%rbx),%rbp
  43c3dc:	mov    %rbp,%rsi
  43c3df:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43c3e1:	jne    43c453 <X509_get0_pubkey_bitstr@plt+0x25a83>
  43c3e3:	lea    0x23f812(%rip),%rax        # 67bbfc <_edata+0xef4>
  43c3ea:	mov    0x11c(%rsp),%ebp
  43c3f1:	movl   $0x1,(%rax)
  43c3f7:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43c3fc:	mov    0x40(%rsp),%edx
  43c400:	xor    %ecx,%ecx
  43c402:	mov    $0x20,%esi
  43c407:	mov    %r13,%rdi
  43c40a:	callq  413e30 <SSL_CTX_ctrl@plt>
  43c40f:	jmpq   43bb02 <X509_get0_pubkey_bitstr@plt+0x25132>
  43c414:	movq   $0x0,0x28(%rsp)
  43c41d:	jmpq   43b815 <X509_get0_pubkey_bitstr@plt+0x24e45>
  43c422:	mov    (%r15),%rdi
  43c425:	lea    0x2c2e3(%rip),%rsi        # 46870f <_fini+0xb20b>
  43c42c:	callq  413c40 <BIO_printf@plt>
  43c431:	mov    (%r15),%rdi
  43c434:	callq  413f40 <ERR_print_errors@plt>
  43c439:	jmpq   43ae11 <X509_get0_pubkey_bitstr@plt+0x24441>
  43c43e:	cmpq   $0x0,0x20(%rsp)
  43c444:	jne    43d2dc <X509_get0_pubkey_bitstr@plt+0x2690c>
  43c44a:	xor    %ebp,%ebp
  43c44c:	xor    %ebx,%ebx
  43c44e:	jmpq   43b8ad <X509_get0_pubkey_bitstr@plt+0x24edd>
  43c453:	lea    0x2c4aa(%rip),%rdi        # 468904 <_fini+0xb400>
  43c45a:	mov    $0x8,%ecx
  43c45f:	mov    %rbp,%rsi
  43c462:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43c464:	jne    43c7dd <X509_get0_pubkey_bitstr@plt+0x25e0d>
  43c46a:	mov    0x11c(%rsp),%ebp
  43c471:	movl   $0x1,0x80(%rsp)
  43c47c:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43c481:	mov    0x84(%rsp),%edx
  43c488:	xor    %ecx,%ecx
  43c48a:	mov    $0x4d,%esi
  43c48f:	mov    %r13,%rdi
  43c492:	callq  413e30 <SSL_CTX_ctrl@plt>
  43c497:	jmpq   43bb11 <X509_get0_pubkey_bitstr@plt+0x25141>
  43c49c:	lea    0xca3d(%rip),%rsi        # 448ee0 <X509_get0_pubkey_bitstr@plt+0x32510>
  43c4a3:	mov    %r13,%rdi
  43c4a6:	callq  413250 <SSL_CTX_set_info_callback@plt>
  43c4ab:	jmpq   43bb4e <X509_get0_pubkey_bitstr@plt+0x2517e>
  43c4b0:	mov    0x23efa1(%rip),%rdi        # 67b458 <_edata+0x750>
  43c4b7:	lea    0x2d22a(%rip),%rsi        # 4696e8 <_fini+0xc1e4>
  43c4be:	xor    %eax,%eax
  43c4c0:	callq  413c40 <BIO_printf@plt>
  43c4c5:	jmpq   43bab4 <X509_get0_pubkey_bitstr@plt+0x250e4>
  43c4ca:	mov    0x23ef84(%rip),%esi        # 67b454 <_edata+0x74c>
  43c4d0:	test   %esi,%esi
  43c4d2:	jne    43c859 <X509_get0_pubkey_bitstr@plt+0x25e89>
  43c4d8:	mov    0x2399d9(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  43c4df:	xor    %esi,%esi
  43c4e1:	mov    (%rax),%rdi
  43c4e4:	callq  4161e0 <BIO_new_fp@plt>
  43c4e9:	mov    %rax,0x23ef68(%rip)        # 67b458 <_edata+0x750>
  43c4f0:	jmpq   43b8fc <X509_get0_pubkey_bitstr@plt+0x24f2c>
  43c4f5:	nopl   (%rax)
  43c4f8:	mov    %rbx,%rdi
  43c4fb:	callq  414df0 <SSL_get_fd@plt>
  43c500:	movslq %eax,%rdi
  43c503:	callq  415c10 <__fdelt_chk@plt>
  43c508:	mov    0x210(%rsp,%rax,8),%rcx
  43c510:	mov    %rbx,%rdi
  43c513:	mov    %rcx,0x90(%rsp)
  43c51b:	callq  414df0 <SSL_get_fd@plt>
  43c520:	cltd   
  43c521:	mov    0x90(%rsp),%rcx
  43c529:	shr    $0x1a,%edx
  43c52c:	add    %edx,%eax
  43c52e:	and    $0x3f,%eax
  43c531:	sub    %edx,%eax
  43c533:	bt     %rax,%rcx
  43c537:	jb     43ce33 <X509_get0_pubkey_bitstr@plt+0x26463>
  43c53d:	mov    0x239974(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  43c544:	mov    (%rax),%rdi
  43c547:	callq  4149a0 <fileno@plt>
  43c54c:	movslq %eax,%rdi
  43c54f:	callq  415c10 <__fdelt_chk@plt>
  43c554:	mov    0x210(%rsp,%rax,8),%rcx
  43c55c:	mov    0x239955(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  43c563:	mov    (%rax),%rdi
  43c566:	mov    %rcx,0x90(%rsp)
  43c56e:	callq  4149a0 <fileno@plt>
  43c573:	cltd   
  43c574:	mov    0x90(%rsp),%rcx
  43c57c:	shr    $0x1a,%edx
  43c57f:	add    %edx,%eax
  43c581:	and    $0x3f,%eax
  43c584:	sub    %edx,%eax
  43c586:	bt     %rax,%rcx
  43c58a:	jb     43cde2 <X509_get0_pubkey_bitstr@plt+0x26412>
  43c590:	mov    %rbx,%rdi
  43c593:	callq  414df0 <SSL_get_fd@plt>
  43c598:	movslq %eax,%rdi
  43c59b:	callq  415c10 <__fdelt_chk@plt>
  43c5a0:	mov    0x190(%rsp,%rax,8),%rcx
  43c5a8:	mov    %rbx,%rdi
  43c5ab:	mov    %rcx,0x90(%rsp)
  43c5b3:	callq  414df0 <SSL_get_fd@plt>
  43c5b8:	cltd   
  43c5b9:	mov    0x90(%rsp),%rcx
  43c5c1:	shr    $0x1a,%edx
  43c5c4:	add    %edx,%eax
  43c5c6:	and    $0x3f,%eax
  43c5c9:	sub    %edx,%eax
  43c5cb:	bt     %rax,%rcx
  43c5cf:	jb     43c189 <X509_get0_pubkey_bitstr@plt+0x257b9>
  43c5d5:	mov    0x239934(%rip),%rax        # 675f10 <_fini+0x218a0c>
  43c5dc:	mov    (%rax),%rdi
  43c5df:	callq  4149a0 <fileno@plt>
  43c5e4:	movslq %eax,%rdi
  43c5e7:	callq  415c10 <__fdelt_chk@plt>
  43c5ec:	mov    0x190(%rsp,%rax,8),%rcx
  43c5f4:	mov    0x239915(%rip),%rax        # 675f10 <_fini+0x218a0c>
  43c5fb:	mov    (%rax),%rdi
  43c5fe:	mov    %rcx,0x90(%rsp)
  43c606:	callq  4149a0 <fileno@plt>
  43c60b:	cltd   
  43c60c:	mov    0x90(%rsp),%rcx
  43c614:	shr    $0x1a,%edx
  43c617:	add    %edx,%eax
  43c619:	and    $0x3f,%eax
  43c61c:	sub    %edx,%eax
  43c61e:	bt     %rax,%rcx
  43c622:	jae    43bf2c <X509_get0_pubkey_bitstr@plt+0x2555c>
  43c628:	cmpl   $0x0,0xcc(%rsp)
  43c630:	je     43d348 <X509_get0_pubkey_bitstr@plt+0x26978>
  43c636:	mov    0x28(%rsp),%rdi
  43c63b:	mov    $0x1000,%esi
  43c640:	callq  448a50 <X509_get0_pubkey_bitstr@plt+0x32080>
  43c645:	test   %eax,%eax
  43c647:	mov    %eax,%ebp
  43c649:	jle    43d11f <X509_get0_pubkey_bitstr@plt+0x2674f>
  43c64f:	xor    %edx,%edx
  43c651:	xor    %eax,%eax
  43c653:	mov    0x28(%rsp),%rcx
  43c658:	cmpb   $0xa,(%rcx,%rdx,1)
  43c65c:	sete   %cl
  43c65f:	add    $0x1,%rdx
  43c663:	movzbl %cl,%ecx
  43c666:	add    %ecx,%eax
  43c668:	cmp    %edx,%ebp
  43c66a:	jg     43c653 <X509_get0_pubkey_bitstr@plt+0x25c83>
  43c66c:	jmpq   43d121 <X509_get0_pubkey_bitstr@plt+0x26751>
  43c671:	nopl   0x0(%rax)
  43c678:	mov    %rbx,%rdi
  43c67b:	mov    %edx,0xd0(%rsp)
  43c682:	callq  415040 <SSL_pending@plt>
  43c687:	test   %eax,%eax
  43c689:	mov    0xd0(%rsp),%edx
  43c690:	je     43c02d <X509_get0_pubkey_bitstr@plt+0x2565d>
  43c696:	movl   $0x1,0x90(%rsp)
  43c6a1:	jmpq   43c167 <X509_get0_pubkey_bitstr@plt+0x25797>
  43c6a6:	xor    %ecx,%ecx
  43c6a8:	xor    %edx,%edx
  43c6aa:	mov    $0xc,%esi
  43c6af:	mov    %rbx,%rdi
  43c6b2:	callq  4162b0 <SSL_ctrl@plt>
  43c6b7:	test   %rax,%rax
  43c6ba:	jne    43bf81 <X509_get0_pubkey_bitstr@plt+0x255b1>
  43c6c0:	movl   $0x1,0x70(%rsp)
  43c6c8:	xor    %edx,%edx
  43c6ca:	jmpq   43c024 <X509_get0_pubkey_bitstr@plt+0x25654>
  43c6cf:	mov    0x98(%rsp),%rdx
  43c6d7:	mov    0xa0(%rsp),%rsi
  43c6df:	mov    %r13,%rdi
  43c6e2:	callq  4128b0 <SSL_CTX_load_verify_locations@plt>
  43c6e7:	test   %eax,%eax
  43c6e9:	jne    43bbc2 <X509_get0_pubkey_bitstr@plt+0x251f2>
  43c6ef:	mov    (%r15),%rdi
  43c6f2:	callq  413f40 <ERR_print_errors@plt>
  43c6f7:	jmpq   43bbc2 <X509_get0_pubkey_bitstr@plt+0x251f2>
  43c6fc:	mov    %rbx,%rdi
  43c6ff:	callq  414df0 <SSL_get_fd@plt>
  43c704:	movslq %eax,%rdi
  43c707:	callq  415c10 <__fdelt_chk@plt>
  43c70c:	mov    %rax,%rsi
  43c70f:	mov    0x190(%rsp,%rax,8),%rax
  43c717:	mov    %rbx,%rdi
  43c71a:	mov    %rsi,0x100(%rsp)
  43c722:	mov    %rax,0xd0(%rsp)
  43c72a:	callq  414df0 <SSL_get_fd@plt>
  43c72f:	cltd   
  43c730:	mov    0x100(%rsp),%rsi
  43c738:	shr    $0x1a,%edx
  43c73b:	lea    (%rax,%rdx,1),%ecx
  43c73e:	and    $0x3f,%ecx
  43c741:	sub    %edx,%ecx
  43c743:	mov    $0x1,%edx
  43c748:	shl    %cl,%rdx
  43c74b:	or     0xd0(%rsp),%rdx
  43c753:	mov    %rdx,0x190(%rsp,%rsi,8)
  43c75b:	jmpq   43c125 <X509_get0_pubkey_bitstr@plt+0x25755>
  43c760:	mov    %rbx,%rdi
  43c763:	callq  414df0 <SSL_get_fd@plt>
  43c768:	movslq %eax,%rdi
  43c76b:	callq  415c10 <__fdelt_chk@plt>
  43c770:	mov    %rax,%rsi
  43c773:	mov    0x210(%rsp,%rax,8),%rax
  43c77b:	mov    %rbx,%rdi
  43c77e:	mov    %rsi,0x100(%rsp)
  43c786:	mov    %rax,0xd0(%rsp)
  43c78e:	callq  414df0 <SSL_get_fd@plt>
  43c793:	cltd   
  43c794:	mov    0x100(%rsp),%rsi
  43c79c:	shr    $0x1a,%edx
  43c79f:	lea    (%rax,%rdx,1),%ecx
  43c7a2:	and    $0x3f,%ecx
  43c7a5:	sub    %edx,%ecx
  43c7a7:	mov    $0x1,%edx
  43c7ac:	shl    %cl,%rdx
  43c7af:	or     0xd0(%rsp),%rdx
  43c7b7:	mov    %rdx,0x210(%rsp,%rsi,8)
  43c7bf:	jmpq   43c12e <X509_get0_pubkey_bitstr@plt+0x2575e>
  43c7c4:	xor    %ecx,%ecx
  43c7c6:	mov    $0x1,%edx
  43c7cb:	mov    $0x29,%esi
  43c7d0:	mov    %r13,%rdi
  43c7d3:	callq  413e30 <SSL_CTX_ctrl@plt>
  43c7d8:	jmpq   43bb1f <X509_get0_pubkey_bitstr@plt+0x2514f>
  43c7dd:	lea    0x2bd56(%rip),%rdi        # 46853a <_fini+0xb036>
  43c7e4:	mov    $0x6,%ecx
  43c7e9:	mov    %rbp,%rsi
  43c7ec:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43c7ee:	je     43c842 <X509_get0_pubkey_bitstr@plt+0x25e72>
  43c7f0:	lea    0x23fe4(%rip),%rsi        # 4607db <_fini+0x32d7>
  43c7f7:	mov    %rbp,%rdi
  43c7fa:	callq  4155c0 <strcmp@plt>
  43c7ff:	test   %eax,%eax
  43c801:	jne    43cacb <X509_get0_pubkey_bitstr@plt+0x260fb>
  43c807:	movl   $0x1,0x23ec43(%rip)        # 67b454 <_edata+0x74c>
  43c811:	movl   $0x1,0x23ec35(%rip)        # 67b450 <_edata+0x748>
  43c81b:	mov    0x11c(%rsp),%ebp
  43c822:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43c827:	mov    0x58(%rsp),%rdx
  43c82c:	mov    (%r15),%rdi
  43c82f:	lea    0x2e32e(%rip),%rsi        # 46ab64 <_fini+0xd660>
  43c836:	xor    %eax,%eax
  43c838:	callq  413c40 <BIO_printf@plt>
  43c83d:	jmpq   43bff8 <X509_get0_pubkey_bitstr@plt+0x25628>
  43c842:	mov    0x11c(%rsp),%ebp
  43c849:	movl   $0x1,0xcc(%rsp)
  43c854:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43c859:	mov    0x23ec19(%rip),%ecx        # 67b478 <_edata+0x770>
  43c85f:	test   %ecx,%ecx
  43c861:	jne    43c4d8 <X509_get0_pubkey_bitstr@plt+0x25b08>
  43c867:	cmpl   $0x0,0x23ebfe(%rip)        # 67b46c <_edata+0x764>
  43c86e:	jne    43c4d8 <X509_get0_pubkey_bitstr@plt+0x25b08>
  43c874:	callq  4159f0 <BIO_s_null@plt>
  43c879:	mov    %rax,%rdi
  43c87c:	callq  414a20 <BIO_new@plt>
  43c881:	mov    %rax,0x23ebd0(%rip)        # 67b458 <_edata+0x750>
  43c888:	jmpq   43b8fc <X509_get0_pubkey_bitstr@plt+0x24f2c>
  43c88d:	nopl   (%rax)
  43c890:	callq  414c30 <__stack_chk_fail@plt>
  43c895:	mov    (%r15),%rdi
  43c898:	xor    %r13d,%r13d
  43c89b:	xor    %ebx,%ebx
  43c89d:	callq  413f40 <ERR_print_errors@plt>
  43c8a2:	jmpq   43ae11 <X509_get0_pubkey_bitstr@plt+0x24441>
  43c8a7:	xor    %ecx,%ecx
  43c8a9:	xor    %edx,%edx
  43c8ab:	mov    $0x4a,%esi
  43c8b0:	mov    %rbx,%rdi
  43c8b3:	callq  4162b0 <SSL_ctrl@plt>
  43c8b8:	test   %rax,%rax
  43c8bb:	jle    43c17a <X509_get0_pubkey_bitstr@plt+0x257aa>
  43c8c1:	mov    (%r15),%rdi
  43c8c4:	lea    0x2b8ca(%rip),%rsi        # 468195 <_fini+0xac91>
  43c8cb:	xor    %eax,%eax
  43c8cd:	callq  413c40 <BIO_printf@plt>
  43c8d2:	jmpq   43c17a <X509_get0_pubkey_bitstr@plt+0x257aa>
  43c8d7:	mov    0xa8(%rsp),%rcx
  43c8df:	xor    %edx,%edx
  43c8e1:	mov    $0x49,%esi
  43c8e6:	mov    %rbx,%rdi
  43c8e9:	callq  4162b0 <SSL_ctrl@plt>
  43c8ee:	test   %rax,%rax
  43c8f1:	mov    0x90(%rsp),%rax
  43c8f9:	cmovne 0xa8(%rsp),%rax
  43c902:	mov    %rax,0x90(%rsp)
  43c90a:	jmpq   43bf70 <X509_get0_pubkey_bitstr@plt+0x255a0>
  43c90f:	mov    (%r15),%rdi
  43c912:	xor    %r13d,%r13d
  43c915:	callq  413f40 <ERR_print_errors@plt>
  43c91a:	jmpq   43ae11 <X509_get0_pubkey_bitstr@plt+0x24441>
  43c91f:	mov    0x48(%rsp),%rdx
  43c924:	mov    (%r15),%rdi
  43c927:	lea    0x2c0bd(%rip),%rsi        # 4689eb <_fini+0xb4e7>
  43c92e:	xor    %eax,%eax
  43c930:	callq  413c40 <BIO_printf@plt>
  43c935:	mov    (%r15),%rdi
  43c938:	callq  413f40 <ERR_print_errors@plt>
  43c93d:	movl   $0x1,0x18(%rsp)
  43c945:	jmpq   43c248 <X509_get0_pubkey_bitstr@plt+0x25878>
  43c94a:	mov    %r14,%rsi
  43c94d:	mov    $0x2000,%edx
  43c952:	mov    %rbp,%rdi
  43c955:	callq  413930 <BIO_read@plt>
  43c95a:	lea    0x2c102(%rip),%rsi        # 468a63 <_fini+0xb55f>
  43c961:	mov    %rbp,%rdi
  43c964:	xor    %eax,%eax
  43c966:	callq  413c40 <BIO_printf@plt>
  43c96b:	mov    0x18(%rsp),%rsi
  43c970:	mov    $0x2000,%edx
  43c975:	mov    %rbp,%rdi
  43c978:	callq  413930 <BIO_read@plt>
  43c97d:	jmpq   43beb3 <X509_get0_pubkey_bitstr@plt+0x254e3>
  43c982:	callq  413840 <BIO_f_buffer@plt>
  43c987:	mov    %rax,%rdi
  43c98a:	callq  414a20 <BIO_new@plt>
  43c98f:	mov    %rbp,%rsi
  43c992:	mov    %rax,%rdi
  43c995:	mov    %rax,%r13
  43c998:	callq  415ac0 <BIO_push@plt>
  43c99d:	jmp    43c9a6 <X509_get0_pubkey_bitstr@plt+0x25fd6>
  43c99f:	cmpb   $0x2d,0x3(%r14)
  43c9a4:	jne    43c9bb <X509_get0_pubkey_bitstr@plt+0x25feb>
  43c9a6:	mov    $0x2000,%edx
  43c9ab:	mov    %r14,%rsi
  43c9ae:	mov    %r13,%rdi
  43c9b1:	callq  4138a0 <BIO_gets@plt>
  43c9b6:	cmp    $0x3,%eax
  43c9b9:	jg     43c99f <X509_get0_pubkey_bitstr@plt+0x25fcf>
  43c9bb:	lea    0x2c07e(%rip),%rsi        # 468a40 <_fini+0xb53c>
  43c9c2:	mov    %r13,%rdi
  43c9c5:	xor    %eax,%eax
  43c9c7:	xor    %r12d,%r12d
  43c9ca:	callq  413c40 <BIO_printf@plt>
  43c9cf:	xor    %ecx,%ecx
  43c9d1:	xor    %edx,%edx
  43c9d3:	mov    $0xb,%esi
  43c9d8:	mov    %r13,%rdi
  43c9db:	callq  412af0 <BIO_ctrl@plt>
  43c9e0:	jmp    43c9e9 <X509_get0_pubkey_bitstr@plt+0x26019>
  43c9e2:	cmpb   $0x2d,0x3(%r14)
  43c9e7:	jne    43ca1f <X509_get0_pubkey_bitstr@plt+0x2604f>
  43c9e9:	mov    $0x2000,%edx
  43c9ee:	mov    %r14,%rsi
  43c9f1:	mov    %r13,%rdi
  43c9f4:	callq  4138a0 <BIO_gets@plt>
  43c9f9:	lea    0x2c05a(%rip),%rsi        # 468a5a <_fini+0xb556>
  43ca00:	mov    %r14,%rdi
  43ca03:	mov    %eax,0x58(%rsp)
  43ca07:	callq  412ce0 <strstr@plt>
  43ca0c:	mov    $0x1,%edx
  43ca11:	test   %rax,%rax
  43ca14:	cmovne %edx,%r12d
  43ca18:	cmpl   $0x3,0x58(%rsp)
  43ca1d:	jg     43c9e2 <X509_get0_pubkey_bitstr@plt+0x26012>
  43ca1f:	xor    %ecx,%ecx
  43ca21:	xor    %edx,%edx
  43ca23:	mov    $0xb,%esi
  43ca28:	mov    %r13,%rdi
  43ca2b:	callq  412af0 <BIO_ctrl@plt>
  43ca30:	mov    %r13,%rdi
  43ca33:	callq  414550 <BIO_pop@plt>
  43ca38:	mov    %r13,%rdi
  43ca3b:	callq  413960 <BIO_free@plt>
  43ca40:	test   %r12d,%r12d
  43ca43:	jne    43ca56 <X509_get0_pubkey_bitstr@plt+0x26086>
  43ca45:	mov    (%r15),%rdi
  43ca48:	lea    0x2cd01(%rip),%rsi        # 469750 <_fini+0xc24c>
  43ca4f:	xor    %eax,%eax
  43ca51:	callq  413c40 <BIO_printf@plt>
  43ca56:	lea    0x2c01e(%rip),%rsi        # 468a7b <_fini+0xb577>
  43ca5d:	jmpq   43c961 <X509_get0_pubkey_bitstr@plt+0x25f91>
  43ca62:	xor    %ecx,%ecx
  43ca64:	mov    %rbx,%rdi
  43ca67:	mov    $0x1,%edx
  43ca6c:	mov    $0x41,%esi
  43ca71:	callq  4162b0 <SSL_ctrl@plt>
  43ca76:	mov    0x40(%rsp),%r13
  43ca7b:	lea    -0x29e2(%rip),%rdx        # 43a0a0 <X509_get0_pubkey_bitstr@plt+0x236d0>
  43ca82:	mov    $0x3f,%esi
  43ca87:	mov    %r13,%rdi
  43ca8a:	callq  414a60 <SSL_CTX_callback_ctrl@plt>
  43ca8f:	mov    0x23e9c2(%rip),%rcx        # 67b458 <_edata+0x750>
  43ca96:	xor    %edx,%edx
  43ca98:	mov    $0x40,%esi
  43ca9d:	mov    %r13,%rdi
  43caa0:	callq  413e30 <SSL_CTX_ctrl@plt>
  43caa5:	jmpq   43be54 <X509_get0_pubkey_bitstr@plt+0x25484>
  43caaa:	callq  416420 <RAND_status@plt>
  43caaf:	test   %eax,%eax
  43cab1:	jne    43b8ee <X509_get0_pubkey_bitstr@plt+0x24f1e>
  43cab7:	mov    (%r15),%rdi
  43caba:	lea    0x234cf(%rip),%rsi        # 45ff90 <_fini+0x2a8c>
  43cac1:	callq  413c40 <BIO_printf@plt>
  43cac6:	jmpq   43b8ee <X509_get0_pubkey_bitstr@plt+0x24f1e>
  43cacb:	lea    0x2be3a(%rip),%rsi        # 46890c <_fini+0xb408>
  43cad2:	mov    %rbp,%rdi
  43cad5:	callq  4155c0 <strcmp@plt>
  43cada:	test   %eax,%eax
  43cadc:	jne    43d31b <X509_get0_pubkey_bitstr@plt+0x2694b>
  43cae2:	movl   $0x1,0x23e964(%rip)        # 67b450 <_edata+0x748>
  43caec:	mov    0x11c(%rsp),%ebp
  43caf3:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43caf8:	mov    0x60(%rsp),%edx
  43cafc:	mov    0x20(%rsp),%rsi
  43cb01:	mov    0x23e950(%rip),%rdi        # 67b458 <_edata+0x750>
  43cb08:	callq  43a4f0 <X509_get0_pubkey_bitstr@plt+0x23b20>
  43cb0d:	jmpq   43c21b <X509_get0_pubkey_bitstr@plt+0x2584b>
  43cb12:	mov    0x140(%rsp),%rdx
  43cb1a:	lea    0x2ccaf(%rip),%rsi        # 4697d0 <_fini+0xc2cc>
  43cb21:	mov    %rbp,%rdi
  43cb24:	xor    %eax,%eax
  43cb26:	callq  413c40 <BIO_printf@plt>
  43cb2b:	jmp    43cb5a <X509_get0_pubkey_bitstr@plt+0x2618a>
  43cb2d:	lea    0x2cd7c(%rip),%rsi        # 4698b0 <_fini+0xc3ac>
  43cb34:	xor    %eax,%eax
  43cb36:	mov    %r14,%rdi
  43cb39:	callq  416780 <strcasestr@plt>
  43cb3e:	test   %eax,%eax
  43cb40:	jne    43cb86 <X509_get0_pubkey_bitstr@plt+0x261b6>
  43cb42:	lea    0x2bf48(%rip),%rsi        # 468a91 <_fini+0xb58d>
  43cb49:	mov    %r14,%rdi
  43cb4c:	callq  412ce0 <strstr@plt>
  43cb51:	test   %rax,%rax
  43cb54:	jne    43d0f1 <X509_get0_pubkey_bitstr@plt+0x26721>
  43cb5a:	mov    $0x2000,%edx
  43cb5f:	mov    %r14,%rsi
  43cb62:	mov    %rbp,%rdi
  43cb65:	callq  413930 <BIO_read@plt>
  43cb6a:	lea    0x2cccf(%rip),%rsi        # 469840 <_fini+0xc33c>
  43cb71:	cltq   
  43cb73:	mov    %r14,%rdi
  43cb76:	movb   $0x0,(%r14,%rax,1)
  43cb7b:	xor    %eax,%eax
  43cb7d:	callq  416780 <strcasestr@plt>
  43cb82:	test   %eax,%eax
  43cb84:	je     43cb2d <X509_get0_pubkey_bitstr@plt+0x2615d>
  43cb86:	lea    0x2cceb(%rip),%rsi        # 469878 <_fini+0xc374>
  43cb8d:	mov    %rbp,%rdi
  43cb90:	xor    %eax,%eax
  43cb92:	callq  413c40 <BIO_printf@plt>
  43cb97:	mov    0x18(%rsp),%r13
  43cb9c:	mov    $0x2000,%edx
  43cba1:	mov    %rbp,%rdi
  43cba4:	mov    %r13,%rsi
  43cba7:	callq  413930 <BIO_read@plt>
  43cbac:	lea    0x2bef0(%rip),%rsi        # 468aa3 <_fini+0xb59f>
  43cbb3:	cltq   
  43cbb5:	mov    %r13,%rdi
  43cbb8:	movb   $0x0,0x0(%r13,%rax,1)
  43cbbe:	callq  412ce0 <strstr@plt>
  43cbc3:	test   %rax,%rax
  43cbc6:	je     43d0f1 <X509_get0_pubkey_bitstr@plt+0x26721>
  43cbcc:	movb   $0x0,(%r14)
  43cbd0:	jmpq   43beb3 <X509_get0_pubkey_bitstr@plt+0x254e3>
  43cbd5:	mov    (%r15),%rdi
  43cbd8:	lea    0x2cb41(%rip),%rsi        # 469720 <_fini+0xc21c>
  43cbdf:	callq  413c40 <BIO_printf@plt>
  43cbe4:	mov    (%r15),%rdi
  43cbe7:	callq  413f40 <ERR_print_errors@plt>
  43cbec:	movl   $0x1,0x18(%rsp)
  43cbf4:	jmpq   43c248 <X509_get0_pubkey_bitstr@plt+0x25878>
  43cbf9:	mov    0x30(%rsp),%rdx
  43cbfe:	mov    (%r15),%rdi
  43cc01:	lea    0x2cce0(%rip),%rsi        # 4698e8 <_fini+0xc3e4>
  43cc08:	xor    %eax,%eax
  43cc0a:	callq  413c40 <BIO_printf@plt>
  43cc0f:	jmpq   43bfd7 <X509_get0_pubkey_bitstr@plt+0x25607>
  43cc14:	lea    0xcbc5(%rip),%rdx        # 4497e0 <X509_get0_pubkey_bitstr@plt+0x32e10>
  43cc1b:	mov    %rbx,%rdi
  43cc1e:	mov    $0x38,%esi
  43cc23:	callq  415d50 <SSL_callback_ctrl@plt>
  43cc28:	mov    0x23e829(%rip),%rcx        # 67b458 <_edata+0x750>
  43cc2f:	xor    %edx,%edx
  43cc31:	mov    $0x39,%esi
  43cc36:	mov    %rbx,%rdi
  43cc39:	callq  4162b0 <SSL_ctrl@plt>
  43cc3e:	jmpq   43be44 <X509_get0_pubkey_bitstr@plt+0x25474>
  43cc43:	lea    0xc4c6(%rip),%rsi        # 449110 <X509_get0_pubkey_bitstr@plt+0x32740>
  43cc4a:	mov    %rbx,%rdi
  43cc4d:	callq  416500 <SSL_set_msg_callback@plt>
  43cc52:	mov    0x23e7ff(%rip),%rcx        # 67b458 <_edata+0x750>
  43cc59:	xor    %edx,%edx
  43cc5b:	mov    $0x10,%esi
  43cc60:	mov    %rbx,%rdi
  43cc63:	callq  4162b0 <SSL_ctrl@plt>
  43cc68:	jmpq   43be34 <X509_get0_pubkey_bitstr@plt+0x25464>
  43cc6d:	mov    %rbx,%rdi
  43cc70:	mov    $0x1,%esi
  43cc75:	callq  4134a0 <SSL_set_debug@plt>
  43cc7a:	lea    0xc1bf(%rip),%rsi        # 448e40 <X509_get0_pubkey_bitstr@plt+0x32470>
  43cc81:	mov    %rbp,%rdi
  43cc84:	callq  413800 <BIO_set_callback@plt>
  43cc89:	mov    0x23e7c8(%rip),%rsi        # 67b458 <_edata+0x750>
  43cc90:	mov    %rbp,%rdi
  43cc93:	callq  4140d0 <BIO_set_callback_arg@plt>
  43cc98:	jmpq   43be24 <X509_get0_pubkey_bitstr@plt+0x25454>
  43cc9d:	callq  415f20 <BIO_f_nbio_test@plt>
  43cca2:	mov    %rax,%rdi
  43cca5:	callq  414a20 <BIO_new@plt>
  43ccaa:	mov    %rbp,%rsi
  43ccad:	mov    %rax,%rdi
  43ccb0:	callq  415ac0 <BIO_push@plt>
  43ccb5:	mov    %rax,%rbp
  43ccb8:	jmpq   43be14 <X509_get0_pubkey_bitstr@plt+0x25444>
  43ccbd:	callq  415d20 <BIO_new_dgram@plt>
  43ccc2:	mov    0xf0(%rsp),%rdx
  43ccca:	mov    0xb0(%rsp),%rsi
  43ccd2:	mov    %rax,%rbp
  43ccd5:	mov    0x12c(%rsp),%edi
  43ccdc:	callq  414570 <getsockname@plt>
  43cce1:	test   %eax,%eax
  43cce3:	js     43cedb <X509_get0_pubkey_bitstr@plt+0x2650b>
  43cce9:	mov    0xb0(%rsp),%rcx
  43ccf1:	mov    $0x1,%edx
  43ccf6:	mov    $0x20,%esi
  43ccfb:	mov    %rbp,%rdi
  43ccfe:	callq  412af0 <BIO_ctrl@plt>
  43cd03:	cmpl   $0x0,0xdc(%rsp)
  43cd0b:	jne    43ce7a <X509_get0_pubkey_bitstr@plt+0x264aa>
  43cd11:	xor    %ecx,%ecx
  43cd13:	cmpq   $0x1c,0xc0(%rsp)
  43cd1c:	jle    43cd5e <X509_get0_pubkey_bitstr@plt+0x2638e>
  43cd1e:	mov    %rbx,%rdi
  43cd21:	mov    $0x1000,%edx
  43cd26:	mov    $0x20,%esi
  43cd2b:	callq  4162b0 <SSL_ctrl@plt>
  43cd30:	mov    0xf8(%rsp),%rdx
  43cd38:	xor    %ecx,%ecx
  43cd3a:	mov    $0x11,%esi
  43cd3f:	mov    %rbx,%rdi
  43cd42:	callq  4162b0 <SSL_ctrl@plt>
  43cd47:	jmpq   43be05 <X509_get0_pubkey_bitstr@plt+0x25435>
  43cd4c:	mov    $0x1,%esi
  43cd51:	mov    %rbx,%rdi
  43cd54:	callq  4134a0 <SSL_set_debug@plt>
  43cd59:	jmpq   43bde1 <X509_get0_pubkey_bitstr@plt+0x25411>
  43cd5e:	xor    %edx,%edx
  43cd60:	mov    $0x27,%esi
  43cd65:	mov    %rbp,%rdi
  43cd68:	callq  412af0 <BIO_ctrl@plt>
  43cd6d:	jmpq   43be05 <X509_get0_pubkey_bitstr@plt+0x25435>
  43cd72:	mov    0x23e6df(%rip),%rdi        # 67b458 <_edata+0x750>
  43cd79:	lea    0x2b3e8(%rip),%rsi        # 468168 <_fini+0xac64>
  43cd80:	xor    %eax,%eax
  43cd82:	movq   $0x1,0x158(%rsp)
  43cd8e:	callq  413c40 <BIO_printf@plt>
  43cd93:	mov    0xe8(%rsp),%rdx
  43cd9b:	mov    0x12c(%rsp),%edi
  43cda2:	mov    $0x5421,%esi
  43cda7:	callq  415590 <BIO_socket_ioctl@plt>
  43cdac:	test   %eax,%eax
  43cdae:	jns    43bdd4 <X509_get0_pubkey_bitstr@plt+0x25404>
  43cdb4:	mov    (%r15),%rdi
  43cdb7:	mov    0x28(%rsp),%r12
  43cdbc:	mov    0x40(%rsp),%r13
  43cdc1:	mov    0x18(%rsp),%r14
  43cdc6:	mov    0x48(%rsp),%rbp
  43cdcb:	mov    0x50(%rsp),%rbx
  43cdd0:	callq  413f40 <ERR_print_errors@plt>
  43cdd5:	movl   $0x1,0x18(%rsp)
  43cddd:	jmpq   43c248 <X509_get0_pubkey_bitstr@plt+0x25878>
  43cde2:	movslq 0x8c(%rsp),%rdi
  43cdea:	mov    0x84(%rsp),%esi
  43cdf1:	add    0x18(%rsp),%rdi
  43cdf6:	callq  448a80 <X509_get0_pubkey_bitstr@plt+0x320b0>
  43cdfb:	test   %eax,%eax
  43cdfd:	jle    43d22d <X509_get0_pubkey_bitstr@plt+0x2685d>
  43ce03:	sub    %eax,0x84(%rsp)
  43ce0a:	add    %eax,0x8c(%rsp)
  43ce11:	mov    $0x1,%eax
  43ce16:	mov    0x84(%rsp),%edx
  43ce1d:	test   %edx,%edx
  43ce1f:	cmovle %eax,%r14d
  43ce23:	mov    $0x0,%al
  43ce25:	cmovg  0x68(%rsp),%eax
  43ce2a:	mov    %eax,0x68(%rsp)
  43ce2e:	jmpq   43bf2c <X509_get0_pubkey_bitstr@plt+0x2555c>
  43ce33:	movslq 0x78(%rsp),%rsi
  43ce38:	mov    %ebp,%edx
  43ce3a:	mov    %rbx,%rdi
  43ce3d:	add    0x28(%rsp),%rsi
  43ce42:	callq  4136c0 <SSL_write@plt>
  43ce47:	mov    %rbx,%rdi
  43ce4a:	mov    %eax,%esi
  43ce4c:	mov    %eax,0x90(%rsp)
  43ce53:	callq  416920 <SSL_get_error@plt>
  43ce58:	cmp    $0x6,%eax
  43ce5b:	ja     43bf2c <X509_get0_pubkey_bitstr@plt+0x2555c>
  43ce61:	lea    0x2cae0(%rip),%rdx        # 469948 <_fini+0xc444>
  43ce68:	mov    %eax,%eax
  43ce6a:	movslq (%rdx,%rax,4),%rax
  43ce6e:	add    %rdx,%rax
  43ce71:	mov    0x90(%rsp),%edx
  43ce78:	jmpq   *%rax
  43ce7a:	lea    0x160(%rsp),%r12
  43ce82:	xor    %edx,%edx
  43ce84:	mov    %rbp,%rdi
  43ce87:	mov    $0x21,%esi
  43ce8c:	movq   $0x0,0x160(%rsp)
  43ce98:	movq   $0x3d090,0x168(%rsp)
  43cea4:	mov    %r12,%rcx
  43cea7:	callq  412af0 <BIO_ctrl@plt>
  43ceac:	mov    %r12,%rcx
  43ceaf:	xor    %edx,%edx
  43ceb1:	mov    $0x23,%esi
  43ceb6:	mov    %rbp,%rdi
  43ceb9:	movq   $0x0,0x160(%rsp)
  43cec5:	movq   $0x3d090,0x168(%rsp)
  43ced1:	callq  412af0 <BIO_ctrl@plt>
  43ced6:	jmpq   43cd11 <X509_get0_pubkey_bitstr@plt+0x26341>
  43cedb:	callq  412830 <__errno_location@plt>
  43cee0:	mov    0x28(%rsp),%r12
  43cee5:	mov    0x40(%rsp),%r13
  43ceea:	lea    0x2bb39(%rip),%rsi        # 468a2a <_fini+0xb526>
  43cef1:	mov    0x18(%rsp),%r14
  43cef6:	mov    0x48(%rsp),%rbp
  43cefb:	mov    0x50(%rsp),%rbx
  43cf00:	mov    (%rax),%edx
  43cf02:	mov    (%r15),%rdi
  43cf05:	xor    %eax,%eax
  43cf07:	callq  413c40 <BIO_printf@plt>
  43cf0c:	mov    0x12c(%rsp),%edi
  43cf13:	xor    %esi,%esi
  43cf15:	callq  415460 <shutdown@plt>
  43cf1a:	mov    0x12c(%rsp),%edi
  43cf21:	callq  4168a0 <close@plt>
  43cf26:	movl   $0x1,0x18(%rsp)
  43cf2e:	jmpq   43c248 <X509_get0_pubkey_bitstr@plt+0x25878>
  43cf33:	or     %ebp,%edx
  43cf35:	jne    43cf61 <X509_get0_pubkey_bitstr@plt+0x26591>
  43cf37:	xor    %r12d,%r12d
  43cf3a:	mov    $0x1,%r13d
  43cf40:	xor    %ebp,%ebp
  43cf42:	jmpq   43bf2c <X509_get0_pubkey_bitstr@plt+0x2555c>
  43cf47:	mov    0x23e50a(%rip),%rdi        # 67b458 <_edata+0x750>
  43cf4e:	lea    0x2bb75(%rip),%rsi        # 468aca <_fini+0xb5c6>
  43cf55:	xor    %eax,%eax
  43cf57:	callq  413c40 <BIO_printf@plt>
  43cf5c:	jmpq   43bf2c <X509_get0_pubkey_bitstr@plt+0x2555c>
  43cf61:	mov    0x58(%rsp),%rax
  43cf66:	mov    0x28(%rsp),%r12
  43cf6b:	mov    0x40(%rsp),%r13
  43cf70:	mov    0x18(%rsp),%r14
  43cf75:	mov    0x48(%rsp),%rbp
  43cf7a:	mov    0x50(%rsp),%rbx
  43cf7f:	mov    %rax,0x10(%rsp)
  43cf84:	callq  412830 <__errno_location@plt>
  43cf89:	mov    (%r15),%rdi
  43cf8c:	mov    (%rax),%edx
  43cf8e:	lea    0x2bb4e(%rip),%rsi        # 468ae3 <_fini+0xb5df>
  43cf95:	xor    %eax,%eax
  43cf97:	callq  413c40 <BIO_printf@plt>
  43cf9c:	movl   $0x1,0x18(%rsp)
  43cfa4:	jmpq   43c20f <X509_get0_pubkey_bitstr@plt+0x2583f>
  43cfa9:	lea    0x2b384(%rip),%rsi        # 468334 <_fini+0xae30>
  43cfb0:	jmpq   43c293 <X509_get0_pubkey_bitstr@plt+0x258c3>
  43cfb5:	mov    0x23e49c(%rip),%rdi        # 67b458 <_edata+0x750>
  43cfbc:	lea    0x2baf8(%rip),%rsi        # 468abb <_fini+0xb5b7>
  43cfc3:	xor    %eax,%eax
  43cfc5:	mov    $0x1,%r14d
  43cfcb:	xor    %r12d,%r12d
  43cfce:	callq  413c40 <BIO_printf@plt>
  43cfd3:	movl   $0x0,0x68(%rsp)
  43cfdb:	jmpq   43bf2c <X509_get0_pubkey_bitstr@plt+0x2555c>
  43cfe0:	add    %edx,0x78(%rsp)
  43cfe4:	sub    %edx,%ebp
  43cfe6:	test   %edx,%edx
  43cfe8:	jle    43d2eb <X509_get0_pubkey_bitstr@plt+0x2691b>
  43cfee:	xor    %r12d,%r12d
  43cff1:	test   %ebp,%ebp
  43cff3:	setle  %r13b
  43cff7:	setg   %r12b
  43cffb:	movzbl %r13b,%r13d
  43cfff:	jmpq   43bf2c <X509_get0_pubkey_bitstr@plt+0x2555c>
  43d004:	test   %ebp,%ebp
  43d006:	jne    43d42f <X509_get0_pubkey_bitstr@plt+0x26a5f>
  43d00c:	xor    %r12d,%r12d
  43d00f:	mov    $0x1,%r13d
  43d015:	jmpq   43bf2c <X509_get0_pubkey_bitstr@plt+0x2555c>
  43d01a:	xor    %ebx,%ebx
  43d01c:	jmpq   43b8ad <X509_get0_pubkey_bitstr@plt+0x24edd>
  43d021:	mov    0x23e430(%rip),%rdi        # 67b458 <_edata+0x750>
  43d028:	lea    0x2c8d9(%rip),%rsi        # 469908 <_fini+0xc404>
  43d02f:	xor    %eax,%eax
  43d031:	mov    0x58(%rsp),%r14
  43d036:	subl   $0x1,0xc8(%rsp)
  43d03e:	callq  413c40 <BIO_printf@plt>
  43d043:	mov    %rbx,%rdi
  43d046:	callq  414890 <SSL_shutdown@plt>
  43d04b:	mov    %rbx,%rdi
  43d04e:	callq  414680 <SSL_set_connect_state@plt>
  43d053:	mov    %rbx,%rdi
  43d056:	callq  414df0 <SSL_get_fd@plt>
  43d05b:	xor    %esi,%esi
  43d05d:	mov    %eax,%edi
  43d05f:	callq  415460 <shutdown@plt>
  43d064:	mov    %rbx,%rdi
  43d067:	callq  414df0 <SSL_get_fd@plt>
  43d06c:	mov    %eax,%edi
  43d06e:	callq  4168a0 <close@plt>
  43d073:	movl   $0x0,0x60(%rsp)
  43d07b:	movl   $0x0,0x38(%rsp)
  43d083:	jmpq   43bd7e <X509_get0_pubkey_bitstr@plt+0x253ae>
  43d088:	callq  413840 <BIO_f_buffer@plt>
  43d08d:	mov    %rax,%rdi
  43d090:	callq  414a20 <BIO_new@plt>
  43d095:	mov    %rbp,%rsi
  43d098:	mov    %rax,%rdi
  43d09b:	mov    %rax,%r12
  43d09e:	callq  415ac0 <BIO_push@plt>
  43d0a3:	jmp    43d0af <X509_get0_pubkey_bitstr@plt+0x266df>
  43d0a5:	nopl   (%rax)
  43d0a8:	cmpb   $0x2d,0x3(%r14)
  43d0ad:	jne    43d0c4 <X509_get0_pubkey_bitstr@plt+0x266f4>
  43d0af:	mov    $0x2000,%edx
  43d0b4:	mov    %r14,%rsi
  43d0b7:	mov    %r12,%rdi
  43d0ba:	callq  4138a0 <BIO_gets@plt>
  43d0bf:	cmp    $0x3,%eax
  43d0c2:	jg     43d0a8 <X509_get0_pubkey_bitstr@plt+0x266d8>
  43d0c4:	mov    $0xb,%esi
  43d0c9:	xor    %ecx,%ecx
  43d0cb:	xor    %edx,%edx
  43d0cd:	mov    %r12,%rdi
  43d0d0:	callq  412af0 <BIO_ctrl@plt>
  43d0d5:	mov    %r12,%rdi
  43d0d8:	callq  414550 <BIO_pop@plt>
  43d0dd:	mov    %r12,%rdi
  43d0e0:	callq  413960 <BIO_free@plt>
  43d0e5:	lea    0x2b99a(%rip),%rsi        # 468a86 <_fini+0xb582>
  43d0ec:	jmpq   43c961 <X509_get0_pubkey_bitstr@plt+0x25f91>
  43d0f1:	mov    0x60(%rsp),%eax
  43d0f5:	mov    0x18(%rsp),%r14
  43d0fa:	mov    0x28(%rsp),%r12
  43d0ff:	mov    0x40(%rsp),%r13
  43d104:	mov    0x48(%rsp),%rbp
  43d109:	mov    0x50(%rsp),%rbx
  43d10e:	mov    %eax,0x70(%rsp)
  43d112:	movl   $0x1,0x18(%rsp)
  43d11a:	jmpq   43c20f <X509_get0_pubkey_bitstr@plt+0x2583f>
  43d11f:	xor    %eax,%eax
  43d121:	mov    %ebp,%edx
  43d123:	sub    $0x1,%edx
  43d126:	js     43d169 <X509_get0_pubkey_bitstr@plt+0x26799>
  43d128:	mov    0x28(%rsp),%rsi
  43d12d:	movslq %edx,%rcx
  43d130:	add    %rsi,%rcx
  43d133:	jmp    43d144 <X509_get0_pubkey_bitstr@plt+0x26774>
  43d135:	nopl   (%rax)
  43d138:	sub    $0x1,%edx
  43d13b:	sub    $0x1,%rcx
  43d13f:	cmp    $0xffffffff,%edx
  43d142:	je     43d169 <X509_get0_pubkey_bitstr@plt+0x26799>
  43d144:	movzbl (%rcx),%r8d
  43d148:	lea    (%rdx,%rax,1),%edi
  43d14b:	movslq %edi,%rdi
  43d14e:	mov    %r8b,(%rsi,%rdi,1)
  43d152:	cmpb   $0xa,(%rcx)
  43d155:	jne    43d138 <X509_get0_pubkey_bitstr@plt+0x26768>
  43d157:	sub    $0x1,%eax
  43d15a:	add    $0x1,%ebp
  43d15d:	lea    (%rdx,%rax,1),%edi
  43d160:	movslq %edi,%rdi
  43d163:	movb   $0xd,(%rsi,%rdi,1)
  43d167:	jmp    43d138 <X509_get0_pubkey_bitstr@plt+0x26768>
  43d169:	test   %eax,%eax
  43d16b:	jne    43d1b0 <X509_get0_pubkey_bitstr@plt+0x267e0>
  43d16d:	cmpl   $0x0,0x23e2dc(%rip)        # 67b450 <_edata+0x748>
  43d174:	jne    43d19a <X509_get0_pubkey_bitstr@plt+0x267ca>
  43d176:	test   %ebp,%ebp
  43d178:	jle    43d29b <X509_get0_pubkey_bitstr@plt+0x268cb>
  43d17e:	mov    0x28(%rsp),%rax
  43d183:	movzbl (%rax),%eax
  43d186:	cmp    $0x51,%al
  43d188:	je     43d29b <X509_get0_pubkey_bitstr@plt+0x268cb>
  43d18e:	cmp    $0x52,%al
  43d190:	je     43d272 <X509_get0_pubkey_bitstr@plt+0x268a2>
  43d196:	cmp    $0x42,%al
  43d198:	je     43d1cf <X509_get0_pubkey_bitstr@plt+0x267ff>
  43d19a:	mov    $0x1,%r12d
  43d1a0:	xor    %r13d,%r13d
  43d1a3:	movl   $0x0,0x78(%rsp)
  43d1ab:	jmpq   43bf2c <X509_get0_pubkey_bitstr@plt+0x2555c>
  43d1b0:	lea    0x2c7ad(%rip),%rcx        # 469964 <_fini+0xc460>
  43d1b7:	lea    0x2b6f1(%rip),%rsi        # 4688af <_fini+0xb3ab>
  43d1be:	lea    0x2afe1(%rip),%rdi        # 4681a6 <_fini+0xaca2>
  43d1c5:	mov    $0x749,%edx
  43d1ca:	callq  413d40 <__assert_fail@plt>
  43d1cf:	mov    (%r15),%rdi
  43d1d2:	lea    0x2aff7(%rip),%rsi        # 4681d0 <_fini+0xaccc>
  43d1d9:	xor    %eax,%eax
  43d1db:	mov    $0x1,%r12d
  43d1e1:	xor    %r13d,%r13d
  43d1e4:	xor    %ebp,%ebp
  43d1e6:	callq  413c40 <BIO_printf@plt>
  43d1eb:	xor    %ecx,%ecx
  43d1ed:	xor    %edx,%edx
  43d1ef:	mov    $0x55,%esi
  43d1f4:	mov    %rbx,%rdi
  43d1f7:	callq  4162b0 <SSL_ctrl@plt>
  43d1fc:	jmpq   43bf2c <X509_get0_pubkey_bitstr@plt+0x2555c>
  43d201:	callq  412830 <__errno_location@plt>
  43d206:	mov    0x28(%rsp),%r12
  43d20b:	mov    0x40(%rsp),%r13
  43d210:	lea    0x2b7f0(%rip),%rsi        # 468a07 <_fini+0xb503>
  43d217:	mov    0x18(%rsp),%r14
  43d21c:	mov    0x48(%rsp),%rbp
  43d221:	mov    0x50(%rsp),%rbx
  43d226:	mov    (%rax),%edx
  43d228:	jmpq   43cf02 <X509_get0_pubkey_bitstr@plt+0x26532>
  43d22d:	mov    0x58(%rsp),%rax
  43d232:	mov    0x23e21f(%rip),%rdi        # 67b458 <_edata+0x750>
  43d239:	lea    0x2af72(%rip),%rsi        # 4681b2 <_fini+0xacae>
  43d240:	mov    0x28(%rsp),%r12
  43d245:	mov    0x40(%rsp),%r13
  43d24a:	mov    0x18(%rsp),%r14
  43d24f:	mov    0x48(%rsp),%rbp
  43d254:	mov    %rax,0x10(%rsp)
  43d259:	xor    %eax,%eax
  43d25b:	mov    0x50(%rsp),%rbx
  43d260:	callq  413c40 <BIO_printf@plt>
  43d265:	movl   $0x0,0x18(%rsp)
  43d26d:	jmpq   43c20f <X509_get0_pubkey_bitstr@plt+0x2583f>
  43d272:	mov    (%r15),%rdi
  43d275:	lea    0x2b8aa(%rip),%rsi        # 468b26 <_fini+0xb622>
  43d27c:	xor    %eax,%eax
  43d27e:	mov    $0x1,%r12d
  43d284:	xor    %r13d,%r13d
  43d287:	xor    %ebp,%ebp
  43d289:	callq  413c40 <BIO_printf@plt>
  43d28e:	mov    %rbx,%rdi
  43d291:	callq  413e00 <SSL_renegotiate@plt>
  43d296:	jmpq   43bf2c <X509_get0_pubkey_bitstr@plt+0x2555c>
  43d29b:	mov    0x58(%rsp),%rax
  43d2a0:	mov    (%r15),%rdi
  43d2a3:	lea    0x2af08(%rip),%rsi        # 4681b2 <_fini+0xacae>
  43d2aa:	mov    0x28(%rsp),%r12
  43d2af:	mov    0x40(%rsp),%r13
  43d2b4:	mov    0x18(%rsp),%r14
  43d2b9:	mov    0x48(%rsp),%rbp
  43d2be:	mov    %rax,0x10(%rsp)
  43d2c3:	xor    %eax,%eax
  43d2c5:	mov    0x50(%rsp),%rbx
  43d2ca:	callq  413c40 <BIO_printf@plt>
  43d2cf:	movl   $0x0,0x18(%rsp)
  43d2d7:	jmpq   43c20f <X509_get0_pubkey_bitstr@plt+0x2583f>
  43d2dc:	mov    0x20(%rsp),%rax
  43d2e1:	mov    %rax,0x58(%rsp)
  43d2e6:	jmpq   43b843 <X509_get0_pubkey_bitstr@plt+0x24e73>
  43d2eb:	mov    0x58(%rsp),%rax
  43d2f0:	mov    0x18(%rsp),%r14
  43d2f5:	mov    0x28(%rsp),%r12
  43d2fa:	mov    0x40(%rsp),%r13
  43d2ff:	mov    0x48(%rsp),%rbp
  43d304:	mov    0x50(%rsp),%rbx
  43d309:	mov    %rax,0x10(%rsp)
  43d30e:	movl   $0x1,0x18(%rsp)
  43d316:	jmpq   43c248 <X509_get0_pubkey_bitstr@plt+0x25878>
  43d31b:	lea    0x2b5f3(%rip),%rsi        # 468915 <_fini+0xb411>
  43d322:	mov    %rbp,%rdi
  43d325:	callq  4155c0 <strcmp@plt>
  43d32a:	test   %eax,%eax
  43d32c:	jne    43d4bc <X509_get0_pubkey_bitstr@plt+0x26aec>
  43d332:	movl   $0x0,0x23e114(%rip)        # 67b450 <_edata+0x748>
  43d33c:	mov    0x11c(%rsp),%ebp
  43d343:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d348:	mov    0x28(%rsp),%rdi
  43d34d:	mov    $0x2000,%esi
  43d352:	callq  448a50 <X509_get0_pubkey_bitstr@plt+0x32080>
  43d357:	mov    %eax,%ebp
  43d359:	jmpq   43d16d <X509_get0_pubkey_bitstr@plt+0x2679d>
  43d35e:	callq  413840 <BIO_f_buffer@plt>
  43d363:	mov    %rax,%rdi
  43d366:	xor    %r12d,%r12d
  43d369:	callq  414a20 <BIO_new@plt>
  43d36e:	mov    %rbp,%rsi
  43d371:	mov    %rax,%r13
  43d374:	mov    %rax,%rdi
  43d377:	callq  415ac0 <BIO_push@plt>
  43d37c:	mov    $0x2000,%edx
  43d381:	mov    %r14,%rsi
  43d384:	mov    %r13,%rdi
  43d387:	callq  4138a0 <BIO_gets@plt>
  43d38c:	lea    0x2b6d7(%rip),%rsi        # 468a6a <_fini+0xb566>
  43d393:	mov    %r13,%rdi
  43d396:	xor    %eax,%eax
  43d398:	callq  413c40 <BIO_printf@plt>
  43d39d:	xor    %ecx,%ecx
  43d39f:	xor    %edx,%edx
  43d3a1:	mov    $0xb,%esi
  43d3a6:	mov    %r13,%rdi
  43d3a9:	callq  412af0 <BIO_ctrl@plt>
  43d3ae:	jmp    43d3b6 <X509_get0_pubkey_bitstr@plt+0x269e6>
  43d3b0:	cmpb   $0x2e,(%r14)
  43d3b4:	je     43d3ec <X509_get0_pubkey_bitstr@plt+0x26a1c>
  43d3b6:	mov    $0x2000,%edx
  43d3bb:	mov    %r14,%rsi
  43d3be:	mov    %r13,%rdi
  43d3c1:	callq  4138a0 <BIO_gets@plt>
  43d3c6:	lea    0x2b68d(%rip),%rsi        # 468a5a <_fini+0xb556>
  43d3cd:	mov    %r14,%rdi
  43d3d0:	mov    %eax,0x58(%rsp)
  43d3d4:	callq  412ce0 <strstr@plt>
  43d3d9:	mov    $0x1,%edx
  43d3de:	test   %rax,%rax
  43d3e1:	cmovne %edx,%r12d
  43d3e5:	cmpl   $0x3,0x58(%rsp)
  43d3ea:	jg     43d3b0 <X509_get0_pubkey_bitstr@plt+0x269e0>
  43d3ec:	xor    %ecx,%ecx
  43d3ee:	xor    %edx,%edx
  43d3f0:	mov    $0xb,%esi
  43d3f5:	mov    %r13,%rdi
  43d3f8:	callq  412af0 <BIO_ctrl@plt>
  43d3fd:	mov    %r13,%rdi
  43d400:	callq  414550 <BIO_pop@plt>
  43d405:	mov    %r13,%rdi
  43d408:	callq  413960 <BIO_free@plt>
  43d40d:	test   %r12d,%r12d
  43d410:	jne    43d423 <X509_get0_pubkey_bitstr@plt+0x26a53>
  43d412:	mov    (%r15),%rdi
  43d415:	lea    0x2c374(%rip),%rsi        # 469790 <_fini+0xc28c>
  43d41c:	xor    %eax,%eax
  43d41e:	callq  413c40 <BIO_printf@plt>
  43d423:	lea    0x2b64f(%rip),%rsi        # 468a79 <_fini+0xb575>
  43d42a:	jmpq   43c961 <X509_get0_pubkey_bitstr@plt+0x25f91>
  43d42f:	mov    0x58(%rsp),%rax
  43d434:	mov    0x23e01d(%rip),%rdi        # 67b458 <_edata+0x750>
  43d43b:	lea    0x2b697(%rip),%rsi        # 468ad9 <_fini+0xb5d5>
  43d442:	mov    0x28(%rsp),%r12
  43d447:	mov    0x40(%rsp),%r13
  43d44c:	mov    0x18(%rsp),%r14
  43d451:	mov    0x48(%rsp),%rbp
  43d456:	mov    %rax,0x10(%rsp)
  43d45b:	xor    %eax,%eax
  43d45d:	mov    0x50(%rsp),%rbx
  43d462:	callq  413c40 <BIO_printf@plt>
  43d467:	movl   $0x0,0x18(%rsp)
  43d46f:	jmpq   43c20f <X509_get0_pubkey_bitstr@plt+0x2583f>
  43d474:	mov    0x58(%rsp),%rax
  43d479:	mov    0x28(%rsp),%r12
  43d47e:	mov    0x40(%rsp),%r13
  43d483:	mov    0x18(%rsp),%r14
  43d488:	mov    0x48(%rsp),%rbp
  43d48d:	mov    0x50(%rsp),%rbx
  43d492:	mov    %rax,0x10(%rsp)
  43d497:	callq  412830 <__errno_location@plt>
  43d49c:	mov    (%r15),%rdi
  43d49f:	mov    (%rax),%edx
  43d4a1:	lea    0x2b604(%rip),%rsi        # 468aac <_fini+0xb5a8>
  43d4a8:	xor    %eax,%eax
  43d4aa:	callq  413c40 <BIO_printf@plt>
  43d4af:	movl   $0x1,0x18(%rsp)
  43d4b7:	jmpq   43c20f <X509_get0_pubkey_bitstr@plt+0x2583f>
  43d4bc:	lea    0x2b45e(%rip),%rsi        # 468921 <_fini+0xb41d>
  43d4c3:	mov    %rbp,%rdi
  43d4c6:	callq  4155c0 <strcmp@plt>
  43d4cb:	test   %eax,%eax
  43d4cd:	jne    43d4e5 <X509_get0_pubkey_bitstr@plt+0x26b15>
  43d4cf:	movl   $0x1,0x23dfa3(%rip)        # 67b47c <_edata+0x774>
  43d4d9:	mov    0x11c(%rsp),%ebp
  43d4e0:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d4e5:	lea    0x22cc5(%rip),%rsi        # 4601b1 <_fini+0x2cad>
  43d4ec:	mov    %rbp,%rdi
  43d4ef:	callq  4155c0 <strcmp@plt>
  43d4f4:	test   %eax,%eax
  43d4f6:	jne    43d50e <X509_get0_pubkey_bitstr@plt+0x26b3e>
  43d4f8:	movl   $0x1,0x23df76(%rip)        # 67b478 <_edata+0x770>
  43d502:	mov    0x11c(%rsp),%ebp
  43d509:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d50e:	lea    0x2afc7(%rip),%rsi        # 4684dc <_fini+0xafd8>
  43d515:	mov    %rbp,%rdi
  43d518:	callq  4155c0 <strcmp@plt>
  43d51d:	test   %eax,%eax
  43d51f:	jne    43d537 <X509_get0_pubkey_bitstr@plt+0x26b67>
  43d521:	movl   $0x1,0x23df49(%rip)        # 67b474 <_edata+0x76c>
  43d52b:	mov    0x11c(%rsp),%ebp
  43d532:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d537:	lea    0x23af3(%rip),%rsi        # 461031 <_fini+0x3b2d>
  43d53e:	mov    %rbp,%rdi
  43d541:	callq  4155c0 <strcmp@plt>
  43d546:	test   %eax,%eax
  43d548:	jne    43d560 <X509_get0_pubkey_bitstr@plt+0x26b90>
  43d54a:	movl   $0x1,0x23df1c(%rip)        # 67b470 <_edata+0x768>
  43d554:	mov    0x11c(%rsp),%ebp
  43d55b:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d560:	lea    0x2afc1(%rip),%rsi        # 468528 <_fini+0xb024>
  43d567:	mov    %rbp,%rdi
  43d56a:	callq  4155c0 <strcmp@plt>
  43d56f:	test   %eax,%eax
  43d571:	jne    43d589 <X509_get0_pubkey_bitstr@plt+0x26bb9>
  43d573:	movl   $0x1,0x23deef(%rip)        # 67b46c <_edata+0x764>
  43d57d:	mov    0x11c(%rsp),%ebp
  43d584:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d589:	lea    0x2b398(%rip),%rsi        # 468928 <_fini+0xb424>
  43d590:	mov    %rbp,%rdi
  43d593:	callq  4155c0 <strcmp@plt>
  43d598:	test   %eax,%eax
  43d59a:	jne    43d5b2 <X509_get0_pubkey_bitstr@plt+0x26be2>
  43d59c:	movl   $0x1,0x23dec2(%rip)        # 67b468 <_edata+0x760>
  43d5a6:	mov    0x11c(%rsp),%ebp
  43d5ad:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d5b2:	lea    0x2af18(%rip),%rsi        # 4684d1 <_fini+0xafcd>
  43d5b9:	mov    %rbp,%rdi
  43d5bc:	callq  4155c0 <strcmp@plt>
  43d5c1:	test   %eax,%eax
  43d5c3:	jne    43d5dc <X509_get0_pubkey_bitstr@plt+0x26c0c>
  43d5c5:	mov    0x11c(%rsp),%ebp
  43d5cc:	movl   $0x1,0xd8(%rsp)
  43d5d7:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d5dc:	lea    0x2af50(%rip),%rsi        # 468533 <_fini+0xb02f>
  43d5e3:	mov    %rbp,%rdi
  43d5e6:	callq  4155c0 <strcmp@plt>
  43d5eb:	test   %eax,%eax
  43d5ed:	jne    43d606 <X509_get0_pubkey_bitstr@plt+0x26c36>
  43d5ef:	mov    0x11c(%rsp),%ebp
  43d5f6:	movl   $0x1,0x8c(%rsp)
  43d601:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d606:	lea    0x2b326(%rip),%rsi        # 468933 <_fini+0xb42f>
  43d60d:	mov    %rbp,%rdi
  43d610:	callq  4155c0 <strcmp@plt>
  43d615:	test   %eax,%eax
  43d617:	jne    43d646 <X509_get0_pubkey_bitstr@plt+0x26c76>
  43d619:	mov    0x11c(%rsp),%eax
  43d620:	lea    -0x1(%rax),%ebp
  43d623:	test   %ebp,%ebp
  43d625:	mov    %ebp,0x11c(%rsp)
  43d62c:	jle    43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43d632:	mov    0x8(%rbx),%rax
  43d636:	add    $0x8,%rbx
  43d63a:	mov    %rax,0x23ba77(%rip)        # 6790b8 <_fini+0x21bbb4>
  43d641:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d646:	lea    0x2af21(%rip),%rsi        # 46856e <_fini+0xb06a>
  43d64d:	mov    %rbp,%rdi
  43d650:	callq  4155c0 <strcmp@plt>
  43d655:	test   %eax,%eax
  43d657:	jne    43d6f5 <X509_get0_pubkey_bitstr@plt+0x26d25>
  43d65d:	mov    0x11c(%rsp),%eax
  43d664:	lea    -0x1(%rax),%esi
  43d667:	test   %esi,%esi
  43d669:	mov    %esi,0x11c(%rsp)
  43d670:	jle    43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43d676:	lea    0x8(%rbx),%r8
  43d67a:	lea    0x23dccf(%rip),%rax        # 67b350 <_edata+0x648>
  43d681:	mov    0x8(%rbx),%rbx
  43d685:	or     $0xffffffffffffffff,%rcx
  43d689:	xor    %ebp,%ebp
  43d68b:	mov    %r8,0x110(%rsp)
  43d693:	mov    %rbx,(%rax)
  43d696:	mov    %rbx,%rdi
  43d699:	xor    %eax,%eax
  43d69b:	repnz scas %es:(%rdi),%al
  43d69d:	not    %rcx
  43d6a0:	lea    -0x1(%rcx),%rax
  43d6a4:	mov    %rax,0x100(%rsp)
  43d6ac:	cmp    0x100(%rsp),%rbp
  43d6b4:	je     43d7c2 <X509_get0_pubkey_bitstr@plt+0x26df2>
  43d6ba:	mov    %r8,0x108(%rsp)
  43d6c2:	mov    %esi,0x118(%rsp)
  43d6c9:	callq  414ae0 <__ctype_b_loc@plt>
  43d6ce:	movzbl (%rbx,%rbp,1),%edx
  43d6d2:	mov    (%rax),%rax
  43d6d5:	testb  $0x10,0x1(%rax,%rdx,2)
  43d6da:	je     43d7a9 <X509_get0_pubkey_bitstr@plt+0x26dd9>
  43d6e0:	add    $0x1,%rbp
  43d6e4:	mov    0x118(%rsp),%esi
  43d6eb:	mov    0x108(%rsp),%r8
  43d6f3:	jmp    43d6ac <X509_get0_pubkey_bitstr@plt+0x26cdc>
  43d6f5:	lea    0x2aee3(%rip),%rsi        # 4685df <_fini+0xb0db>
  43d6fc:	mov    %rbp,%rdi
  43d6ff:	callq  4155c0 <strcmp@plt>
  43d704:	test   %eax,%eax
  43d706:	je     43d8dd <X509_get0_pubkey_bitstr@plt+0x26f0d>
  43d70c:	lea    0x2aed2(%rip),%rsi        # 4685e5 <_fini+0xb0e1>
  43d713:	mov    %rbp,%rdi
  43d716:	callq  4155c0 <strcmp@plt>
  43d71b:	test   %eax,%eax
  43d71d:	je     43d8c1 <X509_get0_pubkey_bitstr@plt+0x26ef1>
  43d723:	lea    0x2aecf(%rip),%rsi        # 4685f9 <_fini+0xb0f5>
  43d72a:	mov    %rbp,%rdi
  43d72d:	callq  4155c0 <strcmp@plt>
  43d732:	test   %eax,%eax
  43d734:	je     43d8f9 <X509_get0_pubkey_bitstr@plt+0x26f29>
  43d73a:	lea    0x2aeb0(%rip),%rsi        # 4685f1 <_fini+0xb0ed>
  43d741:	mov    %rbp,%rdi
  43d744:	callq  4155c0 <strcmp@plt>
  43d749:	test   %eax,%eax
  43d74b:	je     43d8a5 <X509_get0_pubkey_bitstr@plt+0x26ed5>
  43d751:	lea    0x2ae93(%rip),%rsi        # 4685eb <_fini+0xb0e7>
  43d758:	mov    %rbp,%rdi
  43d75b:	callq  4155c0 <strcmp@plt>
  43d760:	test   %eax,%eax
  43d762:	je     43d85b <X509_get0_pubkey_bitstr@plt+0x26e8b>
  43d768:	lea    0x2ae92(%rip),%rsi        # 468601 <_fini+0xb0fd>
  43d76f:	mov    %rbp,%rdi
  43d772:	callq  4155c0 <strcmp@plt>
  43d777:	test   %eax,%eax
  43d779:	je     43d834 <X509_get0_pubkey_bitstr@plt+0x26e64>
  43d77f:	lea    0x2ae82(%rip),%rsi        # 468608 <_fini+0xb104>
  43d786:	mov    %rbp,%rdi
  43d789:	callq  4155c0 <strcmp@plt>
  43d78e:	test   %eax,%eax
  43d790:	jne    43d7cc <X509_get0_pubkey_bitstr@plt+0x26dfc>
  43d792:	mov    0x11c(%rsp),%ebp
  43d799:	movl   $0x1,0xdc(%rsp)
  43d7a4:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d7a9:	mov    (%r15),%rdi
  43d7ac:	lea    0x2adc0(%rip),%rsi        # 468573 <_fini+0xb06f>
  43d7b3:	mov    %rbx,%rdx
  43d7b6:	xor    %eax,%eax
  43d7b8:	callq  413c40 <BIO_printf@plt>
  43d7bd:	jmpq   43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43d7c2:	mov    %r8,%rbx
  43d7c5:	mov    %esi,%ebp
  43d7c7:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d7cc:	lea    0x2ae3e(%rip),%rsi        # 468611 <_fini+0xb10d>
  43d7d3:	mov    %rbp,%rdi
  43d7d6:	callq  4155c0 <strcmp@plt>
  43d7db:	test   %eax,%eax
  43d7dd:	jne    43d877 <X509_get0_pubkey_bitstr@plt+0x26ea7>
  43d7e3:	mov    0x11c(%rsp),%eax
  43d7ea:	sub    $0x1,%eax
  43d7ed:	test   %eax,%eax
  43d7ef:	mov    %eax,0x11c(%rsp)
  43d7f6:	jle    43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43d7fc:	mov    0x8(%rbx),%rdi
  43d800:	lea    0x8(%rbx),%rax
  43d804:	mov    $0xa,%edx
  43d809:	xor    %esi,%esi
  43d80b:	mov    %rax,0x110(%rsp)
  43d813:	callq  4155d0 <strtol@plt>
  43d818:	mov    0x11c(%rsp),%ebp
  43d81f:	mov    %rax,0xc0(%rsp)
  43d827:	mov    0x110(%rsp),%rbx
  43d82f:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d834:	callq  414ab0 <DTLSv1_client_method@plt>
  43d839:	mov    0x11c(%rsp),%ebp
  43d840:	mov    %rax,%r13
  43d843:	mov    0x110(%rsp),%rbx
  43d84b:	movl   $0x2,0x88(%rsp)
  43d856:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d85b:	callq  412fd0 <TLSv1_client_method@plt>
  43d860:	mov    0x11c(%rsp),%ebp
  43d867:	mov    %rax,%r13
  43d86a:	mov    0x110(%rsp),%rbx
  43d872:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d877:	lea    0x2b0c3(%rip),%rsi        # 468941 <_fini+0xb43d>
  43d87e:	mov    %rbp,%rdi
  43d881:	callq  4155c0 <strcmp@plt>
  43d886:	test   %eax,%eax
  43d888:	jne    43d915 <X509_get0_pubkey_bitstr@plt+0x26f45>
  43d88e:	mov    0x11c(%rsp),%ebp
  43d895:	movl   $0x1,0xd0(%rsp)
  43d8a0:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d8a5:	callq  412e50 <TLSv1_1_client_method@plt>
  43d8aa:	mov    0x11c(%rsp),%ebp
  43d8b1:	mov    %rax,%r13
  43d8b4:	mov    0x110(%rsp),%rbx
  43d8bc:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d8c1:	callq  4169a0 <SSLv3_client_method@plt>
  43d8c6:	mov    0x11c(%rsp),%ebp
  43d8cd:	mov    %rax,%r13
  43d8d0:	mov    0x110(%rsp),%rbx
  43d8d8:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d8dd:	callq  414a90 <SSLv2_client_method@plt>
  43d8e2:	mov    0x11c(%rsp),%ebp
  43d8e9:	mov    %rax,%r13
  43d8ec:	mov    0x110(%rsp),%rbx
  43d8f4:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d8f9:	callq  413d90 <TLSv1_2_client_method@plt>
  43d8fe:	mov    0x11c(%rsp),%ebp
  43d905:	mov    %rax,%r13
  43d908:	mov    0x110(%rsp),%rbx
  43d910:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d915:	lea    0x2ac24(%rip),%rsi        # 468540 <_fini+0xb03c>
  43d91c:	mov    %rbp,%rdi
  43d91f:	callq  4155c0 <strcmp@plt>
  43d924:	test   %eax,%eax
  43d926:	jne    43d93f <X509_get0_pubkey_bitstr@plt+0x26f6f>
  43d928:	mov    0x11c(%rsp),%ebp
  43d92f:	movl   $0x1,0xb0(%rsp)
  43d93a:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d93f:	lea    0x20899(%rip),%rsi        # 45e1df <_fini+0xcdb>
  43d946:	mov    %rbp,%rdi
  43d949:	callq  4155c0 <strcmp@plt>
  43d94e:	test   %eax,%eax
  43d950:	jne    43d99b <X509_get0_pubkey_bitstr@plt+0x26fcb>
  43d952:	mov    0x11c(%rsp),%eax
  43d959:	sub    $0x1,%eax
  43d95c:	test   %eax,%eax
  43d95e:	mov    %eax,0x11c(%rsp)
  43d965:	jle    43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43d96b:	mov    0x8(%rbx),%rdi
  43d96f:	lea    0x8(%rbx),%rax
  43d973:	mov    %rax,0x110(%rsp)
  43d97b:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  43d980:	mov    0x11c(%rsp),%ebp
  43d987:	mov    %eax,0x90(%rsp)
  43d98e:	mov    0x110(%rsp),%rbx
  43d996:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d99b:	lea    0x227f4(%rip),%rsi        # 460196 <_fini+0x2c92>
  43d9a2:	mov    %rbp,%rdi
  43d9a5:	callq  4155c0 <strcmp@plt>
  43d9aa:	test   %eax,%eax
  43d9ac:	jne    43d9d9 <X509_get0_pubkey_bitstr@plt+0x27009>
  43d9ae:	mov    0x11c(%rsp),%eax
  43d9b5:	lea    -0x1(%rax),%ebp
  43d9b8:	test   %ebp,%ebp
  43d9ba:	mov    %ebp,0x11c(%rsp)
  43d9c1:	jle    43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43d9c7:	mov    0x8(%rbx),%rax
  43d9cb:	add    $0x8,%rbx
  43d9cf:	mov    %rax,0x60(%rsp)
  43d9d4:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43d9d9:	lea    0x207e5(%rip),%rsi        # 45e1c5 <_fini+0xcc1>
  43d9e0:	mov    %rbp,%rdi
  43d9e3:	callq  4155c0 <strcmp@plt>
  43d9e8:	test   %eax,%eax
  43d9ea:	jne    43da17 <X509_get0_pubkey_bitstr@plt+0x27047>
  43d9ec:	mov    0x11c(%rsp),%eax
  43d9f3:	lea    -0x1(%rax),%ebp
  43d9f6:	test   %ebp,%ebp
  43d9f8:	mov    %ebp,0x11c(%rsp)
  43d9ff:	jle    43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43da05:	mov    0x8(%rbx),%rax
  43da09:	add    $0x8,%rbx
  43da0d:	mov    %rax,0x58(%rsp)
  43da12:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43da17:	lea    0x2af32(%rip),%rsi        # 468950 <_fini+0xb44c>
  43da1e:	mov    %rbp,%rdi
  43da21:	callq  4155c0 <strcmp@plt>
  43da26:	test   %eax,%eax
  43da28:	jne    43da41 <X509_get0_pubkey_bitstr@plt+0x27071>
  43da2a:	mov    0x11c(%rsp),%ebp
  43da31:	movl   $0x5,0xc8(%rsp)
  43da3c:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43da41:	lea    0x200ed(%rip),%rsi        # 45db35 <_fini+0x631>
  43da48:	mov    %rbp,%rdi
  43da4b:	callq  4155c0 <strcmp@plt>
  43da50:	test   %eax,%eax
  43da52:	jne    43da82 <X509_get0_pubkey_bitstr@plt+0x270b2>
  43da54:	mov    0x11c(%rsp),%eax
  43da5b:	lea    -0x1(%rax),%ebp
  43da5e:	test   %ebp,%ebp
  43da60:	mov    %ebp,0x11c(%rsp)
  43da67:	jle    43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43da6d:	mov    0x8(%rbx),%rax
  43da71:	add    $0x8,%rbx
  43da75:	mov    %rax,0x98(%rsp)
  43da7d:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43da82:	lea    0x200b4(%rip),%rsi        # 45db3d <_fini+0x639>
  43da89:	mov    %rbp,%rdi
  43da8c:	callq  4155c0 <strcmp@plt>
  43da91:	test   %eax,%eax
  43da93:	jne    43dac3 <X509_get0_pubkey_bitstr@plt+0x270f3>
  43da95:	mov    0x11c(%rsp),%eax
  43da9c:	lea    -0x1(%rax),%ebp
  43da9f:	test   %ebp,%ebp
  43daa1:	mov    %ebp,0x11c(%rsp)
  43daa8:	jle    43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43daae:	mov    0x8(%rbx),%rax
  43dab2:	add    $0x8,%rbx
  43dab6:	mov    %rax,0xa0(%rsp)
  43dabe:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43dac3:	lea    0x2aaf6(%rip),%rsi        # 4685c0 <_fini+0xb0bc>
  43daca:	mov    %rbp,%rdi
  43dacd:	callq  4155c0 <strcmp@plt>
  43dad2:	test   %eax,%eax
  43dad4:	jne    43daea <X509_get0_pubkey_bitstr@plt+0x2711a>
  43dad6:	orl    $0x8000000,0x40(%rsp)
  43dade:	mov    0x11c(%rsp),%ebp
  43dae5:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43daea:	lea    0x2aac4(%rip),%rsi        # 4685b5 <_fini+0xb0b1>
  43daf1:	mov    %rbp,%rdi
  43daf4:	callq  4155c0 <strcmp@plt>
  43daf9:	test   %eax,%eax
  43dafb:	jne    43db11 <X509_get0_pubkey_bitstr@plt+0x27141>
  43dafd:	orl    $0x10000000,0x40(%rsp)
  43db05:	mov    0x11c(%rsp),%ebp
  43db0c:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43db11:	lea    0x2aa94(%rip),%rsi        # 4685ac <_fini+0xb0a8>
  43db18:	mov    %rbp,%rdi
  43db1b:	callq  4155c0 <strcmp@plt>
  43db20:	test   %eax,%eax
  43db22:	jne    43db38 <X509_get0_pubkey_bitstr@plt+0x27168>
  43db24:	orl    $0x4000000,0x40(%rsp)
  43db2c:	mov    0x11c(%rsp),%ebp
  43db33:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43db38:	lea    0x2aa64(%rip),%rsi        # 4685a3 <_fini+0xb09f>
  43db3f:	mov    %rbp,%rdi
  43db42:	callq  4155c0 <strcmp@plt>
  43db47:	test   %eax,%eax
  43db49:	jne    43db5f <X509_get0_pubkey_bitstr@plt+0x2718f>
  43db4b:	orl    $0x2000000,0x40(%rsp)
  43db53:	mov    0x11c(%rsp),%ebp
  43db5a:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43db5f:	lea    0x2aa34(%rip),%rsi        # 46859a <_fini+0xb096>
  43db66:	mov    %rbp,%rdi
  43db69:	callq  4155c0 <strcmp@plt>
  43db6e:	test   %eax,%eax
  43db70:	jne    43db86 <X509_get0_pubkey_bitstr@plt+0x271b6>
  43db72:	orl    $0x1000000,0x40(%rsp)
  43db7a:	mov    0x11c(%rsp),%ebp
  43db81:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43db86:	lea    0x2aa3e(%rip),%rsi        # 4685cb <_fini+0xb0c7>
  43db8d:	mov    %rbp,%rdi
  43db90:	callq  4155c0 <strcmp@plt>
  43db95:	test   %eax,%eax
  43db97:	jne    43dbad <X509_get0_pubkey_bitstr@plt+0x271dd>
  43db99:	orl    $0x20000,0x40(%rsp)
  43dba1:	mov    0x11c(%rsp),%ebp
  43dba8:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43dbad:	lea    0x2aa20(%rip),%rsi        # 4685d4 <_fini+0xb0d0>
  43dbb4:	mov    %rbp,%rdi
  43dbb7:	callq  4155c0 <strcmp@plt>
  43dbbc:	test   %eax,%eax
  43dbbe:	jne    43dbd4 <X509_get0_pubkey_bitstr@plt+0x27204>
  43dbc0:	orl    $0x4000,0x40(%rsp)
  43dbc8:	mov    0x11c(%rsp),%ebp
  43dbcf:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43dbd4:	lea    0x2aa78(%rip),%rsi        # 468653 <_fini+0xb14f>
  43dbdb:	mov    %rbp,%rdi
  43dbde:	callq  4155c0 <strcmp@plt>
  43dbe3:	test   %eax,%eax
  43dbe5:	jne    43dc12 <X509_get0_pubkey_bitstr@plt+0x27242>
  43dbe7:	mov    0x11c(%rsp),%eax
  43dbee:	lea    -0x1(%rax),%ebp
  43dbf1:	test   %ebp,%ebp
  43dbf3:	mov    %ebp,0x11c(%rsp)
  43dbfa:	jle    43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43dc00:	mov    0x8(%rbx),%rax
  43dc04:	add    $0x8,%rbx
  43dc08:	mov    %rax,0x28(%rsp)
  43dc0d:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43dc12:	lea    0x2a888(%rip),%rsi        # 4684a1 <_fini+0xaf9d>
  43dc19:	mov    %rbp,%rdi
  43dc1c:	callq  4155c0 <strcmp@plt>
  43dc21:	test   %eax,%eax
  43dc23:	jne    43dc39 <X509_get0_pubkey_bitstr@plt+0x27269>
  43dc25:	orl    $0x400000,0x40(%rsp)
  43dc2d:	mov    0x11c(%rsp),%ebp
  43dc34:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43dc39:	lea    0x2a86d(%rip),%rsi        # 4684ad <_fini+0xafa9>
  43dc40:	mov    %rbp,%rdi
  43dc43:	callq  4155c0 <strcmp@plt>
  43dc48:	test   %eax,%eax
  43dc4a:	jne    43dc60 <X509_get0_pubkey_bitstr@plt+0x27290>
  43dc4c:	orl    $0x40000,0x40(%rsp)
  43dc54:	mov    0x11c(%rsp),%ebp
  43dc5b:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43dc60:	lea    0x2acf4(%rip),%rsi        # 46895b <_fini+0xb457>
  43dc67:	mov    %rbp,%rdi
  43dc6a:	callq  4155c0 <strcmp@plt>
  43dc6f:	test   %eax,%eax
  43dc71:	jne    43dc84 <X509_get0_pubkey_bitstr@plt+0x272b4>
  43dc73:	orl    $0x4,0x40(%rsp)
  43dc78:	mov    0x11c(%rsp),%ebp
  43dc7f:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43dc84:	lea    0x2ace7(%rip),%rsi        # 468972 <_fini+0xb46e>
  43dc8b:	mov    %rbp,%rdi
  43dc8e:	callq  4155c0 <strcmp@plt>
  43dc93:	test   %eax,%eax
  43dc95:	jne    43dcae <X509_get0_pubkey_bitstr@plt+0x272de>
  43dc97:	mov    0x11c(%rsp),%ebp
  43dc9e:	movl   $0x4,0x84(%rsp)
  43dca9:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43dcae:	lea    0x2a80e(%rip),%rsi        # 4684c3 <_fini+0xafbf>
  43dcb5:	mov    %rbp,%rdi
  43dcb8:	callq  4155c0 <strcmp@plt>
  43dcbd:	test   %eax,%eax
  43dcbf:	jne    43dcef <X509_get0_pubkey_bitstr@plt+0x2731f>
  43dcc1:	mov    0x11c(%rsp),%eax
  43dcc8:	lea    -0x1(%rax),%ebp
  43dccb:	test   %ebp,%ebp
  43dccd:	mov    %ebp,0x11c(%rsp)
  43dcd4:	jle    43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43dcda:	mov    0x8(%rbx),%rax
  43dcde:	add    $0x8,%rbx
  43dce2:	mov    %rax,0xa8(%rsp)
  43dcea:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43dcef:	lea    0x2a7d5(%rip),%rsi        # 4684cb <_fini+0xafc7>
  43dcf6:	mov    %rbp,%rdi
  43dcf9:	callq  4155c0 <strcmp@plt>
  43dcfe:	test   %eax,%eax
  43dd00:	jne    43dd18 <X509_get0_pubkey_bitstr@plt+0x27348>
  43dd02:	movl   $0x1,0x23d774(%rip)        # 67b480 <_edata+0x778>
  43dd0c:	mov    0x11c(%rsp),%ebp
  43dd13:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43dd18:	lea    0x2ac6d(%rip),%rsi        # 46898c <_fini+0xb488>
  43dd1f:	mov    %rbp,%rdi
  43dd22:	callq  4155c0 <strcmp@plt>
  43dd27:	test   %eax,%eax
  43dd29:	jne    43de14 <X509_get0_pubkey_bitstr@plt+0x27444>
  43dd2f:	mov    0x11c(%rsp),%eax
  43dd36:	lea    -0x1(%rax),%ebp
  43dd39:	test   %ebp,%ebp
  43dd3b:	mov    %ebp,0x11c(%rsp)
  43dd42:	jle    43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43dd48:	lea    0x8(%rbx),%rax
  43dd4c:	mov    0x8(%rbx),%rbx
  43dd50:	lea    0x2ac3f(%rip),%rsi        # 468996 <_fini+0xb492>
  43dd57:	mov    %rax,0x38(%rsp)
  43dd5c:	mov    %rax,0x110(%rsp)
  43dd64:	mov    %rbx,%rdi
  43dd67:	callq  4155c0 <strcmp@plt>
  43dd6c:	test   %eax,%eax
  43dd6e:	je     43de02 <X509_get0_pubkey_bitstr@plt+0x27432>
  43dd74:	lea    0x2ac20(%rip),%rsi        # 46899b <_fini+0xb497>
  43dd7b:	mov    %rbx,%rdi
  43dd7e:	callq  4155c0 <strcmp@plt>
  43dd83:	test   %eax,%eax
  43dd85:	je     43ddf0 <X509_get0_pubkey_bitstr@plt+0x27420>
  43dd87:	lea    0x2ac12(%rip),%rsi        # 4689a0 <_fini+0xb49c>
  43dd8e:	mov    %rbx,%rdi
  43dd91:	callq  4155c0 <strcmp@plt>
  43dd96:	test   %eax,%eax
  43dd98:	je     43ddde <X509_get0_pubkey_bitstr@plt+0x2740e>
  43dd9a:	cmpb   $0x66,(%rbx)
  43dd9d:	jne    43ddb5 <X509_get0_pubkey_bitstr@plt+0x273e5>
  43dd9f:	cmpb   $0x74,0x1(%rbx)
  43dda3:	jne    43ddb5 <X509_get0_pubkey_bitstr@plt+0x273e5>
  43dda5:	cmpb   $0x70,0x2(%rbx)
  43dda9:	jne    43ddb5 <X509_get0_pubkey_bitstr@plt+0x273e5>
  43ddab:	cmpb   $0x0,0x3(%rbx)
  43ddaf:	je     43de52 <X509_get0_pubkey_bitstr@plt+0x27482>
  43ddb5:	lea    0x2abe9(%rip),%rsi        # 4689a5 <_fini+0xb4a1>
  43ddbc:	mov    %rbx,%rdi
  43ddbf:	callq  4155c0 <strcmp@plt>
  43ddc4:	test   %eax,%eax
  43ddc6:	jne    43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43ddcc:	mov    0x38(%rsp),%rbx
  43ddd1:	movl   $0x5,0x38(%rsp)
  43ddd9:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43ddde:	mov    0x38(%rsp),%rbx
  43dde3:	movl   $0x3,0x38(%rsp)
  43ddeb:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43ddf0:	mov    0x38(%rsp),%rbx
  43ddf5:	movl   $0x2,0x38(%rsp)
  43ddfd:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43de02:	mov    0x38(%rsp),%rbx
  43de07:	movl   $0x1,0x38(%rsp)
  43de0f:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43de14:	lea    0x1fd47(%rip),%rsi        # 45db62 <_fini+0x65e>
  43de1b:	mov    %rbp,%rdi
  43de1e:	callq  4155c0 <strcmp@plt>
  43de23:	test   %eax,%eax
  43de25:	jne    43de64 <X509_get0_pubkey_bitstr@plt+0x27494>
  43de27:	mov    0x11c(%rsp),%eax
  43de2e:	lea    -0x1(%rax),%ebp
  43de31:	test   %ebp,%ebp
  43de33:	mov    %ebp,0x11c(%rsp)
  43de3a:	jle    43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43de40:	mov    0x8(%rbx),%rax
  43de44:	add    $0x8,%rbx
  43de48:	mov    %rax,0x68(%rsp)
  43de4d:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43de52:	mov    0x38(%rsp),%rbx
  43de57:	movl   $0x4,0x38(%rsp)
  43de5f:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43de64:	lea    0x2ab3f(%rip),%rsi        # 4689aa <_fini+0xb4a6>
  43de6b:	mov    %rbp,%rdi
  43de6e:	callq  4155c0 <strcmp@plt>
  43de73:	test   %eax,%eax
  43de75:	jne    43dea2 <X509_get0_pubkey_bitstr@plt+0x274d2>
  43de77:	mov    0x11c(%rsp),%eax
  43de7e:	lea    -0x1(%rax),%ebp
  43de81:	test   %ebp,%ebp
  43de83:	mov    %ebp,0x11c(%rsp)
  43de8a:	jle    43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43de90:	mov    0x8(%rbx),%rax
  43de94:	add    $0x8,%rbx
  43de98:	mov    %rax,0x70(%rsp)
  43de9d:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43dea2:	lea    0x20358(%rip),%rsi        # 45e201 <_fini+0xcfd>
  43dea9:	mov    %rbp,%rdi
  43deac:	callq  4155c0 <strcmp@plt>
  43deb1:	test   %eax,%eax
  43deb3:	jne    43dee0 <X509_get0_pubkey_bitstr@plt+0x27510>
  43deb5:	mov    0x11c(%rsp),%eax
  43debc:	lea    -0x1(%rax),%ebp
  43debf:	test   %ebp,%ebp
  43dec1:	mov    %ebp,0x11c(%rsp)
  43dec8:	jle    43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43dece:	mov    0x8(%rbx),%rax
  43ded2:	add    $0x8,%rbx
  43ded6:	mov    %rax,0x78(%rsp)
  43dedb:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43dee0:	lea    0x2a741(%rip),%rsi        # 468628 <_fini+0xb124>
  43dee7:	mov    %rbp,%rdi
  43deea:	callq  4155c0 <strcmp@plt>
  43deef:	test   %eax,%eax
  43def1:	jne    43df21 <X509_get0_pubkey_bitstr@plt+0x27551>
  43def3:	mov    0x11c(%rsp),%eax
  43defa:	lea    -0x1(%rax),%ebp
  43defd:	test   %ebp,%ebp
  43deff:	mov    %ebp,0x11c(%rsp)
  43df06:	jle    43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43df0c:	mov    0x8(%rbx),%rax
  43df10:	add    $0x8,%rbx
  43df14:	mov    %rax,0xb8(%rsp)
  43df1c:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43df21:	lea    0x2a739(%rip),%rsi        # 468661 <_fini+0xb15d>
  43df28:	mov    %rbp,%rdi
  43df2b:	callq  4155c0 <strcmp@plt>
  43df30:	test   %eax,%eax
  43df32:	jne    43df64 <X509_get0_pubkey_bitstr@plt+0x27594>
  43df34:	mov    0x11c(%rsp),%eax
  43df3b:	lea    -0x1(%rax),%ebp
  43df3e:	test   %ebp,%ebp
  43df40:	mov    %ebp,0x11c(%rsp)
  43df47:	jle    43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43df4d:	mov    0x8(%rbx),%rdx
  43df51:	lea    0x23d4d8(%rip),%rax        # 67b430 <_edata+0x728>
  43df58:	add    $0x8,%rbx
  43df5c:	mov    %rdx,(%rax)
  43df5f:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43df64:	lea    0x2a700(%rip),%rsi        # 46866b <_fini+0xb167>
  43df6b:	mov    %rbp,%rdi
  43df6e:	callq  4155c0 <strcmp@plt>
  43df73:	test   %eax,%eax
  43df75:	jne    43dfa4 <X509_get0_pubkey_bitstr@plt+0x275d4>
  43df77:	mov    0x11c(%rsp),%eax
  43df7e:	lea    -0x1(%rax),%ebp
  43df81:	test   %ebp,%ebp
  43df83:	mov    %ebp,0x11c(%rsp)
  43df8a:	jle    43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43df90:	mov    0x8(%rbx),%rax
  43df94:	add    $0x8,%rbx
  43df98:	mov    %rax,0x23d4c1(%rip)        # 67b460 <_edata+0x758>
  43df9f:	jmpq   43b152 <X509_get0_pubkey_bitstr@plt+0x24782>
  43dfa4:	lea    0x2a6ce(%rip),%rsi        # 468679 <_fini+0xb175>
  43dfab:	mov    %rbp,%rdi
  43dfae:	callq  4155c0 <strcmp@plt>
  43dfb3:	test   %eax,%eax
  43dfb5:	jne    43b317 <X509_get0_pubkey_bitstr@plt+0x24947>
  43dfbb:	mov    0x11c(%rsp),%eax
  43dfc2:	sub    $0x1,%eax
  43dfc5:	test   %eax,%eax
  43dfc7:	mov    %eax,0x11c(%rsp)
  43dfce:	jle    43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43dfd4:	mov    0x8(%rbx),%rdi
  43dfd8:	lea    0x8(%rbx),%rax
  43dfdc:	xor    %esi,%esi
  43dfde:	mov    $0xa,%edx
  43dfe3:	mov    %rax,0x110(%rsp)
  43dfeb:	callq  4155d0 <strtol@plt>
  43dff0:	test   %eax,%eax
  43dff2:	mov    %eax,0x23b0b8(%rip)        # 6790b0 <_fini+0x21bbac>
  43dff8:	jne    43b24a <X509_get0_pubkey_bitstr@plt+0x2487a>
  43dffe:	jmpq   43b330 <X509_get0_pubkey_bitstr@plt+0x24960>
  43e003:	nopw   %cs:0x0(%rax,%rax,1)
  43e00d:	nopl   (%rax)
  43e010:	lea    -0x7(%rip),%rsi        # 43e010 <X509_get0_pubkey_bitstr@plt+0x27640>
  43e017:	sub    $0x8,%rsp
  43e01b:	mov    $0xe,%edi
  43e020:	callq  414ee0 <signal@plt>
  43e025:	lea    0x23d474(%rip),%rax        # 67b4a0 <_edata+0x798>
  43e02c:	movl   $0x0,(%rax)
  43e032:	add    $0x8,%rsp
  43e036:	retq   
  43e037:	nopw   0x0(%rax,%rax,1)
  43e040:	push   %r12
  43e042:	lea    0x23c857(%rip),%rax        # 67a8a0 <_fini+0x21d39c>
  43e049:	mov    %esi,%r12d
  43e04c:	lea    0x2b91f(%rip),%rsi        # 469972 <_fini+0xc46e>
  43e053:	movapd %xmm0,%xmm2
  43e057:	push   %rbp
  43e058:	mov    %edx,%ebp
  43e05a:	lea    0x2b91e(%rip),%rdx        # 46997f <_fini+0xc47b>
  43e061:	push   %rbx
  43e062:	movslq %edi,%rbx
  43e065:	sub    $0x10,%rsp
  43e069:	mov    (%rax,%rbx,8),%rcx
  43e06d:	mov    0x23dafd(%rip),%eax        # 67bb70 <_edata+0xe68>
  43e073:	movsd  %xmm2,0x8(%rsp)
  43e079:	test   %eax,%eax
  43e07b:	lea    0x23ccbe(%rip),%rax        # 67ad40 <_edata+0x38>
  43e082:	cmove  %rdx,%rsi
  43e086:	mov    %ebp,%edx
  43e088:	mov    (%rax),%rdi
  43e08b:	mov    $0x1,%eax
  43e090:	callq  413c40 <BIO_printf@plt>
  43e095:	cvtsi2sd %ebp,%xmm1
  43e099:	lea    0x2c700(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43e0a0:	movsd  0x8(%rsp),%xmm2
  43e0a6:	movslq %r12d,%rsi
  43e0a9:	cvtsi2sdl (%rax,%rsi,4),%xmm0
  43e0ae:	lea    (%rbx,%rbx,4),%rdx
  43e0b2:	lea    0x23d607(%rip),%rax        # 67b6c0 <_edata+0x9b8>
  43e0b9:	add    %rsi,%rdx
  43e0bc:	divsd  %xmm2,%xmm1
  43e0c0:	mulsd  %xmm0,%xmm1
  43e0c4:	movsd  %xmm1,(%rax,%rdx,8)
  43e0c9:	add    $0x10,%rsp
  43e0cd:	pop    %rbx
  43e0ce:	pop    %rbp
  43e0cf:	pop    %r12
  43e0d1:	retq   
  43e0d2:	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  43e0e0:	cmpq   $0x13,(%rcx)
  43e0e4:	jbe    43e0f8 <X509_get0_pubkey_bitstr@plt+0x27728>
  43e0e6:	movq   $0x14,(%rcx)
  43e0ed:	jmpq   413bc0 <SHA1@plt>
  43e0f2:	nopw   0x0(%rax,%rax,1)
  43e0f8:	xor    %eax,%eax
  43e0fa:	retq   
  43e0fb:	nopl   0x0(%rax,%rax,1)
  43e100:	push   %rbx
  43e101:	lea    0x23cc38(%rip),%rbx        # 67ad40 <_edata+0x38>
  43e108:	mov    %rdi,%rdx
  43e10b:	mov    0x23da5f(%rip),%eax        # 67bb70 <_edata+0xe68>
  43e111:	mov    %esi,%r8d
  43e114:	lea    0x2bf05(%rip),%rcx        # 46a020 <_fini+0xcb1c>
  43e11b:	lea    0x2b86f(%rip),%rsi        # 469991 <_fini+0xc48d>
  43e122:	mov    (%rbx),%rdi
  43e125:	test   %eax,%eax
  43e127:	cmove  %rcx,%rsi
  43e12b:	mov    $0x3,%ecx
  43e130:	xor    %eax,%eax
  43e132:	callq  413c40 <BIO_printf@plt>
  43e137:	mov    (%rbx),%rdi
  43e13a:	xor    %ecx,%ecx
  43e13c:	xor    %edx,%edx
  43e13e:	mov    $0xb,%esi
  43e143:	callq  412af0 <BIO_ctrl@plt>
  43e148:	pop    %rbx
  43e149:	mov    $0x3,%edi
  43e14e:	jmpq   416690 <alarm@plt>
  43e153:	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  43e160:	sub    $0x118,%rsp
  43e167:	mov    (%rdi),%r9
  43e16a:	mov    %rdi,%r8
  43e16d:	mov    %fs:0x28,%rax
  43e176:	mov    %rax,0x108(%rsp)
  43e17e:	xor    %eax,%eax
  43e180:	movzbl (%r9),%esi
  43e184:	test   %sil,%sil
  43e187:	je     43e1ed <X509_get0_pubkey_bitstr@plt+0x2781d>
  43e189:	mov    $0x20,%ecx
  43e18e:	mov    %rsp,%rdi
  43e191:	lea    0x23af28(%rip),%rdx        # 6790c0 <_fini+0x21bbbc>
  43e198:	rep stos %rax,%es:(%rdi)
  43e19b:	movzbl 0x23af1e(%rip),%eax        # 6790c0 <_fini+0x21bbbc>
  43e1a2:	movb   $0x1,(%rsp)
  43e1a6:	test   %al,%al
  43e1a8:	je     43e1bf <X509_get0_pubkey_bitstr@plt+0x277ef>
  43e1aa:	nopw   0x0(%rax,%rax,1)
  43e1b0:	add    $0x1,%rdx
  43e1b4:	movb   $0x1,(%rsp,%rax,1)
  43e1b8:	movzbl (%rdx),%eax
  43e1bb:	test   %al,%al
  43e1bd:	jne    43e1b0 <X509_get0_pubkey_bitstr@plt+0x277e0>
  43e1bf:	cmpb   $0x0,(%rsp,%rsi,1)
  43e1c3:	lea    0x1(%r9),%rax
  43e1c7:	mov    %r9,%rdx
  43e1ca:	jne    43e210 <X509_get0_pubkey_bitstr@plt+0x27840>
  43e1cc:	nopl   0x0(%rax)
  43e1d0:	mov    %rax,(%r8)
  43e1d3:	movzbl (%rax),%ecx
  43e1d6:	mov    %rax,%rdx
  43e1d9:	lea    0x1(%rax),%rax
  43e1dd:	movzbl %cl,%esi
  43e1e0:	cmpb   $0x0,(%rsp,%rsi,1)
  43e1e4:	je     43e1d0 <X509_get0_pubkey_bitstr@plt+0x27800>
  43e1e6:	test   %cl,%cl
  43e1e8:	mov    %r9,%rax
  43e1eb:	jne    43e210 <X509_get0_pubkey_bitstr@plt+0x27840>
  43e1ed:	mov    0x108(%rsp),%rdi
  43e1f5:	xor    %fs:0x28,%rdi
  43e1fe:	jne    43e21c <X509_get0_pubkey_bitstr@plt+0x2784c>
  43e200:	add    $0x118,%rsp
  43e207:	retq   
  43e208:	nopl   0x0(%rax,%rax,1)
  43e210:	movb   $0x0,(%rdx)
  43e213:	mov    %r9,%rax
  43e216:	addq   $0x1,(%r8)
  43e21a:	jmp    43e1ed <X509_get0_pubkey_bitstr@plt+0x2781d>
  43e21c:	callq  414c30 <__stack_chk_fail@plt>
  43e221:	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  43e230:	mov    %rsi,%r8
  43e233:	mov    0x23d937(%rip),%esi        # 67bb70 <_edata+0xe68>
  43e239:	push   %rbx
  43e23a:	lea    0x23caff(%rip),%rbx        # 67ad40 <_edata+0x38>
  43e241:	lea    0x2b757(%rip),%rax        # 46999f <_fini+0xc49b>
  43e248:	mov    %rdi,%rcx
  43e24b:	mov    $0xa,%r9d
  43e251:	test   %esi,%esi
  43e253:	lea    0x2bdee(%rip),%rsi        # 46a048 <_fini+0xcb44>
  43e25a:	mov    (%rbx),%rdi
  43e25d:	cmove  %rsi,%rax
  43e261:	mov    %rax,%rsi
  43e264:	xor    %eax,%eax
  43e266:	callq  413c40 <BIO_printf@plt>
  43e26b:	mov    (%rbx),%rdi
  43e26e:	xor    %ecx,%ecx
  43e270:	xor    %edx,%edx
  43e272:	mov    $0xb,%esi
  43e277:	callq  412af0 <BIO_ctrl@plt>
  43e27c:	pop    %rbx
  43e27d:	mov    $0xa,%edi
  43e282:	jmpq   416690 <alarm@plt>
  43e287:	nopw   0x0(%rax,%rax,1)
  43e290:	push   %rbx
  43e291:	callq  4165b0 <DSA_new@plt>
  43e296:	test   %rax,%rax
  43e299:	mov    %rax,%rbx
  43e29c:	je     43e340 <X509_get0_pubkey_bitstr@plt+0x27970>
  43e2a2:	lea    0x23b427(%rip),%rdi        # 6796d0 <_fini+0x21c1cc>
  43e2a9:	xor    %edx,%edx
  43e2ab:	mov    $0x14,%esi
  43e2b0:	callq  414aa0 <BN_bin2bn@plt>
  43e2b5:	lea    0x23b3c4(%rip),%rdi        # 679680 <_fini+0x21c17c>
  43e2bc:	xor    %edx,%edx
  43e2be:	mov    $0x41,%esi
  43e2c3:	mov    %rax,0x38(%rbx)
  43e2c7:	callq  414aa0 <BN_bin2bn@plt>
  43e2cc:	lea    0x23b36d(%rip),%rdi        # 679640 <_fini+0x21c13c>
  43e2d3:	xor    %edx,%edx
  43e2d5:	mov    $0x40,%esi
  43e2da:	mov    %rax,0x30(%rbx)
  43e2de:	callq  414aa0 <BN_bin2bn@plt>
  43e2e3:	lea    0x23b336(%rip),%rdi        # 679620 <_fini+0x21c11c>
  43e2ea:	xor    %edx,%edx
  43e2ec:	mov    $0x14,%esi
  43e2f1:	mov    %rax,0x18(%rbx)
  43e2f5:	callq  414aa0 <BN_bin2bn@plt>
  43e2fa:	lea    0x23b2df(%rip),%rdi        # 6795e0 <_fini+0x21c0dc>
  43e301:	xor    %edx,%edx
  43e303:	mov    %rax,0x20(%rbx)
  43e307:	mov    $0x40,%esi
  43e30c:	callq  414aa0 <BN_bin2bn@plt>
  43e311:	cmpq   $0x0,0x38(%rbx)
  43e316:	mov    %rax,0x28(%rbx)
  43e31a:	je     43e340 <X509_get0_pubkey_bitstr@plt+0x27970>
  43e31c:	cmpq   $0x0,0x30(%rbx)
  43e321:	je     43e340 <X509_get0_pubkey_bitstr@plt+0x27970>
  43e323:	cmpq   $0x0,0x18(%rbx)
  43e328:	je     43e340 <X509_get0_pubkey_bitstr@plt+0x27970>
  43e32a:	cmpq   $0x0,0x20(%rbx)
  43e32f:	je     43e340 <X509_get0_pubkey_bitstr@plt+0x27970>
  43e331:	test   %rax,%rax
  43e334:	je     43e340 <X509_get0_pubkey_bitstr@plt+0x27970>
  43e336:	mov    %rbx,%rax
  43e339:	pop    %rbx
  43e33a:	retq   
  43e33b:	nopl   0x0(%rax,%rax,1)
  43e340:	xor    %eax,%eax
  43e342:	pop    %rbx
  43e343:	retq   
  43e344:	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  43e350:	push   %rbx
  43e351:	callq  4165b0 <DSA_new@plt>
  43e356:	test   %rax,%rax
  43e359:	mov    %rax,%rbx
  43e35c:	je     43e400 <X509_get0_pubkey_bitstr@plt+0x27a30>
  43e362:	lea    0x23b257(%rip),%rdi        # 6795c0 <_fini+0x21c0bc>
  43e369:	xor    %edx,%edx
  43e36b:	mov    $0x14,%esi
  43e370:	callq  414aa0 <BN_bin2bn@plt>
  43e375:	lea    0x23b1c4(%rip),%rdi        # 679540 <_fini+0x21c03c>
  43e37c:	xor    %edx,%edx
  43e37e:	mov    $0x80,%esi
  43e383:	mov    %rax,0x38(%rbx)
  43e387:	callq  414aa0 <BN_bin2bn@plt>
  43e38c:	lea    0x23b12d(%rip),%rdi        # 6794c0 <_fini+0x21bfbc>
  43e393:	xor    %edx,%edx
  43e395:	mov    $0x80,%esi
  43e39a:	mov    %rax,0x30(%rbx)
  43e39e:	callq  414aa0 <BN_bin2bn@plt>
  43e3a3:	lea    0x23b0f6(%rip),%rdi        # 6794a0 <_fini+0x21bf9c>
  43e3aa:	xor    %edx,%edx
  43e3ac:	mov    $0x14,%esi
  43e3b1:	mov    %rax,0x18(%rbx)
  43e3b5:	callq  414aa0 <BN_bin2bn@plt>
  43e3ba:	lea    0x23b05f(%rip),%rdi        # 679420 <_fini+0x21bf1c>
  43e3c1:	xor    %edx,%edx
  43e3c3:	mov    %rax,0x20(%rbx)
  43e3c7:	mov    $0x80,%esi
  43e3cc:	callq  414aa0 <BN_bin2bn@plt>
  43e3d1:	cmpq   $0x0,0x38(%rbx)
  43e3d6:	mov    %rax,0x28(%rbx)
  43e3da:	je     43e400 <X509_get0_pubkey_bitstr@plt+0x27a30>
  43e3dc:	cmpq   $0x0,0x30(%rbx)
  43e3e1:	je     43e400 <X509_get0_pubkey_bitstr@plt+0x27a30>
  43e3e3:	cmpq   $0x0,0x18(%rbx)
  43e3e8:	je     43e400 <X509_get0_pubkey_bitstr@plt+0x27a30>
  43e3ea:	cmpq   $0x0,0x20(%rbx)
  43e3ef:	je     43e400 <X509_get0_pubkey_bitstr@plt+0x27a30>
  43e3f1:	test   %rax,%rax
  43e3f4:	je     43e400 <X509_get0_pubkey_bitstr@plt+0x27a30>
  43e3f6:	mov    %rbx,%rax
  43e3f9:	pop    %rbx
  43e3fa:	retq   
  43e3fb:	nopl   0x0(%rax,%rax,1)
  43e400:	xor    %eax,%eax
  43e402:	pop    %rbx
  43e403:	retq   
  43e404:	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  43e410:	push   %rbx
  43e411:	callq  4165b0 <DSA_new@plt>
  43e416:	test   %rax,%rax
  43e419:	mov    %rax,%rbx
  43e41c:	je     43e4c0 <X509_get0_pubkey_bitstr@plt+0x27af0>
  43e422:	lea    0x23afd7(%rip),%rdi        # 679400 <_fini+0x21befc>
  43e429:	xor    %edx,%edx
  43e42b:	mov    $0x14,%esi
  43e430:	callq  414aa0 <BN_bin2bn@plt>
  43e435:	lea    0x23aec4(%rip),%rdi        # 679300 <_fini+0x21bdfc>
  43e43c:	xor    %edx,%edx
  43e43e:	mov    $0x100,%esi
  43e443:	mov    %rax,0x38(%rbx)
  43e447:	callq  414aa0 <BN_bin2bn@plt>
  43e44c:	lea    0x23adad(%rip),%rdi        # 679200 <_fini+0x21bcfc>
  43e453:	xor    %edx,%edx
  43e455:	mov    $0x100,%esi
  43e45a:	mov    %rax,0x30(%rbx)
  43e45e:	callq  414aa0 <BN_bin2bn@plt>
  43e463:	lea    0x23ad76(%rip),%rdi        # 6791e0 <_fini+0x21bcdc>
  43e46a:	xor    %edx,%edx
  43e46c:	mov    $0x14,%esi
  43e471:	mov    %rax,0x18(%rbx)
  43e475:	callq  414aa0 <BN_bin2bn@plt>
  43e47a:	lea    0x23ac5f(%rip),%rdi        # 6790e0 <_fini+0x21bbdc>
  43e481:	xor    %edx,%edx
  43e483:	mov    %rax,0x20(%rbx)
  43e487:	mov    $0x100,%esi
  43e48c:	callq  414aa0 <BN_bin2bn@plt>
  43e491:	cmpq   $0x0,0x38(%rbx)
  43e496:	mov    %rax,0x28(%rbx)
  43e49a:	je     43e4c0 <X509_get0_pubkey_bitstr@plt+0x27af0>
  43e49c:	cmpq   $0x0,0x30(%rbx)
  43e4a1:	je     43e4c0 <X509_get0_pubkey_bitstr@plt+0x27af0>
  43e4a3:	cmpq   $0x0,0x18(%rbx)
  43e4a8:	je     43e4c0 <X509_get0_pubkey_bitstr@plt+0x27af0>
  43e4aa:	cmpq   $0x0,0x20(%rbx)
  43e4af:	je     43e4c0 <X509_get0_pubkey_bitstr@plt+0x27af0>
  43e4b1:	test   %rax,%rax
  43e4b4:	je     43e4c0 <X509_get0_pubkey_bitstr@plt+0x27af0>
  43e4b6:	mov    %rbx,%rax
  43e4b9:	pop    %rbx
  43e4ba:	retq   
  43e4bb:	nopl   0x0(%rax,%rax,1)
  43e4c0:	xor    %eax,%eax
  43e4c2:	pop    %rbx
  43e4c3:	retq   
  43e4c4:	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  43e4d0:	push   %r15
  43e4d2:	push   %r14
  43e4d4:	push   %r13
  43e4d6:	push   %r12
  43e4d8:	push   %rbp
  43e4d9:	mov    %rsi,%rbp
  43e4dc:	mov    $0x1,%esi
  43e4e1:	push   %rbx
  43e4e2:	mov    %edi,%ebx
  43e4e4:	mov    $0xd,%edi
  43e4e9:	sub    $0x30c8,%rsp
  43e4f0:	movl   $0xffffffff,0x23abe2(%rip)        # 6790dc <_fini+0x21bbd8>
  43e4fa:	mov    %fs:0x28,%rax
  43e503:	mov    %rax,0x30b8(%rsp)
  43e50b:	xor    %eax,%eax
  43e50d:	callq  414ee0 <signal@plt>
  43e512:	lea    0x23d1a7(%rip),%rdi        # 67b6c0 <_edata+0x9b8>
  43e519:	xor    %eax,%eax
  43e51b:	mov    $0x96,%ecx
  43e520:	movq   $0x0,0x120(%rsp)
  43e52c:	movq   $0x0,0x128(%rsp)
  43e538:	rep stos %rax,%es:(%rdi)
  43e53b:	lea    0x520(%rsp),%rcx
  43e543:	lea    0x4a0(%rsp),%rax
  43e54b:	movq   $0x0,0x130(%rsp)
  43e557:	mov    %rax,0x50(%rsp)
  43e55c:	mov    %rcx,0x68(%rsp)
  43e561:	mov    %rcx,%rdx
  43e564:	nopl   0x0(%rax)
  43e568:	movq   $0x0,(%rax)
  43e56f:	add    $0x8,%rax
  43e573:	cmp    %rdx,%rax
  43e576:	jne    43e568 <X509_get0_pubkey_bitstr@plt+0x27b98>
  43e578:	lea    0x520(%rsp),%rcx
  43e580:	xor    %eax,%eax
  43e582:	mov    %rcx,%rdx
  43e585:	mov    %rcx,0x58(%rsp)
  43e58a:	lea    0x5a0(%rsp),%rcx
  43e592:	mov    %rcx,0x60(%rsp)
  43e597:	nopw   0x0(%rax,%rax,1)
  43e5a0:	movq   $0x0,(%rdx,%rax,1)
  43e5a8:	movq   $0x0,(%rcx,%rax,1)
  43e5b0:	add    $0x8,%rax
  43e5b4:	cmp    $0x80,%rax
  43e5ba:	jne    43e5a0 <X509_get0_pubkey_bitstr@plt+0x27bd0>
  43e5bc:	lea    0x23c77d(%rip),%rax        # 67ad40 <_edata+0x38>
  43e5c3:	mov    (%rax),%rdi
  43e5c6:	test   %rdi,%rdi
  43e5c9:	je     440b86 <X509_get0_pubkey_bitstr@plt+0x2a1b6>
  43e5cf:	xor    %esi,%esi
  43e5d1:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  43e5d6:	test   %eax,%eax
  43e5d8:	mov    0x140(%rsp),%r13
  43e5e0:	jne    43e700 <X509_get0_pubkey_bitstr@plt+0x27d30>
  43e5e6:	lea    0x23c753(%rip),%rax        # 67ad40 <_edata+0x38>
  43e5ed:	xor    %r14d,%r14d
  43e5f0:	mov    $0x1,%ebx
  43e5f5:	mov    (%rax),%rdi
  43e5f8:	callq  413f40 <ERR_print_errors@plt>
  43e5fd:	lea    0x140(%rsp),%rax
  43e605:	mov    %rax,0x48(%rsp)
  43e60a:	mov    0x48(%rsp),%rax
  43e60f:	mov    %r13,%rdi
  43e612:	test   %rdi,%rdi
  43e615:	lea    0x8(%rax),%r12
  43e619:	lea    0x20(%rax),%rbp
  43e61d:	je     43e624 <X509_get0_pubkey_bitstr@plt+0x27c54>
  43e61f:	callq  414970 <RSA_free@plt>
  43e624:	cmp    %rbp,%r12
  43e627:	je     43e63b <X509_get0_pubkey_bitstr@plt+0x27c6b>
  43e629:	mov    (%r12),%rdi
  43e62d:	add    $0x8,%r12
  43e631:	test   %rdi,%rdi
  43e634:	jne    43e61f <X509_get0_pubkey_bitstr@plt+0x27c4f>
  43e636:	cmp    %rbp,%r12
  43e639:	jne    43e629 <X509_get0_pubkey_bitstr@plt+0x27c59>
  43e63b:	mov    %r14,%rdi
  43e63e:	lea    0x128(%rsp),%r12
  43e646:	lea    0x138(%rsp),%rbp
  43e64e:	test   %rdi,%rdi
  43e651:	je     43e658 <X509_get0_pubkey_bitstr@plt+0x27c88>
  43e653:	callq  4159d0 <DSA_free@plt>
  43e658:	cmp    %rbp,%r12
  43e65b:	je     43e66f <X509_get0_pubkey_bitstr@plt+0x27c9f>
  43e65d:	mov    (%r12),%rdi
  43e661:	add    $0x8,%r12
  43e665:	test   %rdi,%rdi
  43e668:	jne    43e653 <X509_get0_pubkey_bitstr@plt+0x27c83>
  43e66a:	cmp    %rbp,%r12
  43e66d:	jne    43e65d <X509_get0_pubkey_bitstr@plt+0x27c8d>
  43e66f:	mov    0x50(%rsp),%rbp
  43e674:	mov    0x68(%rsp),%r12
  43e679:	nopl   0x0(%rax)
  43e680:	mov    0x0(%rbp),%rdi
  43e684:	test   %rdi,%rdi
  43e687:	je     43e68e <X509_get0_pubkey_bitstr@plt+0x27cbe>
  43e689:	callq  415bf0 <EC_KEY_free@plt>
  43e68e:	add    $0x8,%rbp
  43e692:	cmp    %rbp,%r12
  43e695:	jne    43e680 <X509_get0_pubkey_bitstr@plt+0x27cb0>
  43e697:	mov    0x58(%rsp),%r12
  43e69c:	mov    0x60(%rsp),%r13
  43e6a1:	xor    %ebp,%ebp
  43e6a3:	nopl   0x0(%rax,%rax,1)
  43e6a8:	mov    (%r12,%rbp,1),%rdi
  43e6ac:	test   %rdi,%rdi
  43e6af:	je     43e6b6 <X509_get0_pubkey_bitstr@plt+0x27ce6>
  43e6b1:	callq  415bf0 <EC_KEY_free@plt>
  43e6b6:	mov    0x0(%r13,%rbp,1),%rdi
  43e6bb:	test   %rdi,%rdi
  43e6be:	je     43e6c5 <X509_get0_pubkey_bitstr@plt+0x27cf5>
  43e6c0:	callq  415bf0 <EC_KEY_free@plt>
  43e6c5:	add    $0x8,%rbp
  43e6c9:	cmp    $0x80,%rbp
  43e6d0:	jne    43e6a8 <X509_get0_pubkey_bitstr@plt+0x27cd8>
  43e6d2:	mov    0x30b8(%rsp),%rsi
  43e6da:	xor    %fs:0x28,%rsi
  43e6e3:	mov    %ebx,%eax
  43e6e5:	jne    442e33 <X509_get0_pubkey_bitstr@plt+0x2c463>
  43e6eb:	add    $0x30c8,%rsp
  43e6f2:	pop    %rbx
  43e6f3:	pop    %rbp
  43e6f4:	pop    %r12
  43e6f6:	pop    %r13
  43e6f8:	pop    %r14
  43e6fa:	pop    %r15
  43e6fc:	retq   
  43e6fd:	nopl   (%rax)
  43e700:	lea    0x2b35c(%rip),%rsi        # 469a63 <_fini+0xc55f>
  43e707:	mov    $0x299,%edx
  43e70c:	mov    $0x2001,%edi
  43e711:	movq   $0x0,0x140(%rsp)
  43e71d:	movq   $0x0,0x148(%rsp)
  43e729:	movq   $0x0,0x150(%rsp)
  43e735:	movq   $0x0,0x158(%rsp)
  43e741:	callq  413d50 <CRYPTO_malloc@plt>
  43e746:	test   %rax,%rax
  43e749:	mov    %rax,%r14
  43e74c:	je     441d7f <X509_get0_pubkey_bitstr@plt+0x2b3af>
  43e752:	lea    0x2b30a(%rip),%rsi        # 469a63 <_fini+0xc55f>
  43e759:	mov    $0x29e,%edx
  43e75e:	mov    $0x2001,%edi
  43e763:	callq  413d50 <CRYPTO_malloc@plt>
  43e768:	test   %rax,%rax
  43e76b:	mov    %rax,0x18(%rsp)
  43e770:	je     441e18 <X509_get0_pubkey_bitstr@plt+0x2b448>
  43e776:	lea    0x1420(%rsp),%rdx
  43e77e:	xor    %eax,%eax
  43e780:	mov    $0x96,%ecx
  43e785:	lea    0x298(%rsp),%r15
  43e78d:	movq   $0x0,0x2920(%rsp)
  43e799:	movq   $0x0,0x29d0(%rsp)
  43e7a5:	mov    %rdx,%rdi
  43e7a8:	movq   $0x0,0x29d8(%rsp)
  43e7b4:	movq   $0x0,0x29e0(%rsp)
  43e7c0:	rep stos %rax,%es:(%rdi)
  43e7c3:	lea    0x220(%rsp),%rax
  43e7cb:	movq   $0x0,0x29e8(%rsp)
  43e7d7:	mov    %rax,0x98(%rsp)
  43e7df:	nop
  43e7e0:	movl   $0x0,(%rax)
  43e7e6:	add    $0x4,%rax
  43e7ea:	cmp    %r15,%rax
  43e7ed:	jne    43e7e0 <X509_get0_pubkey_bitstr@plt+0x27e10>
  43e7ef:	lea    0x1a0(%rsp),%rax
  43e7f7:	movl   $0x0,0x110(%rsp)
  43e802:	movl   $0x0,0x114(%rsp)
  43e80d:	movl   $0x0,0x118(%rsp)
  43e818:	movl   $0x0,0x11c(%rsp)
  43e823:	lea    0x40(%rax),%rdx
  43e827:	movl   $0x0,0x100(%rsp)
  43e832:	movl   $0x0,0x104(%rsp)
  43e83d:	movl   $0x0,0x108(%rsp)
  43e848:	mov    %rax,0x70(%rsp)
  43e84d:	nopl   (%rax)
  43e850:	movl   $0x0,(%rax)
  43e856:	add    $0x4,%rax
  43e85a:	cmp    %rdx,%rax
  43e85d:	jne    43e850 <X509_get0_pubkey_bitstr@plt+0x27e80>
  43e85f:	lea    0x1e0(%rsp),%rax
  43e867:	lea    0x40(%rax),%rdx
  43e86b:	mov    %rax,0x78(%rsp)
  43e870:	movl   $0x0,(%rax)
  43e876:	add    $0x4,%rax
  43e87a:	cmp    %rdx,%rax
  43e87d:	jne    43e870 <X509_get0_pubkey_bitstr@plt+0x27ea0>
  43e87f:	add    $0x8,%rbp
  43e883:	sub    $0x1,%ebx
  43e886:	je     442dc5 <X509_get0_pubkey_bitstr@plt+0x2c3f5>
  43e88c:	xor    %eax,%eax
  43e88e:	xor    %r13d,%r13d
  43e891:	mov    %r15,0x30(%rsp)
  43e896:	mov    %r14,0x20(%rsp)
  43e89b:	movl   $0x0,0x28(%rsp)
  43e8a3:	mov    %r13d,%r15d
  43e8a6:	movq   $0x0,0xa0(%rsp)
  43e8b2:	mov    %rax,%r14
  43e8b5:	jmp    43e8db <X509_get0_pubkey_bitstr@plt+0x27f0b>
  43e8b7:	nopw   0x0(%rax,%rax,1)
  43e8c0:	movl   $0x0,0x23a812(%rip)        # 6790dc <_fini+0x21bbd8>
  43e8ca:	sub    $0x1,%r15d
  43e8ce:	add    $0x8,%rbp
  43e8d2:	add    $0x1,%r15d
  43e8d6:	sub    $0x1,%ebx
  43e8d9:	je     43e94e <X509_get0_pubkey_bitstr@plt+0x27f7e>
  43e8db:	test   %ebx,%ebx
  43e8dd:	mov    0x0(%rbp),%rax
  43e8e1:	jle    43ea00 <X509_get0_pubkey_bitstr@plt+0x28030>
  43e8e7:	lea    0x2b17d(%rip),%rdi        # 469a6b <_fini+0xc567>
  43e8ee:	mov    $0x9,%ecx
  43e8f3:	mov    %rax,%rsi
  43e8f6:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43e8f8:	je     43e8c0 <X509_get0_pubkey_bitstr@plt+0x27ef0>
  43e8fa:	lea    0x2b173(%rip),%rdi        # 469a74 <_fini+0xc570>
  43e901:	mov    %rax,%rsi
  43e904:	mov    $0x5,%ecx
  43e909:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43e90b:	jne    43e9d8 <X509_get0_pubkey_bitstr@plt+0x28008>
  43e911:	sub    $0x1,%ebx
  43e914:	lea    0x8(%rbp),%r12
  43e918:	je     4421b1 <X509_get0_pubkey_bitstr@plt+0x2b7e1>
  43e91e:	mov    0x8(%rbp),%rdi
  43e922:	callq  416810 <EVP_get_cipherbyname@plt>
  43e927:	test   %rax,%rax
  43e92a:	mov    %rax,%r14
  43e92d:	je     440aff <X509_get0_pubkey_bitstr@plt+0x2a12f>
  43e933:	mov    %r12,%rbp
  43e936:	add    $0x1,%r15d
  43e93a:	movl   $0x1,0x278(%rsp)
  43e945:	add    $0x8,%rbp
  43e949:	sub    $0x1,%ebx
  43e94c:	jne    43e8db <X509_get0_pubkey_bitstr@plt+0x27f0b>
  43e94e:	mov    0x28(%rsp),%r10d
  43e953:	mov    %r14,0x90(%rsp)
  43e95b:	mov    %r13d,0xac(%rsp)
  43e963:	mov    0x20(%rsp),%r14
  43e968:	mov    %r15d,%r13d
  43e96b:	mov    0x30(%rsp),%r15
  43e970:	test   %r10d,%r10d
  43e973:	jne    441e6e <X509_get0_pubkey_bitstr@plt+0x2b49e>
  43e979:	test   %r13d,%r13d
  43e97c:	jne    43ebb0 <X509_get0_pubkey_bitstr@plt+0x281e0>
  43e982:	mov    0x98(%rsp),%r13
  43e98a:	mov    $0x1,%r12d
  43e990:	xor    %ebp,%ebp
  43e992:	nopw   0x0(%rax,%rax,1)
  43e998:	cmp    $0x16,%ebp
  43e99b:	je     43e9ca <X509_get0_pubkey_bitstr@plt+0x27ffa>
  43e99d:	callq  415030 <FIPS_mode@plt>
  43e9a2:	test   %eax,%eax
  43e9a4:	je     43eb60 <X509_get0_pubkey_bitstr@plt+0x28190>
  43e9aa:	cmp    $0x19,%ebp
  43e9ad:	nopl   (%rax)
  43e9b0:	je     43e9c0 <X509_get0_pubkey_bitstr@plt+0x27ff0>
  43e9b2:	cmp    $0x3,%ebp
  43e9b5:	jbe    43e9c0 <X509_get0_pubkey_bitstr@plt+0x27ff0>
  43e9b7:	cmp    $0x6,%ebp
  43e9ba:	jne    43eb60 <X509_get0_pubkey_bitstr@plt+0x28190>
  43e9c0:	cmp    $0x1e,%r12d
  43e9c4:	je     440bd1 <X509_get0_pubkey_bitstr@plt+0x2a201>
  43e9ca:	add    $0x1,%rbp
  43e9ce:	add    $0x1,%r12d
  43e9d2:	jmp    43e998 <X509_get0_pubkey_bitstr@plt+0x27fc8>
  43e9d4:	nopl   0x0(%rax)
  43e9d8:	lea    0x24c60(%rip),%rdi        # 46363f <_fini+0x613b>
  43e9df:	mov    $0x9,%ecx
  43e9e4:	mov    %rax,%rsi
  43e9e7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43e9e9:	jne    43ea50 <X509_get0_pubkey_bitstr@plt+0x28080>
  43e9eb:	sub    $0x1,%r15d
  43e9ef:	mov    $0x1,%r13d
  43e9f5:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  43e9fa:	nopw   0x0(%rax,%rax,1)
  43ea00:	movzbl (%rax),%edx
  43ea03:	cmp    $0x6d,%edx
  43ea06:	jne    43eb1d <X509_get0_pubkey_bitstr@plt+0x2814d>
  43ea0c:	cmpb   $0x64,0x1(%rax)
  43ea10:	jne    43eb1d <X509_get0_pubkey_bitstr@plt+0x2814d>
  43ea16:	movzbl 0x2(%rax),%ecx
  43ea1a:	cmp    $0x32,%cl
  43ea1d:	je     440c4c <X509_get0_pubkey_bitstr@plt+0x2a27c>
  43ea23:	cmp    $0x34,%cl
  43ea26:	jne    442cc4 <X509_get0_pubkey_bitstr@plt+0x2c2f4>
  43ea2c:	cmpb   $0x0,0x3(%rax)
  43ea30:	jne    43eb1d <X509_get0_pubkey_bitstr@plt+0x2814d>
  43ea36:	movl   $0x1,0x228(%rsp)
  43ea41:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  43ea46:	nopw   %cs:0x0(%rax,%rax,1)
  43ea50:	lea    0x1f10b(%rip),%rdi        # 45db62 <_fini+0x65e>
  43ea57:	mov    $0x8,%ecx
  43ea5c:	mov    %rax,%rsi
  43ea5f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43ea61:	jne    43ea98 <X509_get0_pubkey_bitstr@plt+0x280c8>
  43ea63:	sub    $0x1,%ebx
  43ea66:	lea    0x8(%rbp),%r12
  43ea6a:	je     442d34 <X509_get0_pubkey_bitstr@plt+0x2c364>
  43ea70:	lea    0x23c2c9(%rip),%rax        # 67ad40 <_edata+0x38>
  43ea77:	mov    0x8(%rbp),%rsi
  43ea7b:	xor    %edx,%edx
  43ea7d:	sub    $0x1,%r15d
  43ea81:	mov    %r12,%rbp
  43ea84:	mov    (%rax),%rdi
  43ea87:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  43ea8c:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  43ea91:	nopl   0x0(%rax)
  43ea98:	lea    0x2aff9(%rip),%rdi        # 469a98 <_fini+0xc594>
  43ea9f:	mov    $0x7,%ecx
  43eaa4:	mov    %rax,%rsi
  43eaa7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43eaa9:	jne    43eae0 <X509_get0_pubkey_bitstr@plt+0x28110>
  43eaab:	sub    $0x1,%ebx
  43eaae:	lea    0x8(%rbp),%r12
  43eab2:	je     442d56 <X509_get0_pubkey_bitstr@plt+0x2c386>
  43eab8:	mov    0x8(%rbp),%rdi
  43eabc:	xor    %esi,%esi
  43eabe:	mov    $0xa,%edx
  43eac3:	callq  4155d0 <strtol@plt>
  43eac8:	test   %eax,%eax
  43eaca:	mov    %eax,0x28(%rsp)
  43eace:	jle    442d45 <X509_get0_pubkey_bitstr@plt+0x2c375>
  43ead4:	sub    $0x1,%r15d
  43ead8:	mov    %r12,%rbp
  43eadb:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  43eae0:	movzbl (%rax),%edx
  43eae3:	cmp    $0x2d,%dl
  43eae6:	jne    43ea03 <X509_get0_pubkey_bitstr@plt+0x28033>
  43eaec:	cmpb   $0x6d,0x1(%rax)
  43eaf0:	jne    43eb18 <X509_get0_pubkey_bitstr@plt+0x28148>
  43eaf2:	cmpb   $0x72,0x2(%rax)
  43eaf6:	jne    43eb18 <X509_get0_pubkey_bitstr@plt+0x28148>
  43eaf8:	cmpb   $0x0,0x3(%rax)
  43eafc:	jne    43eb18 <X509_get0_pubkey_bitstr@plt+0x28148>
  43eafe:	movl   $0x1,0x23d068(%rip)        # 67bb70 <_edata+0xe68>
  43eb08:	sub    $0x1,%r15d
  43eb0c:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  43eb11:	nopl   0x0(%rax)
  43eb18:	mov    $0x2d,%edx
  43eb1d:	lea    0x20de9(%rip),%rdi        # 45f90d <_fini+0x2409>
  43eb24:	mov    %rax,%rsi
  43eb27:	mov    $0x5,%ecx
  43eb2c:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43eb2e:	je     440d8e <X509_get0_pubkey_bitstr@plt+0x2a3be>
  43eb34:	lea    0x1ec8c(%rip),%rdi        # 45d7c7 <_fini+0x2c3>
  43eb3b:	mov    %rax,%rsi
  43eb3e:	mov    $0x5,%ecx
  43eb43:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  43eb45:	jne    442ce7 <X509_get0_pubkey_bitstr@plt+0x2c317>
  43eb4b:	movl   $0x1,0x234(%rsp)
  43eb56:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  43eb5b:	nopl   0x0(%rax,%rax,1)
  43eb60:	movl   $0x1,0x0(%r13,%rbp,4)
  43eb69:	jmpq   43e9c0 <X509_get0_pubkey_bitstr@plt+0x27ff0>
  43eb6e:	movl   $0x1,0x1ac(%rsp)
  43eb79:	movl   $0x1,0x1b0(%rsp)
  43eb84:	movl   $0x1,0x1b4(%rsp)
  43eb8f:	movl   $0x1,0x1ec(%rsp)
  43eb9a:	movl   $0x1,0x1f0(%rsp)
  43eba5:	movl   $0x1,0x1f4(%rsp)
  43ebb0:	mov    0x98(%rsp),%rax
  43ebb8:	xor    %edx,%edx
  43ebba:	nopw   0x0(%rax,%rax,1)
  43ebc0:	cmpl   $0x1,(%rax)
  43ebc3:	sbb    $0xffffffff,%edx
  43ebc6:	add    $0x4,%rax
  43ebca:	cmp    %rax,%r15
  43ebcd:	jne    43ebc0 <X509_get0_pubkey_bitstr@plt+0x281f0>
  43ebcf:	mov    0x23a506(%rip),%r9d        # 6790dc <_fini+0x21bbd8>
  43ebd6:	mov    %edx,0xb0(%rsp)
  43ebdd:	test   %r9d,%r9d
  43ebe0:	jne    43ebf2 <X509_get0_pubkey_bitstr@plt+0x28222>
  43ebe2:	mov    0x23cf87(%rip),%r8d        # 67bb70 <_edata+0xe68>
  43ebe9:	test   %r8d,%r8d
  43ebec:	je     440d9e <X509_get0_pubkey_bitstr@plt+0x2a3ce>
  43ebf2:	lea    0xf8(%rsp),%rax
  43ebfa:	lea    0x140(%rsp),%rsi
  43ec02:	lea    0x236bd7(%rip),%r12        # 6757e0 <_fini+0x2182dc>
  43ec09:	lea    0x2bb80(%rip),%rbx        # 46a790 <_fini+0xd28c>
  43ec10:	xor    %ebp,%ebp
  43ec12:	mov    %rax,0x80(%rsp)
  43ec1a:	mov    %rsi,0x48(%rsp)
  43ec1f:	mov    %rax,%r13
  43ec22:	mov    %rsi,%r15
  43ec25:	movslq (%rbx,%rbp,4),%rdx
  43ec29:	mov    (%r12,%rbp,8),%rax
  43ec2d:	xor    %edi,%edi
  43ec2f:	mov    %r13,%rsi
  43ec32:	mov    %rax,0xf8(%rsp)
  43ec3a:	callq  412a40 <d2i_RSAPrivateKey@plt>
  43ec3f:	test   %rax,%rax
  43ec42:	mov    %rax,(%r15,%rbp,8)
  43ec46:	je     442ca0 <X509_get0_pubkey_bitstr@plt+0x2c2d0>
  43ec4c:	add    $0x1,%rbp
  43ec50:	cmp    $0x4,%rbp
  43ec54:	jne    43ec25 <X509_get0_pubkey_bitstr@plt+0x28255>
  43ec56:	callq  43e290 <X509_get0_pubkey_bitstr@plt+0x278c0>
  43ec5b:	mov    %rax,0x120(%rsp)
  43ec63:	callq  43e350 <X509_get0_pubkey_bitstr@plt+0x27980>
  43ec68:	mov    %rax,0x128(%rsp)
  43ec70:	callq  43e410 <X509_get0_pubkey_bitstr@plt+0x27a40>
  43ec75:	mov    %rax,0x130(%rsp)
  43ec7d:	lea    0x320(%rsp),%rax
  43ec85:	lea    0x23a446(%rip),%rdi        # 6790d2 <_fini+0x21bbce>
  43ec8c:	mov    %rax,%rsi
  43ec8f:	mov    %rax,0x38(%rsp)
  43ec94:	callq  413580 <DES_set_key_unchecked@plt>
  43ec99:	lea    0x3a0(%rsp),%rax
  43eca1:	lea    0x23a422(%rip),%rdi        # 6790ca <_fini+0x21bbc6>
  43eca8:	mov    %rax,%rsi
  43ecab:	mov    %rax,0xe8(%rsp)
  43ecb3:	callq  413580 <DES_set_key_unchecked@plt>
  43ecb8:	lea    0x420(%rsp),%rax
  43ecc0:	lea    0x23a3fb(%rip),%rdi        # 6790c2 <_fini+0x21bbbe>
  43ecc7:	mov    %rax,%rsi
  43ecca:	mov    %rax,0x40(%rsp)
  43eccf:	callq  413580 <DES_set_key_unchecked@plt>
  43ecd4:	lea    0x790(%rsp),%rax
  43ecdc:	lea    0x2ba9d(%rip),%rdi        # 46a780 <_fini+0xd27c>
  43ece3:	mov    $0x80,%esi
  43ece8:	mov    %rax,%rdx
  43eceb:	mov    %rax,0x30(%rsp)
  43ecf0:	callq  415e10 <private_AES_set_encrypt_key@plt>
  43ecf5:	lea    0x890(%rsp),%rax
  43ecfd:	lea    0x2ba5c(%rip),%rdi        # 46a760 <_fini+0xd25c>
  43ed04:	mov    $0xc0,%esi
  43ed09:	mov    %rax,%rdx
  43ed0c:	mov    %rax,0xe0(%rsp)
  43ed14:	callq  415e10 <private_AES_set_encrypt_key@plt>
  43ed19:	lea    0x990(%rsp),%rax
  43ed21:	lea    0x2ba18(%rip),%rdi        # 46a740 <_fini+0xd23c>
  43ed28:	mov    $0x100,%esi
  43ed2d:	mov    %rax,%rdx
  43ed30:	mov    %rax,0xd8(%rsp)
  43ed38:	callq  415e10 <private_AES_set_encrypt_key@plt>
  43ed3d:	mov    0x26c(%rsp),%eax
  43ed44:	test   %eax,%eax
  43ed46:	mov    %eax,0xbc(%rsp)
  43ed4d:	mov    0x270(%rsp),%eax
  43ed54:	jne    43ed5e <X509_get0_pubkey_bitstr@plt+0x2838e>
  43ed56:	test   %eax,%eax
  43ed58:	je     440d56 <X509_get0_pubkey_bitstr@plt+0x2a386>
  43ed5e:	mov    %eax,0xb4(%rsp)
  43ed65:	mov    0x274(%rsp),%eax
  43ed6c:	mov    %eax,0xb8(%rsp)
  43ed73:	lea    0xb90(%rsp),%r13
  43ed7b:	lea    0x2b9fe(%rip),%rdi        # 46a780 <_fini+0xd27c>
  43ed82:	mov    $0x80,%esi
  43ed87:	mov    %r13,%rdx
  43ed8a:	lea    0xcb0(%rsp),%r13
  43ed92:	callq  412c20 <private_Camellia_set_key@plt>
  43ed97:	lea    0x2b982(%rip),%rdi        # 46a720 <_fini+0xd21c>
  43ed9e:	mov    %r13,%rdx
  43eda1:	mov    $0xc0,%esi
  43eda6:	lea    0xdd0(%rsp),%r13
  43edae:	callq  412c20 <private_Camellia_set_key@plt>
  43edb3:	lea    0x2b946(%rip),%rdi        # 46a700 <_fini+0xd1fc>
  43edba:	mov    %r13,%rdx
  43edbd:	mov    $0x100,%esi
  43edc2:	callq  412c20 <private_Camellia_set_key@plt>
  43edc7:	mov    0x248(%rsp),%eax
  43edce:	test   %eax,%eax
  43edd0:	mov    %eax,0xc0(%rsp)
  43edd7:	jne    44250a <X509_get0_pubkey_bitstr@plt+0x2bb3a>
  43eddd:	mov    0x24c(%rsp),%eax
  43ede4:	test   %eax,%eax
  43ede6:	mov    %eax,0xc4(%rsp)
  43eded:	jne    4424ee <X509_get0_pubkey_bitstr@plt+0x2bb1e>
  43edf3:	mov    0x23c(%rsp),%eax
  43edfa:	test   %eax,%eax
  43edfc:	mov    %eax,0xc8(%rsp)
  43ee03:	jne    4424cd <X509_get0_pubkey_bitstr@plt+0x2bafd>
  43ee09:	mov    0x250(%rsp),%eax
  43ee10:	test   %eax,%eax
  43ee12:	mov    %eax,0xcc(%rsp)
  43ee19:	jne    4424a7 <X509_get0_pubkey_bitstr@plt+0x2bad7>
  43ee1f:	mov    0x258(%rsp),%eax
  43ee26:	test   %eax,%eax
  43ee28:	mov    %eax,0xd0(%rsp)
  43ee2f:	jne    442486 <X509_get0_pubkey_bitstr@plt+0x2bab6>
  43ee35:	mov    0x25c(%rsp),%eax
  43ee3c:	test   %eax,%eax
  43ee3e:	mov    %eax,0xd4(%rsp)
  43ee45:	jne    442465 <X509_get0_pubkey_bitstr@plt+0x2ba95>
  43ee4b:	lea    0x160(%rsp),%rdx
  43ee53:	xor    %eax,%eax
  43ee55:	mov    $0x8,%ecx
  43ee5a:	lea    -0xe51(%rip),%rsi        # 43e010 <X509_get0_pubkey_bitstr@plt+0x27640>
  43ee61:	mov    %rdx,%rdi
  43ee64:	rep stos %rax,%es:(%rdi)
  43ee67:	mov    $0xe,%edi
  43ee6c:	callq  414ee0 <signal@plt>
  43ee71:	mov    0x220(%rsp),%edi
  43ee78:	test   %edi,%edi
  43ee7a:	jne    440c8f <X509_get0_pubkey_bitstr@plt+0x2a2bf>
  43ee80:	xorpd  %xmm7,%xmm7
  43ee84:	xor    %r15d,%r15d
  43ee87:	movsd  %xmm7,0x28(%rsp)
  43ee8d:	mov    0x228(%rsp),%ecx
  43ee94:	test   %ecx,%ecx
  43ee96:	je     43ef64 <X509_get0_pubkey_bitstr@plt+0x28594>
  43ee9c:	lea    0x2b8fd(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43eea3:	lea    0x23c5f6(%rip),%rbx        # 67b4a0 <_edata+0x798>
  43eeaa:	lea    0x2940(%rsp),%r12
  43eeb2:	xor    %r13d,%r13d
  43eeb5:	mov    %rax,0x20(%rsp)
  43eeba:	mov    0x20(%rsp),%rax
  43eebf:	mov    0x23b9ea(%rip),%rdi        # 67a8b0 <_fini+0x21d3ac>
  43eec6:	xor    %r15d,%r15d
  43eec9:	mov    %r13d,0x88(%rsp)
  43eed1:	movslq (%rax,%r13,4),%rbp
  43eed5:	mov    %ebp,%esi
  43eed7:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  43eedc:	mov    0x23a1fa(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43eee2:	xor    %edi,%edi
  43eee4:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43eee9:	movl   $0x1,(%rbx)
  43eeef:	jmp    43ef05 <X509_get0_pubkey_bitstr@plt+0x28535>
  43eef1:	nopl   0x0(%rax)
  43eef8:	cmp    $0x7fffffff,%r15
  43eeff:	je     441f94 <X509_get0_pubkey_bitstr@plt+0x2b5c4>
  43ef05:	callq  4151a0 <EVP_md4@plt>
  43ef0a:	xor    %r9d,%r9d
  43ef0d:	xor    %ecx,%ecx
  43ef0f:	mov    %r12,%rdx
  43ef12:	mov    %rax,%r8
  43ef15:	mov    %rbp,%rsi
  43ef18:	mov    %r14,%rdi
  43ef1b:	callq  415f80 <EVP_Digest@plt>
  43ef20:	mov    (%rbx),%edx
  43ef22:	add    $0x1,%r15
  43ef26:	test   %edx,%edx
  43ef28:	jne    43eef8 <X509_get0_pubkey_bitstr@plt+0x28528>
  43ef2a:	mov    %r15d,%ebp
  43ef2d:	mov    0x23a1a9(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43ef33:	mov    $0x1,%edi
  43ef38:	add    $0x1,%r13
  43ef3c:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43ef41:	mov    0x88(%rsp),%esi
  43ef48:	mov    %ebp,%edx
  43ef4a:	mov    $0x2,%edi
  43ef4f:	movsd  %xmm0,0x28(%rsp)
  43ef55:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  43ef5a:	cmp    $0x5,%r13
  43ef5e:	jne    43eeba <X509_get0_pubkey_bitstr@plt+0x284ea>
  43ef64:	mov    0x22c(%rsp),%eax
  43ef6b:	test   %eax,%eax
  43ef6d:	je     43f043 <X509_get0_pubkey_bitstr@plt+0x28673>
  43ef73:	lea    0x2b826(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43ef7a:	lea    0x23c51f(%rip),%rbx        # 67b4a0 <_edata+0x798>
  43ef81:	lea    0x2950(%rsp),%r12
  43ef89:	xor    %r13d,%r13d
  43ef8c:	mov    %rax,0x20(%rsp)
  43ef91:	mov    0x20(%rsp),%rax
  43ef96:	mov    0x23b91b(%rip),%rdi        # 67a8b8 <_fini+0x21d3b4>
  43ef9d:	xor    %r15d,%r15d
  43efa0:	mov    %r13d,0x88(%rsp)
  43efa8:	movslq (%rax,%r13,4),%rbp
  43efac:	mov    %ebp,%esi
  43efae:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  43efb3:	mov    0x23a123(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43efb9:	xor    %edi,%edi
  43efbb:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43efc0:	movl   $0x1,(%rbx)
  43efc6:	jmp    43efdd <X509_get0_pubkey_bitstr@plt+0x2860d>
  43efc8:	nopl   0x0(%rax,%rax,1)
  43efd0:	cmp    $0x7fffffff,%r15
  43efd7:	je     441f9e <X509_get0_pubkey_bitstr@plt+0x2b5ce>
  43efdd:	lea    0x1e7db(%rip),%rdi        # 45d7bf <_fini+0x2bb>
  43efe4:	add    $0x1,%r15
  43efe8:	callq  416720 <EVP_get_digestbyname@plt>
  43efed:	xor    %r9d,%r9d
  43eff0:	xor    %ecx,%ecx
  43eff2:	mov    %rax,%r8
  43eff5:	mov    %r12,%rdx
  43eff8:	mov    %rbp,%rsi
  43effb:	mov    %r14,%rdi
  43effe:	callq  415f80 <EVP_Digest@plt>
  43f003:	mov    (%rbx),%eax
  43f005:	test   %eax,%eax
  43f007:	jne    43efd0 <X509_get0_pubkey_bitstr@plt+0x28600>
  43f009:	mov    %r15d,%ebp
  43f00c:	mov    0x23a0ca(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f012:	mov    $0x1,%edi
  43f017:	add    $0x1,%r13
  43f01b:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f020:	mov    0x88(%rsp),%esi
  43f027:	mov    %ebp,%edx
  43f029:	mov    $0x3,%edi
  43f02e:	movsd  %xmm0,0x28(%rsp)
  43f034:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  43f039:	cmp    $0x5,%r13
  43f03d:	jne    43ef91 <X509_get0_pubkey_bitstr@plt+0x285c1>
  43f043:	mov    0x230(%rsp),%eax
  43f04a:	test   %eax,%eax
  43f04c:	jne    44232d <X509_get0_pubkey_bitstr@plt+0x2b95d>
  43f052:	mov    0x234(%rsp),%eax
  43f059:	test   %eax,%eax
  43f05b:	je     43f12c <X509_get0_pubkey_bitstr@plt+0x2875c>
  43f061:	lea    0x2b738(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43f068:	lea    0x23c431(%rip),%rbx        # 67b4a0 <_edata+0x798>
  43f06f:	lea    0x2970(%rsp),%r12
  43f077:	xor    %r13d,%r13d
  43f07a:	mov    %rax,0x20(%rsp)
  43f07f:	mov    0x20(%rsp),%rax
  43f084:	mov    0x23b83d(%rip),%rdi        # 67a8c8 <_fini+0x21d3c4>
  43f08b:	xor    %r15d,%r15d
  43f08e:	mov    %r13d,0x88(%rsp)
  43f096:	movslq (%rax,%r13,4),%rbp
  43f09a:	mov    %ebp,%esi
  43f09c:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  43f0a1:	mov    0x23a035(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f0a7:	xor    %edi,%edi
  43f0a9:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f0ae:	movl   $0x1,(%rbx)
  43f0b4:	jmp    43f0cd <X509_get0_pubkey_bitstr@plt+0x286fd>
  43f0b6:	nopw   %cs:0x0(%rax,%rax,1)
  43f0c0:	cmp    $0x7fffffff,%r15
  43f0c7:	je     441f8a <X509_get0_pubkey_bitstr@plt+0x2b5ba>
  43f0cd:	callq  413790 <EVP_sha1@plt>
  43f0d2:	xor    %r9d,%r9d
  43f0d5:	xor    %ecx,%ecx
  43f0d7:	mov    %rax,%r8
  43f0da:	mov    %r12,%rdx
  43f0dd:	mov    %rbp,%rsi
  43f0e0:	mov    %r14,%rdi
  43f0e3:	callq  415f80 <EVP_Digest@plt>
  43f0e8:	mov    (%rbx),%eax
  43f0ea:	add    $0x1,%r15
  43f0ee:	test   %eax,%eax
  43f0f0:	jne    43f0c0 <X509_get0_pubkey_bitstr@plt+0x286f0>
  43f0f2:	mov    %r15d,%ebp
  43f0f5:	mov    0x239fe1(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f0fb:	mov    $0x1,%edi
  43f100:	add    $0x1,%r13
  43f104:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f109:	mov    0x88(%rsp),%esi
  43f110:	mov    %ebp,%edx
  43f112:	mov    $0x5,%edi
  43f117:	movsd  %xmm0,0x28(%rsp)
  43f11d:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  43f122:	cmp    $0x5,%r13
  43f126:	jne    43f07f <X509_get0_pubkey_bitstr@plt+0x286af>
  43f12c:	mov    0x27c(%rsp),%r11d
  43f134:	test   %r11d,%r11d
  43f137:	je     43f1f9 <X509_get0_pubkey_bitstr@plt+0x28829>
  43f13d:	lea    0x2b65c(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43f144:	lea    0x23c355(%rip),%rbx        # 67b4a0 <_edata+0x798>
  43f14b:	lea    0x29b0(%rsp),%r12
  43f153:	xor    %r13d,%r13d
  43f156:	mov    %rax,0x20(%rsp)
  43f15b:	mov    0x20(%rsp),%rax
  43f160:	mov    0x23b7f1(%rip),%rdi        # 67a958 <_fini+0x21d454>
  43f167:	xor    %r15d,%r15d
  43f16a:	mov    %r13d,0x88(%rsp)
  43f172:	movslq (%rax,%r13,4),%rbp
  43f176:	mov    %ebp,%esi
  43f178:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  43f17d:	mov    0x239f59(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f183:	xor    %edi,%edi
  43f185:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f18a:	movl   $0x1,(%rbx)
  43f190:	jmp    43f1a5 <X509_get0_pubkey_bitstr@plt+0x287d5>
  43f192:	nopw   0x0(%rax,%rax,1)
  43f198:	cmp    $0x7fffffff,%r15
  43f19f:	je     441fa8 <X509_get0_pubkey_bitstr@plt+0x2b5d8>
  43f1a5:	mov    %r12,%rdx
  43f1a8:	mov    %rbp,%rsi
  43f1ab:	mov    %r14,%rdi
  43f1ae:	callq  4148e0 <SHA256@plt>
  43f1b3:	mov    (%rbx),%r10d
  43f1b6:	add    $0x1,%r15
  43f1ba:	test   %r10d,%r10d
  43f1bd:	jne    43f198 <X509_get0_pubkey_bitstr@plt+0x287c8>
  43f1bf:	mov    %r15d,%ebp
  43f1c2:	mov    0x239f14(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f1c8:	mov    $0x1,%edi
  43f1cd:	add    $0x1,%r13
  43f1d1:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f1d6:	mov    0x88(%rsp),%esi
  43f1dd:	mov    %ebp,%edx
  43f1df:	mov    $0x17,%edi
  43f1e4:	movsd  %xmm0,0x28(%rsp)
  43f1ea:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  43f1ef:	cmp    $0x5,%r13
  43f1f3:	jne    43f15b <X509_get0_pubkey_bitstr@plt+0x2878b>
  43f1f9:	mov    0x280(%rsp),%r9d
  43f201:	test   %r9d,%r9d
  43f204:	je     43f2c1 <X509_get0_pubkey_bitstr@plt+0x288f1>
  43f20a:	lea    0x2b58f(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43f211:	lea    0x23c288(%rip),%rbx        # 67b4a0 <_edata+0x798>
  43f218:	lea    0x2a30(%rsp),%r12
  43f220:	xor    %r13d,%r13d
  43f223:	mov    %rax,0x20(%rsp)
  43f228:	mov    0x20(%rsp),%rax
  43f22d:	mov    0x23b72c(%rip),%rdi        # 67a960 <_fini+0x21d45c>
  43f234:	xor    %r15d,%r15d
  43f237:	mov    %r13d,0x88(%rsp)
  43f23f:	movslq (%rax,%r13,4),%rbp
  43f243:	mov    %ebp,%esi
  43f245:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  43f24a:	mov    0x239e8c(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f250:	xor    %edi,%edi
  43f252:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f257:	movl   $0x1,(%rbx)
  43f25d:	jmp    43f26d <X509_get0_pubkey_bitstr@plt+0x2889d>
  43f25f:	nop
  43f260:	cmp    $0x7fffffff,%r15
  43f267:	je     441fb2 <X509_get0_pubkey_bitstr@plt+0x2b5e2>
  43f26d:	mov    %r12,%rdx
  43f270:	mov    %rbp,%rsi
  43f273:	mov    %r14,%rdi
  43f276:	callq  414f10 <SHA512@plt>
  43f27b:	mov    (%rbx),%r8d
  43f27e:	add    $0x1,%r15
  43f282:	test   %r8d,%r8d
  43f285:	jne    43f260 <X509_get0_pubkey_bitstr@plt+0x28890>
  43f287:	mov    %r15d,%ebp
  43f28a:	mov    0x239e4c(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f290:	mov    $0x1,%edi
  43f295:	add    $0x1,%r13
  43f299:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f29e:	mov    0x88(%rsp),%esi
  43f2a5:	mov    %ebp,%edx
  43f2a7:	mov    $0x18,%edi
  43f2ac:	movsd  %xmm0,0x28(%rsp)
  43f2b2:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  43f2b7:	cmp    $0x5,%r13
  43f2bb:	jne    43f228 <X509_get0_pubkey_bitstr@plt+0x28858>
  43f2c1:	mov    0x284(%rsp),%edi
  43f2c8:	test   %edi,%edi
  43f2ca:	je     43f387 <X509_get0_pubkey_bitstr@plt+0x289b7>
  43f2d0:	lea    0x2b4c9(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43f2d7:	lea    0x23c1c2(%rip),%rbx        # 67b4a0 <_edata+0x798>
  43f2de:	lea    0x2a70(%rsp),%r12
  43f2e6:	xor    %r13d,%r13d
  43f2e9:	mov    %rax,0x20(%rsp)
  43f2ee:	mov    0x20(%rsp),%rax
  43f2f3:	mov    0x23b66e(%rip),%rdi        # 67a968 <_fini+0x21d464>
  43f2fa:	xor    %r15d,%r15d
  43f2fd:	mov    %r13d,0x88(%rsp)
  43f305:	movslq (%rax,%r13,4),%rbp
  43f309:	mov    %ebp,%esi
  43f30b:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  43f310:	mov    0x239dc6(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f316:	xor    %edi,%edi
  43f318:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f31d:	movl   $0x1,(%rbx)
  43f323:	jmp    43f335 <X509_get0_pubkey_bitstr@plt+0x28965>
  43f325:	nopl   (%rax)
  43f328:	cmp    $0x7fffffff,%r15
  43f32f:	je     441fbc <X509_get0_pubkey_bitstr@plt+0x2b5ec>
  43f335:	mov    %rbp,%rsi
  43f338:	mov    %r12,%rdx
  43f33b:	mov    %r14,%rdi
  43f33e:	callq  4133e0 <WHIRLPOOL@plt>
  43f343:	mov    (%rbx),%esi
  43f345:	add    $0x1,%r15
  43f349:	test   %esi,%esi
  43f34b:	jne    43f328 <X509_get0_pubkey_bitstr@plt+0x28958>
  43f34d:	mov    %r15d,%ebp
  43f350:	mov    0x239d86(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f356:	mov    $0x1,%edi
  43f35b:	add    $0x1,%r13
  43f35f:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f364:	mov    0x88(%rsp),%esi
  43f36b:	mov    %ebp,%edx
  43f36d:	mov    $0x19,%edi
  43f372:	movsd  %xmm0,0x28(%rsp)
  43f378:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  43f37d:	cmp    $0x5,%r13
  43f381:	jne    43f2ee <X509_get0_pubkey_bitstr@plt+0x2891e>
  43f387:	mov    0x238(%rsp),%ecx
  43f38e:	test   %ecx,%ecx
  43f390:	je     43f45c <X509_get0_pubkey_bitstr@plt+0x28a8c>
  43f396:	lea    0x2b403(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43f39d:	lea    0x23c0fc(%rip),%rbx        # 67b4a0 <_edata+0x798>
  43f3a4:	lea    0x2990(%rsp),%r12
  43f3ac:	xor    %r13d,%r13d
  43f3af:	mov    %rax,0x20(%rsp)
  43f3b4:	mov    0x20(%rsp),%rax
  43f3b9:	mov    0x23b510(%rip),%rdi        # 67a8d0 <_fini+0x21d3cc>
  43f3c0:	xor    %r15d,%r15d
  43f3c3:	mov    %r13d,0x88(%rsp)
  43f3cb:	movslq (%rax,%r13,4),%rbp
  43f3cf:	mov    %ebp,%esi
  43f3d1:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  43f3d6:	mov    0x239d00(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f3dc:	xor    %edi,%edi
  43f3de:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f3e3:	movl   $0x1,(%rbx)
  43f3e9:	jmp    43f3fd <X509_get0_pubkey_bitstr@plt+0x28a2d>
  43f3eb:	nopl   0x0(%rax,%rax,1)
  43f3f0:	cmp    $0x7fffffff,%r15
  43f3f7:	je     441fc6 <X509_get0_pubkey_bitstr@plt+0x2b5f6>
  43f3fd:	callq  416900 <EVP_ripemd160@plt>
  43f402:	xor    %r9d,%r9d
  43f405:	xor    %ecx,%ecx
  43f407:	mov    %r12,%rdx
  43f40a:	mov    %rax,%r8
  43f40d:	mov    %rbp,%rsi
  43f410:	mov    %r14,%rdi
  43f413:	callq  415f80 <EVP_Digest@plt>
  43f418:	mov    (%rbx),%edx
  43f41a:	add    $0x1,%r15
  43f41e:	test   %edx,%edx
  43f420:	jne    43f3f0 <X509_get0_pubkey_bitstr@plt+0x28a20>
  43f422:	mov    %r15d,%ebp
  43f425:	mov    0x239cb1(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f42b:	mov    $0x1,%edi
  43f430:	add    $0x1,%r13
  43f434:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f439:	mov    0x88(%rsp),%esi
  43f440:	mov    %ebp,%edx
  43f442:	mov    $0x6,%edi
  43f447:	movsd  %xmm0,0x28(%rsp)
  43f44d:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  43f452:	cmp    $0x5,%r13
  43f456:	jne    43f3b4 <X509_get0_pubkey_bitstr@plt+0x289e4>
  43f45c:	mov    0xc8(%rsp),%eax
  43f463:	test   %eax,%eax
  43f465:	je     43f522 <X509_get0_pubkey_bitstr@plt+0x28b52>
  43f46b:	lea    0x2b32e(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43f472:	lea    0x23c027(%rip),%rbx        # 67b4a0 <_edata+0x798>
  43f479:	lea    0x1010(%rsp),%r12
  43f481:	xor    %r13d,%r13d
  43f484:	mov    %rax,0x20(%rsp)
  43f489:	mov    0x20(%rsp),%rax
  43f48e:	mov    0x23b443(%rip),%rdi        # 67a8d8 <_fini+0x21d3d4>
  43f495:	xor    %r15d,%r15d
  43f498:	mov    %r13d,0x88(%rsp)
  43f4a0:	mov    (%rax,%r13,4),%ebp
  43f4a4:	mov    %ebp,%esi
  43f4a6:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  43f4ab:	mov    0x239c2b(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f4b1:	xor    %edi,%edi
  43f4b3:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f4b8:	movl   $0x1,(%rbx)
  43f4be:	jmp    43f4cd <X509_get0_pubkey_bitstr@plt+0x28afd>
  43f4c0:	cmp    $0x7fffffff,%r15
  43f4c7:	je     441fd0 <X509_get0_pubkey_bitstr@plt+0x2b600>
  43f4cd:	mov    %r14,%rcx
  43f4d0:	mov    %r14,%rdx
  43f4d3:	mov    %rbp,%rsi
  43f4d6:	mov    %r12,%rdi
  43f4d9:	add    $0x1,%r15
  43f4dd:	callq  412e00 <RC4@plt>
  43f4e2:	mov    (%rbx),%eax
  43f4e4:	test   %eax,%eax
  43f4e6:	jne    43f4c0 <X509_get0_pubkey_bitstr@plt+0x28af0>
  43f4e8:	mov    %r15d,%ebp
  43f4eb:	mov    0x239beb(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f4f1:	mov    $0x1,%edi
  43f4f6:	add    $0x1,%r13
  43f4fa:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f4ff:	mov    0x88(%rsp),%esi
  43f506:	mov    %ebp,%edx
  43f508:	mov    $0x7,%edi
  43f50d:	movsd  %xmm0,0x28(%rsp)
  43f513:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  43f518:	cmp    $0x5,%r13
  43f51c:	jne    43f489 <X509_get0_pubkey_bitstr@plt+0x28ab9>
  43f522:	mov    0x240(%rsp),%eax
  43f529:	test   %eax,%eax
  43f52b:	je     43f616 <X509_get0_pubkey_bitstr@plt+0x28c46>
  43f531:	lea    0x2920(%rsp),%rbp
  43f539:	xor    %r13d,%r13d
  43f53c:	lea    0x2b25d(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43f543:	mov    %r13,0x88(%rsp)
  43f54b:	lea    0x23bf4e(%rip),%rbx        # 67b4a0 <_edata+0x798>
  43f552:	mov    %rbp,%r13
  43f555:	mov    0x38(%rsp),%rbp
  43f55a:	mov    %rax,0x20(%rsp)
  43f55f:	mov    0x88(%rsp),%rax
  43f567:	mov    0x20(%rsp),%rcx
  43f56c:	xor    %r15d,%r15d
  43f56f:	mov    0x23b36a(%rip),%rdi        # 67a8e0 <_fini+0x21d3dc>
  43f576:	movslq (%rcx,%rax,4),%r12
  43f57a:	mov    %eax,0xa8(%rsp)
  43f581:	mov    %r12d,%esi
  43f584:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  43f589:	mov    0x239b4d(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f58f:	xor    %edi,%edi
  43f591:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f596:	movl   $0x1,(%rbx)
  43f59c:	jmp    43f5ad <X509_get0_pubkey_bitstr@plt+0x28bdd>
  43f59e:	xchg   %ax,%ax
  43f5a0:	cmp    $0x7fffffff,%r15
  43f5a7:	je     441fda <X509_get0_pubkey_bitstr@plt+0x2b60a>
  43f5ad:	mov    $0x1,%r9d
  43f5b3:	mov    %r13,%r8
  43f5b6:	mov    %rbp,%rcx
  43f5b9:	mov    %r12,%rdx
  43f5bc:	mov    %r14,%rsi
  43f5bf:	mov    %r14,%rdi
  43f5c2:	callq  412800 <DES_ncbc_encrypt@plt>
  43f5c7:	mov    (%rbx),%eax
  43f5c9:	add    $0x1,%r15
  43f5cd:	test   %eax,%eax
  43f5cf:	jne    43f5a0 <X509_get0_pubkey_bitstr@plt+0x28bd0>
  43f5d1:	mov    %r15d,%r12d
  43f5d4:	mov    0x239b02(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f5da:	mov    $0x1,%edi
  43f5df:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f5e4:	mov    0xa8(%rsp),%esi
  43f5eb:	mov    %r12d,%edx
  43f5ee:	mov    $0x8,%edi
  43f5f3:	movsd  %xmm0,0x28(%rsp)
  43f5f9:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  43f5fe:	addq   $0x1,0x88(%rsp)
  43f607:	cmpq   $0x5,0x88(%rsp)
  43f610:	jne    43f55f <X509_get0_pubkey_bitstr@plt+0x28b8f>
  43f616:	mov    0x244(%rsp),%eax
  43f61d:	test   %eax,%eax
  43f61f:	je     43f730 <X509_get0_pubkey_bitstr@plt+0x28d60>
  43f625:	xor    %r13d,%r13d
  43f628:	lea    0x2b171(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43f62f:	lea    0x2920(%rsp),%rbp
  43f637:	mov    %r13,0x88(%rsp)
  43f63f:	lea    0x23be5a(%rip),%rbx        # 67b4a0 <_edata+0x798>
  43f646:	mov    0xe8(%rsp),%r13
  43f64e:	mov    %rax,0x20(%rsp)
  43f653:	mov    %rbp,%r15
  43f656:	mov    0x88(%rsp),%rax
  43f65e:	mov    0x20(%rsp),%rcx
  43f663:	xor    %ebp,%ebp
  43f665:	mov    0x23b27c(%rip),%rdi        # 67a8e8 <_fini+0x21d3e4>
  43f66c:	movslq (%rcx,%rax,4),%r12
  43f670:	mov    %eax,0xa8(%rsp)
  43f677:	mov    %r12d,%esi
  43f67a:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  43f67f:	mov    0x239a57(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f685:	xor    %edi,%edi
  43f687:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f68c:	mov    %rbx,%rax
  43f68f:	movl   $0x1,(%rbx)
  43f695:	mov    %rbp,%rbx
  43f698:	mov    %rax,%rbp
  43f69b:	jmp    43f6ad <X509_get0_pubkey_bitstr@plt+0x28cdd>
  43f69d:	nopl   (%rax)
  43f6a0:	cmp    $0x7fffffff,%rbx
  43f6a7:	je     441fe5 <X509_get0_pubkey_bitstr@plt+0x2b615>
  43f6ad:	mov    0x40(%rsp),%r9
  43f6b2:	mov    0x38(%rsp),%rcx
  43f6b7:	mov    %r13,%r8
  43f6ba:	movl   $0x1,0x8(%rsp)
  43f6c2:	mov    %r15,(%rsp)
  43f6c6:	mov    %r12,%rdx
  43f6c9:	mov    %r14,%rsi
  43f6cc:	mov    %r14,%rdi
  43f6cf:	add    $0x1,%rbx
  43f6d3:	callq  412bf0 <DES_ede3_cbc_encrypt@plt>
  43f6d8:	mov    0x0(%rbp),%eax
  43f6db:	test   %eax,%eax
  43f6dd:	jne    43f6a0 <X509_get0_pubkey_bitstr@plt+0x28cd0>
  43f6df:	mov    %rbp,%rax
  43f6e2:	mov    %rbx,%rbp
  43f6e5:	mov    %ebp,%r12d
  43f6e8:	mov    %rax,%rbx
  43f6eb:	mov    0x2399eb(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f6f1:	mov    $0x1,%edi
  43f6f6:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f6fb:	mov    0xa8(%rsp),%esi
  43f702:	mov    %r12d,%edx
  43f705:	mov    $0x9,%edi
  43f70a:	movsd  %xmm0,0x28(%rsp)
  43f710:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  43f715:	addq   $0x1,0x88(%rsp)
  43f71e:	cmpq   $0x5,0x88(%rsp)
  43f727:	jne    43f656 <X509_get0_pubkey_bitstr@plt+0x28c86>
  43f72d:	mov    %rbp,%r15
  43f730:	mov    0x260(%rsp),%r11d
  43f738:	test   %r11d,%r11d
  43f73b:	je     43f817 <X509_get0_pubkey_bitstr@plt+0x28e47>
  43f741:	lea    0x29d0(%rsp),%rbp
  43f749:	xor    %r13d,%r13d
  43f74c:	lea    0x2b04d(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43f753:	mov    %r13,0x38(%rsp)
  43f758:	lea    0x23bd41(%rip),%rbx        # 67b4a0 <_edata+0x798>
  43f75f:	mov    %rbp,%r13
  43f762:	mov    0x30(%rsp),%rbp
  43f767:	mov    %rax,0x20(%rsp)
  43f76c:	mov    0x38(%rsp),%rax
  43f771:	mov    0x20(%rsp),%rcx
  43f776:	xor    %r15d,%r15d
  43f779:	mov    0x23b1a0(%rip),%rdi        # 67a920 <_fini+0x21d41c>
  43f780:	movslq (%rcx,%rax,4),%r12
  43f784:	mov    %eax,0x40(%rsp)
  43f788:	mov    %r12d,%esi
  43f78b:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  43f790:	mov    0x239946(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f796:	xor    %edi,%edi
  43f798:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f79d:	movl   $0x1,(%rbx)
  43f7a3:	jmp    43f7b5 <X509_get0_pubkey_bitstr@plt+0x28de5>
  43f7a5:	nopl   (%rax)
  43f7a8:	cmp    $0x7fffffff,%r15
  43f7af:	je     441ff9 <X509_get0_pubkey_bitstr@plt+0x2b629>
  43f7b5:	mov    $0x1,%r9d
  43f7bb:	mov    %r13,%r8
  43f7be:	mov    %rbp,%rcx
  43f7c1:	mov    %r12,%rdx
  43f7c4:	mov    %r14,%rsi
  43f7c7:	mov    %r14,%rdi
  43f7ca:	callq  414440 <AES_cbc_encrypt@plt>
  43f7cf:	mov    (%rbx),%r10d
  43f7d2:	add    $0x1,%r15
  43f7d6:	test   %r10d,%r10d
  43f7d9:	jne    43f7a8 <X509_get0_pubkey_bitstr@plt+0x28dd8>
  43f7db:	mov    %r15d,%r12d
  43f7de:	mov    0x2398f8(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f7e4:	mov    $0x1,%edi
  43f7e9:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f7ee:	mov    0x40(%rsp),%esi
  43f7f2:	mov    %r12d,%edx
  43f7f5:	mov    $0x10,%edi
  43f7fa:	movsd  %xmm0,0x28(%rsp)
  43f800:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  43f805:	addq   $0x1,0x38(%rsp)
  43f80b:	cmpq   $0x5,0x38(%rsp)
  43f811:	jne    43f76c <X509_get0_pubkey_bitstr@plt+0x28d9c>
  43f817:	mov    0x264(%rsp),%r9d
  43f81f:	test   %r9d,%r9d
  43f822:	je     43f8ff <X509_get0_pubkey_bitstr@plt+0x28f2f>
  43f828:	xor    %r13d,%r13d
  43f82b:	lea    0x2af6e(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43f832:	lea    0x23bc67(%rip),%rbx        # 67b4a0 <_edata+0x798>
  43f839:	mov    %r13,0x38(%rsp)
  43f83e:	mov    0xe0(%rsp),%r13
  43f846:	lea    0x29d0(%rsp),%rbp
  43f84e:	mov    %rax,0x20(%rsp)
  43f853:	mov    0x38(%rsp),%rax
  43f858:	mov    0x20(%rsp),%rcx
  43f85d:	xor    %r15d,%r15d
  43f860:	mov    0x23b0c1(%rip),%rdi        # 67a928 <_fini+0x21d424>
  43f867:	movslq (%rcx,%rax,4),%r12
  43f86b:	mov    %eax,0x40(%rsp)
  43f86f:	mov    %r12d,%esi
  43f872:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  43f877:	mov    0x23985f(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f87d:	xor    %edi,%edi
  43f87f:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f884:	movl   $0x1,(%rbx)
  43f88a:	jmp    43f89d <X509_get0_pubkey_bitstr@plt+0x28ecd>
  43f88c:	nopl   0x0(%rax)
  43f890:	cmp    $0x7fffffff,%r15
  43f897:	je     442004 <X509_get0_pubkey_bitstr@plt+0x2b634>
  43f89d:	mov    %rbp,%r8
  43f8a0:	mov    $0x1,%r9d
  43f8a6:	mov    %r13,%rcx
  43f8a9:	mov    %r12,%rdx
  43f8ac:	mov    %r14,%rsi
  43f8af:	mov    %r14,%rdi
  43f8b2:	callq  414440 <AES_cbc_encrypt@plt>
  43f8b7:	mov    (%rbx),%r8d
  43f8ba:	add    $0x1,%r15
  43f8be:	test   %r8d,%r8d
  43f8c1:	jne    43f890 <X509_get0_pubkey_bitstr@plt+0x28ec0>
  43f8c3:	mov    %r15d,%r12d
  43f8c6:	mov    0x239810(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f8cc:	mov    $0x1,%edi
  43f8d1:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f8d6:	mov    0x40(%rsp),%esi
  43f8da:	mov    %r12d,%edx
  43f8dd:	mov    $0x11,%edi
  43f8e2:	movsd  %xmm0,0x28(%rsp)
  43f8e8:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  43f8ed:	addq   $0x1,0x38(%rsp)
  43f8f3:	cmpq   $0x5,0x38(%rsp)
  43f8f9:	jne    43f853 <X509_get0_pubkey_bitstr@plt+0x28e83>
  43f8ff:	mov    0x268(%rsp),%edi
  43f906:	test   %edi,%edi
  43f908:	je     43f9e5 <X509_get0_pubkey_bitstr@plt+0x29015>
  43f90e:	lea    0x29d0(%rsp),%rbp
  43f916:	xor    %r13d,%r13d
  43f919:	lea    0x2ae80(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43f920:	mov    %r13,0x38(%rsp)
  43f925:	lea    0x23bb74(%rip),%rbx        # 67b4a0 <_edata+0x798>
  43f92c:	mov    %rbp,%r13
  43f92f:	mov    0xd8(%rsp),%rbp
  43f937:	mov    %rax,0x20(%rsp)
  43f93c:	mov    0x38(%rsp),%rax
  43f941:	mov    0x20(%rsp),%rcx
  43f946:	xor    %r15d,%r15d
  43f949:	mov    0x23afe0(%rip),%rdi        # 67a930 <_fini+0x21d42c>
  43f950:	movslq (%rcx,%rax,4),%r12
  43f954:	mov    %eax,0x40(%rsp)
  43f958:	mov    %r12d,%esi
  43f95b:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  43f960:	mov    0x239776(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f966:	xor    %edi,%edi
  43f968:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f96d:	movl   $0x1,(%rbx)
  43f973:	jmp    43f985 <X509_get0_pubkey_bitstr@plt+0x28fb5>
  43f975:	nopl   (%rax)
  43f978:	cmp    $0x7fffffff,%r15
  43f97f:	je     44200f <X509_get0_pubkey_bitstr@plt+0x2b63f>
  43f985:	mov    %r14,%rsi
  43f988:	mov    $0x1,%r9d
  43f98e:	mov    %r13,%r8
  43f991:	mov    %rbp,%rcx
  43f994:	mov    %r12,%rdx
  43f997:	mov    %r14,%rdi
  43f99a:	callq  414440 <AES_cbc_encrypt@plt>
  43f99f:	mov    (%rbx),%esi
  43f9a1:	add    $0x1,%r15
  43f9a5:	test   %esi,%esi
  43f9a7:	jne    43f978 <X509_get0_pubkey_bitstr@plt+0x28fa8>
  43f9a9:	mov    %r15d,%r12d
  43f9ac:	mov    0x23972a(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43f9b2:	mov    $0x1,%edi
  43f9b7:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43f9bc:	mov    0x40(%rsp),%esi
  43f9c0:	mov    %r12d,%edx
  43f9c3:	mov    $0x12,%edi
  43f9c8:	movsd  %xmm0,0x28(%rsp)
  43f9ce:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  43f9d3:	addq   $0x1,0x38(%rsp)
  43f9d9:	cmpq   $0x5,0x38(%rsp)
  43f9df:	jne    43f93c <X509_get0_pubkey_bitstr@plt+0x28f6c>
  43f9e5:	mov    0x288(%rsp),%ecx
  43f9ec:	test   %ecx,%ecx
  43f9ee:	je     43fadc <X509_get0_pubkey_bitstr@plt+0x2910c>
  43f9f4:	xor    %r13d,%r13d
  43f9f7:	lea    0x2ada2(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43f9fe:	lea    0x29d0(%rsp),%rbp
  43fa06:	mov    %r13,0x38(%rsp)
  43fa0b:	lea    0x23ba8e(%rip),%rbx        # 67b4a0 <_edata+0x798>
  43fa12:	mov    0x18(%rsp),%r13
  43fa17:	mov    %rax,0x20(%rsp)
  43fa1c:	mov    %rbp,%r15
  43fa1f:	mov    0x38(%rsp),%rax
  43fa24:	mov    0x20(%rsp),%rcx
  43fa29:	xor    %ebp,%ebp
  43fa2b:	mov    0x23af3e(%rip),%rdi        # 67a970 <_fini+0x21d46c>
  43fa32:	movslq (%rcx,%rax,4),%r12
  43fa36:	mov    %eax,0x40(%rsp)
  43fa3a:	mov    %r12d,%esi
  43fa3d:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  43fa42:	mov    0x239694(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43fa48:	xor    %edi,%edi
  43fa4a:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43fa4f:	mov    %rbx,%rax
  43fa52:	movl   $0x1,(%rbx)
  43fa58:	mov    %rbp,%rbx
  43fa5b:	mov    %rax,%rbp
  43fa5e:	jmp    43fa6d <X509_get0_pubkey_bitstr@plt+0x2909d>
  43fa60:	cmp    $0x7fffffff,%rbx
  43fa67:	je     44201a <X509_get0_pubkey_bitstr@plt+0x2b64a>
  43fa6d:	mov    0x30(%rsp),%rcx
  43fa72:	mov    %r12,%rdx
  43fa75:	mov    $0x1,%r9d
  43fa7b:	mov    %r15,%r8
  43fa7e:	mov    %r13,%rsi
  43fa81:	mov    %r14,%rdi
  43fa84:	add    $0x1,%rbx
  43fa88:	callq  415620 <AES_ige_encrypt@plt>
  43fa8d:	mov    0x0(%rbp),%edx
  43fa90:	test   %edx,%edx
  43fa92:	jne    43fa60 <X509_get0_pubkey_bitstr@plt+0x29090>
  43fa94:	mov    %rbp,%rax
  43fa97:	mov    %rbx,%rbp
  43fa9a:	mov    %ebp,%r12d
  43fa9d:	mov    %rax,%rbx
  43faa0:	mov    0x239636(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43faa6:	mov    $0x1,%edi
  43faab:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43fab0:	mov    0x40(%rsp),%esi
  43fab4:	mov    %r12d,%edx
  43fab7:	mov    $0x1a,%edi
  43fabc:	movsd  %xmm0,0x28(%rsp)
  43fac2:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  43fac7:	addq   $0x1,0x38(%rsp)
  43facd:	cmpq   $0x5,0x38(%rsp)
  43fad3:	jne    43fa1f <X509_get0_pubkey_bitstr@plt+0x2904f>
  43fad9:	mov    %rbp,%r15
  43fadc:	mov    0x28c(%rsp),%eax
  43fae3:	test   %eax,%eax
  43fae5:	je     43fbdf <X509_get0_pubkey_bitstr@plt+0x2920f>
  43faeb:	lea    0x2acae(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43faf2:	lea    0x23b9a7(%rip),%rbx        # 67b4a0 <_edata+0x798>
  43faf9:	mov    0xe0(%rsp),%r15
  43fb01:	xor    %r13d,%r13d
  43fb04:	lea    0x29d0(%rsp),%rbp
  43fb0c:	mov    %rax,0x20(%rsp)
  43fb11:	mov    %r13,0x38(%rsp)
  43fb16:	mov    0x38(%rsp),%rax
  43fb1b:	mov    0x20(%rsp),%rcx
  43fb20:	xor    %r13d,%r13d
  43fb23:	mov    0x23ae4e(%rip),%rdi        # 67a978 <_fini+0x21d474>
  43fb2a:	movslq (%rcx,%rax,4),%r12
  43fb2e:	mov    %eax,0x40(%rsp)
  43fb32:	mov    %r12d,%esi
  43fb35:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  43fb3a:	mov    0x23959c(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43fb40:	xor    %edi,%edi
  43fb42:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43fb47:	mov    %rbp,%rax
  43fb4a:	movl   $0x1,(%rbx)
  43fb50:	mov    %rbx,%rbp
  43fb53:	mov    %r13,%rbx
  43fb56:	mov    %rax,%r13
  43fb59:	jmp    43fb6d <X509_get0_pubkey_bitstr@plt+0x2919d>
  43fb5b:	nopl   0x0(%rax,%rax,1)
  43fb60:	cmp    $0x7fffffff,%rbx
  43fb67:	je     44202e <X509_get0_pubkey_bitstr@plt+0x2b65e>
  43fb6d:	mov    0x18(%rsp),%rsi
  43fb72:	mov    $0x1,%r9d
  43fb78:	mov    %r13,%r8
  43fb7b:	mov    %r15,%rcx
  43fb7e:	mov    %r12,%rdx
  43fb81:	mov    %r14,%rdi
  43fb84:	add    $0x1,%rbx
  43fb88:	callq  415620 <AES_ige_encrypt@plt>
  43fb8d:	mov    0x0(%rbp),%eax
  43fb90:	test   %eax,%eax
  43fb92:	jne    43fb60 <X509_get0_pubkey_bitstr@plt+0x29190>
  43fb94:	mov    %r13,%rax
  43fb97:	mov    %rbx,%r13
  43fb9a:	mov    %rbp,%rbx
  43fb9d:	mov    %r13d,%r12d
  43fba0:	mov    %rax,%rbp
  43fba3:	mov    0x239533(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43fba9:	mov    $0x1,%edi
  43fbae:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43fbb3:	mov    0x40(%rsp),%esi
  43fbb7:	mov    %r12d,%edx
  43fbba:	mov    $0x1b,%edi
  43fbbf:	movsd  %xmm0,0x28(%rsp)
  43fbc5:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  43fbca:	addq   $0x1,0x38(%rsp)
  43fbd0:	cmpq   $0x5,0x38(%rsp)
  43fbd6:	jne    43fb16 <X509_get0_pubkey_bitstr@plt+0x29146>
  43fbdc:	mov    %r13,%r15
  43fbdf:	mov    0x290(%rsp),%eax
  43fbe6:	test   %eax,%eax
  43fbe8:	je     43fcdf <X509_get0_pubkey_bitstr@plt+0x2930f>
  43fbee:	lea    0x29d0(%rsp),%rbp
  43fbf6:	lea    0x2aba3(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43fbfd:	lea    0x23b89c(%rip),%rbx        # 67b4a0 <_edata+0x798>
  43fc04:	xor    %r13d,%r13d
  43fc07:	mov    %rbp,%r15
  43fc0a:	mov    0xd8(%rsp),%rbp
  43fc12:	mov    %rax,0x20(%rsp)
  43fc17:	mov    %r13,0x38(%rsp)
  43fc1c:	mov    0x38(%rsp),%rax
  43fc21:	mov    0x20(%rsp),%rcx
  43fc26:	xor    %r13d,%r13d
  43fc29:	mov    0x23ad50(%rip),%rdi        # 67a980 <_fini+0x21d47c>
  43fc30:	movslq (%rcx,%rax,4),%r12
  43fc34:	mov    %eax,0x40(%rsp)
  43fc38:	mov    %r12d,%esi
  43fc3b:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  43fc40:	mov    0x239496(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43fc46:	xor    %edi,%edi
  43fc48:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43fc4d:	mov    %rbx,%rax
  43fc50:	movl   $0x1,(%rbx)
  43fc56:	mov    %r12,%rbx
  43fc59:	mov    %r13,%r12
  43fc5c:	mov    %rax,%r13
  43fc5f:	jmp    43fc75 <X509_get0_pubkey_bitstr@plt+0x292a5>
  43fc61:	nopl   0x0(%rax)
  43fc68:	cmp    $0x7fffffff,%r12
  43fc6f:	je     441dcb <X509_get0_pubkey_bitstr@plt+0x2b3fb>
  43fc75:	mov    0x18(%rsp),%rsi
  43fc7a:	mov    $0x1,%r9d
  43fc80:	mov    %r15,%r8
  43fc83:	mov    %rbp,%rcx
  43fc86:	mov    %rbx,%rdx
  43fc89:	mov    %r14,%rdi
  43fc8c:	add    $0x1,%r12
  43fc90:	callq  415620 <AES_ige_encrypt@plt>
  43fc95:	mov    0x0(%r13),%eax
  43fc99:	test   %eax,%eax
  43fc9b:	jne    43fc68 <X509_get0_pubkey_bitstr@plt+0x29298>
  43fc9d:	mov    %r13,%rbx
  43fca0:	mov    %r12,%r13
  43fca3:	mov    0x239433(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43fca9:	mov    $0x1,%edi
  43fcae:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43fcb3:	mov    0x40(%rsp),%esi
  43fcb7:	mov    %r12d,%edx
  43fcba:	mov    $0x1c,%edi
  43fcbf:	movsd  %xmm0,0x28(%rsp)
  43fcc5:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  43fcca:	addq   $0x1,0x38(%rsp)
  43fcd0:	cmpq   $0x5,0x38(%rsp)
  43fcd6:	jne    43fc1c <X509_get0_pubkey_bitstr@plt+0x2924c>
  43fcdc:	mov    %r13,%r15
  43fcdf:	mov    0x294(%rsp),%eax
  43fce6:	test   %eax,%eax
  43fce8:	jne    442219 <X509_get0_pubkey_bitstr@plt+0x2b849>
  43fcee:	mov    0xbc(%rsp),%r11d
  43fcf6:	test   %r11d,%r11d
  43fcf9:	je     43fdd7 <X509_get0_pubkey_bitstr@plt+0x29407>
  43fcff:	lea    0x2aa9a(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43fd06:	lea    0x23b793(%rip),%rbx        # 67b4a0 <_edata+0x798>
  43fd0d:	lea    0xb90(%rsp),%r13
  43fd15:	lea    0x29d0(%rsp),%rbp
  43fd1d:	movq   $0x0,0x30(%rsp)
  43fd26:	mov    %rax,0x20(%rsp)
  43fd2b:	mov    0x30(%rsp),%rax
  43fd30:	mov    0x20(%rsp),%rcx
  43fd35:	xor    %r15d,%r15d
  43fd38:	mov    0x23abf9(%rip),%rdi        # 67a938 <_fini+0x21d434>
  43fd3f:	movslq (%rcx,%rax,4),%r12
  43fd43:	mov    %eax,0x38(%rsp)
  43fd47:	mov    %r12d,%esi
  43fd4a:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  43fd4f:	mov    0x239387(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43fd55:	xor    %edi,%edi
  43fd57:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43fd5c:	movl   $0x1,(%rbx)
  43fd62:	jmp    43fd75 <X509_get0_pubkey_bitstr@plt+0x293a5>
  43fd64:	nopl   0x0(%rax)
  43fd68:	cmp    $0x7fffffff,%r15
  43fd6f:	je     441dd6 <X509_get0_pubkey_bitstr@plt+0x2b406>
  43fd75:	mov    $0x1,%r9d
  43fd7b:	mov    %rbp,%r8
  43fd7e:	mov    %r13,%rcx
  43fd81:	mov    %r12,%rdx
  43fd84:	mov    %r14,%rsi
  43fd87:	mov    %r14,%rdi
  43fd8a:	callq  416750 <Camellia_cbc_encrypt@plt>
  43fd8f:	mov    (%rbx),%r10d
  43fd92:	add    $0x1,%r15
  43fd96:	test   %r10d,%r10d
  43fd99:	jne    43fd68 <X509_get0_pubkey_bitstr@plt+0x29398>
  43fd9b:	mov    %r15d,%r12d
  43fd9e:	mov    0x239338(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43fda4:	mov    $0x1,%edi
  43fda9:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43fdae:	mov    0x38(%rsp),%esi
  43fdb2:	mov    %r12d,%edx
  43fdb5:	mov    $0x13,%edi
  43fdba:	movsd  %xmm0,0x28(%rsp)
  43fdc0:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  43fdc5:	addq   $0x1,0x30(%rsp)
  43fdcb:	cmpq   $0x5,0x30(%rsp)
  43fdd1:	jne    43fd2b <X509_get0_pubkey_bitstr@plt+0x2935b>
  43fdd7:	mov    0xb4(%rsp),%r9d
  43fddf:	test   %r9d,%r9d
  43fde2:	je     43febf <X509_get0_pubkey_bitstr@plt+0x294ef>
  43fde8:	lea    0x2a9b1(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43fdef:	lea    0x23b6aa(%rip),%rbx        # 67b4a0 <_edata+0x798>
  43fdf6:	lea    0xcb0(%rsp),%r13
  43fdfe:	lea    0x29d0(%rsp),%rbp
  43fe06:	movq   $0x0,0x30(%rsp)
  43fe0f:	mov    %rax,0x20(%rsp)
  43fe14:	mov    0x30(%rsp),%rax
  43fe19:	mov    0x20(%rsp),%rcx
  43fe1e:	xor    %r15d,%r15d
  43fe21:	mov    0x23ab18(%rip),%rdi        # 67a940 <_fini+0x21d43c>
  43fe28:	movslq (%rcx,%rax,4),%r12
  43fe2c:	mov    %eax,0x38(%rsp)
  43fe30:	mov    %r12d,%esi
  43fe33:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  43fe38:	mov    0x23929e(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43fe3e:	xor    %edi,%edi
  43fe40:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43fe45:	movl   $0x1,(%rbx)
  43fe4b:	jmp    43fe5d <X509_get0_pubkey_bitstr@plt+0x2948d>
  43fe4d:	nopl   (%rax)
  43fe50:	cmp    $0x7fffffff,%r15
  43fe57:	je     441de1 <X509_get0_pubkey_bitstr@plt+0x2b411>
  43fe5d:	mov    %rbp,%r8
  43fe60:	mov    $0x1,%r9d
  43fe66:	mov    %r13,%rcx
  43fe69:	mov    %r12,%rdx
  43fe6c:	mov    %r14,%rsi
  43fe6f:	mov    %r14,%rdi
  43fe72:	callq  416750 <Camellia_cbc_encrypt@plt>
  43fe77:	mov    (%rbx),%r8d
  43fe7a:	add    $0x1,%r15
  43fe7e:	test   %r8d,%r8d
  43fe81:	jne    43fe50 <X509_get0_pubkey_bitstr@plt+0x29480>
  43fe83:	mov    %r15d,%r12d
  43fe86:	mov    0x239250(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43fe8c:	mov    $0x1,%edi
  43fe91:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43fe96:	mov    0x38(%rsp),%esi
  43fe9a:	mov    %r12d,%edx
  43fe9d:	mov    $0x14,%edi
  43fea2:	movsd  %xmm0,0x28(%rsp)
  43fea8:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  43fead:	addq   $0x1,0x30(%rsp)
  43feb3:	cmpq   $0x5,0x30(%rsp)
  43feb9:	jne    43fe14 <X509_get0_pubkey_bitstr@plt+0x29444>
  43febf:	mov    0xb8(%rsp),%edi
  43fec6:	test   %edi,%edi
  43fec8:	je     43ffa5 <X509_get0_pubkey_bitstr@plt+0x295d5>
  43fece:	lea    0x2a8cb(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43fed5:	lea    0x23b5c4(%rip),%rbx        # 67b4a0 <_edata+0x798>
  43fedc:	lea    0xdd0(%rsp),%r13
  43fee4:	lea    0x29d0(%rsp),%rbp
  43feec:	movq   $0x0,0x30(%rsp)
  43fef5:	mov    %rax,0x20(%rsp)
  43fefa:	mov    0x30(%rsp),%rax
  43feff:	mov    0x20(%rsp),%rcx
  43ff04:	xor    %r15d,%r15d
  43ff07:	mov    0x23aa3a(%rip),%rdi        # 67a948 <_fini+0x21d444>
  43ff0e:	movslq (%rcx,%rax,4),%r12
  43ff12:	mov    %eax,0x38(%rsp)
  43ff16:	mov    %r12d,%esi
  43ff19:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  43ff1e:	mov    0x2391b8(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43ff24:	xor    %edi,%edi
  43ff26:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43ff2b:	movl   $0x1,(%rbx)
  43ff31:	jmp    43ff45 <X509_get0_pubkey_bitstr@plt+0x29575>
  43ff33:	nopl   0x0(%rax,%rax,1)
  43ff38:	cmp    $0x7fffffff,%r15
  43ff3f:	je     441dec <X509_get0_pubkey_bitstr@plt+0x2b41c>
  43ff45:	mov    %r14,%rsi
  43ff48:	mov    $0x1,%r9d
  43ff4e:	mov    %rbp,%r8
  43ff51:	mov    %r13,%rcx
  43ff54:	mov    %r12,%rdx
  43ff57:	mov    %r14,%rdi
  43ff5a:	callq  416750 <Camellia_cbc_encrypt@plt>
  43ff5f:	mov    (%rbx),%esi
  43ff61:	add    $0x1,%r15
  43ff65:	test   %esi,%esi
  43ff67:	jne    43ff38 <X509_get0_pubkey_bitstr@plt+0x29568>
  43ff69:	mov    %r15d,%r12d
  43ff6c:	mov    0x23916a(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  43ff72:	mov    $0x1,%edi
  43ff77:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  43ff7c:	mov    0x38(%rsp),%esi
  43ff80:	mov    %r12d,%edx
  43ff83:	mov    $0x15,%edi
  43ff88:	movsd  %xmm0,0x28(%rsp)
  43ff8e:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  43ff93:	addq   $0x1,0x30(%rsp)
  43ff99:	cmpq   $0x5,0x30(%rsp)
  43ff9f:	jne    43fefa <X509_get0_pubkey_bitstr@plt+0x2952a>
  43ffa5:	mov    0xc0(%rsp),%ecx
  43ffac:	test   %ecx,%ecx
  43ffae:	je     44008d <X509_get0_pubkey_bitstr@plt+0x296bd>
  43ffb4:	lea    0x2a7e5(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  43ffbb:	lea    0x23b4de(%rip),%rbx        # 67b4a0 <_edata+0x798>
  43ffc2:	lea    0x6b0(%rsp),%r13
  43ffca:	lea    0x29d0(%rsp),%rbp
  43ffd2:	movq   $0x0,0x30(%rsp)
  43ffdb:	mov    %rax,0x20(%rsp)
  43ffe0:	mov    0x30(%rsp),%rax
  43ffe5:	mov    0x20(%rsp),%rcx
  43ffea:	xor    %r15d,%r15d
  43ffed:	mov    0x23a8fc(%rip),%rdi        # 67a8f0 <_fini+0x21d3ec>
  43fff4:	movslq (%rcx,%rax,4),%r12
  43fff8:	mov    %eax,0x38(%rsp)
  43fffc:	mov    %r12d,%esi
  43ffff:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  440004:	mov    0x2390d2(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  44000a:	xor    %edi,%edi
  44000c:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  440011:	movl   $0x1,(%rbx)
  440017:	jmp    44002d <X509_get0_pubkey_bitstr@plt+0x2965d>
  440019:	nopl   0x0(%rax)
  440020:	cmp    $0x7fffffff,%r15
  440027:	je     441df7 <X509_get0_pubkey_bitstr@plt+0x2b427>
  44002d:	mov    %r12,%rdx
  440030:	mov    $0x1,%r9d
  440036:	mov    %rbp,%r8
  440039:	mov    %r13,%rcx
  44003c:	mov    %r14,%rsi
  44003f:	mov    %r14,%rdi
  440042:	callq  412aa0 <idea_cbc_encrypt@plt>
  440047:	mov    (%rbx),%edx
  440049:	add    $0x1,%r15
  44004d:	test   %edx,%edx
  44004f:	jne    440020 <X509_get0_pubkey_bitstr@plt+0x29650>
  440051:	mov    %r15d,%r12d
  440054:	mov    0x239082(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  44005a:	mov    $0x1,%edi
  44005f:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  440064:	mov    0x38(%rsp),%esi
  440068:	mov    %r12d,%edx
  44006b:	mov    $0xa,%edi
  440070:	movsd  %xmm0,0x28(%rsp)
  440076:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  44007b:	addq   $0x1,0x30(%rsp)
  440081:	cmpq   $0x5,0x30(%rsp)
  440087:	jne    43ffe0 <X509_get0_pubkey_bitstr@plt+0x29610>
  44008d:	mov    0xc4(%rsp),%eax
  440094:	test   %eax,%eax
  440096:	je     440175 <X509_get0_pubkey_bitstr@plt+0x297a5>
  44009c:	lea    0x2a6fd(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  4400a3:	lea    0x23b3f6(%rip),%rbx        # 67b4a0 <_edata+0x798>
  4400aa:	lea    0x2a0(%rsp),%r13
  4400b2:	lea    0x29d0(%rsp),%rbp
  4400ba:	movq   $0x0,0x30(%rsp)
  4400c3:	mov    %rax,0x20(%rsp)
  4400c8:	mov    0x30(%rsp),%rax
  4400cd:	mov    0x20(%rsp),%rcx
  4400d2:	xor    %r15d,%r15d
  4400d5:	mov    0x23a81c(%rip),%rdi        # 67a8f8 <_fini+0x21d3f4>
  4400dc:	movslq (%rcx,%rax,4),%r12
  4400e0:	mov    %eax,0x38(%rsp)
  4400e4:	mov    %r12d,%esi
  4400e7:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  4400ec:	mov    0x238fea(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  4400f2:	xor    %edi,%edi
  4400f4:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  4400f9:	movl   $0x1,(%rbx)
  4400ff:	jmp    440115 <X509_get0_pubkey_bitstr@plt+0x29745>
  440101:	nopl   0x0(%rax)
  440108:	cmp    $0x7fffffff,%r15
  44010f:	je     441e02 <X509_get0_pubkey_bitstr@plt+0x2b432>
  440115:	mov    $0x1,%r9d
  44011b:	mov    %rbp,%r8
  44011e:	mov    %r13,%rcx
  440121:	mov    %r12,%rdx
  440124:	mov    %r14,%rsi
  440127:	mov    %r14,%rdi
  44012a:	callq  4146c0 <SEED_cbc_encrypt@plt>
  44012f:	mov    (%rbx),%eax
  440131:	add    $0x1,%r15
  440135:	test   %eax,%eax
  440137:	jne    440108 <X509_get0_pubkey_bitstr@plt+0x29738>
  440139:	mov    %r15d,%r12d
  44013c:	mov    0x238f9a(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  440142:	mov    $0x1,%edi
  440147:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  44014c:	mov    0x38(%rsp),%esi
  440150:	mov    %r12d,%edx
  440153:	mov    $0xb,%edi
  440158:	movsd  %xmm0,0x28(%rsp)
  44015e:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  440163:	addq   $0x1,0x30(%rsp)
  440169:	cmpq   $0x5,0x30(%rsp)
  44016f:	jne    4400c8 <X509_get0_pubkey_bitstr@plt+0x296f8>
  440175:	mov    0xcc(%rsp),%eax
  44017c:	test   %eax,%eax
  44017e:	je     44025d <X509_get0_pubkey_bitstr@plt+0x2988d>
  440184:	lea    0x2a615(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  44018b:	lea    0x23b30e(%rip),%rbx        # 67b4a0 <_edata+0x798>
  440192:	lea    0xa90(%rsp),%r13
  44019a:	lea    0x29d0(%rsp),%rbp
  4401a2:	movq   $0x0,0x30(%rsp)
  4401ab:	mov    %rax,0x20(%rsp)
  4401b0:	mov    0x30(%rsp),%rax
  4401b5:	mov    0x20(%rsp),%rcx
  4401ba:	xor    %r15d,%r15d
  4401bd:	mov    0x23a73c(%rip),%rdi        # 67a900 <_fini+0x21d3fc>
  4401c4:	movslq (%rcx,%rax,4),%r12
  4401c8:	mov    %eax,0x38(%rsp)
  4401cc:	mov    %r12d,%esi
  4401cf:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  4401d4:	mov    0x238f02(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  4401da:	xor    %edi,%edi
  4401dc:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  4401e1:	movl   $0x1,(%rbx)
  4401e7:	jmp    4401fd <X509_get0_pubkey_bitstr@plt+0x2982d>
  4401e9:	nopl   0x0(%rax)
  4401f0:	cmp    $0x7fffffff,%r15
  4401f7:	je     441e0d <X509_get0_pubkey_bitstr@plt+0x2b43d>
  4401fd:	mov    $0x1,%r9d
  440203:	mov    %rbp,%r8
  440206:	mov    %r13,%rcx
  440209:	mov    %r12,%rdx
  44020c:	mov    %r14,%rsi
  44020f:	mov    %r14,%rdi
  440212:	callq  415610 <RC2_cbc_encrypt@plt>
  440217:	mov    (%rbx),%eax
  440219:	add    $0x1,%r15
  44021d:	test   %eax,%eax
  44021f:	jne    4401f0 <X509_get0_pubkey_bitstr@plt+0x29820>
  440221:	mov    %r15d,%r12d
  440224:	mov    0x238eb2(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  44022a:	mov    $0x1,%edi
  44022f:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  440234:	mov    0x38(%rsp),%esi
  440238:	mov    %r12d,%edx
  44023b:	mov    $0xc,%edi
  440240:	movsd  %xmm0,0x28(%rsp)
  440246:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  44024b:	addq   $0x1,0x30(%rsp)
  440251:	cmpq   $0x5,0x30(%rsp)
  440257:	jne    4401b0 <X509_get0_pubkey_bitstr@plt+0x297e0>
  44025d:	mov    0xd0(%rsp),%eax
  440264:	test   %eax,%eax
  440266:	je     440345 <X509_get0_pubkey_bitstr@plt+0x29975>
  44026c:	lea    0x2a52d(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  440273:	lea    0x23b226(%rip),%rbx        # 67b4a0 <_edata+0x798>
  44027a:	lea    0x18d0(%rsp),%r12
  440282:	lea    0x29d0(%rsp),%rbp
  44028a:	movq   $0x0,0x30(%rsp)
  440293:	mov    %rax,0x20(%rsp)
  440298:	mov    0x30(%rsp),%rax
  44029d:	mov    0x20(%rsp),%rcx
  4402a2:	xor    %r15d,%r15d
  4402a5:	mov    0x23a664(%rip),%rdi        # 67a910 <_fini+0x21d40c>
  4402ac:	movslq (%rcx,%rax,4),%r13
  4402b0:	mov    %eax,0x38(%rsp)
  4402b4:	mov    %r13d,%esi
  4402b7:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  4402bc:	mov    0x238e1a(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  4402c2:	xor    %edi,%edi
  4402c4:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  4402c9:	movl   $0x1,(%rbx)
  4402cf:	jmp    4402e5 <X509_get0_pubkey_bitstr@plt+0x29915>
  4402d1:	nopl   0x0(%rax)
  4402d8:	cmp    $0x7fffffff,%r15
  4402df:	je     441f7f <X509_get0_pubkey_bitstr@plt+0x2b5af>
  4402e5:	mov    $0x1,%r9d
  4402eb:	mov    %rbp,%r8
  4402ee:	mov    %r12,%rcx
  4402f1:	mov    %r13,%rdx
  4402f4:	mov    %r14,%rsi
  4402f7:	mov    %r14,%rdi
  4402fa:	callq  414100 <BF_cbc_encrypt@plt>
  4402ff:	mov    (%rbx),%eax
  440301:	add    $0x1,%r15
  440305:	test   %eax,%eax
  440307:	jne    4402d8 <X509_get0_pubkey_bitstr@plt+0x29908>
  440309:	mov    %r15d,%r13d
  44030c:	mov    0x238dca(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  440312:	mov    $0x1,%edi
  440317:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  44031c:	mov    0x38(%rsp),%esi
  440320:	mov    %r13d,%edx
  440323:	mov    $0xe,%edi
  440328:	movsd  %xmm0,0x28(%rsp)
  44032e:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  440333:	addq   $0x1,0x30(%rsp)
  440339:	cmpq   $0x5,0x30(%rsp)
  44033f:	jne    440298 <X509_get0_pubkey_bitstr@plt+0x298c8>
  440345:	mov    0xd4(%rsp),%ebx
  44034c:	test   %ebx,%ebx
  44034e:	je     44042f <X509_get0_pubkey_bitstr@plt+0x29a5f>
  440354:	lea    0x2a445(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  44035b:	lea    0x23b13e(%rip),%rbx        # 67b4a0 <_edata+0x798>
  440362:	lea    0x620(%rsp),%r13
  44036a:	lea    0x29d0(%rsp),%rbp
  440372:	movq   $0x0,0x30(%rsp)
  44037b:	mov    %rax,0x20(%rsp)
  440380:	mov    0x30(%rsp),%rax
  440385:	mov    0x20(%rsp),%rcx
  44038a:	xor    %r15d,%r15d
  44038d:	mov    0x23a584(%rip),%rdi        # 67a918 <_fini+0x21d414>
  440394:	movslq (%rcx,%rax,4),%r12
  440398:	mov    %eax,0x38(%rsp)
  44039c:	mov    %r12d,%esi
  44039f:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  4403a4:	mov    0x238d32(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  4403aa:	xor    %edi,%edi
  4403ac:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  4403b1:	movl   $0x1,(%rbx)
  4403b7:	jmp    4403cd <X509_get0_pubkey_bitstr@plt+0x299fd>
  4403b9:	nopl   0x0(%rax)
  4403c0:	cmp    $0x7fffffff,%r15
  4403c7:	je     44204f <X509_get0_pubkey_bitstr@plt+0x2b67f>
  4403cd:	mov    $0x1,%r9d
  4403d3:	mov    %rbp,%r8
  4403d6:	mov    %r13,%rcx
  4403d9:	mov    %r12,%rdx
  4403dc:	mov    %r14,%rsi
  4403df:	mov    %r14,%rdi
  4403e2:	callq  415ee0 <CAST_cbc_encrypt@plt>
  4403e7:	mov    (%rbx),%r11d
  4403ea:	add    $0x1,%r15
  4403ee:	test   %r11d,%r11d
  4403f1:	jne    4403c0 <X509_get0_pubkey_bitstr@plt+0x299f0>
  4403f3:	mov    %r15d,%r12d
  4403f6:	mov    0x238ce0(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  4403fc:	mov    $0x1,%edi
  440401:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  440406:	mov    0x38(%rsp),%esi
  44040a:	mov    %r12d,%edx
  44040d:	mov    $0xf,%edi
  440412:	movsd  %xmm0,0x28(%rsp)
  440418:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  44041d:	addq   $0x1,0x30(%rsp)
  440423:	cmpq   $0x5,0x30(%rsp)
  440429:	jne    440380 <X509_get0_pubkey_bitstr@plt+0x299b0>
  44042f:	mov    0x278(%rsp),%r10d
  440437:	test   %r10d,%r10d
  44043a:	je     440663 <X509_get0_pubkey_bitstr@plt+0x29c93>
  440440:	lea    0x29d0(%rsp),%rax
  440448:	lea    0x29f0(%rsp),%r13
  440450:	mov    0xa0(%rsp),%r12
  440458:	lea    0xef0(%rsp),%rbp
  440460:	movq   $0x0,0x20(%rsp)
  440469:	mov    %rax,0x40(%rsp)
  44046e:	mov    %r13,0x38(%rsp)
  440473:	mov    0x90(%rsp),%rax
  44047b:	mov    0x20(%rsp),%rbx
  440480:	test   %rax,%rax
  440483:	mov    %ebx,0x30(%rsp)
  440487:	je     440589 <X509_get0_pubkey_bitstr@plt+0x29bb9>
  44048d:	mov    (%rax),%edi
  44048f:	callq  413920 <OBJ_nid2ln@plt>
  440494:	lea    0x2a305(%rip),%rdx        # 46a7a0 <_fini+0xd29c>
  44049b:	mov    %rax,%rdi
  44049e:	mov    %rax,0x23a4ab(%rip)        # 67a950 <_fini+0x21d44c>
  4404a5:	mov    (%rdx,%rbx,4),%r13d
  4404a9:	mov    %r13d,%esi
  4404ac:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  4404b1:	mov    %rbp,%rdi
  4404b4:	callq  414000 <EVP_CIPHER_CTX_init@plt>
  4404b9:	mov    0xac(%rsp),%r9d
  4404c1:	xor    %edx,%edx
  4404c3:	mov    0x40(%rsp),%r8
  4404c8:	lea    0x2a2b1(%rip),%rcx        # 46a780 <_fini+0xd27c>
  4404cf:	mov    0x90(%rsp),%rsi
  4404d7:	mov    %rbp,%rdi
  4404da:	test   %r9d,%r9d
  4404dd:	je     441b09 <X509_get0_pubkey_bitstr@plt+0x2b139>
  4404e3:	callq  416530 <EVP_DecryptInit_ex@plt>
  4404e8:	mov    %rbp,%rdi
  4404eb:	xor    %esi,%esi
  4404ed:	xor    %r15d,%r15d
  4404f0:	callq  415930 <EVP_CIPHER_CTX_set_padding@plt>
  4404f5:	mov    0x238be1(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  4404fb:	xor    %edi,%edi
  4404fd:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  440502:	lea    0x23af97(%rip),%rbx        # 67b4a0 <_edata+0x798>
  440509:	mov    %r12,0x28(%rsp)
  44050e:	mov    %rbp,%r12
  440511:	movl   $0x1,(%rbx)
  440517:	mov    %rbx,%rbp
  44051a:	mov    0x80(%rsp),%rbx
  440522:	jmp    440531 <X509_get0_pubkey_bitstr@plt+0x29b61>
  440524:	nopl   0x0(%rax)
  440528:	cmp    $0x7fffffff,%r15
  44052f:	je     440550 <X509_get0_pubkey_bitstr@plt+0x29b80>
  440531:	mov    %rbx,%rdx
  440534:	mov    %r13d,%r8d
  440537:	mov    %r14,%rcx
  44053a:	mov    %r14,%rsi
  44053d:	mov    %r12,%rdi
  440540:	add    $0x1,%r15
  440544:	callq  416130 <EVP_DecryptUpdate@plt>
  440549:	mov    0x0(%rbp),%edx
  44054c:	test   %edx,%edx
  44054e:	jne    440528 <X509_get0_pubkey_bitstr@plt+0x29b58>
  440550:	mov    0x80(%rsp),%rdx
  440558:	mov    %r12,%rbp
  44055b:	mov    %r14,%rsi
  44055e:	mov    %rbp,%rdi
  440561:	mov    0x28(%rsp),%r12
  440566:	callq  413da0 <EVP_DecryptFinal_ex@plt>
  44056b:	mov    0x238b6b(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  440571:	mov    $0x1,%edi
  440576:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  44057b:	mov    %rbp,%rdi
  44057e:	movsd  %xmm0,0x28(%rsp)
  440584:	callq  414790 <EVP_CIPHER_CTX_cleanup@plt>
  440589:	test   %r12,%r12
  44058c:	mov    %r15d,%ebx
  44058f:	je     44063b <X509_get0_pubkey_bitstr@plt+0x29c6b>
  440595:	mov    (%r12),%edi
  440599:	xor    %r15d,%r15d
  44059c:	callq  413920 <OBJ_nid2ln@plt>
  4405a1:	mov    0x20(%rsp),%rcx
  4405a6:	lea    0x2a1f3(%rip),%rdx        # 46a7a0 <_fini+0xd29c>
  4405ad:	mov    %rax,%rdi
  4405b0:	mov    %rax,0x23a399(%rip)        # 67a950 <_fini+0x21d44c>
  4405b7:	movslq (%rdx,%rcx,4),%r13
  4405bb:	mov    %r13d,%esi
  4405be:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  4405c3:	mov    0x238b13(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  4405c9:	xor    %edi,%edi
  4405cb:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  4405d0:	lea    0x23aec9(%rip),%rbx        # 67b4a0 <_edata+0x798>
  4405d7:	mov    %rbp,0x28(%rsp)
  4405dc:	mov    0x38(%rsp),%rbp
  4405e1:	movl   $0x1,(%rbx)
  4405e7:	jmp    4405fd <X509_get0_pubkey_bitstr@plt+0x29c2d>
  4405e9:	nopl   0x0(%rax)
  4405f0:	cmp    $0x7fffffff,%r15
  4405f7:	je     44220a <X509_get0_pubkey_bitstr@plt+0x2b83a>
  4405fd:	xor    %r9d,%r9d
  440600:	xor    %ecx,%ecx
  440602:	mov    %r12,%r8
  440605:	mov    %rbp,%rdx
  440608:	mov    %r13,%rsi
  44060b:	mov    %r14,%rdi
  44060e:	callq  415f80 <EVP_Digest@plt>
  440613:	mov    (%rbx),%eax
  440615:	add    $0x1,%r15
  440619:	test   %eax,%eax
  44061b:	jne    4405f0 <X509_get0_pubkey_bitstr@plt+0x29c20>
  44061d:	mov    0x28(%rsp),%rbp
  440622:	mov    %r15d,%ebx
  440625:	mov    0x238ab1(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  44062b:	mov    $0x1,%edi
  440630:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  440635:	movsd  %xmm0,0x28(%rsp)
  44063b:	mov    0x30(%rsp),%esi
  44063f:	movsd  0x28(%rsp),%xmm0
  440645:	mov    %ebx,%edx
  440647:	mov    $0x16,%edi
  44064c:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  440651:	addq   $0x1,0x20(%rsp)
  440657:	cmpq   $0x5,0x20(%rsp)
  44065d:	jne    440473 <X509_get0_pubkey_bitstr@plt+0x29aa3>
  440663:	mov    $0x24,%esi
  440668:	mov    %r14,%rdi
  44066b:	xor    %ebx,%ebx
  44066d:	callq  415560 <RAND_pseudo_bytes@plt>
  440672:	lea    0x110(%rsp),%rax
  44067a:	mov    0x18(%rsp),%r12
  44067f:	mov    %rax,0x28(%rsp)
  440684:	lea    0xf4(%rsp),%rax
  44068c:	mov    %rax,0x20(%rsp)
  440691:	jmp    4406a6 <X509_get0_pubkey_bitstr@plt+0x29cd6>
  440693:	nopl   0x0(%rax,%rax,1)
  440698:	add    $0x1,%rbx
  44069c:	cmp    $0x4,%rbx
  4406a0:	je     4408b4 <X509_get0_pubkey_bitstr@plt+0x29ee4>
  4406a6:	mov    0x28(%rsp),%rax
  4406ab:	mov    %ebx,0x30(%rsp)
  4406af:	mov    (%rax,%rbx,4),%eax
  4406b2:	test   %eax,%eax
  4406b4:	je     440698 <X509_get0_pubkey_bitstr@plt+0x29cc8>
  4406b6:	mov    0x48(%rsp),%rax
  4406bb:	mov    0x20(%rsp),%r8
  4406c0:	mov    %r12,%rcx
  4406c3:	mov    $0x24,%edx
  4406c8:	mov    %r14,%rsi
  4406cb:	mov    $0x72,%edi
  4406d0:	mov    (%rax,%rbx,8),%rax
  4406d4:	mov    %rax,%r9
  4406d7:	mov    %rax,0x38(%rsp)
  4406dc:	callq  415ca0 <RSA_sign@plt>
  4406e1:	test   %eax,%eax
  4406e3:	jne    440dbb <X509_get0_pubkey_bitstr@plt+0x2a3eb>
  4406e9:	lea    0x23a650(%rip),%rax        # 67ad40 <_edata+0x38>
  4406f0:	lea    0x29cc9(%rip),%rsi        # 46a3c0 <_fini+0xcebc>
  4406f7:	mov    $0x1,%ebp
  4406fc:	mov    (%rax),%rdi
  4406ff:	xor    %eax,%eax
  440701:	callq  413c40 <BIO_printf@plt>
  440706:	lea    0x23a633(%rip),%rax        # 67ad40 <_edata+0x38>
  44070d:	mov    (%rax),%rdi
  440710:	callq  413f40 <ERR_print_errors@plt>
  440715:	mov    0x38(%rsp),%r9
  44071a:	mov    0xf4(%rsp),%r8d
  440722:	mov    %r12,%rcx
  440725:	mov    $0x24,%edx
  44072a:	mov    %r14,%rsi
  44072d:	mov    $0x72,%edi
  440732:	callq  415f10 <RSA_verify@plt>
  440737:	test   %eax,%eax
  440739:	jle    441bd0 <X509_get0_pubkey_bitstr@plt+0x2b200>
  44073f:	lea    0x29faa(%rip),%rax        # 46a6f0 <_fini+0xd1ec>
  440746:	lea    0x27e01(%rip),%rsi        # 46854e <_fini+0xb04a>
  44074d:	lea    0x29650(%rip),%rdi        # 469da4 <_fini+0xc8a0>
  440754:	xor    %r15d,%r15d
  440757:	mov    (%rax,%rbx,4),%eax
  44075a:	mov    %eax,%edx
  44075c:	mov    %eax,0x40(%rsp)
  440760:	callq  43e230 <X509_get0_pubkey_bitstr@plt+0x27860>
  440765:	mov    0x238971(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  44076b:	xor    %edi,%edi
  44076d:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  440772:	lea    0x23ad27(%rip),%r13        # 67b4a0 <_edata+0x798>
  440779:	mov    %rbx,0x88(%rsp)
  440781:	mov    %r15,%rbx
  440784:	movl   $0x1,0x0(%r13)
  44078c:	mov    %r13,%r15
  44078f:	mov    0x38(%rsp),%r13
  440794:	jmp    4407bc <X509_get0_pubkey_bitstr@plt+0x29dec>
  440796:	nopw   %cs:0x0(%rax,%rax,1)
  4407a0:	mov    (%r15),%eax
  4407a3:	add    $0x1,%rbx
  4407a7:	test   %eax,%eax
  4407a9:	je     441039 <X509_get0_pubkey_bitstr@plt+0x2a669>
  4407af:	cmp    $0x7fffffff,%rbx
  4407b6:	je     441039 <X509_get0_pubkey_bitstr@plt+0x2a669>
  4407bc:	mov    0xf4(%rsp),%r8d
  4407c4:	mov    %r13,%r9
  4407c7:	mov    %r12,%rcx
  4407ca:	mov    $0x24,%edx
  4407cf:	mov    %r14,%rsi
  4407d2:	mov    $0x72,%edi
  4407d7:	callq  415f10 <RSA_verify@plt>
  4407dc:	test   %eax,%eax
  4407de:	jg     4407a0 <X509_get0_pubkey_bitstr@plt+0x29dd0>
  4407e0:	lea    0x23a559(%rip),%rax        # 67ad40 <_edata+0x38>
  4407e7:	lea    0x295bd(%rip),%rsi        # 469dab <_fini+0xc8a7>
  4407ee:	mov    0x88(%rsp),%rbx
  4407f6:	mov    $0x1,%r15d
  4407fc:	mov    (%rax),%rdi
  4407ff:	xor    %eax,%eax
  440801:	callq  413c40 <BIO_printf@plt>
  440806:	lea    0x23a533(%rip),%rax        # 67ad40 <_edata+0x38>
  44080d:	mov    (%rax),%rdi
  440810:	callq  413f40 <ERR_print_errors@plt>
  440815:	mov    0x2388c1(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  44081b:	mov    $0x1,%edi
  440820:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  440825:	mov    0x23b344(%rip),%r13d        # 67bb70 <_edata+0xe68>
  44082c:	lea    0x2985d(%rip),%rax        # 46a090 <_fini+0xcb8c>
  440833:	lea    0x29188(%rip),%rsi        # 4699c2 <_fini+0xc4be>
  44083a:	mov    0x40(%rsp),%ecx
  44083e:	movapd %xmm0,%xmm1
  440842:	mov    %r15,%rdx
  440845:	test   %r13d,%r13d
  440848:	movsd  %xmm1,0x38(%rsp)
  44084e:	cmove  %rax,%rsi
  440852:	lea    0x23a4e7(%rip),%rax        # 67ad40 <_edata+0x38>
  440859:	mov    (%rax),%rdi
  44085c:	mov    $0x1,%eax
  440861:	callq  413c40 <BIO_printf@plt>
  440866:	cvtsi2sd %r15,%xmm0
  44086b:	mov    %rbx,%rax
  44086e:	movsd  0x38(%rsp),%xmm1
  440874:	lea    0x23ae0d(%rip),%rdx        # 67b688 <_edata+0x980>
  44087b:	shl    $0x4,%rax
  44087f:	divsd  %xmm0,%xmm1
  440883:	movsd  %xmm1,(%rdx,%rax,1)
  440888:	cmp    $0x1,%rbp
  44088c:	jne    440698 <X509_get0_pubkey_bitstr@plt+0x29cc8>
  440892:	mov    0x30(%rsp),%eax
  440896:	add    $0x1,%eax
  440899:	cmp    $0x4,%eax
  44089c:	je     4408b4 <X509_get0_pubkey_bitstr@plt+0x29ee4>
  44089e:	movslq %eax,%rdx
  4408a1:	add    $0x1,%eax
  4408a4:	cmp    $0x4,%eax
  4408a7:	movl   $0x0,0x110(%rsp,%rdx,4)
  4408b2:	jne    44089e <X509_get0_pubkey_bitstr@plt+0x29ece>
  4408b4:	mov    $0x14,%esi
  4408b9:	mov    %r14,%rdi
  4408bc:	callq  415560 <RAND_pseudo_bytes@plt>
  4408c1:	callq  416420 <RAND_status@plt>
  4408c6:	cmp    $0x1,%eax
  4408c9:	je     4408e6 <X509_get0_pubkey_bitstr@plt+0x29f16>
  4408cb:	lea    0x29eee(%rip),%rdi        # 46a7c0 <_fini+0xd2bc>
  4408d2:	mov    $0x40,%esi
  4408d7:	callq  4133c0 <RAND_seed@plt>
  4408dc:	movl   $0x1,0x23b28e(%rip)        # 67bb74 <_edata+0xe6c>
  4408e6:	xor    %r15d,%r15d
  4408e9:	mov    0x18(%rsp),%rbp
  4408ee:	mov    %r15d,0x20(%rsp)
  4408f3:	jmp    440908 <X509_get0_pubkey_bitstr@plt+0x29f38>
  4408f5:	nopl   (%rax)
  4408f8:	addl   $0x1,0x20(%rsp)
  4408fd:	cmpl   $0x2,0x20(%rsp)
  440902:	jg     441056 <X509_get0_pubkey_bitstr@plt+0x2a686>
  440908:	movslq 0x20(%rsp),%r13
  44090d:	mov    0x100(%rsp,%r13,4),%r11d
  440915:	test   %r11d,%r11d
  440918:	je     4408f8 <X509_get0_pubkey_bitstr@plt+0x29f28>
  44091a:	mov    0x120(%rsp,%r13,8),%rax
  440922:	mov    0x80(%rsp),%r8
  44092a:	mov    %rbp,%rcx
  44092d:	mov    $0x14,%edx
  440932:	mov    %r14,%rsi
  440935:	mov    $0x74,%edi
  44093a:	mov    %rax,%r9
  44093d:	mov    %rax,0x30(%rsp)
  440942:	callq  413260 <DSA_sign@plt>
  440947:	test   %eax,%eax
  440949:	jne    440ef4 <X509_get0_pubkey_bitstr@plt+0x2a524>
  44094f:	lea    0x23a3ea(%rip),%rax        # 67ad40 <_edata+0x38>
  440956:	lea    0x29acb(%rip),%rsi        # 46a428 <_fini+0xcf24>
  44095d:	mov    $0x1,%ebx
  440962:	mov    (%rax),%rdi
  440965:	xor    %eax,%eax
  440967:	callq  413c40 <BIO_printf@plt>
  44096c:	lea    0x23a3cd(%rip),%rax        # 67ad40 <_edata+0x38>
  440973:	mov    (%rax),%rdi
  440976:	callq  413f40 <ERR_print_errors@plt>
  44097b:	mov    0x30(%rsp),%r9
  440980:	mov    0xf8(%rsp),%r8d
  440988:	mov    %rbp,%rcx
  44098b:	mov    $0x14,%edx
  440990:	mov    %r14,%rsi
  440993:	mov    $0x74,%edi
  440998:	callq  415d70 <DSA_verify@plt>
  44099d:	test   %eax,%eax
  44099f:	jle    441b98 <X509_get0_pubkey_bitstr@plt+0x2b1c8>
  4409a5:	lea    0x29d34(%rip),%rax        # 46a6e0 <_fini+0xd1dc>
  4409ac:	lea    0x291dc(%rip),%rsi        # 469b8f <_fini+0xc68b>
  4409b3:	lea    0x1d87f(%rip),%rdi        # 45e239 <_fini+0xd35>
  4409ba:	xor    %r15d,%r15d
  4409bd:	mov    (%rax,%r13,4),%eax
  4409c1:	mov    %eax,%edx
  4409c3:	mov    %eax,0x38(%rsp)
  4409c7:	callq  43e230 <X509_get0_pubkey_bitstr@plt+0x27860>
  4409cc:	mov    0x23870a(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  4409d2:	xor    %edi,%edi
  4409d4:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  4409d9:	lea    0x23aac0(%rip),%r12        # 67b4a0 <_edata+0x798>
  4409e0:	mov    %rbx,0x40(%rsp)
  4409e5:	mov    %r15,%rbx
  4409e8:	movl   $0x1,(%r12)
  4409f0:	mov    %r12,%r15
  4409f3:	mov    0x30(%rsp),%r12
  4409f8:	jmp    440a1d <X509_get0_pubkey_bitstr@plt+0x2a04d>
  4409fa:	nopw   0x0(%rax,%rax,1)
  440a00:	mov    (%r15),%r8d
  440a03:	add    $0x1,%rbx
  440a07:	test   %r8d,%r8d
  440a0a:	je     441049 <X509_get0_pubkey_bitstr@plt+0x2a679>
  440a10:	cmp    $0x7fffffff,%rbx
  440a17:	je     441049 <X509_get0_pubkey_bitstr@plt+0x2a679>
  440a1d:	mov    0xf8(%rsp),%r8d
  440a25:	mov    %r12,%r9
  440a28:	mov    %rbp,%rcx
  440a2b:	mov    $0x14,%edx
  440a30:	mov    %r14,%rsi
  440a33:	mov    $0x74,%edi
  440a38:	callq  415d70 <DSA_verify@plt>
  440a3d:	test   %eax,%eax
  440a3f:	jg     440a00 <X509_get0_pubkey_bitstr@plt+0x2a030>
  440a41:	lea    0x23a2f8(%rip),%rax        # 67ad40 <_edata+0x38>
  440a48:	lea    0x29396(%rip),%rsi        # 469de5 <_fini+0xc8e1>
  440a4f:	mov    0x40(%rsp),%rbx
  440a54:	mov    $0x1,%r15d
  440a5a:	mov    (%rax),%rdi
  440a5d:	xor    %eax,%eax
  440a5f:	callq  413c40 <BIO_printf@plt>
  440a64:	lea    0x23a2d5(%rip),%rax        # 67ad40 <_edata+0x38>
  440a6b:	mov    (%rax),%rdi
  440a6e:	callq  413f40 <ERR_print_errors@plt>
  440a73:	mov    0x238663(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  440a79:	mov    $0x1,%edi
  440a7e:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  440a83:	mov    0x23b0e7(%rip),%edi        # 67bb70 <_edata+0xe68>
  440a89:	lea    0x29648(%rip),%rax        # 46a0d8 <_fini+0xcbd4>
  440a90:	lea    0x28f4d(%rip),%rsi        # 4699e4 <_fini+0xc4e0>
  440a97:	mov    0x38(%rsp),%ecx
  440a9b:	movapd %xmm0,%xmm1
  440a9f:	mov    %r15,%rdx
  440aa2:	test   %edi,%edi
  440aa4:	movsd  %xmm1,0x30(%rsp)
  440aaa:	cmove  %rax,%rsi
  440aae:	lea    0x23a28b(%rip),%rax        # 67ad40 <_edata+0x38>
  440ab5:	shl    $0x4,%r13
  440ab9:	mov    (%rax),%rdi
  440abc:	mov    $0x1,%eax
  440ac1:	callq  413c40 <BIO_printf@plt>
  440ac6:	cvtsi2sd %r15,%xmm0
  440acb:	lea    0x23ab76(%rip),%rax        # 67b648 <_edata+0x940>
  440ad2:	movsd  0x30(%rsp),%xmm1
  440ad8:	divsd  %xmm0,%xmm1
  440adc:	movsd  %xmm1,(%rax,%r13,1)
  440ae2:	mov    0x20(%rsp),%r15d
  440ae7:	add    $0x1,%r15d
  440aeb:	cmp    $0x1,%rbx
  440aef:	je     440c66 <X509_get0_pubkey_bitstr@plt+0x2a296>
  440af5:	mov    %r15d,0x20(%rsp)
  440afa:	jmpq   4408fd <X509_get0_pubkey_bitstr@plt+0x29f2d>
  440aff:	mov    0x8(%rbp),%rdi
  440b03:	callq  416720 <EVP_get_digestbyname@plt>
  440b08:	test   %rax,%rax
  440b0b:	mov    %rax,0xa0(%rsp)
  440b13:	jne    43e933 <X509_get0_pubkey_bitstr@plt+0x27f63>
  440b19:	lea    0x23a220(%rip),%rax        # 67ad40 <_edata+0x38>
  440b20:	mov    0x8(%rbp),%rdx
  440b24:	lea    0x2961d(%rip),%rsi        # 46a148 <_fini+0xcc44>
  440b2b:	mov    0x20(%rsp),%r14
  440b30:	mov    $0x1,%ebx
  440b35:	mov    (%rax),%rdi
  440b38:	xor    %eax,%eax
  440b3a:	callq  413c40 <BIO_printf@plt>
  440b3f:	lea    0x140(%rsp),%rax
  440b47:	mov    %rax,0x48(%rsp)
  440b4c:	nopl   0x0(%rax)
  440b50:	lea    0x23a1e9(%rip),%rax        # 67ad40 <_edata+0x38>
  440b57:	mov    (%rax),%rdi
  440b5a:	callq  413f40 <ERR_print_errors@plt>
  440b5f:	mov    %r14,%rdi
  440b62:	callq  415020 <CRYPTO_free@plt>
  440b67:	mov    0x18(%rsp),%rdi
  440b6c:	callq  415020 <CRYPTO_free@plt>
  440b71:	mov    0x120(%rsp),%r14
  440b79:	mov    0x140(%rsp),%r13
  440b81:	jmpq   43e60a <X509_get0_pubkey_bitstr@plt+0x27c3a>
  440b86:	callq  4152b0 <BIO_s_file@plt>
  440b8b:	mov    %rax,%rdi
  440b8e:	callq  414a20 <BIO_new@plt>
  440b93:	mov    %rax,%rdi
  440b96:	lea    0x23a1a3(%rip),%rax        # 67ad40 <_edata+0x38>
  440b9d:	test   %rdi,%rdi
  440ba0:	mov    %rdi,(%rax)
  440ba3:	je     43e5cf <X509_get0_pubkey_bitstr@plt+0x27bff>
  440ba9:	mov    0x2353d0(%rip),%rax        # 675f80 <_fini+0x218a7c>
  440bb0:	mov    $0x10,%edx
  440bb5:	mov    $0x6a,%esi
  440bba:	mov    (%rax),%rcx
  440bbd:	callq  412af0 <BIO_ctrl@plt>
  440bc2:	lea    0x23a177(%rip),%rax        # 67ad40 <_edata+0x38>
  440bc9:	mov    (%rax),%rdi
  440bcc:	jmpq   43e5cf <X509_get0_pubkey_bitstr@plt+0x27bff>
  440bd1:	lea    0x110(%rsp),%rax
  440bd9:	xor    %ebx,%ebx
  440bdb:	mov    $0x1,%ebp
  440be0:	mov    %rax,%r12
  440be3:	callq  415030 <FIPS_mode@plt>
  440be8:	test   %eax,%eax
  440bea:	je     440bf0 <X509_get0_pubkey_bitstr@plt+0x2a220>
  440bec:	test   %ebx,%ebx
  440bee:	je     440bfd <X509_get0_pubkey_bitstr@plt+0x2a22d>
  440bf0:	cmp    $0x4,%ebp
  440bf3:	movl   $0x1,(%r12,%rbx,4)
  440bfb:	je     440c0f <X509_get0_pubkey_bitstr@plt+0x2a23f>
  440bfd:	add    $0x1,%rbx
  440c01:	add    $0x1,%ebp
  440c04:	callq  415030 <FIPS_mode@plt>
  440c09:	test   %eax,%eax
  440c0b:	je     440bf0 <X509_get0_pubkey_bitstr@plt+0x2a220>
  440c0d:	jmp    440bec <X509_get0_pubkey_bitstr@plt+0x2a21c>
  440c0f:	xor    %ebx,%ebx
  440c11:	mov    $0x1,%bpl
  440c14:	lea    0x100(%rsp),%r12
  440c1c:	callq  415030 <FIPS_mode@plt>
  440c21:	test   %eax,%eax
  440c23:	je     440c29 <X509_get0_pubkey_bitstr@plt+0x2a259>
  440c25:	test   %ebx,%ebx
  440c27:	je     440c3a <X509_get0_pubkey_bitstr@plt+0x2a26a>
  440c29:	cmp    $0x3,%ebp
  440c2c:	movl   $0x1,(%r12,%rbx,4)
  440c34:	je     43eb6e <X509_get0_pubkey_bitstr@plt+0x2819e>
  440c3a:	add    $0x1,%rbx
  440c3e:	add    $0x1,%ebp
  440c41:	callq  415030 <FIPS_mode@plt>
  440c46:	test   %eax,%eax
  440c48:	je     440c29 <X509_get0_pubkey_bitstr@plt+0x2a259>
  440c4a:	jmp    440c25 <X509_get0_pubkey_bitstr@plt+0x2a255>
  440c4c:	cmpb   $0x0,0x3(%rax)
  440c50:	jne    43eb1d <X509_get0_pubkey_bitstr@plt+0x2814d>
  440c56:	movl   $0x1,0x220(%rsp)
  440c61:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  440c66:	cmp    $0x3,%r15d
  440c6a:	je     440c84 <X509_get0_pubkey_bitstr@plt+0x2a2b4>
  440c6c:	movslq %r15d,%rax
  440c6f:	add    $0x1,%r15d
  440c73:	cmp    $0x3,%r15d
  440c77:	movl   $0x0,0x100(%rsp,%rax,4)
  440c82:	jne    440c6c <X509_get0_pubkey_bitstr@plt+0x2a29c>
  440c84:	mov    $0x4,%r15d
  440c8a:	jmpq   440af5 <X509_get0_pubkey_bitstr@plt+0x2a125>
  440c8f:	lea    0x29b0a(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  440c96:	lea    0x23a803(%rip),%rbx        # 67b4a0 <_edata+0x798>
  440c9d:	lea    0x2930(%rsp),%r12
  440ca5:	xor    %r13d,%r13d
  440ca8:	mov    %rax,0x20(%rsp)
  440cad:	mov    0x20(%rsp),%rax
  440cb2:	mov    0x239be7(%rip),%rdi        # 67a8a0 <_fini+0x21d39c>
  440cb9:	xor    %r15d,%r15d
  440cbc:	mov    %r13d,0x88(%rsp)
  440cc4:	movslq (%rax,%r13,4),%rbp
  440cc8:	mov    %ebp,%esi
  440cca:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  440ccf:	mov    0x238407(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  440cd5:	xor    %edi,%edi
  440cd7:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  440cdc:	movl   $0x1,(%rbx)
  440ce2:	jmp    440cf5 <X509_get0_pubkey_bitstr@plt+0x2a325>
  440ce4:	nopl   0x0(%rax)
  440ce8:	cmp    $0x7fffffff,%r15
  440cef:	je     442045 <X509_get0_pubkey_bitstr@plt+0x2b675>
  440cf5:	callq  4127a0 <EVP_md2@plt>
  440cfa:	xor    %r9d,%r9d
  440cfd:	xor    %ecx,%ecx
  440cff:	mov    %rbp,%rsi
  440d02:	mov    %rax,%r8
  440d05:	mov    %r12,%rdx
  440d08:	mov    %r14,%rdi
  440d0b:	callq  415f80 <EVP_Digest@plt>
  440d10:	mov    (%rbx),%esi
  440d12:	add    $0x1,%r15
  440d16:	test   %esi,%esi
  440d18:	jne    440ce8 <X509_get0_pubkey_bitstr@plt+0x2a318>
  440d1a:	mov    %r15d,%ebp
  440d1d:	mov    0x2383b9(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  440d23:	mov    $0x1,%edi
  440d28:	add    $0x1,%r13
  440d2c:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  440d31:	mov    0x88(%rsp),%esi
  440d38:	xor    %edi,%edi
  440d3a:	mov    %ebp,%edx
  440d3c:	movsd  %xmm0,0x28(%rsp)
  440d42:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  440d47:	cmp    $0x5,%r13
  440d4b:	jne    440cad <X509_get0_pubkey_bitstr@plt+0x2a2dd>
  440d51:	jmpq   43ee8d <X509_get0_pubkey_bitstr@plt+0x284bd>
  440d56:	mov    0x274(%rsp),%eax
  440d5d:	movl   $0x0,0xb8(%rsp)
  440d68:	test   %eax,%eax
  440d6a:	mov    %eax,0xb4(%rsp)
  440d71:	je     43edc7 <X509_get0_pubkey_bitstr@plt+0x283f7>
  440d77:	mov    %eax,0xb8(%rsp)
  440d7e:	movl   $0x0,0xb4(%rsp)
  440d89:	jmpq   43ed73 <X509_get0_pubkey_bitstr@plt+0x283a3>
  440d8e:	movl   $0x1,0x230(%rsp)
  440d99:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  440d9e:	lea    0x239f9b(%rip),%rax        # 67ad40 <_edata+0x38>
  440da5:	lea    0x2959c(%rip),%rsi        # 46a348 <_fini+0xce44>
  440dac:	mov    (%rax),%rdi
  440daf:	xor    %eax,%eax
  440db1:	callq  413c40 <BIO_printf@plt>
  440db6:	jmpq   43ebf2 <X509_get0_pubkey_bitstr@plt+0x28222>
  440dbb:	lea    0x2992e(%rip),%rax        # 46a6f0 <_fini+0xd1ec>
  440dc2:	lea    0x27785(%rip),%rsi        # 46854e <_fini+0xb04a>
  440dc9:	lea    0x28fba(%rip),%rdi        # 469d8a <_fini+0xc886>
  440dd0:	xor    %ebp,%ebp
  440dd2:	mov    (%rax,%rbx,4),%r15d
  440dd6:	mov    %r15d,%edx
  440dd9:	callq  43e230 <X509_get0_pubkey_bitstr@plt+0x27860>
  440dde:	mov    0x2382f8(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  440de4:	xor    %edi,%edi
  440de6:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  440deb:	lea    0x23a6ae(%rip),%r13        # 67b4a0 <_edata+0x798>
  440df2:	mov    %r15d,0x40(%rsp)
  440df7:	mov    0x48(%rsp),%r15
  440dfc:	mov    %r13,%rax
  440dff:	movl   $0x1,0x0(%r13)
  440e07:	mov    %rbp,%r13
  440e0a:	mov    %rax,%rbp
  440e0d:	jmp    440e2c <X509_get0_pubkey_bitstr@plt+0x2a45c>
  440e0f:	nop
  440e10:	mov    0x0(%rbp),%eax
  440e13:	add    $0x1,%r13
  440e17:	test   %eax,%eax
  440e19:	je     441c15 <X509_get0_pubkey_bitstr@plt+0x2b245>
  440e1f:	cmp    $0x7fffffff,%r13
  440e26:	je     441c15 <X509_get0_pubkey_bitstr@plt+0x2b245>
  440e2c:	mov    (%r15,%rbx,8),%r9
  440e30:	mov    0x20(%rsp),%r8
  440e35:	mov    %r12,%rcx
  440e38:	mov    $0x24,%edx
  440e3d:	mov    %r14,%rsi
  440e40:	mov    $0x72,%edi
  440e45:	callq  415ca0 <RSA_sign@plt>
  440e4a:	test   %eax,%eax
  440e4c:	jne    440e10 <X509_get0_pubkey_bitstr@plt+0x2a440>
  440e4e:	lea    0x239eeb(%rip),%rax        # 67ad40 <_edata+0x38>
  440e55:	lea    0x28f36(%rip),%rsi        # 469d92 <_fini+0xc88e>
  440e5c:	mov    0x40(%rsp),%r15d
  440e61:	mov    $0x1,%ebp
  440e66:	mov    (%rax),%rdi
  440e69:	xor    %eax,%eax
  440e6b:	callq  413c40 <BIO_printf@plt>
  440e70:	lea    0x239ec9(%rip),%rax        # 67ad40 <_edata+0x38>
  440e77:	mov    (%rax),%rdi
  440e7a:	callq  413f40 <ERR_print_errors@plt>
  440e7f:	mov    0x238257(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  440e85:	mov    $0x1,%edi
  440e8a:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  440e8f:	mov    0x23acdb(%rip),%eax        # 67bb70 <_edata+0xe68>
  440e95:	lea    0x28b15(%rip),%rsi        # 4699b1 <_fini+0xc4ad>
  440e9c:	mov    %rbp,%rdx
  440e9f:	movapd %xmm0,%xmm1
  440ea3:	mov    %r15d,%ecx
  440ea6:	test   %eax,%eax
  440ea8:	lea    0x291b9(%rip),%rax        # 46a068 <_fini+0xcb64>
  440eaf:	movsd  %xmm1,0x40(%rsp)
  440eb5:	cmove  %rax,%rsi
  440eb9:	lea    0x239e80(%rip),%rax        # 67ad40 <_edata+0x38>
  440ec0:	mov    (%rax),%rdi
  440ec3:	mov    $0x1,%eax
  440ec8:	callq  413c40 <BIO_printf@plt>
  440ecd:	cvtsi2sd %rbp,%xmm0
  440ed2:	mov    %rbx,%rax
  440ed5:	movsd  0x40(%rsp),%xmm1
  440edb:	lea    0x23a79e(%rip),%rdx        # 67b680 <_edata+0x978>
  440ee2:	shl    $0x4,%rax
  440ee6:	divsd  %xmm0,%xmm1
  440eea:	movsd  %xmm1,(%rdx,%rax,1)
  440eef:	jmpq   440715 <X509_get0_pubkey_bitstr@plt+0x29d45>
  440ef4:	lea    0x297e5(%rip),%rax        # 46a6e0 <_fini+0xd1dc>
  440efb:	lea    0x28c8d(%rip),%rsi        # 469b8f <_fini+0xc68b>
  440f02:	lea    0x1e9ba(%rip),%rdi        # 45f8c3 <_fini+0x23bf>
  440f09:	xor    %ebx,%ebx
  440f0b:	mov    (%rax,%r13,4),%r15d
  440f0f:	mov    %r15d,%edx
  440f12:	callq  43e230 <X509_get0_pubkey_bitstr@plt+0x27860>
  440f17:	mov    0x2381bf(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  440f1d:	xor    %edi,%edi
  440f1f:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  440f24:	lea    0x23a575(%rip),%r12        # 67b4a0 <_edata+0x798>
  440f2b:	mov    %r15d,0x38(%rsp)
  440f30:	mov    %rbx,%r15
  440f33:	movl   $0x1,(%r12)
  440f3b:	mov    %r12,%rbx
  440f3e:	mov    0x80(%rsp),%r12
  440f46:	jmp    440f6d <X509_get0_pubkey_bitstr@plt+0x2a59d>
  440f48:	nopl   0x0(%rax,%rax,1)
  440f50:	mov    (%rbx),%r10d
  440f53:	add    $0x1,%r15
  440f57:	test   %r10d,%r10d
  440f5a:	je     441c08 <X509_get0_pubkey_bitstr@plt+0x2b238>
  440f60:	cmp    $0x7fffffff,%r15
  440f67:	je     441c08 <X509_get0_pubkey_bitstr@plt+0x2b238>
  440f6d:	mov    0x120(%rsp,%r13,8),%r9
  440f75:	mov    %r12,%r8
  440f78:	mov    %rbp,%rcx
  440f7b:	mov    $0x14,%edx
  440f80:	mov    %r14,%rsi
  440f83:	mov    $0x74,%edi
  440f88:	callq  413260 <DSA_sign@plt>
  440f8d:	test   %eax,%eax
  440f8f:	jne    440f50 <X509_get0_pubkey_bitstr@plt+0x2a580>
  440f91:	lea    0x239da8(%rip),%rax        # 67ad40 <_edata+0x38>
  440f98:	lea    0x28e32(%rip),%rsi        # 469dd1 <_fini+0xc8cd>
  440f9f:	mov    0x38(%rsp),%r15d
  440fa4:	mov    $0x1,%ebx
  440fa9:	mov    (%rax),%rdi
  440fac:	xor    %eax,%eax
  440fae:	callq  413c40 <BIO_printf@plt>
  440fb3:	lea    0x239d86(%rip),%rax        # 67ad40 <_edata+0x38>
  440fba:	mov    (%rax),%rdi
  440fbd:	callq  413f40 <ERR_print_errors@plt>
  440fc2:	mov    0x238114(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  440fc8:	mov    $0x1,%edi
  440fcd:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  440fd2:	mov    0x23ab97(%rip),%r9d        # 67bb70 <_edata+0xe68>
  440fd9:	lea    0x290d8(%rip),%rax        # 46a0b8 <_fini+0xcbb4>
  440fe0:	lea    0x289ec(%rip),%rsi        # 4699d3 <_fini+0xc4cf>
  440fe7:	movapd %xmm0,%xmm1
  440feb:	mov    %rbx,%rdx
  440fee:	mov    %r15d,%ecx
  440ff1:	test   %r9d,%r9d
  440ff4:	movsd  %xmm1,0x38(%rsp)
  440ffa:	cmove  %rax,%rsi
  440ffe:	lea    0x239d3b(%rip),%rax        # 67ad40 <_edata+0x38>
  441005:	mov    (%rax),%rdi
  441008:	mov    $0x1,%eax
  44100d:	callq  413c40 <BIO_printf@plt>
  441012:	cvtsi2sd %rbx,%xmm0
  441017:	mov    %r13,%rax
  44101a:	movsd  0x38(%rsp),%xmm1
  441020:	lea    0x23a619(%rip),%rdx        # 67b640 <_edata+0x938>
  441027:	shl    $0x4,%rax
  44102b:	divsd  %xmm0,%xmm1
  44102f:	movsd  %xmm1,(%rdx,%rax,1)
  441034:	jmpq   44097b <X509_get0_pubkey_bitstr@plt+0x29fab>
  441039:	mov    %rbx,%r15
  44103c:	mov    0x88(%rsp),%rbx
  441044:	jmpq   440815 <X509_get0_pubkey_bitstr@plt+0x29e45>
  441049:	mov    %rbx,%r15
  44104c:	mov    0x40(%rsp),%rbx
  441051:	jmpq   440a73 <X509_get0_pubkey_bitstr@plt+0x2a0a3>
  441056:	mov    0x23ab18(%rip),%esi        # 67bb74 <_edata+0xe6c>
  44105c:	test   %esi,%esi
  44105e:	jne    4421fa <X509_get0_pubkey_bitstr@plt+0x2b82a>
  441064:	callq  416420 <RAND_status@plt>
  441069:	cmp    $0x1,%eax
  44106c:	je     441089 <X509_get0_pubkey_bitstr@plt+0x2a6b9>
  44106e:	lea    0x2974b(%rip),%rdi        # 46a7c0 <_fini+0xd2bc>
  441075:	mov    $0x40,%esi
  44107a:	callq  4133c0 <RAND_seed@plt>
  44107f:	movl   $0x1,0x23aaeb(%rip)        # 67bb74 <_edata+0xe6c>
  441089:	lea    0x23a4b8(%rip),%rax        # 67b548 <_edata+0x840>
  441090:	xor    %r15d,%r15d
  441093:	lea    0x2ab0(%rsp),%r13
  44109b:	mov    %rax,0x20(%rsp)
  4410a0:	jmp    4410bc <X509_get0_pubkey_bitstr@plt+0x2a6ec>
  4410a2:	nopw   0x0(%rax,%rax,1)
  4410a8:	add    $0x1,%r15
  4410ac:	addq   $0x10,0x20(%rsp)
  4410b2:	cmp    $0x10,%r15
  4410b6:	je     4411ee <X509_get0_pubkey_bitstr@plt+0x2a81e>
  4410bc:	mov    0x70(%rsp),%rax
  4410c1:	mov    %r15d,0x30(%rsp)
  4410c6:	mov    (%rax,%r15,4),%ecx
  4410ca:	test   %ecx,%ecx
  4410cc:	je     4410a8 <X509_get0_pubkey_bitstr@plt+0x2a6d8>
  4410ce:	lea    0x0(,%r15,4),%rax
  4410d6:	mov    %rax,0x38(%rsp)
  4410db:	lea    0x295be(%rip),%rax        # 46a6a0 <_fini+0xd19c>
  4410e2:	mov    (%rax,%r15,4),%edi
  4410e6:	callq  415fc0 <EC_KEY_new_by_curve_name@plt>
  4410eb:	mov    %rax,%rbp
  4410ee:	mov    0x50(%rsp),%rax
  4410f3:	test   %rbp,%rbp
  4410f6:	mov    %rbp,(%rax,%r15,8)
  4410fa:	je     441d9f <X509_get0_pubkey_bitstr@plt+0x2b3cf>
  441100:	xor    %esi,%esi
  441102:	mov    %rbp,%rdi
  441105:	callq  413b90 <EC_KEY_precompute_mult@plt>
  44110a:	mov    %rbp,%rdi
  44110d:	callq  413140 <EC_KEY_generate_key@plt>
  441112:	mov    0x80(%rsp),%r8
  44111a:	xor    %edi,%edi
  44111c:	mov    %rbp,%r9
  44111f:	mov    %r13,%rcx
  441122:	mov    $0x14,%edx
  441127:	mov    %r14,%rsi
  44112a:	callq  416860 <ECDSA_sign@plt>
  44112f:	test   %eax,%eax
  441131:	jne    4418fc <X509_get0_pubkey_bitstr@plt+0x2af2c>
  441137:	lea    0x239c02(%rip),%rax        # 67ad40 <_edata+0x38>
  44113e:	lea    0x2934b(%rip),%rsi        # 46a490 <_fini+0xcf8c>
  441145:	mov    $0x1,%ebx
  44114a:	mov    (%rax),%rdi
  44114d:	xor    %eax,%eax
  44114f:	callq  413c40 <BIO_printf@plt>
  441154:	lea    0x239be5(%rip),%rax        # 67ad40 <_edata+0x38>
  44115b:	mov    (%rax),%rdi
  44115e:	callq  413f40 <ERR_print_errors@plt>
  441163:	mov    0xf8(%rsp),%r8d
  44116b:	xor    %edi,%edi
  44116d:	mov    %rbp,%r9
  441170:	mov    %r13,%rcx
  441173:	mov    $0x14,%edx
  441178:	mov    %r14,%rsi
  44117b:	callq  414070 <ECDSA_verify@plt>
  441180:	cmp    $0x1,%eax
  441183:	je     441c22 <X509_get0_pubkey_bitstr@plt+0x2b252>
  441189:	lea    0x239bb0(%rip),%rax        # 67ad40 <_edata+0x38>
  441190:	lea    0x29331(%rip),%rsi        # 46a4c8 <_fini+0xcfc4>
  441197:	mov    (%rax),%rdi
  44119a:	xor    %eax,%eax
  44119c:	callq  413c40 <BIO_printf@plt>
  4411a1:	lea    0x239b98(%rip),%rax        # 67ad40 <_edata+0x38>
  4411a8:	mov    (%rax),%rdi
  4411ab:	callq  413f40 <ERR_print_errors@plt>
  4411b0:	mov    0x70(%rsp),%rax
  4411b5:	movl   $0x0,(%rax,%r15,4)
  4411bd:	cmp    $0x1,%rbx
  4411c1:	jne    4410a8 <X509_get0_pubkey_bitstr@plt+0x2a6d8>
  4411c7:	mov    0x30(%rsp),%eax
  4411cb:	add    $0x1,%eax
  4411ce:	cmp    $0x10,%eax
  4411d1:	je     4411ee <X509_get0_pubkey_bitstr@plt+0x2a81e>
  4411d3:	nopl   0x0(%rax,%rax,1)
  4411d8:	movslq %eax,%rdx
  4411db:	add    $0x1,%eax
  4411de:	cmp    $0x10,%eax
  4411e1:	movl   $0x0,0x1a0(%rsp,%rdx,4)
  4411ec:	jne    4411d8 <X509_get0_pubkey_bitstr@plt+0x2a808>
  4411ee:	mov    0x23a980(%rip),%eax        # 67bb74 <_edata+0xe6c>
  4411f4:	test   %eax,%eax
  4411f6:	jne    4421ef <X509_get0_pubkey_bitstr@plt+0x2b81f>
  4411fc:	callq  416420 <RAND_status@plt>
  441201:	cmp    $0x1,%eax
  441204:	je     441221 <X509_get0_pubkey_bitstr@plt+0x2a851>
  441206:	lea    0x295b3(%rip),%rdi        # 46a7c0 <_fini+0xd2bc>
  44120d:	mov    $0x40,%esi
  441212:	callq  4133c0 <RAND_seed@plt>
  441217:	movl   $0x1,0x23a953(%rip)        # 67bb74 <_edata+0xe6c>
  441221:	lea    0x2bb0(%rsp),%r13
  441229:	lea    0x2cb0(%rsp),%r12
  441231:	mov    %r14,0x38(%rsp)
  441236:	xor    %ebx,%ebx
  441238:	mov    %r13,%r14
  44123b:	nopl   0x0(%rax,%rax,1)
  441240:	mov    0x78(%rsp),%rax
  441245:	mov    %ebx,0x20(%rsp)
  441249:	mov    (%rax,%rbx,4),%eax
  44124c:	test   %eax,%eax
  44124e:	jne    441780 <X509_get0_pubkey_bitstr@plt+0x2adb0>
  441254:	add    $0x1,%rbx
  441258:	cmp    $0x10,%rbx
  44125c:	jne    441240 <X509_get0_pubkey_bitstr@plt+0x2a870>
  44125e:	mov    0x38(%rsp),%r14
  441263:	mov    0x23a90a(%rip),%r10d        # 67bb74 <_edata+0xe6c>
  44126a:	test   %r10d,%r10d
  44126d:	jne    4421e5 <X509_get0_pubkey_bitstr@plt+0x2b815>
  441273:	mov    0x23a8f6(%rip),%r9d        # 67bb70 <_edata+0xe68>
  44127a:	test   %r9d,%r9d
  44127d:	je     442067 <X509_get0_pubkey_bitstr@plt+0x2b697>
  441283:	mov    0xb0(%rsp),%r8d
  44128b:	test   %r8d,%r8d
  44128e:	je     44130f <X509_get0_pubkey_bitstr@plt+0x2a93f>
  441290:	mov    0x23a8da(%rip),%edi        # 67bb70 <_edata+0xe68>
  441296:	mov    0x234c1b(%rip),%rbx        # 675eb8 <_fini+0x2189b4>
  44129d:	test   %edi,%edi
  44129f:	mov    (%rbx),%rcx
  4412a2:	je     4422f9 <X509_get0_pubkey_bitstr@plt+0x2b929>
  4412a8:	lea    0x28b89(%rip),%rdi        # 469e38 <_fini+0xc934>
  4412af:	mov    $0x2,%edx
  4412b4:	mov    $0x1,%esi
  4412b9:	callq  416880 <fwrite@plt>
  4412be:	lea    0x294db(%rip),%r13        # 46a7a0 <_fini+0xd29c>
  4412c5:	lea    0x294e8(%rip),%r12        # 46a7b4 <_fini+0xd2b0>
  4412cc:	lea    0x28777(%rip),%rbp        # 469a4a <_fini+0xc546>
  4412d3:	mov    0x23a897(%rip),%esi        # 67bb70 <_edata+0xe68>
  4412d9:	mov    0x0(%r13),%ecx
  4412dd:	lea    0x28762(%rip),%rdx        # 469a46 <_fini+0xc542>
  4412e4:	mov    (%rbx),%rdi
  4412e7:	test   %esi,%esi
  4412e9:	mov    $0x1,%esi
  4412ee:	cmove  %rbp,%rdx
  4412f2:	xor    %eax,%eax
  4412f4:	add    $0x4,%r13
  4412f8:	callq  415e20 <__fprintf_chk@plt>
  4412fd:	cmp    %r12,%r13
  441300:	jne    4412d3 <X509_get0_pubkey_bitstr@plt+0x2a903>
  441302:	mov    (%rbx),%rsi
  441305:	mov    $0xa,%edi
  44130a:	callq  4150b0 <fputc@plt>
  44130f:	mov    0x98(%rsp),%r15
  441317:	lea    0x23a3a2(%rip),%rbp        # 67b6c0 <_edata+0x9b8>
  44131e:	lea    0x2872f(%rip),%r13        # 469a54 <_fini+0xc550>
  441325:	xor    %ebx,%ebx
  441327:	mov    %r14,0x20(%rsp)
  44132c:	nopl   0x0(%rax)
  441330:	mov    (%r15,%rbx,4),%edx
  441334:	test   %edx,%edx
  441336:	je     4413cd <X509_get0_pubkey_bitstr@plt+0x2a9fd>
  44133c:	mov    0x23a82e(%rip),%eax        # 67bb70 <_edata+0xe68>
  441342:	test   %eax,%eax
  441344:	je     441750 <X509_get0_pubkey_bitstr@plt+0x2ad80>
  44134a:	mov    0x234b67(%rip),%r12        # 675eb8 <_fini+0x2189b4>
  441351:	lea    0x239548(%rip),%rax        # 67a8a0 <_fini+0x21d39c>
  441358:	lea    0x28ae9(%rip),%rdx        # 469e48 <_fini+0xc944>
  44135f:	mov    %ebx,%ecx
  441361:	mov    $0x1,%esi
  441366:	mov    (%rax,%rbx,8),%r8
  44136a:	xor    %eax,%eax
  44136c:	mov    (%r12),%rdi
  441370:	callq  415e20 <__fprintf_chk@plt>
  441375:	xor    %r14d,%r14d
  441378:	movsd  0x0(%rbp,%r14,1),%xmm0
  44137f:	ucomisd 0x29481(%rip),%xmm0        # 46a808 <_fini+0xd304>
  441387:	jbe    441700 <X509_get0_pubkey_bitstr@plt+0x2ad30>
  44138d:	mov    0x23a7dd(%rip),%eax        # 67bb70 <_edata+0xe68>
  441393:	lea    0x286ba(%rip),%rdx        # 469a54 <_fini+0xc550>
  44139a:	test   %eax,%eax
  44139c:	je     441720 <X509_get0_pubkey_bitstr@plt+0x2ad50>
  4413a2:	mov    (%r12),%rdi
  4413a6:	mov    $0x1,%esi
  4413ab:	mov    $0x1,%eax
  4413b0:	callq  415e20 <__fprintf_chk@plt>
  4413b5:	add    $0x8,%r14
  4413b9:	cmp    $0x28,%r14
  4413bd:	jne    441378 <X509_get0_pubkey_bitstr@plt+0x2a9a8>
  4413bf:	mov    (%r12),%rsi
  4413c3:	mov    $0xa,%edi
  4413c8:	callq  4150b0 <fputc@plt>
  4413cd:	add    $0x1,%rbx
  4413d1:	add    $0x28,%rbp
  4413d5:	cmp    $0x1e,%rbx
  4413d9:	jne    441330 <X509_get0_pubkey_bitstr@plt+0x2a960>
  4413df:	mov    0x20(%rsp),%r14
  4413e4:	mov    0x28(%rsp),%r13
  4413e9:	xor    %bl,%bl
  4413eb:	xor    %ebp,%ebp
  4413ed:	mov    $0x1,%r12d
  4413f3:	mov    0x0(%r13,%rbx,1),%eax
  4413f8:	test   %eax,%eax
  4413fa:	je     441458 <X509_get0_pubkey_bitstr@plt+0x2aa88>
  4413fc:	test   %r12d,%r12d
  4413ff:	je     441865 <X509_get0_pubkey_bitstr@plt+0x2ae95>
  441405:	mov    0x23a765(%rip),%eax        # 67bb70 <_edata+0xe68>
  44140b:	test   %eax,%eax
  44140d:	je     44184b <X509_get0_pubkey_bitstr@plt+0x2ae7b>
  441413:	lea    0x23a266(%rip),%rax        # 67b680 <_edata+0x978>
  44141a:	lea    0x28a3f(%rip),%rdx        # 469e60 <_fini+0xc95c>
  441421:	mov    %ebp,%ecx
  441423:	mov    $0x1,%esi
  441428:	movsd  (%rax,%rbx,4),%xmm0
  44142d:	lea    0x23a254(%rip),%rax        # 67b688 <_edata+0x980>
  441434:	movsd  (%rax,%rbx,4),%xmm1
  441439:	lea    0x292b0(%rip),%rax        # 46a6f0 <_fini+0xd1ec>
  441440:	mov    (%rax,%rbx,1),%r8d
  441444:	mov    0x234a6d(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  44144b:	mov    (%rax),%rdi
  44144e:	mov    $0x2,%eax
  441453:	callq  415e20 <__fprintf_chk@plt>
  441458:	add    $0x4,%rbx
  44145c:	add    $0x1,%ebp
  44145f:	cmp    $0x10,%rbx
  441463:	jne    4413f3 <X509_get0_pubkey_bitstr@plt+0x2aa23>
  441465:	lea    0x100(%rsp),%r12
  44146d:	xor    %bl,%bl
  44146f:	xor    %ebp,%ebp
  441471:	mov    $0x1,%r13d
  441477:	mov    (%r12,%rbx,1),%r15d
  44147b:	test   %r15d,%r15d
  44147e:	je     4414e4 <X509_get0_pubkey_bitstr@plt+0x2ab14>
  441480:	test   %r13d,%r13d
  441483:	je     441a86 <X509_get0_pubkey_bitstr@plt+0x2b0b6>
  441489:	mov    0x23a6e0(%rip),%r11d        # 67bb70 <_edata+0xe68>
  441490:	mov    $0x1,%r13d
  441496:	test   %r11d,%r11d
  441499:	je     441a6c <X509_get0_pubkey_bitstr@plt+0x2b09c>
  44149f:	lea    0x23a19a(%rip),%rax        # 67b640 <_edata+0x938>
  4414a6:	lea    0x289c4(%rip),%rdx        # 469e71 <_fini+0xc96d>
  4414ad:	mov    %ebp,%ecx
  4414af:	mov    $0x1,%esi
  4414b4:	movsd  (%rax,%rbx,4),%xmm0
  4414b9:	lea    0x23a188(%rip),%rax        # 67b648 <_edata+0x940>
  4414c0:	movsd  (%rax,%rbx,4),%xmm1
  4414c5:	lea    0x29214(%rip),%rax        # 46a6e0 <_fini+0xd1dc>
  4414cc:	mov    (%rax,%rbx,1),%r8d
  4414d0:	mov    0x2349e1(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  4414d7:	mov    (%rax),%rdi
  4414da:	mov    $0x2,%eax
  4414df:	callq  415e20 <__fprintf_chk@plt>
  4414e4:	add    $0x4,%rbx
  4414e8:	add    $0x1,%ebp
  4414eb:	cmp    $0xc,%rbx
  4414ef:	jne    441477 <X509_get0_pubkey_bitstr@plt+0x2aaa7>
  4414f1:	xor    %bl,%bl
  4414f3:	xor    %ebp,%ebp
  4414f5:	mov    $0x1,%r12d
  4414fb:	mov    0x70(%rsp),%r13
  441500:	jmp    441574 <X509_get0_pubkey_bitstr@plt+0x2aba4>
  441502:	nopw   0x0(%rax,%rax,1)
  441508:	mov    0x23a661(%rip),%r8d        # 67bb70 <_edata+0xe68>
  44150f:	mov    $0x1,%r12d
  441515:	test   %r8d,%r8d
  441518:	je     4418dd <X509_get0_pubkey_bitstr@plt+0x2af0d>
  44151e:	lea    0x23a01b(%rip),%rax        # 67b540 <_edata+0x838>
  441525:	lea    0x28956(%rip),%rdx        # 469e82 <_fini+0xc97e>
  44152c:	mov    %ebp,%ecx
  44152e:	mov    $0x1,%esi
  441533:	movsd  (%rax,%rbx,4),%xmm0
  441538:	lea    0x23a009(%rip),%rax        # 67b548 <_edata+0x840>
  44153f:	movsd  (%rax,%rbx,4),%xmm1
  441544:	lea    0x29115(%rip),%rax        # 46a660 <_fini+0xd15c>
  44154b:	mov    (%rax,%rbx,1),%r8d
  44154f:	mov    0x234962(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  441556:	mov    (%rax),%rdi
  441559:	mov    $0x2,%eax
  44155e:	callq  415e20 <__fprintf_chk@plt>
  441563:	add    $0x4,%rbx
  441567:	add    $0x1,%ebp
  44156a:	cmp    $0x40,%rbx
  44156e:	je     44160a <X509_get0_pubkey_bitstr@plt+0x2ac3a>
  441574:	mov    0x0(%r13,%rbx,1),%r9d
  441579:	test   %r9d,%r9d
  44157c:	je     441563 <X509_get0_pubkey_bitstr@plt+0x2ab93>
  44157e:	test   %r12d,%r12d
  441581:	jne    441508 <X509_get0_pubkey_bitstr@plt+0x2ab38>
  441583:	mov    0x23a5e7(%rip),%edi        # 67bb70 <_edata+0xe68>
  441589:	test   %edi,%edi
  44158b:	jne    4418d5 <X509_get0_pubkey_bitstr@plt+0x2af05>
  441591:	lea    0x239fb0(%rip),%rax        # 67b548 <_edata+0x840>
  441598:	movsd  0x29260(%rip),%xmm3        # 46a800 <_fini+0xd2fc>
  4415a0:	movsd  0x29258(%rip),%xmm2        # 46a800 <_fini+0xd2fc>
  4415a8:	lea    0x29051(%rip),%rdx        # 46a600 <_fini+0xd0fc>
  4415af:	movsd  (%rax,%rbx,4),%xmm1
  4415b4:	lea    0x239f85(%rip),%rax        # 67b540 <_edata+0x838>
  4415bb:	mov    $0x1,%esi
  4415c0:	xor    %r12d,%r12d
  4415c3:	add    $0x1,%ebp
  4415c6:	movsd  (%rax,%rbx,4),%xmm0
  4415cb:	lea    0x2908e(%rip),%rax        # 46a660 <_fini+0xd15c>
  4415d2:	divsd  %xmm1,%xmm3
  4415d6:	mov    (%rax,%rbx,1),%ecx
  4415d9:	lea    0x234180(%rip),%rax        # 675760 <_fini+0x21825c>
  4415e0:	mov    (%rax,%rbx,2),%r8
  4415e4:	mov    0x2348cd(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  4415eb:	add    $0x4,%rbx
  4415ef:	mov    (%rax),%rdi
  4415f2:	mov    $0x4,%eax
  4415f7:	divsd  %xmm0,%xmm2
  4415fb:	callq  415e20 <__fprintf_chk@plt>
  441600:	cmp    $0x40,%rbx
  441604:	jne    441574 <X509_get0_pubkey_bitstr@plt+0x2aba4>
  44160a:	xor    %bl,%bl
  44160c:	mov    $0x1,%ebp
  441611:	mov    0x78(%rsp),%r12
  441616:	jmp    441680 <X509_get0_pubkey_bitstr@plt+0x2acb0>
  441618:	nopl   0x0(%rax,%rax,1)
  441620:	mov    0x23a54a(%rip),%edx        # 67bb70 <_edata+0xe68>
  441626:	mov    $0x1,%ebp
  44162b:	test   %edx,%edx
  44162d:	je     441a45 <X509_get0_pubkey_bitstr@plt+0x2b075>
  441633:	lea    0x239e86(%rip),%rax        # 67b4c0 <_edata+0x7b8>
  44163a:	movsd  0x291be(%rip),%xmm1        # 46a800 <_fini+0xd2fc>
  441642:	lea    0x2885c(%rip),%rdx        # 469ea5 <_fini+0xc9a1>
  441649:	mov    $0x1,%esi
  44164e:	movsd  (%rax,%rbx,8),%xmm0
  441653:	lea    0x29006(%rip),%rax        # 46a660 <_fini+0xd15c>
  44165a:	divsd  %xmm0,%xmm1
  44165e:	mov    (%rax,%rbx,4),%r8d
  441662:	mov    0x23484f(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  441669:	mov    (%rax),%rdi
  44166c:	mov    $0x2,%eax
  441671:	callq  415e20 <__fprintf_chk@plt>
  441676:	add    $0x1,%rbx
  44167a:	cmp    $0x10,%rbx
  44167e:	je     4416f5 <X509_get0_pubkey_bitstr@plt+0x2ad25>
  441680:	mov    (%r12,%rbx,4),%esi
  441684:	mov    %ebx,%ecx
  441686:	test   %esi,%esi
  441688:	je     441676 <X509_get0_pubkey_bitstr@plt+0x2aca6>
  44168a:	test   %ebp,%ebp
  44168c:	jne    441620 <X509_get0_pubkey_bitstr@plt+0x2ac50>
  44168e:	mov    0x23a4dc(%rip),%eax        # 67bb70 <_edata+0xe68>
  441694:	test   %eax,%eax
  441696:	jne    441a3e <X509_get0_pubkey_bitstr@plt+0x2b06e>
  44169c:	lea    0x239e1d(%rip),%rax        # 67b4c0 <_edata+0x7b8>
  4416a3:	movsd  0x29155(%rip),%xmm1        # 46a800 <_fini+0xd2fc>
  4416ab:	lea    0x28f7e(%rip),%rdx        # 46a630 <_fini+0xd12c>
  4416b2:	mov    $0x1,%esi
  4416b7:	xor    %ebp,%ebp
  4416b9:	movsd  (%rax,%rbx,8),%xmm0
  4416be:	lea    0x28f9b(%rip),%rax        # 46a660 <_fini+0xd15c>
  4416c5:	divsd  %xmm0,%xmm1
  4416c9:	mov    (%rax,%rbx,4),%ecx
  4416cc:	lea    0x23408d(%rip),%rax        # 675760 <_fini+0x21825c>
  4416d3:	mov    (%rax,%rbx,8),%r8
  4416d7:	mov    0x2347da(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  4416de:	add    $0x1,%rbx
  4416e2:	mov    (%rax),%rdi
  4416e5:	mov    $0x2,%eax
  4416ea:	callq  415e20 <__fprintf_chk@plt>
  4416ef:	cmp    $0x10,%rbx
  4416f3:	jne    441680 <X509_get0_pubkey_bitstr@plt+0x2acb0>
  4416f5:	xor    %ebx,%ebx
  4416f7:	jmpq   440b50 <X509_get0_pubkey_bitstr@plt+0x2a180>
  4416fc:	nopl   0x0(%rax)
  441700:	mov    0x23a46a(%rip),%eax        # 67bb70 <_edata+0xe68>
  441706:	lea    0x2834d(%rip),%rdx        # 469a5a <_fini+0xc556>
  44170d:	test   %eax,%eax
  44170f:	cmovne %r13,%rdx
  441713:	jmpq   4413a2 <X509_get0_pubkey_bitstr@plt+0x2a9d2>
  441718:	nopl   0x0(%rax,%rax,1)
  441720:	divsd  0x290e8(%rip),%xmm0        # 46a810 <_fini+0xd30c>
  441728:	mov    (%r12),%rdi
  44172c:	lea    0x28724(%rip),%rdx        # 469e57 <_fini+0xc953>
  441733:	mov    $0x1,%esi
  441738:	mov    $0x1,%eax
  44173d:	callq  415e20 <__fprintf_chk@plt>
  441742:	jmpq   4413b5 <X509_get0_pubkey_bitstr@plt+0x2a9e5>
  441747:	nopw   0x0(%rax,%rax,1)
  441750:	mov    0x234761(%rip),%r12        # 675eb8 <_fini+0x2189b4>
  441757:	lea    0x239142(%rip),%rax        # 67a8a0 <_fini+0x21d39c>
  44175e:	lea    0x286ec(%rip),%rdx        # 469e51 <_fini+0xc94d>
  441765:	mov    $0x1,%esi
  44176a:	mov    (%rax,%rbx,8),%rcx
  44176e:	xor    %eax,%eax
  441770:	mov    (%r12),%rdi
  441774:	callq  415e20 <__fprintf_chk@plt>
  441779:	jmpq   441375 <X509_get0_pubkey_bitstr@plt+0x2a9a5>
  44177e:	xchg   %ax,%ax
  441780:	lea    0x0(,%rbx,4),%rax
  441788:	mov    %rax,0x40(%rsp)
  44178d:	lea    0x28f0c(%rip),%rax        # 46a6a0 <_fini+0xd19c>
  441794:	mov    (%rax,%rbx,4),%r13d
  441798:	mov    %r13d,%edi
  44179b:	callq  415fc0 <EC_KEY_new_by_curve_name@plt>
  4417a0:	mov    %rax,%rbp
  4417a3:	mov    0x58(%rsp),%rax
  4417a8:	mov    %r13d,%edi
  4417ab:	mov    %rbp,(%rax,%rbx,8)
  4417af:	callq  415fc0 <EC_KEY_new_by_curve_name@plt>
  4417b4:	mov    %rax,%r15
  4417b7:	mov    0x60(%rsp),%rax
  4417bc:	test   %rbp,%rbp
  4417bf:	mov    %r15,(%rax,%rbx,8)
  4417c3:	je     441af8 <X509_get0_pubkey_bitstr@plt+0x2b128>
  4417c9:	test   %r15,%r15
  4417cc:	je     441af8 <X509_get0_pubkey_bitstr@plt+0x2b128>
  4417d2:	mov    %rbp,%rdi
  4417d5:	callq  413140 <EC_KEY_generate_key@plt>
  4417da:	test   %eax,%eax
  4417dc:	je     4417ee <X509_get0_pubkey_bitstr@plt+0x2ae1e>
  4417de:	mov    %r15,%rdi
  4417e1:	callq  413140 <EC_KEY_generate_key@plt>
  4417e6:	test   %eax,%eax
  4417e8:	jne    442526 <X509_get0_pubkey_bitstr@plt+0x2bb56>
  4417ee:	mov    0x38(%rsp),%r14
  4417f3:	lea    0x2860e(%rip),%rsi        # 469e08 <_fini+0xc904>
  4417fa:	lea    0x23953f(%rip),%rax        # 67ad40 <_edata+0x38>
  441801:	mov    (%rax),%rdi
  441804:	xor    %eax,%eax
  441806:	callq  413c40 <BIO_printf@plt>
  44180b:	lea    0x23952e(%rip),%rax        # 67ad40 <_edata+0x38>
  441812:	mov    (%rax),%rdi
  441815:	callq  413f40 <ERR_print_errors@plt>
  44181a:	mov    0x20(%rsp),%eax
  44181e:	add    $0x1,%eax
  441821:	cmp    $0x10,%eax
  441824:	je     441263 <X509_get0_pubkey_bitstr@plt+0x2a893>
  44182a:	nopw   0x0(%rax,%rax,1)
  441830:	movslq %eax,%rdx
  441833:	add    $0x1,%eax
  441836:	cmp    $0x10,%eax
  441839:	movl   $0x0,0x1e0(%rsp,%rdx,4)
  441844:	jne    441830 <X509_get0_pubkey_bitstr@plt+0x2ae60>
  441846:	jmpq   441263 <X509_get0_pubkey_bitstr@plt+0x2a893>
  44184b:	lea    0x2a351(%rip),%rdx        # 46bba3 <_fini+0xe69f>
  441852:	lea    0x28d07(%rip),%rsi        # 46a560 <_fini+0xd05c>
  441859:	mov    $0x1,%edi
  44185e:	xor    %eax,%eax
  441860:	callq  412780 <__printf_chk@plt>
  441865:	mov    0x23a305(%rip),%eax        # 67bb70 <_edata+0xe68>
  44186b:	test   %eax,%eax
  44186d:	jne    4421a9 <X509_get0_pubkey_bitstr@plt+0x2b7d9>
  441873:	lea    0x239e0e(%rip),%rax        # 67b688 <_edata+0x980>
  44187a:	movsd  0x28f7e(%rip),%xmm3        # 46a800 <_fini+0xd2fc>
  441882:	movsd  0x28f76(%rip),%xmm2        # 46a800 <_fini+0xd2fc>
  44188a:	lea    0x28cf7(%rip),%rdx        # 46a588 <_fini+0xd084>
  441891:	movsd  (%rax,%rbx,4),%xmm1
  441896:	lea    0x239de3(%rip),%rax        # 67b680 <_edata+0x978>
  44189d:	mov    $0x1,%esi
  4418a2:	xor    %r12d,%r12d
  4418a5:	movsd  (%rax,%rbx,4),%xmm0
  4418aa:	lea    0x28e3f(%rip),%rax        # 46a6f0 <_fini+0xd1ec>
  4418b1:	divsd  %xmm1,%xmm3
  4418b5:	mov    (%rax,%rbx,1),%ecx
  4418b8:	mov    0x2345f9(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  4418bf:	mov    (%rax),%rdi
  4418c2:	mov    $0x4,%eax
  4418c7:	divsd  %xmm0,%xmm2
  4418cb:	callq  415e20 <__fprintf_chk@plt>
  4418d0:	jmpq   441458 <X509_get0_pubkey_bitstr@plt+0x2aa88>
  4418d5:	xor    %r12d,%r12d
  4418d8:	jmpq   44151e <X509_get0_pubkey_bitstr@plt+0x2ab4e>
  4418dd:	lea    0x2a2bf(%rip),%rdx        # 46bba3 <_fini+0xe69f>
  4418e4:	lea    0x28ced(%rip),%rsi        # 46a5d8 <_fini+0xd0d4>
  4418eb:	mov    $0x1,%edi
  4418f0:	xor    %eax,%eax
  4418f2:	callq  412780 <__printf_chk@plt>
  4418f7:	jmpq   441583 <X509_get0_pubkey_bitstr@plt+0x2abb3>
  4418fc:	mov    0x38(%rsp),%rcx
  441901:	lea    0x28d58(%rip),%rax        # 46a660 <_fini+0xd15c>
  441908:	lea    0x2827e(%rip),%rsi        # 469b8d <_fini+0xc689>
  44190f:	lea    0x1dfad(%rip),%rdi        # 45f8c3 <_fini+0x23bf>
  441916:	xor    %ebx,%ebx
  441918:	mov    (%rax,%rcx,1),%eax
  44191b:	mov    %eax,%edx
  44191d:	mov    %eax,0x40(%rsp)
  441921:	callq  43e230 <X509_get0_pubkey_bitstr@plt+0x27860>
  441926:	mov    0x2377b0(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  44192c:	xor    %edi,%edi
  44192e:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  441933:	lea    0x239b66(%rip),%r12        # 67b4a0 <_edata+0x798>
  44193a:	mov    %r15,0x88(%rsp)
  441942:	mov    %rbx,%r15
  441945:	movl   $0x1,(%r12)
  44194d:	mov    %r12,%rbx
  441950:	mov    0x80(%rsp),%r12
  441958:	jmp    44197b <X509_get0_pubkey_bitstr@plt+0x2afab>
  44195a:	nopw   0x0(%rax,%rax,1)
  441960:	mov    (%rbx),%edx
  441962:	add    $0x1,%r15
  441966:	test   %edx,%edx
  441968:	je     441d6f <X509_get0_pubkey_bitstr@plt+0x2b39f>
  44196e:	cmp    $0x7fffffff,%r15
  441975:	je     441d6f <X509_get0_pubkey_bitstr@plt+0x2b39f>
  44197b:	xor    %edi,%edi
  44197d:	mov    %rbp,%r9
  441980:	mov    %r12,%r8
  441983:	mov    %r13,%rcx
  441986:	mov    $0x14,%edx
  44198b:	mov    %r14,%rsi
  44198e:	callq  416860 <ECDSA_sign@plt>
  441993:	test   %eax,%eax
  441995:	jne    441960 <X509_get0_pubkey_bitstr@plt+0x2af90>
  441997:	lea    0x2393a2(%rip),%rax        # 67ad40 <_edata+0x38>
  44199e:	lea    0x2842a(%rip),%rsi        # 469dcf <_fini+0xc8cb>
  4419a5:	mov    0x88(%rsp),%r15
  4419ad:	mov    $0x1,%ebx
  4419b2:	mov    (%rax),%rdi
  4419b5:	xor    %eax,%eax
  4419b7:	callq  413c40 <BIO_printf@plt>
  4419bc:	lea    0x23937d(%rip),%rax        # 67ad40 <_edata+0x38>
  4419c3:	mov    (%rax),%rdi
  4419c6:	callq  413f40 <ERR_print_errors@plt>
  4419cb:	mov    0x23770b(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  4419d1:	mov    $0x1,%edi
  4419d6:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  4419db:	mov    0x23a18f(%rip),%eax        # 67bb70 <_edata+0xe68>
  4419e1:	lea    0x2800d(%rip),%rsi        # 4699f5 <_fini+0xc4f1>
  4419e8:	mov    0x40(%rsp),%ecx
  4419ec:	movapd %xmm0,%xmm1
  4419f0:	mov    %rbx,%rdx
  4419f3:	test   %eax,%eax
  4419f5:	lea    0x286fc(%rip),%rax        # 46a0f8 <_fini+0xcbf4>
  4419fc:	movsd  %xmm1,0x88(%rsp)
  441a05:	cmove  %rax,%rsi
  441a09:	lea    0x239330(%rip),%rax        # 67ad40 <_edata+0x38>
  441a10:	mov    (%rax),%rdi
  441a13:	mov    $0x1,%eax
  441a18:	callq  413c40 <BIO_printf@plt>
  441a1d:	cvtsi2sd %rbx,%xmm0
  441a22:	mov    0x20(%rsp),%rax
  441a27:	movsd  0x88(%rsp),%xmm1
  441a30:	divsd  %xmm0,%xmm1
  441a34:	movsd  %xmm1,-0x8(%rax)
  441a39:	jmpq   441163 <X509_get0_pubkey_bitstr@plt+0x2a793>
  441a3e:	xor    %ebp,%ebp
  441a40:	jmpq   441633 <X509_get0_pubkey_bitstr@plt+0x2ac63>
  441a45:	lea    0x2a157(%rip),%rdx        # 46bba3 <_fini+0xe69f>
  441a4c:	lea    0x28440(%rip),%rsi        # 469e93 <_fini+0xc98f>
  441a53:	mov    $0x1,%edi
  441a58:	xor    %eax,%eax
  441a5a:	mov    %ebx,0x20(%rsp)
  441a5e:	callq  412780 <__printf_chk@plt>
  441a63:	mov    0x20(%rsp),%ecx
  441a67:	jmpq   44168e <X509_get0_pubkey_bitstr@plt+0x2acbe>
  441a6c:	lea    0x2a130(%rip),%rdx        # 46bba3 <_fini+0xe69f>
  441a73:	lea    0x28ae6(%rip),%rsi        # 46a560 <_fini+0xd05c>
  441a7a:	mov    $0x1,%edi
  441a7f:	xor    %eax,%eax
  441a81:	callq  412780 <__printf_chk@plt>
  441a86:	mov    0x23a0e3(%rip),%r10d        # 67bb70 <_edata+0xe68>
  441a8d:	test   %r10d,%r10d
  441a90:	jne    442730 <X509_get0_pubkey_bitstr@plt+0x2bd60>
  441a96:	lea    0x239bab(%rip),%rax        # 67b648 <_edata+0x940>
  441a9d:	movsd  0x28d5b(%rip),%xmm3        # 46a800 <_fini+0xd2fc>
  441aa5:	movsd  0x28d53(%rip),%xmm2        # 46a800 <_fini+0xd2fc>
  441aad:	lea    0x28afc(%rip),%rdx        # 46a5b0 <_fini+0xd0ac>
  441ab4:	movsd  (%rax,%rbx,4),%xmm1
  441ab9:	lea    0x239b80(%rip),%rax        # 67b640 <_edata+0x938>
  441ac0:	mov    $0x1,%esi
  441ac5:	xor    %r13d,%r13d
  441ac8:	movsd  (%rax,%rbx,4),%xmm0
  441acd:	lea    0x28c0c(%rip),%rax        # 46a6e0 <_fini+0xd1dc>
  441ad4:	divsd  %xmm1,%xmm3
  441ad8:	mov    (%rax,%rbx,1),%ecx
  441adb:	mov    0x2343d6(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  441ae2:	mov    (%rax),%rdi
  441ae5:	mov    $0x4,%eax
  441aea:	divsd  %xmm0,%xmm2
  441aee:	callq  415e20 <__fprintf_chk@plt>
  441af3:	jmpq   4414e4 <X509_get0_pubkey_bitstr@plt+0x2ab14>
  441af8:	mov    0x38(%rsp),%r14
  441afd:	lea    0x282f5(%rip),%rsi        # 469df9 <_fini+0xc8f5>
  441b04:	jmpq   4417fa <X509_get0_pubkey_bitstr@plt+0x2ae2a>
  441b09:	callq  4129b0 <EVP_EncryptInit_ex@plt>
  441b0e:	mov    %rbp,%rdi
  441b11:	xor    %esi,%esi
  441b13:	xor    %r15d,%r15d
  441b16:	callq  415930 <EVP_CIPHER_CTX_set_padding@plt>
  441b1b:	mov    0x2375bb(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  441b21:	xor    %edi,%edi
  441b23:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  441b28:	lea    0x239971(%rip),%rbx        # 67b4a0 <_edata+0x798>
  441b2f:	mov    %r12,0x28(%rsp)
  441b34:	mov    %rbp,%r12
  441b37:	movl   $0x1,(%rbx)
  441b3d:	mov    %rbx,%rbp
  441b40:	mov    0x80(%rsp),%rbx
  441b48:	jmp    441b59 <X509_get0_pubkey_bitstr@plt+0x2b189>
  441b4a:	nopw   0x0(%rax,%rax,1)
  441b50:	cmp    $0x7fffffff,%r15
  441b57:	je     441b78 <X509_get0_pubkey_bitstr@plt+0x2b1a8>
  441b59:	mov    %r13d,%r8d
  441b5c:	mov    %r14,%rcx
  441b5f:	mov    %rbx,%rdx
  441b62:	mov    %r14,%rsi
  441b65:	mov    %r12,%rdi
  441b68:	add    $0x1,%r15
  441b6c:	callq  415350 <EVP_EncryptUpdate@plt>
  441b71:	mov    0x0(%rbp),%eax
  441b74:	test   %eax,%eax
  441b76:	jne    441b50 <X509_get0_pubkey_bitstr@plt+0x2b180>
  441b78:	mov    0x80(%rsp),%rdx
  441b80:	mov    %r12,%rbp
  441b83:	mov    %r14,%rsi
  441b86:	mov    %rbp,%rdi
  441b89:	mov    0x28(%rsp),%r12
  441b8e:	callq  4135c0 <EVP_EncryptFinal_ex@plt>
  441b93:	jmpq   44056b <X509_get0_pubkey_bitstr@plt+0x29b9b>
  441b98:	lea    0x2391a1(%rip),%rax        # 67ad40 <_edata+0x38>
  441b9f:	lea    0x288b2(%rip),%rsi        # 46a458 <_fini+0xcf54>
  441ba6:	mov    (%rax),%rdi
  441ba9:	xor    %eax,%eax
  441bab:	callq  413c40 <BIO_printf@plt>
  441bb0:	lea    0x239189(%rip),%rax        # 67ad40 <_edata+0x38>
  441bb7:	mov    (%rax),%rdi
  441bba:	callq  413f40 <ERR_print_errors@plt>
  441bbf:	movl   $0x0,0x100(%rsp,%r13,4)
  441bcb:	jmpq   440ae2 <X509_get0_pubkey_bitstr@plt+0x2a112>
  441bd0:	lea    0x239169(%rip),%rax        # 67ad40 <_edata+0x38>
  441bd7:	lea    0x28812(%rip),%rsi        # 46a3f0 <_fini+0xceec>
  441bde:	mov    (%rax),%rdi
  441be1:	xor    %eax,%eax
  441be3:	callq  413c40 <BIO_printf@plt>
  441be8:	lea    0x239151(%rip),%rax        # 67ad40 <_edata+0x38>
  441bef:	mov    (%rax),%rdi
  441bf2:	callq  413f40 <ERR_print_errors@plt>
  441bf7:	mov    0x28(%rsp),%rax
  441bfc:	movl   $0x0,(%rax,%rbx,4)
  441c03:	jmpq   440888 <X509_get0_pubkey_bitstr@plt+0x29eb8>
  441c08:	mov    %r15,%rbx
  441c0b:	mov    0x38(%rsp),%r15d
  441c10:	jmpq   440fc2 <X509_get0_pubkey_bitstr@plt+0x2a5f2>
  441c15:	mov    0x40(%rsp),%r15d
  441c1a:	mov    %r13,%rbp
  441c1d:	jmpq   440e7f <X509_get0_pubkey_bitstr@plt+0x2a4af>
  441c22:	mov    0x38(%rsp),%rcx
  441c27:	lea    0x28a32(%rip),%rax        # 46a660 <_fini+0xd15c>
  441c2e:	lea    0x27f58(%rip),%rsi        # 469b8d <_fini+0xc689>
  441c35:	lea    0x1c5fd(%rip),%rdi        # 45e239 <_fini+0xd35>
  441c3c:	mov    (%rax,%rcx,1),%eax
  441c3f:	mov    %eax,%edx
  441c41:	mov    %eax,0x38(%rsp)
  441c45:	callq  43e230 <X509_get0_pubkey_bitstr@plt+0x27860>
  441c4a:	mov    0x23748c(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  441c50:	xor    %edi,%edi
  441c52:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  441c57:	lea    0x239842(%rip),%r12        # 67b4a0 <_edata+0x798>
  441c5e:	xor    %r10d,%r10d
  441c61:	mov    %rbx,0x40(%rsp)
  441c66:	mov    %r10,%rbx
  441c69:	movl   $0x1,(%r12)
  441c71:	jmp    441c95 <X509_get0_pubkey_bitstr@plt+0x2b2c5>
  441c73:	nopl   0x0(%rax,%rax,1)
  441c78:	mov    (%r12),%eax
  441c7c:	add    $0x1,%rbx
  441c80:	test   %eax,%eax
  441c82:	je     44205a <X509_get0_pubkey_bitstr@plt+0x2b68a>
  441c88:	cmp    $0x7fffffff,%rbx
  441c8f:	je     44205a <X509_get0_pubkey_bitstr@plt+0x2b68a>
  441c95:	mov    0xf8(%rsp),%r8d
  441c9d:	xor    %edi,%edi
  441c9f:	mov    %rbp,%r9
  441ca2:	mov    %r13,%rcx
  441ca5:	mov    $0x14,%edx
  441caa:	mov    %r14,%rsi
  441cad:	callq  414070 <ECDSA_verify@plt>
  441cb2:	cmp    $0x1,%eax
  441cb5:	je     441c78 <X509_get0_pubkey_bitstr@plt+0x2b2a8>
  441cb7:	lea    0x239082(%rip),%rax        # 67ad40 <_edata+0x38>
  441cbe:	lea    0x2811e(%rip),%rsi        # 469de3 <_fini+0xc8df>
  441cc5:	mov    0x40(%rsp),%rbx
  441cca:	mov    (%rax),%rdi
  441ccd:	xor    %eax,%eax
  441ccf:	callq  413c40 <BIO_printf@plt>
  441cd4:	lea    0x239065(%rip),%rax        # 67ad40 <_edata+0x38>
  441cdb:	mov    (%rax),%rdi
  441cde:	callq  413f40 <ERR_print_errors@plt>
  441ce3:	mov    $0x1,%r10d
  441ce9:	mov    0x2373ed(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  441cef:	mov    $0x1,%edi
  441cf4:	mov    %r10,0x88(%rsp)
  441cfc:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  441d01:	mov    0x239e69(%rip),%eax        # 67bb70 <_edata+0xe68>
  441d07:	lea    0x27cf8(%rip),%rsi        # 469a06 <_fini+0xc502>
  441d0e:	mov    0x88(%rsp),%r10
  441d16:	mov    0x38(%rsp),%ecx
  441d1a:	movapd %xmm0,%xmm1
  441d1e:	test   %eax,%eax
  441d20:	lea    0x283f9(%rip),%rax        # 46a120 <_fini+0xcc1c>
  441d27:	mov    %r10,%rdx
  441d2a:	movsd  %xmm1,0x40(%rsp)
  441d30:	mov    %r10,0x38(%rsp)
  441d35:	cmove  %rax,%rsi
  441d39:	lea    0x239000(%rip),%rax        # 67ad40 <_edata+0x38>
  441d40:	mov    (%rax),%rdi
  441d43:	mov    $0x1,%eax
  441d48:	callq  413c40 <BIO_printf@plt>
  441d4d:	mov    0x38(%rsp),%r10
  441d52:	movsd  0x40(%rsp),%xmm1
  441d58:	mov    0x20(%rsp),%rax
  441d5d:	cvtsi2sd %r10,%xmm0
  441d62:	divsd  %xmm0,%xmm1
  441d66:	movsd  %xmm1,(%rax)
  441d6a:	jmpq   4411bd <X509_get0_pubkey_bitstr@plt+0x2a7ed>
  441d6f:	mov    %r15,%rbx
  441d72:	mov    0x88(%rsp),%r15
  441d7a:	jmpq   4419cb <X509_get0_pubkey_bitstr@plt+0x2affb>
  441d7f:	lea    0x238fba(%rip),%rax        # 67ad40 <_edata+0x38>
  441d86:	lea    0x1db26(%rip),%rsi        # 45f8b3 <_fini+0x23af>
  441d8d:	xor    %r13d,%r13d
  441d90:	mov    (%rax),%rdi
  441d93:	xor    %eax,%eax
  441d95:	callq  413c40 <BIO_printf@plt>
  441d9a:	jmpq   43e5e6 <X509_get0_pubkey_bitstr@plt+0x27c16>
  441d9f:	lea    0x238f9a(%rip),%rax        # 67ad40 <_edata+0x38>
  441da6:	lea    0x28012(%rip),%rsi        # 469dbf <_fini+0xc8bb>
  441dad:	mov    (%rax),%rdi
  441db0:	xor    %eax,%eax
  441db2:	callq  413c40 <BIO_printf@plt>
  441db7:	lea    0x238f82(%rip),%rax        # 67ad40 <_edata+0x38>
  441dbe:	mov    (%rax),%rdi
  441dc1:	callq  413f40 <ERR_print_errors@plt>
  441dc6:	jmpq   4410a8 <X509_get0_pubkey_bitstr@plt+0x2a6d8>
  441dcb:	mov    %r13,%rbx
  441dce:	mov    %r12,%r13
  441dd1:	jmpq   43fca3 <X509_get0_pubkey_bitstr@plt+0x292d3>
  441dd6:	mov    $0x7fffffff,%r12d
  441ddc:	jmpq   43fd9e <X509_get0_pubkey_bitstr@plt+0x293ce>
  441de1:	mov    $0x7fffffff,%r12d
  441de7:	jmpq   43fe86 <X509_get0_pubkey_bitstr@plt+0x294b6>
  441dec:	mov    $0x7fffffff,%r12d
  441df2:	jmpq   43ff6c <X509_get0_pubkey_bitstr@plt+0x2959c>
  441df7:	mov    $0x7fffffff,%r12d
  441dfd:	jmpq   440054 <X509_get0_pubkey_bitstr@plt+0x29684>
  441e02:	mov    $0x7fffffff,%r12d
  441e08:	jmpq   44013c <X509_get0_pubkey_bitstr@plt+0x2976c>
  441e0d:	mov    $0x7fffffff,%r12d
  441e13:	jmpq   440224 <X509_get0_pubkey_bitstr@plt+0x29854>
  441e18:	lea    0x238f21(%rip),%rax        # 67ad40 <_edata+0x38>
  441e1f:	lea    0x1da8d(%rip),%rsi        # 45f8b3 <_fini+0x23af>
  441e26:	mov    $0x1,%ebx
  441e2b:	mov    (%rax),%rdi
  441e2e:	xor    %eax,%eax
  441e30:	callq  413c40 <BIO_printf@plt>
  441e35:	lea    0x238f04(%rip),%rax        # 67ad40 <_edata+0x38>
  441e3c:	mov    (%rax),%rdi
  441e3f:	callq  413f40 <ERR_print_errors@plt>
  441e44:	mov    %r14,%rdi
  441e47:	callq  415020 <CRYPTO_free@plt>
  441e4c:	lea    0x140(%rsp),%rax
  441e54:	mov    0x120(%rsp),%r14
  441e5c:	mov    0x140(%rsp),%r13
  441e64:	mov    %rax,0x48(%rsp)
  441e69:	jmpq   43e60a <X509_get0_pubkey_bitstr@plt+0x27c3a>
  441e6e:	mov    0x28(%rsp),%ebp
  441e72:	xor    %ebx,%ebx
  441e74:	lea    0x18d0(%rsp),%r12
  441e7c:	movslq %ebp,%rdi
  441e7f:	shl    $0x2,%rdi
  441e83:	callq  415320 <malloc@plt>
  441e88:	mov    0x2340f1(%rip),%rsi        # 675f80 <_fini+0x218a7c>
  441e8f:	mov    %r15,0x30(%rsp)
  441e94:	mov    %rax,%r15
  441e97:	mov    %r13d,0x38(%rsp)
  441e9c:	mov    %rax,0x40(%rsp)
  441ea1:	mov    %ebp,%r13d
  441ea4:	mov    %rsi,0x20(%rsp)
  441ea9:	mov    %rsi,%rbp
  441eac:	jmp    441ee9 <X509_get0_pubkey_bitstr@plt+0x2b519>
  441eae:	xchg   %ax,%ax
  441eb0:	mov    0x18d4(%rsp),%edi
  441eb7:	callq  4168a0 <close@plt>
  441ebc:	mov    0x18d0(%rsp),%eax
  441ec3:	lea    0x27e58(%rip),%rsi        # 469d22 <_fini+0xc81e>
  441eca:	mov    %ebx,%edx
  441ecc:	mov    $0x1,%edi
  441ed1:	mov    %eax,(%r15,%rbx,4)
  441ed5:	xor    %eax,%eax
  441ed7:	add    $0x1,%rbx
  441edb:	callq  412780 <__printf_chk@plt>
  441ee0:	cmp    %ebx,%r13d
  441ee3:	jle    44274d <X509_get0_pubkey_bitstr@plt+0x2bd7d>
  441ee9:	mov    %r12,%rdi
  441eec:	callq  4153f0 <pipe@plt>
  441ef1:	cmp    $0xffffffff,%eax
  441ef4:	je     442f30 <X509_get0_pubkey_bitstr@plt+0x2c560>
  441efa:	mov    0x233fb7(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  441f01:	mov    (%rax),%rdi
  441f04:	callq  414e60 <fflush@plt>
  441f09:	mov    0x0(%rbp),%rdi
  441f0d:	callq  414e60 <fflush@plt>
  441f12:	callq  412e60 <fork@plt>
  441f17:	test   %eax,%eax
  441f19:	jne    441eb0 <X509_get0_pubkey_bitstr@plt+0x2b4e0>
  441f1b:	mov    0x18d0(%rsp),%edi
  441f22:	mov    0x30(%rsp),%r15
  441f27:	mov    0x38(%rsp),%r13d
  441f2c:	callq  4168a0 <close@plt>
  441f31:	mov    $0x1,%edi
  441f36:	callq  4168a0 <close@plt>
  441f3b:	mov    0x18d4(%rsp),%edi
  441f42:	callq  415960 <dup@plt>
  441f47:	cmp    $0xffffffff,%eax
  441f4a:	je     442eac <X509_get0_pubkey_bitstr@plt+0x2c4dc>
  441f50:	mov    0x18d4(%rsp),%edi
  441f57:	callq  4168a0 <close@plt>
  441f5c:	mov    0x40(%rsp),%rdi
  441f61:	movl   $0x1,0x239c05(%rip)        # 67bb70 <_edata+0xe68>
  441f6b:	movl   $0x0,0x237167(%rip)        # 6790dc <_fini+0x21bbd8>
  441f75:	callq  414ef0 <free@plt>
  441f7a:	jmpq   43e979 <X509_get0_pubkey_bitstr@plt+0x27fa9>
  441f7f:	mov    $0x7fffffff,%r13d
  441f85:	jmpq   44030c <X509_get0_pubkey_bitstr@plt+0x2993c>
  441f8a:	mov    $0x7fffffff,%ebp
  441f8f:	jmpq   43f0f5 <X509_get0_pubkey_bitstr@plt+0x28725>
  441f94:	mov    $0x7fffffff,%ebp
  441f99:	jmpq   43ef2d <X509_get0_pubkey_bitstr@plt+0x2855d>
  441f9e:	mov    $0x7fffffff,%ebp
  441fa3:	jmpq   43f00c <X509_get0_pubkey_bitstr@plt+0x2863c>
  441fa8:	mov    $0x7fffffff,%ebp
  441fad:	jmpq   43f1c2 <X509_get0_pubkey_bitstr@plt+0x287f2>
  441fb2:	mov    $0x7fffffff,%ebp
  441fb7:	jmpq   43f28a <X509_get0_pubkey_bitstr@plt+0x288ba>
  441fbc:	mov    $0x7fffffff,%ebp
  441fc1:	jmpq   43f350 <X509_get0_pubkey_bitstr@plt+0x28980>
  441fc6:	mov    $0x7fffffff,%ebp
  441fcb:	jmpq   43f425 <X509_get0_pubkey_bitstr@plt+0x28a55>
  441fd0:	mov    $0x7fffffff,%ebp
  441fd5:	jmpq   43f4eb <X509_get0_pubkey_bitstr@plt+0x28b1b>
  441fda:	mov    $0x7fffffff,%r12d
  441fe0:	jmpq   43f5d4 <X509_get0_pubkey_bitstr@plt+0x28c04>
  441fe5:	mov    %rbp,%rax
  441fe8:	mov    $0x7fffffff,%r12d
  441fee:	mov    %rbx,%rbp
  441ff1:	mov    %rax,%rbx
  441ff4:	jmpq   43f6eb <X509_get0_pubkey_bitstr@plt+0x28d1b>
  441ff9:	mov    $0x7fffffff,%r12d
  441fff:	jmpq   43f7de <X509_get0_pubkey_bitstr@plt+0x28e0e>
  442004:	mov    $0x7fffffff,%r12d
  44200a:	jmpq   43f8c6 <X509_get0_pubkey_bitstr@plt+0x28ef6>
  44200f:	mov    $0x7fffffff,%r12d
  442015:	jmpq   43f9ac <X509_get0_pubkey_bitstr@plt+0x28fdc>
  44201a:	mov    %rbp,%rax
  44201d:	mov    $0x7fffffff,%r12d
  442023:	mov    %rbx,%rbp
  442026:	mov    %rax,%rbx
  442029:	jmpq   43faa0 <X509_get0_pubkey_bitstr@plt+0x290d0>
  44202e:	mov    %r13,%rax
  442031:	mov    $0x7fffffff,%r12d
  442037:	mov    %rbx,%r13
  44203a:	mov    %rbp,%rbx
  44203d:	mov    %rax,%rbp
  442040:	jmpq   43fba3 <X509_get0_pubkey_bitstr@plt+0x291d3>
  442045:	mov    $0x7fffffff,%ebp
  44204a:	jmpq   440d1d <X509_get0_pubkey_bitstr@plt+0x2a34d>
  44204f:	mov    $0x7fffffff,%r12d
  442055:	jmpq   4403f6 <X509_get0_pubkey_bitstr@plt+0x29a26>
  44205a:	mov    %rbx,%r10
  44205d:	mov    0x40(%rsp),%rbx
  442062:	jmpq   441ce9 <X509_get0_pubkey_bitstr@plt+0x2b319>
  442067:	xor    %edi,%edi
  442069:	callq  415d80 <SSLeay_version@plt>
  44206e:	mov    0x233e43(%rip),%rbx        # 675eb8 <_fini+0x2189b4>
  442075:	lea    0x1e73d(%rip),%rdx        # 4607b9 <_fini+0x32b5>
  44207c:	mov    %rax,%rcx
  44207f:	mov    $0x1,%esi
  442084:	xor    %eax,%eax
  442086:	mov    (%rbx),%rdi
  442089:	callq  415e20 <__fprintf_chk@plt>
  44208e:	mov    $0x3,%edi
  442093:	callq  415d80 <SSLeay_version@plt>
  442098:	mov    (%rbx),%rdi
  44209b:	lea    0x1e717(%rip),%rdx        # 4607b9 <_fini+0x32b5>
  4420a2:	mov    %rax,%rcx
  4420a5:	mov    $0x1,%esi
  4420aa:	xor    %eax,%eax
  4420ac:	callq  415e20 <__fprintf_chk@plt>
  4420b1:	lea    0x27d6e(%rip),%rsi        # 469e26 <_fini+0xc922>
  4420b8:	mov    $0x1,%edi
  4420bd:	xor    %eax,%eax
  4420bf:	callq  412780 <__printf_chk@plt>
  4420c4:	callq  4159b0 <BN_options@plt>
  4420c9:	lea    0x27d5f(%rip),%rsi        # 469e2f <_fini+0xc92b>
  4420d0:	mov    %rax,%rdx
  4420d3:	mov    $0x1,%edi
  4420d8:	xor    %eax,%eax
  4420da:	callq  412780 <__printf_chk@plt>
  4420df:	callq  4163e0 <MD2_options@plt>
  4420e4:	lea    0x27d44(%rip),%rsi        # 469e2f <_fini+0xc92b>
  4420eb:	mov    %rax,%rdx
  4420ee:	mov    $0x1,%edi
  4420f3:	xor    %eax,%eax
  4420f5:	callq  412780 <__printf_chk@plt>
  4420fa:	callq  4127d0 <RC4_options@plt>
  4420ff:	lea    0x27d29(%rip),%rsi        # 469e2f <_fini+0xc92b>
  442106:	mov    %rax,%rdx
  442109:	mov    $0x1,%edi
  44210e:	xor    %eax,%eax
  442110:	callq  412780 <__printf_chk@plt>
  442115:	callq  4157c0 <DES_options@plt>
  44211a:	lea    0x27d0e(%rip),%rsi        # 469e2f <_fini+0xc92b>
  442121:	mov    %rax,%rdx
  442124:	mov    $0x1,%edi
  442129:	xor    %eax,%eax
  44212b:	callq  412780 <__printf_chk@plt>
  442130:	callq  414d60 <AES_options@plt>
  442135:	lea    0x27cf3(%rip),%rsi        # 469e2f <_fini+0xc92b>
  44213c:	mov    %rax,%rdx
  44213f:	mov    $0x1,%edi
  442144:	xor    %eax,%eax
  442146:	callq  412780 <__printf_chk@plt>
  44214b:	callq  415be0 <idea_options@plt>
  442150:	lea    0x27cd8(%rip),%rsi        # 469e2f <_fini+0xc92b>
  442157:	mov    %rax,%rdx
  44215a:	mov    $0x1,%edi
  44215f:	xor    %eax,%eax
  442161:	callq  412780 <__printf_chk@plt>
  442166:	callq  412c90 <BF_options@plt>
  44216b:	lea    0x27cbd(%rip),%rsi        # 469e2f <_fini+0xc92b>
  442172:	mov    %rax,%rdx
  442175:	mov    $0x1,%edi
  44217a:	xor    %eax,%eax
  44217c:	callq  412780 <__printf_chk@plt>
  442181:	mov    $0x2,%edi
  442186:	callq  415d80 <SSLeay_version@plt>
  44218b:	mov    (%rbx),%rdi
  44218e:	lea    0x27c9e(%rip),%rdx        # 469e33 <_fini+0xc92f>
  442195:	mov    %rax,%rcx
  442198:	mov    $0x1,%esi
  44219d:	xor    %eax,%eax
  44219f:	callq  415e20 <__fprintf_chk@plt>
  4421a4:	jmpq   441283 <X509_get0_pubkey_bitstr@plt+0x2a8b3>
  4421a9:	xor    %r12d,%r12d
  4421ac:	jmpq   441413 <X509_get0_pubkey_bitstr@plt+0x2aa43>
  4421b1:	mov    0x20(%rsp),%r14
  4421b6:	lea    0x278bc(%rip),%rsi        # 469a79 <_fini+0xc575>
  4421bd:	lea    0x238b7c(%rip),%rax        # 67ad40 <_edata+0x38>
  4421c4:	mov    $0x1,%ebx
  4421c9:	mov    (%rax),%rdi
  4421cc:	xor    %eax,%eax
  4421ce:	callq  413c40 <BIO_printf@plt>
  4421d3:	lea    0x140(%rsp),%rax
  4421db:	mov    %rax,0x48(%rsp)
  4421e0:	jmpq   440b50 <X509_get0_pubkey_bitstr@plt+0x2a180>
  4421e5:	callq  415830 <RAND_cleanup@plt>
  4421ea:	jmpq   441273 <X509_get0_pubkey_bitstr@plt+0x2a8a3>
  4421ef:	nop
  4421f0:	callq  415830 <RAND_cleanup@plt>
  4421f5:	jmpq   4411fc <X509_get0_pubkey_bitstr@plt+0x2a82c>
  4421fa:	nopw   0x0(%rax,%rax,1)
  442200:	callq  415830 <RAND_cleanup@plt>
  442205:	jmpq   441064 <X509_get0_pubkey_bitstr@plt+0x2a694>
  44220a:	mov    0x28(%rsp),%rbp
  44220f:	mov    $0x7fffffff,%ebx
  442214:	jmpq   440625 <X509_get0_pubkey_bitstr@plt+0x29c55>
  442219:	mov    0x233cd0(%rip),%rsi        # 675ef0 <_fini+0x2189ec>
  442220:	mov    0x30(%rsp),%rdi
  442225:	xor    %r13d,%r13d
  442228:	callq  414530 <CRYPTO_gcm128_new@plt>
  44222d:	lea    0x27b49(%rip),%rsi        # 469d7d <_fini+0xc879>
  442234:	mov    %rax,%rdi
  442237:	mov    $0xc,%edx
  44223c:	mov    %rax,%r12
  44223f:	callq  415300 <CRYPTO_gcm128_setiv@plt>
  442244:	lea    0x28555(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  44224b:	lea    0x23924e(%rip),%rbx        # 67b4a0 <_edata+0x798>
  442252:	mov    %rax,0x20(%rsp)
  442257:	mov    0x20(%rsp),%rax
  44225c:	mov    0x238725(%rip),%rdi        # 67a988 <_fini+0x21d484>
  442263:	xor    %r15d,%r15d
  442266:	mov    %r13d,0x30(%rsp)
  44226b:	movslq (%rax,%r13,4),%rbp
  44226f:	mov    %ebp,%esi
  442271:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  442276:	mov    0x236e60(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  44227c:	xor    %edi,%edi
  44227e:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  442283:	movl   $0x1,(%rbx)
  442289:	jmp    44229d <X509_get0_pubkey_bitstr@plt+0x2b8cd>
  44228b:	nopl   0x0(%rax,%rax,1)
  442290:	cmp    $0x7fffffff,%r15
  442297:	je     442738 <X509_get0_pubkey_bitstr@plt+0x2bd68>
  44229d:	mov    %rbp,%rdx
  4422a0:	mov    %r14,%rsi
  4422a3:	mov    %r12,%rdi
  4422a6:	callq  416220 <CRYPTO_gcm128_aad@plt>
  4422ab:	mov    (%rbx),%eax
  4422ad:	add    $0x1,%r15
  4422b1:	test   %eax,%eax
  4422b3:	jne    442290 <X509_get0_pubkey_bitstr@plt+0x2b8c0>
  4422b5:	mov    %r15d,%ebp
  4422b8:	mov    0x236e1e(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  4422be:	mov    $0x1,%edi
  4422c3:	add    $0x1,%r13
  4422c7:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  4422cc:	mov    0x30(%rsp),%esi
  4422d0:	mov    %ebp,%edx
  4422d2:	mov    $0x1d,%edi
  4422d7:	movsd  %xmm0,0x28(%rsp)
  4422dd:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  4422e2:	cmp    $0x5,%r13
  4422e6:	jne    442257 <X509_get0_pubkey_bitstr@plt+0x2b887>
  4422ec:	mov    %r12,%rdi
  4422ef:	callq  413ad0 <CRYPTO_gcm128_release@plt>
  4422f4:	jmpq   43fcee <X509_get0_pubkey_bitstr@plt+0x2931e>
  4422f9:	lea    0x28220(%rip),%rdi        # 46a520 <_fini+0xd01c>
  442300:	mov    $0x3a,%edx
  442305:	mov    $0x1,%esi
  44230a:	callq  416880 <fwrite@plt>
  44230f:	mov    (%rbx),%rcx
  442312:	lea    0x27b22(%rip),%rdi        # 469e3b <_fini+0xc937>
  442319:	mov    $0xc,%edx
  44231e:	mov    $0x1,%esi
  442323:	callq  416880 <fwrite@plt>
  442328:	jmpq   4412be <X509_get0_pubkey_bitstr@plt+0x2a8ee>
  44232d:	lea    0xef0(%rsp),%rbp
  442335:	lea    0x2960(%rsp),%r13
  44233d:	mov    %rbp,%rdi
  442340:	callq  414cf0 <HMAC_CTX_init@plt>
  442345:	mov    $0x8,%esi
  44234a:	mov    %rbp,%rdi
  44234d:	callq  413130 <HMAC_CTX_set_flags@plt>
  442352:	callq  412f50 <EVP_md5@plt>
  442357:	lea    0x27a0e(%rip),%rsi        # 469d6c <_fini+0xc868>
  44235e:	xor    %r8d,%r8d
  442361:	mov    %rax,%rcx
  442364:	mov    $0x10,%edx
  442369:	mov    %rbp,%rdi
  44236c:	callq  414d50 <HMAC_Init_ex@plt>
  442371:	lea    0x28428(%rip),%rax        # 46a7a0 <_fini+0xd29c>
  442378:	lea    0x239121(%rip),%rbx        # 67b4a0 <_edata+0x798>
  44237f:	movq   $0x0,0x88(%rsp)
  44238b:	mov    %rax,0x20(%rsp)
  442390:	mov    0x88(%rsp),%rax
  442398:	mov    0x20(%rsp),%rsi
  44239d:	xor    %r15d,%r15d
  4423a0:	mov    0x238519(%rip),%rdi        # 67a8c0 <_fini+0x21d3bc>
  4423a7:	movslq (%rsi,%rax,4),%r12
  4423ab:	mov    %eax,0xa8(%rsp)
  4423b2:	mov    %r12d,%esi
  4423b5:	callq  43e100 <X509_get0_pubkey_bitstr@plt+0x27730>
  4423ba:	mov    0x236d1c(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  4423c0:	xor    %edi,%edi
  4423c2:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  4423c7:	movl   $0x1,(%rbx)
  4423cd:	jmp    4423dd <X509_get0_pubkey_bitstr@plt+0x2ba0d>
  4423cf:	nop
  4423d0:	cmp    $0x7fffffff,%r15
  4423d7:	je     442742 <X509_get0_pubkey_bitstr@plt+0x2bd72>
  4423dd:	xor    %r8d,%r8d
  4423e0:	xor    %ecx,%ecx
  4423e2:	xor    %edx,%edx
  4423e4:	xor    %esi,%esi
  4423e6:	mov    %rbp,%rdi
  4423e9:	add    $0x1,%r15
  4423ed:	callq  414d50 <HMAC_Init_ex@plt>
  4423f2:	mov    %r12,%rdx
  4423f5:	mov    %r14,%rsi
  4423f8:	mov    %rbp,%rdi
  4423fb:	callq  416620 <HMAC_Update@plt>
  442400:	xor    %edx,%edx
  442402:	mov    %r13,%rsi
  442405:	mov    %rbp,%rdi
  442408:	callq  413280 <HMAC_Final@plt>
  44240d:	mov    (%rbx),%eax
  44240f:	test   %eax,%eax
  442411:	jne    4423d0 <X509_get0_pubkey_bitstr@plt+0x2ba00>
  442413:	mov    %r15d,%r12d
  442416:	mov    0x236cc0(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  44241c:	mov    $0x1,%edi
  442421:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  442426:	mov    0xa8(%rsp),%esi
  44242d:	mov    %r12d,%edx
  442430:	mov    $0x4,%edi
  442435:	movsd  %xmm0,0x28(%rsp)
  44243b:	callq  43e040 <X509_get0_pubkey_bitstr@plt+0x27670>
  442440:	addq   $0x1,0x88(%rsp)
  442449:	cmpq   $0x5,0x88(%rsp)
  442452:	jne    442390 <X509_get0_pubkey_bitstr@plt+0x2b9c0>
  442458:	mov    %rbp,%rdi
  44245b:	callq  412a60 <HMAC_CTX_cleanup@plt>
  442460:	jmpq   43f052 <X509_get0_pubkey_bitstr@plt+0x28682>
  442465:	lea    0x620(%rsp),%r13
  44246d:	lea    0x2830c(%rip),%rdx        # 46a780 <_fini+0xd27c>
  442474:	mov    $0x10,%esi
  442479:	mov    %r13,%rdi
  44247c:	callq  416960 <private_CAST_set_key@plt>
  442481:	jmpq   43ee4b <X509_get0_pubkey_bitstr@plt+0x2847b>
  442486:	lea    0x18d0(%rsp),%r12
  44248e:	lea    0x282eb(%rip),%rdx        # 46a780 <_fini+0xd27c>
  442495:	mov    $0x10,%esi
  44249a:	mov    %r12,%rdi
  44249d:	callq  414130 <private_BF_set_key@plt>
  4424a2:	jmpq   43ee35 <X509_get0_pubkey_bitstr@plt+0x28465>
  4424a7:	lea    0xa90(%rsp),%r13
  4424af:	lea    0x282ca(%rip),%rdx        # 46a780 <_fini+0xd27c>
  4424b6:	mov    $0x80,%ecx
  4424bb:	mov    $0x10,%esi
  4424c0:	mov    %r13,%rdi
  4424c3:	callq  413040 <private_RC2_set_key@plt>
  4424c8:	jmpq   43ee1f <X509_get0_pubkey_bitstr@plt+0x2844f>
  4424cd:	lea    0x1010(%rsp),%r12
  4424d5:	lea    0x282a4(%rip),%rdx        # 46a780 <_fini+0xd27c>
  4424dc:	mov    $0x10,%esi
  4424e1:	mov    %r12,%rdi
  4424e4:	callq  414510 <private_RC4_set_key@plt>
  4424e9:	jmpq   43ee09 <X509_get0_pubkey_bitstr@plt+0x28439>
  4424ee:	lea    0x2a0(%rsp),%r13
  4424f6:	lea    0x28283(%rip),%rdi        # 46a780 <_fini+0xd27c>
  4424fd:	mov    %r13,%rsi
  442500:	callq  4133d0 <private_SEED_set_key@plt>
  442505:	jmpq   43edf3 <X509_get0_pubkey_bitstr@plt+0x28423>
  44250a:	lea    0x6b0(%rsp),%r13
  442512:	lea    0x28267(%rip),%rdi        # 46a780 <_fini+0xd27c>
  442519:	mov    %r13,%rsi
  44251c:	callq  412990 <private_idea_set_encrypt_key@plt>
  442521:	jmpq   43eddd <X509_get0_pubkey_bitstr@plt+0x2840d>
  442526:	mov    %rbp,%rdi
  442529:	callq  4152f0 <EC_KEY_get0_group@plt>
  44252e:	mov    %rax,%rdi
  442531:	callq  4143e0 <EC_GROUP_get_degree@plt>
  442536:	lea    -0x445d(%rip),%rcx        # 43e0e0 <X509_get0_pubkey_bitstr@plt+0x27710>
  44253d:	cmp    $0xc0,%eax
  442542:	movq   $0x14,0x30(%rsp)
  44254b:	mov    %rcx,0x80(%rsp)
  442553:	jle    44256e <X509_get0_pubkey_bitstr@plt+0x2bb9e>
  442555:	add    $0x7,%eax
  442558:	movq   $0x0,0x80(%rsp)
  442564:	sar    $0x3,%eax
  442567:	cltq   
  442569:	mov    %rax,0x30(%rsp)
  44256e:	mov    %r15,%rdi
  442571:	callq  4138b0 <EC_KEY_get0_public_key@plt>
  442576:	mov    0x80(%rsp),%r8
  44257e:	mov    0x30(%rsp),%rsi
  442583:	mov    %rbp,%rcx
  442586:	mov    %rax,%rdx
  442589:	mov    %r14,%rdi
  44258c:	callq  413210 <ECDH_compute_key@plt>
  442591:	mov    %rbp,%rdi
  442594:	mov    %eax,%r13d
  442597:	callq  4138b0 <EC_KEY_get0_public_key@plt>
  44259c:	mov    0x80(%rsp),%r8
  4425a4:	mov    0x30(%rsp),%rsi
  4425a9:	mov    %rax,%rdx
  4425ac:	mov    %r15,%rcx
  4425af:	mov    %r12,%rdi
  4425b2:	callq  413210 <ECDH_compute_key@plt>
  4425b7:	cmp    %eax,%r13d
  4425ba:	sete   %dl
  4425bd:	test   %r13d,%r13d
  4425c0:	jle    4425ed <X509_get0_pubkey_bitstr@plt+0x2bc1d>
  4425c2:	test   %dl,%dl
  4425c4:	je     4425ed <X509_get0_pubkey_bitstr@plt+0x2bc1d>
  4425c6:	xor    %eax,%eax
  4425c8:	nopl   0x0(%rax,%rax,1)
  4425d0:	movzbl (%r12,%rax,1),%ecx
  4425d5:	cmp    %cl,(%r14,%rax,1)
  4425d9:	lea    0x1(%rax),%ecx
  4425dc:	sete   %dl
  4425df:	cmp    %ecx,%r13d
  4425e2:	setg   %cl
  4425e5:	add    $0x1,%rax
  4425e9:	test   %dl,%cl
  4425eb:	jne    4425d0 <X509_get0_pubkey_bitstr@plt+0x2bc00>
  4425ed:	movzbl %dl,%edx
  4425f0:	test   %edx,%edx
  4425f2:	je     442d67 <X509_get0_pubkey_bitstr@plt+0x2c397>
  4425f8:	mov    0x40(%rsp),%rsi
  4425fd:	lea    0x2805c(%rip),%rax        # 46a660 <_fini+0xd15c>
  442604:	mov    (%rax,%rsi,1),%eax
  442607:	lea    0x275a0(%rip),%rsi        # 469bae <_fini+0xc6aa>
  44260e:	lea    0x1d7ad(%rip),%rdi        # 45fdc2 <_fini+0x28be>
  442615:	mov    %eax,%edx
  442617:	mov    %eax,0x40(%rsp)
  44261b:	xor    %r13d,%r13d
  44261e:	callq  43e230 <X509_get0_pubkey_bitstr@plt+0x27860>
  442623:	mov    0x236ab3(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  442629:	xor    %edi,%edi
  44262b:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  442630:	lea    0x238e69(%rip),%rax        # 67b4a0 <_edata+0x798>
  442637:	mov    %rbx,0x88(%rsp)
  44263f:	mov    %r13,%rbx
  442642:	mov    %r12,0x90(%rsp)
  44264a:	mov    0x80(%rsp),%r12
  442652:	movl   $0x1,(%rax)
  442658:	mov    %rax,%r13
  44265b:	jmp    442669 <X509_get0_pubkey_bitstr@plt+0x2bc99>
  44265d:	nopl   (%rax)
  442660:	cmp    $0x7fffffff,%rbx
  442667:	je     442693 <X509_get0_pubkey_bitstr@plt+0x2bcc3>
  442669:	mov    %r15,%rdi
  44266c:	add    $0x1,%rbx
  442670:	callq  4138b0 <EC_KEY_get0_public_key@plt>
  442675:	mov    0x30(%rsp),%rsi
  44267a:	mov    %r12,%r8
  44267d:	mov    %rbp,%rcx
  442680:	mov    %rax,%rdx
  442683:	mov    %r14,%rdi
  442686:	callq  413210 <ECDH_compute_key@plt>
  44268b:	mov    0x0(%r13),%eax
  44268f:	test   %eax,%eax
  442691:	jne    442660 <X509_get0_pubkey_bitstr@plt+0x2bc90>
  442693:	mov    0x236a43(%rip),%esi        # 6790dc <_fini+0x21bbd8>
  442699:	mov    $0x1,%edi
  44269e:	mov    %rbx,%r13
  4426a1:	mov    0x90(%rsp),%r12
  4426a9:	mov    0x88(%rsp),%rbx
  4426b1:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  4426b6:	mov    0x2394b3(%rip),%r11d        # 67bb70 <_edata+0xe68>
  4426bd:	lea    0x27364(%rip),%rax        # 469a28 <_fini+0xc524>
  4426c4:	lea    0x2734c(%rip),%rsi        # 469a17 <_fini+0xc513>
  4426cb:	mov    0x40(%rsp),%ecx
  4426cf:	movapd %xmm0,%xmm1
  4426d3:	mov    %r13,%rdx
  4426d6:	test   %r11d,%r11d
  4426d9:	movsd  %xmm1,0x30(%rsp)
  4426df:	cmove  %rax,%rsi
  4426e3:	lea    0x238656(%rip),%rax        # 67ad40 <_edata+0x38>
  4426ea:	mov    (%rax),%rdi
  4426ed:	mov    $0x1,%eax
  4426f2:	callq  413c40 <BIO_printf@plt>
  4426f7:	cvtsi2sd %r13,%xmm0
  4426fc:	lea    0x238dbd(%rip),%rax        # 67b4c0 <_edata+0x7b8>
  442703:	movsd  0x30(%rsp),%xmm1
  442709:	cmp    $0x1,%r13
  44270d:	divsd  %xmm0,%xmm1
  442711:	movsd  %xmm1,(%rax,%rbx,8)
  442716:	jne    441254 <X509_get0_pubkey_bitstr@plt+0x2a884>
  44271c:	mov    0x38(%rsp),%r14
  442721:	jmpq   44181a <X509_get0_pubkey_bitstr@plt+0x2ae4a>
  442726:	nopw   %cs:0x0(%rax,%rax,1)
  442730:	xor    %r13d,%r13d
  442733:	jmpq   44149f <X509_get0_pubkey_bitstr@plt+0x2aacf>
  442738:	mov    $0x7fffffff,%ebp
  44273d:	jmpq   4422b8 <X509_get0_pubkey_bitstr@plt+0x2b8e8>
  442742:	mov    $0x7fffffff,%r12d
  442748:	jmpq   442416 <X509_get0_pubkey_bitstr@plt+0x2ba46>
  44274d:	mov    0x20(%rsp),%r13
  442752:	lea    0x2cb0(%rsp),%r15
  44275a:	movq   $0x0,0x30(%rsp)
  442763:	mov    %r14,0x48(%rsp)
  442768:	nopl   0x0(%rax,%rax,1)
  442770:	mov    0x30(%rsp),%rax
  442775:	mov    0x40(%rsp),%rcx
  44277a:	lea    0x1baac(%rip),%rsi        # 45e22d <_fini+0xd29>
  442781:	mov    (%rcx,%rax,4),%edi
  442784:	mov    %eax,%r12d
  442787:	callq  4149d0 <fdopen@plt>
  44278c:	mov    %rax,%rbx
  44278f:	nop
  442790:	mov    %rbx,%rdx
  442793:	mov    $0x400,%esi
  442798:	mov    %r15,%rdi
  44279b:	callq  415af0 <fgets@plt>
  4427a0:	test   %rax,%rax
  4427a3:	je     4428b8 <X509_get0_pubkey_bitstr@plt+0x2bee8>
  4427a9:	mov    $0xa,%esi
  4427ae:	mov    %r15,%rdi
  4427b1:	callq  413220 <strchr@plt>
  4427b6:	test   %rax,%rax
  4427b9:	mov    %rax,0xf8(%rsp)
  4427c1:	je     4427c6 <X509_get0_pubkey_bitstr@plt+0x2bdf6>
  4427c3:	movb   $0x0,(%rax)
  4427c6:	cmpb   $0x2b,0x2cb0(%rsp)
  4427ce:	je     4427f0 <X509_get0_pubkey_bitstr@plt+0x2be20>
  4427d0:	mov    0x0(%r13),%rdi
  4427d4:	lea    0x27b15(%rip),%rdx        # 46a2f0 <_fini+0xcdec>
  4427db:	mov    %r12d,%r8d
  4427de:	mov    %r15,%rcx
  4427e1:	mov    $0x1,%esi
  4427e6:	xor    %eax,%eax
  4427e8:	callq  415e20 <__fprintf_chk@plt>
  4427ed:	jmp    442790 <X509_get0_pubkey_bitstr@plt+0x2bdc0>
  4427ef:	nop
  4427f0:	lea    0x27548(%rip),%rsi        # 469d3f <_fini+0xc83b>
  4427f7:	mov    %r12d,%ecx
  4427fa:	mov    $0x1,%edi
  4427ff:	xor    %eax,%eax
  442801:	mov    %r15,%rdx
  442804:	callq  412780 <__printf_chk@plt>
  442809:	lea    0x27540(%rip),%rdi        # 469d50 <_fini+0xc84c>
  442810:	mov    $0x3,%ecx
  442815:	mov    %r15,%rsi
  442818:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44281a:	je     44290d <X509_get0_pubkey_bitstr@plt+0x2bf3d>
  442820:	lea    0x2752d(%rip),%rdi        # 469d54 <_fini+0xc850>
  442827:	mov    $0x4,%ecx
  44282c:	mov    %r15,%rsi
  44282f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  442831:	je     4429aa <X509_get0_pubkey_bitstr@plt+0x2bfda>
  442837:	lea    0x2751b(%rip),%rdi        # 469d59 <_fini+0xc855>
  44283e:	mov    $0x4,%ecx
  442843:	mov    %r15,%rsi
  442846:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  442848:	je     442a87 <X509_get0_pubkey_bitstr@plt+0x2c0b7>
  44284e:	lea    0x27509(%rip),%rdi        # 469d5e <_fini+0xc85a>
  442855:	mov    $0x4,%ecx
  44285a:	mov    %r15,%rsi
  44285d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44285f:	je     442b64 <X509_get0_pubkey_bitstr@plt+0x2c194>
  442865:	lea    0x274f7(%rip),%rdi        # 469d63 <_fini+0xc85f>
  44286c:	mov    $0x4,%ecx
  442871:	mov    %r15,%rsi
  442874:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  442876:	je     442c10 <X509_get0_pubkey_bitstr@plt+0x2c240>
  44287c:	lea    0x274e5(%rip),%rdi        # 469d68 <_fini+0xc864>
  442883:	mov    $0x3,%ecx
  442888:	mov    %r15,%rsi
  44288b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44288d:	je     442790 <X509_get0_pubkey_bitstr@plt+0x2bdc0>
  442893:	mov    0x0(%r13),%rdi
  442897:	lea    0x27a82(%rip),%rdx        # 46a320 <_fini+0xce1c>
  44289e:	mov    %r12d,%r8d
  4428a1:	mov    %r15,%rcx
  4428a4:	mov    $0x1,%esi
  4428a9:	xor    %eax,%eax
  4428ab:	callq  415e20 <__fprintf_chk@plt>
  4428b0:	jmpq   442790 <X509_get0_pubkey_bitstr@plt+0x2bdc0>
  4428b5:	nopl   (%rax)
  4428b8:	mov    %rbx,%rdi
  4428bb:	callq  414830 <fclose@plt>
  4428c0:	addq   $0x1,0x30(%rsp)
  4428c6:	mov    0x30(%rsp),%eax
  4428ca:	cmp    %eax,0x28(%rsp)
  4428ce:	jg     442770 <X509_get0_pubkey_bitstr@plt+0x2bda0>
  4428d4:	mov    0x40(%rsp),%rdi
  4428d9:	mov    0x48(%rsp),%r14
  4428de:	callq  414ef0 <free@plt>
  4428e3:	lea    0x110(%rsp),%rax
  4428eb:	movl   $0x0,0xb0(%rsp)
  4428f6:	mov    %rax,0x28(%rsp)
  4428fb:	lea    0x140(%rsp),%rax
  442903:	mov    %rax,0x48(%rsp)
  442908:	jmpq   441273 <X509_get0_pubkey_bitstr@plt+0x2a8a3>
  44290d:	lea    0x3(%r15),%rax
  442911:	mov    %rax,0xf8(%rsp)
  442919:	lea    0xf8(%rsp),%rax
  442921:	mov    %rax,%rdi
  442924:	mov    %rax,%r14
  442927:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  44292c:	xor    %esi,%esi
  44292e:	mov    $0xa,%edx
  442933:	mov    %rax,%rdi
  442936:	callq  4155d0 <strtol@plt>
  44293b:	mov    %r14,%rdi
  44293e:	mov    %rax,%rbp
  442941:	mov    %r14,0x20(%rsp)
  442946:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  44294b:	movslq %ebp,%rax
  44294e:	lea    0x238d6b(%rip),%rsi        # 67b6c0 <_edata+0x9b8>
  442955:	mov    %rbx,0x38(%rsp)
  44295a:	lea    (%rax,%rax,4),%rax
  44295e:	mov    $0x5,%ebp
  442963:	lea    (%rsi,%rax,8),%r14
  442967:	mov    %r14,%rbx
  44296a:	mov    0x20(%rsp),%r14
  44296f:	nop
  442970:	movsd  (%rbx),%xmm4
  442974:	mov    %r14,%rdi
  442977:	add    $0x8,%rbx
  44297b:	movsd  %xmm4,0x20(%rsp)
  442981:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  442986:	xor    %esi,%esi
  442988:	mov    %rax,%rdi
  44298b:	callq  414080 <strtod@plt>
  442990:	addsd  0x20(%rsp),%xmm0
  442996:	movsd  %xmm0,-0x8(%rbx)
  44299b:	sub    $0x1,%ebp
  44299e:	jne    442970 <X509_get0_pubkey_bitstr@plt+0x2bfa0>
  4429a0:	mov    0x38(%rsp),%rbx
  4429a5:	jmpq   442790 <X509_get0_pubkey_bitstr@plt+0x2bdc0>
  4429aa:	lea    0xf8(%rsp),%rbp
  4429b2:	lea    0x4(%r15),%rax
  4429b6:	mov    %rbp,%rdi
  4429b9:	mov    %rax,0xf8(%rsp)
  4429c1:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  4429c6:	xor    %esi,%esi
  4429c8:	mov    $0xa,%edx
  4429cd:	mov    %rax,%rdi
  4429d0:	callq  4155d0 <strtol@plt>
  4429d5:	mov    %rbp,%rdi
  4429d8:	mov    %rax,%r14
  4429db:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  4429e0:	mov    %rbp,%rdi
  4429e3:	movslq %r14d,%r14
  4429e6:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  4429eb:	xor    %esi,%esi
  4429ed:	mov    %rax,%rdi
  4429f0:	shl    $0x4,%r14
  4429f4:	callq  414080 <strtod@plt>
  4429f9:	test   %r12d,%r12d
  4429fc:	lea    0x238c7d(%rip),%rax        # 67b680 <_edata+0x978>
  442a03:	je     442f06 <X509_get0_pubkey_bitstr@plt+0x2c536>
  442a09:	movsd  0x27def(%rip),%xmm1        # 46a800 <_fini+0xd2fc>
  442a11:	add    %r14,%rax
  442a14:	mov    %rbp,%rdi
  442a17:	movsd  0x27de1(%rip),%xmm5        # 46a800 <_fini+0xd2fc>
  442a1f:	divsd  (%rax),%xmm1
  442a23:	divsd  %xmm0,%xmm5
  442a27:	movsd  0x27dd1(%rip),%xmm0        # 46a800 <_fini+0xd2fc>
  442a2f:	addsd  %xmm5,%xmm1
  442a33:	divsd  %xmm1,%xmm0
  442a37:	movsd  %xmm0,(%rax)
  442a3b:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  442a40:	xor    %esi,%esi
  442a42:	mov    %rax,%rdi
  442a45:	callq  414080 <strtod@plt>
  442a4a:	lea    0x238c37(%rip),%rax        # 67b688 <_edata+0x980>
  442a51:	movsd  0x27da7(%rip),%xmm1        # 46a800 <_fini+0xd2fc>
  442a59:	add    %rax,%r14
  442a5c:	movsd  0x27d9c(%rip),%xmm6        # 46a800 <_fini+0xd2fc>
  442a64:	divsd  (%r14),%xmm1
  442a69:	divsd  %xmm0,%xmm6
  442a6d:	movsd  0x27d8b(%rip),%xmm0        # 46a800 <_fini+0xd2fc>
  442a75:	addsd  %xmm6,%xmm1
  442a79:	divsd  %xmm1,%xmm0
  442a7d:	movsd  %xmm0,(%r14)
  442a82:	jmpq   442790 <X509_get0_pubkey_bitstr@plt+0x2bdc0>
  442a87:	lea    0xf8(%rsp),%rbp
  442a8f:	lea    0x4(%r15),%rax
  442a93:	mov    %rbp,%rdi
  442a96:	mov    %rax,0xf8(%rsp)
  442a9e:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  442aa3:	xor    %esi,%esi
  442aa5:	mov    $0xa,%edx
  442aaa:	mov    %rax,%rdi
  442aad:	callq  4155d0 <strtol@plt>
  442ab2:	mov    %rbp,%rdi
  442ab5:	mov    %rax,%r14
  442ab8:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  442abd:	mov    %rbp,%rdi
  442ac0:	movslq %r14d,%r14
  442ac3:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  442ac8:	xor    %esi,%esi
  442aca:	mov    %rax,%rdi
  442acd:	shl    $0x4,%r14
  442ad1:	callq  414080 <strtod@plt>
  442ad6:	test   %r12d,%r12d
  442ad9:	lea    0x238b60(%rip),%rax        # 67b640 <_edata+0x938>
  442ae0:	je     442f82 <X509_get0_pubkey_bitstr@plt+0x2c5b2>
  442ae6:	movsd  0x27d12(%rip),%xmm1        # 46a800 <_fini+0xd2fc>
  442aee:	add    %r14,%rax
  442af1:	mov    %rbp,%rdi
  442af4:	movsd  0x27d04(%rip),%xmm7        # 46a800 <_fini+0xd2fc>
  442afc:	divsd  (%rax),%xmm1
  442b00:	divsd  %xmm0,%xmm7
  442b04:	movsd  0x27cf4(%rip),%xmm0        # 46a800 <_fini+0xd2fc>
  442b0c:	addsd  %xmm7,%xmm1
  442b10:	divsd  %xmm1,%xmm0
  442b14:	movsd  %xmm0,(%rax)
  442b18:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  442b1d:	xor    %esi,%esi
  442b1f:	mov    %rax,%rdi
  442b22:	callq  414080 <strtod@plt>
  442b27:	lea    0x238b1a(%rip),%rax        # 67b648 <_edata+0x940>
  442b2e:	movsd  0x27cca(%rip),%xmm1        # 46a800 <_fini+0xd2fc>
  442b36:	movsd  0x27cc2(%rip),%xmm7        # 46a800 <_fini+0xd2fc>
  442b3e:	add    %rax,%r14
  442b41:	divsd  (%r14),%xmm1
  442b46:	divsd  %xmm0,%xmm7
  442b4a:	movsd  0x27cae(%rip),%xmm0        # 46a800 <_fini+0xd2fc>
  442b52:	addsd  %xmm7,%xmm1
  442b56:	divsd  %xmm1,%xmm0
  442b5a:	movsd  %xmm0,(%r14)
  442b5f:	jmpq   442790 <X509_get0_pubkey_bitstr@plt+0x2bdc0>
  442b64:	lea    0xf8(%rsp),%rbp
  442b6c:	lea    0x4(%r15),%rax
  442b70:	mov    %rbp,%rdi
  442b73:	mov    %rax,0xf8(%rsp)
  442b7b:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  442b80:	xor    %esi,%esi
  442b82:	mov    $0xa,%edx
  442b87:	mov    %rax,%rdi
  442b8a:	callq  4155d0 <strtol@plt>
  442b8f:	mov    %rbp,%rdi
  442b92:	mov    %rax,%r14
  442b95:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  442b9a:	mov    %rbp,%rdi
  442b9d:	movslq %r14d,%r14
  442ba0:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  442ba5:	xor    %esi,%esi
  442ba7:	mov    %rax,%rdi
  442baa:	shl    $0x4,%r14
  442bae:	callq  414080 <strtod@plt>
  442bb3:	test   %r12d,%r12d
  442bb6:	lea    0x238983(%rip),%rax        # 67b540 <_edata+0x838>
  442bbd:	je     442f58 <X509_get0_pubkey_bitstr@plt+0x2c588>
  442bc3:	movsd  0x27c35(%rip),%xmm1        # 46a800 <_fini+0xd2fc>
  442bcb:	add    %r14,%rax
  442bce:	mov    %rbp,%rdi
  442bd1:	movsd  0x27c27(%rip),%xmm5        # 46a800 <_fini+0xd2fc>
  442bd9:	divsd  (%rax),%xmm1
  442bdd:	divsd  %xmm0,%xmm5
  442be1:	movsd  0x27c17(%rip),%xmm0        # 46a800 <_fini+0xd2fc>
  442be9:	addsd  %xmm5,%xmm1
  442bed:	divsd  %xmm1,%xmm0
  442bf1:	movsd  %xmm0,(%rax)
  442bf5:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  442bfa:	xor    %esi,%esi
  442bfc:	mov    %rax,%rdi
  442bff:	callq  414080 <strtod@plt>
  442c04:	lea    0x23893d(%rip),%rax        # 67b548 <_edata+0x840>
  442c0b:	jmpq   442a51 <X509_get0_pubkey_bitstr@plt+0x2c081>
  442c10:	lea    0xf8(%rsp),%rbp
  442c18:	lea    0x4(%r15),%rax
  442c1c:	mov    %rbp,%rdi
  442c1f:	mov    %rax,0xf8(%rsp)
  442c27:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  442c2c:	xor    %esi,%esi
  442c2e:	mov    $0xa,%edx
  442c33:	mov    %rax,%rdi
  442c36:	callq  4155d0 <strtol@plt>
  442c3b:	mov    %rbp,%rdi
  442c3e:	mov    %rax,%r14
  442c41:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  442c46:	mov    %rbp,%rdi
  442c49:	movslq %r14d,%r14
  442c4c:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  442c51:	xor    %esi,%esi
  442c53:	mov    %rax,%rdi
  442c56:	callq  414080 <strtod@plt>
  442c5b:	test   %r12d,%r12d
  442c5e:	lea    0x23885b(%rip),%rax        # 67b4c0 <_edata+0x7b8>
  442c65:	je     442ed4 <X509_get0_pubkey_bitstr@plt+0x2c504>
  442c6b:	movsd  0x27b8d(%rip),%xmm1        # 46a800 <_fini+0xd2fc>
  442c73:	movsd  0x27b85(%rip),%xmm7        # 46a800 <_fini+0xd2fc>
  442c7b:	divsd  (%rax,%r14,8),%xmm1
  442c81:	divsd  %xmm0,%xmm7
  442c85:	movsd  0x27b73(%rip),%xmm0        # 46a800 <_fini+0xd2fc>
  442c8d:	addsd  %xmm7,%xmm1
  442c91:	divsd  %xmm1,%xmm0
  442c95:	movsd  %xmm0,(%rax,%r14,8)
  442c9b:	jmpq   442790 <X509_get0_pubkey_bitstr@plt+0x2bdc0>
  442ca0:	lea    0x238099(%rip),%rax        # 67ad40 <_edata+0x38>
  442ca7:	lea    0x276e2(%rip),%rsi        # 46a390 <_fini+0xce8c>
  442cae:	mov    %ebp,%edx
  442cb0:	mov    $0x1,%ebx
  442cb5:	mov    (%rax),%rdi
  442cb8:	xor    %eax,%eax
  442cba:	callq  413c40 <BIO_printf@plt>
  442cbf:	jmpq   440b50 <X509_get0_pubkey_bitstr@plt+0x2a180>
  442cc4:	cmp    $0x35,%cl
  442cc7:	jne    43eb1d <X509_get0_pubkey_bitstr@plt+0x2814d>
  442ccd:	cmpb   $0x0,0x3(%rax)
  442cd1:	jne    43eb1d <X509_get0_pubkey_bitstr@plt+0x2814d>
  442cd7:	movl   $0x1,0x22c(%rsp)
  442ce2:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  442ce7:	cmp    $0x73,%edx
  442cea:	jne    442da2 <X509_get0_pubkey_bitstr@plt+0x2c3d2>
  442cf0:	cmpb   $0x68,0x1(%rax)
  442cf4:	jne    442da2 <X509_get0_pubkey_bitstr@plt+0x2c3d2>
  442cfa:	cmpb   $0x61,0x2(%rax)
  442cfe:	jne    442da2 <X509_get0_pubkey_bitstr@plt+0x2c3d2>
  442d04:	cmpb   $0x0,0x3(%rax)
  442d08:	jne    442da2 <X509_get0_pubkey_bitstr@plt+0x2c3d2>
  442d0e:	movl   $0x1,0x234(%rsp)
  442d19:	movl   $0x1,0x27c(%rsp)
  442d24:	movl   $0x1,0x280(%rsp)
  442d2f:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  442d34:	mov    0x20(%rsp),%r14
  442d39:	lea    0x26d47(%rip),%rsi        # 469a87 <_fini+0xc583>
  442d40:	jmpq   4421bd <X509_get0_pubkey_bitstr@plt+0x2b7ed>
  442d45:	mov    0x20(%rsp),%r14
  442d4a:	lea    0x26d64(%rip),%rsi        # 469ab5 <_fini+0xc5b1>
  442d51:	jmpq   4421bd <X509_get0_pubkey_bitstr@plt+0x2b7ed>
  442d56:	mov    0x20(%rsp),%r14
  442d5b:	lea    0x26d3d(%rip),%rsi        # 469a9f <_fini+0xc59b>
  442d62:	jmpq   4421bd <X509_get0_pubkey_bitstr@plt+0x2b7ed>
  442d67:	lea    0x237fd2(%rip),%rax        # 67ad40 <_edata+0x38>
  442d6e:	lea    0x2778b(%rip),%rsi        # 46a500 <_fini+0xcffc>
  442d75:	mov    (%rax),%rdi
  442d78:	xor    %eax,%eax
  442d7a:	callq  413c40 <BIO_printf@plt>
  442d7f:	lea    0x237fba(%rip),%rax        # 67ad40 <_edata+0x38>
  442d86:	mov    (%rax),%rdi
  442d89:	callq  413f40 <ERR_print_errors@plt>
  442d8e:	mov    0x40(%rsp),%rcx
  442d93:	lea    0x278c6(%rip),%rax        # 46a660 <_fini+0xd15c>
  442d9a:	mov    (%rax,%rcx,1),%eax
  442d9d:	jmpq   442607 <X509_get0_pubkey_bitstr@plt+0x2bc37>
  442da2:	lea    0x26d1d(%rip),%rdi        # 469ac6 <_fini+0xc5c2>
  442da9:	mov    $0x7,%ecx
  442dae:	mov    %rax,%rsi
  442db1:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  442db3:	jne    442ded <X509_get0_pubkey_bitstr@plt+0x2c41d>
  442db5:	movl   $0x1,0x27c(%rsp)
  442dc0:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  442dc5:	movq   $0x0,0xa0(%rsp)
  442dd1:	movq   $0x0,0x90(%rsp)
  442ddd:	movl   $0x0,0xac(%rsp)
  442de8:	jmpq   43e982 <X509_get0_pubkey_bitstr@plt+0x27fb2>
  442ded:	lea    0x26cd9(%rip),%rdi        # 469acd <_fini+0xc5c9>
  442df4:	mov    $0x7,%ecx
  442df9:	mov    %rax,%rsi
  442dfc:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  442dfe:	jne    442e10 <X509_get0_pubkey_bitstr@plt+0x2c440>
  442e00:	movl   $0x1,0x280(%rsp)
  442e0b:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  442e10:	lea    0x26cbd(%rip),%rdi        # 469ad4 <_fini+0xc5d0>
  442e17:	mov    $0xa,%ecx
  442e1c:	mov    %rax,%rsi
  442e1f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  442e21:	jne    442e38 <X509_get0_pubkey_bitstr@plt+0x2c468>
  442e23:	movl   $0x1,0x284(%rsp)
  442e2e:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  442e33:	callq  414c30 <__stack_chk_fail@plt>
  442e38:	lea    0x26c9f(%rip),%rdi        # 469ade <_fini+0xc5da>
  442e3f:	mov    $0x7,%ecx
  442e44:	mov    %rax,%rsi
  442e47:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  442e49:	je     442e71 <X509_get0_pubkey_bitstr@plt+0x2c4a1>
  442e4b:	lea    0x1a97a(%rip),%rdi        # 45d7cc <_fini+0x2c8>
  442e52:	mov    $0x7,%ecx
  442e57:	mov    %rax,%rsi
  442e5a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  442e5c:	je     442e71 <X509_get0_pubkey_bitstr@plt+0x2c4a1>
  442e5e:	lea    0x26c80(%rip),%rdi        # 469ae5 <_fini+0xc5e1>
  442e65:	mov    $0xa,%ecx
  442e6a:	mov    %rax,%rsi
  442e6d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  442e6f:	jne    442e81 <X509_get0_pubkey_bitstr@plt+0x2c4b1>
  442e71:	movl   $0x1,0x238(%rsp)
  442e7c:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  442e81:	mov    %edx,%r10d
  442e84:	sub    $0x72,%r10d
  442e88:	jne    442edf <X509_get0_pubkey_bitstr@plt+0x2c50f>
  442e8a:	cmpb   $0x63,0x1(%rax)
  442e8e:	jne    442edf <X509_get0_pubkey_bitstr@plt+0x2c50f>
  442e90:	cmpb   $0x34,0x2(%rax)
  442e94:	jne    442edf <X509_get0_pubkey_bitstr@plt+0x2c50f>
  442e96:	cmpb   $0x0,0x3(%rax)
  442e9a:	jne    442edf <X509_get0_pubkey_bitstr@plt+0x2c50f>
  442e9c:	movl   $0x1,0x23c(%rsp)
  442ea7:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  442eac:	mov    0x20(%rsp),%rax
  442eb1:	lea    0x26e7b(%rip),%rdi        # 469d33 <_fini+0xc82f>
  442eb8:	mov    $0xb,%edx
  442ebd:	mov    $0x1,%esi
  442ec2:	mov    (%rax),%rcx
  442ec5:	callq  416880 <fwrite@plt>
  442eca:	mov    $0x1,%edi
  442ecf:	callq  414fb0 <exit@plt>
  442ed4:	movsd  %xmm0,(%rax,%r14,8)
  442eda:	jmpq   442790 <X509_get0_pubkey_bitstr@plt+0x2bdc0>
  442edf:	lea    0x1a9d5(%rip),%rdi        # 45d8bb <_fini+0x3b7>
  442ee6:	mov    $0x8,%ecx
  442eeb:	mov    %rax,%rsi
  442eee:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  442ef0:	jne    442fac <X509_get0_pubkey_bitstr@plt+0x2c5dc>
  442ef6:	movl   $0x1,0x240(%rsp)
  442f01:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  442f06:	mov    %rbp,%rdi
  442f09:	movsd  %xmm0,(%rax,%r14,1)
  442f0f:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  442f14:	xor    %esi,%esi
  442f16:	mov    %rax,%rdi
  442f19:	callq  414080 <strtod@plt>
  442f1e:	lea    0x238763(%rip),%rax        # 67b688 <_edata+0x980>
  442f25:	movsd  %xmm0,(%rax,%r14,1)
  442f2b:	jmpq   442790 <X509_get0_pubkey_bitstr@plt+0x2bdc0>
  442f30:	mov    0x20(%rsp),%rax
  442f35:	lea    0x26dd8(%rip),%rdi        # 469d14 <_fini+0xc810>
  442f3c:	mov    $0xd,%edx
  442f41:	mov    $0x1,%esi
  442f46:	mov    (%rax),%rcx
  442f49:	callq  416880 <fwrite@plt>
  442f4e:	mov    $0x1,%edi
  442f53:	callq  414fb0 <exit@plt>
  442f58:	mov    %rbp,%rdi
  442f5b:	movsd  %xmm0,(%rax,%r14,1)
  442f61:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  442f66:	xor    %esi,%esi
  442f68:	mov    %rax,%rdi
  442f6b:	callq  414080 <strtod@plt>
  442f70:	lea    0x2385d1(%rip),%rax        # 67b548 <_edata+0x840>
  442f77:	movsd  %xmm0,(%rax,%r14,1)
  442f7d:	jmpq   442790 <X509_get0_pubkey_bitstr@plt+0x2bdc0>
  442f82:	mov    %rbp,%rdi
  442f85:	movsd  %xmm0,(%rax,%r14,1)
  442f8b:	callq  43e160 <X509_get0_pubkey_bitstr@plt+0x27790>
  442f90:	xor    %esi,%esi
  442f92:	mov    %rax,%rdi
  442f95:	callq  414080 <strtod@plt>
  442f9a:	lea    0x2386a7(%rip),%rax        # 67b648 <_edata+0x940>
  442fa1:	movsd  %xmm0,(%rax,%r14,1)
  442fa7:	jmpq   442790 <X509_get0_pubkey_bitstr@plt+0x2bdc0>
  442fac:	lea    0x1a8ff(%rip),%rdi        # 45d8b2 <_fini+0x3ae>
  442fb3:	mov    $0x9,%ecx
  442fb8:	mov    %rax,%rsi
  442fbb:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  442fbd:	je     443010 <X509_get0_pubkey_bitstr@plt+0x2c640>
  442fbf:	lea    0x1a80d(%rip),%rdi        # 45d7d3 <_fini+0x2cf>
  442fc6:	mov    $0xc,%ecx
  442fcb:	mov    %rax,%rsi
  442fce:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  442fd0:	jne    443020 <X509_get0_pubkey_bitstr@plt+0x2c650>
  442fd2:	movl   $0x1,0x260(%rsp)
  442fdd:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  442fe2:	mov    %edx,%r11d
  442fe5:	sub    $0x64,%r11d
  442fe9:	jne    443079 <X509_get0_pubkey_bitstr@plt+0x2c6a9>
  442fef:	cmpb   $0x65,0x1(%rax)
  442ff3:	jne    443079 <X509_get0_pubkey_bitstr@plt+0x2c6a9>
  442ff9:	cmpb   $0x73,0x2(%rax)
  442ffd:	jne    443079 <X509_get0_pubkey_bitstr@plt+0x2c6a9>
  442fff:	cmpb   $0x0,0x3(%rax)
  443003:	jne    443079 <X509_get0_pubkey_bitstr@plt+0x2c6a9>
  443005:	movl   $0x1,0x240(%rsp)
  443010:	movl   $0x1,0x244(%rsp)
  44301b:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  443020:	lea    0x1a7c4(%rip),%rdi        # 45d7eb <_fini+0x2e7>
  443027:	mov    $0xc,%ecx
  44302c:	mov    %rax,%rsi
  44302f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443031:	jne    443043 <X509_get0_pubkey_bitstr@plt+0x2c673>
  443033:	movl   $0x1,0x264(%rsp)
  44303e:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  443043:	lea    0x1a7b9(%rip),%rdi        # 45d803 <_fini+0x2ff>
  44304a:	mov    $0xc,%ecx
  44304f:	mov    %rax,%rsi
  443052:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443054:	je     4430b6 <X509_get0_pubkey_bitstr@plt+0x2c6e6>
  443056:	lea    0x26a92(%rip),%rdi        # 469aef <_fini+0xc5eb>
  44305d:	mov    $0xc,%ecx
  443062:	mov    %rax,%rsi
  443065:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443067:	jne    4430c6 <X509_get0_pubkey_bitstr@plt+0x2c6f6>
  443069:	movl   $0x1,0x288(%rsp)
  443074:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  443079:	cmp    $0x61,%edx
  44307c:	jne    4433fe <X509_get0_pubkey_bitstr@plt+0x2ca2e>
  443082:	cmpb   $0x65,0x1(%rax)
  443086:	jne    4433fe <X509_get0_pubkey_bitstr@plt+0x2ca2e>
  44308c:	cmpb   $0x73,0x2(%rax)
  443090:	jne    4433fe <X509_get0_pubkey_bitstr@plt+0x2ca2e>
  443096:	cmpb   $0x0,0x3(%rax)
  44309a:	jne    4433fe <X509_get0_pubkey_bitstr@plt+0x2ca2e>
  4430a0:	movl   $0x1,0x260(%rsp)
  4430ab:	movl   $0x1,0x264(%rsp)
  4430b6:	movl   $0x1,0x268(%rsp)
  4430c1:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  4430c6:	lea    0x26a2e(%rip),%rdi        # 469afb <_fini+0xc5f7>
  4430cd:	mov    $0xc,%ecx
  4430d2:	mov    %rax,%rsi
  4430d5:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4430d7:	jne    4430e9 <X509_get0_pubkey_bitstr@plt+0x2c719>
  4430d9:	movl   $0x1,0x28c(%rsp)
  4430e4:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  4430e9:	lea    0x26a17(%rip),%rdi        # 469b07 <_fini+0xc603>
  4430f0:	mov    $0xc,%ecx
  4430f5:	mov    %rax,%rsi
  4430f8:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4430fa:	jne    44310c <X509_get0_pubkey_bitstr@plt+0x2c73c>
  4430fc:	movl   $0x1,0x290(%rsp)
  443107:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  44310c:	lea    0x1a708(%rip),%rdi        # 45d81b <_fini+0x317>
  443113:	mov    $0x11,%ecx
  443118:	mov    %rax,%rsi
  44311b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44311d:	jne    44312f <X509_get0_pubkey_bitstr@plt+0x2c75f>
  44311f:	movl   $0x1,0x26c(%rsp)
  44312a:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  44312f:	lea    0x1a707(%rip),%rdi        # 45d83d <_fini+0x339>
  443136:	mov    $0x11,%ecx
  44313b:	mov    %rax,%rsi
  44313e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443140:	jne    443152 <X509_get0_pubkey_bitstr@plt+0x2c782>
  443142:	movl   $0x1,0x270(%rsp)
  44314d:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  443152:	lea    0x1a706(%rip),%rdi        # 45d85f <_fini+0x35b>
  443159:	mov    $0x11,%ecx
  44315e:	mov    %rax,%rsi
  443161:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443163:	je     4431cc <X509_get0_pubkey_bitstr@plt+0x2c7fc>
  443165:	lea    0x269a7(%rip),%rdi        # 469b13 <_fini+0xc60f>
  44316c:	mov    $0x8,%ecx
  443171:	mov    %rax,%rsi
  443174:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443176:	je     4431ff <X509_get0_pubkey_bitstr@plt+0x2c82f>
  44317c:	lea    0x26998(%rip),%rdi        # 469b1b <_fini+0xc617>
  443183:	mov    $0x7,%ecx
  443188:	mov    %rax,%rsi
  44318b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44318d:	jne    4431dc <X509_get0_pubkey_bitstr@plt+0x2c80c>
  44318f:	movl   $0x2,0x100(%rsp)
  44319a:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  44319f:	lea    0x269c0(%rip),%rdi        # 469b66 <_fini+0xc662>
  4431a6:	mov    $0x9,%ecx
  4431ab:	mov    %rax,%rsi
  4431ae:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4431b0:	jne    443425 <X509_get0_pubkey_bitstr@plt+0x2ca55>
  4431b6:	movl   $0x1,0x26c(%rsp)
  4431c1:	movl   $0x1,0x270(%rsp)
  4431cc:	movl   $0x1,0x274(%rsp)
  4431d7:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  4431dc:	lea    0x2693f(%rip),%rdi        # 469b22 <_fini+0xc61e>
  4431e3:	mov    $0x8,%ecx
  4431e8:	mov    %rax,%rsi
  4431eb:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4431ed:	jne    443215 <X509_get0_pubkey_bitstr@plt+0x2c845>
  4431ef:	movl   $0x2,0x104(%rsp)
  4431fa:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  4431ff:	callq  412870 <RSA_PKCS1_SSLeay@plt>
  443204:	mov    %rax,%rdi
  443207:	sub    $0x1,%r15d
  44320b:	callq  415c50 <RSA_set_default_method@plt>
  443210:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  443215:	lea    0x2690e(%rip),%rdi        # 469b2a <_fini+0xc626>
  44321c:	mov    $0x8,%ecx
  443221:	mov    %rax,%rsi
  443224:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443226:	jne    443238 <X509_get0_pubkey_bitstr@plt+0x2c868>
  443228:	movl   $0x2,0x108(%rsp)
  443233:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  443238:	lea    0x268f3(%rip),%rdi        # 469b32 <_fini+0xc62e>
  44323f:	mov    $0x7,%ecx
  443244:	mov    %rax,%rsi
  443247:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443249:	jne    44325b <X509_get0_pubkey_bitstr@plt+0x2c88b>
  44324b:	movl   $0x2,0x110(%rsp)
  443256:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  44325b:	lea    0x268d7(%rip),%rdi        # 469b39 <_fini+0xc635>
  443262:	mov    $0x8,%ecx
  443267:	mov    %rax,%rsi
  44326a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44326c:	jne    44327e <X509_get0_pubkey_bitstr@plt+0x2c8ae>
  44326e:	movl   $0x2,0x114(%rsp)
  443279:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  44327e:	lea    0x268bc(%rip),%rdi        # 469b41 <_fini+0xc63d>
  443285:	mov    $0x8,%ecx
  44328a:	mov    %rax,%rsi
  44328d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44328f:	jne    4432a1 <X509_get0_pubkey_bitstr@plt+0x2c8d1>
  443291:	movl   $0x2,0x118(%rsp)
  44329c:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  4432a1:	lea    0x268a1(%rip),%rdi        # 469b49 <_fini+0xc645>
  4432a8:	mov    $0x8,%ecx
  4432ad:	mov    %rax,%rsi
  4432b0:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4432b2:	jne    4432c4 <X509_get0_pubkey_bitstr@plt+0x2c8f4>
  4432b4:	movl   $0x2,0x11c(%rsp)
  4432bf:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  4432c4:	lea    0x1a69b(%rip),%rdi        # 45d966 <_fini+0x462>
  4432cb:	mov    $0x8,%ecx
  4432d0:	mov    %rax,%rsi
  4432d3:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4432d5:	je     4432ee <X509_get0_pubkey_bitstr@plt+0x2c91e>
  4432d7:	test   %r10d,%r10d
  4432da:	jne    4432fe <X509_get0_pubkey_bitstr@plt+0x2c92e>
  4432dc:	cmpb   $0x63,0x1(%rax)
  4432e0:	jne    4432fe <X509_get0_pubkey_bitstr@plt+0x2c92e>
  4432e2:	cmpb   $0x32,0x2(%rax)
  4432e6:	jne    4432fe <X509_get0_pubkey_bitstr@plt+0x2c92e>
  4432e8:	cmpb   $0x0,0x3(%rax)
  4432ec:	jne    4432fe <X509_get0_pubkey_bitstr@plt+0x2c92e>
  4432ee:	movl   $0x1,0x250(%rsp)
  4432f9:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  4432fe:	lea    0x1a619(%rip),%rdi        # 45d91e <_fini+0x41a>
  443305:	mov    $0x9,%ecx
  44330a:	mov    %rax,%rsi
  44330d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44330f:	je     443324 <X509_get0_pubkey_bitstr@plt+0x2c954>
  443311:	lea    0x22d5d(%rip),%rdi        # 466075 <_fini+0x8b71>
  443318:	mov    %rax,%rsi
  44331b:	mov    $0x5,%ecx
  443320:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443322:	jne    443334 <X509_get0_pubkey_bitstr@plt+0x2c964>
  443324:	movl   $0x1,0x248(%rsp)
  44332f:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  443334:	lea    0x1a607(%rip),%rdi        # 45d942 <_fini+0x43e>
  44333b:	mov    $0x9,%ecx
  443340:	mov    %rax,%rsi
  443343:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443345:	je     44335a <X509_get0_pubkey_bitstr@plt+0x2c98a>
  443347:	lea    0x22d2d(%rip),%rdi        # 46607b <_fini+0x8b77>
  44334e:	mov    %rax,%rsi
  443351:	mov    $0x5,%ecx
  443356:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443358:	jne    44336a <X509_get0_pubkey_bitstr@plt+0x2c99a>
  44335a:	movl   $0x1,0x24c(%rsp)
  443365:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  44336a:	lea    0x1a62b(%rip),%rdi        # 45d99c <_fini+0x498>
  443371:	mov    $0x7,%ecx
  443376:	mov    %rax,%rsi
  443379:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44337b:	je     4433a1 <X509_get0_pubkey_bitstr@plt+0x2c9d1>
  44337d:	lea    0x267cd(%rip),%rdi        # 469b51 <_fini+0xc64d>
  443384:	mov    $0x9,%ecx
  443389:	mov    %rax,%rsi
  44338c:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44338e:	je     4433a1 <X509_get0_pubkey_bitstr@plt+0x2c9d1>
  443390:	cmp    $0x62,%edx
  443393:	jne    4433b1 <X509_get0_pubkey_bitstr@plt+0x2c9e1>
  443395:	cmpb   $0x66,0x1(%rax)
  443399:	jne    4433b1 <X509_get0_pubkey_bitstr@plt+0x2c9e1>
  44339b:	cmpb   $0x0,0x2(%rax)
  44339f:	jne    4433b1 <X509_get0_pubkey_bitstr@plt+0x2c9e1>
  4433a1:	movl   $0x1,0x258(%rsp)
  4433ac:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  4433b1:	lea    0x1a628(%rip),%rdi        # 45d9e0 <_fini+0x4dc>
  4433b8:	mov    $0x9,%ecx
  4433bd:	mov    %rax,%rsi
  4433c0:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4433c2:	je     4433ee <X509_get0_pubkey_bitstr@plt+0x2ca1e>
  4433c4:	lea    0x1a4d2(%rip),%rdi        # 45d89d <_fini+0x399>
  4433cb:	mov    %rax,%rsi
  4433ce:	mov    $0x5,%ecx
  4433d3:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4433d5:	je     4433ee <X509_get0_pubkey_bitstr@plt+0x2ca1e>
  4433d7:	lea    0x2677c(%rip),%rdi        # 469b5a <_fini+0xc656>
  4433de:	mov    $0x6,%ecx
  4433e3:	mov    %rax,%rsi
  4433e6:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4433e8:	jne    442fe2 <X509_get0_pubkey_bitstr@plt+0x2c612>
  4433ee:	movl   $0x1,0x25c(%rsp)
  4433f9:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  4433fe:	lea    0x2675b(%rip),%rdi        # 469b60 <_fini+0xc65c>
  443405:	mov    $0x6,%ecx
  44340a:	mov    %rax,%rsi
  44340d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44340f:	jne    44319f <X509_get0_pubkey_bitstr@plt+0x2c7cf>
  443415:	movl   $0x1,0x294(%rsp)
  443420:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  443425:	test   %r10d,%r10d
  443428:	jne    44343c <X509_get0_pubkey_bitstr@plt+0x2ca6c>
  44342a:	cmpb   $0x73,0x1(%rax)
  44342e:	jne    44343c <X509_get0_pubkey_bitstr@plt+0x2ca6c>
  443430:	cmpb   $0x61,0x2(%rax)
  443434:	jne    44343c <X509_get0_pubkey_bitstr@plt+0x2ca6c>
  443436:	cmpb   $0x0,0x3(%rax)
  44343a:	je     443476 <X509_get0_pubkey_bitstr@plt+0x2caa6>
  44343c:	test   %r11d,%r11d
  44343f:	jne    443453 <X509_get0_pubkey_bitstr@plt+0x2ca83>
  443441:	cmpb   $0x73,0x1(%rax)
  443445:	jne    443453 <X509_get0_pubkey_bitstr@plt+0x2ca83>
  443447:	cmpb   $0x61,0x2(%rax)
  44344b:	jne    443453 <X509_get0_pubkey_bitstr@plt+0x2ca83>
  44344d:	cmpb   $0x0,0x3(%rax)
  443451:	je     4434b0 <X509_get0_pubkey_bitstr@plt+0x2cae0>
  443453:	lea    0x26715(%rip),%rdi        # 469b6f <_fini+0xc66b>
  44345a:	mov    $0xa,%ecx
  44345f:	mov    %rax,%rsi
  443462:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443464:	jne    4434df <X509_get0_pubkey_bitstr@plt+0x2cb0f>
  443466:	movl   $0x2,0x1ac(%rsp)
  443471:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  443476:	callq  415030 <FIPS_mode@plt>
  44347b:	test   %eax,%eax
  44347d:	jne    44348a <X509_get0_pubkey_bitstr@plt+0x2caba>
  44347f:	movl   $0x1,0x110(%rsp)
  44348a:	movl   $0x1,0x114(%rsp)
  443495:	movl   $0x1,0x118(%rsp)
  4434a0:	movl   $0x1,0x11c(%rsp)
  4434ab:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  4434b0:	callq  415030 <FIPS_mode@plt>
  4434b5:	test   %eax,%eax
  4434b7:	jne    4434c4 <X509_get0_pubkey_bitstr@plt+0x2caf4>
  4434b9:	movl   $0x1,0x100(%rsp)
  4434c4:	movl   $0x1,0x104(%rsp)
  4434cf:	movl   $0x1,0x108(%rsp)
  4434da:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  4434df:	lea    0x26693(%rip),%rdi        # 469b79 <_fini+0xc675>
  4434e6:	mov    $0xa,%ecx
  4434eb:	mov    %rax,%rsi
  4434ee:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4434f0:	jne    443502 <X509_get0_pubkey_bitstr@plt+0x2cb32>
  4434f2:	movl   $0x2,0x1b0(%rsp)
  4434fd:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  443502:	lea    0x2667a(%rip),%rdi        # 469b83 <_fini+0xc67f>
  443509:	mov    $0xa,%ecx
  44350e:	mov    %rax,%rsi
  443511:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443513:	jne    443525 <X509_get0_pubkey_bitstr@plt+0x2cb55>
  443515:	movl   $0x2,0x1b4(%rsp)
  443520:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  443525:	lea    0x26661(%rip),%rdi        # 469b8d <_fini+0xc689>
  44352c:	mov    $0x6,%ecx
  443531:	mov    %rax,%rsi
  443534:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443536:	jne    44355e <X509_get0_pubkey_bitstr@plt+0x2cb8e>
  443538:	movl   $0x1,0x1ac(%rsp)
  443543:	movl   $0x1,0x1b0(%rsp)
  44354e:	movl   $0x1,0x1b4(%rsp)
  443559:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  44355e:	lea    0x2662e(%rip),%rdi        # 469b93 <_fini+0xc68f>
  443565:	mov    $0x9,%ecx
  44356a:	mov    %rax,%rsi
  44356d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44356f:	jne    443581 <X509_get0_pubkey_bitstr@plt+0x2cbb1>
  443571:	movl   $0x2,0x1ec(%rsp)
  44357c:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  443581:	lea    0x26614(%rip),%rdi        # 469b9c <_fini+0xc698>
  443588:	mov    $0x9,%ecx
  44358d:	mov    %rax,%rsi
  443590:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443592:	jne    4435a4 <X509_get0_pubkey_bitstr@plt+0x2cbd4>
  443594:	movl   $0x2,0x1f0(%rsp)
  44359f:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  4435a4:	lea    0x265fa(%rip),%rdi        # 469ba5 <_fini+0xc6a1>
  4435ab:	mov    $0x9,%ecx
  4435b0:	mov    %rax,%rsi
  4435b3:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4435b5:	jne    4435c7 <X509_get0_pubkey_bitstr@plt+0x2cbf7>
  4435b7:	movl   $0x2,0x1f4(%rsp)
  4435c2:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  4435c7:	lea    0x265e0(%rip),%rdi        # 469bae <_fini+0xc6aa>
  4435ce:	mov    %rax,%rsi
  4435d1:	mov    $0x5,%ecx
  4435d6:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4435d8:	jne    443600 <X509_get0_pubkey_bitstr@plt+0x2cc30>
  4435da:	movl   $0x1,0x1ec(%rsp)
  4435e5:	movl   $0x1,0x1f0(%rsp)
  4435f0:	movl   $0x1,0x1f4(%rsp)
  4435fb:	jmpq   43e8ce <X509_get0_pubkey_bitstr@plt+0x27efe>
  443600:	lea    0x237739(%rip),%rax        # 67ad40 <_edata+0x38>
  443607:	lea    0x265a5(%rip),%rsi        # 469bb3 <_fini+0xc6af>
  44360e:	mov    0x20(%rsp),%r14
  443613:	mov    (%rax),%rdi
  443616:	xor    %eax,%eax
  443618:	callq  413c40 <BIO_printf@plt>
  44361d:	lea    0x23771c(%rip),%rax        # 67ad40 <_edata+0x38>
  443624:	lea    0x21574(%rip),%rsi        # 464b9f <_fini+0x769b>
  44362b:	mov    (%rax),%rdi
  44362e:	xor    %eax,%eax
  443630:	callq  413c40 <BIO_printf@plt>
  443635:	lea    0x237704(%rip),%rax        # 67ad40 <_edata+0x38>
  44363c:	lea    0x2658c(%rip),%rsi        # 469bcf <_fini+0xc6cb>
  443643:	mov    (%rax),%rdi
  443646:	xor    %eax,%eax
  443648:	callq  413c40 <BIO_printf@plt>
  44364d:	lea    0x2376ec(%rip),%rax        # 67ad40 <_edata+0x38>
  443654:	lea    0x26587(%rip),%rsi        # 469be2 <_fini+0xc6de>
  44365b:	mov    (%rax),%rdi
  44365e:	xor    %eax,%eax
  443660:	callq  413c40 <BIO_printf@plt>
  443665:	lea    0x2376d4(%rip),%rax        # 67ad40 <_edata+0x38>
  44366c:	lea    0x26579(%rip),%rsi        # 469bec <_fini+0xc6e8>
  443673:	mov    (%rax),%rdi
  443676:	xor    %eax,%eax
  443678:	callq  413c40 <BIO_printf@plt>
  44367d:	lea    0x2376bc(%rip),%rax        # 67ad40 <_edata+0x38>
  443684:	lea    0x2656b(%rip),%rsi        # 469bf6 <_fini+0xc6f2>
  44368b:	mov    (%rax),%rdi
  44368e:	xor    %eax,%eax
  443690:	callq  413c40 <BIO_printf@plt>
  443695:	lea    0x2376a4(%rip),%rax        # 67ad40 <_edata+0x38>
  44369c:	lea    0x2655d(%rip),%rsi        # 469c00 <_fini+0xc6fc>
  4436a3:	mov    (%rax),%rdi
  4436a6:	xor    %eax,%eax
  4436a8:	callq  413c40 <BIO_printf@plt>
  4436ad:	lea    0x23768c(%rip),%rax        # 67ad40 <_edata+0x38>
  4436b4:	lea    0x2654f(%rip),%rsi        # 469c0a <_fini+0xc706>
  4436bb:	mov    (%rax),%rdi
  4436be:	xor    %eax,%eax
  4436c0:	callq  413c40 <BIO_printf@plt>
  4436c5:	lea    0x237674(%rip),%rax        # 67ad40 <_edata+0x38>
  4436cc:	lea    0x26541(%rip),%rsi        # 469c14 <_fini+0xc710>
  4436d3:	mov    (%rax),%rdi
  4436d6:	xor    %eax,%eax
  4436d8:	callq  413c40 <BIO_printf@plt>
  4436dd:	lea    0x23765c(%rip),%rax        # 67ad40 <_edata+0x38>
  4436e4:	lea    0x26533(%rip),%rsi        # 469c1e <_fini+0xc71a>
  4436eb:	mov    (%rax),%rdi
  4436ee:	xor    %eax,%eax
  4436f0:	callq  413c40 <BIO_printf@plt>
  4436f5:	lea    0x237644(%rip),%rax        # 67ad40 <_edata+0x38>
  4436fc:	lea    0x263d1(%rip),%rsi        # 469ad4 <_fini+0xc5d0>
  443703:	mov    (%rax),%rdi
  443706:	xor    %eax,%eax
  443708:	callq  413c40 <BIO_printf@plt>
  44370d:	lea    0x23762c(%rip),%rax        # 67ad40 <_edata+0x38>
  443714:	lea    0x1a0b1(%rip),%rsi        # 45d7cc <_fini+0x2c8>
  44371b:	mov    (%rax),%rdi
  44371e:	xor    %eax,%eax
  443720:	callq  413c40 <BIO_printf@plt>
  443725:	lea    0x237614(%rip),%rax        # 67ad40 <_edata+0x38>
  44372c:	lea    0x2146c(%rip),%rsi        # 464b9f <_fini+0x769b>
  443733:	mov    (%rax),%rdi
  443736:	xor    %eax,%eax
  443738:	callq  413c40 <BIO_printf@plt>
  44373d:	lea    0x2375fc(%rip),%rax        # 67ad40 <_edata+0x38>
  443744:	lea    0x264dd(%rip),%rsi        # 469c28 <_fini+0xc724>
  44374b:	mov    (%rax),%rdi
  44374e:	xor    %eax,%eax
  443750:	callq  413c40 <BIO_printf@plt>
  443755:	lea    0x2375e4(%rip),%rax        # 67ad40 <_edata+0x38>
  44375c:	lea    0x264cf(%rip),%rsi        # 469c32 <_fini+0xc72e>
  443763:	mov    (%rax),%rdi
  443766:	xor    %eax,%eax
  443768:	callq  413c40 <BIO_printf@plt>
  44376d:	lea    0x2375cc(%rip),%rax        # 67ad40 <_edata+0x38>
  443774:	lea    0x264c1(%rip),%rsi        # 469c3c <_fini+0xc738>
  44377b:	mov    (%rax),%rdi
  44377e:	xor    %eax,%eax
  443780:	callq  413c40 <BIO_printf@plt>
  443785:	lea    0x2375b4(%rip),%rax        # 67ad40 <_edata+0x38>
  44378c:	lea    0x1a209(%rip),%rsi        # 45d99c <_fini+0x498>
  443793:	mov    (%rax),%rdi
  443796:	xor    %eax,%eax
  443798:	callq  413c40 <BIO_printf@plt>
  44379d:	lea    0x23759c(%rip),%rax        # 67ad40 <_edata+0x38>
  4437a4:	lea    0x213f4(%rip),%rsi        # 464b9f <_fini+0x769b>
  4437ab:	mov    (%rax),%rdi
  4437ae:	xor    %eax,%eax
  4437b0:	callq  413c40 <BIO_printf@plt>
  4437b5:	lea    0x237584(%rip),%rax        # 67ad40 <_edata+0x38>
  4437bc:	lea    0x26483(%rip),%rsi        # 469c46 <_fini+0xc742>
  4437c3:	mov    (%rax),%rdi
  4437c6:	xor    %eax,%eax
  4437c8:	callq  413c40 <BIO_printf@plt>
  4437cd:	lea    0x23756c(%rip),%rax        # 67ad40 <_edata+0x38>
  4437d4:	lea    0x26995(%rip),%rsi        # 46a170 <_fini+0xcc6c>
  4437db:	mov    (%rax),%rdi
  4437de:	xor    %eax,%eax
  4437e0:	callq  413c40 <BIO_printf@plt>
  4437e5:	lea    0x237554(%rip),%rax        # 67ad40 <_edata+0x38>
  4437ec:	lea    0x269a5(%rip),%rsi        # 46a198 <_fini+0xcc94>
  4437f3:	mov    (%rax),%rdi
  4437f6:	xor    %eax,%eax
  4437f8:	callq  413c40 <BIO_printf@plt>
  4437fd:	lea    0x23753c(%rip),%rax        # 67ad40 <_edata+0x38>
  443804:	lea    0x21394(%rip),%rsi        # 464b9f <_fini+0x769b>
  44380b:	mov    (%rax),%rdi
  44380e:	xor    %eax,%eax
  443810:	callq  413c40 <BIO_printf@plt>
  443815:	lea    0x237524(%rip),%rax        # 67ad40 <_edata+0x38>
  44381c:	lea    0x2699d(%rip),%rsi        # 46a1c0 <_fini+0xccbc>
  443823:	mov    (%rax),%rdi
  443826:	xor    %eax,%eax
  443828:	callq  413c40 <BIO_printf@plt>
  44382d:	lea    0x23750c(%rip),%rax        # 67ad40 <_edata+0x38>
  443834:	lea    0x1a050(%rip),%rsi        # 45d88b <_fini+0x387>
  44383b:	mov    (%rax),%rdi
  44383e:	xor    %eax,%eax
  443840:	callq  413c40 <BIO_printf@plt>
  443845:	lea    0x2374f4(%rip),%rax        # 67ad40 <_edata+0x38>
  44384c:	lea    0x2134c(%rip),%rsi        # 464b9f <_fini+0x769b>
  443853:	mov    (%rax),%rdi
  443856:	xor    %eax,%eax
  443858:	callq  413c40 <BIO_printf@plt>
  44385d:	lea    0x2374dc(%rip),%rax        # 67ad40 <_edata+0x38>
  443864:	lea    0x2698d(%rip),%rsi        # 46a1f8 <_fini+0xccf4>
  44386b:	mov    (%rax),%rdi
  44386e:	xor    %eax,%eax
  443870:	callq  413c40 <BIO_printf@plt>
  443875:	lea    0x2374c4(%rip),%rax        # 67ad40 <_edata+0x38>
  44387c:	lea    0x263d6(%rip),%rsi        # 469c59 <_fini+0xc755>
  443883:	mov    (%rax),%rdi
  443886:	xor    %eax,%eax
  443888:	callq  413c40 <BIO_printf@plt>
  44388d:	lea    0x2374ac(%rip),%rax        # 67ad40 <_edata+0x38>
  443894:	lea    0x26985(%rip),%rsi        # 46a220 <_fini+0xcd1c>
  44389b:	mov    (%rax),%rdi
  44389e:	xor    %eax,%eax
  4438a0:	callq  413c40 <BIO_printf@plt>
  4438a5:	lea    0x237494(%rip),%rax        # 67ad40 <_edata+0x38>
  4438ac:	lea    0x263c1(%rip),%rsi        # 469c74 <_fini+0xc770>
  4438b3:	mov    (%rax),%rdi
  4438b6:	xor    %eax,%eax
  4438b8:	callq  413c40 <BIO_printf@plt>
  4438bd:	lea    0x23747c(%rip),%rax        # 67ad40 <_edata+0x38>
  4438c4:	lea    0x263b0(%rip),%rsi        # 469c7b <_fini+0xc777>
  4438cb:	mov    (%rax),%rdi
  4438ce:	xor    %eax,%eax
  4438d0:	callq  413c40 <BIO_printf@plt>
  4438d5:	lea    0x237464(%rip),%rax        # 67ad40 <_edata+0x38>
  4438dc:	lea    0x263b5(%rip),%rsi        # 469c98 <_fini+0xc794>
  4438e3:	mov    (%rax),%rdi
  4438e6:	xor    %eax,%eax
  4438e8:	callq  413c40 <BIO_printf@plt>
  4438ed:	lea    0x23744c(%rip),%rax        # 67ad40 <_edata+0x38>
  4438f4:	lea    0x263a3(%rip),%rsi        # 469c9e <_fini+0xc79a>
  4438fb:	mov    (%rax),%rdi
  4438fe:	xor    %eax,%eax
  443900:	callq  413c40 <BIO_printf@plt>
  443905:	lea    0x237434(%rip),%rax        # 67ad40 <_edata+0x38>
  44390c:	lea    0x26395(%rip),%rsi        # 469ca8 <_fini+0xc7a4>
  443913:	mov    (%rax),%rdi
  443916:	xor    %eax,%eax
  443918:	callq  413c40 <BIO_printf@plt>
  44391d:	lea    0x23741c(%rip),%rax        # 67ad40 <_edata+0x38>
  443924:	lea    0x26387(%rip),%rsi        # 469cb2 <_fini+0xc7ae>
  44392b:	mov    (%rax),%rdi
  44392e:	xor    %eax,%eax
  443930:	callq  413c40 <BIO_printf@plt>
  443935:	lea    0x237404(%rip),%rax        # 67ad40 <_edata+0x38>
  44393c:	lea    0x26379(%rip),%rsi        # 469cbc <_fini+0xc7b8>
  443943:	mov    (%rax),%rdi
  443946:	xor    %eax,%eax
  443948:	callq  413c40 <BIO_printf@plt>
  44394d:	lea    0x2373ec(%rip),%rax        # 67ad40 <_edata+0x38>
  443954:	lea    0x2636b(%rip),%rsi        # 469cc6 <_fini+0xc7c2>
  44395b:	mov    (%rax),%rdi
  44395e:	xor    %eax,%eax
  443960:	callq  413c40 <BIO_printf@plt>
  443965:	lea    0x2373d4(%rip),%rax        # 67ad40 <_edata+0x38>
  44396c:	lea    0x2635d(%rip),%rsi        # 469cd0 <_fini+0xc7cc>
  443973:	mov    (%rax),%rdi
  443976:	xor    %eax,%eax
  443978:	callq  413c40 <BIO_printf@plt>
  44397d:	lea    0x2373bc(%rip),%rax        # 67ad40 <_edata+0x38>
  443984:	lea    0x2634f(%rip),%rsi        # 469cda <_fini+0xc7d6>
  44398b:	mov    (%rax),%rdi
  44398e:	xor    %eax,%eax
  443990:	callq  413c40 <BIO_printf@plt>
  443995:	lea    0x2373a4(%rip),%rax        # 67ad40 <_edata+0x38>
  44399c:	lea    0x261ae(%rip),%rsi        # 469b51 <_fini+0xc64d>
  4439a3:	mov    (%rax),%rdi
  4439a6:	xor    %eax,%eax
  4439a8:	callq  413c40 <BIO_printf@plt>
  4439ad:	lea    0x23738c(%rip),%rax        # 67ad40 <_edata+0x38>
  4439b4:	lea    0x211e4(%rip),%rsi        # 464b9f <_fini+0x769b>
  4439bb:	mov    (%rax),%rdi
  4439be:	xor    %eax,%eax
  4439c0:	callq  413c40 <BIO_printf@plt>
  4439c5:	lea    0x237374(%rip),%rax        # 67ad40 <_edata+0x38>
  4439cc:	lea    0x211cc(%rip),%rsi        # 464b9f <_fini+0x769b>
  4439d3:	mov    (%rax),%rdi
  4439d6:	xor    %eax,%eax
  4439d8:	callq  413c40 <BIO_printf@plt>
  4439dd:	lea    0x23735c(%rip),%rax        # 67ad40 <_edata+0x38>
  4439e4:	lea    0x262f9(%rip),%rsi        # 469ce4 <_fini+0xc7e0>
  4439eb:	mov    (%rax),%rdi
  4439ee:	xor    %eax,%eax
  4439f0:	callq  413c40 <BIO_printf@plt>
  4439f5:	lea    0x237344(%rip),%rax        # 67ad40 <_edata+0x38>
  4439fc:	lea    0x1bd65(%rip),%rsi        # 45f768 <_fini+0x2264>
  443a03:	mov    (%rax),%rdi
  443a06:	xor    %eax,%eax
  443a08:	callq  413c40 <BIO_printf@plt>
  443a0d:	lea    0x23732c(%rip),%rax        # 67ad40 <_edata+0x38>
  443a14:	lea    0x262dd(%rip),%rsi        # 469cf8 <_fini+0xc7f4>
  443a1b:	mov    (%rax),%rdi
  443a1e:	xor    %eax,%eax
  443a20:	callq  413c40 <BIO_printf@plt>
  443a25:	lea    0x237314(%rip),%rax        # 67ad40 <_edata+0x38>
  443a2c:	lea    0x2680d(%rip),%rsi        # 46a240 <_fini+0xcd3c>
  443a33:	mov    (%rax),%rdi
  443a36:	xor    %eax,%eax
  443a38:	callq  413c40 <BIO_printf@plt>
  443a3d:	lea    0x2372fc(%rip),%rax        # 67ad40 <_edata+0x38>
  443a44:	lea    0x2683d(%rip),%rsi        # 46a288 <_fini+0xcd84>
  443a4b:	mov    (%rax),%rdi
  443a4e:	xor    %eax,%eax
  443a50:	callq  413c40 <BIO_printf@plt>
  443a55:	lea    0x26864(%rip),%rsi        # 46a2c0 <_fini+0xcdbc>
  443a5c:	jmpq   4421bd <X509_get0_pubkey_bitstr@plt+0x2b7ed>
  443a61:	nopw   %cs:0x0(%rax,%rax,1)
  443a6b:	nopl   0x0(%rax,%rax,1)
  443a70:	push   %r13
  443a72:	push   %r12
  443a74:	mov    %rdi,%r12
  443a77:	push   %rbp
  443a78:	push   %rbx
  443a79:	sub    $0x98,%rsp
  443a80:	mov    %fs:0x28,%rax
  443a89:	mov    %rax,0x88(%rsp)
  443a91:	xor    %eax,%eax
  443a93:	callq  415ec0 <BIO_s_connect@plt>
  443a98:	mov    %rax,%rdi
  443a9b:	callq  414a20 <BIO_new@plt>
  443aa0:	test   %rax,%rax
  443aa3:	mov    %rax,%rbx
  443aa6:	je     443bf0 <X509_get0_pubkey_bitstr@plt+0x2d220>
  443aac:	mov    0x237115(%rip),%rcx        # 67abc8 <_fini+0x21d6c4>
  443ab3:	xor    %edx,%edx
  443ab5:	mov    $0x64,%esi
  443aba:	mov    %rax,%rdi
  443abd:	callq  412af0 <BIO_ctrl@plt>
  443ac2:	test   %r12,%r12
  443ac5:	je     443c00 <X509_get0_pubkey_bitstr@plt+0x2d230>
  443acb:	mov    %r12,%rdi
  443ace:	mov    %r12,%rbp
  443ad1:	callq  414680 <SSL_set_connect_state@plt>
  443ad6:	mov    %rbx,%rdx
  443ad9:	mov    %rbx,%rsi
  443adc:	mov    %rbp,%rdi
  443adf:	mov    %rsp,%r13
  443ae2:	callq  413bb0 <SSL_set_bio@plt>
  443ae7:	mov    %rbp,%rdi
  443aea:	callq  415510 <SSL_connect@plt>
  443aef:	mov    %eax,%edi
  443af1:	mov    %eax,%ebx
  443af3:	callq  4165d0 <BIO_sock_should_retry@plt>
  443af8:	test   %eax,%eax
  443afa:	jne    443b30 <X509_get0_pubkey_bitstr@plt+0x2d160>
  443afc:	test   %ebx,%ebx
  443afe:	mov    %rbp,%rax
  443b01:	jle    443ba0 <X509_get0_pubkey_bitstr@plt+0x2d1d0>
  443b07:	mov    0x88(%rsp),%rsi
  443b0f:	xor    %fs:0x28,%rsi
  443b18:	jne    443c22 <X509_get0_pubkey_bitstr@plt+0x2d252>
  443b1e:	add    $0x98,%rsp
  443b25:	pop    %rbx
  443b26:	pop    %rbp
  443b27:	pop    %r12
  443b29:	pop    %r13
  443b2b:	retq   
  443b2c:	nopl   0x0(%rax)
  443b30:	lea    0x237209(%rip),%rax        # 67ad40 <_edata+0x38>
  443b37:	lea    0x2451d(%rip),%rsi        # 46805b <_fini+0xab57>
  443b3e:	mov    (%rax),%rdi
  443b41:	xor    %eax,%eax
  443b43:	callq  413c40 <BIO_printf@plt>
  443b48:	mov    %rbp,%rdi
  443b4b:	callq  414df0 <SSL_get_fd@plt>
  443b50:	mov    $0x10,%ecx
  443b55:	mov    %eax,%ebx
  443b57:	mov    %r13,%rdi
  443b5a:	xor    %eax,%eax
  443b5c:	cld    
  443b5d:	rep stos %rax,%es:(%rdi)
  443b60:	movslq %ebx,%rdi
  443b63:	callq  415c10 <__fdelt_chk@plt>
  443b68:	mov    %ebx,%edx
  443b6a:	lea    0x1(%rbx),%edi
  443b6d:	xor    %r8d,%r8d
  443b70:	sar    $0x1f,%edx
  443b73:	mov    %r13,%rsi
  443b76:	shr    $0x1a,%edx
  443b79:	lea    (%rbx,%rdx,1),%ecx
  443b7c:	and    $0x3f,%ecx
  443b7f:	sub    %edx,%ecx
  443b81:	mov    $0x1,%edx
  443b86:	shl    %cl,%rdx
  443b89:	xor    %ecx,%ecx
  443b8b:	or     %rdx,(%rsp,%rax,8)
  443b8f:	xor    %edx,%edx
  443b91:	callq  4146b0 <select@plt>
  443b96:	jmpq   443ae7 <X509_get0_pubkey_bitstr@plt+0x2d117>
  443b9b:	nopl   0x0(%rax,%rax,1)
  443ba0:	lea    0x237199(%rip),%rbx        # 67ad40 <_edata+0x38>
  443ba7:	lea    0x244b4(%rip),%rsi        # 468062 <_fini+0xab5e>
  443bae:	xor    %eax,%eax
  443bb0:	mov    (%rbx),%rdi
  443bb3:	callq  413c40 <BIO_printf@plt>
  443bb8:	lea    0x238041(%rip),%rax        # 67bc00 <_edata+0xef8>
  443bbf:	movslq (%rax),%rdi
  443bc2:	test   %edi,%edi
  443bc4:	je     443c18 <X509_get0_pubkey_bitstr@plt+0x2d248>
  443bc6:	callq  415690 <X509_verify_cert_error_string@plt>
  443bcb:	mov    (%rbx),%rdi
  443bce:	lea    0x24494(%rip),%rsi        # 468069 <_fini+0xab65>
  443bd5:	mov    %rax,%rdx
  443bd8:	xor    %eax,%eax
  443bda:	callq  413c40 <BIO_printf@plt>
  443bdf:	test   %r12,%r12
  443be2:	jne    443bf0 <X509_get0_pubkey_bitstr@plt+0x2d220>
  443be4:	mov    %rbp,%rdi
  443be7:	callq  413820 <SSL_free@plt>
  443bec:	nopl   0x0(%rax)
  443bf0:	xor    %eax,%eax
  443bf2:	jmpq   443b07 <X509_get0_pubkey_bitstr@plt+0x2d137>
  443bf7:	nopw   0x0(%rax,%rax,1)
  443c00:	mov    0x237f99(%rip),%rdi        # 67bba0 <_edata+0xe98>
  443c07:	callq  413ae0 <SSL_new@plt>
  443c0c:	mov    %rax,%rbp
  443c0f:	jmpq   443ad6 <X509_get0_pubkey_bitstr@plt+0x2d106>
  443c14:	nopl   0x0(%rax)
  443c18:	mov    (%rbx),%rdi
  443c1b:	callq  413f40 <ERR_print_errors@plt>
  443c20:	jmp    443bdf <X509_get0_pubkey_bitstr@plt+0x2d20f>
  443c22:	callq  414c30 <__stack_chk_fail@plt>
  443c27:	nopw   0x0(%rax,%rax,1)
  443c30:	push   %r15
  443c32:	push   %r14
  443c34:	push   %r13
  443c36:	push   %r12
  443c38:	push   %rbp
  443c39:	mov    %rsi,%rbp
  443c3c:	mov    $0x1,%esi
  443c41:	push   %rbx
  443c42:	mov    %edi,%ebx
  443c44:	mov    $0xd,%edi
  443c49:	sub    $0x2028,%rsp
  443c50:	mov    %fs:0x28,%rax
  443c59:	mov    %rax,0x2018(%rsp)
  443c61:	xor    %eax,%eax
  443c63:	callq  414ee0 <signal@plt>
  443c68:	lea    0x2370d1(%rip),%r12        # 67ad40 <_edata+0x38>
  443c6f:	lea    0x26ba2(%rip),%rax        # 46a818 <_fini+0xd314>
  443c76:	movq   $0x0,0x237f4f(%rip)        # 67bbd0 <_edata+0xec8>
  443c81:	movq   $0x0,0x237f3c(%rip)        # 67bbc8 <_edata+0xec0>
  443c8c:	movq   $0x0,0x237f29(%rip)        # 67bbc0 <_edata+0xeb8>
  443c97:	mov    %rax,0x236f2a(%rip)        # 67abc8 <_fini+0x21d6c4>
  443c9e:	movq   $0x0,0x237f0f(%rip)        # 67bbb8 <_edata+0xeb0>
  443ca9:	cmpq   $0x0,(%r12)
  443cae:	movq   $0x0,0x237ef7(%rip)        # 67bbb0 <_edata+0xea8>
  443cb9:	movl   $0x0,0x237ee5(%rip)        # 67bba8 <_edata+0xea0>
  443cc3:	movl   $0x1e,0x236ef7(%rip)        # 67abc4 <_fini+0x21d6c0>
  443ccd:	movq   $0x0,0x237ec8(%rip)        # 67bba0 <_edata+0xe98>
  443cd8:	movq   $0x0,0x237eb5(%rip)        # 67bb98 <_edata+0xe90>
  443ce3:	movq   $0x0,0x237ea2(%rip)        # 67bb90 <_edata+0xe88>
  443cee:	movq   $0x0,0x237e8f(%rip)        # 67bb88 <_edata+0xe80>
  443cf9:	movl   $0x0,0x237e7d(%rip)        # 67bb80 <_edata+0xe78>
  443d03:	movl   $0x0,0x237e6f(%rip)        # 67bb7c <_edata+0xe74>
  443d0d:	movl   $0x0,0x237e61(%rip)        # 67bb78 <_edata+0xe70>
  443d17:	je     44437a <X509_get0_pubkey_bitstr@plt+0x2d9aa>
  443d1d:	callq  415730 <SSLv23_client_method@plt>
  443d22:	mov    %rax,0x237e6f(%rip)        # 67bb98 <_edata+0xe90>
  443d29:	lea    0x237ed4(%rip),%rax        # 67bc04 <_edata+0xefc>
  443d30:	sub    $0x1,%ebx
  443d33:	add    $0x8,%rbp
  443d37:	test   %ebx,%ebx
  443d39:	movl   $0x0,0x8(%rsp)
  443d41:	movl   $0x0,(%rax)
  443d47:	lea    0x237eb2(%rip),%rax        # 67bc00 <_edata+0xef8>
  443d4e:	movl   $0x0,(%rax)
  443d54:	jle    443dcb <X509_get0_pubkey_bitstr@plt+0x2d3fb>
  443d56:	lea    0x24b8b(%rip),%r14        # 4688e8 <_fini+0xb3e4>
  443d5d:	mov    $0x9,%r15d
  443d63:	jmp    443d8b <X509_get0_pubkey_bitstr@plt+0x2d3bb>
  443d65:	nopl   (%rax)
  443d68:	sub    $0x1,%ebx
  443d6b:	je     443fe0 <X509_get0_pubkey_bitstr@plt+0x2d610>
  443d71:	mov    0x8(%rbp),%rax
  443d75:	lea    0x8(%rbp),%r13
  443d79:	mov    %rax,0x236e48(%rip)        # 67abc8 <_fini+0x21d6c4>
  443d80:	sub    $0x1,%ebx
  443d83:	lea    0x8(%r13),%rbp
  443d87:	test   %ebx,%ebx
  443d89:	jle    443dcb <X509_get0_pubkey_bitstr@plt+0x2d3fb>
  443d8b:	mov    0x0(%rbp),%rdx
  443d8f:	mov    %r14,%rdi
  443d92:	mov    %r15,%rcx
  443d95:	mov    %rdx,%rsi
  443d98:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443d9a:	je     443d68 <X509_get0_pubkey_bitstr@plt+0x2d398>
  443d9c:	lea    0x26a9a(%rip),%rdi        # 46a83d <_fini+0xd339>
  443da3:	mov    $0x7,%ecx
  443da8:	mov    %rdx,%rsi
  443dab:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443dad:	jne    443ea8 <X509_get0_pubkey_bitstr@plt+0x2d4d8>
  443db3:	sub    $0x1,%ebx
  443db6:	mov    %rbp,%r13
  443db9:	movl   $0x2,0x237db9(%rip)        # 67bb7c <_edata+0xe74>
  443dc3:	test   %ebx,%ebx
  443dc5:	lea    0x8(%r13),%rbp
  443dc9:	jg     443d8b <X509_get0_pubkey_bitstr@plt+0x2d3bb>
  443dcb:	mov    0x237dab(%rip),%ecx        # 67bb7c <_edata+0xe74>
  443dd1:	test   %ecx,%ecx
  443dd3:	je     443fc8 <X509_get0_pubkey_bitstr@plt+0x2d5f8>
  443dd9:	mov    0x8(%rsp),%edx
  443ddd:	test   %edx,%edx
  443ddf:	jne    443fe0 <X509_get0_pubkey_bitstr@plt+0x2d610>
  443de5:	callq  414ce0 <SSL_library_init@plt>
  443dea:	mov    0x237da7(%rip),%rdi        # 67bb98 <_edata+0xe90>
  443df1:	mov    $0x1,%ebx
  443df6:	callq  413890 <SSL_CTX_new@plt>
  443dfb:	test   %rax,%rax
  443dfe:	mov    %rax,0x237d9b(%rip)        # 67bba0 <_edata+0xe98>
  443e05:	je     443e7a <X509_get0_pubkey_bitstr@plt+0x2d4aa>
  443e07:	mov    %rax,%rdi
  443e0a:	mov    $0x1,%esi
  443e0f:	callq  4147d0 <SSL_CTX_set_quiet_shutdown@plt>
  443e14:	mov    0x237d66(%rip),%eax        # 67bb80 <_edata+0xe78>
  443e1a:	test   %eax,%eax
  443e1c:	jne    44435d <X509_get0_pubkey_bitstr@plt+0x2d98d>
  443e22:	mov    0x237d87(%rip),%rsi        # 67bbb0 <_edata+0xea8>
  443e29:	mov    0x237d70(%rip),%rdi        # 67bba0 <_edata+0xe98>
  443e30:	callq  412c10 <SSL_CTX_set_cipher_list@plt>
  443e35:	mov    0x237d8c(%rip),%rdx        # 67bbc8 <_edata+0xec0>
  443e3c:	mov    0x237d8d(%rip),%rsi        # 67bbd0 <_edata+0xec8>
  443e43:	mov    0x237d56(%rip),%rdi        # 67bba0 <_edata+0xe98>
  443e4a:	callq  448cb0 <X509_get0_pubkey_bitstr@plt+0x322e0>
  443e4f:	test   %eax,%eax
  443e51:	jne    4440db <X509_get0_pubkey_bitstr@plt+0x2d70b>
  443e57:	mov    $0x1,%ebp
  443e5c:	mov    0x237d3d(%rip),%rdi        # 67bba0 <_edata+0xe98>
  443e63:	mov    %ebp,%ebx
  443e65:	test   %rdi,%rdi
  443e68:	je     443e7a <X509_get0_pubkey_bitstr@plt+0x2d4aa>
  443e6a:	callq  412c50 <SSL_CTX_free@plt>
  443e6f:	movq   $0x0,0x237d26(%rip)        # 67bba0 <_edata+0xe98>
  443e7a:	mov    %ebx,%eax
  443e7c:	mov    0x2018(%rsp),%rbx
  443e84:	xor    %fs:0x28,%rbx
  443e8d:	jne    444863 <X509_get0_pubkey_bitstr@plt+0x2de93>
  443e93:	add    $0x2028,%rsp
  443e9a:	pop    %rbx
  443e9b:	pop    %rbp
  443e9c:	pop    %r12
  443e9e:	pop    %r13
  443ea0:	pop    %r14
  443ea2:	pop    %r15
  443ea4:	retq   
  443ea5:	nopl   (%rax)
  443ea8:	lea    0x1a323(%rip),%rdi        # 45e1d2 <_fini+0xcce>
  443eaf:	mov    $0x5,%ecx
  443eb4:	mov    %rdx,%rsi
  443eb7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443eb9:	jne    443ed0 <X509_get0_pubkey_bitstr@plt+0x2d500>
  443ebb:	movl   $0x1,0x237cb7(%rip)        # 67bb7c <_edata+0xe74>
  443ec5:	mov    %rbp,%r13
  443ec8:	jmpq   443d80 <X509_get0_pubkey_bitstr@plt+0x2d3b0>
  443ecd:	nopl   (%rax)
  443ed0:	lea    0x1a361(%rip),%rdi        # 45e238 <_fini+0xd34>
  443ed7:	mov    $0x8,%ecx
  443edc:	mov    %rdx,%rsi
  443edf:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443ee1:	jne    443f30 <X509_get0_pubkey_bitstr@plt+0x2d560>
  443ee3:	sub    $0x1,%ebx
  443ee6:	movl   $0x5,0x237cb8(%rip)        # 67bba8 <_edata+0xea0>
  443ef0:	je     443fe0 <X509_get0_pubkey_bitstr@plt+0x2d610>
  443ef6:	mov    0x8(%rbp),%rdi
  443efa:	xor    %esi,%esi
  443efc:	mov    $0xa,%edx
  443f01:	lea    0x8(%rbp),%r13
  443f05:	callq  4155d0 <strtol@plt>
  443f0a:	lea    0x237cf3(%rip),%rdx        # 67bc04 <_edata+0xefc>
  443f11:	mov    (%r12),%rdi
  443f15:	lea    0x244f0(%rip),%rsi        # 46840c <_fini+0xaf08>
  443f1c:	mov    %eax,(%rdx)
  443f1e:	mov    %eax,%edx
  443f20:	xor    %eax,%eax
  443f22:	callq  413c40 <BIO_printf@plt>
  443f27:	jmpq   443d80 <X509_get0_pubkey_bitstr@plt+0x2d3b0>
  443f2c:	nopl   0x0(%rax)
  443f30:	lea    0x1d06b(%rip),%rdi        # 460fa2 <_fini+0x3a9e>
  443f37:	mov    $0x6,%ecx
  443f3c:	mov    %rdx,%rsi
  443f3f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443f41:	jne    443f60 <X509_get0_pubkey_bitstr@plt+0x2d590>
  443f43:	sub    $0x1,%ebx
  443f46:	je     443fe0 <X509_get0_pubkey_bitstr@plt+0x2d610>
  443f4c:	mov    0x8(%rbp),%rax
  443f50:	lea    0x8(%rbp),%r13
  443f54:	mov    %rax,0x237c75(%rip)        # 67bbd0 <_edata+0xec8>
  443f5b:	jmpq   443d80 <X509_get0_pubkey_bitstr@plt+0x2d3b0>
  443f60:	lea    0x1a25e(%rip),%rdi        # 45e1c5 <_fini+0xcc1>
  443f67:	mov    $0x5,%ecx
  443f6c:	mov    %rdx,%rsi
  443f6f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443f71:	je     443fa8 <X509_get0_pubkey_bitstr@plt+0x2d5d8>
  443f73:	lea    0x19bbb(%rip),%rdi        # 45db35 <_fini+0x631>
  443f7a:	mov    $0x8,%ecx
  443f7f:	mov    %rdx,%rsi
  443f82:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  443f84:	jne    444077 <X509_get0_pubkey_bitstr@plt+0x2d6a7>
  443f8a:	sub    $0x1,%ebx
  443f8d:	je     443fe0 <X509_get0_pubkey_bitstr@plt+0x2d610>
  443f8f:	mov    0x8(%rbp),%rax
  443f93:	lea    0x8(%rbp),%r13
  443f97:	mov    %rax,0x237c22(%rip)        # 67bbc0 <_edata+0xeb8>
  443f9e:	jmpq   443d80 <X509_get0_pubkey_bitstr@plt+0x2d3b0>
  443fa3:	nopl   0x0(%rax,%rax,1)
  443fa8:	sub    $0x1,%ebx
  443fab:	je     443fe0 <X509_get0_pubkey_bitstr@plt+0x2d610>
  443fad:	mov    0x8(%rbp),%rax
  443fb1:	lea    0x8(%rbp),%r13
  443fb5:	mov    %rax,0x237c0c(%rip)        # 67bbc8 <_edata+0xec0>
  443fbc:	jmpq   443d80 <X509_get0_pubkey_bitstr@plt+0x2d3b0>
  443fc1:	nopl   0x0(%rax)
  443fc8:	movl   $0x3,0x237baa(%rip)        # 67bb7c <_edata+0xe74>
  443fd2:	jmpq   443dd9 <X509_get0_pubkey_bitstr@plt+0x2d409>
  443fd7:	nopw   0x0(%rax,%rax,1)
  443fe0:	lea    0x26840(%rip),%rdi        # 46a827 <_fini+0xd323>
  443fe7:	callq  415a40 <puts@plt>
  443fec:	lea    0x26825(%rip),%rdx        # 46a818 <_fini+0xd314>
  443ff3:	lea    0x268be(%rip),%rsi        # 46a8b8 <_fini+0xd3b4>
  443ffa:	mov    $0x1,%edi
  443fff:	xor    %eax,%eax
  444001:	callq  412780 <__printf_chk@plt>
  444006:	lea    0x268eb(%rip),%rdi        # 46a8f8 <_fini+0xd3f4>
  44400d:	callq  415a40 <puts@plt>
  444012:	lea    0x2690f(%rip),%rdi        # 46a928 <_fini+0xd424>
  444019:	callq  415a40 <puts@plt>
  44401e:	lea    0x26923(%rip),%rdi        # 46a948 <_fini+0xd444>
  444025:	callq  415a40 <puts@plt>
  44402a:	lea    0x26937(%rip),%rdi        # 46a968 <_fini+0xd464>
  444031:	callq  415a40 <puts@plt>
  444036:	lea    0x2695b(%rip),%rdi        # 46a998 <_fini+0xd494>
  44403d:	callq  415a40 <puts@plt>
  444042:	lea    0x2697f(%rip),%rdi        # 46a9c8 <_fini+0xd4c4>
  444049:	callq  415a40 <puts@plt>
  44404e:	lea    0x269a3(%rip),%rdi        # 46a9f8 <_fini+0xd4f4>
  444055:	callq  415a40 <puts@plt>
  44405a:	lea    0x23693f(%rip),%rsi        # 67a9a0 <_fini+0x21d49c>
  444061:	mov    $0x1e,%edx
  444066:	mov    $0x1,%edi
  44406b:	xor    %eax,%eax
  44406d:	callq  412780 <__printf_chk@plt>
  444072:	jmpq   443e57 <X509_get0_pubkey_bitstr@plt+0x2d487>
  444077:	lea    0x19abf(%rip),%rdi        # 45db3d <_fini+0x639>
  44407e:	mov    $0x8,%ecx
  444083:	mov    %rdx,%rsi
  444086:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  444088:	je     4440be <X509_get0_pubkey_bitstr@plt+0x2d6ee>
  44408a:	lea    0x24432(%rip),%rdi        # 4684c3 <_fini+0xafbf>
  444091:	mov    $0x8,%ecx
  444096:	mov    %rdx,%rsi
  444099:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44409b:	jne    444394 <X509_get0_pubkey_bitstr@plt+0x2d9c4>
  4440a1:	sub    $0x1,%ebx
  4440a4:	je     443fe0 <X509_get0_pubkey_bitstr@plt+0x2d610>
  4440aa:	mov    0x8(%rbp),%rax
  4440ae:	lea    0x8(%rbp),%r13
  4440b2:	mov    %rax,0x237af7(%rip)        # 67bbb0 <_edata+0xea8>
  4440b9:	jmpq   443d80 <X509_get0_pubkey_bitstr@plt+0x2d3b0>
  4440be:	sub    $0x1,%ebx
  4440c1:	je     443fe0 <X509_get0_pubkey_bitstr@plt+0x2d610>
  4440c7:	mov    0x8(%rbp),%rax
  4440cb:	lea    0x8(%rbp),%r13
  4440cf:	mov    %rax,0x237ae2(%rip)        # 67bbb8 <_edata+0xeb0>
  4440d6:	jmpq   443d80 <X509_get0_pubkey_bitstr@plt+0x2d3b0>
  4440db:	callq  412f00 <SSL_load_error_strings@plt>
  4440e0:	mov    0x237ad1(%rip),%rsi        # 67bbb8 <_edata+0xeb0>
  4440e7:	mov    0x237ad2(%rip),%rdx        # 67bbc0 <_edata+0xeb8>
  4440ee:	mov    0x237aab(%rip),%rdi        # 67bba0 <_edata+0xe98>
  4440f5:	test   %rsi,%rsi
  4440f8:	je     444453 <X509_get0_pubkey_bitstr@plt+0x2da83>
  4440fe:	callq  4128b0 <SSL_CTX_load_verify_locations@plt>
  444103:	test   %eax,%eax
  444105:	je     444469 <X509_get0_pubkey_bitstr@plt+0x2da99>
  44410b:	cmpq   $0x0,0x237a9d(%rip)        # 67bbb0 <_edata+0xea8>
  444113:	je     444774 <X509_get0_pubkey_bitstr@plt+0x2dda4>
  444119:	mov    0x237a5d(%rip),%eax        # 67bb7c <_edata+0xe74>
  44411f:	test   $0x1,%al
  444121:	jne    444477 <X509_get0_pubkey_bitstr@plt+0x2daa7>
  444127:	test   $0x2,%al
  444129:	je     443e57 <X509_get0_pubkey_bitstr@plt+0x2d487>
  44412f:	lea    0x269ba(%rip),%rdi        # 46aaf0 <_fini+0xd5ec>
  444136:	callq  415a40 <puts@plt>
  44413b:	xor    %edi,%edi
  44413d:	callq  443a70 <X509_get0_pubkey_bitstr@plt+0x2d0a0>
  444142:	test   %rax,%rax
  444145:	mov    %rax,%rbx
  444148:	je     444816 <X509_get0_pubkey_bitstr@plt+0x2de46>
  44414e:	mov    0x237a3b(%rip),%rcx        # 67bb90 <_edata+0xe88>
  444155:	test   %rcx,%rcx
  444158:	je     4441cc <X509_get0_pubkey_bitstr@plt+0x2d7fc>
  44415a:	lea    0x10(%rsp),%rbp
  44415f:	lea    0x2671a(%rip),%rdx        # 46a880 <_fini+0xd37c>
  444166:	mov    $0x2000,%esi
  44416b:	xor    %eax,%eax
  44416d:	mov    %rbp,%rdi
  444170:	callq  412fc0 <BIO_snprintf@plt>
  444175:	mov    %rbp,%rdx
  444178:	mov    (%rdx),%ecx
  44417a:	add    $0x4,%rdx
  44417e:	lea    -0x1010101(%rcx),%eax
  444184:	not    %ecx
  444186:	and    %ecx,%eax
  444188:	and    $0x80808080,%eax
  44418d:	je     444178 <X509_get0_pubkey_bitstr@plt+0x2d7a8>
  44418f:	mov    %eax,%ecx
  444191:	mov    %rbp,%rsi
  444194:	mov    %rbx,%rdi
  444197:	shr    $0x10,%ecx
  44419a:	test   $0x8080,%eax
  44419f:	cmove  %ecx,%eax
  4441a2:	lea    0x2(%rdx),%rcx
  4441a6:	cmove  %rcx,%rdx
  4441aa:	add    %al,%al
  4441ac:	sbb    $0x3,%rdx
  4441b0:	sub    %rbp,%rdx
  4441b3:	callq  4136c0 <SSL_write@plt>
  4441b8:	mov    $0x2000,%edx
  4441bd:	mov    %rbp,%rsi
  4441c0:	mov    %rbx,%rdi
  4441c3:	callq  414a40 <SSL_read@plt>
  4441c8:	test   %eax,%eax
  4441ca:	jg     4441b8 <X509_get0_pubkey_bitstr@plt+0x2d7e8>
  4441cc:	mov    $0x3,%esi
  4441d1:	mov    %rbx,%rdi
  4441d4:	lea    0x10(%rsp),%rbp
  4441d9:	callq  416740 <SSL_set_shutdown@plt>
  4441de:	mov    %rbx,%rdi
  4441e1:	xor    %r12d,%r12d
  4441e4:	callq  414df0 <SSL_get_fd@plt>
  4441e9:	mov    $0x2,%esi
  4441ee:	mov    %eax,%edi
  4441f0:	callq  415460 <shutdown@plt>
  4441f5:	mov    %rbx,%rdi
  4441f8:	callq  414df0 <SSL_get_fd@plt>
  4441fd:	mov    %eax,%edi
  4441ff:	callq  4168a0 <close@plt>
  444204:	xor    %edi,%edi
  444206:	callq  414560 <time@plt>
  44420b:	movslq 0x2369b2(%rip),%rdx        # 67abc4 <_fini+0x21d6c0>
  444212:	lea    0x26695(%rip),%rdi        # 46a8ae <_fini+0xd3aa>
  444219:	lea    (%rax,%rdx,1),%r13
  44421d:	callq  415a40 <puts@plt>
  444222:	mov    $0x1,%esi
  444227:	xor    %edi,%edi
  444229:	movq   $0x0,0x237954(%rip)        # 67bb88 <_edata+0xe80>
  444234:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  444239:	nopl   0x0(%rax)
  444240:	xor    %edi,%edi
  444242:	callq  414560 <time@plt>
  444247:	cmp    %rax,%r13
  44424a:	jl     4446df <X509_get0_pubkey_bitstr@plt+0x2dd0f>
  444250:	mov    %rbx,%rdi
  444253:	callq  443a70 <X509_get0_pubkey_bitstr@plt+0x2d0a0>
  444258:	test   %rax,%rax
  44425b:	je     44476d <X509_get0_pubkey_bitstr@plt+0x2dd9d>
  444261:	mov    0x237928(%rip),%rcx        # 67bb90 <_edata+0xe88>
  444268:	test   %rcx,%rcx
  44426b:	je     4442ee <X509_get0_pubkey_bitstr@plt+0x2d91e>
  444271:	lea    0x26608(%rip),%rdx        # 46a880 <_fini+0xd37c>
  444278:	mov    $0x2000,%esi
  44427d:	mov    %rbp,%rdi
  444280:	xor    %eax,%eax
  444282:	callq  412fc0 <BIO_snprintf@plt>
  444287:	mov    %rbp,%rdx
  44428a:	mov    (%rdx),%ecx
  44428c:	add    $0x4,%rdx
  444290:	lea    -0x1010101(%rcx),%eax
  444296:	not    %ecx
  444298:	and    %ecx,%eax
  44429a:	and    $0x80808080,%eax
  44429f:	je     44428a <X509_get0_pubkey_bitstr@plt+0x2d8ba>
  4442a1:	mov    %eax,%ecx
  4442a3:	mov    %rbp,%rsi
  4442a6:	mov    %rbx,%rdi
  4442a9:	shr    $0x10,%ecx
  4442ac:	test   $0x8080,%eax
  4442b1:	cmove  %ecx,%eax
  4442b4:	lea    0x2(%rdx),%rcx
  4442b8:	cmove  %rcx,%rdx
  4442bc:	add    %al,%al
  4442be:	sbb    $0x3,%rdx
  4442c2:	sub    %rbp,%rdx
  4442c5:	callq  4136c0 <SSL_write@plt>
  4442ca:	jmp    4442da <X509_get0_pubkey_bitstr@plt+0x2d90a>
  4442cc:	nopl   0x0(%rax)
  4442d0:	movslq %eax,%rcx
  4442d3:	add    %rcx,0x2378ae(%rip)        # 67bb88 <_edata+0xe80>
  4442da:	mov    $0x2000,%edx
  4442df:	mov    %rbp,%rsi
  4442e2:	mov    %rbx,%rdi
  4442e5:	callq  414a40 <SSL_read@plt>
  4442ea:	test   %eax,%eax
  4442ec:	jg     4442d0 <X509_get0_pubkey_bitstr@plt+0x2d900>
  4442ee:	mov    $0x3,%esi
  4442f3:	mov    %rbx,%rdi
  4442f6:	add    $0x1,%r12d
  4442fa:	callq  416740 <SSL_set_shutdown@plt>
  4442ff:	mov    %rbx,%rdi
  444302:	callq  414df0 <SSL_get_fd@plt>
  444307:	mov    $0x2,%esi
  44430c:	mov    %eax,%edi
  44430e:	callq  415460 <shutdown@plt>
  444313:	mov    %rbx,%rdi
  444316:	callq  414df0 <SSL_get_fd@plt>
  44431b:	mov    %eax,%edi
  44431d:	callq  4168a0 <close@plt>
  444322:	xor    %ecx,%ecx
  444324:	xor    %edx,%edx
  444326:	mov    %rbx,%rdi
  444329:	mov    $0x8,%esi
  44432e:	callq  4162b0 <SSL_ctrl@plt>
  444333:	test   %rax,%rax
  444336:	mov    $0x72,%edi
  44433b:	je     444418 <X509_get0_pubkey_bitstr@plt+0x2da48>
  444341:	mov    0x231b70(%rip),%r14        # 675eb8 <_fini+0x2189b4>
  444348:	mov    (%r14),%rsi
  44434b:	callq  4150b0 <fputc@plt>
  444350:	mov    (%r14),%rdi
  444353:	callq  414e60 <fflush@plt>
  444358:	jmpq   444240 <X509_get0_pubkey_bitstr@plt+0x2d870>
  44435d:	mov    0x23783c(%rip),%rdi        # 67bba0 <_edata+0xe98>
  444364:	xor    %ecx,%ecx
  444366:	mov    $0x80000bf7,%edx
  44436b:	mov    $0x20,%esi
  444370:	callq  413e30 <SSL_CTX_ctrl@plt>
  444375:	jmpq   443e22 <X509_get0_pubkey_bitstr@plt+0x2d452>
  44437a:	mov    0x231bff(%rip),%rax        # 675f80 <_fini+0x218a7c>
  444381:	xor    %esi,%esi
  444383:	mov    (%rax),%rdi
  444386:	callq  4161e0 <BIO_new_fp@plt>
  44438b:	mov    %rax,(%r12)
  44438f:	jmpq   443d1d <X509_get0_pubkey_bitstr@plt+0x2d34d>
  444394:	lea    0x24130(%rip),%rdi        # 4684cb <_fini+0xafc7>
  44439b:	mov    $0x6,%ecx
  4443a0:	mov    %rdx,%rsi
  4443a3:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4443a5:	je     444406 <X509_get0_pubkey_bitstr@plt+0x2da36>
  4443a7:	lea    0x241dc(%rip),%rdi        # 46858a <_fini+0xb086>
  4443ae:	mov    $0x5,%ecx
  4443b3:	mov    %rdx,%rsi
  4443b6:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4443b8:	jne    4446b6 <X509_get0_pubkey_bitstr@plt+0x2dce6>
  4443be:	sub    $0x1,%ebx
  4443c1:	je     443fe0 <X509_get0_pubkey_bitstr@plt+0x2d610>
  4443c7:	mov    0x8(%rbp),%rdi
  4443cb:	lea    0x8(%rbp),%r13
  4443cf:	mov    %rdi,0x2377ba(%rip)        # 67bb90 <_edata+0xe88>
  4443d6:	callq  413470 <strlen@plt>
  4443db:	cmp    $0x1f9c,%rax
  4443e1:	jbe    443d80 <X509_get0_pubkey_bitstr@plt+0x2d3b0>
  4443e7:	mov    (%r12),%rdi
  4443eb:	lea    0x26452(%rip),%rsi        # 46a844 <_fini+0xd340>
  4443f2:	xor    %eax,%eax
  4443f4:	callq  413c40 <BIO_printf@plt>
  4443f9:	movl   $0x1,0x8(%rsp)
  444401:	jmpq   443d80 <X509_get0_pubkey_bitstr@plt+0x2d3b0>
  444406:	movl   $0x1,0x237768(%rip)        # 67bb78 <_edata+0xe70>
  444410:	mov    %rbp,%r13
  444413:	jmpq   443d80 <X509_get0_pubkey_bitstr@plt+0x2d3b0>
  444418:	mov    %rbx,%rdi
  44441b:	callq  415c90 <SSL_version@plt>
  444420:	cmp    $0x301,%eax
  444425:	mov    $0x74,%edi
  44442a:	je     444341 <X509_get0_pubkey_bitstr@plt+0x2d971>
  444430:	cmp    $0x300,%eax
  444435:	mov    $0x33,%dil
  444438:	je     444341 <X509_get0_pubkey_bitstr@plt+0x2d971>
  44443e:	xor    %edi,%edi
  444440:	cmp    $0x2,%eax
  444443:	sete   %dil
  444447:	lea    0x2a(,%rdi,8),%edi
  44444e:	jmpq   444341 <X509_get0_pubkey_bitstr@plt+0x2d971>
  444453:	test   %rdx,%rdx
  444456:	jne    4440fe <X509_get0_pubkey_bitstr@plt+0x2d72e>
  44445c:	callq  4160c0 <SSL_CTX_set_default_verify_paths@plt>
  444461:	test   %eax,%eax
  444463:	jne    44410b <X509_get0_pubkey_bitstr@plt+0x2d73b>
  444469:	mov    (%r12),%rdi
  44446d:	callq  413f40 <ERR_print_errors@plt>
  444472:	jmpq   44410b <X509_get0_pubkey_bitstr@plt+0x2d73b>
  444477:	mov    0x236747(%rip),%edx        # 67abc4 <_fini+0x21d6c0>
  44447d:	lea    0x265a4(%rip),%rsi        # 46aa28 <_fini+0xd524>
  444484:	mov    $0x1,%edi
  444489:	xor    %eax,%eax
  44448b:	lea    0x10(%rsp),%rbp
  444490:	xor    %r12d,%r12d
  444493:	callq  412780 <__printf_chk@plt>
  444498:	xor    %edi,%edi
  44449a:	movq   $0x0,0x2376e3(%rip)        # 67bb88 <_edata+0xe80>
  4444a5:	callq  414560 <time@plt>
  4444aa:	movslq 0x236713(%rip),%rdx        # 67abc4 <_fini+0x21d6c0>
  4444b1:	mov    $0x1,%esi
  4444b6:	xor    %edi,%edi
  4444b8:	lea    (%rax,%rdx,1),%r13
  4444bc:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  4444c1:	nopl   0x0(%rax)
  4444c8:	xor    %edi,%edi
  4444ca:	callq  414560 <time@plt>
  4444cf:	cmp    %rax,%r13
  4444d2:	jl     444619 <X509_get0_pubkey_bitstr@plt+0x2dc49>
  4444d8:	xor    %edi,%edi
  4444da:	callq  443a70 <X509_get0_pubkey_bitstr@plt+0x2d0a0>
  4444df:	test   %rax,%rax
  4444e2:	mov    %rax,%rbx
  4444e5:	je     443e57 <X509_get0_pubkey_bitstr@plt+0x2d487>
  4444eb:	mov    0x23769e(%rip),%rcx        # 67bb90 <_edata+0xe88>
  4444f2:	test   %rcx,%rcx
  4444f5:	je     444576 <X509_get0_pubkey_bitstr@plt+0x2dba6>
  4444f7:	lea    0x26382(%rip),%rdx        # 46a880 <_fini+0xd37c>
  4444fe:	mov    $0x2000,%esi
  444503:	mov    %rbp,%rdi
  444506:	xor    %eax,%eax
  444508:	callq  412fc0 <BIO_snprintf@plt>
  44450d:	mov    %rbp,%rdx
  444510:	mov    (%rdx),%ecx
  444512:	add    $0x4,%rdx
  444516:	lea    -0x1010101(%rcx),%eax
  44451c:	not    %ecx
  44451e:	and    %ecx,%eax
  444520:	and    $0x80808080,%eax
  444525:	je     444510 <X509_get0_pubkey_bitstr@plt+0x2db40>
  444527:	mov    %eax,%ecx
  444529:	mov    %rbp,%rsi
  44452c:	mov    %rbx,%rdi
  44452f:	shr    $0x10,%ecx
  444532:	test   $0x8080,%eax
  444537:	cmove  %ecx,%eax
  44453a:	lea    0x2(%rdx),%rcx
  44453e:	cmove  %rcx,%rdx
  444542:	add    %al,%al
  444544:	sbb    $0x3,%rdx
  444548:	sub    %rbp,%rdx
  44454b:	callq  4136c0 <SSL_write@plt>
  444550:	jmp    444562 <X509_get0_pubkey_bitstr@plt+0x2db92>
  444552:	nopw   0x0(%rax,%rax,1)
  444558:	movslq %eax,%rcx
  44455b:	add    %rcx,0x237626(%rip)        # 67bb88 <_edata+0xe80>
  444562:	mov    $0x2000,%edx
  444567:	mov    %rbp,%rsi
  44456a:	mov    %rbx,%rdi
  44456d:	callq  414a40 <SSL_read@plt>
  444572:	test   %eax,%eax
  444574:	jg     444558 <X509_get0_pubkey_bitstr@plt+0x2db88>
  444576:	mov    $0x3,%esi
  44457b:	mov    %rbx,%rdi
  44457e:	add    $0x1,%r12d
  444582:	callq  416740 <SSL_set_shutdown@plt>
  444587:	mov    %rbx,%rdi
  44458a:	callq  414df0 <SSL_get_fd@plt>
  44458f:	mov    $0x2,%esi
  444594:	mov    %eax,%edi
  444596:	callq  415460 <shutdown@plt>
  44459b:	mov    %rbx,%rdi
  44459e:	callq  414df0 <SSL_get_fd@plt>
  4445a3:	mov    %eax,%edi
  4445a5:	callq  4168a0 <close@plt>
  4445aa:	xor    %ecx,%ecx
  4445ac:	xor    %edx,%edx
  4445ae:	mov    %rbx,%rdi
  4445b1:	mov    $0x8,%esi
  4445b6:	callq  4162b0 <SSL_ctrl@plt>
  4445bb:	test   %rax,%rax
  4445be:	mov    $0x72,%edi
  4445c3:	je     4445e9 <X509_get0_pubkey_bitstr@plt+0x2dc19>
  4445c5:	mov    0x2318ec(%rip),%r14        # 675eb8 <_fini+0x2189b4>
  4445cc:	mov    (%r14),%rsi
  4445cf:	callq  4150b0 <fputc@plt>
  4445d4:	mov    (%r14),%rdi
  4445d7:	callq  414e60 <fflush@plt>
  4445dc:	mov    %rbx,%rdi
  4445df:	callq  413820 <SSL_free@plt>
  4445e4:	jmpq   4444c8 <X509_get0_pubkey_bitstr@plt+0x2daf8>
  4445e9:	mov    %rbx,%rdi
  4445ec:	callq  415c90 <SSL_version@plt>
  4445f1:	cmp    $0x301,%eax
  4445f6:	mov    $0x74,%edi
  4445fb:	je     4445c5 <X509_get0_pubkey_bitstr@plt+0x2dbf5>
  4445fd:	cmp    $0x300,%eax
  444602:	mov    $0x33,%dil
  444605:	je     4445c5 <X509_get0_pubkey_bitstr@plt+0x2dbf5>
  444607:	xor    %edi,%edi
  444609:	cmp    $0x2,%eax
  44460c:	sete   %dil
  444610:	lea    0x2a(,%rdi,8),%edi
  444617:	jmp    4445c5 <X509_get0_pubkey_bitstr@plt+0x2dbf5>
  444619:	mov    $0x1,%esi
  44461e:	mov    $0x1,%edi
  444623:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  444628:	addsd  0x264e8(%rip),%xmm0        # 46ab18 <_fini+0xd614>
  444630:	xor    %edi,%edi
  444632:	movsd  %xmm0,0x8(%rsp)
  444638:	callq  414560 <time@plt>
  44463d:	cvtsi2sd %r12d,%xmm1
  444642:	lea    0x26417(%rip),%rsi        # 46aa60 <_fini+0xd55c>
  444649:	movsd  0x8(%rsp),%xmm0
  44464f:	mov    0x237532(%rip),%rcx        # 67bb88 <_edata+0xe80>
  444656:	mov    %r12d,%edx
  444659:	mov    $0x1,%edi
  44465e:	mov    $0x2,%eax
  444663:	divsd  %xmm0,%xmm1
  444667:	callq  412780 <__printf_chk@plt>
  44466c:	mov    0x237515(%rip),%rax        # 67bb88 <_edata+0xe80>
  444673:	movslq %r12d,%rcx
  444676:	xor    %edi,%edi
  444678:	cqto   
  44467a:	idiv   %rcx
  44467d:	mov    %rax,%rbx
  444680:	callq  414560 <time@plt>
  444685:	movslq 0x236538(%rip),%rcx        # 67abc4 <_fini+0x21d6c0>
  44468c:	sub    %r13,%rax
  44468f:	lea    0x26412(%rip),%rsi        # 46aaa8 <_fini+0xd5a4>
  444696:	mov    %rbx,%r8
  444699:	mov    %r12d,%edx
  44469c:	mov    $0x1,%edi
  4446a1:	add    %rax,%rcx
  4446a4:	xor    %eax,%eax
  4446a6:	callq  412780 <__printf_chk@plt>
  4446ab:	mov    0x2374cb(%rip),%eax        # 67bb7c <_edata+0xe74>
  4446b1:	jmpq   444127 <X509_get0_pubkey_bitstr@plt+0x2d757>
  4446b6:	lea    0x23e83(%rip),%rdi        # 468540 <_fini+0xb03c>
  4446bd:	mov    $0x6,%ecx
  4446c2:	mov    %rdx,%rsi
  4446c5:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4446c7:	jne    4447b5 <X509_get0_pubkey_bitstr@plt+0x2dde5>
  4446cd:	movl   $0x1,0x2374a9(%rip)        # 67bb80 <_edata+0xe78>
  4446d7:	mov    %rbp,%r13
  4446da:	jmpq   443d80 <X509_get0_pubkey_bitstr@plt+0x2d3b0>
  4446df:	mov    $0x1,%esi
  4446e4:	mov    $0x1,%edi
  4446e9:	callq  448950 <X509_get0_pubkey_bitstr@plt+0x31f80>
  4446ee:	cvtsi2sd %r12d,%xmm1
  4446f3:	addsd  0x2641d(%rip),%xmm0        # 46ab18 <_fini+0xd614>
  4446fb:	mov    0x237486(%rip),%rcx        # 67bb88 <_edata+0xe80>
  444702:	lea    0x26357(%rip),%rsi        # 46aa60 <_fini+0xd55c>
  444709:	mov    %r12d,%edx
  44470c:	mov    $0x1,%edi
  444711:	mov    $0x2,%eax
  444716:	divsd  %xmm0,%xmm1
  44471a:	callq  412780 <__printf_chk@plt>
  44471f:	mov    0x237462(%rip),%rax        # 67bb88 <_edata+0xe80>
  444726:	movslq %r12d,%rcx
  444729:	xor    %edi,%edi
  44472b:	cqto   
  44472d:	idiv   %rcx
  444730:	mov    %rax,%rbp
  444733:	callq  414560 <time@plt>
  444738:	movslq 0x236485(%rip),%rcx        # 67abc4 <_fini+0x21d6c0>
  44473f:	sub    %r13,%rax
  444742:	lea    0x2635f(%rip),%rsi        # 46aaa8 <_fini+0xd5a4>
  444749:	mov    %rbp,%r8
  44474c:	mov    %r12d,%edx
  44474f:	mov    $0x1,%edi
  444754:	xor    %ebp,%ebp
  444756:	add    %rax,%rcx
  444759:	xor    %eax,%eax
  44475b:	callq  412780 <__printf_chk@plt>
  444760:	mov    %rbx,%rdi
  444763:	callq  413820 <SSL_free@plt>
  444768:	jmpq   443e5c <X509_get0_pubkey_bitstr@plt+0x2d48c>
  44476d:	mov    $0x1,%ebp
  444772:	jmp    444760 <X509_get0_pubkey_bitstr@plt+0x2dd90>
  444774:	lea    0x260e5(%rip),%rdi        # 46a860 <_fini+0xd35c>
  44477b:	callq  414fc0 <getenv@plt>
  444780:	test   %rax,%rax
  444783:	mov    %rax,0x237426(%rip)        # 67bbb0 <_edata+0xea8>
  44478a:	jne    444119 <X509_get0_pubkey_bitstr@plt+0x2d749>
  444790:	mov    0x2317e9(%rip),%rax        # 675f80 <_fini+0x218a7c>
  444797:	lea    0x260cd(%rip),%rdi        # 46a86b <_fini+0xd367>
  44479e:	mov    $0x14,%edx
  4447a3:	mov    $0x1,%esi
  4447a8:	mov    (%rax),%rcx
  4447ab:	callq  416880 <fwrite@plt>
  4447b0:	jmpq   444119 <X509_get0_pubkey_bitstr@plt+0x2d749>
  4447b5:	lea    0x23e23(%rip),%rdi        # 4685df <_fini+0xb0db>
  4447bc:	mov    $0x6,%ecx
  4447c1:	mov    %rdx,%rsi
  4447c4:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4447c6:	je     44483b <X509_get0_pubkey_bitstr@plt+0x2de6b>
  4447c8:	lea    0x23e16(%rip),%rdi        # 4685e5 <_fini+0xb0e1>
  4447cf:	mov    $0x6,%ecx
  4447d4:	mov    %rdx,%rsi
  4447d7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4447d9:	je     44484f <X509_get0_pubkey_bitstr@plt+0x2de7f>
  4447db:	lea    0x26078(%rip),%rdi        # 46a85a <_fini+0xd356>
  4447e2:	mov    $0x6,%ecx
  4447e7:	mov    %rdx,%rsi
  4447ea:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4447ec:	jne    444868 <X509_get0_pubkey_bitstr@plt+0x2de98>
  4447ee:	sub    $0x1,%ebx
  4447f1:	je     443fe0 <X509_get0_pubkey_bitstr@plt+0x2d610>
  4447f7:	mov    0x8(%rbp),%rdi
  4447fb:	mov    $0xa,%edx
  444800:	xor    %esi,%esi
  444802:	lea    0x8(%rbp),%r13
  444806:	callq  4155d0 <strtol@plt>
  44480b:	mov    %eax,0x2363b3(%rip)        # 67abc4 <_fini+0x21d6c0>
  444811:	jmpq   443d80 <X509_get0_pubkey_bitstr@plt+0x2d3b0>
  444816:	mov    0x231763(%rip),%rax        # 675f80 <_fini+0x218a7c>
  44481d:	lea    0x26070(%rip),%rdi        # 46a894 <_fini+0xd390>
  444824:	mov    $0x19,%edx
  444829:	mov    $0x1,%esi
  44482e:	mov    (%rax),%rcx
  444831:	callq  416880 <fwrite@plt>
  444836:	jmpq   443e57 <X509_get0_pubkey_bitstr@plt+0x2d487>
  44483b:	callq  414a90 <SSLv2_client_method@plt>
  444840:	mov    %rbp,%r13
  444843:	mov    %rax,0x23734e(%rip)        # 67bb98 <_edata+0xe90>
  44484a:	jmpq   443d80 <X509_get0_pubkey_bitstr@plt+0x2d3b0>
  44484f:	callq  4169a0 <SSLv3_client_method@plt>
  444854:	mov    %rbp,%r13
  444857:	mov    %rax,0x23733a(%rip)        # 67bb98 <_edata+0xe90>
  44485e:	jmpq   443d80 <X509_get0_pubkey_bitstr@plt+0x2d3b0>
  444863:	callq  414c30 <__stack_chk_fail@plt>
  444868:	mov    (%r12),%rdi
  44486c:	lea    0x194b9(%rip),%rsi        # 45dd2c <_fini+0x828>
  444873:	xor    %eax,%eax
  444875:	callq  413c40 <BIO_printf@plt>
  44487a:	movl   $0x1,0x8(%rsp)
  444882:	jmpq   443dcb <X509_get0_pubkey_bitstr@plt+0x2d3fb>
  444887:	nopw   0x0(%rax,%rax,1)
  444890:	mov    (%rdi),%rax
  444893:	cmpb   $0x56,(%rax)
  444896:	sete   %al
  444899:	movzbl %al,%eax
  44489c:	retq   
  44489d:	nopl   (%rax)
  4448a0:	mov    0x18(%rdi),%rdi
  4448a4:	cmpb   $0x30,(%rdi)
  4448a7:	jne    4448b9 <X509_get0_pubkey_bitstr@plt+0x2dee9>
  4448a9:	nopl   0x0(%rax)
  4448b0:	add    $0x1,%rdi
  4448b4:	cmpb   $0x30,(%rdi)
  4448b7:	je     4448b0 <X509_get0_pubkey_bitstr@plt+0x2dee0>
  4448b9:	mov    0x18(%rsi),%rsi
  4448bd:	cmpb   $0x30,(%rsi)
  4448c0:	jne    4448d1 <X509_get0_pubkey_bitstr@plt+0x2df01>
  4448c2:	nopw   0x0(%rax,%rax,1)
  4448c8:	add    $0x1,%rsi
  4448cc:	cmpb   $0x30,(%rsi)
  4448cf:	je     4448c8 <X509_get0_pubkey_bitstr@plt+0x2def8>
  4448d1:	jmpq   4155c0 <strcmp@plt>
  4448d6:	nopw   %cs:0x0(%rax,%rax,1)
  4448e0:	push   %rbx
  4448e1:	mov    %rdi,%rbx
  4448e4:	callq  413180 <UI_OpenSSL@plt>
  4448e9:	mov    %rax,%rdi
  4448ec:	callq  414f40 <UI_method_get_closer@plt>
  4448f1:	mov    %rbx,%rdi
  4448f4:	pop    %rbx
  4448f5:	jmpq   *%rax
  4448f7:	nopw   0x0(%rax,%rax,1)
  444900:	push   %rbp
  444901:	mov    %rdi,%rbp
  444904:	mov    %rsi,%rdi
  444907:	push   %rbx
  444908:	mov    %rsi,%rbx
  44490b:	sub    $0x8,%rsp
  44490f:	callq  414990 <UI_get_input_flags@plt>
  444914:	test   $0x2,%al
  444916:	je     444935 <X509_get0_pubkey_bitstr@plt+0x2df65>
  444918:	mov    %rbp,%rdi
  44491b:	callq  415450 <UI_get0_user_data@plt>
  444920:	test   %rax,%rax
  444923:	je     444935 <X509_get0_pubkey_bitstr@plt+0x2df65>
  444925:	mov    %rbx,%rdi
  444928:	callq  412cb0 <UI_get_string_type@plt>
  44492d:	sub    $0x1,%eax
  444930:	cmp    $0x1,%eax
  444933:	jbe    444950 <X509_get0_pubkey_bitstr@plt+0x2df80>
  444935:	callq  413180 <UI_OpenSSL@plt>
  44493a:	mov    %rax,%rdi
  44493d:	callq  4154d0 <UI_method_get_writer@plt>
  444942:	add    $0x8,%rsp
  444946:	mov    %rbx,%rsi
  444949:	mov    %rbp,%rdi
  44494c:	pop    %rbx
  44494d:	pop    %rbp
  44494e:	jmpq   *%rax
  444950:	mov    %rbp,%rdi
  444953:	callq  415450 <UI_get0_user_data@plt>
  444958:	mov    (%rax),%rax
  44495b:	test   %rax,%rax
  44495e:	je     444935 <X509_get0_pubkey_bitstr@plt+0x2df65>
  444960:	cmpb   $0x0,(%rax)
  444963:	je     444935 <X509_get0_pubkey_bitstr@plt+0x2df65>
  444965:	add    $0x8,%rsp
  444969:	mov    $0x1,%eax
  44496e:	pop    %rbx
  44496f:	pop    %rbp
  444970:	retq   
  444971:	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  444980:	push   %rbp
  444981:	mov    %rdi,%rbp
  444984:	mov    %rsi,%rdi
  444987:	push   %rbx
  444988:	mov    %rsi,%rbx
  44498b:	sub    $0x8,%rsp
  44498f:	callq  414990 <UI_get_input_flags@plt>
  444994:	test   $0x2,%al
  444996:	je     4449b5 <X509_get0_pubkey_bitstr@plt+0x2dfe5>
  444998:	mov    %rbp,%rdi
  44499b:	callq  415450 <UI_get0_user_data@plt>
  4449a0:	test   %rax,%rax
  4449a3:	je     4449b5 <X509_get0_pubkey_bitstr@plt+0x2dfe5>
  4449a5:	mov    %rbx,%rdi
  4449a8:	callq  412cb0 <UI_get_string_type@plt>
  4449ad:	sub    $0x1,%eax
  4449b0:	cmp    $0x1,%eax
  4449b3:	jbe    4449d0 <X509_get0_pubkey_bitstr@plt+0x2e000>
  4449b5:	callq  413180 <UI_OpenSSL@plt>
  4449ba:	mov    %rax,%rdi
  4449bd:	callq  415c70 <UI_method_get_reader@plt>
  4449c2:	add    $0x8,%rsp
  4449c6:	mov    %rbx,%rsi
  4449c9:	mov    %rbp,%rdi
  4449cc:	pop    %rbx
  4449cd:	pop    %rbp
  4449ce:	jmpq   *%rax
  4449d0:	mov    %rbp,%rdi
  4449d3:	callq  415450 <UI_get0_user_data@plt>
  4449d8:	mov    (%rax),%rdx
  4449db:	test   %rdx,%rdx
  4449de:	je     4449b5 <X509_get0_pubkey_bitstr@plt+0x2dfe5>
  4449e0:	cmpb   $0x0,(%rdx)
  4449e3:	je     4449b5 <X509_get0_pubkey_bitstr@plt+0x2dfe5>
  4449e5:	mov    %rbx,%rsi
  4449e8:	mov    %rbp,%rdi
  4449eb:	callq  415d60 <UI_set_result@plt>
  4449f0:	add    $0x8,%rsp
  4449f4:	mov    $0x1,%eax
  4449f9:	pop    %rbx
  4449fa:	pop    %rbp
  4449fb:	retq   
  4449fc:	nopl   0x0(%rax)
  444a00:	push   %rbx
  444a01:	mov    %rdi,%rbx
  444a04:	callq  413180 <UI_OpenSSL@plt>
  444a09:	mov    %rax,%rdi
  444a0c:	callq  414630 <UI_method_get_opener@plt>
  444a11:	mov    %rbx,%rdi
  444a14:	pop    %rbx
  444a15:	jmpq   *%rax
  444a17:	nopw   0x0(%rax,%rax,1)
  444a20:	push   %r15
  444a22:	push   %r14
  444a24:	mov    %edx,%r14d
  444a27:	push   %r13
  444a29:	push   %r12
  444a2b:	mov    %rdi,%r12
  444a2e:	push   %rbp
  444a2f:	mov    %esi,%ebp
  444a31:	push   %rbx
  444a32:	sub    $0x18,%rsp
  444a36:	test   %rcx,%rcx
  444a39:	je     444a78 <X509_get0_pubkey_bitstr@plt+0x2e0a8>
  444a3b:	mov    (%rcx),%rbx
  444a3e:	mov    0x8(%rcx),%r13
  444a42:	test   %rbx,%rbx
  444a45:	je     444a7b <X509_get0_pubkey_bitstr@plt+0x2e0ab>
  444a47:	mov    %rbx,%rdi
  444a4a:	callq  413470 <strlen@plt>
  444a4f:	cmp    %ebp,%eax
  444a51:	mov    %rbx,%rsi
  444a54:	mov    %r12,%rdi
  444a57:	cmovle %eax,%ebp
  444a5a:	movslq %ebp,%rdx
  444a5d:	callq  414250 <memcpy@plt>
  444a62:	mov    %ebp,%eax
  444a64:	add    $0x18,%rsp
  444a68:	pop    %rbx
  444a69:	pop    %rbp
  444a6a:	pop    %r12
  444a6c:	pop    %r13
  444a6e:	pop    %r14
  444a70:	pop    %r15
  444a72:	retq   
  444a73:	nopl   0x0(%rax,%rax,1)
  444a78:	xor    %r13d,%r13d
  444a7b:	mov    0x23716e(%rip),%rdi        # 67bbf0 <_edata+0xee8>
  444a82:	callq  4136a0 <UI_new_method@plt>
  444a87:	mov    %rax,%rbx
  444a8a:	xor    %eax,%eax
  444a8c:	test   %rbx,%rbx
  444a8f:	je     444a64 <X509_get0_pubkey_bitstr@plt+0x2e094>
  444a91:	lea    0x26088(%rip),%rsi        # 46ab20 <_fini+0xd61c>
  444a98:	mov    %r13,%rdx
  444a9b:	mov    %rbx,%rdi
  444a9e:	callq  414940 <UI_construct_prompt@plt>
  444aa3:	xor    %r8d,%r8d
  444aa6:	xor    %ecx,%ecx
  444aa8:	mov    %rax,%r15
  444aab:	mov    $0x1,%edx
  444ab0:	mov    $0x1,%esi
  444ab5:	mov    %rbx,%rdi
  444ab8:	callq  4149e0 <UI_ctrl@plt>
  444abd:	mov    $0x1fff,%r9d
  444ac3:	mov    $0x4,%r8d
  444ac9:	mov    %r12,%rcx
  444acc:	mov    $0x2,%edx
  444ad1:	mov    %r15,%rsi
  444ad4:	mov    %rbx,%rdi
  444ad7:	callq  413b80 <UI_add_input_string@plt>
  444adc:	test   %eax,%eax
  444ade:	mov    %eax,%r13d
  444ae1:	jns    444b58 <X509_get0_pubkey_bitstr@plt+0x2e188>
  444ae3:	xor    %r14d,%r14d
  444ae6:	test   %r13d,%r13d
  444ae9:	jns    444b08 <X509_get0_pubkey_bitstr@plt+0x2e138>
  444aeb:	jmp    444b17 <X509_get0_pubkey_bitstr@plt+0x2e147>
  444aed:	nopl   (%rax)
  444af0:	xor    %r8d,%r8d
  444af3:	xor    %ecx,%ecx
  444af5:	xor    %edx,%edx
  444af7:	mov    $0x2,%esi
  444afc:	mov    %rbx,%rdi
  444aff:	callq  4149e0 <UI_ctrl@plt>
  444b04:	test   %eax,%eax
  444b06:	je     444b17 <X509_get0_pubkey_bitstr@plt+0x2e147>
  444b08:	mov    %rbx,%rdi
  444b0b:	callq  414170 <UI_process@plt>
  444b10:	test   %eax,%eax
  444b12:	mov    %eax,%r13d
  444b15:	js     444af0 <X509_get0_pubkey_bitstr@plt+0x2e120>
  444b17:	test   %r14,%r14
  444b1a:	je     444b2e <X509_get0_pubkey_bitstr@plt+0x2e15e>
  444b1c:	mov    %r14,%rdi
  444b1f:	mov    %ebp,%esi
  444b21:	callq  413ef0 <OPENSSL_cleanse@plt>
  444b26:	mov    %r14,%rdi
  444b29:	callq  415020 <CRYPTO_free@plt>
  444b2e:	test   %r13d,%r13d
  444b31:	js     444ba0 <X509_get0_pubkey_bitstr@plt+0x2e1d0>
  444b33:	mov    %r12,%rdi
  444b36:	callq  413470 <strlen@plt>
  444b3b:	mov    %eax,%ebp
  444b3d:	mov    %rbx,%rdi
  444b40:	callq  412e20 <UI_free@plt>
  444b45:	mov    %r15,%rdi
  444b48:	callq  415020 <CRYPTO_free@plt>
  444b4d:	mov    %ebp,%eax
  444b4f:	jmpq   444a64 <X509_get0_pubkey_bitstr@plt+0x2e094>
  444b54:	nopl   0x0(%rax)
  444b58:	test   %r14d,%r14d
  444b5b:	je     444ae3 <X509_get0_pubkey_bitstr@plt+0x2e113>
  444b5d:	lea    0x25fc8(%rip),%rsi        # 46ab2c <_fini+0xd628>
  444b64:	mov    $0x250,%edx
  444b69:	mov    %ebp,%edi
  444b6b:	callq  413d50 <CRYPTO_malloc@plt>
  444b70:	mov    %r12,(%rsp)
  444b74:	mov    $0x1fff,%r9d
  444b7a:	mov    $0x4,%r8d
  444b80:	mov    %rax,%rcx
  444b83:	mov    $0x2,%edx
  444b88:	mov    %r15,%rsi
  444b8b:	mov    %rbx,%rdi
  444b8e:	mov    %rax,%r14
  444b91:	callq  413020 <UI_add_verify_string@plt>
  444b96:	mov    %eax,%r13d
  444b99:	jmpq   444ae6 <X509_get0_pubkey_bitstr@plt+0x2e116>
  444b9e:	xchg   %ax,%ax
  444ba0:	cmp    $0xffffffff,%r13d
  444ba4:	jne    444bd9 <X509_get0_pubkey_bitstr@plt+0x2e209>
  444ba6:	lea    0x236193(%rip),%r13        # 67ad40 <_edata+0x38>
  444bad:	lea    0x25f7f(%rip),%rsi        # 46ab33 <_fini+0xd62f>
  444bb4:	xor    %eax,%eax
  444bb6:	mov    0x0(%r13),%rdi
  444bba:	callq  413c40 <BIO_printf@plt>
  444bbf:	mov    0x0(%r13),%rdi
  444bc3:	callq  413f40 <ERR_print_errors@plt>
  444bc8:	mov    %ebp,%esi
  444bca:	mov    %r12,%rdi
  444bcd:	xor    %ebp,%ebp
  444bcf:	callq  413ef0 <OPENSSL_cleanse@plt>
  444bd4:	jmpq   444b3d <X509_get0_pubkey_bitstr@plt+0x2e16d>
  444bd9:	cmp    $0xfffffffe,%r13d
  444bdd:	jne    444c08 <X509_get0_pubkey_bitstr@plt+0x2e238>
  444bdf:	lea    0x23615a(%rip),%rax        # 67ad40 <_edata+0x38>
  444be6:	lea    0x25f5c(%rip),%rsi        # 46ab49 <_fini+0xd645>
  444bed:	mov    (%rax),%rdi
  444bf0:	xor    %eax,%eax
  444bf2:	callq  413c40 <BIO_printf@plt>
  444bf7:	mov    %ebp,%esi
  444bf9:	mov    %r12,%rdi
  444bfc:	xor    %ebp,%ebp
  444bfe:	callq  413ef0 <OPENSSL_cleanse@plt>
  444c03:	jmpq   444b3d <X509_get0_pubkey_bitstr@plt+0x2e16d>
  444c08:	xor    %ebp,%ebp
  444c0a:	jmpq   444b3d <X509_get0_pubkey_bitstr@plt+0x2e16d>
  444c0f:	nop
  444c10:	push   %r15
  444c12:	mov    %rdx,%r15
  444c15:	push   %r14
  444c17:	mov    %r8d,%r14d
  444c1a:	push   %r13
  444c1c:	push   %r12
  444c1e:	mov    %rsi,%r12
  444c21:	push   %rbp
  444c22:	push   %rbx
  444c23:	sub    $0x28,%rsp
  444c27:	mov    %rdi,(%rsp)
  444c2b:	mov    %rcx,0x8(%rsp)
  444c30:	mov    %fs:0x28,%rax
  444c39:	mov    %rax,0x18(%rsp)
  444c3e:	xor    %eax,%eax
  444c40:	callq  414b40 <BUF_MEM_new@plt>
  444c45:	mov    %rax,%rbp
  444c48:	callq  414b50 <EVP_PKEY_new@plt>
  444c4d:	test   %rax,%rax
  444c50:	mov    %rax,%r13
  444c53:	je     444c95 <X509_get0_pubkey_bitstr@plt+0x2e2c5>
  444c55:	test   %rbp,%rbp
  444c58:	je     444c95 <X509_get0_pubkey_bitstr@plt+0x2e2c5>
  444c5a:	xor    %ebx,%ebx
  444c5c:	jmp    444c80 <X509_get0_pubkey_bitstr@plt+0x2e2b0>
  444c5e:	xchg   %ax,%ax
  444c60:	movslq %ebx,%rsi
  444c63:	add    0x8(%rbp),%rsi
  444c67:	mov    $0x2800,%edx
  444c6c:	mov    %r12,%rdi
  444c6f:	callq  413930 <BIO_read@plt>
  444c74:	add    %eax,%ebx
  444c76:	test   %eax,%eax
  444c78:	je     444cd0 <X509_get0_pubkey_bitstr@plt+0x2e300>
  444c7a:	js     444d18 <X509_get0_pubkey_bitstr@plt+0x2e348>
  444c80:	lea    0x2800(%rbx),%esi
  444c86:	mov    %rbp,%rdi
  444c89:	movslq %esi,%rsi
  444c8c:	callq  4144f0 <BUF_MEM_grow_clean@plt>
  444c91:	test   %eax,%eax
  444c93:	jne    444c60 <X509_get0_pubkey_bitstr@plt+0x2e290>
  444c95:	mov    %rbp,%rdi
  444c98:	callq  415150 <BUF_MEM_free@plt>
  444c9d:	mov    %r13,%rdi
  444ca0:	callq  412b00 <EVP_PKEY_free@plt>
  444ca5:	xor    %eax,%eax
  444ca7:	mov    0x18(%rsp),%rcx
  444cac:	xor    %fs:0x28,%rcx
  444cb5:	jne    444d37 <X509_get0_pubkey_bitstr@plt+0x2e367>
  444cbb:	add    $0x28,%rsp
  444cbf:	pop    %rbx
  444cc0:	pop    %rbp
  444cc1:	pop    %r12
  444cc3:	pop    %r13
  444cc5:	pop    %r14
  444cc7:	pop    %r15
  444cc9:	retq   
  444cca:	nopw   0x0(%rax,%rax,1)
  444cd0:	mov    0x8(%rbp),%rax
  444cd4:	xor    %r8d,%r8d
  444cd7:	lea    0x10(%rsp),%rsi
  444cdc:	cmp    $0x8,%r14d
  444ce0:	movslq %ebx,%rdx
  444ce3:	sete   %r8b
  444ce7:	xor    %ecx,%ecx
  444ce9:	xor    %edi,%edi
  444ceb:	mov    %rax,0x10(%rsp)
  444cf0:	callq  413080 <d2i_RSA_NET@plt>
  444cf5:	test   %rax,%rax
  444cf8:	mov    %rax,%rbx
  444cfb:	je     444c95 <X509_get0_pubkey_bitstr@plt+0x2e2c5>
  444cfd:	mov    %rbp,%rdi
  444d00:	callq  415150 <BUF_MEM_free@plt>
  444d05:	mov    %rbx,%rsi
  444d08:	mov    %r13,%rdi
  444d0b:	callq  4156f0 <EVP_PKEY_set1_RSA@plt>
  444d10:	mov    %r13,%rax
  444d13:	jmp    444ca7 <X509_get0_pubkey_bitstr@plt+0x2e2d7>
  444d15:	nopl   (%rax)
  444d18:	mov    0x8(%rsp),%rdx
  444d1d:	mov    (%rsp),%rdi
  444d21:	lea    0x25e2b(%rip),%rsi        # 46ab53 <_fini+0xd64f>
  444d28:	mov    %r15,%rcx
  444d2b:	xor    %eax,%eax
  444d2d:	callq  413c40 <BIO_printf@plt>
  444d32:	jmpq   444c95 <X509_get0_pubkey_bitstr@plt+0x2e2c5>
  444d37:	callq  414c30 <__stack_chk_fail@plt>
  444d3c:	nopl   0x0(%rax)
  444d40:	xor    %eax,%eax
  444d42:	test   %rsi,%rsi
  444d45:	je     444e27 <X509_get0_pubkey_bitstr@plt+0x2e457>
  444d4b:	push   %r15
  444d4d:	push   %r14
  444d4f:	mov    %rdi,%r14
  444d52:	mov    %rsi,%rdi
  444d55:	push   %r13
  444d57:	mov    %rdx,%r13
  444d5a:	push   %r12
  444d5c:	push   %rbp
  444d5d:	xor    %ebp,%ebp
  444d5f:	push   %rbx
  444d60:	sub    $0x18,%rsp
  444d64:	callq  413740 <X509V3_parse_list@plt>
  444d69:	mov    %rax,%r12
  444d6c:	movl   $0x1,0xc(%rsp)
  444d74:	mov    %r12,%rdi
  444d77:	callq  4156d0 <sk_num@plt>
  444d7c:	cmp    %eax,%ebp
  444d7e:	jge    444e06 <X509_get0_pubkey_bitstr@plt+0x2e436>
  444d84:	nopl   0x0(%rax)
  444d88:	mov    %ebp,%esi
  444d8a:	mov    %r12,%rdi
  444d8d:	callq  412b30 <sk_value@plt>
  444d92:	mov    0x8(%rax),%rbx
  444d96:	movzbl (%rbx),%eax
  444d99:	cmp    $0x2d,%al
  444d9b:	je     444e40 <X509_get0_pubkey_bitstr@plt+0x2e470>
  444da1:	cmp    $0x2b,%al
  444da3:	movb   $0x1,0xb(%rsp)
  444da8:	sete   %al
  444dab:	movzbl %al,%eax
  444dae:	add    %rax,%rbx
  444db1:	mov    0x0(%r13),%rsi
  444db5:	test   %rsi,%rsi
  444db8:	je     444e30 <X509_get0_pubkey_bitstr@plt+0x2e460>
  444dba:	mov    %r13,%r15
  444dbd:	jmp    444dcc <X509_get0_pubkey_bitstr@plt+0x2e3fc>
  444dbf:	nop
  444dc0:	add    $0x18,%r15
  444dc4:	mov    (%r15),%rsi
  444dc7:	test   %rsi,%rsi
  444dca:	je     444e30 <X509_get0_pubkey_bitstr@plt+0x2e460>
  444dcc:	mov    %rbx,%rdi
  444dcf:	callq  414af0 <strcasecmp@plt>
  444dd4:	test   %eax,%eax
  444dd6:	jne    444dc0 <X509_get0_pubkey_bitstr@plt+0x2e3f0>
  444dd8:	mov    0x10(%r15),%rax
  444ddc:	not    %rax
  444ddf:	and    (%r14),%rax
  444de2:	cmpb   $0x0,0xb(%rsp)
  444de7:	mov    %rax,(%r14)
  444dea:	je     444e50 <X509_get0_pubkey_bitstr@plt+0x2e480>
  444dec:	or     0x8(%r15),%rax
  444df0:	mov    %rax,(%r14)
  444df3:	add    $0x1,%ebp
  444df6:	mov    %r12,%rdi
  444df9:	callq  4156d0 <sk_num@plt>
  444dfe:	cmp    %eax,%ebp
  444e00:	jl     444d88 <X509_get0_pubkey_bitstr@plt+0x2e3b8>
  444e06:	mov    0x2310fb(%rip),%rsi        # 675f08 <_fini+0x218a04>
  444e0d:	mov    %r12,%rdi
  444e10:	callq  416250 <sk_pop_free@plt>
  444e15:	mov    0xc(%rsp),%eax
  444e19:	add    $0x18,%rsp
  444e1d:	pop    %rbx
  444e1e:	pop    %rbp
  444e1f:	pop    %r12
  444e21:	pop    %r13
  444e23:	pop    %r14
  444e25:	pop    %r15
  444e27:	repz retq 
  444e29:	nopl   0x0(%rax)
  444e30:	movl   $0x0,0xc(%rsp)
  444e38:	jmp    444df3 <X509_get0_pubkey_bitstr@plt+0x2e423>
  444e3a:	nopw   0x0(%rax,%rax,1)
  444e40:	add    $0x1,%rbx
  444e44:	movb   $0x0,0xb(%rsp)
  444e49:	jmpq   444db1 <X509_get0_pubkey_bitstr@plt+0x2e3e1>
  444e4e:	xchg   %ax,%ax
  444e50:	mov    0x8(%r15),%rdx
  444e54:	not    %rdx
  444e57:	and    %rdx,%rax
  444e5a:	mov    %rax,(%r14)
  444e5d:	jmp    444df3 <X509_get0_pubkey_bitstr@plt+0x2e423>
  444e5f:	nop
  444e60:	mov    0x28(%rdi),%rdi
  444e64:	jmpq   4168f0 <lh_strhash@plt>
  444e69:	nopl   0x0(%rax)
  444e70:	mov    0x18(%rdi),%rdi
  444e74:	cmpb   $0x30,(%rdi)
  444e77:	jne    444e89 <X509_get0_pubkey_bitstr@plt+0x2e4b9>
  444e79:	nopl   0x0(%rax)
  444e80:	add    $0x1,%rdi
  444e84:	cmpb   $0x30,(%rdi)
  444e87:	je     444e80 <X509_get0_pubkey_bitstr@plt+0x2e4b0>
  444e89:	jmpq   4168f0 <lh_strhash@plt>
  444e8e:	xchg   %ax,%ax
  444e90:	push   %r12
  444e92:	xor    %eax,%eax
  444e94:	mov    %rdi,%r12
  444e97:	push   %rbp
  444e98:	mov    %rdx,%rbp
  444e9b:	mov    %rsi,%rdx
  444e9e:	lea    0x25cc2(%rip),%rsi        # 46ab67 <_fini+0xd663>
  444ea5:	push   %rbx
  444ea6:	callq  413c40 <BIO_printf@plt>
  444eab:	test   %rbp,%rbp
  444eae:	je     444f00 <X509_get0_pubkey_bitstr@plt+0x2e530>
  444eb0:	lea    0x1fce8(%rip),%rsi        # 464b9f <_fini+0x769b>
  444eb7:	mov    %r12,%rdi
  444eba:	xor    %ebx,%ebx
  444ebc:	callq  413b70 <BIO_puts@plt>
  444ec1:	jmp    444ee5 <X509_get0_pubkey_bitstr@plt+0x2e515>
  444ec3:	nopl   0x0(%rax,%rax,1)
  444ec8:	mov    %ebx,%esi
  444eca:	mov    %rbp,%rdi
  444ecd:	add    $0x1,%ebx
  444ed0:	callq  412b30 <sk_value@plt>
  444ed5:	mov    $0x2,%edx
  444eda:	mov    %rax,%rsi
  444edd:	mov    %r12,%rdi
  444ee0:	callq  4162a0 <X509_POLICY_NODE_print@plt>
  444ee5:	mov    %rbp,%rdi
  444ee8:	callq  4156d0 <sk_num@plt>
  444eed:	cmp    %eax,%ebx
  444eef:	jl     444ec8 <X509_get0_pubkey_bitstr@plt+0x2e4f8>
  444ef1:	pop    %rbx
  444ef2:	pop    %rbp
  444ef3:	pop    %r12
  444ef5:	retq   
  444ef6:	nopw   %cs:0x0(%rax,%rax,1)
  444f00:	pop    %rbx
  444f01:	pop    %rbp
  444f02:	mov    %r12,%rdi
  444f05:	lea    0x25c68(%rip),%rsi        # 46ab74 <_fini+0xd670>
  444f0c:	pop    %r12
  444f0e:	jmpq   413b70 <BIO_puts@plt>
  444f13:	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  444f20:	push   %r13
  444f22:	mov    %rsi,%r8
  444f25:	mov    %rdi,%r13
  444f28:	push   %r12
  444f2a:	push   %rbp
  444f2b:	mov    %edx,%ebp
  444f2d:	push   %rbx
  444f2e:	sub    $0x418,%rsp
  444f35:	mov    %fs:0x28,%rax
  444f3e:	mov    %rax,0x408(%rsp)
  444f46:	xor    %eax,%eax
  444f48:	test   %edx,%edx
  444f4a:	je     444fe0 <X509_get0_pubkey_bitstr@plt+0x2e610>
  444f50:	mov    0x236c91(%rip),%rdi        # 67bbe8 <_edata+0xee0>
  444f57:	test   %rdi,%rdi
  444f5a:	je     444fe0 <X509_get0_pubkey_bitstr@plt+0x2e610>
  444f60:	mov    $0x400,%edx
  444f65:	mov    %rsp,%rsi
  444f68:	mov    %rsp,%rbx
  444f6b:	callq  4138a0 <BIO_gets@plt>
  444f70:	cmp    $0x1,%ebp
  444f73:	mov    %eax,%r12d
  444f76:	je     444f8f <X509_get0_pubkey_bitstr@plt+0x2e5bf>
  444f78:	mov    0x236c69(%rip),%rdi        # 67bbe8 <_edata+0xee0>
  444f7f:	callq  416570 <BIO_free_all@plt>
  444f84:	movq   $0x0,0x236c59(%rip)        # 67bbe8 <_edata+0xee0>
  444f8f:	test   %r12d,%r12d
  444f92:	jle    44513b <X509_get0_pubkey_bitstr@plt+0x2e76b>
  444f98:	mov    $0xa,%esi
  444f9d:	mov    %rbx,%rdi
  444fa0:	callq  413220 <strchr@plt>
  444fa5:	test   %rax,%rax
  444fa8:	je     444fad <X509_get0_pubkey_bitstr@plt+0x2e5dd>
  444faa:	movb   $0x0,(%rax)
  444fad:	mov    %rbx,%rdi
  444fb0:	callq  415630 <BUF_strdup@plt>
  444fb5:	mov    0x408(%rsp),%rcx
  444fbd:	xor    %fs:0x28,%rcx
  444fc6:	jne    445153 <X509_get0_pubkey_bitstr@plt+0x2e783>
  444fcc:	add    $0x418,%rsp
  444fd3:	pop    %rbx
  444fd4:	pop    %rbp
  444fd5:	pop    %r12
  444fd7:	pop    %r13
  444fd9:	retq   
  444fda:	nopw   0x0(%rax,%rax,1)
  444fe0:	lea    0x25b97(%rip),%rdi        # 46ab7e <_fini+0xd67a>
  444fe7:	mov    $0x5,%ecx
  444fec:	mov    %r8,%rsi
  444fef:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  444ff1:	je     445060 <X509_get0_pubkey_bitstr@plt+0x2e690>
  444ff3:	lea    0x25b9e(%rip),%rdi        # 46ab98 <_fini+0xd694>
  444ffa:	mov    $0x3,%ecx
  444fff:	mov    %r8,%rsi
  445002:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  445004:	je     4450a8 <X509_get0_pubkey_bitstr@plt+0x2e6d8>
  44500a:	lea    0x1b7ba(%rip),%rdi        # 4607cb <_fini+0x32c7>
  445011:	mov    $0x6,%ecx
  445016:	mov    %r8,%rsi
  445019:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44501b:	jne    445120 <X509_get0_pubkey_bitstr@plt+0x2e750>
  445021:	mov    0x230ee8(%rip),%rax        # 675f10 <_fini+0x218a0c>
  445028:	xor    %esi,%esi
  44502a:	mov    (%rax),%rdi
  44502d:	callq  4161e0 <BIO_new_fp@plt>
  445032:	test   %rax,%rax
  445035:	mov    %rax,%rdi
  445038:	mov    %rax,0x236ba9(%rip)        # 67bbe8 <_edata+0xee0>
  44503f:	jne    444f60 <X509_get0_pubkey_bitstr@plt+0x2e590>
  445045:	lea    0x25b50(%rip),%rsi        # 46ab9c <_fini+0xd698>
  44504c:	mov    %r13,%rdi
  44504f:	xor    %eax,%eax
  445051:	callq  413c40 <BIO_printf@plt>
  445056:	xor    %eax,%eax
  445058:	jmpq   444fb5 <X509_get0_pubkey_bitstr@plt+0x2e5e5>
  44505d:	nopl   (%rax)
  445060:	lea    0x5(%r8),%rbx
  445064:	lea    0x191c2(%rip),%rsi        # 45e22d <_fini+0xd29>
  44506b:	mov    %rbx,%rdi
  44506e:	callq  412ba0 <BIO_new_file@plt>
  445073:	test   %rax,%rax
  445076:	mov    %rax,%rdi
  445079:	mov    %rax,0x236b68(%rip)        # 67bbe8 <_edata+0xee0>
  445080:	jne    444f60 <X509_get0_pubkey_bitstr@plt+0x2e590>
  445086:	lea    0x25af7(%rip),%rsi        # 46ab84 <_fini+0xd680>
  44508d:	mov    %rbx,%rdx
  445090:	mov    %r13,%rdi
  445093:	xor    %eax,%eax
  445095:	callq  413c40 <BIO_printf@plt>
  44509a:	xor    %eax,%eax
  44509c:	jmpq   444fb5 <X509_get0_pubkey_bitstr@plt+0x2e5e5>
  4450a1:	nopl   0x0(%rax)
  4450a8:	lea    0x3(%r8),%rbx
  4450ac:	xor    %esi,%esi
  4450ae:	mov    $0xa,%edx
  4450b3:	mov    %rbx,%rdi
  4450b6:	callq  4155d0 <strtol@plt>
  4450bb:	test   %eax,%eax
  4450bd:	jns    4450e0 <X509_get0_pubkey_bitstr@plt+0x2e710>
  4450bf:	lea    0x25ff2(%rip),%rsi        # 46b0b8 <_fini+0xdbb4>
  4450c6:	mov    %rbx,%rdx
  4450c9:	mov    %r13,%rdi
  4450cc:	xor    %eax,%eax
  4450ce:	callq  413c40 <BIO_printf@plt>
  4450d3:	xor    %eax,%eax
  4450d5:	jmpq   444fb5 <X509_get0_pubkey_bitstr@plt+0x2e5e5>
  4450da:	nopw   0x0(%rax,%rax,1)
  4450e0:	xor    %esi,%esi
  4450e2:	mov    %eax,%edi
  4450e4:	callq  416200 <BIO_new_fd@plt>
  4450e9:	test   %rax,%rax
  4450ec:	mov    %rax,0x236af5(%rip)        # 67bbe8 <_edata+0xee0>
  4450f3:	je     4450bf <X509_get0_pubkey_bitstr@plt+0x2e6ef>
  4450f5:	callq  413840 <BIO_f_buffer@plt>
  4450fa:	mov    %rax,%rdi
  4450fd:	callq  414a20 <BIO_new@plt>
  445102:	mov    0x236adf(%rip),%rsi        # 67bbe8 <_edata+0xee0>
  445109:	mov    %rax,%rdi
  44510c:	callq  415ac0 <BIO_push@plt>
  445111:	mov    %rax,%rdi
  445114:	mov    %rax,0x236acd(%rip)        # 67bbe8 <_edata+0xee0>
  44511b:	jmpq   444f60 <X509_get0_pubkey_bitstr@plt+0x2e590>
  445120:	lea    0x25fb9(%rip),%rsi        # 46b0e0 <_fini+0xdbdc>
  445127:	mov    %r8,%rdx
  44512a:	mov    %r13,%rdi
  44512d:	xor    %eax,%eax
  44512f:	callq  413c40 <BIO_printf@plt>
  445134:	xor    %eax,%eax
  445136:	jmpq   444fb5 <X509_get0_pubkey_bitstr@plt+0x2e5e5>
  44513b:	lea    0x25fbe(%rip),%rsi        # 46b100 <_fini+0xdbfc>
  445142:	mov    %r13,%rdi
  445145:	xor    %eax,%eax
  445147:	callq  413c40 <BIO_printf@plt>
  44514c:	xor    %eax,%eax
  44514e:	jmpq   444fb5 <X509_get0_pubkey_bitstr@plt+0x2e5e5>
  445153:	callq  414c30 <__stack_chk_fail@plt>
  445158:	nopl   0x0(%rax,%rax,1)
  445160:	push   %rbp
  445161:	mov    $0x5,%ecx
  445166:	mov    %rsi,%rax
  445169:	push   %rbx
  44516a:	mov    %rdi,%rbx
  44516d:	lea    0x25a42(%rip),%rdi        # 46abb6 <_fini+0xd6b2>
  445174:	sub    $0x8,%rsp
  445178:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44517a:	je     4451c0 <X509_get0_pubkey_bitstr@plt+0x2e7f0>
  44517c:	lea    0x25a39(%rip),%rdi        # 46abbc <_fini+0xd6b8>
  445183:	mov    $0x4,%ecx
  445188:	mov    %rax,%rsi
  44518b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44518d:	je     4451a0 <X509_get0_pubkey_bitstr@plt+0x2e7d0>
  44518f:	add    $0x8,%rsp
  445193:	mov    %rbx,%rdi
  445196:	mov    %rax,%rsi
  445199:	pop    %rbx
  44519a:	pop    %rbp
  44519b:	jmpq   444f20 <X509_get0_pubkey_bitstr@plt+0x2e550>
  4451a0:	lea    0x4(%rax),%rbp
  4451a4:	mov    %rbp,%rdi
  4451a7:	callq  414fc0 <getenv@plt>
  4451ac:	test   %rax,%rax
  4451af:	je     4451cf <X509_get0_pubkey_bitstr@plt+0x2e7ff>
  4451b1:	add    $0x8,%rsp
  4451b5:	mov    %rax,%rdi
  4451b8:	pop    %rbx
  4451b9:	pop    %rbp
  4451ba:	jmpq   415630 <BUF_strdup@plt>
  4451bf:	nop
  4451c0:	add    $0x8,%rsp
  4451c4:	lea    0x5(%rax),%rdi
  4451c8:	pop    %rbx
  4451c9:	pop    %rbp
  4451ca:	jmpq   415630 <BUF_strdup@plt>
  4451cf:	lea    0x25f52(%rip),%rsi        # 46b128 <_fini+0xdc24>
  4451d6:	mov    %rbp,%rdx
  4451d9:	mov    %rbx,%rdi
  4451dc:	xor    %eax,%eax
  4451de:	callq  413c40 <BIO_printf@plt>
  4451e3:	add    $0x8,%rsp
  4451e7:	xor    %eax,%eax
  4451e9:	pop    %rbx
  4451ea:	pop    %rbp
  4451eb:	retq   
  4451ec:	nopl   0x0(%rax)
  4451f0:	push   %r15
  4451f2:	mov    %rdi,%r15
  4451f5:	push   %r14
  4451f7:	push   %r13
  4451f9:	push   %r12
  4451fb:	mov    %r8,%r12
  4451fe:	push   %rbp
  4451ff:	push   %rbx
  445200:	mov    %rsi,%rbx
  445203:	sub    $0x28,%rsp
  445207:	mov    %fs:0x28,%rax
  445210:	mov    %rax,0x18(%rsp)
  445215:	xor    %eax,%eax
  445217:	cmp    $0x3,%edx
  44521a:	mov    0x60(%rsp),%r14
  44521f:	mov    %rcx,(%rsp)
  445223:	mov    %rsi,0x8(%rsp)
  445228:	jne    4453f0 <X509_get0_pubkey_bitstr@plt+0x2ea20>
  44522e:	test   %rsi,%rsi
  445231:	mov    %r9,%r13
  445234:	je     445408 <X509_get0_pubkey_bitstr@plt+0x2ea38>
  44523a:	lea    0x18fec(%rip),%rsi        # 45e22d <_fini+0xd29>
  445241:	mov    %rbx,%rdi
  445244:	callq  412ba0 <BIO_new_file@plt>
  445249:	test   %rax,%rax
  44524c:	mov    %rax,%rbp
  44524f:	mov    %rbx,%rcx
  445252:	je     445430 <X509_get0_pubkey_bitstr@plt+0x2ea60>
  445258:	lea    -0x83f(%rip),%rdx        # 444a20 <X509_get0_pubkey_bitstr@plt+0x2e050>
  44525f:	xor    %esi,%esi
  445261:	mov    %rsp,%rcx
  445264:	mov    %rbp,%rdi
  445267:	callq  4137b0 <PEM_X509_INFO_read_bio@plt>
  44526c:	mov    %rbp,%rdi
  44526f:	mov    %rax,%r12
  445272:	callq  413960 <BIO_free@plt>
  445277:	test   %r13,%r13
  44527a:	je     44528e <X509_get0_pubkey_bitstr@plt+0x2e8be>
  44527c:	callq  412cd0 <sk_new_null@plt>
  445281:	test   %rax,%rax
  445284:	mov    %rax,0x0(%r13)
  445288:	je     445340 <X509_get0_pubkey_bitstr@plt+0x2e970>
  44528e:	test   %r14,%r14
  445291:	je     4452a4 <X509_get0_pubkey_bitstr@plt+0x2e8d4>
  445293:	callq  412cd0 <sk_new_null@plt>
  445298:	test   %rax,%rax
  44529b:	mov    %rax,(%r14)
  44529e:	je     445340 <X509_get0_pubkey_bitstr@plt+0x2e970>
  4452a4:	xor    %ebp,%ebp
  4452a6:	jmp    445303 <X509_get0_pubkey_bitstr@plt+0x2e933>
  4452a8:	nopl   0x0(%rax,%rax,1)
  4452b0:	mov    %ebp,%esi
  4452b2:	mov    %r12,%rdi
  4452b5:	callq  412b30 <sk_value@plt>
  4452ba:	mov    (%rax),%rsi
  4452bd:	mov    %rax,%rbx
  4452c0:	test   %rsi,%rsi
  4452c3:	je     4452de <X509_get0_pubkey_bitstr@plt+0x2e90e>
  4452c5:	test   %r13,%r13
  4452c8:	je     4452de <X509_get0_pubkey_bitstr@plt+0x2e90e>
  4452ca:	mov    0x0(%r13),%rdi
  4452ce:	callq  412fe0 <sk_push@plt>
  4452d3:	test   %eax,%eax
  4452d5:	je     445340 <X509_get0_pubkey_bitstr@plt+0x2e970>
  4452d7:	movq   $0x0,(%rbx)
  4452de:	mov    0x8(%rbx),%rsi
  4452e2:	test   %rsi,%rsi
  4452e5:	je     445300 <X509_get0_pubkey_bitstr@plt+0x2e930>
  4452e7:	test   %r14,%r14
  4452ea:	je     445300 <X509_get0_pubkey_bitstr@plt+0x2e930>
  4452ec:	mov    (%r14),%rdi
  4452ef:	callq  412fe0 <sk_push@plt>
  4452f4:	test   %eax,%eax
  4452f6:	je     445340 <X509_get0_pubkey_bitstr@plt+0x2e970>
  4452f8:	movq   $0x0,0x8(%rbx)
  445300:	add    $0x1,%ebp
  445303:	mov    %r12,%rdi
  445306:	callq  4156d0 <sk_num@plt>
  44530b:	cmp    %eax,%ebp
  44530d:	jl     4452b0 <X509_get0_pubkey_bitstr@plt+0x2e8e0>
  44530f:	xor    %ebx,%ebx
  445311:	test   %r13,%r13
  445314:	je     445326 <X509_get0_pubkey_bitstr@plt+0x2e956>
  445316:	mov    0x0(%r13),%rdi
  44531a:	xor    %ebx,%ebx
  44531c:	callq  4156d0 <sk_num@plt>
  445321:	test   %eax,%eax
  445323:	setg   %bl
  445326:	test   %r14,%r14
  445329:	je     445342 <X509_get0_pubkey_bitstr@plt+0x2e972>
  44532b:	mov    (%r14),%rdi
  44532e:	callq  4156d0 <sk_num@plt>
  445333:	test   %eax,%eax
  445335:	mov    $0x1,%eax
  44533a:	cmovg  %eax,%ebx
  44533d:	jmp    445342 <X509_get0_pubkey_bitstr@plt+0x2e972>
  44533f:	nop
  445340:	xor    %ebx,%ebx
  445342:	test   %r12,%r12
  445345:	je     445356 <X509_get0_pubkey_bitstr@plt+0x2e986>
  445347:	mov    0x230b8a(%rip),%rsi        # 675ed8 <_fini+0x2189d4>
  44534e:	mov    %r12,%rdi
  445351:	callq  416250 <sk_pop_free@plt>
  445356:	test   %ebx,%ebx
  445358:	mov    $0x1,%eax
  44535d:	jne    4453c7 <X509_get0_pubkey_bitstr@plt+0x2e9f7>
  44535f:	test   %r13,%r13
  445362:	je     44537c <X509_get0_pubkey_bitstr@plt+0x2e9ac>
  445364:	mov    0x230c0d(%rip),%rsi        # 675f78 <_fini+0x218a74>
  44536b:	mov    0x0(%r13),%rdi
  44536f:	callq  416250 <sk_pop_free@plt>
  445374:	movq   $0x0,0x0(%r13)
  44537c:	test   %r14,%r14
  44537f:	je     445397 <X509_get0_pubkey_bitstr@plt+0x2e9c7>
  445381:	mov    0x230c70(%rip),%rsi        # 675ff8 <_fini+0x218af4>
  445388:	mov    (%r14),%rdi
  44538b:	callq  416250 <sk_pop_free@plt>
  445390:	movq   $0x0,(%r14)
  445397:	lea    0x1882b(%rip),%rax        # 45dbc9 <_fini+0x6c5>
  44539e:	lea    0x18811(%rip),%rdx        # 45dbb6 <_fini+0x6b2>
  4453a5:	test   %r13,%r13
  4453a8:	lea    0x25827(%rip),%rsi        # 46abd6 <_fini+0xd6d2>
  4453af:	mov    %r15,%rdi
  4453b2:	cmove  %rax,%rdx
  4453b6:	xor    %eax,%eax
  4453b8:	callq  413c40 <BIO_printf@plt>
  4453bd:	mov    %r15,%rdi
  4453c0:	callq  413f40 <ERR_print_errors@plt>
  4453c5:	xor    %eax,%eax
  4453c7:	mov    0x18(%rsp),%rcx
  4453cc:	xor    %fs:0x28,%rcx
  4453d5:	jne    445453 <X509_get0_pubkey_bitstr@plt+0x2ea83>
  4453d7:	add    $0x28,%rsp
  4453db:	pop    %rbx
  4453dc:	pop    %rbp
  4453dd:	pop    %r12
  4453df:	pop    %r13
  4453e1:	pop    %r14
  4453e3:	pop    %r15
  4453e5:	retq   
  4453e6:	nopw   %cs:0x0(%rax,%rax,1)
  4453f0:	lea    0x25d59(%rip),%rsi        # 46b150 <_fini+0xdc4c>
  4453f7:	mov    %r8,%rdx
  4453fa:	callq  413c40 <BIO_printf@plt>
  4453ff:	xor    %eax,%eax
  445401:	jmp    4453c7 <X509_get0_pubkey_bitstr@plt+0x2e9f7>
  445403:	nopl   0x0(%rax,%rax,1)
  445408:	mov    0x230b01(%rip),%rax        # 675f10 <_fini+0x218a0c>
  44540f:	xor    %esi,%esi
  445411:	mov    (%rax),%rdi
  445414:	callq  4161e0 <BIO_new_fp@plt>
  445419:	test   %rax,%rax
  44541c:	mov    %rax,%rbp
  44541f:	jne    445258 <X509_get0_pubkey_bitstr@plt+0x2e888>
  445425:	lea    0x1b39f(%rip),%rcx        # 4607cb <_fini+0x32c7>
  44542c:	nopl   0x0(%rax)
  445430:	lea    0x2578a(%rip),%rsi        # 46abc1 <_fini+0xd6bd>
  445437:	mov    %r12,%rdx
  44543a:	mov    %r15,%rdi
  44543d:	xor    %eax,%eax
  44543f:	callq  413c40 <BIO_printf@plt>
  445444:	mov    %r15,%rdi
  445447:	callq  413f40 <ERR_print_errors@plt>
  44544c:	xor    %eax,%eax
  44544e:	jmpq   4453c7 <X509_get0_pubkey_bitstr@plt+0x2e9f7>
  445453:	callq  414c30 <__stack_chk_fail@plt>
  445458:	nopl   0x0(%rax,%rax,1)
  445460:	push   %r15
  445462:	mov    %rdx,%r15
  445465:	push   %r14
  445467:	mov    %rdi,%r14
  44546a:	mov    %rsi,%rdi
  44546d:	xor    %esi,%esi
  44546f:	push   %r13
  445471:	mov    %rcx,%r13
  445474:	push   %r12
  445476:	push   %rbp
  445477:	mov    %r9,%rbp
  44547a:	push   %rbx
  44547b:	sub    $0x428,%rsp
  445482:	mov    %fs:0x28,%rax
  44548b:	mov    %rax,0x418(%rsp)
  445493:	xor    %eax,%eax
  445495:	mov    %r8,(%rsp)
  445499:	mov    0x460(%rsp),%r12
  4454a1:	callq  413d60 <d2i_PKCS12_bio@plt>
  4454a6:	test   %rax,%rax
  4454a9:	mov    %rax,%rbx
  4454ac:	je     445598 <X509_get0_pubkey_bitstr@plt+0x2ebc8>
  4454b2:	lea    0x1a909(%rip),%rsi        # 45fdc2 <_fini+0x28be>
  4454b9:	xor    %edx,%edx
  4454bb:	mov    %rax,%rdi
  4454be:	callq  413b20 <PKCS12_verify_mac@plt>
  4454c3:	test   %eax,%eax
  4454c5:	je     445518 <X509_get0_pubkey_bitstr@plt+0x2eb48>
  4454c7:	lea    0x1a8f4(%rip),%rsi        # 45fdc2 <_fini+0x28be>
  4454ce:	mov    %rbp,%rdx
  4454d1:	xor    %r8d,%r8d
  4454d4:	mov    %r12,%rcx
  4454d7:	mov    %rbx,%rdi
  4454da:	callq  415500 <PKCS12_parse@plt>
  4454df:	mov    %eax,%ebp
  4454e1:	mov    %rbx,%rdi
  4454e4:	callq  414a10 <PKCS12_free@plt>
  4454e9:	mov    0x418(%rsp),%rcx
  4454f1:	xor    %fs:0x28,%rcx
  4454fa:	mov    %ebp,%eax
  4454fc:	jne    4455e3 <X509_get0_pubkey_bitstr@plt+0x2ec13>
  445502:	add    $0x428,%rsp
  445509:	pop    %rbx
  44550a:	pop    %rbp
  44550b:	pop    %r12
  44550d:	pop    %r13
  44550f:	pop    %r14
  445511:	pop    %r15
  445513:	retq   
  445514:	nopl   0x0(%rax)
  445518:	xor    %edx,%edx
  44551a:	xor    %esi,%esi
  44551c:	mov    %rbx,%rdi
  44551f:	callq  413b20 <PKCS12_verify_mac@plt>
  445524:	test   %eax,%eax
  445526:	jne    4454c7 <X509_get0_pubkey_bitstr@plt+0x2eaf7>
  445528:	test   %r13,%r13
  44552b:	je     4455b8 <X509_get0_pubkey_bitstr@plt+0x2ebe8>
  445531:	lea    0x10(%rsp),%rdi
  445536:	xor    %edx,%edx
  445538:	mov    (%rsp),%rcx
  44553c:	mov    $0x400,%esi
  445541:	mov    %rdi,0x8(%rsp)
  445546:	callq  *%r13
  445549:	test   %eax,%eax
  44554b:	js     4455c8 <X509_get0_pubkey_bitstr@plt+0x2ebf8>
  44554d:	cmp    $0x3ff,%eax
  445552:	jg     44555c <X509_get0_pubkey_bitstr@plt+0x2eb8c>
  445554:	movslq %eax,%rdx
  445557:	movb   $0x0,0x10(%rsp,%rdx,1)
  44555c:	mov    0x8(%rsp),%r13
  445561:	mov    %eax,%edx
  445563:	mov    %rbx,%rdi
  445566:	mov    %r13,%rsi
  445569:	callq  413b20 <PKCS12_verify_mac@plt>
  44556e:	test   %eax,%eax
  445570:	mov    %r13,%rsi
  445573:	jne    4454ce <X509_get0_pubkey_bitstr@plt+0x2eafe>
  445579:	lea    0x25c48(%rip),%rsi        # 46b1c8 <_fini+0xdcc4>
  445580:	mov    %r15,%rdx
  445583:	mov    %r14,%rdi
  445586:	xor    %ebp,%ebp
  445588:	callq  413c40 <BIO_printf@plt>
  44558d:	jmpq   4454e1 <X509_get0_pubkey_bitstr@plt+0x2eb11>
  445592:	nopw   0x0(%rax,%rax,1)
  445598:	lea    0x25bd9(%rip),%rsi        # 46b178 <_fini+0xdc74>
  44559f:	mov    %r15,%rdx
  4455a2:	mov    %r14,%rdi
  4455a5:	xor    %eax,%eax
  4455a7:	xor    %ebp,%ebp
  4455a9:	callq  413c40 <BIO_printf@plt>
  4455ae:	jmpq   4454e9 <X509_get0_pubkey_bitstr@plt+0x2eb19>
  4455b3:	nopl   0x0(%rax,%rax,1)
  4455b8:	lea    -0xb9f(%rip),%r13        # 444a20 <X509_get0_pubkey_bitstr@plt+0x2e050>
  4455bf:	jmpq   445531 <X509_get0_pubkey_bitstr@plt+0x2eb61>
  4455c4:	nopl   0x0(%rax)
  4455c8:	lea    0x25bd1(%rip),%rsi        # 46b1a0 <_fini+0xdc9c>
  4455cf:	mov    %r15,%rdx
  4455d2:	mov    %r14,%rdi
  4455d5:	xor    %eax,%eax
  4455d7:	xor    %ebp,%ebp
  4455d9:	callq  413c40 <BIO_printf@plt>
  4455de:	jmpq   4454e1 <X509_get0_pubkey_bitstr@plt+0x2eb11>
  4455e3:	callq  414c30 <__stack_chk_fail@plt>
  4455e8:	nopl   0x0(%rax,%rax,1)
  4455f0:	test   %rdi,%rdi
  4455f3:	mov    %rdi,%rdx
  4455f6:	je     4456b8 <X509_get0_pubkey_bitstr@plt+0x2ece8>
  4455fc:	movzbl (%rdi),%r9d
  445600:	mov    $0x1,%eax
  445605:	mov    %r9d,%r8d
  445608:	and    $0xffffffdf,%r8d
  44560c:	cmp    $0x44,%r8b
  445610:	je     44561a <X509_get0_pubkey_bitstr@plt+0x2ec4a>
  445612:	cmp    $0x54,%r8b
  445616:	mov    $0x2,%al
  445618:	jne    445620 <X509_get0_pubkey_bitstr@plt+0x2ec50>
  44561a:	repz retq 
  44561c:	nopl   0x0(%rax)
  445620:	cmp    $0x4e,%r8b
  445624:	mov    $0x4,%al
  445626:	je     44561a <X509_get0_pubkey_bitstr@plt+0x2ec4a>
  445628:	cmp    $0x53,%r8b
  44562c:	mov    $0x6,%al
  44562e:	je     44561a <X509_get0_pubkey_bitstr@plt+0x2ec4a>
  445630:	cmp    $0x4d,%r8b
  445634:	mov    $0xb,%al
  445636:	je     44561a <X509_get0_pubkey_bitstr@plt+0x2ec4a>
  445638:	cmp    $0x31,%r9b
  44563c:	mov    $0x5,%al
  44563e:	je     44561a <X509_get0_pubkey_bitstr@plt+0x2ec4a>
  445640:	lea    0x255a2(%rip),%rdi        # 46abe9 <_fini+0xd6e5>
  445647:	mov    $0x7,%ecx
  44564c:	mov    %rdx,%rsi
  44564f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  445651:	je     44561a <X509_get0_pubkey_bitstr@plt+0x2ec4a>
  445653:	lea    0x18133(%rip),%rdi        # 45d78d <_fini+0x289>
  44565a:	mov    $0x7,%ecx
  44565f:	mov    %rdx,%rsi
  445662:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  445664:	je     44561a <X509_get0_pubkey_bitstr@plt+0x2ec4a>
  445666:	cmp    $0x50,%r9d
  44566a:	je     4456bb <X509_get0_pubkey_bitstr@plt+0x2eceb>
  44566c:	cmp    $0x70,%r9d
  445670:	jne    445689 <X509_get0_pubkey_bitstr@plt+0x2ecb9>
  445672:	cmpb   $0x31,0x1(%rdx)
  445676:	jne    445689 <X509_get0_pubkey_bitstr@plt+0x2ecb9>
  445678:	cmpb   $0x32,0x2(%rdx)
  44567c:	jne    445689 <X509_get0_pubkey_bitstr@plt+0x2ecb9>
  44567e:	mov    $0x5,%eax
  445683:	cmpb   $0x0,0x3(%rdx)
  445687:	je     44561a <X509_get0_pubkey_bitstr@plt+0x2ec4a>
  445689:	cmp    $0x45,%r8b
  44568d:	mov    $0x7,%eax
  445692:	je     44561a <X509_get0_pubkey_bitstr@plt+0x2ec4a>
  445694:	xor    %al,%al
  445696:	cmp    $0x50,%r8b
  44569a:	jne    44561a <X509_get0_pubkey_bitstr@plt+0x2ec4a>
  4456a0:	movzbl 0x1(%rdx),%eax
  4456a4:	and    $0xffffffdf,%eax
  4456a7:	cmp    $0x56,%al
  4456a9:	sete   %al
  4456ac:	movzbl %al,%eax
  4456af:	lea    0x3(%rax,%rax,8),%eax
  4456b3:	retq   
  4456b4:	nopl   0x0(%rax)
  4456b8:	xor    %eax,%eax
  4456ba:	retq   
  4456bb:	cmpb   $0x31,0x1(%rdx)
  4456bf:	jne    445689 <X509_get0_pubkey_bitstr@plt+0x2ecb9>
  4456c1:	cmpb   $0x32,0x2(%rdx)
  4456c5:	jne    445689 <X509_get0_pubkey_bitstr@plt+0x2ecb9>
  4456c7:	jmp    445683 <X509_get0_pubkey_bitstr@plt+0x2ecb3>
  4456c9:	nopl   0x0(%rax)
  4456d0:	push   %r12
  4456d2:	mov    %edx,%r12d
  4456d5:	push   %rbp
  4456d6:	mov    %rsi,%rbp
  4456d9:	mov    $0x2f,%esi
  4456de:	push   %rbx
  4456df:	mov    %rdi,%rbx
  4456e2:	callq  414c10 <strrchr@plt>
  4456e7:	lea    0x1(%rax),%rdx
  4456eb:	test   %rax,%rax
  4456ee:	mov    %rbp,%rdi
  4456f1:	cmovne %rdx,%rbx
  4456f5:	movslq %r12d,%rdx
  4456f8:	mov    %rbx,%rsi
  4456fb:	pop    %rbx
  4456fc:	pop    %rbp
  4456fd:	pop    %r12
  4456ff:	jmpq   413560 <BUF_strlcpy@plt>
  445704:	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  445710:	push   %r15
  445712:	push   %r14
  445714:	push   %r13
  445716:	mov    %rdi,%r13
  445719:	push   %r12
  44571b:	mov    %rcx,%r12
  44571e:	push   %rbp
  44571f:	push   %rbx
  445720:	mov    %rsi,%rbx
  445723:	sub    $0x18,%rsp
  445727:	movl   $0x0,(%rdx)
  44572d:	movq   $0x0,(%rcx)
  445734:	mov    %rdx,0x8(%rsp)
  445739:	mov    0x8(%rdi),%edx
  44573c:	test   %edx,%edx
  44573e:	je     445927 <X509_get0_pubkey_bitstr@plt+0x2ef57>
  445744:	mov    (%rdi),%rdi
  445747:	test   %edx,%edx
  445749:	jle    445775 <X509_get0_pubkey_bitstr@plt+0x2eda5>
  44574b:	sub    $0x1,%edx
  44574e:	xor    %eax,%eax
  445750:	lea    0x8(,%rdx,8),%rdx
  445758:	nopl   0x0(%rax,%rax,1)
  445760:	movq   $0x0,(%rdi,%rax,1)
  445768:	add    $0x8,%rax
  44576c:	mov    0x0(%r13),%rdi
  445770:	cmp    %rdx,%rax
  445773:	jne    445760 <X509_get0_pubkey_bitstr@plt+0x2ed90>
  445775:	movzbl (%rbx),%eax
  445778:	xor    %r14d,%r14d
  44577b:	test   %al,%al
  44577d:	je     445965 <X509_get0_pubkey_bitstr@plt+0x2ef95>
  445783:	nopl   0x0(%rax,%rax,1)
  445788:	lea    -0x9(%rax),%esi
  44578b:	cmp    $0x1,%sil
  44578f:	jbe    445840 <X509_get0_pubkey_bitstr@plt+0x2ee70>
  445795:	cmp    $0x20,%al
  445797:	je     445840 <X509_get0_pubkey_bitstr@plt+0x2ee70>
  44579d:	mov    0x8(%r13),%r15d
  4457a1:	cmp    %r15d,%r14d
  4457a4:	jge    445894 <X509_get0_pubkey_bitstr@plt+0x2eec4>
  4457aa:	movslq %r14d,%rsi
  4457ad:	mov    %rbx,(%rdi,%rsi,8)
  4457b1:	movzbl (%rbx),%edx
  4457b4:	add    $0x1,%r14d
  4457b8:	lea    0x0(,%rsi,8),%rax
  4457c0:	cmp    $0x22,%dl
  4457c3:	je     445858 <X509_get0_pubkey_bitstr@plt+0x2ee88>
  4457c9:	cmp    $0x27,%dl
  4457cc:	je     445858 <X509_get0_pubkey_bitstr@plt+0x2ee88>
  4457d2:	test   %dl,%dl
  4457d4:	je     445811 <X509_get0_pubkey_bitstr@plt+0x2ee41>
  4457d6:	lea    -0x9(%rdx),%eax
  4457d9:	cmp    $0x1,%al
  4457db:	jbe    445910 <X509_get0_pubkey_bitstr@plt+0x2ef40>
  4457e1:	cmp    $0x20,%dl
  4457e4:	jne    445806 <X509_get0_pubkey_bitstr@plt+0x2ee36>
  4457e6:	jmpq   445910 <X509_get0_pubkey_bitstr@plt+0x2ef40>
  4457eb:	nopl   0x0(%rax,%rax,1)
  4457f0:	lea    -0x9(%rax),%edx
  4457f3:	cmp    $0x1,%dl
  4457f6:	jbe    445910 <X509_get0_pubkey_bitstr@plt+0x2ef40>
  4457fc:	cmp    $0x20,%al
  4457fe:	xchg   %ax,%ax
  445800:	je     445910 <X509_get0_pubkey_bitstr@plt+0x2ef40>
  445806:	add    $0x1,%rbx
  44580a:	movzbl (%rbx),%eax
  44580d:	test   %al,%al
  44580f:	jne    4457f0 <X509_get0_pubkey_bitstr@plt+0x2ee20>
  445811:	mov    0x0(%r13),%rdi
  445815:	nopl   (%rax)
  445818:	mov    0x8(%rsp),%rax
  44581d:	mov    %r14d,(%rax)
  445820:	mov    %rdi,(%r12)
  445824:	add    $0x18,%rsp
  445828:	pop    %rbx
  445829:	pop    %rbp
  44582a:	pop    %r12
  44582c:	pop    %r13
  44582e:	pop    %r14
  445830:	mov    $0x1,%eax
  445835:	pop    %r15
  445837:	retq   
  445838:	nopl   0x0(%rax,%rax,1)
  445840:	movzbl 0x1(%rbx),%eax
  445844:	lea    0x1(%rbx),%rsi
  445848:	test   %al,%al
  44584a:	je     445818 <X509_get0_pubkey_bitstr@plt+0x2ee48>
  44584c:	mov    %rsi,%rbx
  44584f:	jmpq   445788 <X509_get0_pubkey_bitstr@plt+0x2edb8>
  445854:	nopl   0x0(%rax)
  445858:	add    0x0(%r13),%rax
  44585c:	lea    0x1(%rbx),%rsi
  445860:	addq   $0x1,(%rax)
  445864:	movzbl 0x1(%rbx),%eax
  445868:	test   %al,%al
  44586a:	jne    44587b <X509_get0_pubkey_bitstr@plt+0x2eeab>
  44586c:	jmp    44587f <X509_get0_pubkey_bitstr@plt+0x2eeaf>
  44586e:	xchg   %ax,%ax
  445870:	add    $0x1,%rsi
  445874:	movzbl (%rsi),%eax
  445877:	test   %al,%al
  445879:	je     44587f <X509_get0_pubkey_bitstr@plt+0x2eeaf>
  44587b:	cmp    %al,%dl
  44587d:	jne    445870 <X509_get0_pubkey_bitstr@plt+0x2eea0>
  44587f:	movzbl 0x1(%rsi),%eax
  445883:	movb   $0x0,(%rsi)
  445886:	add    $0x1,%rsi
  44588a:	test   %al,%al
  44588c:	je     445811 <X509_get0_pubkey_bitstr@plt+0x2ee41>
  44588e:	mov    0x0(%r13),%rdi
  445892:	jmp    44584c <X509_get0_pubkey_bitstr@plt+0x2ee7c>
  445894:	lea    0x14(%r15),%ebp
  445898:	lea    0x2528d(%rip),%rdx        # 46ab2c <_fini+0xd628>
  44589f:	mov    $0x19d,%ecx
  4458a4:	lea    0x0(,%rbp,8),%esi
  4458ab:	callq  4143c0 <CRYPTO_realloc@plt>
  4458b0:	test   %rax,%rax
  4458b3:	je     445954 <X509_get0_pubkey_bitstr@plt+0x2ef84>
  4458b9:	cmp    %ebp,%r14d
  4458bc:	mov    %rax,0x0(%r13)
  4458c0:	mov    %ebp,0x8(%r13)
  4458c4:	jge    44591f <X509_get0_pubkey_bitstr@plt+0x2ef4f>
  4458c6:	add    $0x13,%r15d
  4458ca:	movslq %r14d,%rsi
  4458cd:	sub    %r14d,%r15d
  4458d0:	lea    0x0(,%rsi,8),%rdx
  4458d8:	lea    0x1(%r15,%rsi,1),%rcx
  4458dd:	shl    $0x3,%rcx
  4458e1:	jmp    4458ec <X509_get0_pubkey_bitstr@plt+0x2ef1c>
  4458e3:	nopl   0x0(%rax,%rax,1)
  4458e8:	mov    0x0(%r13),%rax
  4458ec:	movq   $0x0,(%rax,%rdx,1)
  4458f4:	add    $0x8,%rdx
  4458f8:	cmp    %rcx,%rdx
  4458fb:	jne    4458e8 <X509_get0_pubkey_bitstr@plt+0x2ef18>
  4458fd:	mov    0x0(%r13),%rdi
  445901:	jmpq   4457ad <X509_get0_pubkey_bitstr@plt+0x2eddd>
  445906:	nopw   %cs:0x0(%rax,%rax,1)
  445910:	mov    %rbx,%rsi
  445913:	movb   $0x0,(%rbx)
  445916:	movzbl 0x1(%rbx),%eax
  44591a:	jmpq   445886 <X509_get0_pubkey_bitstr@plt+0x2eeb6>
  44591f:	mov    %rax,%rdi
  445922:	jmpq   4457aa <X509_get0_pubkey_bitstr@plt+0x2edda>
  445927:	lea    0x251fe(%rip),%rsi        # 46ab2c <_fini+0xd628>
  44592e:	movl   $0x14,0x8(%rdi)
  445935:	mov    $0x188,%edx
  44593a:	mov    $0xa0,%edi
  44593f:	callq  413d50 <CRYPTO_malloc@plt>
  445944:	mov    0x8(%r13),%edx
  445948:	mov    %rax,0x0(%r13)
  44594c:	mov    %rax,%rdi
  44594f:	jmpq   445747 <X509_get0_pubkey_bitstr@plt+0x2ed77>
  445954:	add    $0x18,%rsp
  445958:	xor    %eax,%eax
  44595a:	pop    %rbx
  44595b:	pop    %rbp
  44595c:	pop    %r12
  44595e:	pop    %r13
  445960:	pop    %r14
  445962:	pop    %r15
  445964:	retq   
  445965:	xor    %r14d,%r14d
  445968:	jmpq   445818 <X509_get0_pubkey_bitstr@plt+0x2ee48>
  44596d:	nopl   (%rax)
  445970:	mov    $0x1,%eax
  445975:	retq   
  445976:	nopw   %cs:0x0(%rax,%rax,1)
  445980:	push   %r12
  445982:	mov    %rsi,%r12
  445985:	push   %rbp
  445986:	push   %rbx
  445987:	mov    %rdi,%rbx
  44598a:	mov    %rsi,%rdi
  44598d:	callq  414400 <X509_get_subject_name@plt>
  445992:	xor    %edx,%edx
  445994:	xor    %esi,%esi
  445996:	mov    %rax,%rdi
  445999:	callq  4139a0 <X509_NAME_oneline@plt>
  44599e:	lea    0x18ba3(%rip),%rsi        # 45e548 <_fini+0x1044>
  4459a5:	mov    %rax,%rbp
  4459a8:	mov    %rbx,%rdi
  4459ab:	callq  413b70 <BIO_puts@plt>
  4459b0:	mov    %rbp,%rsi
  4459b3:	mov    %rbx,%rdi
  4459b6:	callq  413b70 <BIO_puts@plt>
  4459bb:	mov    %rbp,%rdi
  4459be:	callq  415020 <CRYPTO_free@plt>
  4459c3:	mov    %r12,%rdi
  4459c6:	callq  412940 <X509_get_issuer_name@plt>
  4459cb:	xor    %edx,%edx
  4459cd:	xor    %esi,%esi
  4459cf:	mov    %rax,%rdi
  4459d2:	callq  4139a0 <X509_NAME_oneline@plt>
  4459d7:	lea    0x25212(%rip),%rsi        # 46abf0 <_fini+0xd6ec>
  4459de:	mov    %rax,%rbp
  4459e1:	mov    %rbx,%rdi
  4459e4:	callq  413b70 <BIO_puts@plt>
  4459e9:	mov    %rbp,%rsi
  4459ec:	mov    %rbx,%rdi
  4459ef:	callq  413b70 <BIO_puts@plt>
  4459f4:	lea    0x1f1a4(%rip),%rsi        # 464b9f <_fini+0x769b>
  4459fb:	mov    %rbx,%rdi
  4459fe:	callq  413b70 <BIO_puts@plt>
  445a03:	mov    %rbp,%rdi
  445a06:	callq  415020 <CRYPTO_free@plt>
  445a0b:	pop    %rbx
  445a0c:	pop    %rbp
  445a0d:	xor    %eax,%eax
  445a0f:	pop    %r12
  445a11:	retq   
  445a12:	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  445a20:	lea    0x257e1(%rip),%rdi        # 46b208 <_fini+0xdd04>
  445a27:	sub    $0x8,%rsp
  445a2b:	callq  414d30 <UI_create_method@plt>
  445a30:	lea    -0x1037(%rip),%rsi        # 444a00 <X509_get0_pubkey_bitstr@plt+0x2e030>
  445a37:	mov    %rax,%rdi
  445a3a:	mov    %rax,0x2361af(%rip)        # 67bbf0 <_edata+0xee8>
  445a41:	callq  4147f0 <UI_method_set_opener@plt>
  445a46:	mov    0x2361a3(%rip),%rdi        # 67bbf0 <_edata+0xee8>
  445a4d:	lea    -0x10d4(%rip),%rsi        # 444980 <X509_get0_pubkey_bitstr@plt+0x2dfb0>
  445a54:	callq  413e90 <UI_method_set_reader@plt>
  445a59:	mov    0x236190(%rip),%rdi        # 67bbf0 <_edata+0xee8>
  445a60:	lea    -0x1167(%rip),%rsi        # 444900 <X509_get0_pubkey_bitstr@plt+0x2df30>
  445a67:	callq  4161a0 <UI_method_set_writer@plt>
  445a6c:	mov    0x23617d(%rip),%rdi        # 67bbf0 <_edata+0xee8>
  445a73:	lea    -0x119a(%rip),%rsi        # 4448e0 <X509_get0_pubkey_bitstr@plt+0x2df10>
  445a7a:	callq  412b90 <UI_method_set_closer@plt>
  445a7f:	xor    %eax,%eax
  445a81:	add    $0x8,%rsp
  445a85:	retq   
  445a86:	nopw   %cs:0x0(%rax,%rax,1)
  445a90:	mov    0x236159(%rip),%rdi        # 67bbf0 <_edata+0xee8>
  445a97:	test   %rdi,%rdi
  445a9a:	je     445ab4 <X509_get0_pubkey_bitstr@plt+0x2f0e4>
  445a9c:	sub    $0x8,%rsp
  445aa0:	callq  416610 <UI_destroy_method@plt>
  445aa5:	movq   $0x0,0x236140(%rip)        # 67bbf0 <_edata+0xee8>
  445ab0:	add    $0x8,%rsp
  445ab4:	repz retq 
  445ab6:	nopw   %cs:0x0(%rax,%rax,1)
  445ac0:	push   %r15
  445ac2:	push   %r14
  445ac4:	mov    %r8,%r14
  445ac7:	push   %r13
  445ac9:	mov    %rcx,%r13
  445acc:	push   %r12
  445ace:	mov    %rdi,%r12
  445ad1:	push   %rbp
  445ad2:	mov    %rsi,%rbp
  445ad5:	push   %rbx
  445ad6:	mov    %rdx,%rbx
  445ad9:	sub    $0x8,%rsp
  445add:	test   %rdx,%rdx
  445ae0:	je     445b50 <X509_get0_pubkey_bitstr@plt+0x2f180>
  445ae2:	test   %rsi,%rsi
  445ae5:	je     445b50 <X509_get0_pubkey_bitstr@plt+0x2f180>
  445ae7:	mov    %rdx,%rsi
  445aea:	mov    %rbp,%rdi
  445aed:	xor    %r15d,%r15d
  445af0:	callq  4155c0 <strcmp@plt>
  445af5:	test   %eax,%eax
  445af7:	sete   %r15b
  445afb:	mov    %r15d,%edx
  445afe:	mov    %rbp,%rsi
  445b01:	mov    %r12,%rdi
  445b04:	callq  445160 <X509_get0_pubkey_bitstr@plt+0x2e790>
  445b09:	test   %rax,%rax
  445b0c:	mov    %rax,0x0(%r13)
  445b10:	je     445ba0 <X509_get0_pubkey_bitstr@plt+0x2f1d0>
  445b16:	test   %rbx,%rbx
  445b19:	je     445b80 <X509_get0_pubkey_bitstr@plt+0x2f1b0>
  445b1b:	test   %r15d,%r15d
  445b1e:	mov    $0x2,%edx
  445b23:	je     445b70 <X509_get0_pubkey_bitstr@plt+0x2f1a0>
  445b25:	mov    %rbx,%rsi
  445b28:	mov    %r12,%rdi
  445b2b:	callq  445160 <X509_get0_pubkey_bitstr@plt+0x2e790>
  445b30:	test   %rax,%rax
  445b33:	mov    %rax,(%r14)
  445b36:	setne  %al
  445b39:	movzbl %al,%eax
  445b3c:	add    $0x8,%rsp
  445b40:	pop    %rbx
  445b41:	pop    %rbp
  445b42:	pop    %r12
  445b44:	pop    %r13
  445b46:	pop    %r14
  445b48:	pop    %r15
  445b4a:	retq   
  445b4b:	nopl   0x0(%rax,%rax,1)
  445b50:	test   %rbp,%rbp
  445b53:	jne    445b78 <X509_get0_pubkey_bitstr@plt+0x2f1a8>
  445b55:	test   %r13,%r13
  445b58:	je     445b62 <X509_get0_pubkey_bitstr@plt+0x2f192>
  445b5a:	movq   $0x0,0x0(%r13)
  445b62:	test   %rbx,%rbx
  445b65:	je     445b80 <X509_get0_pubkey_bitstr@plt+0x2f1b0>
  445b67:	nopw   0x0(%rax,%rax,1)
  445b70:	xor    %edx,%edx
  445b72:	jmp    445b25 <X509_get0_pubkey_bitstr@plt+0x2f155>
  445b74:	nopl   0x0(%rax)
  445b78:	xor    %r15d,%r15d
  445b7b:	jmpq   445afb <X509_get0_pubkey_bitstr@plt+0x2f12b>
  445b80:	test   %r14,%r14
  445b83:	je     445ba4 <X509_get0_pubkey_bitstr@plt+0x2f1d4>
  445b85:	movq   $0x0,(%r14)
  445b8c:	add    $0x8,%rsp
  445b90:	mov    $0x1,%eax
  445b95:	pop    %rbx
  445b96:	pop    %rbp
  445b97:	pop    %r12
  445b99:	pop    %r13
  445b9b:	pop    %r14
  445b9d:	pop    %r15
  445b9f:	retq   
  445ba0:	xor    %eax,%eax
  445ba2:	jmp    445b3c <X509_get0_pubkey_bitstr@plt+0x2f16c>
  445ba4:	mov    $0x1,%eax
  445ba9:	jmp    445b3c <X509_get0_pubkey_bitstr@plt+0x2f16c>
  445bab:	nopl   0x0(%rax,%rax,1)
  445bb0:	push   %r14
  445bb2:	lea    0x25040(%rip),%rdx        # 46abf9 <_fini+0xd6f5>
  445bb9:	mov    %rdi,%r14
  445bbc:	push   %r13
  445bbe:	push   %r12
  445bc0:	push   %rbp
  445bc1:	mov    %rsi,%rbp
  445bc4:	xor    %esi,%esi
  445bc6:	mov    %rbp,%rdi
  445bc9:	push   %rbx
  445bca:	callq  413fd0 <NCONF_get_string@plt>
  445bcf:	test   %rax,%rax
  445bd2:	mov    %rax,%rbx
  445bd5:	je     445c70 <X509_get0_pubkey_bitstr@plt+0x2f2a0>
  445bdb:	mov    %rax,%rsi
  445bde:	mov    %rbp,%rdi
  445be1:	callq  414750 <NCONF_get_section@plt>
  445be6:	test   %rax,%rax
  445be9:	mov    %rax,%r12
  445bec:	je     445c87 <X509_get0_pubkey_bitstr@plt+0x2f2b7>
  445bf2:	xor    %ebx,%ebx
  445bf4:	jmp    445c27 <X509_get0_pubkey_bitstr@plt+0x2f257>
  445bf6:	nopw   %cs:0x0(%rax,%rax,1)
  445c00:	mov    %ebx,%esi
  445c02:	mov    %r12,%rdi
  445c05:	callq  412b30 <sk_value@plt>
  445c0a:	mov    0x8(%rax),%rsi
  445c0e:	mov    0x10(%rax),%rdi
  445c12:	mov    %rax,%rbp
  445c15:	mov    %rsi,%rdx
  445c18:	callq  414060 <OBJ_create@plt>
  445c1d:	test   %eax,%eax
  445c1f:	mov    %eax,%r13d
  445c22:	je     445c48 <X509_get0_pubkey_bitstr@plt+0x2f278>
  445c24:	add    $0x1,%ebx
  445c27:	mov    %r12,%rdi
  445c2a:	callq  4156d0 <sk_num@plt>
  445c2f:	cmp    %eax,%ebx
  445c31:	jl     445c00 <X509_get0_pubkey_bitstr@plt+0x2f230>
  445c33:	mov    $0x1,%r13d
  445c39:	pop    %rbx
  445c3a:	pop    %rbp
  445c3b:	pop    %r12
  445c3d:	mov    %r13d,%eax
  445c40:	pop    %r13
  445c42:	pop    %r14
  445c44:	retq   
  445c45:	nopl   (%rax)
  445c48:	mov    0x10(%rbp),%rcx
  445c4c:	mov    0x8(%rbp),%rdx
  445c50:	lea    0x255f9(%rip),%rsi        # 46b250 <_fini+0xdd4c>
  445c57:	mov    %r14,%rdi
  445c5a:	xor    %eax,%eax
  445c5c:	callq  413c40 <BIO_printf@plt>
  445c61:	pop    %rbx
  445c62:	pop    %rbp
  445c63:	pop    %r12
  445c65:	mov    %r13d,%eax
  445c68:	pop    %r13
  445c6a:	pop    %r14
  445c6c:	retq   
  445c6d:	nopl   (%rax)
  445c70:	callq  412890 <ERR_clear_error@plt>
  445c75:	pop    %rbx
  445c76:	pop    %rbp
  445c77:	mov    $0x1,%r13d
  445c7d:	pop    %r12
  445c7f:	mov    %r13d,%eax
  445c82:	pop    %r13
  445c84:	pop    %r14
  445c86:	retq   
  445c87:	lea    0x255a2(%rip),%rsi        # 46b230 <_fini+0xdd2c>
  445c8e:	mov    %rbx,%rdx
  445c91:	mov    %r14,%rdi
  445c94:	xor    %eax,%eax
  445c96:	xor    %r13d,%r13d
  445c99:	callq  413c40 <BIO_printf@plt>
  445c9e:	jmp    445c39 <X509_get0_pubkey_bitstr@plt+0x2f269>
  445ca0:	push   %r14
  445ca2:	mov    %r9,%r14
  445ca5:	push   %r13
  445ca7:	mov    %rdi,%r13
  445caa:	push   %r12
  445cac:	mov    %rsi,%r12
  445caf:	push   %rbp
  445cb0:	mov    %edx,%ebp
  445cb2:	push   %rbx
  445cb3:	sub    $0x20,%rsp
  445cb7:	mov    %fs:0x28,%rax
  445cc0:	mov    %rax,0x18(%rsp)
  445cc5:	xor    %eax,%eax
  445cc7:	movq   $0x0,0x10(%rsp)
  445cd0:	callq  4152b0 <BIO_s_file@plt>
  445cd5:	mov    %rax,%rdi
  445cd8:	callq  414a20 <BIO_new@plt>
  445cdd:	test   %rax,%rax
  445ce0:	mov    %rax,%rbx
  445ce3:	je     445dd7 <X509_get0_pubkey_bitstr@plt+0x2f407>
  445ce9:	test   %r12,%r12
  445cec:	je     445df0 <X509_get0_pubkey_bitstr@plt+0x2f420>
  445cf2:	mov    %r12,%rcx
  445cf5:	mov    $0x3,%edx
  445cfa:	mov    $0x6c,%esi
  445cff:	mov    %rax,%rdi
  445d02:	callq  412af0 <BIO_ctrl@plt>
  445d07:	test   %rax,%rax
  445d0a:	jle    445dc0 <X509_get0_pubkey_bitstr@plt+0x2f3f0>
  445d10:	cmp    $0x1,%ebp
  445d13:	je     445e28 <X509_get0_pubkey_bitstr@plt+0x2f458>
  445d19:	cmp    $0x4,%ebp
  445d1c:	je     445e40 <X509_get0_pubkey_bitstr@plt+0x2f470>
  445d22:	cmp    $0x3,%ebp
  445d25:	je     445ea8 <X509_get0_pubkey_bitstr@plt+0x2f4d8>
  445d2b:	cmp    $0x5,%ebp
  445d2e:	xchg   %ax,%ax
  445d30:	je     445d90 <X509_get0_pubkey_bitstr@plt+0x2f3c0>
  445d32:	lea    0x25417(%rip),%rsi        # 46b150 <_fini+0xdc4c>
  445d39:	mov    %r14,%rdx
  445d3c:	mov    %r13,%rdi
  445d3f:	xor    %eax,%eax
  445d41:	callq  413c40 <BIO_printf@plt>
  445d46:	mov    0x10(%rsp),%rax
  445d4b:	test   %rax,%rax
  445d4e:	je     445ec8 <X509_get0_pubkey_bitstr@plt+0x2f4f8>
  445d54:	test   %rbx,%rbx
  445d57:	je     445d61 <X509_get0_pubkey_bitstr@plt+0x2f391>
  445d59:	mov    %rbx,%rdi
  445d5c:	callq  413960 <BIO_free@plt>
  445d61:	mov    0x18(%rsp),%rcx
  445d66:	xor    %fs:0x28,%rcx
  445d6f:	mov    0x10(%rsp),%rax
  445d74:	jne    445f0b <X509_get0_pubkey_bitstr@plt+0x2f53b>
  445d7a:	add    $0x20,%rsp
  445d7e:	pop    %rbx
  445d7f:	pop    %rbp
  445d80:	pop    %r12
  445d82:	pop    %r13
  445d84:	pop    %r14
  445d86:	retq   
  445d87:	nopw   0x0(%rax,%rax,1)
  445d90:	lea    0x10(%rsp),%rax
  445d95:	xor    %r9d,%r9d
  445d98:	xor    %r8d,%r8d
  445d9b:	xor    %ecx,%ecx
  445d9d:	mov    %r14,%rdx
  445da0:	mov    %rbx,%rsi
  445da3:	mov    %rax,(%rsp)
  445da7:	mov    %r13,%rdi
  445daa:	callq  445460 <X509_get0_pubkey_bitstr@plt+0x2ea90>
  445daf:	mov    0x10(%rsp),%rax
  445db4:	jmp    445d4b <X509_get0_pubkey_bitstr@plt+0x2f37b>
  445db6:	nopw   %cs:0x0(%rax,%rax,1)
  445dc0:	lea    0x24dfa(%rip),%rsi        # 46abc1 <_fini+0xd6bd>
  445dc7:	mov    %r12,%rcx
  445dca:	mov    %r14,%rdx
  445dcd:	mov    %r13,%rdi
  445dd0:	xor    %eax,%eax
  445dd2:	callq  413c40 <BIO_printf@plt>
  445dd7:	mov    %r13,%rdi
  445dda:	callq  413f40 <ERR_print_errors@plt>
  445ddf:	mov    0x10(%rsp),%rax
  445de4:	jmpq   445d4b <X509_get0_pubkey_bitstr@plt+0x2f37b>
  445de9:	nopl   0x0(%rax)
  445df0:	mov    0x230119(%rip),%r12        # 675f10 <_fini+0x218a0c>
  445df7:	xor    %ecx,%ecx
  445df9:	xor    %esi,%esi
  445dfb:	mov    $0x2,%edx
  445e00:	mov    (%r12),%rdi
  445e04:	callq  4127c0 <setvbuf@plt>
  445e09:	mov    (%r12),%rcx
  445e0d:	xor    %edx,%edx
  445e0f:	mov    $0x6a,%esi
  445e14:	mov    %rbx,%rdi
  445e17:	callq  412af0 <BIO_ctrl@plt>
  445e1c:	cmp    $0x1,%ebp
  445e1f:	jne    445d19 <X509_get0_pubkey_bitstr@plt+0x2f349>
  445e25:	nopl   (%rax)
  445e28:	xor    %esi,%esi
  445e2a:	mov    %rbx,%rdi
  445e2d:	callq  413a90 <d2i_X509_bio@plt>
  445e32:	mov    %rax,0x10(%rsp)
  445e37:	jmpq   445d4b <X509_get0_pubkey_bitstr@plt+0x2f37b>
  445e3c:	nopl   0x0(%rax)
  445e40:	mov    0x230119(%rip),%rdi        # 675f60 <_fini+0x218a5c>
  445e47:	xor    %edx,%edx
  445e49:	mov    %rbx,%rsi
  445e4c:	callq  413300 <ASN1_item_d2i_bio@plt>
  445e51:	test   %rax,%rax
  445e54:	je     445d46 <X509_get0_pubkey_bitstr@plt+0x2f376>
  445e5a:	mov    (%rax),%rdx
  445e5d:	lea    0x1b30e(%rip),%rsi        # 461172 <_fini+0x3c6e>
  445e64:	movslq (%rdx),%rcx
  445e67:	mov    0x8(%rdx),%rdi
  445e6b:	mov    $0xc,%edx
  445e70:	cmp    $0xc,%rcx
  445e74:	cmovg  %rdx,%rcx
  445e78:	cmp    %rcx,%rcx
  445e7b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  445e7d:	je     445ee8 <X509_get0_pubkey_bitstr@plt+0x2f518>
  445e7f:	mov    %rax,%rdi
  445e82:	callq  412c40 <NETSCAPE_X509_free@plt>
  445e87:	lea    0x253e2(%rip),%rsi        # 46b270 <_fini+0xdd6c>
  445e8e:	mov    %r13,%rdi
  445e91:	xor    %eax,%eax
  445e93:	callq  413c40 <BIO_printf@plt>
  445e98:	mov    0x10(%rsp),%rax
  445e9d:	jmpq   445d4b <X509_get0_pubkey_bitstr@plt+0x2f37b>
  445ea2:	nopw   0x0(%rax,%rax,1)
  445ea8:	lea    -0x148f(%rip),%rdx        # 444a20 <X509_get0_pubkey_bitstr@plt+0x2e050>
  445eaf:	xor    %ecx,%ecx
  445eb1:	xor    %esi,%esi
  445eb3:	mov    %rbx,%rdi
  445eb6:	callq  4154c0 <PEM_read_bio_X509_AUX@plt>
  445ebb:	mov    %rax,0x10(%rsp)
  445ec0:	jmpq   445d4b <X509_get0_pubkey_bitstr@plt+0x2f37b>
  445ec5:	nopl   (%rax)
  445ec8:	lea    0x24d36(%rip),%rsi        # 46ac05 <_fini+0xd701>
  445ecf:	mov    %r13,%rdi
  445ed2:	callq  413c40 <BIO_printf@plt>
  445ed7:	mov    %r13,%rdi
  445eda:	callq  413f40 <ERR_print_errors@plt>
  445edf:	jmpq   445d54 <X509_get0_pubkey_bitstr@plt+0x2f384>
  445ee4:	nopl   0x0(%rax)
  445ee8:	mov    0x8(%rax),%rdx
  445eec:	mov    %rax,%rdi
  445eef:	movq   $0x0,0x8(%rax)
  445ef7:	mov    %rdx,0x10(%rsp)
  445efc:	callq  412c40 <NETSCAPE_X509_free@plt>
  445f01:	mov    0x10(%rsp),%rax
  445f06:	jmpq   445d4b <X509_get0_pubkey_bitstr@plt+0x2f37b>
  445f0b:	callq  414c30 <__stack_chk_fail@plt>
  445f10:	push   %r15
  445f12:	mov    %ecx,%r15d
  445f15:	push   %r14
  445f17:	push   %r13
  445f19:	mov    %rdi,%r13
  445f1c:	push   %r12
  445f1e:	push   %rbp
  445f1f:	mov    %edx,%ebp
  445f21:	push   %rbx
  445f22:	mov    %rsi,%rbx
  445f25:	sub    $0x48,%rsp
  445f29:	mov    %fs:0x28,%rax
  445f32:	mov    %rax,0x38(%rsp)
  445f37:	xor    %eax,%eax
  445f39:	test   %rsi,%rsi
  445f3c:	mov    0x80(%rsp),%r14
  445f44:	movq   $0x0,0x18(%rsp)
  445f4d:	mov    %r8,0x20(%rsp)
  445f52:	mov    %rsi,0x28(%rsp)
  445f57:	je     445fb0 <X509_get0_pubkey_bitstr@plt+0x2f5e0>
  445f59:	cmp    $0x7,%edx
  445f5c:	jne    445fc8 <X509_get0_pubkey_bitstr@plt+0x2f5f8>
  445f5e:	test   %r9,%r9
  445f61:	je     446120 <X509_get0_pubkey_bitstr@plt+0x2f750>
  445f67:	mov    0x235c82(%rip),%rdx        # 67bbf0 <_edata+0xee8>
  445f6e:	lea    0x20(%rsp),%rcx
  445f73:	mov    %r9,%rdi
  445f76:	callq  412a70 <ENGINE_load_private_key@plt>
  445f7b:	test   %rax,%rax
  445f7e:	mov    %rax,0x18(%rsp)
  445f83:	je     446220 <X509_get0_pubkey_bitstr@plt+0x2f850>
  445f89:	mov    0x38(%rsp),%rdx
  445f8e:	xor    %fs:0x28,%rdx
  445f97:	jne    446244 <X509_get0_pubkey_bitstr@plt+0x2f874>
  445f9d:	add    $0x48,%rsp
  445fa1:	pop    %rbx
  445fa2:	pop    %rbp
  445fa3:	pop    %r12
  445fa5:	pop    %r13
  445fa7:	pop    %r14
  445fa9:	pop    %r15
  445fab:	retq   
  445fac:	nopl   0x0(%rax)
  445fb0:	test   %ecx,%ecx
  445fb2:	je     446180 <X509_get0_pubkey_bitstr@plt+0x2f7b0>
  445fb8:	cmp    $0x7,%edx
  445fbb:	je     446180 <X509_get0_pubkey_bitstr@plt+0x2f7b0>
  445fc1:	nopl   0x0(%rax)
  445fc8:	callq  4152b0 <BIO_s_file@plt>
  445fcd:	mov    %rax,%rdi
  445fd0:	callq  414a20 <BIO_new@plt>
  445fd5:	test   %rax,%rax
  445fd8:	mov    %rax,%r12
  445fdb:	je     4461f0 <X509_get0_pubkey_bitstr@plt+0x2f820>
  445fe1:	test   %rbx,%rbx
  445fe4:	jne    4460b0 <X509_get0_pubkey_bitstr@plt+0x2f6e0>
  445fea:	test   %r15d,%r15d
  445fed:	je     4460b0 <X509_get0_pubkey_bitstr@plt+0x2f6e0>
  445ff3:	mov    0x22ff16(%rip),%r15        # 675f10 <_fini+0x218a0c>
  445ffa:	xor    %ecx,%ecx
  445ffc:	mov    $0x2,%edx
  446001:	xor    %esi,%esi
  446003:	mov    (%r15),%rdi
  446006:	callq  4127c0 <setvbuf@plt>
  44600b:	mov    (%r15),%rcx
  44600e:	xor    %edx,%edx
  446010:	mov    $0x6a,%esi
  446015:	mov    %r12,%rdi
  446018:	callq  412af0 <BIO_ctrl@plt>
  44601d:	cmp    $0x1,%ebp
  446020:	je     446140 <X509_get0_pubkey_bitstr@plt+0x2f770>
  446026:	cmp    $0x3,%ebp
  446029:	je     446158 <X509_get0_pubkey_bitstr@plt+0x2f788>
  44602f:	cmp    $0x8,%ebp
  446032:	je     4460f8 <X509_get0_pubkey_bitstr@plt+0x2f728>
  446038:	cmp    $0x4,%ebp
  44603b:	je     4460f8 <X509_get0_pubkey_bitstr@plt+0x2f728>
  446041:	cmp    $0x5,%ebp
  446044:	je     4461a0 <X509_get0_pubkey_bitstr@plt+0x2f7d0>
  44604a:	cmp    $0xb,%ebp
  44604d:	je     446208 <X509_get0_pubkey_bitstr@plt+0x2f838>
  446053:	cmp    $0xc,%ebp
  446056:	je     4461d0 <X509_get0_pubkey_bitstr@plt+0x2f800>
  44605c:	lea    0x25235(%rip),%rsi        # 46b298 <_fini+0xdd94>
  446063:	mov    %r13,%rdi
  446066:	xor    %eax,%eax
  446068:	callq  413c40 <BIO_printf@plt>
  44606d:	mov    %r12,%rdi
  446070:	callq  413960 <BIO_free@plt>
  446075:	mov    0x18(%rsp),%rax
  44607a:	test   %rax,%rax
  44607d:	jne    445f89 <X509_get0_pubkey_bitstr@plt+0x2f5b9>
  446083:	lea    0x24b4c(%rip),%rsi        # 46abd6 <_fini+0xd6d2>
  44608a:	mov    %r14,%rdx
  44608d:	mov    %r13,%rdi
  446090:	callq  413c40 <BIO_printf@plt>
  446095:	mov    %r13,%rdi
  446098:	callq  413f40 <ERR_print_errors@plt>
  44609d:	mov    0x18(%rsp),%rax
  4460a2:	jmpq   445f89 <X509_get0_pubkey_bitstr@plt+0x2f5b9>
  4460a7:	nopw   0x0(%rax,%rax,1)
  4460b0:	mov    %rbx,%rcx
  4460b3:	mov    $0x3,%edx
  4460b8:	mov    $0x6c,%esi
  4460bd:	mov    %r12,%rdi
  4460c0:	callq  412af0 <BIO_ctrl@plt>
  4460c5:	test   %rax,%rax
  4460c8:	jg     44601d <X509_get0_pubkey_bitstr@plt+0x2f64d>
  4460ce:	lea    0x24aec(%rip),%rsi        # 46abc1 <_fini+0xd6bd>
  4460d5:	mov    %r13,%rdi
  4460d8:	mov    %rbx,%rcx
  4460db:	mov    %r14,%rdx
  4460de:	xor    %eax,%eax
  4460e0:	callq  413c40 <BIO_printf@plt>
  4460e5:	mov    %r13,%rdi
  4460e8:	callq  413f40 <ERR_print_errors@plt>
  4460ed:	jmpq   44606d <X509_get0_pubkey_bitstr@plt+0x2f69d>
  4460f2:	nopw   0x0(%rax,%rax,1)
  4460f8:	mov    %ebp,%r8d
  4460fb:	mov    %r14,%rcx
  4460fe:	mov    %rbx,%rdx
  446101:	mov    %r12,%rsi
  446104:	mov    %r13,%rdi
  446107:	callq  444c10 <X509_get0_pubkey_bitstr@plt+0x2e240>
  44610c:	mov    %rax,0x18(%rsp)
  446111:	jmpq   44606d <X509_get0_pubkey_bitstr@plt+0x2f69d>
  446116:	nopw   %cs:0x0(%rax,%rax,1)
  446120:	lea    0x24b10(%rip),%rsi        # 46ac37 <_fini+0xd733>
  446127:	xor    %eax,%eax
  446129:	callq  413c40 <BIO_printf@plt>
  44612e:	mov    0x18(%rsp),%rax
  446133:	jmpq   44607a <X509_get0_pubkey_bitstr@plt+0x2f6aa>
  446138:	nopl   0x0(%rax,%rax,1)
  446140:	xor    %esi,%esi
  446142:	mov    %r12,%rdi
  446145:	callq  4151b0 <d2i_PrivateKey_bio@plt>
  44614a:	mov    %rax,0x18(%rsp)
  44614f:	jmpq   44606d <X509_get0_pubkey_bitstr@plt+0x2f69d>
  446154:	nopl   0x0(%rax)
  446158:	lea    -0x173f(%rip),%rdx        # 444a20 <X509_get0_pubkey_bitstr@plt+0x2e050>
  44615f:	lea    0x20(%rsp),%rcx
  446164:	xor    %esi,%esi
  446166:	mov    %r12,%rdi
  446169:	callq  415a10 <PEM_read_bio_PrivateKey@plt>
  44616e:	mov    %rax,0x18(%rsp)
  446173:	jmpq   44606d <X509_get0_pubkey_bitstr@plt+0x2f69d>
  446178:	nopl   0x0(%rax,%rax,1)
  446180:	lea    0x24a9a(%rip),%rsi        # 46ac21 <_fini+0xd71d>
  446187:	mov    %r13,%rdi
  44618a:	xor    %eax,%eax
  44618c:	callq  413c40 <BIO_printf@plt>
  446191:	mov    0x18(%rsp),%rax
  446196:	jmpq   44607a <X509_get0_pubkey_bitstr@plt+0x2f6aa>
  44619b:	nopl   0x0(%rax,%rax,1)
  4461a0:	lea    -0x1787(%rip),%rcx        # 444a20 <X509_get0_pubkey_bitstr@plt+0x2e050>
  4461a7:	lea    0x18(%rsp),%r9
  4461ac:	lea    0x20(%rsp),%r8
  4461b1:	movq   $0x0,(%rsp)
  4461b9:	mov    %r14,%rdx
  4461bc:	mov    %r12,%rsi
  4461bf:	mov    %r13,%rdi
  4461c2:	callq  445460 <X509_get0_pubkey_bitstr@plt+0x2ea90>
  4461c7:	jmpq   44606d <X509_get0_pubkey_bitstr@plt+0x2f69d>
  4461cc:	nopl   0x0(%rax)
  4461d0:	lea    -0x17b7(%rip),%rsi        # 444a20 <X509_get0_pubkey_bitstr@plt+0x2e050>
  4461d7:	lea    0x20(%rsp),%rdx
  4461dc:	mov    %r12,%rdi
  4461df:	callq  416180 <b2i_PVK_bio@plt>
  4461e4:	mov    %rax,0x18(%rsp)
  4461e9:	jmpq   44606d <X509_get0_pubkey_bitstr@plt+0x2f69d>
  4461ee:	xchg   %ax,%ax
  4461f0:	mov    %r13,%rdi
  4461f3:	callq  413f40 <ERR_print_errors@plt>
  4461f8:	mov    0x18(%rsp),%rax
  4461fd:	jmpq   44607a <X509_get0_pubkey_bitstr@plt+0x2f6aa>
  446202:	nopw   0x0(%rax,%rax,1)
  446208:	mov    %r12,%rdi
  44620b:	callq  415840 <b2i_PrivateKey_bio@plt>
  446210:	mov    %rax,0x18(%rsp)
  446215:	jmpq   44606d <X509_get0_pubkey_bitstr@plt+0x2f69d>
  44621a:	nopw   0x0(%rax,%rax,1)
  446220:	lea    0x24a25(%rip),%rsi        # 46ac4c <_fini+0xd748>
  446227:	mov    %r14,%rdx
  44622a:	mov    %r13,%rdi
  44622d:	callq  413c40 <BIO_printf@plt>
  446232:	mov    %r13,%rdi
  446235:	callq  413f40 <ERR_print_errors@plt>
  44623a:	mov    0x18(%rsp),%rax
  44623f:	jmpq   44607a <X509_get0_pubkey_bitstr@plt+0x2f6aa>
  446244:	callq  414c30 <__stack_chk_fail@plt>
  446249:	nopl   0x0(%rax)
  446250:	push   %r15
  446252:	mov    %ecx,%r15d
  446255:	push   %r14
  446257:	push   %r13
  446259:	mov    %rdi,%r13
  44625c:	push   %r12
  44625e:	push   %rbp
  44625f:	mov    %rsi,%rbp
  446262:	push   %rbx
  446263:	mov    %edx,%ebx
  446265:	sub    $0x28,%rsp
  446269:	mov    %fs:0x28,%rax
  446272:	mov    %rax,0x18(%rsp)
  446277:	xor    %eax,%eax
  446279:	test   %rsi,%rsi
  44627c:	mov    0x60(%rsp),%r14
  446281:	mov    %r8,(%rsp)
  446285:	mov    %rsi,0x8(%rsp)
  44628a:	je     4462e0 <X509_get0_pubkey_bitstr@plt+0x2f910>
  44628c:	cmp    $0x7,%edx
  44628f:	jne    4462f1 <X509_get0_pubkey_bitstr@plt+0x2f921>
  446291:	test   %r9,%r9
  446294:	je     4464c8 <X509_get0_pubkey_bitstr@plt+0x2faf8>
  44629a:	mov    0x23594f(%rip),%rdx        # 67bbf0 <_edata+0xee8>
  4462a1:	mov    %rsp,%rcx
  4462a4:	mov    %r9,%rdi
  4462a7:	callq  412ea0 <ENGINE_load_public_key@plt>
  4462ac:	mov    %rax,%rbx
  4462af:	test   %rbx,%rbx
  4462b2:	je     446389 <X509_get0_pubkey_bitstr@plt+0x2f9b9>
  4462b8:	mov    0x18(%rsp),%rdx
  4462bd:	xor    %fs:0x28,%rdx
  4462c6:	mov    %rbx,%rax
  4462c9:	jne    44651c <X509_get0_pubkey_bitstr@plt+0x2fb4c>
  4462cf:	add    $0x28,%rsp
  4462d3:	pop    %rbx
  4462d4:	pop    %rbp
  4462d5:	pop    %r12
  4462d7:	pop    %r13
  4462d9:	pop    %r14
  4462db:	pop    %r15
  4462dd:	retq   
  4462de:	xchg   %ax,%ax
  4462e0:	test   %ecx,%ecx
  4462e2:	je     446473 <X509_get0_pubkey_bitstr@plt+0x2faa3>
  4462e8:	cmp    $0x7,%edx
  4462eb:	je     446473 <X509_get0_pubkey_bitstr@plt+0x2faa3>
  4462f1:	callq  4152b0 <BIO_s_file@plt>
  4462f6:	mov    %rax,%rdi
  4462f9:	callq  414a20 <BIO_new@plt>
  4462fe:	test   %rax,%rax
  446301:	mov    %rax,%r12
  446304:	je     44650d <X509_get0_pubkey_bitstr@plt+0x2fb3d>
  44630a:	test   %rbp,%rbp
  44630d:	je     4463a8 <X509_get0_pubkey_bitstr@plt+0x2f9d8>
  446313:	mov    %rbp,%rcx
  446316:	mov    $0x3,%edx
  44631b:	mov    $0x6c,%esi
  446320:	mov    %r12,%rdi
  446323:	callq  412af0 <BIO_ctrl@plt>
  446328:	test   %rax,%rax
  44632b:	jle    4464e7 <X509_get0_pubkey_bitstr@plt+0x2fb17>
  446331:	cmp    $0x1,%ebx
  446334:	je     446400 <X509_get0_pubkey_bitstr@plt+0x2fa30>
  44633a:	cmp    $0xa,%ebx
  44633d:	je     446418 <X509_get0_pubkey_bitstr@plt+0x2fa48>
  446343:	cmp    $0x9,%ebx
  446346:	je     446450 <X509_get0_pubkey_bitstr@plt+0x2fa80>
  44634c:	cmp    $0x3,%ebx
  44634f:	nop
  446350:	je     446490 <X509_get0_pubkey_bitstr@plt+0x2fac0>
  446356:	cmp    $0x8,%ebx
  446359:	je     4463e0 <X509_get0_pubkey_bitstr@plt+0x2fa10>
  44635f:	cmp    $0x4,%ebx
  446362:	je     4463e0 <X509_get0_pubkey_bitstr@plt+0x2fa10>
  446364:	cmp    $0xb,%ebx
  446367:	jne    4464b0 <X509_get0_pubkey_bitstr@plt+0x2fae0>
  44636d:	mov    %r12,%rdi
  446370:	callq  4151d0 <b2i_PublicKey_bio@plt>
  446375:	mov    %rax,%rbx
  446378:	mov    %r12,%rdi
  44637b:	callq  413960 <BIO_free@plt>
  446380:	test   %rbx,%rbx
  446383:	jne    4462b8 <X509_get0_pubkey_bitstr@plt+0x2f8e8>
  446389:	lea    0x24846(%rip),%rsi        # 46abd6 <_fini+0xd6d2>
  446390:	mov    %r14,%rdx
  446393:	mov    %r13,%rdi
  446396:	xor    %eax,%eax
  446398:	callq  413c40 <BIO_printf@plt>
  44639d:	jmpq   4462b8 <X509_get0_pubkey_bitstr@plt+0x2f8e8>
  4463a2:	nopw   0x0(%rax,%rax,1)
  4463a8:	test   %r15d,%r15d
  4463ab:	je     446313 <X509_get0_pubkey_bitstr@plt+0x2f943>
  4463b1:	mov    0x22fb58(%rip),%r15        # 675f10 <_fini+0x218a0c>
  4463b8:	xor    %ecx,%ecx
  4463ba:	xor    %esi,%esi
  4463bc:	mov    $0x2,%edx
  4463c1:	mov    (%r15),%rdi
  4463c4:	callq  4127c0 <setvbuf@plt>
  4463c9:	mov    (%r15),%rcx
  4463cc:	xor    %edx,%edx
  4463ce:	mov    $0x6a,%esi
  4463d3:	mov    %r12,%rdi
  4463d6:	callq  412af0 <BIO_ctrl@plt>
  4463db:	jmpq   446331 <X509_get0_pubkey_bitstr@plt+0x2f961>
  4463e0:	mov    %ebx,%r8d
  4463e3:	mov    %r14,%rcx
  4463e6:	mov    %rbp,%rdx
  4463e9:	mov    %r12,%rsi
  4463ec:	mov    %r13,%rdi
  4463ef:	callq  444c10 <X509_get0_pubkey_bitstr@plt+0x2e240>
  4463f4:	mov    %rax,%rbx
  4463f7:	jmpq   446378 <X509_get0_pubkey_bitstr@plt+0x2f9a8>
  4463fc:	nopl   0x0(%rax)
  446400:	xor    %esi,%esi
  446402:	mov    %r12,%rdi
  446405:	callq  413e80 <d2i_PUBKEY_bio@plt>
  44640a:	mov    %rax,%rbx
  44640d:	jmpq   446378 <X509_get0_pubkey_bitstr@plt+0x2f9a8>
  446412:	nopw   0x0(%rax,%rax,1)
  446418:	xor    %esi,%esi
  44641a:	mov    %r12,%rdi
  44641d:	callq  413cc0 <d2i_RSAPublicKey_bio@plt>
  446422:	test   %rax,%rax
  446425:	mov    %rax,%rbp
  446428:	je     44646c <X509_get0_pubkey_bitstr@plt+0x2fa9c>
  44642a:	callq  414b50 <EVP_PKEY_new@plt>
  44642f:	test   %rax,%rax
  446432:	mov    %rax,%rbx
  446435:	je     446442 <X509_get0_pubkey_bitstr@plt+0x2fa72>
  446437:	mov    %rbp,%rsi
  44643a:	mov    %rax,%rdi
  44643d:	callq  4156f0 <EVP_PKEY_set1_RSA@plt>
  446442:	mov    %rbp,%rdi
  446445:	callq  414970 <RSA_free@plt>
  44644a:	jmpq   446378 <X509_get0_pubkey_bitstr@plt+0x2f9a8>
  44644f:	nop
  446450:	lea    -0x1a37(%rip),%rdx        # 444a20 <X509_get0_pubkey_bitstr@plt+0x2e050>
  446457:	xor    %esi,%esi
  446459:	mov    %rsp,%rcx
  44645c:	mov    %r12,%rdi
  44645f:	callq  413ca0 <PEM_read_bio_RSAPublicKey@plt>
  446464:	test   %rax,%rax
  446467:	mov    %rax,%rbp
  44646a:	jne    44642a <X509_get0_pubkey_bitstr@plt+0x2fa5a>
  44646c:	xor    %ebx,%ebx
  44646e:	jmpq   446378 <X509_get0_pubkey_bitstr@plt+0x2f9a8>
  446473:	lea    0x247a7(%rip),%rsi        # 46ac21 <_fini+0xd71d>
  44647a:	mov    %r13,%rdi
  44647d:	xor    %eax,%eax
  44647f:	xor    %ebx,%ebx
  446481:	callq  413c40 <BIO_printf@plt>
  446486:	jmpq   446389 <X509_get0_pubkey_bitstr@plt+0x2f9b9>
  44648b:	nopl   0x0(%rax,%rax,1)
  446490:	lea    -0x1a77(%rip),%rdx        # 444a20 <X509_get0_pubkey_bitstr@plt+0x2e050>
  446497:	mov    %rsp,%rcx
  44649a:	xor    %esi,%esi
  44649c:	mov    %r12,%rdi
  44649f:	callq  4136e0 <PEM_read_bio_PUBKEY@plt>
  4464a4:	mov    %rax,%rbx
  4464a7:	jmpq   446378 <X509_get0_pubkey_bitstr@plt+0x2f9a8>
  4464ac:	nopl   0x0(%rax)
  4464b0:	lea    0x24de1(%rip),%rsi        # 46b298 <_fini+0xdd94>
  4464b7:	mov    %r13,%rdi
  4464ba:	xor    %eax,%eax
  4464bc:	xor    %ebx,%ebx
  4464be:	callq  413c40 <BIO_printf@plt>
  4464c3:	jmpq   446378 <X509_get0_pubkey_bitstr@plt+0x2f9a8>
  4464c8:	lea    0x234871(%rip),%rax        # 67ad40 <_edata+0x38>
  4464cf:	lea    0x24761(%rip),%rsi        # 46ac37 <_fini+0xd733>
  4464d6:	xor    %ebx,%ebx
  4464d8:	mov    (%rax),%rdi
  4464db:	xor    %eax,%eax
  4464dd:	callq  413c40 <BIO_printf@plt>
  4464e2:	jmpq   446389 <X509_get0_pubkey_bitstr@plt+0x2f9b9>
  4464e7:	lea    0x246d3(%rip),%rsi        # 46abc1 <_fini+0xd6bd>
  4464ee:	mov    %rbp,%rcx
  4464f1:	mov    %r14,%rdx
  4464f4:	mov    %r13,%rdi
  4464f7:	xor    %eax,%eax
  4464f9:	xor    %ebx,%ebx
  4464fb:	callq  413c40 <BIO_printf@plt>
  446500:	mov    %r13,%rdi
  446503:	callq  413f40 <ERR_print_errors@plt>
  446508:	jmpq   446378 <X509_get0_pubkey_bitstr@plt+0x2f9a8>
  44650d:	mov    %r13,%rdi
  446510:	xor    %ebx,%ebx
  446512:	callq  413f40 <ERR_print_errors@plt>
  446517:	jmpq   446389 <X509_get0_pubkey_bitstr@plt+0x2f9b9>
  44651c:	callq  414c30 <__stack_chk_fail@plt>
  446521:	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  446530:	sub    $0x28,%rsp
  446534:	mov    %r9,%r8
  446537:	lea    0x10(%rsp),%r9
  44653c:	movq   $0x0,(%rsp)
  446544:	mov    %fs:0x28,%rax
  44654d:	mov    %rax,0x18(%rsp)
  446552:	xor    %eax,%eax
  446554:	callq  4451f0 <X509_get0_pubkey_bitstr@plt+0x2e820>
  446559:	test   %eax,%eax
  44655b:	je     446580 <X509_get0_pubkey_bitstr@plt+0x2fbb0>
  44655d:	mov    0x10(%rsp),%rax
  446562:	mov    0x18(%rsp),%rdx
  446567:	xor    %fs:0x28,%rdx
  446570:	jne    446584 <X509_get0_pubkey_bitstr@plt+0x2fbb4>
  446572:	add    $0x28,%rsp
  446576:	retq   
  446577:	nopw   0x0(%rax,%rax,1)
  446580:	xor    %eax,%eax
  446582:	jmp    446562 <X509_get0_pubkey_bitstr@plt+0x2fb92>
  446584:	callq  414c30 <__stack_chk_fail@plt>
  446589:	nopl   0x0(%rax)
  446590:	sub    $0x28,%rsp
  446594:	mov    %r9,%r8
  446597:	xor    %r9d,%r9d
  44659a:	mov    %fs:0x28,%rax
  4465a3:	mov    %rax,0x18(%rsp)
  4465a8:	xor    %eax,%eax
  4465aa:	lea    0x10(%rsp),%rax
  4465af:	mov    %rax,(%rsp)
  4465b3:	callq  4451f0 <X509_get0_pubkey_bitstr@plt+0x2e820>
  4465b8:	test   %eax,%eax
  4465ba:	je     4465e0 <X509_get0_pubkey_bitstr@plt+0x2fc10>
  4465bc:	mov    0x10(%rsp),%rax
  4465c1:	mov    0x18(%rsp),%rdx
  4465c6:	xor    %fs:0x28,%rdx
  4465cf:	jne    4465e4 <X509_get0_pubkey_bitstr@plt+0x2fc14>
  4465d1:	add    $0x28,%rsp
  4465d5:	retq   
  4465d6:	nopw   %cs:0x0(%rax,%rax,1)
  4465e0:	xor    %eax,%eax
  4465e2:	jmp    4465c1 <X509_get0_pubkey_bitstr@plt+0x2fbf1>
  4465e4:	callq  414c30 <__stack_chk_fail@plt>
  4465e9:	nopl   0x0(%rax)
  4465f0:	lea    0x22f4a9(%rip),%rdx        # 675aa0 <_fini+0x21859c>
  4465f7:	jmpq   444d40 <X509_get0_pubkey_bitstr@plt+0x2e370>
  4465fc:	nopl   0x0(%rax)
  446600:	lea    0x22f1f9(%rip),%rdx        # 675800 <_fini+0x2182fc>
  446607:	jmpq   444d40 <X509_get0_pubkey_bitstr@plt+0x2e370>
  44660c:	nopl   0x0(%rax)
  446610:	push   %rbp
  446611:	mov    %rdi,%rbp
  446614:	push   %rbx
  446615:	mov    %rsi,%rbx
  446618:	lea    0x1cb68(%rip),%rsi        # 463187 <_fini+0x5c83>
  44661f:	mov    %rbx,%rdi
  446622:	sub    $0x8,%rsp
  446626:	callq  414af0 <strcasecmp@plt>
  44662b:	test   %eax,%eax
  44662d:	je     446680 <X509_get0_pubkey_bitstr@plt+0x2fcb0>
  44662f:	lea    0x24632(%rip),%rsi        # 46ac68 <_fini+0xd764>
  446636:	mov    %rbx,%rdi
  446639:	callq  414af0 <strcasecmp@plt>
  44663e:	test   %eax,%eax
  446640:	je     446670 <X509_get0_pubkey_bitstr@plt+0x2fca0>
  446642:	lea    0x24624(%rip),%rsi        # 46ac6d <_fini+0xd769>
  446649:	mov    %rbx,%rdi
  44664c:	callq  414af0 <strcasecmp@plt>
  446651:	mov    %eax,%edx
  446653:	xor    %eax,%eax
  446655:	test   %edx,%edx
  446657:	jne    446662 <X509_get0_pubkey_bitstr@plt+0x2fc92>
  446659:	movl   $0x2,0x0(%rbp)
  446660:	mov    $0x1,%al
  446662:	add    $0x8,%rsp
  446666:	pop    %rbx
  446667:	pop    %rbp
  446668:	retq   
  446669:	nopl   0x0(%rax)
  446670:	movl   $0x1,0x0(%rbp)
  446677:	add    $0x8,%rsp
  44667b:	mov    $0x1,%al
  44667d:	pop    %rbx
  44667e:	pop    %rbp
  44667f:	retq   
  446680:	movl   $0x0,0x0(%rbp)
  446687:	add    $0x8,%rsp
  44668b:	mov    $0x1,%al
  44668d:	pop    %rbx
  44668e:	pop    %rbp
  44668f:	retq   
  446690:	push   %r15
  446692:	mov    $0x1,%eax
  446697:	push   %r14
  446699:	push   %r13
  44669b:	push   %r12
  44669d:	push   %rbp
  44669e:	push   %rbx
  44669f:	mov    %rdi,%rbx
  4466a2:	sub    $0x18,%rsp
  4466a6:	test   %rdi,%rdi
  4466a9:	mov    %edx,0xc(%rsp)
  4466ad:	je     4466b8 <X509_get0_pubkey_bitstr@plt+0x2fce8>
  4466af:	test   %rsi,%rsi
  4466b2:	je     4466b8 <X509_get0_pubkey_bitstr@plt+0x2fce8>
  4466b4:	test   %edx,%edx
  4466b6:	jne    4466d0 <X509_get0_pubkey_bitstr@plt+0x2fd00>
  4466b8:	add    $0x18,%rsp
  4466bc:	pop    %rbx
  4466bd:	pop    %rbp
  4466be:	pop    %r12
  4466c0:	pop    %r13
  4466c2:	pop    %r14
  4466c4:	pop    %r15
  4466c6:	retq   
  4466c7:	nopw   0x0(%rax,%rax,1)
  4466d0:	mov    %rsi,%rdi
  4466d3:	xor    %r13d,%r13d
  4466d6:	callq  4127f0 <X509_REQ_get_extensions@plt>
  4466db:	mov    %rax,(%rsp)
  4466df:	mov    (%rsp),%rdi
  4466e3:	callq  4156d0 <sk_num@plt>
  4466e8:	cmp    %eax,%r13d
  4466eb:	jge    44679b <X509_get0_pubkey_bitstr@plt+0x2fdcb>
  4466f1:	nopl   0x0(%rax)
  4466f8:	mov    (%rsp),%rdi
  4466fc:	mov    %r13d,%esi
  4466ff:	callq  412b30 <sk_value@plt>
  446704:	mov    %rax,%rdi
  446707:	mov    %rax,%r14
  44670a:	callq  414580 <X509_EXTENSION_get_object@plt>
  44670f:	mov    $0xffffffff,%edx
  446714:	mov    %rax,%rsi
  446717:	mov    %rbx,%rdi
  44671a:	mov    %rax,%r12
  44671d:	callq  4154e0 <X509_get_ext_by_OBJ@plt>
  446722:	cmp    $0xffffffff,%eax
  446725:	mov    %eax,%r15d
  446728:	je     446771 <X509_get0_pubkey_bitstr@plt+0x2fda1>
  44672a:	cmpl   $0x1,0xc(%rsp)
  44672f:	je     446785 <X509_get0_pubkey_bitstr@plt+0x2fdb5>
  446731:	nopl   0x0(%rax)
  446738:	mov    %r15d,%esi
  44673b:	mov    %rbx,%rdi
  44673e:	callq  415400 <X509_get_ext@plt>
  446743:	mov    %r15d,%esi
  446746:	mov    %rax,%rbp
  446749:	mov    %rbx,%rdi
  44674c:	callq  413f10 <X509_delete_ext@plt>
  446751:	mov    %rbp,%rdi
  446754:	callq  416100 <X509_EXTENSION_free@plt>
  446759:	mov    $0xffffffff,%edx
  44675e:	mov    %r12,%rsi
  446761:	mov    %rbx,%rdi
  446764:	callq  4154e0 <X509_get_ext_by_OBJ@plt>
  446769:	cmp    $0xffffffff,%eax
  44676c:	mov    %eax,%r15d
  44676f:	jne    446738 <X509_get0_pubkey_bitstr@plt+0x2fd68>
  446771:	mov    $0xffffffff,%edx
  446776:	mov    %r14,%rsi
  446779:	mov    %rbx,%rdi
  44677c:	callq  4149c0 <X509_add_ext@plt>
  446781:	test   %eax,%eax
  446783:	je     4467c1 <X509_get0_pubkey_bitstr@plt+0x2fdf1>
  446785:	mov    (%rsp),%rdi
  446789:	add    $0x1,%r13d
  44678d:	callq  4156d0 <sk_num@plt>
  446792:	cmp    %eax,%r13d
  446795:	jl     4466f8 <X509_get0_pubkey_bitstr@plt+0x2fd28>
  44679b:	mov    $0x1,%ebx
  4467a0:	mov    (%rsp),%rdi
  4467a4:	mov    0x22f815(%rip),%rsi        # 675fc0 <_fini+0x218abc>
  4467ab:	callq  416250 <sk_pop_free@plt>
  4467b0:	add    $0x18,%rsp
  4467b4:	mov    %ebx,%eax
  4467b6:	pop    %rbx
  4467b7:	pop    %rbp
  4467b8:	pop    %r12
  4467ba:	pop    %r13
  4467bc:	pop    %r14
  4467be:	pop    %r15
  4467c0:	retq   
  4467c1:	xor    %ebx,%ebx
  4467c3:	jmp    4467a0 <X509_get0_pubkey_bitstr@plt+0x2fdd0>
  4467c5:	data32 nopw %cs:0x0(%rax,%rax,1)
  4467d0:	push   %r12
  4467d2:	test   %rsi,%rsi
  4467d5:	mov    %rdx,%r12
  4467d8:	push   %rbp
  4467d9:	mov    %rcx,%rbp
  4467dc:	push   %rbx
  4467dd:	mov    %rdi,%rbx
  4467e0:	je     4467e7 <X509_get0_pubkey_bitstr@plt+0x2fe17>
  4467e2:	callq  413b70 <BIO_puts@plt>
  4467e7:	mov    %rbp,%rax
  4467ea:	and    $0xf0000,%eax
  4467ef:	cmp    $0x40000,%rax
  4467f5:	je     446820 <X509_get0_pubkey_bitstr@plt+0x2fe50>
  4467f7:	xor    %edx,%edx
  4467f9:	test   %rbp,%rbp
  4467fc:	je     446840 <X509_get0_pubkey_bitstr@plt+0x2fe70>
  4467fe:	mov    %r12,%rsi
  446801:	mov    %rbx,%rdi
  446804:	mov    %rbp,%rcx
  446807:	callq  414bd0 <X509_NAME_print_ex@plt>
  44680c:	mov    %rbx,%rdi
  44680f:	lea    0x1e389(%rip),%rsi        # 464b9f <_fini+0x769b>
  446816:	pop    %rbx
  446817:	pop    %rbp
  446818:	pop    %r12
  44681a:	jmpq   413b70 <BIO_puts@plt>
  44681f:	nop
  446820:	lea    0x1e378(%rip),%rsi        # 464b9f <_fini+0x769b>
  446827:	mov    %rbx,%rdi
  44682a:	callq  413b70 <BIO_puts@plt>
  44682f:	mov    $0x4,%edx
  446834:	jmp    4467fe <X509_get0_pubkey_bitstr@plt+0x2fe2e>
  446836:	nopw   %cs:0x0(%rax,%rax,1)
  446840:	mov    %r12,%rdi
  446843:	xor    %esi,%esi
  446845:	callq  4139a0 <X509_NAME_oneline@plt>
  44684a:	mov    %rbx,%rdi
  44684d:	mov    %rax,%rsi
  446850:	mov    %rax,%rbp
  446853:	callq  413b70 <BIO_puts@plt>
  446858:	lea    0x1e340(%rip),%rsi        # 464b9f <_fini+0x769b>
  44685f:	mov    %rbx,%rdi
  446862:	callq  413b70 <BIO_puts@plt>
  446867:	pop    %rbx
  446868:	mov    %rbp,%rdi
  44686b:	pop    %rbp
  44686c:	pop    %r12
  44686e:	jmpq   415020 <CRYPTO_free@plt>
  446873:	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  446880:	push   %r13
  446882:	mov    %rdi,%r13
  446885:	push   %r12
  446887:	mov    %rdx,%r12
  44688a:	push   %rbp
  44688b:	mov    %rsi,%rbp
  44688e:	push   %rbx
  44688f:	sub    $0x8,%rsp
  446893:	callq  4166c0 <X509_STORE_new@plt>
  446898:	test   %rax,%rax
  44689b:	mov    %rax,%rbx
  44689e:	je     446982 <X509_get0_pubkey_bitstr@plt+0x2ffb2>
  4468a4:	callq  416980 <X509_LOOKUP_file@plt>
  4468a9:	mov    %rbx,%rdi
  4468ac:	mov    %rax,%rsi
  4468af:	callq  412c00 <X509_STORE_add_lookup@plt>
  4468b4:	test   %rax,%rax
  4468b7:	je     446982 <X509_get0_pubkey_bitstr@plt+0x2ffb2>
  4468bd:	xor    %r8d,%r8d
  4468c0:	test   %rbp,%rbp
  4468c3:	je     446938 <X509_get0_pubkey_bitstr@plt+0x2ff68>
  4468c5:	mov    $0x1,%ecx
  4468ca:	mov    %rbp,%rdx
  4468cd:	mov    $0x1,%esi
  4468d2:	mov    %rax,%rdi
  4468d5:	callq  4165f0 <X509_LOOKUP_ctrl@plt>
  4468da:	test   %eax,%eax
  4468dc:	je     446970 <X509_get0_pubkey_bitstr@plt+0x2ffa0>
  4468e2:	callq  415b90 <X509_LOOKUP_hash_dir@plt>
  4468e7:	mov    %rbx,%rdi
  4468ea:	mov    %rax,%rsi
  4468ed:	callq  412c00 <X509_STORE_add_lookup@plt>
  4468f2:	test   %rax,%rax
  4468f5:	je     446982 <X509_get0_pubkey_bitstr@plt+0x2ffb2>
  4468fb:	xor    %r8d,%r8d
  4468fe:	test   %r12,%r12
  446901:	je     446950 <X509_get0_pubkey_bitstr@plt+0x2ff80>
  446903:	mov    $0x1,%ecx
  446908:	mov    %r12,%rdx
  44690b:	mov    $0x2,%esi
  446910:	mov    %rax,%rdi
  446913:	callq  4165f0 <X509_LOOKUP_ctrl@plt>
  446918:	test   %eax,%eax
  44691a:	je     4469a0 <X509_get0_pubkey_bitstr@plt+0x2ffd0>
  446920:	callq  412890 <ERR_clear_error@plt>
  446925:	add    $0x8,%rsp
  446929:	mov    %rbx,%rax
  44692c:	pop    %rbx
  44692d:	pop    %rbp
  44692e:	pop    %r12
  446930:	pop    %r13
  446932:	retq   
  446933:	nopl   0x0(%rax,%rax,1)
  446938:	mov    $0x3,%ecx
  44693d:	xor    %edx,%edx
  44693f:	mov    $0x1,%esi
  446944:	mov    %rax,%rdi
  446947:	callq  4165f0 <X509_LOOKUP_ctrl@plt>
  44694c:	jmp    4468e2 <X509_get0_pubkey_bitstr@plt+0x2ff12>
  44694e:	xchg   %ax,%ax
  446950:	mov    $0x3,%ecx
  446955:	xor    %edx,%edx
  446957:	mov    $0x2,%esi
  44695c:	mov    %rax,%rdi
  44695f:	callq  4165f0 <X509_LOOKUP_ctrl@plt>
  446964:	jmp    446920 <X509_get0_pubkey_bitstr@plt+0x2ff50>
  446966:	nopw   %cs:0x0(%rax,%rax,1)
  446970:	lea    0x17202(%rip),%rsi        # 45db79 <_fini+0x675>
  446977:	mov    %rbp,%rdx
  44697a:	mov    %r13,%rdi
  44697d:	callq  413c40 <BIO_printf@plt>
  446982:	mov    %rbx,%rdi
  446985:	callq  4134b0 <X509_STORE_free@plt>
  44698a:	add    $0x8,%rsp
  44698e:	xor    %eax,%eax
  446990:	pop    %rbx
  446991:	pop    %rbp
  446992:	pop    %r12
  446994:	pop    %r13
  446996:	retq   
  446997:	nopw   0x0(%rax,%rax,1)
  4469a0:	lea    0x171e9(%rip),%rsi        # 45db90 <_fini+0x68c>
  4469a7:	mov    %r12,%rdx
  4469aa:	mov    %r13,%rdi
  4469ad:	callq  413c40 <BIO_printf@plt>
  4469b2:	jmp    446982 <X509_get0_pubkey_bitstr@plt+0x2ffb2>
  4469b4:	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4469c0:	push   %r13
  4469c2:	push   %r12
  4469c4:	push   %rbp
  4469c5:	mov    %rsi,%rbp
  4469c8:	push   %rbx
  4469c9:	sub    $0x8,%rsp
  4469cd:	test   %rsi,%rsi
  4469d0:	je     446b08 <X509_get0_pubkey_bitstr@plt+0x30138>
  4469d6:	mov    %rdi,%r12
  4469d9:	lea    0x21d2a(%rip),%rdi        # 46870a <_fini+0xb206>
  4469e0:	mov    $0x5,%ecx
  4469e5:	mov    %edx,%r13d
  4469e8:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4469ea:	je     446b18 <X509_get0_pubkey_bitstr@plt+0x30148>
  4469f0:	mov    %rbp,%rdi
  4469f3:	callq  4141e0 <ENGINE_by_id@plt>
  4469f8:	test   %rax,%rax
  4469fb:	mov    %rax,%rbx
  4469fe:	je     446a98 <X509_get0_pubkey_bitstr@plt+0x300c8>
  446a04:	test   %r13d,%r13d
  446a07:	jne    446a78 <X509_get0_pubkey_bitstr@plt+0x300a8>
  446a09:	mov    0x2351e0(%rip),%rcx        # 67bbf0 <_edata+0xee8>
  446a10:	lea    0x24291(%rip),%rsi        # 46aca8 <_fini+0xd7a4>
  446a17:	xor    %r8d,%r8d
  446a1a:	xor    %edx,%edx
  446a1c:	mov    $0x1,%r9d
  446a22:	mov    %rbx,%rdi
  446a25:	callq  414b80 <ENGINE_ctrl_cmd@plt>
  446a2a:	mov    $0xffff,%esi
  446a2f:	mov    %rbx,%rdi
  446a32:	callq  413e50 <ENGINE_set_default@plt>
  446a37:	test   %eax,%eax
  446a39:	je     446b38 <X509_get0_pubkey_bitstr@plt+0x30168>
  446a3f:	mov    %rbx,%rdi
  446a42:	callq  4130f0 <ENGINE_get_id@plt>
  446a47:	lea    0x24284(%rip),%rsi        # 46acd2 <_fini+0xd7ce>
  446a4e:	mov    %rax,%rdx
  446a51:	mov    %r12,%rdi
  446a54:	xor    %eax,%eax
  446a56:	callq  413c40 <BIO_printf@plt>
  446a5b:	mov    %rbx,%rdi
  446a5e:	callq  413360 <ENGINE_free@plt>
  446a63:	mov    %rbx,%rax
  446a66:	add    $0x8,%rsp
  446a6a:	pop    %rbx
  446a6b:	pop    %rbp
  446a6c:	pop    %r12
  446a6e:	pop    %r13
  446a70:	retq   
  446a71:	nopl   0x0(%rax)
  446a78:	xor    %r8d,%r8d
  446a7b:	mov    %r12,%rcx
  446a7e:	xor    %edx,%edx
  446a80:	mov    $0x1,%esi
  446a85:	mov    %rbx,%rdi
  446a88:	callq  4168c0 <ENGINE_ctrl@plt>
  446a8d:	jmpq   446a09 <X509_get0_pubkey_bitstr@plt+0x30039>
  446a92:	nopw   0x0(%rax,%rax,1)
  446a98:	lea    0x241f4(%rip),%rdi        # 46ac93 <_fini+0xd78f>
  446a9f:	callq  4141e0 <ENGINE_by_id@plt>
  446aa4:	test   %rax,%rax
  446aa7:	mov    %rax,%rbx
  446aaa:	je     446ae7 <X509_get0_pubkey_bitstr@plt+0x30117>
  446aac:	lea    0x241e8(%rip),%rsi        # 46ac9b <_fini+0xd797>
  446ab3:	xor    %ecx,%ecx
  446ab5:	mov    %rbp,%rdx
  446ab8:	mov    %rax,%rdi
  446abb:	callq  413540 <ENGINE_ctrl_cmd_string@plt>
  446ac0:	test   %eax,%eax
  446ac2:	je     446adf <X509_get0_pubkey_bitstr@plt+0x3010f>
  446ac4:	lea    0x241d8(%rip),%rsi        # 46aca3 <_fini+0xd79f>
  446acb:	xor    %ecx,%ecx
  446acd:	xor    %edx,%edx
  446acf:	mov    %rbx,%rdi
  446ad2:	callq  413540 <ENGINE_ctrl_cmd_string@plt>
  446ad7:	test   %eax,%eax
  446ad9:	jne    446a04 <X509_get0_pubkey_bitstr@plt+0x30034>
  446adf:	mov    %rbx,%rdi
  446ae2:	callq  413360 <ENGINE_free@plt>
  446ae7:	lea    0x241f6(%rip),%rsi        # 46ace4 <_fini+0xd7e0>
  446aee:	mov    %r12,%rdi
  446af1:	mov    %rbp,%rdx
  446af4:	xor    %eax,%eax
  446af6:	callq  413c40 <BIO_printf@plt>
  446afb:	mov    %r12,%rdi
  446afe:	callq  413f40 <ERR_print_errors@plt>
  446b03:	nopl   0x0(%rax,%rax,1)
  446b08:	add    $0x8,%rsp
  446b0c:	xor    %eax,%eax
  446b0e:	pop    %rbx
  446b0f:	pop    %rbp
  446b10:	pop    %r12
  446b12:	pop    %r13
  446b14:	retq   
  446b15:	nopl   (%rax)
  446b18:	lea    0x24156(%rip),%rsi        # 46ac75 <_fini+0xd771>
  446b1f:	mov    %r12,%rdi
  446b22:	xor    %eax,%eax
  446b24:	callq  413c40 <BIO_printf@plt>
  446b29:	callq  413500 <ENGINE_register_all_complete@plt>
  446b2e:	xor    %eax,%eax
  446b30:	jmpq   446a66 <X509_get0_pubkey_bitstr@plt+0x30096>
  446b35:	nopl   (%rax)
  446b38:	lea    0x2417c(%rip),%rsi        # 46acbb <_fini+0xd7b7>
  446b3f:	mov    %r12,%rdi
  446b42:	callq  413c40 <BIO_printf@plt>
  446b47:	mov    %r12,%rdi
  446b4a:	callq  413f40 <ERR_print_errors@plt>
  446b4f:	mov    %rbx,%rdi
  446b52:	callq  413360 <ENGINE_free@plt>
  446b57:	xor    %eax,%eax
  446b59:	jmpq   446a66 <X509_get0_pubkey_bitstr@plt+0x30096>
  446b5e:	xchg   %ax,%ax
  446b60:	mov    0x23507a(%rip),%eax        # 67bbe0 <_edata+0xed8>
  446b66:	test   %eax,%eax
  446b68:	jne    446bb0 <X509_get0_pubkey_bitstr@plt+0x301e0>
  446b6a:	push   %rbp
  446b6b:	mov    %rdi,%rbp
  446b6e:	push   %rbx
  446b6f:	mov    %rsi,%rbx
  446b72:	sub    $0x8,%rsp
  446b76:	test   %rsi,%rsi
  446b79:	movl   $0x1,0x23505d(%rip)        # 67bbe0 <_edata+0xed8>
  446b83:	je     446be0 <X509_get0_pubkey_bitstr@plt+0x30210>
  446b85:	callq  415430 <OPENSSL_load_builtin_modules@plt>
  446b8a:	xor    %edx,%edx
  446b8c:	xor    %esi,%esi
  446b8e:	mov    %rbx,%rdi
  446b91:	callq  4146d0 <CONF_modules_load@plt>
  446b96:	test   %eax,%eax
  446b98:	jle    446bc0 <X509_get0_pubkey_bitstr@plt+0x301f0>
  446b9a:	mov    $0x1,%eax
  446b9f:	add    $0x8,%rsp
  446ba3:	pop    %rbx
  446ba4:	pop    %rbp
  446ba5:	retq   
  446ba6:	nopw   %cs:0x0(%rax,%rax,1)
  446bb0:	mov    $0x1,%eax
  446bb5:	retq   
  446bb6:	nopw   %cs:0x0(%rax,%rax,1)
  446bc0:	lea    0x24132(%rip),%rsi        # 46acf9 <_fini+0xd7f5>
  446bc7:	mov    %rbp,%rdi
  446bca:	xor    %eax,%eax
  446bcc:	callq  413c40 <BIO_printf@plt>
  446bd1:	mov    %rbp,%rdi
  446bd4:	callq  413f40 <ERR_print_errors@plt>
  446bd9:	xor    %eax,%eax
  446bdb:	jmp    446b9f <X509_get0_pubkey_bitstr@plt+0x301cf>
  446bdd:	nopl   (%rax)
  446be0:	lea    0x234161(%rip),%rax        # 67ad48 <_edata+0x40>
  446be7:	mov    (%rax),%rbx
  446bea:	test   %rbx,%rbx
  446bed:	je     446b9a <X509_get0_pubkey_bitstr@plt+0x301ca>
  446bef:	jmp    446b85 <X509_get0_pubkey_bitstr@plt+0x301b5>
  446bf1:	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  446c00:	push   %r12
  446c02:	push   %rbp
  446c03:	push   %rbx
  446c04:	callq  414e20 <X509_get_default_cert_area@plt>
  446c09:	mov    %rax,%rdi
  446c0c:	mov    %rax,%r12
  446c0f:	callq  413470 <strlen@plt>
  446c14:	lea    0xd(%rax),%rbp
  446c18:	lea    0x23f0d(%rip),%rsi        # 46ab2c <_fini+0xd628>
  446c1f:	mov    $0x608,%edx
  446c24:	mov    %ebp,%edi
  446c26:	callq  413d50 <CRYPTO_malloc@plt>
  446c2b:	mov    %rbp,%rdx
  446c2e:	mov    %r12,%rsi
  446c31:	mov    %rax,%rdi
  446c34:	mov    %rax,%rbx
  446c37:	callq  413560 <BUF_strlcpy@plt>
  446c3c:	lea    0x21690(%rip),%rsi        # 4682d3 <_fini+0xadcf>
  446c43:	mov    %rbp,%rdx
  446c46:	mov    %rbx,%rdi
  446c49:	callq  414b30 <BUF_strlcat@plt>
  446c4e:	lea    0x1a430(%rip),%rsi        # 461085 <_fini+0x3b81>
  446c55:	mov    %rbp,%rdx
  446c58:	mov    %rbx,%rdi
  446c5b:	callq  414b30 <BUF_strlcat@plt>
  446c60:	mov    %rbx,%rax
  446c63:	pop    %rbx
  446c64:	pop    %rbp
  446c65:	pop    %r12
  446c67:	retq   
  446c68:	nopl   0x0(%rax,%rax,1)
  446c70:	mov    0x28(%rsi),%rsi
  446c74:	mov    0x28(%rdi),%rdi
  446c78:	jmpq   4155c0 <strcmp@plt>
  446c7d:	nopl   (%rax)
  446c80:	jmpq   446c70 <X509_get0_pubkey_bitstr@plt+0x302a0>
  446c85:	data32 nopw %cs:0x0(%rax,%rax,1)
  446c90:	push   %r14
  446c92:	mov    %rdx,%r14
  446c95:	push   %r13
  446c97:	mov    %rcx,%r13
  446c9a:	push   %r12
  446c9c:	push   %rbp
  446c9d:	mov    %rdi,%rbp
  446ca0:	push   %rbx
  446ca1:	mov    %rsi,%rbx
  446ca4:	sub    $0x110,%rsp
  446cab:	mov    %fs:0x28,%rax
  446cb4:	mov    %rax,0x108(%rsp)
  446cbc:	xor    %eax,%eax
  446cbe:	test   %rsi,%rsi
  446cc1:	je     446de0 <X509_get0_pubkey_bitstr@plt+0x30410>
  446cc7:	callq  413470 <strlen@plt>
  446ccc:	mov    %rbx,%rdi
  446ccf:	mov    %rax,%r12
  446cd2:	callq  413470 <strlen@plt>
  446cd7:	lea    0x1(%r12,%rax,1),%eax
  446cdc:	cmp    $0xff,%eax
  446ce1:	jg     446db0 <X509_get0_pubkey_bitstr@plt+0x303e0>
  446ce7:	lea    0x2403a(%rip),%rdx        # 46ad28 <_fini+0xd824>
  446cee:	mov    %rbx,%r8
  446cf1:	mov    %rbp,%rcx
  446cf4:	mov    $0x100,%esi
  446cf9:	mov    %rsp,%rdi
  446cfc:	xor    %eax,%eax
  446cfe:	mov    %rsp,%r12
  446d01:	callq  412fc0 <BIO_snprintf@plt>
  446d06:	callq  4152b0 <BIO_s_file@plt>
  446d0b:	mov    %rax,%rdi
  446d0e:	callq  414a20 <BIO_new@plt>
  446d13:	test   %rax,%rax
  446d16:	mov    %rax,%rbx
  446d19:	je     446e08 <X509_get0_pubkey_bitstr@plt+0x30438>
  446d1f:	mov    %r12,%rcx
  446d22:	mov    $0x5,%edx
  446d27:	mov    $0x6c,%esi
  446d2c:	mov    %rax,%rdi
  446d2f:	callq  412af0 <BIO_ctrl@plt>
  446d34:	test   %rax,%rax
  446d37:	jle    446dd0 <X509_get0_pubkey_bitstr@plt+0x30400>
  446d3d:	xor    %esi,%esi
  446d3f:	mov    %r14,%rdi
  446d42:	callq  412da0 <BN_to_ASN1_INTEGER@plt>
  446d47:	test   %rax,%rax
  446d4a:	mov    %rax,%rbp
  446d4d:	je     446e20 <X509_get0_pubkey_bitstr@plt+0x30450>
  446d53:	mov    %rax,%rsi
  446d56:	mov    %rbx,%rdi
  446d59:	callq  414ea0 <i2a_ASN1_INTEGER@plt>
  446d5e:	lea    0x1de3a(%rip),%rsi        # 464b9f <_fini+0x769b>
  446d65:	mov    %rbx,%rdi
  446d68:	callq  413b70 <BIO_puts@plt>
  446d6d:	test   %r13,%r13
  446d70:	je     446e40 <X509_get0_pubkey_bitstr@plt+0x30470>
  446d76:	mov    %rbp,0x0(%r13)
  446d7a:	mov    $0x1,%ebp
  446d7f:	mov    %rbx,%rdi
  446d82:	callq  416570 <BIO_free_all@plt>
  446d87:	mov    0x108(%rsp),%rcx
  446d8f:	xor    %fs:0x28,%rcx
  446d98:	mov    %ebp,%eax
  446d9a:	jne    446e5a <X509_get0_pubkey_bitstr@plt+0x3048a>
  446da0:	add    $0x110,%rsp
  446da7:	pop    %rbx
  446da8:	pop    %rbp
  446da9:	pop    %r12
  446dab:	pop    %r13
  446dad:	pop    %r14
  446daf:	retq   
  446db0:	lea    0x233f89(%rip),%rax        # 67ad40 <_edata+0x38>
  446db7:	lea    0x23f56(%rip),%rsi        # 46ad14 <_fini+0xd810>
  446dbe:	xor    %ebp,%ebp
  446dc0:	mov    (%rax),%rdi
  446dc3:	xor    %eax,%eax
  446dc5:	callq  413c40 <BIO_printf@plt>
  446dca:	jmp    446d87 <X509_get0_pubkey_bitstr@plt+0x303b7>
  446dcc:	nopl   0x0(%rax)
  446dd0:	mov    %rbp,%rdi
  446dd3:	xor    %ebp,%ebp
  446dd5:	callq  4142c0 <perror@plt>
  446dda:	jmp    446d7f <X509_get0_pubkey_bitstr@plt+0x303af>
  446ddc:	nopl   0x0(%rax)
  446de0:	callq  413470 <strlen@plt>
  446de5:	cmp    $0xff,%eax
  446dea:	jg     446db0 <X509_get0_pubkey_bitstr@plt+0x303e0>
  446dec:	mov    $0x100,%edx
  446df1:	mov    %rbp,%rsi
  446df4:	mov    %rsp,%rdi
  446df7:	mov    %rsp,%r12
  446dfa:	callq  413560 <BUF_strlcpy@plt>
  446dff:	jmpq   446d06 <X509_get0_pubkey_bitstr@plt+0x30336>
  446e04:	nopl   0x0(%rax)
  446e08:	lea    0x233f31(%rip),%rax        # 67ad40 <_edata+0x38>
  446e0f:	xor    %ebp,%ebp
  446e11:	mov    (%rax),%rdi
  446e14:	callq  413f40 <ERR_print_errors@plt>
  446e19:	jmpq   446d87 <X509_get0_pubkey_bitstr@plt+0x303b7>
  446e1e:	xchg   %ax,%ax
  446e20:	lea    0x233f19(%rip),%rax        # 67ad40 <_edata+0x38>
  446e27:	lea    0x2449a(%rip),%rsi        # 46b2c8 <_fini+0xddc4>
  446e2e:	mov    (%rax),%rdi
  446e31:	xor    %eax,%eax
  446e33:	callq  413c40 <BIO_printf@plt>
  446e38:	jmpq   446d7f <X509_get0_pubkey_bitstr@plt+0x303af>
  446e3d:	nopl   (%rax)
  446e40:	mov    %rbx,%rdi
  446e43:	callq  416570 <BIO_free_all@plt>
  446e48:	mov    %rbp,%rdi
  446e4b:	mov    $0x1,%ebp
  446e50:	callq  412a90 <ASN1_INTEGER_free@plt>
  446e55:	jmpq   446d87 <X509_get0_pubkey_bitstr@plt+0x303b7>
  446e5a:	callq  414c30 <__stack_chk_fail@plt>
  446e5f:	nop
  446e60:	push   %r14
  446e62:	mov    %rsi,%r14
  446e65:	push   %r13
  446e67:	mov    %rdx,%r13
  446e6a:	push   %r12
  446e6c:	push   %rbp
  446e6d:	push   %rbx
  446e6e:	mov    %rdi,%rbx
  446e71:	sub    $0x510,%rsp
  446e78:	mov    %fs:0x28,%rax
  446e81:	mov    %rax,0x508(%rsp)
  446e89:	xor    %eax,%eax
  446e8b:	callq  413470 <strlen@plt>
  446e90:	mov    %r13,%rdi
  446e93:	mov    %rax,%rbp
  446e96:	callq  413470 <strlen@plt>
  446e9b:	mov    %r14,%rdi
  446e9e:	lea    0x0(%rbp,%rax,1),%r12d
  446ea3:	callq  413470 <strlen@plt>
  446ea8:	add    %eax,%ebp
  446eaa:	cmp    %r12d,%ebp
  446ead:	cmovl  %r12d,%ebp
  446eb1:	cmp    $0xfe,%ebp
  446eb7:	jg     446f90 <X509_get0_pubkey_bitstr@plt+0x305c0>
  446ebd:	lea    0x23e64(%rip),%rdx        # 46ad28 <_fini+0xd824>
  446ec4:	mov    %r14,%r8
  446ec7:	mov    %rbx,%rcx
  446eca:	mov    $0x100,%esi
  446ecf:	mov    %rsp,%rdi
  446ed2:	xor    %eax,%eax
  446ed4:	lea    0x100(%rsp),%r12
  446edc:	mov    %rsp,%rbp
  446edf:	callq  412fc0 <BIO_snprintf@plt>
  446ee4:	lea    0x23e3d(%rip),%rdx        # 46ad28 <_fini+0xd824>
  446eeb:	mov    %r13,%r8
  446eee:	mov    %rbx,%rcx
  446ef1:	mov    $0x100,%esi
  446ef6:	mov    %r12,%rdi
  446ef9:	xor    %eax,%eax
  446efb:	callq  412fc0 <BIO_snprintf@plt>
  446f00:	mov    %r12,%rsi
  446f03:	mov    %rbx,%rdi
  446f06:	callq  413c10 <rename@plt>
  446f0b:	test   %eax,%eax
  446f0d:	js     446f50 <X509_get0_pubkey_bitstr@plt+0x30580>
  446f0f:	mov    %rbx,%rsi
  446f12:	mov    %rbp,%rdi
  446f15:	callq  413c10 <rename@plt>
  446f1a:	mov    %eax,%edx
  446f1c:	mov    $0x1,%eax
  446f21:	test   %edx,%edx
  446f23:	js     446fb0 <X509_get0_pubkey_bitstr@plt+0x305e0>
  446f29:	mov    0x508(%rsp),%rcx
  446f31:	xor    %fs:0x28,%rcx
  446f3a:	jne    446ff0 <X509_get0_pubkey_bitstr@plt+0x30620>
  446f40:	add    $0x510,%rsp
  446f47:	pop    %rbx
  446f48:	pop    %rbp
  446f49:	pop    %r12
  446f4b:	pop    %r13
  446f4d:	pop    %r14
  446f4f:	retq   
  446f50:	callq  412830 <__errno_location@plt>
  446f55:	mov    (%rax),%eax
  446f57:	cmp    $0x2,%eax
  446f5a:	je     446f0f <X509_get0_pubkey_bitstr@plt+0x3053f>
  446f5c:	cmp    $0x14,%eax
  446f5f:	je     446f0f <X509_get0_pubkey_bitstr@plt+0x3053f>
  446f61:	lea    0x233dd8(%rip),%rax        # 67ad40 <_edata+0x38>
  446f68:	lea    0x23dbf(%rip),%rsi        # 46ad2e <_fini+0xd82a>
  446f6f:	mov    %r12,%rcx
  446f72:	mov    %rbx,%rdx
  446f75:	mov    (%rax),%rdi
  446f78:	xor    %eax,%eax
  446f7a:	callq  413c40 <BIO_printf@plt>
  446f7f:	lea    0x1a0cb(%rip),%rdi        # 461051 <_fini+0x3b4d>
  446f86:	callq  4142c0 <perror@plt>
  446f8b:	xor    %eax,%eax
  446f8d:	jmp    446f29 <X509_get0_pubkey_bitstr@plt+0x30559>
  446f8f:	nop
  446f90:	lea    0x233da9(%rip),%rax        # 67ad40 <_edata+0x38>
  446f97:	lea    0x23d76(%rip),%rsi        # 46ad14 <_fini+0xd810>
  446f9e:	mov    (%rax),%rdi
  446fa1:	xor    %eax,%eax
  446fa3:	callq  413c40 <BIO_printf@plt>
  446fa8:	xor    %eax,%eax
  446faa:	jmpq   446f29 <X509_get0_pubkey_bitstr@plt+0x30559>
  446faf:	nop
  446fb0:	lea    0x233d89(%rip),%rax        # 67ad40 <_edata+0x38>
  446fb7:	lea    0x23d70(%rip),%rsi        # 46ad2e <_fini+0xd82a>
  446fbe:	mov    %rbx,%rcx
  446fc1:	mov    %rbp,%rdx
  446fc4:	mov    (%rax),%rdi
  446fc7:	xor    %eax,%eax
  446fc9:	callq  413c40 <BIO_printf@plt>
  446fce:	lea    0x1a07c(%rip),%rdi        # 461051 <_fini+0x3b4d>
  446fd5:	callq  4142c0 <perror@plt>
  446fda:	lea    0x100(%rbp),%rdi
  446fe1:	mov    %rbx,%rsi
  446fe4:	callq  413c10 <rename@plt>
  446fe9:	xor    %eax,%eax
  446feb:	jmpq   446f29 <X509_get0_pubkey_bitstr@plt+0x30559>
  446ff0:	callq  414c30 <__stack_chk_fail@plt>
  446ff5:	data32 nopw %cs:0x0(%rax,%rax,1)
  447000:	push   %r12
  447002:	mov    %rsi,%r12
  447005:	push   %rbp
  447006:	mov    %rdi,%rbp
  447009:	push   %rbx
  44700a:	mov    %rdi,%rbx
  44700d:	sub    $0x10,%rsp
  447011:	test   %rdi,%rdi
  447014:	je     447060 <X509_get0_pubkey_bitstr@plt+0x30690>
  447016:	xor    %edx,%edx
  447018:	xor    %ecx,%ecx
  44701a:	mov    $0x40,%esi
  44701f:	mov    %rbp,%rdi
  447022:	callq  414390 <BN_pseudo_rand@plt>
  447027:	xor    %edx,%edx
  447029:	test   %eax,%eax
  44702b:	jne    447040 <X509_get0_pubkey_bitstr@plt+0x30670>
  44702d:	test   %rbx,%rbx
  447030:	mov    %edx,%eax
  447032:	je     447078 <X509_get0_pubkey_bitstr@plt+0x306a8>
  447034:	add    $0x10,%rsp
  447038:	pop    %rbx
  447039:	pop    %rbp
  44703a:	pop    %r12
  44703c:	retq   
  44703d:	nopl   (%rax)
  447040:	test   %r12,%r12
  447043:	mov    $0x1,%dl
  447045:	je     44702d <X509_get0_pubkey_bitstr@plt+0x3065d>
  447047:	mov    %r12,%rsi
  44704a:	mov    %rbp,%rdi
  44704d:	callq  412da0 <BN_to_ASN1_INTEGER@plt>
  447052:	xor    %edx,%edx
  447054:	test   %rax,%rax
  447057:	setne  %dl
  44705a:	jmp    44702d <X509_get0_pubkey_bitstr@plt+0x3065d>
  44705c:	nopl   0x0(%rax)
  447060:	callq  416760 <BN_new@plt>
  447065:	test   %rax,%rax
  447068:	mov    %rax,%rbp
  44706b:	jne    447016 <X509_get0_pubkey_bitstr@plt+0x30646>
  44706d:	xor    %eax,%eax
  44706f:	jmp    447034 <X509_get0_pubkey_bitstr@plt+0x30664>
  447071:	nopl   0x0(%rax)
  447078:	mov    %rbp,%rdi
  44707b:	mov    %edx,0xc(%rsp)
  44707f:	callq  4138e0 <BN_free@plt>
  447084:	mov    0xc(%rsp),%eax
  447088:	jmp    447034 <X509_get0_pubkey_bitstr@plt+0x30664>
  44708a:	nopw   0x0(%rax,%rax,1)
  447090:	push   %r14
  447092:	mov    %esi,%r14d
  447095:	push   %r13
  447097:	mov    %rdx,%r13
  44709a:	push   %r12
  44709c:	mov    %rdi,%r12
  44709f:	push   %rbp
  4470a0:	push   %rbx
  4470a1:	sub    $0x410,%rsp
  4470a8:	mov    %fs:0x28,%rax
  4470b1:	mov    %rax,0x408(%rsp)
  4470b9:	xor    %eax,%eax
  4470bb:	callq  4162e0 <ASN1_INTEGER_new@plt>
  4470c0:	test   %rax,%rax
  4470c3:	mov    %rax,%rbx
  4470c6:	je     4471d5 <X509_get0_pubkey_bitstr@plt+0x30805>
  4470cc:	callq  4152b0 <BIO_s_file@plt>
  4470d1:	mov    %rax,%rdi
  4470d4:	callq  414a20 <BIO_new@plt>
  4470d9:	test   %rax,%rax
  4470dc:	mov    %rax,%rbp
  4470df:	je     4471c6 <X509_get0_pubkey_bitstr@plt+0x307f6>
  4470e5:	mov    %r12,%rcx
  4470e8:	mov    $0x3,%edx
  4470ed:	mov    $0x6c,%esi
  4470f2:	mov    %rax,%rdi
  4470f5:	callq  412af0 <BIO_ctrl@plt>
  4470fa:	test   %rax,%rax
  4470fd:	jle    447188 <X509_get0_pubkey_bitstr@plt+0x307b8>
  447103:	mov    %rsp,%rdx
  447106:	mov    $0x400,%ecx
  44710b:	mov    %rbx,%rsi
  44710e:	mov    %rbp,%rdi
  447111:	callq  4167d0 <a2i_ASN1_INTEGER@plt>
  447116:	test   %eax,%eax
  447118:	je     4471e0 <X509_get0_pubkey_bitstr@plt+0x30810>
  44711e:	xor    %esi,%esi
  447120:	mov    %rbx,%rdi
  447123:	callq  412f90 <ASN1_INTEGER_to_BN@plt>
  447128:	test   %rax,%rax
  44712b:	mov    %rax,%r12
  44712e:	je     447220 <X509_get0_pubkey_bitstr@plt+0x30850>
  447134:	test   %r12,%r12
  447137:	je     447144 <X509_get0_pubkey_bitstr@plt+0x30774>
  447139:	test   %r13,%r13
  44713c:	je     447144 <X509_get0_pubkey_bitstr@plt+0x30774>
  44713e:	mov    %rbx,0x0(%r13)
  447142:	xor    %ebx,%ebx
  447144:	mov    %rbp,%rdi
  447147:	callq  413960 <BIO_free@plt>
  44714c:	test   %rbx,%rbx
  44714f:	je     447159 <X509_get0_pubkey_bitstr@plt+0x30789>
  447151:	mov    %rbx,%rdi
  447154:	callq  412a90 <ASN1_INTEGER_free@plt>
  447159:	mov    0x408(%rsp),%rcx
  447161:	xor    %fs:0x28,%rcx
  44716a:	mov    %r12,%rax
  44716d:	jne    44723d <X509_get0_pubkey_bitstr@plt+0x3086d>
  447173:	add    $0x410,%rsp
  44717a:	pop    %rbx
  44717b:	pop    %rbp
  44717c:	pop    %r12
  44717e:	pop    %r13
  447180:	pop    %r14
  447182:	retq   
  447183:	nopl   0x0(%rax,%rax,1)
  447188:	test   %r14d,%r14d
  44718b:	je     447208 <X509_get0_pubkey_bitstr@plt+0x30838>
  44718d:	callq  416760 <BN_new@plt>
  447192:	test   %rax,%rax
  447195:	mov    %rax,%r12
  447198:	je     4471a9 <X509_get0_pubkey_bitstr@plt+0x307d9>
  44719a:	mov    %rbx,%rsi
  44719d:	mov    %rax,%rdi
  4471a0:	callq  447000 <X509_get0_pubkey_bitstr@plt+0x30630>
  4471a5:	test   %eax,%eax
  4471a7:	jne    447134 <X509_get0_pubkey_bitstr@plt+0x30764>
  4471a9:	lea    0x233b90(%rip),%rax        # 67ad40 <_edata+0x38>
  4471b0:	lea    0x23b92(%rip),%rsi        # 46ad49 <_fini+0xd845>
  4471b7:	mov    (%rax),%rdi
  4471ba:	xor    %eax,%eax
  4471bc:	callq  413c40 <BIO_printf@plt>
  4471c1:	jmpq   447134 <X509_get0_pubkey_bitstr@plt+0x30764>
  4471c6:	lea    0x233b73(%rip),%rax        # 67ad40 <_edata+0x38>
  4471cd:	mov    (%rax),%rdi
  4471d0:	callq  413f40 <ERR_print_errors@plt>
  4471d5:	xor    %r12d,%r12d
  4471d8:	jmpq   44714c <X509_get0_pubkey_bitstr@plt+0x3077c>
  4471dd:	nopl   (%rax)
  4471e0:	lea    0x233b59(%rip),%rax        # 67ad40 <_edata+0x38>
  4471e7:	lea    0x2410a(%rip),%rsi        # 46b2f8 <_fini+0xddf4>
  4471ee:	mov    %r12,%rdx
  4471f1:	xor    %r12d,%r12d
  4471f4:	mov    (%rax),%rdi
  4471f7:	xor    %eax,%eax
  4471f9:	callq  413c40 <BIO_printf@plt>
  4471fe:	jmpq   447144 <X509_get0_pubkey_bitstr@plt+0x30774>
  447203:	nopl   0x0(%rax,%rax,1)
  447208:	mov    %r12,%rdi
  44720b:	xor    %r12d,%r12d
  44720e:	callq  4142c0 <perror@plt>
  447213:	jmpq   447144 <X509_get0_pubkey_bitstr@plt+0x30774>
  447218:	nopl   0x0(%rax,%rax,1)
  447220:	lea    0x233b19(%rip),%rax        # 67ad40 <_edata+0x38>
  447227:	lea    0x240ea(%rip),%rsi        # 46b318 <_fini+0xde14>
  44722e:	mov    (%rax),%rdi
  447231:	xor    %eax,%eax
  447233:	callq  413c40 <BIO_printf@plt>
  447238:	jmpq   447144 <X509_get0_pubkey_bitstr@plt+0x30774>
  44723d:	callq  414c30 <__stack_chk_fail@plt>
  447242:	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  447250:	push   %rbp
  447251:	mov    %rdi,%rbp
  447254:	lea    -0x29bb(%rip),%r8        # 4448a0 <X509_get0_pubkey_bitstr@plt+0x2ded0>
  44725b:	lea    -0x23f2(%rip),%rcx        # 444e70 <X509_get0_pubkey_bitstr@plt+0x2e4a0>
  447262:	xor    %edx,%edx
  447264:	mov    $0x3,%esi
  447269:	push   %rbx
  44726a:	sub    $0x8,%rsp
  44726e:	mov    0x8(%rdi),%rdi
  447272:	callq  412d40 <TXT_DB_create_index@plt>
  447277:	test   %eax,%eax
  447279:	mov    %eax,%ebx
  44727b:	je     4472f8 <X509_get0_pubkey_bitstr@plt+0x30928>
  44727d:	mov    0x0(%rbp),%eax
  447280:	test   %eax,%eax
  447282:	jne    447298 <X509_get0_pubkey_bitstr@plt+0x308c8>
  447284:	mov    $0x1,%ebx
  447289:	add    $0x8,%rsp
  44728d:	mov    %ebx,%eax
  44728f:	pop    %rbx
  447290:	pop    %rbp
  447291:	retq   
  447292:	nopw   0x0(%rax,%rax,1)
  447298:	mov    0x8(%rbp),%rdi
  44729c:	lea    -0x623(%rip),%r8        # 446c80 <X509_get0_pubkey_bitstr@plt+0x302b0>
  4472a3:	lea    -0x244a(%rip),%rcx        # 444e60 <X509_get0_pubkey_bitstr@plt+0x2e490>
  4472aa:	lea    -0x2a21(%rip),%rdx        # 444890 <X509_get0_pubkey_bitstr@plt+0x2dec0>
  4472b1:	mov    $0x5,%esi
  4472b6:	callq  412d40 <TXT_DB_create_index@plt>
  4472bb:	test   %eax,%eax
  4472bd:	mov    %eax,%ebx
  4472bf:	jne    447284 <X509_get0_pubkey_bitstr@plt+0x308b4>
  4472c1:	mov    0x8(%rbp),%rax
  4472c5:	lea    0x240b4(%rip),%rsi        # 46b380 <_fini+0xde7c>
  4472cc:	mov    0x28(%rax),%rcx
  4472d0:	mov    0x20(%rax),%rdx
  4472d4:	mov    0x30(%rax),%r8
  4472d8:	lea    0x233a61(%rip),%rax        # 67ad40 <_edata+0x38>
  4472df:	mov    (%rax),%rdi
  4472e2:	xor    %eax,%eax
  4472e4:	callq  413c40 <BIO_printf@plt>
  4472e9:	add    $0x8,%rsp
  4472ed:	mov    %ebx,%eax
  4472ef:	pop    %rbx
  4472f0:	pop    %rbp
  4472f1:	retq   
  4472f2:	nopw   0x0(%rax,%rax,1)
  4472f8:	mov    0x8(%rbp),%rax
  4472fc:	lea    0x24045(%rip),%rsi        # 46b348 <_fini+0xde44>
  447303:	mov    0x28(%rax),%rcx
  447307:	mov    0x20(%rax),%rdx
  44730b:	mov    0x30(%rax),%r8
  44730f:	lea    0x233a2a(%rip),%rax        # 67ad40 <_edata+0x38>
  447316:	mov    (%rax),%rdi
  447319:	xor    %eax,%eax
  44731b:	callq  413c40 <BIO_printf@plt>
  447320:	add    $0x8,%rsp
  447324:	mov    %ebx,%eax
  447326:	pop    %rbx
  447327:	pop    %rbp
  447328:	retq   
  447329:	nopl   0x0(%rax)
  447330:	push   %r15
  447332:	push   %r14
  447334:	mov    %rdx,%r14
  447337:	push   %r13
  447339:	push   %r12
  44733b:	mov    %rsi,%r12
  44733e:	push   %rbp
  44733f:	push   %rbx
  447340:	mov    %rdi,%rbx
  447343:	sub    $0x328,%rsp
  44734a:	mov    %fs:0x28,%rax
  447353:	mov    %rax,0x318(%rsp)
  44735b:	xor    %eax,%eax
  44735d:	callq  4152b0 <BIO_s_file@plt>
  447362:	mov    %rax,%rdi
  447365:	callq  414a20 <BIO_new@plt>
  44736a:	test   %rax,%rax
  44736d:	mov    %rax,%rbp
  447370:	je     447520 <X509_get0_pubkey_bitstr@plt+0x30b50>
  447376:	mov    %rbx,%rdi
  447379:	callq  413470 <strlen@plt>
  44737e:	mov    %r12,%rdi
  447381:	mov    %rax,%r13
  447384:	callq  413470 <strlen@plt>
  447389:	add    %eax,%r13d
  44738c:	cmp    $0xf9,%r13d
  447393:	jg     4474d0 <X509_get0_pubkey_bitstr@plt+0x30b00>
  447399:	lea    0x10(%rsp),%r13
  44739e:	lea    0x210(%rsp),%rax
  4473a6:	lea    0x239b2(%rip),%rdx        # 46ad5f <_fini+0xd85b>
  4473ad:	mov    %rbx,%rcx
  4473b0:	mov    $0x100,%esi
  4473b5:	mov    %rax,%rdi
  4473b8:	mov    %rax,0x8(%rsp)
  4473bd:	lea    0x100(%r13),%r15
  4473c4:	xor    %eax,%eax
  4473c6:	callq  412fc0 <BIO_snprintf@plt>
  4473cb:	lea    0x23995(%rip),%rdx        # 46ad67 <_fini+0xd863>
  4473d2:	mov    %r12,%r8
  4473d5:	mov    %rbx,%rcx
  4473d8:	mov    $0x100,%esi
  4473dd:	mov    %r15,%rdi
  4473e0:	xor    %eax,%eax
  4473e2:	callq  412fc0 <BIO_snprintf@plt>
  4473e7:	lea    0x2393a(%rip),%rdx        # 46ad28 <_fini+0xd824>
  4473ee:	mov    %r12,%r8
  4473f1:	mov    %rbx,%rcx
  4473f4:	mov    $0x100,%esi
  4473f9:	mov    %r13,%rdi
  4473fc:	xor    %eax,%eax
  4473fe:	callq  412fc0 <BIO_snprintf@plt>
  447403:	mov    %r13,%rcx
  447406:	mov    $0x5,%edx
  44740b:	mov    $0x6c,%esi
  447410:	mov    %rbp,%rdi
  447413:	callq  412af0 <BIO_ctrl@plt>
  447418:	test   %rax,%rax
  44741b:	jle    4474f0 <X509_get0_pubkey_bitstr@plt+0x30b20>
  447421:	mov    0x8(%r14),%rsi
  447425:	mov    %rbp,%rdi
  447428:	xor    %ebx,%ebx
  44742a:	callq  4133a0 <TXT_DB_write@plt>
  44742f:	test   %eax,%eax
  447431:	jle    44749e <X509_get0_pubkey_bitstr@plt+0x30ace>
  447433:	mov    %rbp,%rdi
  447436:	callq  413960 <BIO_free@plt>
  44743b:	callq  4152b0 <BIO_s_file@plt>
  447440:	mov    %rax,%rdi
  447443:	callq  414a20 <BIO_new@plt>
  447448:	mov    %r15,%rcx
  44744b:	mov    $0x5,%edx
  447450:	mov    $0x6c,%esi
  447455:	mov    %rax,%rdi
  447458:	mov    %rax,%rbp
  44745b:	callq  412af0 <BIO_ctrl@plt>
  447460:	test   %rax,%rax
  447463:	jle    447540 <X509_get0_pubkey_bitstr@plt+0x30b70>
  447469:	mov    (%r14),%eax
  44746c:	lea    0x238e5(%rip),%rdx        # 46ad58 <_fini+0xd854>
  447473:	lea    0x2390d(%rip),%rsi        # 46ad87 <_fini+0xd883>
  44747a:	mov    %rbp,%rdi
  44747d:	mov    $0x1,%ebx
  447482:	test   %eax,%eax
  447484:	lea    0x238d1(%rip),%rax        # 46ad5c <_fini+0xd858>
  44748b:	cmove  %rax,%rdx
  44748f:	xor    %eax,%eax
  447491:	callq  413c40 <BIO_printf@plt>
  447496:	mov    %rbp,%rdi
  447499:	callq  413960 <BIO_free@plt>
  44749e:	mov    0x318(%rsp),%rcx
  4474a6:	xor    %fs:0x28,%rcx
  4474af:	mov    %ebx,%eax
  4474b1:	jne    44756d <X509_get0_pubkey_bitstr@plt+0x30b9d>
  4474b7:	add    $0x328,%rsp
  4474be:	pop    %rbx
  4474bf:	pop    %rbp
  4474c0:	pop    %r12
  4474c2:	pop    %r13
  4474c4:	pop    %r14
  4474c6:	pop    %r15
  4474c8:	retq   
  4474c9:	nopl   0x0(%rax)
  4474d0:	lea    0x233869(%rip),%rax        # 67ad40 <_edata+0x38>
  4474d7:	lea    0x23836(%rip),%rsi        # 46ad14 <_fini+0xd810>
  4474de:	xor    %ebx,%ebx
  4474e0:	mov    (%rax),%rdi
  4474e3:	xor    %eax,%eax
  4474e5:	callq  413c40 <BIO_printf@plt>
  4474ea:	jmp    44749e <X509_get0_pubkey_bitstr@plt+0x30ace>
  4474ec:	nopl   0x0(%rax)
  4474f0:	mov    %rbx,%rdi
  4474f3:	callq  4142c0 <perror@plt>
  4474f8:	lea    0x233841(%rip),%rax        # 67ad40 <_edata+0x38>
  4474ff:	lea    0x2386c(%rip),%rsi        # 46ad72 <_fini+0xd86e>
  447506:	mov    %rbx,%rdx
  447509:	xor    %ebx,%ebx
  44750b:	mov    (%rax),%rdi
  44750e:	xor    %eax,%eax
  447510:	callq  413c40 <BIO_printf@plt>
  447515:	jmp    44749e <X509_get0_pubkey_bitstr@plt+0x30ace>
  447517:	nopw   0x0(%rax,%rax,1)
  447520:	lea    0x233819(%rip),%rax        # 67ad40 <_edata+0x38>
  447527:	xor    %ebx,%ebx
  447529:	mov    (%rax),%rdi
  44752c:	callq  413f40 <ERR_print_errors@plt>
  447531:	jmpq   44749e <X509_get0_pubkey_bitstr@plt+0x30ace>
  447536:	nopw   %cs:0x0(%rax,%rax,1)
  447540:	mov    0x8(%rsp),%r15
  447545:	mov    %r15,%rdi
  447548:	callq  4142c0 <perror@plt>
  44754d:	lea    0x2337ec(%rip),%rax        # 67ad40 <_edata+0x38>
  447554:	lea    0x23817(%rip),%rsi        # 46ad72 <_fini+0xd86e>
  44755b:	mov    %r15,%rdx
  44755e:	mov    (%rax),%rdi
  447561:	xor    %eax,%eax
  447563:	callq  413c40 <BIO_printf@plt>
  447568:	jmpq   44749e <X509_get0_pubkey_bitstr@plt+0x30ace>
  44756d:	callq  414c30 <__stack_chk_fail@plt>
  447572:	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  447580:	push   %r14
  447582:	push   %r13
  447584:	mov    %rsi,%r13
  447587:	push   %r12
  447589:	mov    %rdx,%r12
  44758c:	push   %rbp
  44758d:	push   %rbx
  44758e:	mov    %rdi,%rbx
  447591:	sub    $0x510,%rsp
  447598:	mov    %fs:0x28,%rax
  4475a1:	mov    %rax,0x508(%rsp)
  4475a9:	xor    %eax,%eax
  4475ab:	callq  413470 <strlen@plt>
  4475b0:	mov    %r12,%rdi
  4475b3:	mov    %rax,%rbp
  4475b6:	callq  413470 <strlen@plt>
  4475bb:	mov    %r13,%rdi
  4475be:	lea    0x0(%rbp,%rax,1),%r14d
  4475c3:	callq  413470 <strlen@plt>
  4475c8:	add    %eax,%ebp
  4475ca:	cmp    %r14d,%ebp
  4475cd:	cmovl  %r14d,%ebp
  4475d1:	cmp    $0xf9,%ebp
  4475d7:	jg     447770 <X509_get0_pubkey_bitstr@plt+0x30da0>
  4475dd:	lea    0x400(%rsp),%rdi
  4475e5:	lea    0x23773(%rip),%rdx        # 46ad5f <_fini+0xd85b>
  4475ec:	mov    %rbx,%rcx
  4475ef:	mov    $0x100,%esi
  4475f4:	xor    %eax,%eax
  4475f6:	mov    %rsp,%rbp
  4475f9:	callq  412fc0 <BIO_snprintf@plt>
  4475fe:	lea    0x200(%rsp),%rdi
  447606:	lea    0x2375a(%rip),%rdx        # 46ad67 <_fini+0xd863>
  44760d:	mov    %r13,%r8
  447610:	mov    %rbx,%rcx
  447613:	mov    $0x100,%esi
  447618:	xor    %eax,%eax
  44761a:	callq  412fc0 <BIO_snprintf@plt>
  44761f:	lea    0x23702(%rip),%rdx        # 46ad28 <_fini+0xd824>
  447626:	mov    %r13,%r8
  447629:	mov    %rbx,%rcx
  44762c:	mov    $0x100,%esi
  447631:	mov    %rsp,%rdi
  447634:	xor    %eax,%eax
  447636:	lea    0x100(%rsp),%r13
  44763e:	callq  412fc0 <BIO_snprintf@plt>
  447643:	lea    0x236de(%rip),%rdx        # 46ad28 <_fini+0xd824>
  44764a:	mov    %r12,%r8
  44764d:	mov    %rbx,%rcx
  447650:	mov    $0x100,%esi
  447655:	mov    %r13,%rdi
  447658:	xor    %eax,%eax
  44765a:	callq  412fc0 <BIO_snprintf@plt>
  44765f:	lea    0x300(%rsp),%rdi
  447667:	lea    0x236f9(%rip),%rdx        # 46ad67 <_fini+0xd863>
  44766e:	mov    %r12,%r8
  447671:	mov    %rbx,%rcx
  447674:	mov    $0x100,%esi
  447679:	xor    %eax,%eax
  44767b:	callq  412fc0 <BIO_snprintf@plt>
  447680:	mov    %r13,%rsi
  447683:	mov    %rbx,%rdi
  447686:	callq  413c10 <rename@plt>
  44768b:	test   %eax,%eax
  44768d:	js     447720 <X509_get0_pubkey_bitstr@plt+0x30d50>
  447693:	mov    %rbx,%rsi
  447696:	mov    %rbp,%rdi
  447699:	callq  413c10 <rename@plt>
  44769e:	test   %eax,%eax
  4476a0:	js     4477f8 <X509_get0_pubkey_bitstr@plt+0x30e28>
  4476a6:	lea    0x300(%rbp),%r13
  4476ad:	lea    0x400(%rbp),%r12
  4476b4:	mov    %r13,%rsi
  4476b7:	mov    %r12,%rdi
  4476ba:	callq  413c10 <rename@plt>
  4476bf:	test   %eax,%eax
  4476c1:	js     447790 <X509_get0_pubkey_bitstr@plt+0x30dc0>
  4476c7:	lea    0x400(%rbp),%r12
  4476ce:	lea    0x200(%rbp),%r13
  4476d5:	mov    %r12,%rsi
  4476d8:	mov    %r13,%rdi
  4476db:	callq  413c10 <rename@plt>
  4476e0:	mov    %eax,%edx
  4476e2:	mov    $0x1,%eax
  4476e7:	test   %edx,%edx
  4476e9:	js     447840 <X509_get0_pubkey_bitstr@plt+0x30e70>
  4476ef:	mov    0x508(%rsp),%rcx
  4476f7:	xor    %fs:0x28,%rcx
  447700:	jne    44787e <X509_get0_pubkey_bitstr@plt+0x30eae>
  447706:	add    $0x510,%rsp
  44770d:	pop    %rbx
  44770e:	pop    %rbp
  44770f:	pop    %r12
  447711:	pop    %r13
  447713:	pop    %r14
  447715:	retq   
  447716:	nopw   %cs:0x0(%rax,%rax,1)
  447720:	callq  412830 <__errno_location@plt>
  447725:	mov    (%rax),%eax
  447727:	cmp    $0x2,%eax
  44772a:	je     447693 <X509_get0_pubkey_bitstr@plt+0x30cc3>
  447730:	cmp    $0x14,%eax
  447733:	je     447693 <X509_get0_pubkey_bitstr@plt+0x30cc3>
  447739:	lea    0x233600(%rip),%rax        # 67ad40 <_edata+0x38>
  447740:	lea    0x235e7(%rip),%rsi        # 46ad2e <_fini+0xd82a>
  447747:	mov    %r13,%rcx
  44774a:	mov    %rbx,%rdx
  44774d:	mov    (%rax),%rdi
  447750:	xor    %eax,%eax
  447752:	callq  413c40 <BIO_printf@plt>
  447757:	lea    0x198f3(%rip),%rdi        # 461051 <_fini+0x3b4d>
  44775e:	callq  4142c0 <perror@plt>
  447763:	xor    %eax,%eax
  447765:	jmp    4476ef <X509_get0_pubkey_bitstr@plt+0x30d1f>
  447767:	nopw   0x0(%rax,%rax,1)
  447770:	lea    0x2335c9(%rip),%rax        # 67ad40 <_edata+0x38>
  447777:	lea    0x23596(%rip),%rsi        # 46ad14 <_fini+0xd810>
  44777e:	mov    (%rax),%rdi
  447781:	xor    %eax,%eax
  447783:	callq  413c40 <BIO_printf@plt>
  447788:	xor    %eax,%eax
  44778a:	jmpq   4476ef <X509_get0_pubkey_bitstr@plt+0x30d1f>
  44778f:	nop
  447790:	callq  412830 <__errno_location@plt>
  447795:	mov    (%rax),%eax
  447797:	cmp    $0x2,%eax
  44779a:	je     4476c7 <X509_get0_pubkey_bitstr@plt+0x30cf7>
  4477a0:	cmp    $0x14,%eax
  4477a3:	je     4476c7 <X509_get0_pubkey_bitstr@plt+0x30cf7>
  4477a9:	lea    0x233590(%rip),%rax        # 67ad40 <_edata+0x38>
  4477b0:	lea    0x23577(%rip),%rsi        # 46ad2e <_fini+0xd82a>
  4477b7:	mov    %r13,%rcx
  4477ba:	mov    %r12,%rdx
  4477bd:	mov    (%rax),%rdi
  4477c0:	xor    %eax,%eax
  4477c2:	callq  413c40 <BIO_printf@plt>
  4477c7:	lea    0x19883(%rip),%rdi        # 461051 <_fini+0x3b4d>
  4477ce:	callq  4142c0 <perror@plt>
  4477d3:	mov    %rbp,%rsi
  4477d6:	mov    %rbx,%rdi
  4477d9:	callq  413c10 <rename@plt>
  4477de:	lea    0x100(%rbp),%rdi
  4477e5:	mov    %rbx,%rsi
  4477e8:	callq  413c10 <rename@plt>
  4477ed:	xor    %eax,%eax
  4477ef:	jmpq   4476ef <X509_get0_pubkey_bitstr@plt+0x30d1f>
  4477f4:	nopl   0x0(%rax)
  4477f8:	lea    0x233541(%rip),%rax        # 67ad40 <_edata+0x38>
  4477ff:	lea    0x23528(%rip),%rsi        # 46ad2e <_fini+0xd82a>
  447806:	mov    %rbx,%rcx
  447809:	mov    %rbp,%rdx
  44780c:	mov    (%rax),%rdi
  44780f:	xor    %eax,%eax
  447811:	callq  413c40 <BIO_printf@plt>
  447816:	lea    0x19834(%rip),%rdi        # 461051 <_fini+0x3b4d>
  44781d:	callq  4142c0 <perror@plt>
  447822:	lea    0x100(%rbp),%rdi
  447829:	mov    %rbx,%rsi
  44782c:	callq  413c10 <rename@plt>
  447831:	xor    %eax,%eax
  447833:	jmpq   4476ef <X509_get0_pubkey_bitstr@plt+0x30d1f>
  447838:	nopl   0x0(%rax,%rax,1)
  447840:	lea    0x2334f9(%rip),%rax        # 67ad40 <_edata+0x38>
  447847:	lea    0x234e0(%rip),%rsi        # 46ad2e <_fini+0xd82a>
  44784e:	mov    %r12,%rcx
  447851:	mov    %r13,%rdx
  447854:	mov    (%rax),%rdi
  447857:	xor    %eax,%eax
  447859:	callq  413c40 <BIO_printf@plt>
  44785e:	lea    0x197ec(%rip),%rdi        # 461051 <_fini+0x3b4d>
  447865:	callq  4142c0 <perror@plt>
  44786a:	lea    0x300(%rbp),%rdi
  447871:	mov    %r12,%rsi
  447874:	callq  413c10 <rename@plt>
  447879:	jmpq   4477d3 <X509_get0_pubkey_bitstr@plt+0x30e03>
  44787e:	callq  414c30 <__stack_chk_fail@plt>
  447883:	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  447890:	test   %rdi,%rdi
  447893:	push   %rbx
  447894:	mov    %rdi,%rbx
  447897:	je     4478b0 <X509_get0_pubkey_bitstr@plt+0x30ee0>
  447899:	mov    0x8(%rdi),%rdi
  44789d:	test   %rdi,%rdi
  4478a0:	je     4478a7 <X509_get0_pubkey_bitstr@plt+0x30ed7>
  4478a2:	callq  415440 <TXT_DB_free@plt>
  4478a7:	mov    %rbx,%rdi
  4478aa:	pop    %rbx
  4478ab:	jmpq   415020 <CRYPTO_free@plt>
  4478b0:	pop    %rbx
  4478b1:	retq   
  4478b2:	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4478c0:	test   %rdi,%rdi
  4478c3:	je     4478ed <X509_get0_pubkey_bitstr@plt+0x30f1d>
  4478c5:	movzbl (%rdi),%eax
  4478c8:	sub    $0x30,%eax
  4478cb:	cmp    $0x49,%al
  4478cd:	ja     4478ed <X509_get0_pubkey_bitstr@plt+0x30f1d>
  4478cf:	lea    0x23c12(%rip),%rdx        # 46b4e8 <_fini+0xdfe4>
  4478d6:	movzbl %al,%eax
  4478d9:	movslq (%rdx,%rax,4),%rax
  4478dd:	add    %rax,%rdx
  4478e0:	jmpq   *%rdx
  4478e2:	nopw   0x0(%rax,%rax,1)
  4478e8:	mov    $0x1,%esi
  4478ed:	mov    %esi,%eax
  4478ef:	retq   
  4478f0:	xor    %esi,%esi
  4478f2:	mov    %esi,%eax
  4478f4:	retq   
  4478f5:	data32 nopw %cs:0x0(%rax,%rax,1)
  447900:	push   %r15
  447902:	push   %r14
  447904:	mov    %rsi,%r14
  447907:	push   %r13
  447909:	push   %r12
  44790b:	push   %rbp
  44790c:	push   %rbx
  44790d:	mov    %rdi,%rbx
  447910:	sub    $0x128,%rsp
  447917:	mov    %fs:0x28,%rax
  447920:	mov    %rax,0x118(%rsp)
  447928:	xor    %eax,%eax
  44792a:	callq  4152b0 <BIO_s_file@plt>
  44792f:	mov    %rax,%rdi
  447932:	callq  414a20 <BIO_new@plt>
  447937:	test   %rax,%rax
  44793a:	mov    %rax,%rbp
  44793d:	movq   $0xffffffffffffffff,0x8(%rsp)
  447946:	je     447b42 <X509_get0_pubkey_bitstr@plt+0x31172>
  44794c:	mov    %rbx,%rcx
  44794f:	mov    $0x3,%edx
  447954:	mov    $0x6c,%esi
  447959:	mov    %rax,%rdi
  44795c:	callq  412af0 <BIO_ctrl@plt>
  447961:	test   %rax,%rax
  447964:	jle    447b18 <X509_get0_pubkey_bitstr@plt+0x31148>
  44796a:	mov    $0x6,%esi
  44796f:	mov    %rbp,%rdi
  447972:	callq  415660 <TXT_DB_read@plt>
  447977:	test   %rax,%rax
  44797a:	mov    %rax,%r13
  44797d:	je     447a88 <X509_get0_pubkey_bitstr@plt+0x310b8>
  447983:	lea    0x10(%rsp),%r15
  447988:	lea    0x233d0(%rip),%rdx        # 46ad5f <_fini+0xd85b>
  44798f:	mov    %rbx,%rcx
  447992:	mov    $0x100,%esi
  447997:	xor    %eax,%eax
  447999:	mov    %r15,%rdi
  44799c:	callq  412fc0 <BIO_snprintf@plt>
  4479a1:	xor    %edi,%edi
  4479a3:	callq  413cd0 <NCONF_new@plt>
  4479a8:	lea    0x8(%rsp),%rdx
  4479ad:	mov    %r15,%rsi
  4479b0:	mov    %rax,%rdi
  4479b3:	mov    %rax,%r12
  4479b6:	callq  414c50 <NCONF_load@plt>
  4479bb:	test   %eax,%eax
  4479bd:	jle    447a68 <X509_get0_pubkey_bitstr@plt+0x31098>
  4479c3:	lea    0x23162(%rip),%rsi        # 46ab2c <_fini+0xd628>
  4479ca:	mov    $0x731,%edx
  4479cf:	mov    $0x10,%edi
  4479d4:	callq  413d50 <CRYPTO_malloc@plt>
  4479d9:	test   %rax,%rax
  4479dc:	mov    %rax,%rbx
  4479df:	je     447af0 <X509_get0_pubkey_bitstr@plt+0x31120>
  4479e5:	test   %r14,%r14
  4479e8:	mov    %r13,0x8(%rax)
  4479ec:	je     447aa0 <X509_get0_pubkey_bitstr@plt+0x310d0>
  4479f2:	mov    (%r14),%eax
  4479f5:	mov    %eax,(%rbx)
  4479f7:	test   %r12,%r12
  4479fa:	je     447a90 <X509_get0_pubkey_bitstr@plt+0x310c0>
  447a00:	lea    0x19695(%rip),%rdx        # 46109c <_fini+0x3b98>
  447a07:	xor    %esi,%esi
  447a09:	mov    %r12,%rdi
  447a0c:	callq  413fd0 <NCONF_get_string@plt>
  447a11:	test   %rax,%rax
  447a14:	je     447a25 <X509_get0_pubkey_bitstr@plt+0x31055>
  447a16:	mov    $0x1,%esi
  447a1b:	mov    %rax,%rdi
  447a1e:	callq  4478c0 <X509_get0_pubkey_bitstr@plt+0x30ef0>
  447a23:	mov    %eax,(%rbx)
  447a25:	mov    %r12,%rdi
  447a28:	callq  4137f0 <NCONF_free@plt>
  447a2d:	mov    %rbp,%rdi
  447a30:	callq  416570 <BIO_free_all@plt>
  447a35:	mov    0x118(%rsp),%rcx
  447a3d:	xor    %fs:0x28,%rcx
  447a46:	mov    %rbx,%rax
  447a49:	jne    447b58 <X509_get0_pubkey_bitstr@plt+0x31188>
  447a4f:	add    $0x128,%rsp
  447a56:	pop    %rbx
  447a57:	pop    %rbp
  447a58:	pop    %r12
  447a5a:	pop    %r13
  447a5c:	pop    %r14
  447a5e:	pop    %r15
  447a60:	retq   
  447a61:	nopl   0x0(%rax)
  447a68:	mov    0x8(%rsp),%rdx
  447a6d:	test   %rdx,%rdx
  447a70:	jg     447ab0 <X509_get0_pubkey_bitstr@plt+0x310e0>
  447a72:	mov    %r12,%rdi
  447a75:	xor    %r12d,%r12d
  447a78:	callq  4137f0 <NCONF_free@plt>
  447a7d:	jmpq   4479c3 <X509_get0_pubkey_bitstr@plt+0x30ff3>
  447a82:	nopw   0x0(%rax,%rax,1)
  447a88:	xor    %ebx,%ebx
  447a8a:	nopw   0x0(%rax,%rax,1)
  447a90:	test   %rbp,%rbp
  447a93:	je     447a35 <X509_get0_pubkey_bitstr@plt+0x31065>
  447a95:	jmp    447a2d <X509_get0_pubkey_bitstr@plt+0x3105d>
  447a97:	nopw   0x0(%rax,%rax,1)
  447aa0:	movl   $0x1,(%rax)
  447aa6:	jmpq   4479f7 <X509_get0_pubkey_bitstr@plt+0x31027>
  447aab:	nopl   0x0(%rax,%rax,1)
  447ab0:	lea    0x233289(%rip),%rax        # 67ad40 <_edata+0x38>
  447ab7:	lea    0x238f2(%rip),%rsi        # 46b3b0 <_fini+0xdeac>
  447abe:	mov    %r15,%rcx
  447ac1:	mov    (%rax),%rdi
  447ac4:	xor    %eax,%eax
  447ac6:	callq  413c40 <BIO_printf@plt>
  447acb:	test   %r12,%r12
  447ace:	je     447ad8 <X509_get0_pubkey_bitstr@plt+0x31108>
  447ad0:	mov    %r12,%rdi
  447ad3:	callq  4137f0 <NCONF_free@plt>
  447ad8:	mov    %r13,%rdi
  447adb:	xor    %ebx,%ebx
  447add:	callq  415440 <TXT_DB_free@plt>
  447ae2:	jmpq   447a2d <X509_get0_pubkey_bitstr@plt+0x3105d>
  447ae7:	nopw   0x0(%rax,%rax,1)
  447af0:	mov    0x22e489(%rip),%rax        # 675f80 <_fini+0x218a7c>
  447af7:	lea    0x2324b(%rip),%rdi        # 46ad49 <_fini+0xd845>
  447afe:	mov    $0xe,%edx
  447b03:	mov    $0x1,%esi
  447b08:	mov    (%rax),%rcx
  447b0b:	callq  416880 <fwrite@plt>
  447b10:	jmp    447acb <X509_get0_pubkey_bitstr@plt+0x310fb>
  447b12:	nopw   0x0(%rax,%rax,1)
  447b18:	mov    %rbx,%rdi
  447b1b:	callq  4142c0 <perror@plt>
  447b20:	lea    0x233219(%rip),%rax        # 67ad40 <_edata+0x38>
  447b27:	lea    0x23244(%rip),%rsi        # 46ad72 <_fini+0xd86e>
  447b2e:	mov    %rbx,%rdx
  447b31:	xor    %ebx,%ebx
  447b33:	mov    (%rax),%rdi
  447b36:	xor    %eax,%eax
  447b38:	callq  413c40 <BIO_printf@plt>
  447b3d:	jmpq   447a90 <X509_get0_pubkey_bitstr@plt+0x310c0>
  447b42:	lea    0x2331f7(%rip),%rax        # 67ad40 <_edata+0x38>
  447b49:	xor    %ebx,%ebx
  447b4b:	mov    (%rax),%rdi
  447b4e:	callq  413f40 <ERR_print_errors@plt>
  447b53:	jmpq   447a35 <X509_get0_pubkey_bitstr@plt+0x31065>
  447b58:	callq  414c30 <__stack_chk_fail@plt>
  447b5d:	nopl   (%rax)
  447b60:	push   %r15
  447b62:	mov    %rdi,%r15
  447b65:	push   %r14
  447b67:	mov    %edx,%r14d
  447b6a:	push   %r13
  447b6c:	push   %r12
  447b6e:	push   %rbp
  447b6f:	push   %rbx
  447b70:	sub    $0x28,%rsp
  447b74:	mov    %rsi,0x8(%rsp)
  447b79:	callq  413470 <strlen@plt>
  447b7e:	lea    0x1(%rax),%r13
  447b82:	lea    0x22fa3(%rip),%rsi        # 46ab2c <_fini+0xd628>
  447b89:	mov    $0x84b,%edx
  447b8e:	mov    %r13d,%edi
  447b91:	shr    %r13
  447b94:	add    $0x1,%r13
  447b98:	lea    0x0(,%r13,8),%r12d
  447ba0:	callq  413d50 <CRYPTO_malloc@plt>
  447ba5:	lea    0x22f80(%rip),%rsi        # 46ab2c <_fini+0xd628>
  447bac:	mov    %r12d,%edi
  447baf:	mov    $0x84d,%edx
  447bb4:	mov    %rax,%rbp
  447bb7:	callq  413d50 <CRYPTO_malloc@plt>
  447bbc:	lea    0x22f69(%rip),%rsi        # 46ab2c <_fini+0xd628>
  447bc3:	mov    %r12d,%edi
  447bc6:	mov    $0x84e,%edx
  447bcb:	mov    %rax,%rbx
  447bce:	callq  413d50 <CRYPTO_malloc@plt>
  447bd3:	lea    0x0(,%r13,4),%edi
  447bdb:	lea    0x22f4a(%rip),%rsi        # 46ab2c <_fini+0xd628>
  447be2:	mov    $0x84f,%edx
  447be7:	mov    %rax,%r12
  447bea:	callq  413d50 <CRYPTO_malloc@plt>
  447bef:	test   %rbp,%rbp
  447bf2:	mov    %rax,%r13
  447bf5:	je     447c01 <X509_get0_pubkey_bitstr@plt+0x31231>
  447bf7:	test   %rbx,%rbx
  447bfa:	je     447c01 <X509_get0_pubkey_bitstr@plt+0x31231>
  447bfc:	test   %r12,%r12
  447bff:	jne    447c70 <X509_get0_pubkey_bitstr@plt+0x312a0>
  447c01:	lea    0x233138(%rip),%rax        # 67ad40 <_edata+0x38>
  447c08:	lea    0x191b6(%rip),%rsi        # 460dc5 <_fini+0x38c1>
  447c0f:	mov    (%rax),%rdi
  447c12:	xor    %eax,%eax
  447c14:	callq  413c40 <BIO_printf@plt>
  447c19:	xor    %edi,%edi
  447c1b:	callq  413880 <X509_NAME_free@plt>
  447c20:	test   %r12,%r12
  447c23:	je     447c2d <X509_get0_pubkey_bitstr@plt+0x3125d>
  447c25:	mov    %r12,%rdi
  447c28:	callq  415020 <CRYPTO_free@plt>
  447c2d:	test   %rbx,%rbx
  447c30:	je     447c3a <X509_get0_pubkey_bitstr@plt+0x3126a>
  447c32:	mov    %rbx,%rdi
  447c35:	callq  415020 <CRYPTO_free@plt>
  447c3a:	test   %r13,%r13
  447c3d:	je     447c47 <X509_get0_pubkey_bitstr@plt+0x31277>
  447c3f:	mov    %r13,%rdi
  447c42:	callq  415020 <CRYPTO_free@plt>
  447c47:	xor    %eax,%eax
  447c49:	test   %rbp,%rbp
  447c4c:	je     447c60 <X509_get0_pubkey_bitstr@plt+0x31290>
  447c4e:	mov    %rbp,%rdi
  447c51:	mov    %rax,0x8(%rsp)
  447c56:	callq  415020 <CRYPTO_free@plt>
  447c5b:	mov    0x8(%rsp),%rax
  447c60:	add    $0x28,%rsp
  447c64:	pop    %rbx
  447c65:	pop    %rbp
  447c66:	pop    %r12
  447c68:	pop    %r13
  447c6a:	pop    %r14
  447c6c:	pop    %r15
  447c6e:	retq   
  447c6f:	nop
  447c70:	test   %rax,%rax
  447c73:	je     447c01 <X509_get0_pubkey_bitstr@plt+0x31231>
  447c75:	cmpb   $0x2f,(%r15)
  447c79:	lea    0x23760(%rip),%rsi        # 46b3e0 <_fini+0xdedc>
  447c80:	je     447ca0 <X509_get0_pubkey_bitstr@plt+0x312d0>
  447c82:	lea    0x2330b7(%rip),%rax        # 67ad40 <_edata+0x38>
  447c89:	xor    %r15d,%r15d
  447c8c:	mov    (%rax),%rdi
  447c8f:	xor    %eax,%eax
  447c91:	callq  413c40 <BIO_printf@plt>
  447c96:	mov    %r15,%rdi
  447c99:	callq  413880 <X509_NAME_free@plt>
  447c9e:	jmp    447c25 <X509_get0_pubkey_bitstr@plt+0x31255>
  447ca0:	movl   $0x0,0x0(%r13)
  447ca8:	cmpb   $0x0,0x1(%r15)
  447cad:	lea    0x1(%r15),%rax
  447cb1:	je     447e9c <X509_get0_pubkey_bitstr@plt+0x314cc>
  447cb7:	mov    %rbp,%rsi
  447cba:	xor    %r9d,%r9d
  447cbd:	mov    %rsi,(%rbx,%r9,8)
  447cc1:	mov    %r9d,%edx
  447cc4:	add    $0x1,%rsi
  447cc8:	jmp    447ce0 <X509_get0_pubkey_bitstr@plt+0x31310>
  447cca:	nopw   0x0(%rax,%rax,1)
  447cd0:	cmp    $0x3d,%cl
  447cd3:	je     447d30 <X509_get0_pubkey_bitstr@plt+0x31360>
  447cd5:	add    $0x1,%rax
  447cd9:	mov    %cl,-0x1(%rsi)
  447cdc:	add    $0x1,%rsi
  447ce0:	movzbl (%rax),%ecx
  447ce3:	lea    -0x1(%rsi),%rdi
  447ce7:	test   %cl,%cl
  447ce9:	je     447d08 <X509_get0_pubkey_bitstr@plt+0x31338>
  447ceb:	cmp    $0x5c,%cl
  447cee:	jne    447cd0 <X509_get0_pubkey_bitstr@plt+0x31300>
  447cf0:	movzbl 0x1(%rax),%ecx
  447cf4:	test   %cl,%cl
  447cf6:	je     447e80 <X509_get0_pubkey_bitstr@plt+0x314b0>
  447cfc:	add    $0x2,%rax
  447d00:	mov    %cl,-0x1(%rsi)
  447d03:	jmp    447cdc <X509_get0_pubkey_bitstr@plt+0x3130c>
  447d05:	nopl   (%rax)
  447d08:	lea    0x233031(%rip),%rax        # 67ad40 <_edata+0x38>
  447d0f:	lea    0x2371a(%rip),%rsi        # 46b430 <_fini+0xdf2c>
  447d16:	xor    %r15d,%r15d
  447d19:	mov    (%rax),%rdi
  447d1c:	xor    %eax,%eax
  447d1e:	callq  413c40 <BIO_printf@plt>
  447d23:	jmpq   447c96 <X509_get0_pubkey_bitstr@plt+0x312c6>
  447d28:	nopl   0x0(%rax,%rax,1)
  447d30:	mov    %rax,%rcx
  447d33:	movb   $0x0,(%rdi)
  447d36:	add    $0x1,%rax
  447d3a:	cmpb   $0x0,0x1(%rcx)
  447d3e:	je     447d08 <X509_get0_pubkey_bitstr@plt+0x31338>
  447d40:	mov    %rsi,(%r12,%r9,8)
  447d44:	add    $0x1,%rsi
  447d48:	jmp    447d69 <X509_get0_pubkey_bitstr@plt+0x31399>
  447d4a:	nopw   0x0(%rax,%rax,1)
  447d50:	add    $0x1,%rax
  447d54:	cmp    $0x2f,%cl
  447d57:	je     447e70 <X509_get0_pubkey_bitstr@plt+0x314a0>
  447d5d:	cmp    $0x2b,%cl
  447d60:	je     447d90 <X509_get0_pubkey_bitstr@plt+0x313c0>
  447d62:	mov    %cl,-0x1(%rsi)
  447d65:	add    $0x1,%rsi
  447d69:	movzbl (%rax),%ecx
  447d6c:	lea    -0x1(%rsi),%rdx
  447d70:	test   %cl,%cl
  447d72:	je     447da0 <X509_get0_pubkey_bitstr@plt+0x313d0>
  447d74:	cmp    $0x5c,%cl
  447d77:	jne    447d50 <X509_get0_pubkey_bitstr@plt+0x31380>
  447d79:	movzbl 0x1(%rax),%edx
  447d7d:	test   %dl,%dl
  447d7f:	je     447e80 <X509_get0_pubkey_bitstr@plt+0x314b0>
  447d85:	add    $0x2,%rax
  447d89:	mov    %dl,-0x1(%rsi)
  447d8c:	jmp    447d65 <X509_get0_pubkey_bitstr@plt+0x31395>
  447d8e:	xchg   %ax,%ax
  447d90:	test   %r14d,%r14d
  447d93:	je     447d62 <X509_get0_pubkey_bitstr@plt+0x31392>
  447d95:	movl   $0xffffffff,0x4(%r13,%r9,4)
  447d9e:	xchg   %ax,%ax
  447da0:	lea    0x1(%r9),%edi
  447da4:	movb   $0x0,(%rdx)
  447da7:	add    $0x1,%r9
  447dab:	cmpb   $0x0,(%rax)
  447dae:	lea    0x1(%rdx),%rsi
  447db2:	mov    %edi,0x14(%rsp)
  447db6:	jne    447cbd <X509_get0_pubkey_bitstr@plt+0x312ed>
  447dbc:	callq  4156e0 <X509_NAME_new@plt>
  447dc1:	test   %rax,%rax
  447dc4:	mov    %rax,%r15
  447dc7:	je     447c96 <X509_get0_pubkey_bitstr@plt+0x312c6>
  447dcd:	mov    0x14(%rsp),%eax
  447dd1:	xor    %r11d,%r11d
  447dd4:	test   %eax,%eax
  447dd6:	jg     447e15 <X509_get0_pubkey_bitstr@plt+0x31445>
  447dd8:	jmpq   447ead <X509_get0_pubkey_bitstr@plt+0x314dd>
  447ddd:	nopl   (%rax)
  447de0:	mov    (%rbx,%r11,8),%rdx
  447de4:	lea    0x236c5(%rip),%rsi        # 46b4b0 <_fini+0xdfac>
  447deb:	mov    %r11,0x18(%rsp)
  447df0:	lea    0x232f49(%rip),%rax        # 67ad40 <_edata+0x38>
  447df7:	mov    (%rax),%rdi
  447dfa:	xor    %eax,%eax
  447dfc:	callq  413c40 <BIO_printf@plt>
  447e01:	mov    0x18(%rsp),%r11
  447e06:	add    $0x1,%r11
  447e0a:	cmp    %r11d,0x14(%rsp)
  447e0f:	jle    447ead <X509_get0_pubkey_bitstr@plt+0x314dd>
  447e15:	mov    (%rbx,%r11,8),%rdi
  447e19:	mov    %r11,0x18(%rsp)
  447e1e:	callq  413720 <OBJ_txt2nid@plt>
  447e23:	test   %eax,%eax
  447e25:	mov    0x18(%rsp),%r11
  447e2a:	je     447e8c <X509_get0_pubkey_bitstr@plt+0x314bc>
  447e2c:	mov    (%r12,%r11,8),%rcx
  447e30:	cmpb   $0x0,(%rcx)
  447e33:	je     447de0 <X509_get0_pubkey_bitstr@plt+0x31410>
  447e35:	mov    0x0(%r13,%r11,4),%edx
  447e3a:	mov    $0xffffffff,%r9d
  447e40:	mov    %eax,%esi
  447e42:	mov    %r9d,%r8d
  447e45:	mov    %r15,%rdi
  447e48:	mov    %r11,0x18(%rsp)
  447e4d:	mov    %edx,(%rsp)
  447e50:	mov    0x8(%rsp),%edx
  447e54:	callq  4143d0 <X509_NAME_add_entry_by_NID@plt>
  447e59:	test   %eax,%eax
  447e5b:	mov    0x18(%rsp),%r11
  447e60:	jne    447e06 <X509_get0_pubkey_bitstr@plt+0x31436>
  447e62:	jmpq   447c96 <X509_get0_pubkey_bitstr@plt+0x312c6>
  447e67:	nopw   0x0(%rax,%rax,1)
  447e70:	movl   $0x0,0x4(%r13,%r9,4)
  447e79:	jmpq   447da0 <X509_get0_pubkey_bitstr@plt+0x313d0>
  447e7e:	xchg   %ax,%ax
  447e80:	lea    0x23581(%rip),%rsi        # 46b408 <_fini+0xdf04>
  447e87:	jmpq   447c82 <X509_get0_pubkey_bitstr@plt+0x312b2>
  447e8c:	mov    (%rbx,%r11,8),%rdx
  447e90:	lea    0x235e9(%rip),%rsi        # 46b480 <_fini+0xdf7c>
  447e97:	jmpq   447df0 <X509_get0_pubkey_bitstr@plt+0x31420>
  447e9c:	callq  4156e0 <X509_NAME_new@plt>
  447ea1:	test   %rax,%rax
  447ea4:	mov    %rax,%r15
  447ea7:	je     447c96 <X509_get0_pubkey_bitstr@plt+0x312c6>
  447ead:	mov    %r12,%rdi
  447eb0:	callq  415020 <CRYPTO_free@plt>
  447eb5:	mov    %rbx,%rdi
  447eb8:	callq  415020 <CRYPTO_free@plt>
  447ebd:	mov    %rbp,%rdi
  447ec0:	callq  415020 <CRYPTO_free@plt>
  447ec5:	mov    %r13,%rdi
  447ec8:	callq  415020 <CRYPTO_free@plt>
  447ecd:	mov    %r15,%rax
  447ed0:	jmpq   447c60 <X509_get0_pubkey_bitstr@plt+0x31290>
  447ed5:	data32 nopw %cs:0x0(%rax,%rax,1)
  447ee0:	push   %r15
  447ee2:	mov    %rcx,%r15
  447ee5:	mov    $0x8,%ecx
  447eea:	mov    %rdx,%r9
  447eed:	push   %r14
  447eef:	push   %r13
  447ef1:	mov    %r8,%r13
  447ef4:	push   %r12
  447ef6:	mov    %rsi,%r12
  447ef9:	push   %rbp
  447efa:	push   %rbx
  447efb:	mov    %rdi,%rbx
  447efe:	sub    $0x38,%rsp
  447f02:	mov    (%rdi),%rbp
  447f05:	lea    0x19085(%rip),%rdi        # 460f91 <_fini+0x3a8d>
  447f0c:	mov    %fs:0x28,%rax
  447f15:	mov    %rax,0x28(%rsp)
  447f1a:	xor    %eax,%eax
  447f1c:	mov    0x0(%rbp),%r14
  447f20:	mov    0x8(%rbp),%r8
  447f24:	mov    %r14,%rsi
  447f27:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  447f29:	jne    447fe0 <X509_get0_pubkey_bitstr@plt+0x31610>
  447f2f:	test   %r8,%r8
  447f32:	je     448140 <X509_get0_pubkey_bitstr@plt+0x31770>
  447f38:	xor    %esi,%esi
  447f3a:	mov    %r8,%rdi
  447f3d:	mov    %r8,(%rsp)
  447f41:	mov    %rdx,0x8(%rsp)
  447f46:	callq  414870 <OBJ_txt2obj@plt>
  447f4b:	test   %rax,%rax
  447f4e:	mov    %rax,%rcx
  447f51:	mov    (%rsp),%r8
  447f55:	mov    0x8(%rsp),%r9
  447f5a:	je     448350 <X509_get0_pubkey_bitstr@plt+0x31980>
  447f60:	mov    (%rbx),%rax
  447f63:	mov    (%r9),%edx
  447f66:	add    $0x8,%rax
  447f6a:	xor    %r14d,%r14d
  447f6d:	mov    $0xffffffff,%r8d
  447f73:	mov    %rax,(%rbx)
  447f76:	xor    %r10d,%r10d
  447f79:	xor    %r15d,%r15d
  447f7c:	test   %edx,%edx
  447f7e:	je     448055 <X509_get0_pubkey_bitstr@plt+0x31685>
  447f84:	mov    0x0(%r13),%rdi
  447f88:	test   %rdi,%rdi
  447f8b:	je     447f92 <X509_get0_pubkey_bitstr@plt+0x315c2>
  447f8d:	callq  412f10 <X509_VERIFY_PARAM_free@plt>
  447f92:	movq   $0x0,0x0(%r13)
  447f9a:	mov    (%rbx),%rax
  447f9d:	add    $0x8,%rax
  447fa1:	test   %r12,%r12
  447fa4:	mov    %rax,(%rbx)
  447fa7:	je     4480d0 <X509_get0_pubkey_bitstr@plt+0x31700>
  447fad:	sub    %rbp,%rax
  447fb0:	sar    $0x3,%rax
  447fb4:	sub    %eax,(%r12)
  447fb8:	mov    $0x1,%eax
  447fbd:	mov    0x28(%rsp),%rbx
  447fc2:	xor    %fs:0x28,%rbx
  447fcb:	jne    4484de <X509_get0_pubkey_bitstr@plt+0x31b0e>
  447fd1:	add    $0x38,%rsp
  447fd5:	pop    %rbx
  447fd6:	pop    %rbp
  447fd7:	pop    %r12
  447fd9:	pop    %r13
  447fdb:	pop    %r14
  447fdd:	pop    %r15
  447fdf:	retq   
  447fe0:	lea    0x1db72(%rip),%rdi        # 465b59 <_fini+0x8655>
  447fe7:	mov    $0x9,%ecx
  447fec:	mov    %r14,%rsi
  447fef:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  447ff1:	jne    4480e0 <X509_get0_pubkey_bitstr@plt+0x31710>
  447ff7:	test   %r8,%r8
  447ffa:	je     4481d0 <X509_get0_pubkey_bitstr@plt+0x31800>
  448000:	mov    %r8,%rdi
  448003:	mov    %rdx,(%rsp)
  448007:	callq  413a60 <X509_PURPOSE_get_by_sname@plt>
  44800c:	test   %eax,%eax
  44800e:	mov    (%rsp),%r9
  448012:	js     4482b8 <X509_get0_pubkey_bitstr@plt+0x318e8>
  448018:	mov    %eax,%edi
  44801a:	mov    %r9,(%rsp)
  44801e:	callq  413ce0 <X509_PURPOSE_get0@plt>
  448023:	mov    %rax,%rdi
  448026:	callq  413620 <X509_PURPOSE_get_id@plt>
  44802b:	mov    (%rsp),%r9
  44802f:	mov    %eax,%r10d
  448032:	mov    (%rbx),%rax
  448035:	mov    (%r9),%edx
  448038:	add    $0x8,%rax
  44803c:	xor    %r14d,%r14d
  44803f:	xor    %r15d,%r15d
  448042:	xor    %ecx,%ecx
  448044:	test   %edx,%edx
  448046:	mov    %rax,(%rbx)
  448049:	mov    $0xffffffff,%r8d
  44804f:	jne    447f84 <X509_get0_pubkey_bitstr@plt+0x315b4>
  448055:	cmpq   $0x0,0x0(%r13)
  44805a:	je     448308 <X509_get0_pubkey_bitstr@plt+0x31938>
  448060:	test   %rcx,%rcx
  448063:	je     448083 <X509_get0_pubkey_bitstr@plt+0x316b3>
  448065:	mov    0x0(%r13),%rdi
  448069:	mov    %rcx,%rsi
  44806c:	mov    %r8d,0x8(%rsp)
  448071:	mov    %r10d,(%rsp)
  448075:	callq  414f70 <X509_VERIFY_PARAM_add0_policy@plt>
  44807a:	mov    0x8(%rsp),%r8d
  44807f:	mov    (%rsp),%r10d
  448083:	test   %r15,%r15
  448086:	jne    448210 <X509_get0_pubkey_bitstr@plt+0x31840>
  44808c:	test   %r10d,%r10d
  44808f:	jne    4481f0 <X509_get0_pubkey_bitstr@plt+0x31820>
  448095:	test   %r8d,%r8d
  448098:	js     4480a6 <X509_get0_pubkey_bitstr@plt+0x316d6>
  44809a:	mov    0x0(%r13),%rdi
  44809e:	mov    %r8d,%esi
  4480a1:	callq  413f60 <X509_VERIFY_PARAM_set_depth@plt>
  4480a6:	test   %r14,%r14
  4480a9:	je     447f9a <X509_get0_pubkey_bitstr@plt+0x315ca>
  4480af:	mov    0x0(%r13),%rdi
  4480b3:	mov    %r14,%rsi
  4480b6:	callq  414300 <X509_VERIFY_PARAM_set_time@plt>
  4480bb:	mov    (%rbx),%rax
  4480be:	add    $0x8,%rax
  4480c2:	test   %r12,%r12
  4480c5:	mov    %rax,(%rbx)
  4480c8:	jne    447fad <X509_get0_pubkey_bitstr@plt+0x315dd>
  4480ce:	xchg   %ax,%ax
  4480d0:	mov    $0x1,%eax
  4480d5:	jmpq   447fbd <X509_get0_pubkey_bitstr@plt+0x315ed>
  4480da:	nopw   0x0(%rax,%rax,1)
  4480e0:	lea    0x22ce0(%rip),%rdi        # 46adc7 <_fini+0xd8c3>
  4480e7:	mov    $0xe,%ecx
  4480ec:	mov    %r14,%rsi
  4480ef:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4480f1:	jne    448158 <X509_get0_pubkey_bitstr@plt+0x31788>
  4480f3:	test   %r8,%r8
  4480f6:	je     4482e8 <X509_get0_pubkey_bitstr@plt+0x31918>
  4480fc:	mov    %rdx,(%rsp)
  448100:	xor    %esi,%esi
  448102:	mov    %r8,%rdi
  448105:	mov    $0xa,%edx
  44810a:	callq  4155d0 <strtol@plt>
  44810f:	test   %eax,%eax
  448111:	mov    %eax,%r8d
  448114:	mov    (%rsp),%r9
  448118:	js     4483f2 <X509_get0_pubkey_bitstr@plt+0x31a22>
  44811e:	mov    (%rbx),%rax
  448121:	mov    (%r9),%edx
  448124:	add    $0x8,%rax
  448128:	xor    %r14d,%r14d
  44812b:	xor    %r10d,%r10d
  44812e:	mov    %rax,(%rbx)
  448131:	xor    %r15d,%r15d
  448134:	xor    %ecx,%ecx
  448136:	jmpq   447f7c <X509_get0_pubkey_bitstr@plt+0x315ac>
  44813b:	nopl   0x0(%rax,%rax,1)
  448140:	movl   $0x1,(%rdx)
  448146:	mov    %rbp,%rax
  448149:	mov    $0x1,%edx
  44814e:	xor    %ecx,%ecx
  448150:	jmpq   447f66 <X509_get0_pubkey_bitstr@plt+0x31596>
  448155:	nopl   (%rax)
  448158:	lea    0x22c85(%rip),%rdi        # 46ade4 <_fini+0xd8e0>
  44815f:	mov    $0x8,%ecx
  448164:	mov    %r14,%rsi
  448167:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  448169:	jne    448238 <X509_get0_pubkey_bitstr@plt+0x31868>
  44816f:	test   %r8,%r8
  448172:	je     44829b <X509_get0_pubkey_bitstr@plt+0x318cb>
  448178:	mov    %rdx,0x8(%rsp)
  44817d:	lea    0x22c68(%rip),%rsi        # 46adec <_fini+0xd8e8>
  448184:	lea    0x20(%rsp),%rdx
  448189:	mov    %r8,%rdi
  44818c:	xor    %eax,%eax
  44818e:	mov    %r8,(%rsp)
  448192:	callq  4147b0 <__isoc99_sscanf@plt>
  448197:	cmp    $0x1,%eax
  44819a:	mov    (%rsp),%r8
  44819e:	mov    0x8(%rsp),%r9
  4481a3:	jne    448390 <X509_get0_pubkey_bitstr@plt+0x319c0>
  4481a9:	mov    (%r9),%edx
  4481ac:	mov    0x20(%rsp),%r14
  4481b1:	mov    (%rbx),%rax
  4481b4:	add    $0x8,%rax
  4481b8:	mov    $0xffffffff,%r8d
  4481be:	xor    %r10d,%r10d
  4481c1:	mov    %rax,(%rbx)
  4481c4:	xor    %r15d,%r15d
  4481c7:	xor    %ecx,%ecx
  4481c9:	jmpq   447f7c <X509_get0_pubkey_bitstr@plt+0x315ac>
  4481ce:	xchg   %ax,%ax
  4481d0:	movl   $0x1,(%rdx)
  4481d6:	mov    %rbp,%rax
  4481d9:	mov    $0x1,%edx
  4481de:	xor    %r10d,%r10d
  4481e1:	jmpq   448038 <X509_get0_pubkey_bitstr@plt+0x31668>
  4481e6:	nopw   %cs:0x0(%rax,%rax,1)
  4481f0:	mov    0x0(%r13),%rdi
  4481f4:	mov    %r10d,%esi
  4481f7:	mov    %r8d,(%rsp)
  4481fb:	callq  413f20 <X509_VERIFY_PARAM_set_purpose@plt>
  448200:	mov    (%rsp),%r8d
  448204:	jmpq   448095 <X509_get0_pubkey_bitstr@plt+0x316c5>
  448209:	nopl   0x0(%rax)
  448210:	mov    0x0(%r13),%rdi
  448214:	mov    %r15,%rsi
  448217:	mov    %r8d,0x8(%rsp)
  44821c:	mov    %r10d,(%rsp)
  448220:	callq  416680 <X509_VERIFY_PARAM_set_flags@plt>
  448225:	mov    0x8(%rsp),%r8d
  44822a:	mov    (%rsp),%r10d
  44822e:	jmpq   44808c <X509_get0_pubkey_bitstr@plt+0x316bc>
  448233:	nopl   0x0(%rax,%rax,1)
  448238:	lea    0x22bcd(%rip),%rdi        # 46ae0c <_fini+0xd908>
  44823f:	mov    $0x11,%ecx
  448244:	mov    %r14,%rsi
  448247:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  448249:	je     448280 <X509_get0_pubkey_bitstr@plt+0x318b0>
  44824b:	lea    0x22bcb(%rip),%rdi        # 46ae1d <_fini+0xd919>
  448252:	mov    $0xf,%ecx
  448257:	mov    %r14,%rsi
  44825a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44825c:	jne    4483c4 <X509_get0_pubkey_bitstr@plt+0x319f4>
  448262:	mov    (%rdx),%edx
  448264:	xor    %r14d,%r14d
  448267:	mov    $0xffffffff,%r8d
  44826d:	xor    %r10d,%r10d
  448270:	mov    $0x1,%r15d
  448276:	xor    %ecx,%ecx
  448278:	jmpq   447f7c <X509_get0_pubkey_bitstr@plt+0x315ac>
  44827d:	nopl   (%rax)
  448280:	mov    (%rdx),%edx
  448282:	xor    %r14d,%r14d
  448285:	mov    $0xffffffff,%r8d
  44828b:	xor    %r10d,%r10d
  44828e:	mov    $0x10,%r15d
  448294:	xor    %ecx,%ecx
  448296:	jmpq   447f7c <X509_get0_pubkey_bitstr@plt+0x315ac>
  44829b:	movl   $0x1,(%rdx)
  4482a1:	mov    %rbp,%rax
  4482a4:	mov    $0x1,%edx
  4482a9:	xor    %r14d,%r14d
  4482ac:	jmpq   4481b4 <X509_get0_pubkey_bitstr@plt+0x317e4>
  4482b1:	nopl   0x0(%rax)
  4482b8:	lea    0x22af2(%rip),%rsi        # 46adb1 <_fini+0xd8ad>
  4482bf:	mov    %r15,%rdi
  4482c2:	xor    %eax,%eax
  4482c4:	callq  413c40 <BIO_printf@plt>
  4482c9:	mov    (%rsp),%r9
  4482cd:	mov    (%rbx),%rax
  4482d0:	mov    $0x1,%edx
  4482d5:	xor    %r10d,%r10d
  4482d8:	movl   $0x1,(%r9)
  4482df:	jmpq   448038 <X509_get0_pubkey_bitstr@plt+0x31668>
  4482e4:	nopl   0x0(%rax)
  4482e8:	movl   $0x1,(%rdx)
  4482ee:	mov    %rbp,%rax
  4482f1:	mov    $0x1,%edx
  4482f6:	mov    $0xffffffff,%r8d
  4482fc:	jmpq   448124 <X509_get0_pubkey_bitstr@plt+0x31754>
  448301:	nopl   0x0(%rax)
  448308:	mov    %r9,0x18(%rsp)
  44830d:	mov    %r8d,0x14(%rsp)
  448312:	mov    %r10d,0x8(%rsp)
  448317:	mov    %rcx,(%rsp)
  44831b:	callq  415180 <X509_VERIFY_PARAM_new@plt>
  448320:	test   %rax,%rax
  448323:	mov    %rax,0x0(%r13)
  448327:	mov    (%rsp),%rcx
  44832b:	mov    0x8(%rsp),%r10d
  448330:	mov    0x14(%rsp),%r8d
  448335:	mov    0x18(%rsp),%r9
  44833a:	jne    448060 <X509_get0_pubkey_bitstr@plt+0x31690>
  448340:	movl   $0x1,(%r9)
  448347:	jmpq   447f9a <X509_get0_pubkey_bitstr@plt+0x315ca>
  44834c:	nopl   0x0(%rax)
  448350:	lea    0x22a45(%rip),%rsi        # 46ad9c <_fini+0xd898>
  448357:	mov    %rax,(%rsp)
  44835b:	mov    %r8,%rdx
  44835e:	mov    %r15,%rdi
  448361:	xor    %eax,%eax
  448363:	mov    %r9,0x8(%rsp)
  448368:	callq  413c40 <BIO_printf@plt>
  44836d:	mov    0x8(%rsp),%r9
  448372:	mov    (%rbx),%rax
  448375:	mov    $0x1,%edx
  44837a:	mov    (%rsp),%rcx
  44837e:	movl   $0x1,(%r9)
  448385:	jmpq   447f66 <X509_get0_pubkey_bitstr@plt+0x31596>
  44838a:	nopw   0x0(%rax,%rax,1)
  448390:	lea    0x2329a9(%rip),%rax        # 67ad40 <_edata+0x38>
  448397:	lea    0x22a52(%rip),%rsi        # 46adf0 <_fini+0xd8ec>
  44839e:	mov    %r8,%rdx
  4483a1:	mov    %r9,(%rsp)
  4483a5:	mov    (%rax),%rdi
  4483a8:	xor    %eax,%eax
  4483aa:	callq  413c40 <BIO_printf@plt>
  4483af:	mov    (%rsp),%r9
  4483b3:	mov    $0x1,%edx
  4483b8:	movl   $0x1,(%r9)
  4483bf:	jmpq   4481ac <X509_get0_pubkey_bitstr@plt+0x317dc>
  4483c4:	lea    0x22a61(%rip),%rdi        # 46ae2c <_fini+0xd928>
  4483cb:	mov    $0xb,%ecx
  4483d0:	mov    %r14,%rsi
  4483d3:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4483d5:	jne    448428 <X509_get0_pubkey_bitstr@plt+0x31a58>
  4483d7:	mov    (%rdx),%edx
  4483d9:	xor    %r14d,%r14d
  4483dc:	mov    $0xffffffff,%r8d
  4483e2:	xor    %r10d,%r10d
  4483e5:	mov    $0x4,%r15d
  4483eb:	xor    %ecx,%ecx
  4483ed:	jmpq   447f7c <X509_get0_pubkey_bitstr@plt+0x315ac>
  4483f2:	lea    0x229dc(%rip),%rsi        # 46add5 <_fini+0xd8d1>
  4483f9:	mov    %eax,(%rsp)
  4483fc:	mov    %r15,%rdi
  4483ff:	xor    %eax,%eax
  448401:	mov    %r9,0x8(%rsp)
  448406:	callq  413c40 <BIO_printf@plt>
  44840b:	mov    0x8(%rsp),%r9
  448410:	mov    (%rbx),%rax
  448413:	mov    $0x1,%edx
  448418:	mov    (%rsp),%r8d
  44841c:	movl   $0x1,(%r9)
  448423:	jmpq   448124 <X509_get0_pubkey_bitstr@plt+0x31754>
  448428:	lea    0x22a08(%rip),%rdi        # 46ae37 <_fini+0xd933>
  44842f:	mov    $0xf,%ecx
  448434:	mov    %r14,%rsi
  448437:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  448439:	jne    448456 <X509_get0_pubkey_bitstr@plt+0x31a86>
  44843b:	mov    (%rdx),%edx
  44843d:	xor    %r14d,%r14d
  448440:	mov    $0xffffffff,%r8d
  448446:	xor    %r10d,%r10d
  448449:	mov    $0xc,%r15d
  44844f:	xor    %ecx,%ecx
  448451:	jmpq   447f7c <X509_get0_pubkey_bitstr@plt+0x315ac>
  448456:	lea    0x229e9(%rip),%rdi        # 46ae46 <_fini+0xd942>
  44845d:	mov    $0xe,%ecx
  448462:	mov    %r14,%rsi
  448465:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  448467:	jne    448484 <X509_get0_pubkey_bitstr@plt+0x31ab4>
  448469:	mov    (%rdx),%edx
  44846b:	xor    %r14d,%r14d
  44846e:	mov    $0xffffffff,%r8d
  448474:	xor    %r10d,%r10d
  448477:	mov    $0x80,%r15d
  44847d:	xor    %ecx,%ecx
  44847f:	jmpq   447f7c <X509_get0_pubkey_bitstr@plt+0x315ac>
  448484:	lea    0x229c9(%rip),%rdi        # 46ae54 <_fini+0xd950>
  44848b:	mov    $0x11,%ecx
  448490:	mov    %r14,%rsi
  448493:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  448495:	jne    4484b2 <X509_get0_pubkey_bitstr@plt+0x31ae2>
  448497:	mov    (%rdx),%edx
  448499:	xor    %r14d,%r14d
  44849c:	mov    $0xffffffff,%r8d
  4484a2:	xor    %r10d,%r10d
  4484a5:	mov    $0x100,%r15d
  4484ab:	xor    %ecx,%ecx
  4484ad:	jmpq   447f7c <X509_get0_pubkey_bitstr@plt+0x315ac>
  4484b2:	lea    0x229ac(%rip),%rdi        # 46ae65 <_fini+0xd961>
  4484b9:	mov    $0xd,%ecx
  4484be:	mov    %r14,%rsi
  4484c1:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4484c3:	jne    4484e3 <X509_get0_pubkey_bitstr@plt+0x31b13>
  4484c5:	mov    (%rdx),%edx
  4484c7:	xor    %r14d,%r14d
  4484ca:	or     $0xffffffff,%r8d
  4484ce:	xor    %r10d,%r10d
  4484d1:	mov    $0x200,%r15d
  4484d7:	xor    %ecx,%ecx
  4484d9:	jmpq   447f7c <X509_get0_pubkey_bitstr@plt+0x315ac>
  4484de:	callq  414c30 <__stack_chk_fail@plt>
  4484e3:	lea    0x22988(%rip),%rsi        # 46ae72 <_fini+0xd96e>
  4484ea:	mov    %r14,%rdi
  4484ed:	mov    %rdx,(%rsp)
  4484f1:	callq  4155c0 <strcmp@plt>
  4484f6:	test   %eax,%eax
  4484f8:	mov    (%rsp),%r9
  4484fc:	je     448533 <X509_get0_pubkey_bitstr@plt+0x31b63>
  4484fe:	lea    0x2297a(%rip),%rsi        # 46ae7f <_fini+0xd97b>
  448505:	mov    %r14,%rdi
  448508:	mov    %r9,(%rsp)
  44850c:	callq  4155c0 <strcmp@plt>
  448511:	test   %eax,%eax
  448513:	mov    (%rsp),%r9
  448517:	jne    44854d <X509_get0_pubkey_bitstr@plt+0x31b7d>
  448519:	mov    (%r9),%edx
  44851c:	xor    %r14d,%r14d
  44851f:	or     $0xffffffff,%r8d
  448523:	xor    %r10d,%r10d
  448526:	mov    $0x20,%r15d
  44852c:	xor    %ecx,%ecx
  44852e:	jmpq   447f7c <X509_get0_pubkey_bitstr@plt+0x315ac>
  448533:	mov    (%r9),%edx
  448536:	xor    %r14d,%r14d
  448539:	or     $0xffffffff,%r8d
  44853d:	xor    %r10d,%r10d
  448540:	mov    $0x400,%r15d
  448546:	xor    %ecx,%ecx
  448548:	jmpq   447f7c <X509_get0_pubkey_bitstr@plt+0x315ac>
  44854d:	lea    0x22938(%rip),%rsi        # 46ae8c <_fini+0xd988>
  448554:	mov    %r14,%rdi
  448557:	mov    %r9,(%rsp)
  44855b:	callq  4155c0 <strcmp@plt>
  448560:	test   %eax,%eax
  448562:	mov    (%rsp),%r9
  448566:	jne    448582 <X509_get0_pubkey_bitstr@plt+0x31bb2>
  448568:	mov    (%r9),%edx
  44856b:	xor    %r14d,%r14d
  44856e:	or     $0xffffffff,%r8d
  448572:	xor    %r10d,%r10d
  448575:	mov    $0x1000,%r15d
  44857b:	xor    %ecx,%ecx
  44857d:	jmpq   447f7c <X509_get0_pubkey_bitstr@plt+0x315ac>
  448582:	lea    0x22911(%rip),%rsi        # 46ae9a <_fini+0xd996>
  448589:	mov    %r14,%rdi
  44858c:	mov    %r9,(%rsp)
  448590:	callq  4155c0 <strcmp@plt>
  448595:	test   %eax,%eax
  448597:	mov    (%rsp),%r9
  44859b:	je     4485d2 <X509_get0_pubkey_bitstr@plt+0x31c02>
  44859d:	lea    0x22902(%rip),%rsi        # 46aea6 <_fini+0xd9a2>
  4485a4:	mov    %r14,%rdi
  4485a7:	mov    %r9,(%rsp)
  4485ab:	callq  4155c0 <strcmp@plt>
  4485b0:	test   %eax,%eax
  4485b2:	mov    (%rsp),%r9
  4485b6:	jne    4485ec <X509_get0_pubkey_bitstr@plt+0x31c1c>
  4485b8:	mov    (%r9),%edx
  4485bb:	xor    %r14d,%r14d
  4485be:	or     $0xffffffff,%r8d
  4485c2:	xor    %r10d,%r10d
  4485c5:	mov    $0x800,%r15d
  4485cb:	xor    %ecx,%ecx
  4485cd:	jmpq   447f7c <X509_get0_pubkey_bitstr@plt+0x315ac>
  4485d2:	mov    (%r9),%edx
  4485d5:	xor    %r14d,%r14d
  4485d8:	or     $0xffffffff,%r8d
  4485dc:	xor    %r10d,%r10d
  4485df:	mov    $0x2000,%r15d
  4485e5:	xor    %ecx,%ecx
  4485e7:	jmpq   447f7c <X509_get0_pubkey_bitstr@plt+0x315ac>
  4485ec:	lea    0x228c1(%rip),%rsi        # 46aeb4 <_fini+0xd9b0>
  4485f3:	mov    %r14,%rdi
  4485f6:	mov    %r9,(%rsp)
  4485fa:	callq  4155c0 <strcmp@plt>
  4485ff:	test   %eax,%eax
  448601:	mov    (%rsp),%r9
  448605:	jne    448621 <X509_get0_pubkey_bitstr@plt+0x31c51>
  448607:	mov    (%r9),%edx
  44860a:	xor    %r14d,%r14d
  44860d:	or     $0xffffffff,%r8d
  448611:	xor    %r10d,%r10d
  448614:	mov    $0x4000,%r15d
  44861a:	xor    %ecx,%ecx
  44861c:	jmpq   447f7c <X509_get0_pubkey_bitstr@plt+0x315ac>
  448621:	lea    0x2289a(%rip),%rsi        # 46aec2 <_fini+0xd9be>
  448628:	mov    %r14,%rdi
  44862b:	mov    %r9,(%rsp)
  44862f:	callq  4155c0 <strcmp@plt>
  448634:	mov    %eax,%edx
  448636:	xor    %eax,%eax
  448638:	test   %edx,%edx
  44863a:	jne    447fbd <X509_get0_pubkey_bitstr@plt+0x315ed>
  448640:	mov    (%rsp),%r9
  448644:	xor    %r14d,%r14d
  448647:	or     $0xffffffff,%r8d
  44864b:	xor    %r10d,%r10d
  44864e:	mov    $0x8000,%r15d
  448654:	xor    %ecx,%ecx
  448656:	mov    (%r9),%edx
  448659:	jmpq   447f7c <X509_get0_pubkey_bitstr@plt+0x315ac>
  44865e:	xchg   %ax,%ax
  448660:	push   %r15
  448662:	mov    %rdi,%r15
  448665:	push   %r14
  448667:	mov    %rdx,%r14
  44866a:	push   %r13
  44866c:	push   %r12
  44866e:	push   %rbp
  44866f:	mov    %esi,%ebp
  448671:	push   %rbx
  448672:	sub    $0x418,%rsp
  448679:	mov    %fs:0x28,%rax
  448682:	mov    %rax,0x408(%rsp)
  44868a:	xor    %eax,%eax
  44868c:	callq  4168e0 <BIO_s_mem@plt>
  448691:	mov    %rax,%rdi
  448694:	callq  414a20 <BIO_new@plt>
  448699:	test   %rax,%rax
  44869c:	mov    %rax,%r13
  44869f:	je     44874f <X509_get0_pubkey_bitstr@plt+0x31d7f>
  4486a5:	mov    %rsp,%r12
  4486a8:	jmp    4486c5 <X509_get0_pubkey_bitstr@plt+0x31cf5>
  4486aa:	nopw   0x0(%rax,%rax,1)
  4486b0:	mov    %eax,%edx
  4486b2:	mov    %r12,%rsi
  4486b5:	mov    %r13,%rdi
  4486b8:	callq  412db0 <BIO_write@plt>
  4486bd:	cmp    %eax,%ebx
  4486bf:	jne    448740 <X509_get0_pubkey_bitstr@plt+0x31d70>
  4486c1:	sub    %ebx,%ebp
  4486c3:	je     4486ea <X509_get0_pubkey_bitstr@plt+0x31d1a>
  4486c5:	cmp    $0x3ff,%ebp
  4486cb:	jg     4486d4 <X509_get0_pubkey_bitstr@plt+0x31d04>
  4486cd:	cmp    $0xffffffff,%ebp
  4486d0:	mov    %ebp,%edx
  4486d2:	jne    4486d9 <X509_get0_pubkey_bitstr@plt+0x31d09>
  4486d4:	mov    $0x400,%edx
  4486d9:	mov    %r12,%rsi
  4486dc:	mov    %r14,%rdi
  4486df:	callq  413930 <BIO_read@plt>
  4486e4:	test   %eax,%eax
  4486e6:	mov    %eax,%ebx
  4486e8:	jg     4486b0 <X509_get0_pubkey_bitstr@plt+0x31ce0>
  4486ea:	mov    %r15,%rcx
  4486ed:	xor    %edx,%edx
  4486ef:	mov    $0x3,%esi
  4486f4:	mov    %r13,%rdi
  4486f7:	callq  412af0 <BIO_ctrl@plt>
  4486fc:	mov    $0x200,%esi
  448701:	mov    %r13,%rdi
  448704:	mov    %rax,%rbx
  448707:	callq  4163c0 <BIO_set_flags@plt>
  44870c:	mov    %r13,%rdi
  44870f:	callq  413960 <BIO_free@plt>
  448714:	mov    %ebx,%eax
  448716:	mov    0x408(%rsp),%rcx
  44871e:	xor    %fs:0x28,%rcx
  448727:	jne    448756 <X509_get0_pubkey_bitstr@plt+0x31d86>
  448729:	add    $0x418,%rsp
  448730:	pop    %rbx
  448731:	pop    %rbp
  448732:	pop    %r12
  448734:	pop    %r13
  448736:	pop    %r14
  448738:	pop    %r15
  44873a:	retq   
  44873b:	nopl   0x0(%rax,%rax,1)
  448740:	mov    %r13,%rdi
  448743:	callq  413960 <BIO_free@plt>
  448748:	mov    $0xffffffff,%eax
  44874d:	jmp    448716 <X509_get0_pubkey_bitstr@plt+0x31d46>
  44874f:	mov    $0xffffffff,%eax
  448754:	jmp    448716 <X509_get0_pubkey_bitstr@plt+0x31d46>
  448756:	callq  414c30 <__stack_chk_fail@plt>
  44875b:	nopl   0x0(%rax,%rax,1)
  448760:	push   %rbp
  448761:	mov    %rdi,%rbp
  448764:	mov    %rsi,%rdi
  448767:	push   %rbx
  448768:	sub    $0x8,%rsp
  44876c:	callq  415630 <BUF_strdup@plt>
  448771:	test   %rax,%rax
  448774:	mov    %rax,%rbx
  448777:	je     4487b3 <X509_get0_pubkey_bitstr@plt+0x31de3>
  448779:	mov    $0x3a,%esi
  44877e:	mov    %rax,%rdi
  448781:	callq  413220 <strchr@plt>
  448786:	test   %rax,%rax
  448789:	mov    %rax,%rdx
  44878c:	je     448795 <X509_get0_pubkey_bitstr@plt+0x31dc5>
  44878e:	movb   $0x0,(%rax)
  448791:	add    $0x1,%rdx
  448795:	mov    %rbp,%rdi
  448798:	mov    %rbx,%rsi
  44879b:	callq  414040 <EVP_PKEY_CTX_ctrl_str@plt>
  4487a0:	mov    %rbx,%rdi
  4487a3:	mov    %eax,%ebp
  4487a5:	callq  415020 <CRYPTO_free@plt>
  4487aa:	mov    %ebp,%eax
  4487ac:	add    $0x8,%rsp
  4487b0:	pop    %rbx
  4487b1:	pop    %rbp
  4487b2:	retq   
  4487b3:	mov    $0xffffffff,%eax
  4487b8:	jmp    4487ac <X509_get0_pubkey_bitstr@plt+0x31ddc>
  4487ba:	nopw   0x0(%rax,%rax,1)
  4487c0:	push   %r13
  4487c2:	xor    %r13d,%r13d
  4487c5:	push   %r12
  4487c7:	mov    %rsi,%r12
  4487ca:	push   %rbp
  4487cb:	push   %rbx
  4487cc:	mov    %rdi,%rbx
  4487cf:	sub    $0x8,%rsp
  4487d3:	test   %rdi,%rdi
  4487d6:	je     448878 <X509_get0_pubkey_bitstr@plt+0x31ea8>
  4487dc:	mov    %r12,%rdi
  4487df:	callq  413a50 <X509_STORE_CTX_get0_policy_tree@plt>
  4487e4:	mov    %r12,%rdi
  4487e7:	mov    %rax,%rbp
  4487ea:	callq  416240 <X509_STORE_CTX_get_explicit_policy@plt>
  4487ef:	lea    0x226db(%rip),%rdx        # 46aed1 <_fini+0xd9cd>
  4487f6:	test   %eax,%eax
  4487f8:	lea    0x226d7(%rip),%rax        # 46aed6 <_fini+0xd9d2>
  4487ff:	lea    0x226d6(%rip),%rsi        # 46aedc <_fini+0xd9d8>
  448806:	mov    %rbx,%rdi
  448809:	cmove  %rax,%rdx
  44880d:	xor    %eax,%eax
  44880f:	callq  413c40 <BIO_printf@plt>
  448814:	mov    %rbp,%rdi
  448817:	callq  415900 <X509_policy_tree_get0_policies@plt>
  44881c:	lea    0x226d6(%rip),%rsi        # 46aef9 <_fini+0xd9f5>
  448823:	mov    %rax,%rdx
  448826:	mov    %rbx,%rdi
  448829:	callq  444e90 <X509_get0_pubkey_bitstr@plt+0x2e4c0>
  44882e:	mov    %rbp,%rdi
  448831:	callq  416650 <X509_policy_tree_get0_user_policies@plt>
  448836:	lea    0x226c6(%rip),%rsi        # 46af03 <_fini+0xd9ff>
  44883d:	mov    %rax,%rdx
  448840:	mov    %rbx,%rdi
  448843:	callq  444e90 <X509_get0_pubkey_bitstr@plt+0x2e4c0>
  448848:	test   %r13d,%r13d
  44884b:	jne    448860 <X509_get0_pubkey_bitstr@plt+0x31e90>
  44884d:	add    $0x8,%rsp
  448851:	pop    %rbx
  448852:	pop    %rbp
  448853:	pop    %r12
  448855:	pop    %r13
  448857:	retq   
  448858:	nopl   0x0(%rax,%rax,1)
  448860:	add    $0x8,%rsp
  448864:	mov    %rbx,%rdi
  448867:	pop    %rbx
  448868:	pop    %rbp
  448869:	pop    %r12
  44886b:	pop    %r13
  44886d:	jmpq   413960 <BIO_free@plt>
  448872:	nopw   0x0(%rax,%rax,1)
  448878:	mov    0x22d701(%rip),%rax        # 675f80 <_fini+0x218a7c>
  44887f:	xor    %esi,%esi
  448881:	mov    $0x1,%r13b
  448884:	mov    (%rax),%rdi
  448887:	callq  4161e0 <BIO_new_fp@plt>
  44888c:	mov    %rax,%rbx
  44888f:	jmpq   4487dc <X509_get0_pubkey_bitstr@plt+0x31e0c>
  448894:	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4488a0:	push   %r12
  4488a2:	mov    %rsi,%r12
  4488a5:	push   %rbp
  4488a6:	mov    %rdi,%rbp
  4488a9:	mov    %rsi,%rdi
  4488ac:	push   %rbx
  4488ad:	callq  413470 <strlen@plt>
  4488b2:	cmp    $0xfffe,%rax
  4488b8:	mov    %rax,%rbx
  4488bb:	ja     448948 <X509_get0_pubkey_bitstr@plt+0x31f78>
  4488c1:	lea    0x1(%rax),%edi
  4488c4:	lea    0x22261(%rip),%rsi        # 46ab2c <_fini+0xd628>
  4488cb:	mov    $0xabb,%edx
  4488d0:	callq  413d50 <CRYPTO_malloc@plt>
  4488d5:	test   %rax,%rax
  4488d8:	je     448948 <X509_get0_pubkey_bitstr@plt+0x31f78>
  4488da:	mov    $0x1,%ecx
  4488df:	xor    %edx,%edx
  4488e1:	xor    %esi,%esi
  4488e3:	jmp    4488fc <X509_get0_pubkey_bitstr@plt+0x31f2c>
  4488e5:	nopl   (%rax)
  4488e8:	add    $0x1,%rdx
  4488ec:	cmp    %rcx,%rbx
  4488ef:	mov    %r8b,(%rax,%rcx,1)
  4488f3:	lea    0x1(%rcx),%r8
  4488f7:	jb     448933 <X509_get0_pubkey_bitstr@plt+0x31f63>
  4488f9:	mov    %r8,%rcx
  4488fc:	cmp    %rdx,%rbx
  4488ff:	je     44890c <X509_get0_pubkey_bitstr@plt+0x31f3c>
  448901:	movzbl (%r12,%rdx,1),%r8d
  448906:	cmp    $0x2c,%r8b
  44890a:	jne    4488e8 <X509_get0_pubkey_bitstr@plt+0x31f18>
  44890c:	mov    %rdx,%rdi
  44890f:	sub    %rsi,%rdi
  448912:	cmp    $0xff,%rdi
  448919:	ja     448940 <X509_get0_pubkey_bitstr@plt+0x31f70>
  44891b:	mov    %edx,%edi
  44891d:	add    $0x1,%rdx
  448921:	lea    0x1(%rcx),%r8
  448925:	sub    %esi,%edi
  448927:	cmp    %rcx,%rbx
  44892a:	mov    %dil,(%rax,%rsi,1)
  44892e:	mov    %rcx,%rsi
  448931:	jae    4488f9 <X509_get0_pubkey_bitstr@plt+0x31f29>
  448933:	add    $0x1,%ebx
  448936:	mov    %bx,0x0(%rbp)
  44893a:	pop    %rbx
  44893b:	pop    %rbp
  44893c:	pop    %r12
  44893e:	retq   
  44893f:	nop
  448940:	mov    %rax,%rdi
  448943:	callq  415020 <CRYPTO_free@plt>
  448948:	pop    %rbx
  448949:	pop    %rbp
  44894a:	xor    %eax,%eax
  44894c:	pop    %r12
  44894e:	retq   
  44894f:	nop
  448950:	push   %r12
  448952:	mov    %esi,%r12d
  448955:	push   %rbp
  448956:	mov    %edi,%ebp
  448958:	push   %rbx
  448959:	sub    $0x30,%rsp
  44895d:	mov    %rsp,%rdi
  448960:	mov    %fs:0x28,%rax
  448969:	mov    %rax,0x28(%rsp)
  44896e:	xor    %eax,%eax
  448970:	callq  415d00 <times@plt>
  448975:	test   %r12d,%r12d
  448978:	mov    %rax,%rbx
  44897b:	cmovne (%rsp),%rbx
  448980:	test   %ebp,%ebp
  448982:	jne    4489b0 <X509_get0_pubkey_bitstr@plt+0x31fe0>
  448984:	xorpd  %xmm0,%xmm0
  448988:	mov    %rbx,0x233249(%rip)        # 67bbd8 <_edata+0xed0>
  44898f:	mov    0x28(%rsp),%rax
  448994:	xor    %fs:0x28,%rax
  44899d:	jne    4489d1 <X509_get0_pubkey_bitstr@plt+0x32001>
  44899f:	add    $0x30,%rsp
  4489a3:	pop    %rbx
  4489a4:	pop    %rbp
  4489a5:	pop    %r12
  4489a7:	retq   
  4489a8:	nopl   0x0(%rax,%rax,1)
  4489b0:	mov    $0x2,%edi
  4489b5:	callq  413d30 <sysconf@plt>
  4489ba:	sub    0x233217(%rip),%rbx        # 67bbd8 <_edata+0xed0>
  4489c1:	cvtsi2sd %rax,%xmm1
  4489c6:	cvtsi2sd %rbx,%xmm0
  4489cb:	divsd  %xmm1,%xmm0
  4489cf:	jmp    44898f <X509_get0_pubkey_bitstr@plt+0x31fbf>
  4489d1:	callq  414c30 <__stack_chk_fail@plt>
  4489d6:	nopw   %cs:0x0(%rax,%rax,1)
  4489e0:	sub    $0xa8,%rsp
  4489e7:	mov    %rdi,%rsi
  4489ea:	mov    $0x1,%edi
  4489ef:	mov    %rsp,%rdx
  4489f2:	mov    %fs:0x28,%rax
  4489fb:	mov    %rax,0x98(%rsp)
  448a03:	xor    %eax,%eax
  448a05:	callq  414860 <__xstat@plt>
  448a0a:	test   %eax,%eax
  448a0c:	jne    448a40 <X509_get0_pubkey_bitstr@plt+0x32070>
  448a0e:	mov    0x18(%rsp),%eax
  448a12:	and    $0xf000,%eax
  448a17:	cmp    $0x4000,%eax
  448a1c:	sete   %al
  448a1f:	movzbl %al,%eax
  448a22:	mov    0x98(%rsp),%rcx
  448a2a:	xor    %fs:0x28,%rcx
  448a33:	jne    448a47 <X509_get0_pubkey_bitstr@plt+0x32077>
  448a35:	add    $0xa8,%rsp
  448a3c:	retq   
  448a3d:	nopl   (%rax)
  448a40:	mov    $0xffffffff,%eax
  448a45:	jmp    448a22 <X509_get0_pubkey_bitstr@plt+0x32052>
  448a47:	callq  414c30 <__stack_chk_fail@plt>
  448a4c:	nopl   0x0(%rax)
  448a50:	push   %rbp
  448a51:	mov    %esi,%ebp
  448a53:	push   %rbx
  448a54:	mov    %rdi,%rbx
  448a57:	sub    $0x8,%rsp
  448a5b:	mov    0x22d4ae(%rip),%rax        # 675f10 <_fini+0x218a0c>
  448a62:	mov    (%rax),%rdi
  448a65:	callq  4149a0 <fileno@plt>
  448a6a:	movslq %ebp,%rdx
  448a6d:	mov    %rbx,%rsi
  448a70:	mov    %eax,%edi
  448a72:	callq  4156b0 <read@plt>
  448a77:	add    $0x8,%rsp
  448a7b:	pop    %rbx
  448a7c:	pop    %rbp
  448a7d:	retq   
  448a7e:	xchg   %ax,%ax
  448a80:	push   %rbp
  448a81:	mov    %esi,%ebp
  448a83:	push   %rbx
  448a84:	mov    %rdi,%rbx
  448a87:	sub    $0x8,%rsp
  448a8b:	mov    0x22d426(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  448a92:	mov    (%rax),%rdi
  448a95:	callq  4149a0 <fileno@plt>
  448a9a:	movslq %ebp,%rdx
  448a9d:	mov    %rbx,%rsi
  448aa0:	mov    %eax,%edi
  448aa2:	callq  4131b0 <write@plt>
  448aa7:	add    $0x8,%rsp
  448aab:	pop    %rbx
  448aac:	pop    %rbp
  448aad:	retq   
  448aae:	xchg   %ax,%ax
  448ab0:	push   %r15
  448ab2:	push   %r14
  448ab4:	push   %r13
  448ab6:	push   %r12
  448ab8:	mov    %rsi,%r12
  448abb:	push   %rbp
  448abc:	mov    %edi,%ebp
  448abe:	mov    %rsi,%rdi
  448ac1:	push   %rbx
  448ac2:	sub    $0x8,%rsp
  448ac6:	callq  414470 <X509_STORE_CTX_get_current_cert@plt>
  448acb:	mov    %r12,%rdi
  448ace:	mov    %rax,%r14
  448ad1:	callq  415050 <X509_STORE_CTX_get_error@plt>
  448ad6:	mov    %r12,%rdi
  448ad9:	mov    %eax,%r13d
  448adc:	callq  4167a0 <X509_STORE_CTX_get_error_depth@plt>
  448ae1:	lea    0x232258(%rip),%rbx        # 67ad40 <_edata+0x38>
  448ae8:	lea    0x22b21(%rip),%rsi        # 46b610 <_fini+0xe10c>
  448aef:	mov    %eax,%edx
  448af1:	mov    %eax,%r15d
  448af4:	xor    %eax,%eax
  448af6:	mov    (%rbx),%rdi
  448af9:	callq  413c40 <BIO_printf@plt>
  448afe:	test   %r14,%r14
  448b01:	je     448c98 <X509_get0_pubkey_bitstr@plt+0x322c8>
  448b07:	mov    %r14,%rdi
  448b0a:	callq  414400 <X509_get_subject_name@plt>
  448b0f:	mov    (%rbx),%rdi
  448b12:	mov    %rax,%rsi
  448b15:	mov    $0x82031f,%ecx
  448b1a:	xor    %edx,%edx
  448b1c:	callq  414bd0 <X509_NAME_print_ex@plt>
  448b21:	mov    (%rbx),%rdi
  448b24:	lea    0x1c074(%rip),%rsi        # 464b9f <_fini+0x769b>
  448b2b:	callq  413b70 <BIO_puts@plt>
  448b30:	test   %ebp,%ebp
  448b32:	je     448c30 <X509_get0_pubkey_bitstr@plt+0x32260>
  448b38:	cmp    $0x2b,%r13d
  448b3c:	ja     448b8d <X509_get0_pubkey_bitstr@plt+0x321bd>
  448b3e:	lea    0x23183(%rip),%rax        # 46bcc8 <_fini+0xe7c4>
  448b45:	mov    %r13d,%edx
  448b48:	movslq (%rax,%rdx,4),%rdx
  448b4c:	add    %rdx,%rax
  448b4f:	jmpq   *%rax
  448b51:	nopl   0x0(%rax)
  448b58:	mov    (%rbx),%rdi
  448b5b:	lea    0x1d14e(%rip),%rsi        # 465cb0 <_fini+0x87ac>
  448b62:	xor    %eax,%eax
  448b64:	callq  413c40 <BIO_printf@plt>
  448b69:	mov    (%r14),%rax
  448b6c:	mov    0x20(%rax),%rax
  448b70:	mov    0x8(%rax),%rsi
  448b74:	mov    (%rbx),%rdi
  448b77:	callq  415f50 <ASN1_TIME_print@plt>
  448b7c:	mov    (%rbx),%rdi
  448b7f:	lea    0x1c019(%rip),%rsi        # 464b9f <_fini+0x769b>
  448b86:	xor    %eax,%eax
  448b88:	callq  413c40 <BIO_printf@plt>
  448b8d:	cmp    $0x2,%ebp
  448b90:	jne    448ba2 <X509_get0_pubkey_bitstr@plt+0x321d2>
  448b92:	test   %r13d,%r13d
  448b95:	jne    448ba2 <X509_get0_pubkey_bitstr@plt+0x321d2>
  448b97:	mov    (%rbx),%rdi
  448b9a:	mov    %r12,%rsi
  448b9d:	callq  4487c0 <X509_get0_pubkey_bitstr@plt+0x31df0>
  448ba2:	mov    (%rbx),%rdi
  448ba5:	lea    0x22a91(%rip),%rsi        # 46b63d <_fini+0xe139>
  448bac:	mov    %ebp,%edx
  448bae:	xor    %eax,%eax
  448bb0:	callq  413c40 <BIO_printf@plt>
  448bb5:	add    $0x8,%rsp
  448bb9:	mov    %ebp,%eax
  448bbb:	pop    %rbx
  448bbc:	pop    %rbp
  448bbd:	pop    %r12
  448bbf:	pop    %r13
  448bc1:	pop    %r14
  448bc3:	pop    %r15
  448bc5:	retq   
  448bc6:	nopw   %cs:0x0(%rax,%rax,1)
  448bd0:	mov    (%rbx),%rdi
  448bd3:	lea    0x1d0cb(%rip),%rsi        # 465ca5 <_fini+0x87a1>
  448bda:	xor    %eax,%eax
  448bdc:	callq  413c40 <BIO_printf@plt>
  448be1:	mov    (%r14),%rax
  448be4:	mov    0x20(%rax),%rax
  448be8:	mov    (%rax),%rsi
  448beb:	jmp    448b74 <X509_get0_pubkey_bitstr@plt+0x321a4>
  448bed:	nopl   (%rax)
  448bf0:	mov    (%rbx),%rdi
  448bf3:	lea    0x1d016(%rip),%rsi        # 465c10 <_fini+0x870c>
  448bfa:	callq  413b70 <BIO_puts@plt>
  448bff:	mov    %r14,%rdi
  448c02:	callq  412940 <X509_get_issuer_name@plt>
  448c07:	mov    (%rbx),%rdi
  448c0a:	mov    $0x82031f,%ecx
  448c0f:	xor    %edx,%edx
  448c11:	mov    %rax,%rsi
  448c14:	callq  414bd0 <X509_NAME_print_ex@plt>
  448c19:	mov    (%rbx),%rdi
  448c1c:	lea    0x1bf7c(%rip),%rsi        # 464b9f <_fini+0x769b>
  448c23:	callq  413b70 <BIO_puts@plt>
  448c28:	jmpq   448ba2 <X509_get0_pubkey_bitstr@plt+0x321d2>
  448c2d:	nopl   (%rax)
  448c30:	movslq %r13d,%rdi
  448c33:	callq  415690 <X509_verify_cert_error_string@plt>
  448c38:	mov    (%rbx),%rdi
  448c3b:	lea    0x229e3(%rip),%rsi        # 46b625 <_fini+0xe121>
  448c42:	mov    %rax,%rcx
  448c45:	mov    %r13d,%edx
  448c48:	xor    %eax,%eax
  448c4a:	callq  413c40 <BIO_printf@plt>
  448c4f:	lea    0x232fae(%rip),%rax        # 67bc04 <_edata+0xefc>
  448c56:	cmp    (%rax),%r15d
  448c59:	jg     448c80 <X509_get0_pubkey_bitstr@plt+0x322b0>
  448c5b:	lea    0x232f9a(%rip),%rax        # 67bbfc <_edata+0xef4>
  448c62:	xor    %ebp,%ebp
  448c64:	mov    (%rax),%eax
  448c66:	test   %eax,%eax
  448c68:	lea    0x232f91(%rip),%rax        # 67bc00 <_edata+0xef8>
  448c6f:	sete   %bpl
  448c73:	movl   $0x0,(%rax)
  448c79:	jmpq   448b38 <X509_get0_pubkey_bitstr@plt+0x32168>
  448c7e:	xchg   %ax,%ax
  448c80:	lea    0x232f79(%rip),%rax        # 67bc00 <_edata+0xef8>
  448c87:	movl   $0x16,(%rax)
  448c8d:	jmpq   448b38 <X509_get0_pubkey_bitstr@plt+0x32168>
  448c92:	nopw   0x0(%rax,%rax,1)
  448c98:	mov    (%rbx),%rdi
  448c9b:	lea    0x22978(%rip),%rsi        # 46b61a <_fini+0xe116>
  448ca2:	callq  413b70 <BIO_puts@plt>
  448ca7:	jmpq   448b30 <X509_get0_pubkey_bitstr@plt+0x32160>
  448cac:	nopl   0x0(%rax)
  448cb0:	push   %r12
  448cb2:	test   %rsi,%rsi
  448cb5:	push   %rbp
  448cb6:	mov    %rsi,%rbp
  448cb9:	push   %rbx
  448cba:	je     448cfd <X509_get0_pubkey_bitstr@plt+0x3232d>
  448cbc:	mov    %rdx,%rbx
  448cbf:	mov    $0x1,%edx
  448cc4:	mov    %rdi,%r12
  448cc7:	callq  4142a0 <SSL_CTX_use_certificate_file@plt>
  448ccc:	test   %eax,%eax
  448cce:	jle    448d60 <X509_get0_pubkey_bitstr@plt+0x32390>
  448cd4:	test   %rbx,%rbx
  448cd7:	mov    $0x1,%edx
  448cdc:	mov    %r12,%rdi
  448cdf:	cmove  %rbp,%rbx
  448ce3:	mov    %rbx,%rsi
  448ce6:	callq  414720 <SSL_CTX_use_PrivateKey_file@plt>
  448ceb:	test   %eax,%eax
  448ced:	jle    448d30 <X509_get0_pubkey_bitstr@plt+0x32360>
  448cef:	mov    %r12,%rdi
  448cf2:	callq  412ad0 <SSL_CTX_check_private_key@plt>
  448cf7:	test   %eax,%eax
  448cf9:	mov    %eax,%ebx
  448cfb:	je     448d10 <X509_get0_pubkey_bitstr@plt+0x32340>
  448cfd:	mov    $0x1,%ebx
  448d02:	mov    %ebx,%eax
  448d04:	pop    %rbx
  448d05:	pop    %rbp
  448d06:	pop    %r12
  448d08:	retq   
  448d09:	nopl   0x0(%rax)
  448d10:	lea    0x232029(%rip),%rax        # 67ad40 <_edata+0x38>
  448d17:	lea    0x232f2(%rip),%rsi        # 46c010 <_fini+0xeb0c>
  448d1e:	mov    (%rax),%rdi
  448d21:	xor    %eax,%eax
  448d23:	callq  413c40 <BIO_printf@plt>
  448d28:	mov    %ebx,%eax
  448d2a:	pop    %rbx
  448d2b:	pop    %rbp
  448d2c:	pop    %r12
  448d2e:	retq   
  448d2f:	nop
  448d30:	lea    0x232009(%rip),%rbp        # 67ad40 <_edata+0x38>
  448d37:	lea    0x232aa(%rip),%rsi        # 46bfe8 <_fini+0xeae4>
  448d3e:	mov    %rbx,%rdx
  448d41:	xor    %eax,%eax
  448d43:	xor    %ebx,%ebx
  448d45:	mov    0x0(%rbp),%rdi
  448d49:	callq  413c40 <BIO_printf@plt>
  448d4e:	mov    0x0(%rbp),%rdi
  448d52:	callq  413f40 <ERR_print_errors@plt>
  448d57:	mov    %ebx,%eax
  448d59:	pop    %rbx
  448d5a:	pop    %rbp
  448d5b:	pop    %r12
  448d5d:	retq   
  448d5e:	xchg   %ax,%ax
  448d60:	lea    0x231fd9(%rip),%rbx        # 67ad40 <_edata+0x38>
  448d67:	lea    0x23252(%rip),%rsi        # 46bfc0 <_fini+0xeabc>
  448d6e:	mov    %rbp,%rdx
  448d71:	xor    %eax,%eax
  448d73:	mov    (%rbx),%rdi
  448d76:	callq  413c40 <BIO_printf@plt>
  448d7b:	mov    (%rbx),%rdi
  448d7e:	xor    %ebx,%ebx
  448d80:	callq  413f40 <ERR_print_errors@plt>
  448d85:	jmpq   448d02 <X509_get0_pubkey_bitstr@plt+0x32332>
  448d8a:	nopw   0x0(%rax,%rax,1)
  448d90:	push   %rbp
  448d91:	push   %rbx
  448d92:	sub    $0x8,%rsp
  448d96:	test   %rsi,%rsi
  448d99:	je     448dc7 <X509_get0_pubkey_bitstr@plt+0x323f7>
  448d9b:	mov    %rdi,%rbx
  448d9e:	mov    %rdx,%rbp
  448da1:	callq  4127b0 <SSL_CTX_use_certificate@plt>
  448da6:	test   %eax,%eax
  448da8:	jle    448e00 <X509_get0_pubkey_bitstr@plt+0x32430>
  448daa:	mov    %rbp,%rsi
  448dad:	mov    %rbx,%rdi
  448db0:	callq  4167b0 <SSL_CTX_use_PrivateKey@plt>
  448db5:	test   %eax,%eax
  448db7:	jle    448e30 <X509_get0_pubkey_bitstr@plt+0x32460>
  448db9:	mov    %rbx,%rdi
  448dbc:	callq  412ad0 <SSL_CTX_check_private_key@plt>
  448dc1:	test   %eax,%eax
  448dc3:	mov    %eax,%ebx
  448dc5:	je     448dd8 <X509_get0_pubkey_bitstr@plt+0x32408>
  448dc7:	mov    $0x1,%ebx
  448dcc:	add    $0x8,%rsp
  448dd0:	mov    %ebx,%eax
  448dd2:	pop    %rbx
  448dd3:	pop    %rbp
  448dd4:	retq   
  448dd5:	nopl   (%rax)
  448dd8:	lea    0x231f61(%rip),%rax        # 67ad40 <_edata+0x38>
  448ddf:	lea    0x2322a(%rip),%rsi        # 46c010 <_fini+0xeb0c>
  448de6:	mov    (%rax),%rdi
  448de9:	xor    %eax,%eax
  448deb:	callq  413c40 <BIO_printf@plt>
  448df0:	add    $0x8,%rsp
  448df4:	mov    %ebx,%eax
  448df6:	pop    %rbx
  448df7:	pop    %rbp
  448df8:	retq   
  448df9:	nopl   0x0(%rax)
  448e00:	lea    0x231f39(%rip),%rbx        # 67ad40 <_edata+0x38>
  448e07:	lea    0x22841(%rip),%rsi        # 46b64f <_fini+0xe14b>
  448e0e:	mov    (%rbx),%rdi
  448e11:	xor    %eax,%eax
  448e13:	callq  413c40 <BIO_printf@plt>
  448e18:	mov    (%rbx),%rdi
  448e1b:	xor    %ebx,%ebx
  448e1d:	callq  413f40 <ERR_print_errors@plt>
  448e22:	add    $0x8,%rsp
  448e26:	mov    %ebx,%eax
  448e28:	pop    %rbx
  448e29:	pop    %rbp
  448e2a:	retq   
  448e2b:	nopl   0x0(%rax,%rax,1)
  448e30:	lea    0x231f09(%rip),%rbx        # 67ad40 <_edata+0x38>
  448e37:	lea    0x2282c(%rip),%rsi        # 46b66a <_fini+0xe166>
  448e3e:	jmp    448e0e <X509_get0_pubkey_bitstr@plt+0x3243e>
  448e40:	push   %r15
  448e42:	mov    %ecx,%r15d
  448e45:	push   %r14
  448e47:	mov    %rdx,%r14
  448e4a:	push   %r13
  448e4c:	mov    %rdi,%r13
  448e4f:	push   %r12
  448e51:	push   %rbp
  448e52:	mov    %esi,%ebp
  448e54:	push   %rbx
  448e55:	mov    %r9,%rbx
  448e58:	sub    $0x18,%rsp
  448e5c:	callq  414690 <BIO_get_callback_arg@plt>
  448e61:	test   %rax,%rax
  448e64:	mov    %rax,%r12
  448e67:	je     448e79 <X509_get0_pubkey_bitstr@plt+0x324a9>
  448e69:	cmp    $0x82,%ebp
  448e6f:	je     448ec0 <X509_get0_pubkey_bitstr@plt+0x324f0>
  448e71:	cmp    $0x83,%ebp
  448e77:	je     448e90 <X509_get0_pubkey_bitstr@plt+0x324c0>
  448e79:	add    $0x18,%rsp
  448e7d:	mov    %rbx,%rax
  448e80:	pop    %rbx
  448e81:	pop    %rbp
  448e82:	pop    %r12
  448e84:	pop    %r13
  448e86:	pop    %r14
  448e88:	pop    %r15
  448e8a:	retq   
  448e8b:	nopl   0x0(%rax,%rax,1)
  448e90:	lea    0x231e1(%rip),%rsi        # 46c078 <_fini+0xeb74>
  448e97:	mov    %rbx,(%rsp)
  448e9b:	mov    %rbx,%r9
  448e9e:	movslq %r15d,%r8
  448ea1:	mov    %r14,%rcx
  448ea4:	mov    %r13,%rdx
  448ea7:	mov    %r12,%rdi
  448eaa:	xor    %eax,%eax
  448eac:	callq  413c40 <BIO_printf@plt>
  448eb1:	mov    %ebx,%edx
  448eb3:	mov    %r14,%rsi
  448eb6:	mov    %r12,%rdi
  448eb9:	callq  413c30 <BIO_dump@plt>
  448ebe:	jmp    448e79 <X509_get0_pubkey_bitstr@plt+0x324a9>
  448ec0:	mov    %rbx,(%rsp)
  448ec4:	mov    %rbx,%r9
  448ec7:	movslq %r15d,%r8
  448eca:	mov    %r14,%rcx
  448ecd:	mov    %r13,%rdx
  448ed0:	lea    0x23171(%rip),%rsi        # 46c048 <_fini+0xeb44>
  448ed7:	jmp    448ea7 <X509_get0_pubkey_bitstr@plt+0x324d7>
  448ed9:	nopl   0x0(%rax)
  448ee0:	push   %r12
  448ee2:	test   $0x1000,%esi
  448ee8:	push   %rbp
  448ee9:	mov    %edx,%ebp
  448eeb:	push   %rbx
  448eec:	lea    0x22792(%rip),%rbx        # 46b685 <_fini+0xe181>
  448ef3:	jne    448f0d <X509_get0_pubkey_bitstr@plt+0x3253d>
  448ef5:	lea    0x22795(%rip),%rbx        # 46b691 <_fini+0xe18d>
  448efc:	lea    0x22799(%rip),%rax        # 46b69c <_fini+0xe198>
  448f03:	test   $0x2000,%esi
  448f09:	cmove  %rax,%rbx
  448f0d:	test   $0x1,%sil
  448f11:	jne    448f88 <X509_get0_pubkey_bitstr@plt+0x325b8>
  448f13:	test   $0x4000,%esi
  448f19:	jne    448f38 <X509_get0_pubkey_bitstr@plt+0x32568>
  448f1b:	and    $0x2,%esi
  448f1e:	je     448f2e <X509_get0_pubkey_bitstr@plt+0x3255e>
  448f20:	test   %ebp,%ebp
  448f22:	je     448fb0 <X509_get0_pubkey_bitstr@plt+0x325e0>
  448f28:	js     448fc8 <X509_get0_pubkey_bitstr@plt+0x325f8>
  448f2e:	pop    %rbx
  448f2f:	pop    %rbp
  448f30:	pop    %r12
  448f32:	retq   
  448f33:	nopl   0x0(%rax,%rax,1)
  448f38:	lea    0x2276c(%rip),%rax        # 46b6ab <_fini+0xe1a7>
  448f3f:	lea    0x22760(%rip),%rbx        # 46b6a6 <_fini+0xe1a2>
  448f46:	and    $0x4,%esi
  448f49:	mov    %ebp,%edi
  448f4b:	cmove  %rax,%rbx
  448f4f:	callq  415e80 <SSL_alert_desc_string_long@plt>
  448f54:	mov    %ebp,%edi
  448f56:	mov    %rax,%r12
  448f59:	callq  4153b0 <SSL_alert_type_string_long@plt>
  448f5e:	mov    %rbx,%rdx
  448f61:	mov    %rax,%rcx
  448f64:	lea    0x231dd5(%rip),%rax        # 67ad40 <_edata+0x38>
  448f6b:	pop    %rbx
  448f6c:	pop    %rbp
  448f6d:	mov    %r12,%r8
  448f70:	mov    (%rax),%rdi
  448f73:	lea    0x22737(%rip),%rsi        # 46b6b1 <_fini+0xe1ad>
  448f7a:	pop    %r12
  448f7c:	xor    %eax,%eax
  448f7e:	jmpq   413c40 <BIO_printf@plt>
  448f83:	nopl   0x0(%rax,%rax,1)
  448f88:	callq  415790 <SSL_state_string_long@plt>
  448f8d:	lea    0x2272b(%rip),%rsi        # 46b6bf <_fini+0xe1bb>
  448f94:	mov    %rax,%rcx
  448f97:	mov    %rbx,%rdx
  448f9a:	lea    0x231d9f(%rip),%rax        # 67ad40 <_edata+0x38>
  448fa1:	pop    %rbx
  448fa2:	pop    %rbp
  448fa3:	pop    %r12
  448fa5:	mov    (%rax),%rdi
  448fa8:	xor    %eax,%eax
  448faa:	jmpq   413c40 <BIO_printf@plt>
  448faf:	nop
  448fb0:	callq  415790 <SSL_state_string_long@plt>
  448fb5:	mov    %rbx,%rdx
  448fb8:	mov    %rax,%rcx
  448fbb:	lea    0x22704(%rip),%rsi        # 46b6c6 <_fini+0xe1c2>
  448fc2:	jmp    448f9a <X509_get0_pubkey_bitstr@plt+0x325ca>
  448fc4:	nopl   0x0(%rax)
  448fc8:	callq  415790 <SSL_state_string_long@plt>
  448fcd:	mov    %rbx,%rdx
  448fd0:	mov    %rax,%rcx
  448fd3:	lea    0x226fd(%rip),%rsi        # 46b6d7 <_fini+0xe1d3>
  448fda:	jmp    448f9a <X509_get0_pubkey_bitstr@plt+0x325ca>
  448fdc:	nopl   0x0(%rax)
  448fe0:	push   %r12
  448fe2:	xor    %edx,%edx
  448fe4:	push   %rbp
  448fe5:	push   %rbx
  448fe6:	mov    %rdi,%rbx
  448fe9:	mov    %rsi,%rdi
  448fec:	mov    $0x6d,%esi
  448ff1:	sub    $0x10,%rsp
  448ff5:	mov    %rsp,%rcx
  448ff8:	mov    %fs:0x28,%rax
  449001:	mov    %rax,0x8(%rsp)
  449006:	xor    %eax,%eax
  449008:	callq  4162b0 <SSL_ctrl@plt>
  44900d:	test   %rax,%rax
  449010:	jne    449038 <X509_get0_pubkey_bitstr@plt+0x32668>
  449012:	mov    0x8(%rsp),%rdx
  449017:	xor    %fs:0x28,%rdx
  449020:	mov    $0x1,%eax
  449025:	jne    449109 <X509_get0_pubkey_bitstr@plt+0x32739>
  44902b:	add    $0x10,%rsp
  44902f:	pop    %rbx
  449030:	pop    %rbp
  449031:	pop    %r12
  449033:	retq   
  449034:	nopl   0x0(%rax)
  449038:	lea    0x226a8(%rip),%rsi        # 46b6e7 <_fini+0xe1e3>
  44903f:	mov    %rbx,%rdi
  449042:	callq  413b70 <BIO_puts@plt>
  449047:	mov    (%rsp),%rdi
  44904b:	callq  413830 <EVP_PKEY_id@plt>
  449050:	cmp    $0x1c,%eax
  449053:	je     4490e8 <X509_get0_pubkey_bitstr@plt+0x32718>
  449059:	cmp    $0x198,%eax
  44905e:	je     449090 <X509_get0_pubkey_bitstr@plt+0x326c0>
  449060:	cmp    $0x6,%eax
  449063:	jne    449081 <X509_get0_pubkey_bitstr@plt+0x326b1>
  449065:	mov    (%rsp),%rdi
  449069:	callq  415370 <EVP_PKEY_bits@plt>
  44906e:	lea    0x22684(%rip),%rsi        # 46b6f9 <_fini+0xe1f5>
  449075:	mov    %eax,%edx
  449077:	mov    %rbx,%rdi
  44907a:	xor    %eax,%eax
  44907c:	callq  413c40 <BIO_printf@plt>
  449081:	mov    (%rsp),%rdi
  449085:	callq  412b00 <EVP_PKEY_free@plt>
  44908a:	jmp    449012 <X509_get0_pubkey_bitstr@plt+0x32642>
  44908c:	nopl   0x0(%rax)
  449090:	mov    (%rsp),%rdi
  449094:	callq  4161c0 <EVP_PKEY_get1_EC_KEY@plt>
  449099:	mov    %rax,%rdi
  44909c:	mov    %rax,%rbp
  44909f:	callq  4152f0 <EC_KEY_get0_group@plt>
  4490a4:	mov    %rax,%rdi
  4490a7:	callq  413f80 <EC_GROUP_get_curve_name@plt>
  4490ac:	mov    %rbp,%rdi
  4490af:	mov    %eax,%r12d
  4490b2:	callq  415bf0 <EC_KEY_free@plt>
  4490b7:	mov    %r12d,%edi
  4490ba:	callq  415b30 <OBJ_nid2sn@plt>
  4490bf:	mov    (%rsp),%rdi
  4490c3:	mov    %rax,%rbp
  4490c6:	callq  415370 <EVP_PKEY_bits@plt>
  4490cb:	lea    0x22642(%rip),%rsi        # 46b714 <_fini+0xe210>
  4490d2:	mov    %eax,%ecx
  4490d4:	mov    %rbp,%rdx
  4490d7:	mov    %rbx,%rdi
  4490da:	xor    %eax,%eax
  4490dc:	callq  413c40 <BIO_printf@plt>
  4490e1:	jmp    449081 <X509_get0_pubkey_bitstr@plt+0x326b1>
  4490e3:	nopl   0x0(%rax,%rax,1)
  4490e8:	mov    (%rsp),%rdi
  4490ec:	callq  415370 <EVP_PKEY_bits@plt>
  4490f1:	lea    0x2260f(%rip),%rsi        # 46b707 <_fini+0xe203>
  4490f8:	mov    %eax,%edx
  4490fa:	mov    %rbx,%rdi
  4490fd:	xor    %eax,%eax
  4490ff:	callq  413c40 <BIO_printf@plt>
  449104:	jmpq   449081 <X509_get0_pubkey_bitstr@plt+0x326b1>
  449109:	callq  414c30 <__stack_chk_fail@plt>
  44910e:	xchg   %ax,%ax
  449110:	push   %r13
  449112:	lea    0x2260e(%rip),%rax        # 46b727 <_fini+0xe223>
  449119:	mov    %rcx,%r13
  44911c:	lea    0x22608(%rip),%rcx        # 46b72b <_fini+0xe227>
  449123:	push   %r12
  449125:	mov    %r8,%r12
  449128:	push   %rbp
  449129:	push   %rbx
  44912a:	sub    $0x18,%rsp
  44912e:	test   %edi,%edi
  449130:	cmove  %rcx,%rax
  449134:	cmp    $0x301,%esi
  44913a:	mov    0x40(%rsp),%rbp
  44913f:	je     449410 <X509_get0_pubkey_bitstr@plt+0x32a40>
  449145:	jle    4491f0 <X509_get0_pubkey_bitstr@plt+0x32820>
  44914b:	cmp    $0x303,%esi
  449151:	je     449420 <X509_get0_pubkey_bitstr@plt+0x32a50>
  449157:	jl     449228 <X509_get0_pubkey_bitstr@plt+0x32858>
  44915d:	cmp    $0xfeff,%esi
  449163:	lea    0x226d3(%rip),%rcx        # 46b83d <_fini+0xe339>
  44916a:	jne    4497b0 <X509_get0_pubkey_bitstr@plt+0x32de0>
  449170:	lea    0x16c4b(%rip),%rdi        # 45fdc2 <_fini+0x28be>
  449177:	mov    %rdi,%r9
  44917a:	lea    -0x300(%rsi),%r8d
  449181:	cmp    $0x3,%r8d
  449185:	jbe    449248 <X509_get0_pubkey_bitstr@plt+0x32878>
  44918b:	cmp    $0xfeff,%esi
  449191:	je     449248 <X509_get0_pubkey_bitstr@plt+0x32878>
  449197:	cmp    $0x100,%esi
  44919d:	lea    0x16c1e(%rip),%r8        # 45fdc2 <_fini+0x28be>
  4491a4:	je     449248 <X509_get0_pubkey_bitstr@plt+0x32878>
  4491aa:	lea    0x229d3(%rip),%rsi        # 46bb84 <_fini+0xe680>
  4491b1:	mov    %rdi,0x8(%rsp)
  4491b6:	mov    %r9,(%rsp)
  4491ba:	mov    %rax,%rdx
  4491bd:	mov    %r12,%r9
  4491c0:	xor    %eax,%eax
  4491c2:	mov    %rbp,%rdi
  4491c5:	callq  413c40 <BIO_printf@plt>
  4491ca:	test   %r12,%r12
  4491cd:	jne    4492dd <X509_get0_pubkey_bitstr@plt+0x3290d>
  4491d3:	add    $0x18,%rsp
  4491d7:	mov    %rbp,%rdi
  4491da:	xor    %ecx,%ecx
  4491dc:	pop    %rbx
  4491dd:	pop    %rbp
  4491de:	pop    %r12
  4491e0:	pop    %r13
  4491e2:	xor    %edx,%edx
  4491e4:	mov    $0xb,%esi
  4491e9:	jmpq   412af0 <BIO_ctrl@plt>
  4491ee:	xchg   %ax,%ax
  4491f0:	cmp    $0x100,%esi
  4491f6:	je     449400 <X509_get0_pubkey_bitstr@plt+0x32a30>
  4491fc:	cmp    $0x300,%esi
  449202:	je     449238 <X509_get0_pubkey_bitstr@plt+0x32868>
  449204:	cmp    $0x2,%esi
  449207:	je     449430 <X509_get0_pubkey_bitstr@plt+0x32a60>
  44920d:	lea    0x16bae(%rip),%rdi        # 45fdc2 <_fini+0x28be>
  449214:	lea    0x225fc(%rip),%rcx        # 46b817 <_fini+0xe313>
  44921b:	mov    %rdi,%r9
  44921e:	jmpq   44917a <X509_get0_pubkey_bitstr@plt+0x327aa>
  449223:	nopl   0x0(%rax,%rax,1)
  449228:	lea    0x22621(%rip),%rcx        # 46b850 <_fini+0xe34c>
  44922f:	jmpq   449170 <X509_get0_pubkey_bitstr@plt+0x327a0>
  449234:	nopl   0x0(%rax)
  449238:	lea    0x2261a(%rip),%rcx        # 46b859 <_fini+0xe355>
  44923f:	jmpq   449170 <X509_get0_pubkey_bitstr@plt+0x327a0>
  449244:	nopl   0x0(%rax)
  449248:	cmp    $0x15,%edx
  44924b:	je     449390 <X509_get0_pubkey_bitstr@plt+0x329c0>
  449251:	cmp    $0x16,%edx
  449254:	je     449350 <X509_get0_pubkey_bitstr@plt+0x32980>
  44925a:	cmp    $0x14,%edx
  44925d:	je     4493f0 <X509_get0_pubkey_bitstr@plt+0x32a20>
  449263:	cmp    $0x15,%edx
  449266:	lea    0x16b55(%rip),%r8        # 45fdc2 <_fini+0x28be>
  44926d:	je     449397 <X509_get0_pubkey_bitstr@plt+0x329c7>
  449273:	cmp    $0x16,%edx
  449276:	je     449357 <X509_get0_pubkey_bitstr@plt+0x32987>
  44927c:	cmp    $0x18,%edx
  44927f:	jne    4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  449285:	test   %r12,%r12
  449288:	je     449470 <X509_get0_pubkey_bitstr@plt+0x32aa0>
  44928e:	movzbl 0x0(%r13),%esi
  449293:	lea    0x228cb(%rip),%rdx        # 46bb65 <_fini+0xe661>
  44929a:	cmp    $0x1,%sil
  44929e:	je     4492b6 <X509_get0_pubkey_bitstr@plt+0x328e6>
  4492a0:	cmp    $0x2,%sil
  4492a4:	lea    0x228cd(%rip),%rdx        # 46bb78 <_fini+0xe674>
  4492ab:	lea    0x2289f(%rip),%rsi        # 46bb51 <_fini+0xe64d>
  4492b2:	cmove  %rsi,%rdx
  4492b6:	lea    0x16b05(%rip),%r8        # 45fdc2 <_fini+0x28be>
  4492bd:	lea    0x228c0(%rip),%rsi        # 46bb84 <_fini+0xe680>
  4492c4:	mov    %rdi,0x8(%rsp)
  4492c9:	mov    %rdx,(%rsp)
  4492cd:	mov    %r12,%r9
  4492d0:	mov    %rax,%rdx
  4492d3:	mov    %rbp,%rdi
  4492d6:	xor    %eax,%eax
  4492d8:	callq  413c40 <BIO_printf@plt>
  4492dd:	lea    0x228bd(%rip),%rsi        # 46bba1 <_fini+0xe69d>
  4492e4:	mov    %rbp,%rdi
  4492e7:	xor    %eax,%eax
  4492e9:	xor    %ebx,%ebx
  4492eb:	callq  413c40 <BIO_printf@plt>
  4492f0:	movzbl 0x0(%r13,%rbx,1),%edx
  4492f6:	lea    0x228a8(%rip),%rsi        # 46bba5 <_fini+0xe6a1>
  4492fd:	xor    %eax,%eax
  4492ff:	mov    %rbp,%rdi
  449302:	add    $0x1,%rbx
  449306:	callq  413c40 <BIO_printf@plt>
  44930b:	cmp    %rbx,%r12
  44930e:	jbe    449330 <X509_get0_pubkey_bitstr@plt+0x32960>
  449310:	test   $0xf,%bl
  449313:	jne    4492f0 <X509_get0_pubkey_bitstr@plt+0x32920>
  449315:	test   %rbx,%rbx
  449318:	je     4492f0 <X509_get0_pubkey_bitstr@plt+0x32920>
  44931a:	lea    0x2287f(%rip),%rsi        # 46bba0 <_fini+0xe69c>
  449321:	mov    %rbp,%rdi
  449324:	xor    %eax,%eax
  449326:	callq  413c40 <BIO_printf@plt>
  44932b:	jmp    4492f0 <X509_get0_pubkey_bitstr@plt+0x32920>
  44932d:	nopl   (%rax)
  449330:	lea    0x1b868(%rip),%rsi        # 464b9f <_fini+0x769b>
  449337:	mov    %rbp,%rdi
  44933a:	xor    %eax,%eax
  44933c:	callq  413c40 <BIO_printf@plt>
  449341:	jmpq   4491d3 <X509_get0_pubkey_bitstr@plt+0x32803>
  449346:	nopw   %cs:0x0(%rax,%rax,1)
  449350:	lea    0x2250b(%rip),%r8        # 46b862 <_fini+0xe35e>
  449357:	test   %r12,%r12
  44935a:	lea    0x224b6(%rip),%r9        # 46b817 <_fini+0xe313>
  449361:	je     4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  449367:	cmpb   $0x14,0x0(%r13)
  44936c:	ja     449636 <X509_get0_pubkey_bitstr@plt+0x32c66>
  449372:	movzbl 0x0(%r13),%esi
  449377:	lea    0x229fa(%rip),%rdx        # 46bd78 <_fini+0xe874>
  44937e:	movslq (%rdx,%rsi,4),%rsi
  449382:	add    %rsi,%rdx
  449385:	jmpq   *%rdx
  449387:	nopw   0x0(%rax,%rax,1)
  449390:	lea    0x22478(%rip),%r8        # 46b80f <_fini+0xe30b>
  449397:	cmp    $0x2,%r12
  44939b:	lea    0x22473(%rip),%r9        # 46b815 <_fini+0xe311>
  4493a2:	jne    4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  4493a8:	movzbl 0x0(%r13),%edx
  4493ad:	lea    0x22467(%rip),%r9        # 46b81b <_fini+0xe317>
  4493b4:	cmp    $0x1,%dl
  4493b7:	je     4493ce <X509_get0_pubkey_bitstr@plt+0x329fe>
  4493b9:	cmp    $0x2,%dl
  4493bc:	lea    0x22452(%rip),%r9        # 46b815 <_fini+0xe311>
  4493c3:	lea    0x2245b(%rip),%rdx        # 46b825 <_fini+0xe321>
  4493ca:	cmove  %rdx,%r9
  4493ce:	cmpb   $0x73,0x1(%r13)
  4493d3:	ja     44979e <X509_get0_pubkey_bitstr@plt+0x32dce>
  4493d9:	movzbl 0x1(%r13),%esi
  4493de:	lea    0x229e7(%rip),%rdx        # 46bdcc <_fini+0xe8c8>
  4493e5:	movslq (%rdx,%rsi,4),%rsi
  4493e9:	add    %rsi,%rdx
  4493ec:	jmpq   *%rdx
  4493ee:	xchg   %ax,%ax
  4493f0:	lea    0x22475(%rip),%r8        # 46b86c <_fini+0xe368>
  4493f7:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  4493fc:	nopl   0x0(%rax)
  449400:	lea    0x22426(%rip),%rcx        # 46b82d <_fini+0xe329>
  449407:	jmpq   449170 <X509_get0_pubkey_bitstr@plt+0x327a0>
  44940c:	nopl   0x0(%rax)
  449410:	lea    0x22427(%rip),%rcx        # 46b83e <_fini+0xe33a>
  449417:	jmpq   449170 <X509_get0_pubkey_bitstr@plt+0x327a0>
  44941c:	nopl   0x0(%rax)
  449420:	lea    0x22420(%rip),%rcx        # 46b847 <_fini+0xe343>
  449427:	jmpq   449170 <X509_get0_pubkey_bitstr@plt+0x327a0>
  44942c:	nopl   0x0(%rax)
  449430:	lea    0x222f8(%rip),%rcx        # 46b72f <_fini+0xe22b>
  449437:	test   %r12,%r12
  44943a:	lea    0x16981(%rip),%rdi        # 45fdc2 <_fini+0x28be>
  449441:	lea    0x223cf(%rip),%r9        # 46b817 <_fini+0xe313>
  449448:	je     44917a <X509_get0_pubkey_bitstr@plt+0x327aa>
  44944e:	cmpb   $0x8,0x0(%r13)
  449453:	ja     44917a <X509_get0_pubkey_bitstr@plt+0x327aa>
  449459:	movzbl 0x0(%r13),%r8d
  44945e:	lea    0x22b37(%rip),%rdi        # 46bf9c <_fini+0xea98>
  449465:	movslq (%rdi,%r8,4),%r8
  449469:	add    %r8,%rdi
  44946c:	jmpq   *%rdi
  44946e:	xchg   %ax,%ax
  449470:	mov    %rdi,0x8(%rsp)
  449475:	lea    0x226fc(%rip),%rdi        # 46bb78 <_fini+0xe674>
  44947c:	lea    0x22701(%rip),%rsi        # 46bb84 <_fini+0xe680>
  449483:	mov    %rax,%rdx
  449486:	xor    %r9d,%r9d
  449489:	xor    %eax,%eax
  44948b:	mov    %rdi,(%rsp)
  44948f:	mov    %rbp,%rdi
  449492:	callq  413c40 <BIO_printf@plt>
  449497:	jmpq   4491d3 <X509_get0_pubkey_bitstr@plt+0x32803>
  44949c:	lea    0x1691f(%rip),%rdi        # 45fdc2 <_fini+0x28be>
  4494a3:	lea    0x22296(%rip),%r9        # 46b740 <_fini+0xe23c>
  4494aa:	jmpq   44917a <X509_get0_pubkey_bitstr@plt+0x327aa>
  4494af:	lea    0x1690c(%rip),%rdi        # 45fdc2 <_fini+0x28be>
  4494b6:	lea    0x22292(%rip),%r9        # 46b74f <_fini+0xe24b>
  4494bd:	jmpq   44917a <X509_get0_pubkey_bitstr@plt+0x327aa>
  4494c2:	cmp    $0x2,%r12
  4494c6:	lea    0x22349(%rip),%rdi        # 46b816 <_fini+0xe312>
  4494cd:	lea    0x22263(%rip),%r9        # 46b737 <_fini+0xe233>
  4494d4:	jbe    44917a <X509_get0_pubkey_bitstr@plt+0x327aa>
  4494da:	movzbl 0x1(%r13),%edi
  4494df:	movzbl 0x2(%r13),%r8d
  4494e4:	shl    $0x8,%edi
  4494e7:	add    %edi,%r8d
  4494ea:	lea    0x222f7(%rip),%rdi        # 46b7e8 <_fini+0xe2e4>
  4494f1:	cmp    $0x2,%r8d
  4494f5:	je     44917a <X509_get0_pubkey_bitstr@plt+0x327aa>
  4494fb:	jbe    4497c5 <X509_get0_pubkey_bitstr@plt+0x32df5>
  449501:	cmp    $0x4,%r8d
  449505:	lea    0x222c5(%rip),%rdi        # 46b7d1 <_fini+0xe2cd>
  44950c:	je     44917a <X509_get0_pubkey_bitstr@plt+0x327aa>
  449512:	cmp    $0x6,%r8d
  449516:	lea    0x22b8b(%rip),%rdi        # 46c0a8 <_fini+0xeba4>
  44951d:	je     44917a <X509_get0_pubkey_bitstr@plt+0x327aa>
  449523:	lea    0x222ec(%rip),%rdi        # 46b816 <_fini+0xe312>
  44952a:	lea    0x22206(%rip),%r9        # 46b737 <_fini+0xe233>
  449531:	jmpq   44917a <X509_get0_pubkey_bitstr@plt+0x327aa>
  449536:	nopw   %cs:0x0(%rax,%rax,1)
  449540:	lea    0x1687b(%rip),%rdi        # 45fdc2 <_fini+0x28be>
  449547:	lea    0x2226e(%rip),%r9        # 46b7bc <_fini+0xe2b8>
  44954e:	jmpq   44917a <X509_get0_pubkey_bitstr@plt+0x327aa>
  449553:	lea    0x16868(%rip),%rdi        # 45fdc2 <_fini+0x28be>
  44955a:	lea    0x22233(%rip),%r9        # 46b794 <_fini+0xe290>
  449561:	jmpq   44917a <X509_get0_pubkey_bitstr@plt+0x327aa>
  449566:	lea    0x16855(%rip),%rdi        # 45fdc2 <_fini+0x28be>
  44956d:	lea    0x22210(%rip),%r9        # 46b784 <_fini+0xe280>
  449574:	jmpq   44917a <X509_get0_pubkey_bitstr@plt+0x327aa>
  449579:	lea    0x16842(%rip),%rdi        # 45fdc2 <_fini+0x28be>
  449580:	lea    0x221ee(%rip),%r9        # 46b775 <_fini+0xe271>
  449587:	jmpq   44917a <X509_get0_pubkey_bitstr@plt+0x327aa>
  44958c:	lea    0x1682f(%rip),%rdi        # 45fdc2 <_fini+0x28be>
  449593:	lea    0x221c9(%rip),%r9        # 46b763 <_fini+0xe25f>
  44959a:	jmpq   44917a <X509_get0_pubkey_bitstr@plt+0x327aa>
  44959f:	lea    0x1681c(%rip),%rdi        # 45fdc2 <_fini+0x28be>
  4495a6:	lea    0x221f9(%rip),%r9        # 46b7a6 <_fini+0xe2a2>
  4495ad:	jmpq   44917a <X509_get0_pubkey_bitstr@plt+0x327aa>
  4495b2:	lea    0x22589(%rip),%r9        # 46bb42 <_fini+0xe63e>
  4495b9:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  4495be:	lea    0x224ef(%rip),%r9        # 46bab4 <_fini+0xe5b0>
  4495c5:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  4495ca:	lea    0x224f7(%rip),%r9        # 46bac8 <_fini+0xe5c4>
  4495d1:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  4495d6:	lea    0x224fd(%rip),%r9        # 46bada <_fini+0xe5d6>
  4495dd:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  4495e2:	lea    0x22506(%rip),%r9        # 46baef <_fini+0xe5eb>
  4495e9:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  4495ee:	lea    0x2250e(%rip),%r9        # 46bb03 <_fini+0xe5ff>
  4495f5:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  4495fa:	lea    0x22510(%rip),%r9        # 46bb11 <_fini+0xe60d>
  449601:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  449606:	lea    0x22519(%rip),%r9        # 46bb26 <_fini+0xe622>
  44960d:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  449612:	lea    0x2251b(%rip),%r9        # 46bb34 <_fini+0xe630>
  449619:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  44961e:	lea    0x22470(%rip),%r9        # 46ba95 <_fini+0xe591>
  449625:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  44962a:	lea    0x2246f(%rip),%r9        # 46baa0 <_fini+0xe59c>
  449631:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  449636:	lea    0x221da(%rip),%r9        # 46b817 <_fini+0xe313>
  44963d:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  449642:	lea    0x22234(%rip),%rdi        # 46b87d <_fini+0xe379>
  449649:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  44964e:	lea    0x2223e(%rip),%rdi        # 46b893 <_fini+0xe38f>
  449655:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  44965a:	lea    0x22a6f(%rip),%rdi        # 46c0d0 <_fini+0xebcc>
  449661:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  449666:	lea    0x22242(%rip),%rdi        # 46b8af <_fini+0xe3ab>
  44966d:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  449672:	lea    0x22249(%rip),%rdi        # 46b8c2 <_fini+0xe3be>
  449679:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  44967e:	lea    0x22257(%rip),%rdi        # 46b8dc <_fini+0xe3d8>
  449685:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  44968a:	lea    0x22262(%rip),%rdi        # 46b8f3 <_fini+0xe3ef>
  449691:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  449696:	lea    0x22268(%rip),%rdi        # 46b905 <_fini+0xe401>
  44969d:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  4496a2:	lea    0x2226b(%rip),%rdi        # 46b914 <_fini+0xe410>
  4496a9:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  4496ae:	lea    0x2226f(%rip),%rdi        # 46b924 <_fini+0xe420>
  4496b5:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  4496ba:	lea    0x2227a(%rip),%rdi        # 46b93b <_fini+0xe437>
  4496c1:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  4496c6:	lea    0x22280(%rip),%rdi        # 46b94d <_fini+0xe449>
  4496cd:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  4496d2:	lea    0x22288(%rip),%rdi        # 46b961 <_fini+0xe45d>
  4496d9:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  4496de:	lea    0x2228b(%rip),%rdi        # 46b970 <_fini+0xe46c>
  4496e5:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  4496ea:	lea    0x2228d(%rip),%rdi        # 46b97e <_fini+0xe47a>
  4496f1:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  4496f6:	lea    0x22290(%rip),%rdi        # 46b98d <_fini+0xe489>
  4496fd:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  449702:	lea    0x22290(%rip),%rdi        # 46b999 <_fini+0xe495>
  449709:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  44970e:	lea    0x22297(%rip),%rdi        # 46b9ac <_fini+0xe4a8>
  449715:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  44971a:	lea    0x222a0(%rip),%rdi        # 46b9c1 <_fini+0xe4bd>
  449721:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  449726:	lea    0x222a9(%rip),%rdi        # 46b9d6 <_fini+0xe4d2>
  44972d:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  449732:	lea    0x222b2(%rip),%rdi        # 46b9eb <_fini+0xe4e7>
  449739:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  44973e:	lea    0x222bf(%rip),%rdi        # 46ba04 <_fini+0xe500>
  449745:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  44974a:	lea    0x222c4(%rip),%rdi        # 46ba15 <_fini+0xe511>
  449751:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  449756:	lea    0x222cb(%rip),%rdi        # 46ba28 <_fini+0xe524>
  44975d:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  449762:	lea    0x222d6(%rip),%rdi        # 46ba3f <_fini+0xe53b>
  449769:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  44976e:	lea    0x222db(%rip),%rdi        # 46ba50 <_fini+0xe54c>
  449775:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  44977a:	lea    0x222e2(%rip),%rdi        # 46ba63 <_fini+0xe55f>
  449781:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  449786:	lea    0x222e6(%rip),%rdi        # 46ba73 <_fini+0xe56f>
  44978d:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  449792:	lea    0x222ee(%rip),%rdi        # 46ba87 <_fini+0xe583>
  449799:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  44979e:	lea    0x22071(%rip),%rdi        # 46b816 <_fini+0xe312>
  4497a5:	jmpq   4491aa <X509_get0_pubkey_bitstr@plt+0x327da>
  4497aa:	nopw   0x0(%rax,%rax,1)
  4497b0:	cmp    $0x2,%esi
  4497b3:	jne    44920d <X509_get0_pubkey_bitstr@plt+0x3283d>
  4497b9:	lea    0x22057(%rip),%rcx        # 46b817 <_fini+0xe313>
  4497c0:	jmpq   449437 <X509_get0_pubkey_bitstr@plt+0x32a67>
  4497c5:	cmp    $0x1,%r8d
  4497c9:	lea    0x2202e(%rip),%rdi        # 46b7fe <_fini+0xe2fa>
  4497d0:	je     44917a <X509_get0_pubkey_bitstr@plt+0x327aa>
  4497d6:	jmpq   449523 <X509_get0_pubkey_bitstr@plt+0x32b53>
  4497db:	nopl   0x0(%rax,%rax,1)
  4497e0:	push   %r12
  4497e2:	cmp    $0x9,%edx
  4497e5:	mov    %edx,%eax
  4497e7:	mov    %rcx,%r12
  4497ea:	push   %rbp
  4497eb:	mov    %r8d,%ebp
  4497ee:	push   %rbx
  4497ef:	mov    %r9,%rbx
  4497f2:	je     4499b0 <X509_get0_pubkey_bitstr@plt+0x32fe0>
  4497f8:	jle    449890 <X509_get0_pubkey_bitstr@plt+0x32ec0>
  4497fe:	cmp    $0xe,%edx
  449801:	je     449990 <X509_get0_pubkey_bitstr@plt+0x32fc0>
  449807:	jg     449920 <X509_get0_pubkey_bitstr@plt+0x32f50>
  44980d:	cmp    $0xb,%edx
  449810:	lea    0x2243a(%rip),%rdi        # 46bc51 <_fini+0xe74d>
  449817:	je     449840 <X509_get0_pubkey_bitstr@plt+0x32e70>
  449819:	lea    0x22421(%rip),%rdi        # 46bc41 <_fini+0xe73d>
  449820:	jl     449840 <X509_get0_pubkey_bitstr@plt+0x32e70>
  449822:	cmp    $0xc,%edx
  449825:	lea    0x22436(%rip),%rdi        # 46bc62 <_fini+0xe75e>
  44982c:	je     449840 <X509_get0_pubkey_bitstr@plt+0x32e70>
  44982e:	cmp    $0xd,%edx
  449831:	lea    0x2242e(%rip),%rdi        # 46bc66 <_fini+0xe762>
  449838:	jne    4498d0 <X509_get0_pubkey_bitstr@plt+0x32f00>
  44983e:	xchg   %ax,%ax
  449840:	lea    0x13f0f(%rip),%rcx        # 45d756 <_fini+0x252>
  449847:	lea    0x13eff(%rip),%rdx        # 45d74d <_fini+0x249>
  44984e:	test   %esi,%esi
  449850:	lea    0x228a1(%rip),%rsi        # 46c0f8 <_fini+0xebf4>
  449857:	mov    %ebp,%r9d
  44985a:	mov    %eax,%r8d
  44985d:	cmove  %rcx,%rdx
  449861:	mov    %rdi,%rcx
  449864:	xor    %eax,%eax
  449866:	mov    %rbx,%rdi
  449869:	callq  413c40 <BIO_printf@plt>
  44986e:	mov    %ebp,%edx
  449870:	mov    %r12,%rsi
  449873:	mov    %rbx,%rdi
  449876:	callq  413c30 <BIO_dump@plt>
  44987b:	mov    %rbx,%rdi
  44987e:	xor    %ecx,%ecx
  449880:	xor    %edx,%edx
  449882:	pop    %rbx
  449883:	pop    %rbp
  449884:	pop    %r12
  449886:	mov    $0xb,%esi
  44988b:	jmpq   412af0 <BIO_ctrl@plt>
  449890:	cmp    $0x4,%edx
  449893:	je     4499a0 <X509_get0_pubkey_bitstr@plt+0x32fd0>
  449899:	jg     4498e0 <X509_get0_pubkey_bitstr@plt+0x32f10>
  44989b:	cmp    $0x1,%edx
  44989e:	lea    0x22312(%rip),%rdi        # 46bbb7 <_fini+0xe6b3>
  4498a5:	je     449840 <X509_get0_pubkey_bitstr@plt+0x32e70>
  4498a7:	jle    449978 <X509_get0_pubkey_bitstr@plt+0x32fa8>
  4498ad:	cmp    $0x2,%edx
  4498b0:	lea    0x22314(%rip),%rdi        # 46bbcb <_fini+0xe6c7>
  4498b7:	je     449840 <X509_get0_pubkey_bitstr@plt+0x32e70>
  4498b9:	cmp    $0x3,%edx
  4498bc:	lea    0x2231f(%rip),%rdi        # 46bbe2 <_fini+0xe6de>
  4498c3:	je     449840 <X509_get0_pubkey_bitstr@plt+0x32e70>
  4498c9:	nopl   0x0(%rax)
  4498d0:	lea    0x220e2(%rip),%rdi        # 46b9b9 <_fini+0xe4b5>
  4498d7:	jmpq   449840 <X509_get0_pubkey_bitstr@plt+0x32e70>
  4498dc:	nopl   0x0(%rax)
  4498e0:	cmp    $0x6,%edx
  4498e3:	lea    0x22326(%rip),%rdi        # 46bc10 <_fini+0xe70c>
  4498ea:	je     449840 <X509_get0_pubkey_bitstr@plt+0x32e70>
  4498f0:	lea    0x2230a(%rip),%rdi        # 46bc01 <_fini+0xe6fd>
  4498f7:	jl     449840 <X509_get0_pubkey_bitstr@plt+0x32e70>
  4498fd:	cmp    $0x7,%edx
  449900:	lea    0x22316(%rip),%rdi        # 46bc1d <_fini+0xe719>
  449907:	je     449840 <X509_get0_pubkey_bitstr@plt+0x32e70>
  44990d:	cmp    $0x8,%edx
  449910:	lea    0x22313(%rip),%rdi        # 46bc2a <_fini+0xe726>
  449917:	je     449840 <X509_get0_pubkey_bitstr@plt+0x32e70>
  44991d:	jmp    4498d0 <X509_get0_pubkey_bitstr@plt+0x32f00>
  44991f:	nop
  449920:	cmp    $0x23,%edx
  449923:	lea    0x22364(%rip),%rdi        # 46bc8e <_fini+0xe78a>
  44992a:	je     449840 <X509_get0_pubkey_bitstr@plt+0x32e70>
  449930:	jle    449960 <X509_get0_pubkey_bitstr@plt+0x32f90>
  449932:	cmp    $0x3374,%edx
  449938:	lea    0x22371(%rip),%rdi        # 46bcb0 <_fini+0xe7ac>
  44993f:	je     449840 <X509_get0_pubkey_bitstr@plt+0x32e70>
  449945:	cmp    $0xff01,%edx
  44994b:	lea    0x2234b(%rip),%rdi        # 46bc9d <_fini+0xe799>
  449952:	je     449840 <X509_get0_pubkey_bitstr@plt+0x32e70>
  449958:	jmpq   4498d0 <X509_get0_pubkey_bitstr@plt+0x32f00>
  44995d:	nopl   (%rax)
  449960:	cmp    $0xf,%edx
  449963:	lea    0x2231a(%rip),%rdi        # 46bc84 <_fini+0xe780>
  44996a:	je     449840 <X509_get0_pubkey_bitstr@plt+0x32e70>
  449970:	jmpq   4498d0 <X509_get0_pubkey_bitstr@plt+0x32f00>
  449975:	nopl   (%rax)
  449978:	test   %edx,%edx
  44997a:	lea    0x2222a(%rip),%rdi        # 46bbab <_fini+0xe6a7>
  449981:	je     449840 <X509_get0_pubkey_bitstr@plt+0x32e70>
  449987:	jmpq   4498d0 <X509_get0_pubkey_bitstr@plt+0x32f00>
  44998c:	nopl   0x0(%rax)
  449990:	lea    0x222e4(%rip),%rdi        # 46bc7b <_fini+0xe777>
  449997:	jmpq   449840 <X509_get0_pubkey_bitstr@plt+0x32e70>
  44999c:	nopl   0x0(%rax)
  4499a0:	lea    0x2224b(%rip),%rdi        # 46bbf2 <_fini+0xe6ee>
  4499a7:	jmpq   449840 <X509_get0_pubkey_bitstr@plt+0x32e70>
  4499ac:	nopl   0x0(%rax)
  4499b0:	lea    0x22280(%rip),%rdi        # 46bc37 <_fini+0xe733>
  4499b7:	jmpq   449840 <X509_get0_pubkey_bitstr@plt+0x32e70>
  4499bc:	nopl   0x0(%rax)
  4499c0:	push   %r14
  4499c2:	mov    %rdi,%r14
  4499c5:	push   %r13
  4499c7:	push   %r12
  4499c9:	mov    %rsi,%r12
  4499cc:	push   %rbp
  4499cd:	mov    %rdx,%rbp
  4499d0:	push   %rbx
  4499d1:	sub    $0x90,%rsp
  4499d8:	lea    0x232219(%rip),%r13        # 67bbf8 <_edata+0xef0>
  4499df:	mov    %fs:0x28,%rax
  4499e8:	mov    %rax,0x88(%rsp)
  4499f0:	xor    %eax,%eax
  4499f2:	mov    0x0(%r13),%eax
  4499f6:	test   %eax,%eax
  4499f8:	jne    449a1d <X509_get0_pubkey_bitstr@plt+0x3304d>
  4499fa:	lea    0x2322bf(%rip),%rdi        # 67bcc0 <_edata+0xfb8>
  449a01:	mov    $0x10,%esi
  449a06:	callq  415360 <RAND_bytes@plt>
  449a0b:	test   %eax,%eax
  449a0d:	mov    %eax,%ebx
  449a0f:	je     449b98 <X509_get0_pubkey_bitstr@plt+0x331c8>
  449a15:	movl   $0x1,0x0(%r13)
  449a1d:	mov    %r14,%rdi
  449a20:	callq  415990 <SSL_get_rbio@plt>
  449a25:	lea    0x20(%rsp),%rcx
  449a2a:	xor    %edx,%edx
  449a2c:	mov    $0x2e,%esi
  449a31:	mov    %rax,%rdi
  449a34:	callq  412af0 <BIO_ctrl@plt>
  449a39:	movzwl 0x20(%rsp),%eax
  449a3e:	cmp    $0x2,%ax
  449a42:	je     449b50 <X509_get0_pubkey_bitstr@plt+0x33180>
  449a48:	cmp    $0xa,%ax
  449a4c:	je     449b40 <X509_get0_pubkey_bitstr@plt+0x33170>
  449a52:	lea    0x22265(%rip),%rdi        # 46bcbe <_fini+0xe7ba>
  449a59:	lea    0x1e750(%rip),%rdx        # 4681b0 <_fini+0xacac>
  449a60:	mov    $0x344,%esi
  449a65:	xor    %r13d,%r13d
  449a68:	callq  4145b0 <OpenSSLDie@plt>
  449a6d:	xor    %edi,%edi
  449a6f:	lea    0x22248(%rip),%rsi        # 46bcbe <_fini+0xe7ba>
  449a76:	mov    $0x347,%edx
  449a7b:	callq  413d50 <CRYPTO_malloc@plt>
  449a80:	test   %rax,%rax
  449a83:	mov    %rax,%rbx
  449a86:	je     449bb8 <X509_get0_pubkey_bitstr@plt+0x331e8>
  449a8c:	movzwl 0x20(%rsp),%eax
  449a91:	cmp    $0x2,%ax
  449a95:	je     449b80 <X509_get0_pubkey_bitstr@plt+0x331b0>
  449a9b:	cmp    $0xa,%ax
  449a9f:	jne    449b60 <X509_get0_pubkey_bitstr@plt+0x33190>
  449aa5:	movzwl 0x22(%rsp),%eax
  449aaa:	mov    %ax,(%rbx)
  449aad:	mov    0x28(%rsp),%r9
  449ab2:	mov    0x30(%rsp),%r10
  449ab7:	mov    %r9,0x2(%rbx)
  449abb:	mov    %r10,0xa(%rbx)
  449abf:	callq  413790 <EVP_sha1@plt>
  449ac4:	lea    0x40(%rsp),%r14
  449ac9:	lea    0x2321f0(%rip),%rsi        # 67bcc0 <_edata+0xfb8>
  449ad0:	lea    0x1c(%rsp),%rdx
  449ad5:	mov    %r13d,%r8d
  449ad8:	mov    %rbx,%rcx
  449adb:	mov    %rax,%rdi
  449ade:	mov    %r14,%r9
  449ae1:	and    $0x16,%r8d
  449ae5:	mov    %rdx,(%rsp)
  449ae9:	mov    $0x10,%edx
  449aee:	callq  4153d0 <HMAC@plt>
  449af3:	mov    %rbx,%rdi
  449af6:	callq  415020 <CRYPTO_free@plt>
  449afb:	mov    0x1c(%rsp),%ebx
  449aff:	mov    %r14,%rsi
  449b02:	mov    %r12,%rdi
  449b05:	mov    %ebx,%edx
  449b07:	callq  414250 <memcpy@plt>
  449b0c:	mov    %ebx,0x0(%rbp)
  449b0f:	mov    $0x1,%ebx
  449b14:	mov    0x88(%rsp),%rcx
  449b1c:	xor    %fs:0x28,%rcx
  449b25:	mov    %ebx,%eax
  449b27:	jne    449bd5 <X509_get0_pubkey_bitstr@plt+0x33205>
  449b2d:	add    $0x90,%rsp
  449b34:	pop    %rbx
  449b35:	pop    %rbp
  449b36:	pop    %r12
  449b38:	pop    %r13
  449b3a:	pop    %r14
  449b3c:	retq   
  449b3d:	nopl   (%rax)
  449b40:	mov    $0x12,%edi
  449b45:	mov    $0x12,%r13d
  449b4b:	jmpq   449a6f <X509_get0_pubkey_bitstr@plt+0x3309f>
  449b50:	mov    $0x6,%edi
  449b55:	mov    $0x6,%r13d
  449b5b:	jmpq   449a6f <X509_get0_pubkey_bitstr@plt+0x3309f>
  449b60:	lea    0x1e649(%rip),%rdx        # 4681b0 <_fini+0xacac>
  449b67:	lea    0x22150(%rip),%rdi        # 46bcbe <_fini+0xe7ba>
  449b6e:	mov    $0x364,%esi
  449b73:	callq  4145b0 <OpenSSLDie@plt>
  449b78:	jmpq   449abf <X509_get0_pubkey_bitstr@plt+0x330ef>
  449b7d:	nopl   (%rax)
  449b80:	movzwl 0x22(%rsp),%eax
  449b85:	mov    %ax,(%rbx)
  449b88:	mov    0x24(%rsp),%eax
  449b8c:	mov    %eax,0x2(%rbx)
  449b8f:	jmpq   449abf <X509_get0_pubkey_bitstr@plt+0x330ef>
  449b94:	nopl   0x0(%rax)
  449b98:	lea    0x2311a1(%rip),%rax        # 67ad40 <_edata+0x38>
  449b9f:	lea    0x2257a(%rip),%rsi        # 46c120 <_fini+0xec1c>
  449ba6:	mov    (%rax),%rdi
  449ba9:	xor    %eax,%eax
  449bab:	callq  413c40 <BIO_printf@plt>
  449bb0:	jmpq   449b14 <X509_get0_pubkey_bitstr@plt+0x33144>
  449bb5:	nopl   (%rax)
  449bb8:	lea    0x231181(%rip),%rax        # 67ad40 <_edata+0x38>
  449bbf:	lea    0x15ced(%rip),%rsi        # 45f8b3 <_fini+0x23af>
  449bc6:	mov    (%rax),%rdi
  449bc9:	xor    %eax,%eax
  449bcb:	callq  413c40 <BIO_printf@plt>
  449bd0:	jmpq   449b14 <X509_get0_pubkey_bitstr@plt+0x33144>
  449bd5:	callq  414c30 <__stack_chk_fail@plt>
  449bda:	nopw   0x0(%rax,%rax,1)
  449be0:	push   %r14
  449be2:	push   %r13
  449be4:	push   %r12
  449be6:	push   %rbp
  449be7:	mov    %edx,%ebp
  449be9:	push   %rbx
  449bea:	sub    $0x90,%rsp
  449bf1:	lea    0x232000(%rip),%rdx        # 67bbf8 <_edata+0xef0>
  449bf8:	mov    %fs:0x28,%rax
  449c01:	mov    %rax,0x88(%rsp)
  449c09:	xor    %eax,%eax
  449c0b:	mov    (%rdx),%edx
  449c0d:	test   %edx,%edx
  449c0f:	jne    449c40 <X509_get0_pubkey_bitstr@plt+0x33270>
  449c11:	mov    0x88(%rsp),%rcx
  449c19:	xor    %fs:0x28,%rcx
  449c22:	jne    449dc3 <X509_get0_pubkey_bitstr@plt+0x333f3>
  449c28:	add    $0x90,%rsp
  449c2f:	pop    %rbx
  449c30:	pop    %rbp
  449c31:	pop    %r12
  449c33:	pop    %r13
  449c35:	pop    %r14
  449c37:	retq   
  449c38:	nopl   0x0(%rax,%rax,1)
  449c40:	mov    %rsi,%r12
  449c43:	callq  415990 <SSL_get_rbio@plt>
  449c48:	lea    0x20(%rsp),%rcx
  449c4d:	xor    %edx,%edx
  449c4f:	mov    $0x2e,%esi
  449c54:	mov    %rax,%rdi
  449c57:	callq  412af0 <BIO_ctrl@plt>
  449c5c:	movzwl 0x20(%rsp),%eax
  449c61:	cmp    $0x2,%ax
  449c65:	je     449d60 <X509_get0_pubkey_bitstr@plt+0x33390>
  449c6b:	cmp    $0xa,%ax
  449c6f:	je     449d48 <X509_get0_pubkey_bitstr@plt+0x33378>
  449c75:	lea    0x22042(%rip),%rdi        # 46bcbe <_fini+0xe7ba>
  449c7c:	lea    0x1e52d(%rip),%rdx        # 4681b0 <_fini+0xacac>
  449c83:	mov    $0x395,%esi
  449c88:	xor    %r13d,%r13d
  449c8b:	callq  4145b0 <OpenSSLDie@plt>
  449c90:	xor    %edi,%edi
  449c92:	lea    0x22025(%rip),%rsi        # 46bcbe <_fini+0xe7ba>
  449c99:	mov    $0x398,%edx
  449c9e:	callq  413d50 <CRYPTO_malloc@plt>
  449ca3:	test   %rax,%rax
  449ca6:	mov    %rax,%rbx
  449ca9:	je     449da4 <X509_get0_pubkey_bitstr@plt+0x333d4>
  449caf:	movzwl 0x20(%rsp),%eax
  449cb4:	cmp    $0x2,%ax
  449cb8:	je     449d90 <X509_get0_pubkey_bitstr@plt+0x333c0>
  449cbe:	cmp    $0xa,%ax
  449cc2:	jne    449d70 <X509_get0_pubkey_bitstr@plt+0x333a0>
  449cc8:	movzwl 0x22(%rsp),%eax
  449ccd:	mov    %ax,(%rbx)
  449cd0:	mov    0x28(%rsp),%r9
  449cd5:	mov    0x30(%rsp),%r10
  449cda:	mov    %r9,0x2(%rbx)
  449cde:	mov    %r10,0xa(%rbx)
  449ce2:	callq  413790 <EVP_sha1@plt>
  449ce7:	lea    0x40(%rsp),%r14
  449cec:	lea    0x1c(%rsp),%rdx
  449cf1:	lea    0x231fc8(%rip),%rsi        # 67bcc0 <_edata+0xfb8>
  449cf8:	mov    %r13d,%r8d
  449cfb:	mov    %rbx,%rcx
  449cfe:	mov    %rax,%rdi
  449d01:	and    $0x16,%r8d
  449d05:	mov    %rdx,(%rsp)
  449d09:	mov    %r14,%r9
  449d0c:	mov    $0x10,%edx
  449d11:	callq  4153d0 <HMAC@plt>
  449d16:	mov    %rbx,%rdi
  449d19:	callq  415020 <CRYPTO_free@plt>
  449d1e:	xor    %eax,%eax
  449d20:	cmp    0x1c(%rsp),%ebp
  449d24:	jne    449c11 <X509_get0_pubkey_bitstr@plt+0x33241>
  449d2a:	mov    %ebp,%edx
  449d2c:	mov    %r12,%rsi
  449d2f:	mov    %r14,%rdi
  449d32:	callq  4134e0 <memcmp@plt>
  449d37:	test   %eax,%eax
  449d39:	sete   %al
  449d3c:	movzbl %al,%eax
  449d3f:	jmpq   449c11 <X509_get0_pubkey_bitstr@plt+0x33241>
  449d44:	nopl   0x0(%rax)
  449d48:	mov    $0x12,%edi
  449d4d:	mov    $0x12,%r13d
  449d53:	jmpq   449c92 <X509_get0_pubkey_bitstr@plt+0x332c2>
  449d58:	nopl   0x0(%rax,%rax,1)
  449d60:	mov    $0x6,%edi
  449d65:	mov    $0x6,%r13d
  449d6b:	jmpq   449c92 <X509_get0_pubkey_bitstr@plt+0x332c2>
  449d70:	lea    0x1e439(%rip),%rdx        # 4681b0 <_fini+0xacac>
  449d77:	lea    0x21f40(%rip),%rdi        # 46bcbe <_fini+0xe7ba>
  449d7e:	mov    $0x3b5,%esi
  449d83:	callq  4145b0 <OpenSSLDie@plt>
  449d88:	jmpq   449ce2 <X509_get0_pubkey_bitstr@plt+0x33312>
  449d8d:	nopl   (%rax)
  449d90:	movzwl 0x22(%rsp),%eax
  449d95:	mov    %ax,(%rbx)
  449d98:	mov    0x24(%rsp),%eax
  449d9c:	mov    %eax,0x2(%rbx)
  449d9f:	jmpq   449ce2 <X509_get0_pubkey_bitstr@plt+0x33312>
  449da4:	lea    0x230f95(%rip),%rax        # 67ad40 <_edata+0x38>
  449dab:	lea    0x15b01(%rip),%rsi        # 45f8b3 <_fini+0x23af>
  449db2:	mov    (%rax),%rdi
  449db5:	xor    %eax,%eax
  449db7:	callq  413c40 <BIO_printf@plt>
  449dbc:	xor    %eax,%eax
  449dbe:	jmpq   449c11 <X509_get0_pubkey_bitstr@plt+0x33241>
  449dc3:	callq  414c30 <__stack_chk_fail@plt>
  449dc8:	nopl   0x0(%rax,%rax,1)
  449dd0:	push   %r15
  449dd2:	push   %r14
  449dd4:	mov    %rdx,%r14
  449dd7:	push   %r13
  449dd9:	mov    %edi,%r13d
  449ddc:	push   %r12
  449dde:	push   %rbp
  449ddf:	xor    %ebp,%ebp
  449de1:	push   %rbx
  449de2:	lea    0x231e37(%rip),%rbx        # 67bc20 <_edata+0xf18>
  449de9:	sub    $0x438,%rsp
  449df0:	mov    %rsi,0x8(%rsp)
  449df5:	lea    0x1c(%rsp),%r12
  449dfa:	mov    %fs:0x28,%rax
  449e03:	mov    %rax,0x428(%rsp)
  449e0b:	xor    %eax,%eax
  449e0d:	jmp    449e20 <X509_get0_pubkey_bitstr@plt+0x33450>
  449e0f:	nop
  449e10:	callq  412830 <__errno_location@plt>
  449e15:	mov    (%rax),%ecx
  449e17:	cmp    $0x4,%ecx
  449e1a:	jne    449f28 <X509_get0_pubkey_bitstr@plt+0x33558>
  449e20:	mov    %rbp,%rax
  449e23:	mov    $0x10,%ecx
  449e28:	mov    %rbx,%rdi
  449e2b:	rep stos %rax,%es:(%rdi)
  449e2e:	lea    0x231deb(%rip),%rsi        # 67bc20 <_edata+0xf18>
  449e35:	mov    %r12,%rdx
  449e38:	mov    %r13d,%edi
  449e3b:	movl   $0x80,0x1c(%rsp)
  449e43:	callq  413070 <accept@plt>
  449e48:	cmp    $0xffffffff,%eax
  449e4b:	mov    %eax,%r15d
  449e4e:	je     449e10 <X509_get0_pubkey_bitstr@plt+0x33440>
  449e50:	test   %r14,%r14
  449e53:	je     449ef1 <X509_get0_pubkey_bitstr@plt+0x33521>
  449e59:	lea    0x20(%rsp),%rbp
  449e5e:	lea    0x231dbb(%rip),%rdi        # 67bc20 <_edata+0xf18>
  449e65:	xor    %r9d,%r9d
  449e68:	xor    %r8d,%r8d
  449e6b:	movl   $0x0,(%rsp)
  449e72:	mov    $0x401,%ecx
  449e77:	mov    %rbp,%rdx
  449e7a:	mov    $0x80,%esi
  449e7f:	callq  413c60 <getnameinfo@plt>
  449e84:	test   %eax,%eax
  449e86:	mov    %eax,%ebx
  449e88:	jne    449f58 <X509_get0_pubkey_bitstr@plt+0x33588>
  449e8e:	mov    %rbp,%rcx
  449e91:	mov    (%rcx),%edx
  449e93:	add    $0x4,%rcx
  449e97:	lea    -0x1010101(%rdx),%eax
  449e9d:	not    %edx
  449e9f:	and    %edx,%eax
  449ea1:	and    $0x80808080,%eax
  449ea6:	je     449e91 <X509_get0_pubkey_bitstr@plt+0x334c1>
  449ea8:	mov    %eax,%edx
  449eaa:	lea    0x222b1(%rip),%rsi        # 46c162 <_fini+0xec5e>
  449eb1:	shr    $0x10,%edx
  449eb4:	test   $0x8080,%eax
  449eb9:	cmove  %edx,%eax
  449ebc:	lea    0x2(%rcx),%rdx
  449ec0:	cmove  %rdx,%rcx
  449ec4:	add    %al,%al
  449ec6:	mov    $0x1e7,%edx
  449ecb:	sbb    $0x3,%rcx
  449ecf:	sub    %rbp,%rcx
  449ed2:	lea    0x1(%rcx),%edi
  449ed5:	callq  413d50 <CRYPTO_malloc@plt>
  449eda:	test   %rax,%rax
  449edd:	mov    %rax,%rdi
  449ee0:	mov    %rax,(%r14)
  449ee3:	je     449f7c <X509_get0_pubkey_bitstr@plt+0x335ac>
  449ee9:	mov    %rbp,%rsi
  449eec:	callq  4145d0 <strcpy@plt>
  449ef1:	mov    0x8(%rsp),%rax
  449ef6:	mov    $0x1,%ebx
  449efb:	mov    %r15d,(%rax)
  449efe:	mov    0x428(%rsp),%rsi
  449f06:	xor    %fs:0x28,%rsi
  449f0f:	mov    %ebx,%eax
  449f11:	jne    449f8d <X509_get0_pubkey_bitstr@plt+0x335bd>
  449f13:	add    $0x438,%rsp
  449f1a:	pop    %rbx
  449f1b:	pop    %rbp
  449f1c:	pop    %r12
  449f1e:	pop    %r13
  449f20:	pop    %r14
  449f22:	pop    %r15
  449f24:	retq   
  449f25:	nopl   (%rax)
  449f28:	mov    0x22c051(%rip),%rax        # 675f80 <_fini+0x218a7c>
  449f2f:	lea    0x2220e(%rip),%rdx        # 46c144 <_fini+0xec40>
  449f36:	mov    $0x1,%esi
  449f3b:	xor    %ebx,%ebx
  449f3d:	mov    (%rax),%rdi
  449f40:	xor    %eax,%eax
  449f42:	callq  415e20 <__fprintf_chk@plt>
  449f47:	lea    0x1e4b7(%rip),%rdi        # 468405 <_fini+0xaf01>
  449f4e:	callq  4142c0 <perror@plt>
  449f53:	jmp    449efe <X509_get0_pubkey_bitstr@plt+0x3352e>
  449f55:	nopl   (%rax)
  449f58:	lea    0x230de1(%rip),%rax        # 67ad40 <_edata+0x38>
  449f5f:	lea    0x221e8(%rip),%rsi        # 46c14e <_fini+0xec4a>
  449f66:	mov    (%rax),%rdi
  449f69:	xor    %eax,%eax
  449f6b:	callq  413c40 <BIO_printf@plt>
  449f70:	movq   $0x0,(%r14)
  449f77:	jmpq   449ef1 <X509_get0_pubkey_bitstr@plt+0x33521>
  449f7c:	lea    0x15b2c(%rip),%rdi        # 45faaf <_fini+0x25ab>
  449f83:	callq  4142c0 <perror@plt>
  449f88:	jmpq   449efe <X509_get0_pubkey_bitstr@plt+0x3352e>
  449f8d:	callq  414c30 <__stack_chk_fail@plt>
  449f92:	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  449fa0:	push   %r15
  449fa2:	mov    %rsi,%r9
  449fa5:	mov    %rdx,%rsi
  449fa8:	push   %r14
  449faa:	push   %r13
  449fac:	mov    %rdi,%r13
  449faf:	push   %r12
  449fb1:	push   %rbp
  449fb2:	push   %rbx
  449fb3:	mov    %ecx,%ebx
  449fb5:	mov    $0x6,%ecx
  449fba:	sub    $0x68,%rsp
  449fbe:	lea    0x20(%rsp),%rdx
  449fc3:	mov    %fs:0x28,%rax
  449fcc:	mov    %rax,0x58(%rsp)
  449fd1:	xor    %eax,%eax
  449fd3:	mov    %rdx,%rdi
  449fd6:	rep stos %rax,%es:(%rdi)
  449fd9:	lea    0x18(%rsp),%rcx
  449fde:	mov    %r9,%rdi
  449fe1:	mov    %ebx,0x28(%rsp)
  449fe5:	movl   $0x20,0x20(%rsp)
  449fed:	callq  415100 <getaddrinfo@plt>
  449ff2:	test   %eax,%eax
  449ff4:	mov    %eax,%ebp
  449ff6:	jne    44a0f8 <X509_get0_pubkey_bitstr@plt+0x33728>
  449ffc:	mov    0x18(%rsp),%rbp
  44a001:	test   %rbp,%rbp
  44a004:	je     44a0b7 <X509_get0_pubkey_bitstr@plt+0x336e7>
  44a00a:	mov    %rbp,%rax
  44a00d:	lea    0x14(%rsp),%r12
  44a012:	jmp    44a05b <X509_get0_pubkey_bitstr@plt+0x3368b>
  44a014:	nopl   0x0(%rax)
  44a018:	cmp    $0x1,%ebx
  44a01b:	je     44a080 <X509_get0_pubkey_bitstr@plt+0x336b0>
  44a01d:	mov    0x18(%rsp),%rax
  44a022:	mov    %r15d,%edi
  44a025:	mov    0x10(%rax),%edx
  44a028:	mov    0x18(%rax),%rsi
  44a02c:	callq  4142b0 <connect@plt>
  44a031:	test   %eax,%eax
  44a033:	je     44a140 <X509_get0_pubkey_bitstr@plt+0x33770>
  44a039:	lea    0x2212d(%rip),%r14        # 46c16d <_fini+0xec69>
  44a040:	mov    %r15d,%edi
  44a043:	callq  4168a0 <close@plt>
  44a048:	mov    0x18(%rsp),%rax
  44a04d:	mov    0x28(%rax),%rax
  44a051:	test   %rax,%rax
  44a054:	mov    %rax,0x18(%rsp)
  44a059:	je     44a0c0 <X509_get0_pubkey_bitstr@plt+0x336f0>
  44a05b:	mov    0xc(%rax),%edx
  44a05e:	mov    0x8(%rax),%esi
  44a061:	mov    0x4(%rax),%edi
  44a064:	callq  412de0 <socket@plt>
  44a069:	cmp    $0xffffffff,%eax
  44a06c:	mov    %eax,%r15d
  44a06f:	jne    44a018 <X509_get0_pubkey_bitstr@plt+0x33648>
  44a071:	lea    0x220f5(%rip),%r14        # 46c16d <_fini+0xec69>
  44a078:	jmp    44a048 <X509_get0_pubkey_bitstr@plt+0x33678>
  44a07a:	nopw   0x0(%rax,%rax,1)
  44a080:	mov    $0x4,%r8d
  44a086:	mov    %r12,%rcx
  44a089:	mov    $0x9,%edx
  44a08e:	mov    $0x1,%esi
  44a093:	mov    %eax,%edi
  44a095:	movl   $0x0,0x14(%rsp)
  44a09d:	callq  416290 <setsockopt@plt>
  44a0a2:	test   %eax,%eax
  44a0a4:	mov    %eax,0x14(%rsp)
  44a0a8:	lea    0x220c5(%rip),%r14        # 46c174 <_fini+0xec70>
  44a0af:	jns    44a01d <X509_get0_pubkey_bitstr@plt+0x3364d>
  44a0b5:	jmp    44a040 <X509_get0_pubkey_bitstr@plt+0x33670>
  44a0b7:	xor    %r14d,%r14d
  44a0ba:	nopw   0x0(%rax,%rax,1)
  44a0c0:	mov    %rbp,%rdi
  44a0c3:	callq  415240 <freeaddrinfo@plt>
  44a0c8:	mov    %r14,%rdi
  44a0cb:	callq  4142c0 <perror@plt>
  44a0d0:	xor    %eax,%eax
  44a0d2:	mov    0x58(%rsp),%rcx
  44a0d7:	xor    %fs:0x28,%rcx
  44a0e0:	jne    44a156 <X509_get0_pubkey_bitstr@plt+0x33786>
  44a0e2:	add    $0x68,%rsp
  44a0e6:	pop    %rbx
  44a0e7:	pop    %rbp
  44a0e8:	pop    %r12
  44a0ea:	pop    %r13
  44a0ec:	pop    %r14
  44a0ee:	pop    %r15
  44a0f0:	retq   
  44a0f1:	nopl   0x0(%rax)
  44a0f8:	mov    %eax,%edi
  44a0fa:	callq  4154f0 <gai_strerror@plt>
  44a0ff:	mov    %rax,%rcx
  44a102:	mov    0x22be77(%rip),%rax        # 675f80 <_fini+0x218a7c>
  44a109:	lea    0x2206e(%rip),%rdx        # 46c17e <_fini+0xec7a>
  44a110:	mov    $0x1,%esi
  44a115:	mov    (%rax),%rdi
  44a118:	xor    %eax,%eax
  44a11a:	callq  415e20 <__fprintf_chk@plt>
  44a11f:	xor    %eax,%eax
  44a121:	cmp    $0xfffffff5,%ebp
  44a124:	jne    44a0d2 <X509_get0_pubkey_bitstr@plt+0x33702>
  44a126:	lea    0x22062(%rip),%rdi        # 46c18f <_fini+0xec8b>
  44a12d:	mov    %eax,0xc(%rsp)
  44a131:	callq  4142c0 <perror@plt>
  44a136:	mov    0xc(%rsp),%eax
  44a13a:	jmp    44a0d2 <X509_get0_pubkey_bitstr@plt+0x33702>
  44a13c:	nopl   0x0(%rax)
  44a140:	mov    %rbp,%rdi
  44a143:	callq  415240 <freeaddrinfo@plt>
  44a148:	mov    %r15d,0x0(%r13)
  44a14c:	mov    $0x1,%eax
  44a151:	jmpq   44a0d2 <X509_get0_pubkey_bitstr@plt+0x33702>
  44a156:	callq  414c30 <__stack_chk_fail@plt>
  44a15b:	nopl   0x0(%rax,%rax,1)
  44a160:	push   %r15
  44a162:	push   %r14
  44a164:	mov    %r8,%r14
  44a167:	push   %r13
  44a169:	mov    %rcx,%r13
  44a16c:	mov    $0x6,%ecx
  44a171:	push   %r12
  44a173:	push   %rbp
  44a174:	mov    %esi,%ebp
  44a176:	push   %rbx
  44a177:	sub    $0x88,%rsp
  44a17e:	lea    0x40(%rsp),%r15
  44a183:	mov    %rdi,(%rsp)
  44a187:	mov    %rdx,0x10(%rsp)
  44a18c:	mov    %fs:0x28,%rax
  44a195:	mov    %rax,0x78(%rsp)
  44a19a:	xor    %eax,%eax
  44a19c:	mov    %r15,%rdi
  44a19f:	movq   $0x0,0x30(%rsp)
  44a1a8:	rep stos %rax,%es:(%rdi)
  44a1ab:	lea    0x38(%rsp),%rax
  44a1b0:	movl   $0xa,0x44(%rsp)
  44a1b8:	mov    %rax,0x8(%rsp)
  44a1bd:	mov    0x8(%rsp),%rcx
  44a1c2:	mov    (%rsp),%rsi
  44a1c6:	xor    %edi,%edi
  44a1c8:	mov    %r15,%rdx
  44a1cb:	mov    %ebp,0x48(%rsp)
  44a1cf:	movl   $0x1,0x40(%rsp)
  44a1d7:	callq  415100 <getaddrinfo@plt>
  44a1dc:	test   %eax,%eax
  44a1de:	mov    %eax,%ebx
  44a1e0:	je     44a210 <X509_get0_pubkey_bitstr@plt+0x33840>
  44a1e2:	cmpl   $0x2,0x44(%rsp)
  44a1e7:	je     44a437 <X509_get0_pubkey_bitstr@plt+0x33a67>
  44a1ed:	movq   $0x0,0x38(%rsp)
  44a1f6:	cmpl   $0xa,0x44(%rsp)
  44a1fb:	jne    44a427 <X509_get0_pubkey_bitstr@plt+0x33a57>
  44a201:	movl   $0x2,0x44(%rsp)
  44a209:	jmp    44a1bd <X509_get0_pubkey_bitstr@plt+0x337ed>
  44a20b:	nopl   0x0(%rax,%rax,1)
  44a210:	mov    0x38(%rsp),%rax
  44a215:	test   %rax,%rax
  44a218:	mov    %rax,0x18(%rsp)
  44a21d:	jne    44a2b5 <X509_get0_pubkey_bitstr@plt+0x338e5>
  44a223:	jmp    44a1f6 <X509_get0_pubkey_bitstr@plt+0x33826>
  44a225:	nopl   (%rax)
  44a228:	cmpl   $0xa,0x44(%rsp)
  44a22d:	lea    0x2c(%rsp),%r12
  44a232:	je     44a2f0 <X509_get0_pubkey_bitstr@plt+0x33920>
  44a238:	mov    $0x4,%r8d
  44a23e:	mov    %r12,%rcx
  44a241:	mov    $0x2,%edx
  44a246:	mov    $0x1,%esi
  44a24b:	mov    %ebx,%edi
  44a24d:	movl   $0x1,0x2c(%rsp)
  44a255:	callq  416290 <setsockopt@plt>
  44a25a:	mov    0x38(%rsp),%rax
  44a25f:	mov    %ebx,%edi
  44a261:	mov    0x10(%rax),%edx
  44a264:	mov    0x18(%rax),%rsi
  44a268:	callq  412ac0 <bind@plt>
  44a26d:	cmp    $0xffffffff,%eax
  44a270:	je     44a2e0 <X509_get0_pubkey_bitstr@plt+0x33910>
  44a272:	cmp    $0x1,%ebp
  44a275:	jne    44a320 <X509_get0_pubkey_bitstr@plt+0x33950>
  44a27b:	mov    $0x80,%esi
  44a280:	mov    %ebx,%edi
  44a282:	callq  414cc0 <listen@plt>
  44a287:	cmp    $0xffffffff,%eax
  44a28a:	jne    44a320 <X509_get0_pubkey_bitstr@plt+0x33950>
  44a290:	lea    0x21f04(%rip),%r12        # 46c19b <_fini+0xec97>
  44a297:	mov    %ebx,%edi
  44a299:	callq  4168a0 <close@plt>
  44a29e:	mov    0x38(%rsp),%rax
  44a2a3:	mov    0x28(%rax),%rax
  44a2a7:	test   %rax,%rax
  44a2aa:	mov    %rax,0x38(%rsp)
  44a2af:	je     44a3f0 <X509_get0_pubkey_bitstr@plt+0x33a20>
  44a2b5:	mov    0xc(%rax),%edx
  44a2b8:	mov    0x8(%rax),%esi
  44a2bb:	mov    0x4(%rax),%edi
  44a2be:	callq  412de0 <socket@plt>
  44a2c3:	cmp    $0xffffffff,%eax
  44a2c6:	mov    %eax,%ebx
  44a2c8:	jne    44a228 <X509_get0_pubkey_bitstr@plt+0x33858>
  44a2ce:	lea    0x21e98(%rip),%r12        # 46c16d <_fini+0xec69>
  44a2d5:	jmp    44a29e <X509_get0_pubkey_bitstr@plt+0x338ce>
  44a2d7:	nopw   0x0(%rax,%rax,1)
  44a2e0:	lea    0x21ebb(%rip),%r12        # 46c1a2 <_fini+0xec9e>
  44a2e7:	jmp    44a297 <X509_get0_pubkey_bitstr@plt+0x338c7>
  44a2e9:	nopl   0x0(%rax)
  44a2f0:	mov    $0x4,%r8d
  44a2f6:	mov    %r12,%rcx
  44a2f9:	mov    $0x1a,%edx
  44a2fe:	mov    $0x29,%esi
  44a303:	mov    %eax,%edi
  44a305:	movl   $0x0,0x2c(%rsp)
  44a30d:	callq  416290 <setsockopt@plt>
  44a312:	jmpq   44a238 <X509_get0_pubkey_bitstr@plt+0x33868>
  44a317:	nopw   0x0(%rax,%rax,1)
  44a320:	cmpq   $0x0,0x10(%rsp)
  44a326:	je     44a32f <X509_get0_pubkey_bitstr@plt+0x3395f>
  44a328:	mov    0x10(%rsp),%rax
  44a32d:	mov    %ebx,(%rax)
  44a32f:	lea    0x30(%rsp),%rax
  44a334:	mov    %rax,(%rsp)
  44a338:	jmp    44a36d <X509_get0_pubkey_bitstr@plt+0x3399d>
  44a33a:	nopw   0x0(%rax,%rax,1)
  44a340:	mov    %ebx,0x40(%rsp)
  44a344:	mov    %ebx,%esi
  44a346:	mov    0x30(%rsp),%rdi
  44a34b:	mov    %r14,%rdx
  44a34e:	callq  *%r13
  44a351:	mov    0x30(%rsp),%rdi
  44a356:	mov    %eax,%r12d
  44a359:	test   %rdi,%rdi
  44a35c:	je     44a363 <X509_get0_pubkey_bitstr@plt+0x33993>
  44a35e:	callq  415020 <CRYPTO_free@plt>
  44a363:	cmp    $0x1,%ebp
  44a366:	je     44a390 <X509_get0_pubkey_bitstr@plt+0x339c0>
  44a368:	test   %r12d,%r12d
  44a36b:	js     44a3b0 <X509_get0_pubkey_bitstr@plt+0x339e0>
  44a36d:	cmp    $0x1,%ebp
  44a370:	jne    44a340 <X509_get0_pubkey_bitstr@plt+0x33970>
  44a372:	mov    (%rsp),%rdx
  44a376:	mov    %r15,%rsi
  44a379:	mov    %ebx,%edi
  44a37b:	callq  449dd0 <X509_get0_pubkey_bitstr@plt+0x33400>
  44a380:	test   %eax,%eax
  44a382:	je     44a40f <X509_get0_pubkey_bitstr@plt+0x33a3f>
  44a388:	mov    0x40(%rsp),%esi
  44a38c:	jmp    44a346 <X509_get0_pubkey_bitstr@plt+0x33976>
  44a38e:	xchg   %ax,%ax
  44a390:	mov    0x40(%rsp),%edi
  44a394:	mov    $0x2,%esi
  44a399:	callq  415460 <shutdown@plt>
  44a39e:	mov    0x40(%rsp),%edi
  44a3a2:	callq  4168a0 <close@plt>
  44a3a7:	test   %r12d,%r12d
  44a3aa:	jns    44a36d <X509_get0_pubkey_bitstr@plt+0x3399d>
  44a3ac:	nopl   0x0(%rax)
  44a3b0:	mov    $0x2,%esi
  44a3b5:	mov    %ebx,%edi
  44a3b7:	callq  415460 <shutdown@plt>
  44a3bc:	mov    %ebx,%edi
  44a3be:	callq  4168a0 <close@plt>
  44a3c3:	mov    %r12d,%edx
  44a3c6:	mov    0x78(%rsp),%rcx
  44a3cb:	xor    %fs:0x28,%rcx
  44a3d4:	mov    %edx,%eax
  44a3d6:	jne    44a476 <X509_get0_pubkey_bitstr@plt+0x33aa6>
  44a3dc:	add    $0x88,%rsp
  44a3e3:	pop    %rbx
  44a3e4:	pop    %rbp
  44a3e5:	pop    %r12
  44a3e7:	pop    %r13
  44a3e9:	pop    %r14
  44a3eb:	pop    %r15
  44a3ed:	retq   
  44a3ee:	xchg   %ax,%ax
  44a3f0:	mov    0x18(%rsp),%rdi
  44a3f5:	callq  415240 <freeaddrinfo@plt>
  44a3fa:	cmp    $0xffffffff,%ebx
  44a3fd:	je     44a1f6 <X509_get0_pubkey_bitstr@plt+0x33826>
  44a403:	mov    %r12,%rdi
  44a406:	callq  4142c0 <perror@plt>
  44a40b:	xor    %edx,%edx
  44a40d:	jmp    44a3c6 <X509_get0_pubkey_bitstr@plt+0x339f6>
  44a40f:	xor    %esi,%esi
  44a411:	mov    %ebx,%edi
  44a413:	mov    %eax,(%rsp)
  44a416:	callq  415460 <shutdown@plt>
  44a41b:	mov    %ebx,%edi
  44a41d:	callq  4168a0 <close@plt>
  44a422:	mov    (%rsp),%edx
  44a425:	jmp    44a3c6 <X509_get0_pubkey_bitstr@plt+0x339f6>
  44a427:	lea    0x21d3f(%rip),%rdi        # 46c16d <_fini+0xec69>
  44a42e:	callq  4142c0 <perror@plt>
  44a433:	xor    %edx,%edx
  44a435:	jmp    44a3c6 <X509_get0_pubkey_bitstr@plt+0x339f6>
  44a437:	mov    %eax,%edi
  44a439:	callq  4154f0 <gai_strerror@plt>
  44a43e:	mov    %rax,%rcx
  44a441:	mov    0x22bb38(%rip),%rax        # 675f80 <_fini+0x218a7c>
  44a448:	lea    0x21d2f(%rip),%rdx        # 46c17e <_fini+0xec7a>
  44a44f:	mov    $0x1,%esi
  44a454:	mov    (%rax),%rdi
  44a457:	xor    %eax,%eax
  44a459:	callq  415e20 <__fprintf_chk@plt>
  44a45e:	cmp    $0xfffffff5,%ebx
  44a461:	jne    44a40b <X509_get0_pubkey_bitstr@plt+0x33a3b>
  44a463:	lea    0x21d25(%rip),%rdi        # 46c18f <_fini+0xec8b>
  44a46a:	callq  4142c0 <perror@plt>
  44a46f:	xor    %edx,%edx
  44a471:	jmpq   44a3c6 <X509_get0_pubkey_bitstr@plt+0x339f6>
  44a476:	callq  414c30 <__stack_chk_fail@plt>
  44a47b:	nopl   0x0(%rax,%rax,1)
  44a480:	push   %r12
  44a482:	mov    %rsi,%r12
  44a485:	push   %rbp
  44a486:	mov    %rdx,%rbp
  44a489:	push   %rbx
  44a48a:	mov    %rdi,%rbx
  44a48d:	cmpb   $0x5b,(%rbx)
  44a490:	je     44a4c8 <X509_get0_pubkey_bitstr@plt+0x33af8>
  44a492:	mov    $0x3a,%esi
  44a497:	callq  413220 <strchr@plt>
  44a49c:	test   %rax,%rax
  44a49f:	je     44a500 <X509_get0_pubkey_bitstr@plt+0x33b30>
  44a4a1:	test   %r12,%r12
  44a4a4:	lea    0x1(%rax),%rdx
  44a4a8:	movb   $0x0,(%rax)
  44a4ab:	je     44a4b1 <X509_get0_pubkey_bitstr@plt+0x33ae1>
  44a4ad:	mov    %rbx,(%r12)
  44a4b1:	test   %rbp,%rbp
  44a4b4:	je     44a4f0 <X509_get0_pubkey_bitstr@plt+0x33b20>
  44a4b6:	mov    %rdx,0x0(%rbp)
  44a4ba:	mov    $0x1,%eax
  44a4bf:	pop    %rbx
  44a4c0:	pop    %rbp
  44a4c1:	pop    %r12
  44a4c3:	retq   
  44a4c4:	nopl   0x0(%rax)
  44a4c8:	add    $0x1,%rbx
  44a4cc:	mov    $0x5d,%esi
  44a4d1:	mov    %rbx,%rdi
  44a4d4:	callq  413220 <strchr@plt>
  44a4d9:	test   %rax,%rax
  44a4dc:	lea    0x21cd5(%rip),%rsi        # 46c1b8 <_fini+0xecb4>
  44a4e3:	je     44a507 <X509_get0_pubkey_bitstr@plt+0x33b37>
  44a4e5:	movb   $0x0,(%rax)
  44a4e8:	lea    0x1(%rax),%rdi
  44a4ec:	jmp    44a492 <X509_get0_pubkey_bitstr@plt+0x33ac2>
  44a4ee:	xchg   %ax,%ax
  44a4f0:	mov    $0x1,%eax
  44a4f5:	jmp    44a4bf <X509_get0_pubkey_bitstr@plt+0x33aef>
  44a4f7:	nopw   0x0(%rax,%rax,1)
  44a500:	lea    0x21ca0(%rip),%rsi        # 46c1a7 <_fini+0xeca3>
  44a507:	lea    0x230832(%rip),%rax        # 67ad40 <_edata+0x38>
  44a50e:	mov    (%rax),%rdi
  44a511:	xor    %eax,%eax
  44a513:	callq  413c40 <BIO_printf@plt>
  44a518:	xor    %eax,%eax
  44a51a:	jmp    44a4bf <X509_get0_pubkey_bitstr@plt+0x33aef>
  44a51c:	nopl   0x0(%rax)
  44a520:	push   %r13
  44a522:	mov    %edx,%r13d
  44a525:	push   %r12
  44a527:	mov    %rsi,%r12
  44a52a:	push   %rbp
  44a52b:	push   %rbx
  44a52c:	mov    %rdi,%rbx
  44a52f:	sub    $0xd8,%rsp
  44a536:	mov    %fs:0x28,%rax
  44a53f:	mov    %rax,0xc8(%rsp)
  44a547:	xor    %eax,%eax
  44a549:	test   %rdi,%rdi
  44a54c:	je     44a638 <X509_get0_pubkey_bitstr@plt+0x33c68>
  44a552:	callq  415330 <RAND_egd@plt>
  44a557:	test   %eax,%eax
  44a559:	jle    44a598 <X509_get0_pubkey_bitstr@plt+0x33bc8>
  44a55b:	movl   $0x1,0x23173b(%rip)        # 67bca0 <_edata+0xf98>
  44a565:	mov    $0x1,%ebp
  44a56a:	mov    0xc8(%rsp),%rcx
  44a572:	xor    %fs:0x28,%rcx
  44a57b:	mov    %ebp,%eax
  44a57d:	jne    44a656 <X509_get0_pubkey_bitstr@plt+0x33c86>
  44a583:	add    $0xd8,%rsp
  44a58a:	pop    %rbx
  44a58b:	pop    %rbp
  44a58c:	pop    %r12
  44a58e:	pop    %r13
  44a590:	retq   
  44a591:	nopl   0x0(%rax)
  44a598:	mov    %rbx,%rdi
  44a59b:	mov    $0xffffffffffffffff,%rsi
  44a5a2:	callq  413010 <RAND_load_file@plt>
  44a5a7:	test   %eax,%eax
  44a5a9:	jne    44a620 <X509_get0_pubkey_bitstr@plt+0x33c50>
  44a5ab:	callq  416420 <RAND_status@plt>
  44a5b0:	test   %eax,%eax
  44a5b2:	mov    %eax,%ebp
  44a5b4:	jne    44a620 <X509_get0_pubkey_bitstr@plt+0x33c50>
  44a5b6:	test   %r13d,%r13d
  44a5b9:	jne    44a56a <X509_get0_pubkey_bitstr@plt+0x33b9a>
  44a5bb:	lea    0x21c1e(%rip),%rsi        # 46c1e0 <_fini+0xecdc>
  44a5c2:	mov    %r12,%rdi
  44a5c5:	xor    %eax,%eax
  44a5c7:	callq  413c40 <BIO_printf@plt>
  44a5cc:	lea    0x21c2d(%rip),%rsi        # 46c200 <_fini+0xecfc>
  44a5d3:	mov    %r12,%rdi
  44a5d6:	xor    %eax,%eax
  44a5d8:	callq  413c40 <BIO_printf@plt>
  44a5dd:	lea    0x21d14(%rip),%rsi        # 46c2f8 <_fini+0xedf4>
  44a5e4:	xor    %eax,%eax
  44a5e6:	mov    %r12,%rdi
  44a5e9:	callq  413c40 <BIO_printf@plt>
  44a5ee:	test   %rbx,%rbx
  44a5f1:	jne    44a56a <X509_get0_pubkey_bitstr@plt+0x33b9a>
  44a5f7:	lea    0x21c4a(%rip),%rsi        # 46c248 <_fini+0xed44>
  44a5fe:	mov    %r12,%rdi
  44a601:	xor    %eax,%eax
  44a603:	callq  413c40 <BIO_printf@plt>
  44a608:	lea    0x21c89(%rip),%rsi        # 46c298 <_fini+0xed94>
  44a60f:	mov    %r12,%rdi
  44a612:	xor    %eax,%eax
  44a614:	callq  413c40 <BIO_printf@plt>
  44a619:	jmpq   44a56a <X509_get0_pubkey_bitstr@plt+0x33b9a>
  44a61e:	xchg   %ax,%ax
  44a620:	movl   $0x1,0x23167a(%rip)        # 67bca4 <_edata+0xf9c>
  44a62a:	mov    $0x1,%ebp
  44a62f:	jmpq   44a56a <X509_get0_pubkey_bitstr@plt+0x33b9a>
  44a634:	nopl   0x0(%rax)
  44a638:	mov    %rsp,%rdi
  44a63b:	mov    $0xc8,%esi
  44a640:	callq  413a10 <RAND_file_name@plt>
  44a645:	test   %rax,%rax
  44a648:	mov    %rax,%rdi
  44a64b:	jne    44a59b <X509_get0_pubkey_bitstr@plt+0x33bcb>
  44a651:	jmpq   44a5ab <X509_get0_pubkey_bitstr@plt+0x33bdb>
  44a656:	callq  414c30 <__stack_chk_fail@plt>
  44a65b:	nopl   0x0(%rax,%rax,1)
  44a660:	push   %rbx
  44a661:	sub    $0xd0,%rsp
  44a668:	mov    0x231632(%rip),%ecx        # 67bca0 <_edata+0xf98>
  44a66e:	mov    %fs:0x28,%rax
  44a677:	mov    %rax,0xc8(%rsp)
  44a67f:	xor    %eax,%eax
  44a681:	test   %ecx,%ecx
  44a683:	jne    44a6b3 <X509_get0_pubkey_bitstr@plt+0x33ce3>
  44a685:	mov    0x231619(%rip),%edx        # 67bca4 <_edata+0xf9c>
  44a68b:	test   %edx,%edx
  44a68d:	je     44a6b3 <X509_get0_pubkey_bitstr@plt+0x33ce3>
  44a68f:	test   %rdi,%rdi
  44a692:	mov    %rsi,%rbx
  44a695:	je     44a6e0 <X509_get0_pubkey_bitstr@plt+0x33d10>
  44a697:	callq  4150f0 <RAND_write_file@plt>
  44a69c:	test   %eax,%eax
  44a69e:	jne    44a6d0 <X509_get0_pubkey_bitstr@plt+0x33d00>
  44a6a0:	lea    0x21c31(%rip),%rsi        # 46c2d8 <_fini+0xedd4>
  44a6a7:	mov    %rbx,%rdi
  44a6aa:	xor    %eax,%eax
  44a6ac:	callq  413c40 <BIO_printf@plt>
  44a6b1:	xor    %eax,%eax
  44a6b3:	mov    0xc8(%rsp),%rdx
  44a6bb:	xor    %fs:0x28,%rdx
  44a6c4:	jne    44a6f7 <X509_get0_pubkey_bitstr@plt+0x33d27>
  44a6c6:	add    $0xd0,%rsp
  44a6cd:	pop    %rbx
  44a6ce:	retq   
  44a6cf:	nop
  44a6d0:	mov    $0x1,%eax
  44a6d5:	jmp    44a6b3 <X509_get0_pubkey_bitstr@plt+0x33ce3>
  44a6d7:	nopw   0x0(%rax,%rax,1)
  44a6e0:	mov    %rsp,%rdi
  44a6e3:	mov    $0xc8,%esi
  44a6e8:	callq  413a10 <RAND_file_name@plt>
  44a6ed:	test   %rax,%rax
  44a6f0:	mov    %rax,%rdi
  44a6f3:	je     44a6a0 <X509_get0_pubkey_bitstr@plt+0x33cd0>
  44a6f5:	jmp    44a697 <X509_get0_pubkey_bitstr@plt+0x33cc7>
  44a6f7:	callq  414c30 <__stack_chk_fail@plt>
  44a6fc:	nopl   0x0(%rax)
  44a700:	movl   $0x1,0x23159a(%rip)        # 67bca4 <_edata+0xf9c>
  44a70a:	retq   
  44a70b:	nopl   0x0(%rax,%rax,1)
  44a710:	push   %r13
  44a712:	push   %r12
  44a714:	xor    %r12d,%r12d
  44a717:	push   %rbp
  44a718:	mov    %rdi,%rbp
  44a71b:	push   %rbx
  44a71c:	sub    $0x8,%rsp
  44a720:	movzbl 0x0(%rbp),%ebx
  44a724:	mov    %rbp,%rdx
  44a727:	cmp    $0x3a,%bl
  44a72a:	jne    44a73c <X509_get0_pubkey_bitstr@plt+0x33d6c>
  44a72c:	jmp    44a740 <X509_get0_pubkey_bitstr@plt+0x33d70>
  44a72e:	xchg   %ax,%ax
  44a730:	add    $0x1,%rdx
  44a734:	movzbl (%rdx),%ebx
  44a737:	cmp    $0x3a,%bl
  44a73a:	je     44a740 <X509_get0_pubkey_bitstr@plt+0x33d70>
  44a73c:	test   %bl,%bl
  44a73e:	jne    44a730 <X509_get0_pubkey_bitstr@plt+0x33d60>
  44a740:	movb   $0x0,(%rdx)
  44a743:	cmpb   $0x0,0x0(%rbp)
  44a747:	lea    0x1(%rdx),%r13
  44a74b:	je     44a770 <X509_get0_pubkey_bitstr@plt+0x33da0>
  44a74d:	mov    %rbp,%rdi
  44a750:	callq  415330 <RAND_egd@plt>
  44a755:	test   %eax,%eax
  44a757:	jle    44a790 <X509_get0_pubkey_bitstr@plt+0x33dc0>
  44a759:	cltq   
  44a75b:	add    %rax,%r12
  44a75e:	test   %bl,%bl
  44a760:	je     44a770 <X509_get0_pubkey_bitstr@plt+0x33da0>
  44a762:	mov    %r13,%rbp
  44a765:	jmp    44a720 <X509_get0_pubkey_bitstr@plt+0x33d50>
  44a767:	nopw   0x0(%rax,%rax,1)
  44a770:	cmp    $0x200,%r12
  44a777:	jle    44a77e <X509_get0_pubkey_bitstr@plt+0x33dae>
  44a779:	callq  44a700 <X509_get0_pubkey_bitstr@plt+0x33d30>
  44a77e:	add    $0x8,%rsp
  44a782:	mov    %r12,%rax
  44a785:	pop    %rbx
  44a786:	pop    %rbp
  44a787:	pop    %r12
  44a789:	pop    %r13
  44a78b:	retq   
  44a78c:	nopl   0x0(%rax)
  44a790:	mov    $0xffffffffffffffff,%rsi
  44a797:	mov    %rbp,%rdi
  44a79a:	callq  413010 <RAND_load_file@plt>
  44a79f:	jmp    44a759 <X509_get0_pubkey_bitstr@plt+0x33d89>
  44a7a1:	nopw   %cs:0x0(%rax,%rax,1)
  44a7ab:	nopl   0x0(%rax,%rax,1)
  44a7b0:	push   %r15
  44a7b2:	push   %r14
  44a7b4:	push   %r13
  44a7b6:	push   %r12
  44a7b8:	push   %rbp
  44a7b9:	mov    %rsi,%rbp
  44a7bc:	mov    $0x1,%esi
  44a7c1:	push   %rbx
  44a7c2:	mov    %edi,%ebx
  44a7c4:	mov    $0xd,%edi
  44a7c9:	sub    $0x8,%rsp
  44a7cd:	callq  414ee0 <signal@plt>
  44a7d2:	lea    0x230567(%rip),%rax        # 67ad40 <_edata+0x38>
  44a7d9:	cmpq   $0x0,(%rax)
  44a7dd:	je     44aaca <X509_get0_pubkey_bitstr@plt+0x340fa>
  44a7e3:	xor    %r9d,%r9d
  44a7e6:	cmp    $0x1,%ebx
  44a7e9:	sete   %r9b
  44a7ed:	cmp    $0x1,%ebx
  44a7f0:	jle    44ab0b <X509_get0_pubkey_bitstr@plt+0x3413b>
  44a7f6:	sub    $0x2,%ebx
  44a7f9:	lea    0x8(%rbp),%rax
  44a7fd:	xor    %r13d,%r13d
  44a800:	lea    0x10(%rbp,%rbx,8),%rsi
  44a805:	xor    %r12d,%r12d
  44a808:	xor    %ebp,%ebp
  44a80a:	xor    %r15d,%r15d
  44a80d:	xor    %r14d,%r14d
  44a810:	xor    %ebx,%ebx
  44a812:	nopw   0x0(%rax,%rax,1)
  44a818:	mov    (%rax),%rdx
  44a81b:	cmpb   $0x2d,(%rdx)
  44a81e:	je     44a850 <X509_get0_pubkey_bitstr@plt+0x33e80>
  44a820:	lea    0x230519(%rip),%rax        # 67ad40 <_edata+0x38>
  44a827:	lea    0x21ae2(%rip),%rsi        # 46c310 <_fini+0xee0c>
  44a82e:	mov    (%rax),%rdi
  44a831:	xor    %eax,%eax
  44a833:	callq  413c40 <BIO_printf@plt>
  44a838:	mov    $0x1,%eax
  44a83d:	nopl   (%rax)
  44a840:	add    $0x8,%rsp
  44a844:	pop    %rbx
  44a845:	pop    %rbp
  44a846:	pop    %r12
  44a848:	pop    %r13
  44a84a:	pop    %r14
  44a84c:	pop    %r15
  44a84e:	retq   
  44a84f:	nop
  44a850:	movzbl 0x1(%rdx),%ecx
  44a854:	cmp    $0x76,%cl
  44a857:	je     44a928 <X509_get0_pubkey_bitstr@plt+0x33f58>
  44a85d:	cmp    $0x62,%cl
  44a860:	jne    44ab20 <X509_get0_pubkey_bitstr@plt+0x34150>
  44a866:	cmpb   $0x0,0x2(%rdx)
  44a86a:	jne    44a820 <X509_get0_pubkey_bitstr@plt+0x33e50>
  44a86c:	mov    $0x1,%r14d
  44a872:	add    $0x8,%rax
  44a876:	cmp    %rsi,%rax
  44a879:	jne    44a818 <X509_get0_pubkey_bitstr@plt+0x33e48>
  44a87b:	test   %r9d,%r9d
  44a87e:	jne    44aa80 <X509_get0_pubkey_bitstr@plt+0x340b0>
  44a884:	test   %r14d,%r14d
  44a887:	jne    44aa60 <X509_get0_pubkey_bitstr@plt+0x34090>
  44a88d:	test   %r12d,%r12d
  44a890:	jne    44aa48 <X509_get0_pubkey_bitstr@plt+0x34078>
  44a896:	test   %r15d,%r15d
  44a899:	jne    44a980 <X509_get0_pubkey_bitstr@plt+0x33fb0>
  44a89f:	test   %ebx,%ebx
  44a8a1:	jne    44a960 <X509_get0_pubkey_bitstr@plt+0x33f90>
  44a8a7:	test   %ebp,%ebp
  44a8a9:	jne    44a940 <X509_get0_pubkey_bitstr@plt+0x33f70>
  44a8af:	xor    %eax,%eax
  44a8b1:	test   %r13d,%r13d
  44a8b4:	je     44a840 <X509_get0_pubkey_bitstr@plt+0x33e70>
  44a8b6:	lea    0x21a8a(%rip),%rsi        # 46c347 <_fini+0xee43>
  44a8bd:	mov    $0x1,%edi
  44a8c2:	callq  412780 <__printf_chk@plt>
  44a8c7:	callq  413240 <ENGINE_get_first@plt>
  44a8cc:	test   %rax,%rax
  44a8cf:	mov    %rax,%rbx
  44a8d2:	je     44a906 <X509_get0_pubkey_bitstr@plt+0x33f36>
  44a8d4:	nopl   0x0(%rax)
  44a8d8:	mov    %rbx,%rdi
  44a8db:	callq  4130f0 <ENGINE_get_id@plt>
  44a8e0:	lea    0x1f548(%rip),%rsi        # 469e2f <_fini+0xc92b>
  44a8e7:	mov    %rax,%rdx
  44a8ea:	mov    $0x1,%edi
  44a8ef:	xor    %eax,%eax
  44a8f1:	callq  412780 <__printf_chk@plt>
  44a8f6:	mov    %rbx,%rdi
  44a8f9:	callq  415880 <ENGINE_get_next@plt>
  44a8fe:	test   %rax,%rax
  44a901:	mov    %rax,%rbx
  44a904:	jne    44a8d8 <X509_get0_pubkey_bitstr@plt+0x33f08>
  44a906:	mov    $0xa,%edi
  44a90b:	callq  415570 <putchar@plt>
  44a910:	add    $0x8,%rsp
  44a914:	xor    %eax,%eax
  44a916:	pop    %rbx
  44a917:	pop    %rbp
  44a918:	pop    %r12
  44a91a:	pop    %r13
  44a91c:	pop    %r14
  44a91e:	pop    %r15
  44a920:	retq   
  44a921:	nopl   0x0(%rax)
  44a928:	cmpb   $0x0,0x2(%rdx)
  44a92c:	jne    44a820 <X509_get0_pubkey_bitstr@plt+0x33e50>
  44a932:	mov    $0x1,%r9d
  44a938:	jmpq   44a872 <X509_get0_pubkey_bitstr@plt+0x33ea2>
  44a93d:	nopl   (%rax)
  44a940:	mov    $0x5,%edi
  44a945:	callq  415d80 <SSLeay_version@plt>
  44a94a:	mov    %rax,%rdi
  44a94d:	callq  415a40 <puts@plt>
  44a952:	jmpq   44a8af <X509_get0_pubkey_bitstr@plt+0x33edf>
  44a957:	nopw   0x0(%rax,%rax,1)
  44a960:	mov    $0x2,%edi
  44a965:	callq  415d80 <SSLeay_version@plt>
  44a96a:	mov    %rax,%rdi
  44a96d:	callq  415a40 <puts@plt>
  44a972:	jmpq   44a8a7 <X509_get0_pubkey_bitstr@plt+0x33ed7>
  44a977:	nopw   0x0(%rax,%rax,1)
  44a980:	lea    0x219b5(%rip),%rsi        # 46c33c <_fini+0xee38>
  44a987:	mov    $0x1,%edi
  44a98c:	xor    %eax,%eax
  44a98e:	callq  412780 <__printf_chk@plt>
  44a993:	callq  4159b0 <BN_options@plt>
  44a998:	lea    0x1f490(%rip),%rsi        # 469e2f <_fini+0xc92b>
  44a99f:	mov    %rax,%rdx
  44a9a2:	mov    $0x1,%edi
  44a9a7:	xor    %eax,%eax
  44a9a9:	callq  412780 <__printf_chk@plt>
  44a9ae:	callq  4163e0 <MD2_options@plt>
  44a9b3:	lea    0x1f475(%rip),%rsi        # 469e2f <_fini+0xc92b>
  44a9ba:	mov    %rax,%rdx
  44a9bd:	mov    $0x1,%edi
  44a9c2:	xor    %eax,%eax
  44a9c4:	callq  412780 <__printf_chk@plt>
  44a9c9:	callq  4127d0 <RC4_options@plt>
  44a9ce:	lea    0x1f45a(%rip),%rsi        # 469e2f <_fini+0xc92b>
  44a9d5:	mov    %rax,%rdx
  44a9d8:	mov    $0x1,%edi
  44a9dd:	xor    %eax,%eax
  44a9df:	callq  412780 <__printf_chk@plt>
  44a9e4:	callq  4157c0 <DES_options@plt>
  44a9e9:	lea    0x1f43f(%rip),%rsi        # 469e2f <_fini+0xc92b>
  44a9f0:	mov    %rax,%rdx
  44a9f3:	mov    $0x1,%edi
  44a9f8:	xor    %eax,%eax
  44a9fa:	callq  412780 <__printf_chk@plt>
  44a9ff:	callq  415be0 <idea_options@plt>
  44aa04:	lea    0x1f424(%rip),%rsi        # 469e2f <_fini+0xc92b>
  44aa0b:	mov    %rax,%rdx
  44aa0e:	mov    $0x1,%edi
  44aa13:	xor    %eax,%eax
  44aa15:	callq  412780 <__printf_chk@plt>
  44aa1a:	callq  412c90 <BF_options@plt>
  44aa1f:	lea    0x1f409(%rip),%rsi        # 469e2f <_fini+0xc92b>
  44aa26:	mov    %rax,%rdx
  44aa29:	mov    $0x1,%edi
  44aa2e:	xor    %eax,%eax
  44aa30:	callq  412780 <__printf_chk@plt>
  44aa35:	mov    $0xa,%edi
  44aa3a:	callq  415570 <putchar@plt>
  44aa3f:	jmpq   44a89f <X509_get0_pubkey_bitstr@plt+0x33ecf>
  44aa44:	nopl   0x0(%rax)
  44aa48:	mov    $0x4,%edi
  44aa4d:	callq  415d80 <SSLeay_version@plt>
  44aa52:	mov    %rax,%rdi
  44aa55:	callq  415a40 <puts@plt>
  44aa5a:	jmpq   44a896 <X509_get0_pubkey_bitstr@plt+0x33ec6>
  44aa5f:	nop
  44aa60:	mov    $0x3,%edi
  44aa65:	callq  415d80 <SSLeay_version@plt>
  44aa6a:	mov    %rax,%rdi
  44aa6d:	callq  415a40 <puts@plt>
  44aa72:	jmpq   44a88d <X509_get0_pubkey_bitstr@plt+0x33ebd>
  44aa77:	nopw   0x0(%rax,%rax,1)
  44aa80:	callq  4139f0 <SSLeay@plt>
  44aa85:	xor    %edi,%edi
  44aa87:	cmp    $0x1000105f,%rax
  44aa8d:	je     44aab6 <X509_get0_pubkey_bitstr@plt+0x340e6>
  44aa8f:	callq  415d80 <SSLeay_version@plt>
  44aa94:	lea    0x218bd(%rip),%rdx        # 46c358 <_fini+0xee54>
  44aa9b:	lea    0x21888(%rip),%rsi        # 46c32a <_fini+0xee26>
  44aaa2:	mov    %rax,%rcx
  44aaa5:	mov    $0x1,%edi
  44aaaa:	xor    %eax,%eax
  44aaac:	callq  412780 <__printf_chk@plt>
  44aab1:	jmpq   44a884 <X509_get0_pubkey_bitstr@plt+0x33eb4>
  44aab6:	callq  415d80 <SSLeay_version@plt>
  44aabb:	mov    %rax,%rdi
  44aabe:	xchg   %ax,%ax
  44aac0:	callq  415a40 <puts@plt>
  44aac5:	jmpq   44a884 <X509_get0_pubkey_bitstr@plt+0x33eb4>
  44aaca:	callq  4152b0 <BIO_s_file@plt>
  44aacf:	mov    %rax,%rdi
  44aad2:	callq  414a20 <BIO_new@plt>
  44aad7:	lea    0x230262(%rip),%rdi        # 67ad40 <_edata+0x38>
  44aade:	test   %rax,%rax
  44aae1:	mov    %rax,(%rdi)
  44aae4:	je     44a7e3 <X509_get0_pubkey_bitstr@plt+0x33e13>
  44aaea:	mov    0x22b48f(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  44aaf1:	mov    $0x6a,%esi
  44aaf6:	mov    %rax,%rdi
  44aaf9:	mov    (%rdx),%rcx
  44aafc:	mov    $0x10,%edx
  44ab01:	callq  412af0 <BIO_ctrl@plt>
  44ab06:	jmpq   44a7e3 <X509_get0_pubkey_bitstr@plt+0x33e13>
  44ab0b:	xor    %r13d,%r13d
  44ab0e:	xor    %ebp,%ebp
  44ab10:	xor    %r12d,%r12d
  44ab13:	xor    %r15d,%r15d
  44ab16:	xor    %r14d,%r14d
  44ab19:	xor    %ebx,%ebx
  44ab1b:	jmpq   44a87b <X509_get0_pubkey_bitstr@plt+0x33eab>
  44ab20:	cmp    $0x66,%cl
  44ab23:	jne    44ab39 <X509_get0_pubkey_bitstr@plt+0x34169>
  44ab25:	cmpb   $0x0,0x2(%rdx)
  44ab29:	jne    44a820 <X509_get0_pubkey_bitstr@plt+0x33e50>
  44ab2f:	mov    $0x1,%ebx
  44ab34:	jmpq   44a872 <X509_get0_pubkey_bitstr@plt+0x33ea2>
  44ab39:	cmp    $0x6f,%cl
  44ab3c:	jne    44ab53 <X509_get0_pubkey_bitstr@plt+0x34183>
  44ab3e:	cmpb   $0x0,0x2(%rdx)
  44ab42:	jne    44a820 <X509_get0_pubkey_bitstr@plt+0x33e50>
  44ab48:	mov    $0x1,%r15d
  44ab4e:	jmpq   44a872 <X509_get0_pubkey_bitstr@plt+0x33ea2>
  44ab53:	cmp    $0x70,%cl
  44ab56:	jne    44ab6d <X509_get0_pubkey_bitstr@plt+0x3419d>
  44ab58:	cmpb   $0x0,0x2(%rdx)
  44ab5c:	jne    44a820 <X509_get0_pubkey_bitstr@plt+0x33e50>
  44ab62:	mov    $0x1,%r12d
  44ab68:	jmpq   44a872 <X509_get0_pubkey_bitstr@plt+0x33ea2>
  44ab6d:	cmp    $0x64,%cl
  44ab70:	jne    44ab86 <X509_get0_pubkey_bitstr@plt+0x341b6>
  44ab72:	cmpb   $0x0,0x2(%rdx)
  44ab76:	jne    44a820 <X509_get0_pubkey_bitstr@plt+0x33e50>
  44ab7c:	mov    $0x1,%ebp
  44ab81:	jmpq   44a872 <X509_get0_pubkey_bitstr@plt+0x33ea2>
  44ab86:	cmp    $0x61,%cl
  44ab89:	jne    44a820 <X509_get0_pubkey_bitstr@plt+0x33e50>
  44ab8f:	cmpb   $0x0,0x2(%rdx)
  44ab93:	jne    44a820 <X509_get0_pubkey_bitstr@plt+0x33e50>
  44ab99:	mov    $0x1,%r13d
  44ab9f:	mov    $0x1,%ebp
  44aba4:	mov    $0x1,%r12d
  44abaa:	mov    $0x1,%r15d
  44abb0:	mov    $0x1,%r14d
  44abb6:	mov    $0x1,%r9d
  44abbc:	jmpq   44ab2f <X509_get0_pubkey_bitstr@plt+0x3415f>
  44abc1:	nopw   %cs:0x0(%rax,%rax,1)
  44abcb:	nopl   0x0(%rax,%rax,1)
  44abd0:	push   %r15
  44abd2:	push   %r14
  44abd4:	push   %r13
  44abd6:	push   %r12
  44abd8:	push   %rbp
  44abd9:	mov    %edi,%ebp
  44abdb:	mov    $0xd,%edi
  44abe0:	push   %rbx
  44abe1:	mov    %rsi,%rbx
  44abe4:	mov    $0x1,%esi
  44abe9:	sub    $0x38,%rsp
  44abed:	callq  414ee0 <signal@plt>
  44abf2:	lea    0x230147(%rip),%r13        # 67ad40 <_edata+0x38>
  44abf9:	cmpq   $0x0,0x0(%r13)
  44abfe:	je     44af51 <X509_get0_pubkey_bitstr@plt+0x34581>
  44ac04:	lea    -0x1(%rbp),%r15d
  44ac08:	lea    0x8(%rbx),%rax
  44ac0c:	test   %r15d,%r15d
  44ac0f:	jle    44b012 <X509_get0_pubkey_bitstr@plt+0x34642>
  44ac15:	mov    $0x3,%r12d
  44ac1b:	movl   $0x0,0x1c(%rsp)
  44ac23:	movl   $0x0,0x2c(%rsp)
  44ac2b:	mov    %r12d,%esi
  44ac2e:	movl   $0x0,0x28(%rsp)
  44ac36:	mov    %r15d,%r12d
  44ac39:	movq   $0x0,0x20(%rsp)
  44ac42:	movq   $0x0,0x10(%rsp)
  44ac4b:	lea    0x1308d(%rip),%rbp        # 45dcdf <_fini+0x7db>
  44ac52:	movq   $0x0,0x8(%rsp)
  44ac5b:	movl   $0x3,0x4(%rsp)
  44ac63:	mov    $0x8,%ebx
  44ac68:	movl   $0x0,0x18(%rsp)
  44ac70:	mov    %rax,%r9
  44ac73:	mov    %esi,%r15d
  44ac76:	jmp    44aca7 <X509_get0_pubkey_bitstr@plt+0x342d7>
  44ac78:	nopl   0x0(%rax,%rax,1)
  44ac80:	sub    $0x1,%r12d
  44ac84:	je     44ae90 <X509_get0_pubkey_bitstr@plt+0x344c0>
  44ac8a:	mov    0x8(%r9),%rdi
  44ac8e:	lea    0x8(%r9),%r14
  44ac92:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  44ac97:	mov    %eax,%r15d
  44ac9a:	sub    $0x1,%r12d
  44ac9e:	lea    0x8(%r14),%r9
  44aca2:	test   %r12d,%r12d
  44aca5:	jle    44acf6 <X509_get0_pubkey_bitstr@plt+0x34326>
  44aca7:	mov    (%r9),%rdx
  44acaa:	mov    %rbp,%rdi
  44acad:	mov    %rbx,%rcx
  44acb0:	mov    %rdx,%rsi
  44acb3:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44acb5:	je     44ac80 <X509_get0_pubkey_bitstr@plt+0x342b0>
  44acb7:	lea    0x134d2(%rip),%rdi        # 45e190 <_fini+0xc8c>
  44acbe:	mov    $0x9,%ecx
  44acc3:	mov    %rdx,%rsi
  44acc6:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44acc8:	jne    44add0 <X509_get0_pubkey_bitstr@plt+0x34400>
  44acce:	sub    $0x1,%r12d
  44acd2:	je     44ae90 <X509_get0_pubkey_bitstr@plt+0x344c0>
  44acd8:	mov    0x8(%r9),%rdi
  44acdc:	lea    0x8(%r9),%r14
  44ace0:	sub    $0x1,%r12d
  44ace4:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  44ace9:	test   %r12d,%r12d
  44acec:	mov    %eax,0x4(%rsp)
  44acf0:	lea    0x8(%r14),%r9
  44acf4:	jg     44aca7 <X509_get0_pubkey_bitstr@plt+0x342d7>
  44acf6:	callq  416990 <ERR_load_crypto_strings@plt>
  44acfb:	callq  4152b0 <BIO_s_file@plt>
  44ad00:	mov    %rax,%rdi
  44ad03:	mov    %r15d,%r12d
  44ad06:	callq  414a20 <BIO_new@plt>
  44ad0b:	test   %rax,%rax
  44ad0e:	mov    %rax,%rbp
  44ad11:	je     44b1ff <X509_get0_pubkey_bitstr@plt+0x3482f>
  44ad17:	cmpq   $0x0,0x8(%rsp)
  44ad1d:	je     44b068 <X509_get0_pubkey_bitstr@plt+0x34698>
  44ad23:	mov    0x8(%rsp),%rcx
  44ad28:	mov    $0x3,%edx
  44ad2d:	mov    $0x6c,%esi
  44ad32:	mov    %rbp,%rdi
  44ad35:	callq  412af0 <BIO_ctrl@plt>
  44ad3a:	test   %rax,%rax
  44ad3d:	jle    44b20d <X509_get0_pubkey_bitstr@plt+0x3483d>
  44ad43:	cmp    $0x1,%r12d
  44ad47:	je     44b17f <X509_get0_pubkey_bitstr@plt+0x347af>
  44ad4d:	cmp    $0x3,%r12d
  44ad51:	jne    44b160 <X509_get0_pubkey_bitstr@plt+0x34790>
  44ad57:	xor    %ecx,%ecx
  44ad59:	xor    %edx,%edx
  44ad5b:	xor    %esi,%esi
  44ad5d:	mov    %rbp,%rdi
  44ad60:	callq  414050 <PEM_read_bio_SSL_SESSION@plt>
  44ad65:	mov    %rax,%rbx
  44ad68:	test   %rbx,%rbx
  44ad6b:	je     44b19f <X509_get0_pubkey_bitstr@plt+0x347cf>
  44ad71:	mov    %rbp,%rdi
  44ad74:	callq  413960 <BIO_free@plt>
  44ad79:	mov    %rbx,%rdi
  44ad7c:	callq  4139e0 <SSL_SESSION_get0_peer@plt>
  44ad81:	cmpq   $0x0,0x20(%rsp)
  44ad87:	mov    %rax,%rbp
  44ad8a:	je     44af9b <X509_get0_pubkey_bitstr@plt+0x345cb>
  44ad90:	mov    0x20(%rsp),%rdi
  44ad95:	callq  413470 <strlen@plt>
  44ad9a:	cmp    $0x20,%rax
  44ad9e:	jbe    44af8c <X509_get0_pubkey_bitstr@plt+0x345bc>
  44ada4:	mov    0x0(%r13),%rdi
  44ada8:	lea    0x215e5(%rip),%rsi        # 46c394 <_fini+0xee90>
  44adaf:	xor    %eax,%eax
  44adb1:	callq  413c40 <BIO_printf@plt>
  44adb6:	mov    $0x1,%ebp
  44adbb:	nopl   0x0(%rax,%rax,1)
  44adc0:	mov    %rbx,%rdi
  44adc3:	callq  414e10 <SSL_SESSION_free@plt>
  44adc8:	jmpq   44aecb <X509_get0_pubkey_bitstr@plt+0x344fb>
  44adcd:	nopl   (%rax)
  44add0:	cmpb   $0x2d,(%rdx)
  44add3:	jne    44ae08 <X509_get0_pubkey_bitstr@plt+0x34438>
  44add5:	cmpb   $0x69,0x1(%rdx)
  44add9:	jne    44ae08 <X509_get0_pubkey_bitstr@plt+0x34438>
  44addb:	cmpb   $0x6e,0x2(%rdx)
  44addf:	jne    44ae08 <X509_get0_pubkey_bitstr@plt+0x34438>
  44ade1:	cmpb   $0x0,0x3(%rdx)
  44ade5:	jne    44ae08 <X509_get0_pubkey_bitstr@plt+0x34438>
  44ade7:	sub    $0x1,%r12d
  44adeb:	je     44ae90 <X509_get0_pubkey_bitstr@plt+0x344c0>
  44adf1:	mov    0x8(%r9),%rax
  44adf5:	lea    0x8(%r9),%r14
  44adf9:	mov    %rax,0x8(%rsp)
  44adfe:	jmpq   44ac9a <X509_get0_pubkey_bitstr@plt+0x342ca>
  44ae03:	nopl   0x0(%rax,%rax,1)
  44ae08:	lea    0x13037(%rip),%rdi        # 45de46 <_fini+0x942>
  44ae0f:	mov    $0x5,%ecx
  44ae14:	mov    %rdx,%rsi
  44ae17:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44ae19:	jne    44ae38 <X509_get0_pubkey_bitstr@plt+0x34468>
  44ae1b:	sub    $0x1,%r12d
  44ae1f:	je     44ae90 <X509_get0_pubkey_bitstr@plt+0x344c0>
  44ae21:	mov    0x8(%r9),%rax
  44ae25:	lea    0x8(%r9),%r14
  44ae29:	mov    %rax,0x10(%rsp)
  44ae2e:	jmpq   44ac9a <X509_get0_pubkey_bitstr@plt+0x342ca>
  44ae33:	nopl   0x0(%rax,%rax,1)
  44ae38:	lea    0x13428(%rip),%rdi        # 45e267 <_fini+0xd63>
  44ae3f:	mov    $0x6,%ecx
  44ae44:	mov    %rdx,%rsi
  44ae47:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44ae49:	jne    44aee0 <X509_get0_pubkey_bitstr@plt+0x34510>
  44ae4f:	addl   $0x1,0x18(%rsp)
  44ae54:	mov    %r9,%r14
  44ae57:	mov    0x18(%rsp),%eax
  44ae5b:	mov    %eax,0x1c(%rsp)
  44ae5f:	jmpq   44ac9a <X509_get0_pubkey_bitstr@plt+0x342ca>
  44ae64:	lea    0x1d5bd(%rip),%rdi        # 468428 <_fini+0xaf24>
  44ae6b:	mov    $0x9,%ecx
  44ae70:	mov    %rdx,%rsi
  44ae73:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44ae75:	je     44af35 <X509_get0_pubkey_bitstr@plt+0x34565>
  44ae7b:	mov    0x0(%r13),%rdi
  44ae7f:	lea    0x12ea6(%rip),%rsi        # 45dd2c <_fini+0x828>
  44ae86:	xor    %eax,%eax
  44ae88:	callq  413c40 <BIO_printf@plt>
  44ae8d:	nopl   (%rax)
  44ae90:	mov    0x22fd49(%rip),%rdx        # 67abe0 <_fini+0x21d6dc>
  44ae97:	lea    0x22fd42(%rip),%rbx        # 67abe0 <_fini+0x21d6dc>
  44ae9e:	test   %rdx,%rdx
  44aea1:	je     44aec6 <X509_get0_pubkey_bitstr@plt+0x344f6>
  44aea3:	nopl   0x0(%rax,%rax,1)
  44aea8:	mov    0x0(%r13),%rdi
  44aeac:	lea    0x1fcb1(%rip),%rsi        # 46ab64 <_fini+0xd660>
  44aeb3:	xor    %eax,%eax
  44aeb5:	add    $0x8,%rbx
  44aeb9:	callq  413c40 <BIO_printf@plt>
  44aebe:	mov    (%rbx),%rdx
  44aec1:	test   %rdx,%rdx
  44aec4:	jne    44aea8 <X509_get0_pubkey_bitstr@plt+0x344d8>
  44aec6:	mov    $0x1,%ebp
  44aecb:	add    $0x38,%rsp
  44aecf:	mov    %ebp,%eax
  44aed1:	pop    %rbx
  44aed2:	pop    %rbp
  44aed3:	pop    %r12
  44aed5:	pop    %r13
  44aed7:	pop    %r14
  44aed9:	pop    %r15
  44aedb:	retq   
  44aedc:	nopl   0x0(%rax)
  44aee0:	lea    0x160bb(%rip),%rdi        # 460fa2 <_fini+0x3a9e>
  44aee7:	mov    $0x6,%ecx
  44aeec:	mov    %rdx,%rsi
  44aeef:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44aef1:	je     44af20 <X509_get0_pubkey_bitstr@plt+0x34550>
  44aef3:	lea    0x12ded(%rip),%rdi        # 45dce7 <_fini+0x7e3>
  44aefa:	mov    $0x7,%ecx
  44aeff:	mov    %rdx,%rsi
  44af02:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44af04:	jne    44ae64 <X509_get0_pubkey_bitstr@plt+0x34494>
  44af0a:	addl   $0x1,0x18(%rsp)
  44af0f:	mov    %r9,%r14
  44af12:	mov    0x18(%rsp),%eax
  44af16:	mov    %eax,0x2c(%rsp)
  44af1a:	jmpq   44ac9a <X509_get0_pubkey_bitstr@plt+0x342ca>
  44af1f:	nop
  44af20:	addl   $0x1,0x18(%rsp)
  44af25:	mov    %r9,%r14
  44af28:	mov    0x18(%rsp),%eax
  44af2c:	mov    %eax,0x28(%rsp)
  44af30:	jmpq   44ac9a <X509_get0_pubkey_bitstr@plt+0x342ca>
  44af35:	sub    $0x1,%r12d
  44af39:	je     44ae90 <X509_get0_pubkey_bitstr@plt+0x344c0>
  44af3f:	mov    0x8(%r9),%rax
  44af43:	lea    0x8(%r9),%r14
  44af47:	mov    %rax,0x20(%rsp)
  44af4c:	jmpq   44ac9a <X509_get0_pubkey_bitstr@plt+0x342ca>
  44af51:	callq  4152b0 <BIO_s_file@plt>
  44af56:	mov    %rax,%rdi
  44af59:	callq  414a20 <BIO_new@plt>
  44af5e:	test   %rax,%rax
  44af61:	mov    %rax,0x0(%r13)
  44af65:	je     44ac04 <X509_get0_pubkey_bitstr@plt+0x34234>
  44af6b:	mov    0x22b00e(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  44af72:	mov    $0x6a,%esi
  44af77:	mov    %rax,%rdi
  44af7a:	mov    (%rdx),%rcx
  44af7d:	mov    $0x10,%edx
  44af82:	callq  412af0 <BIO_ctrl@plt>
  44af87:	jmpq   44ac04 <X509_get0_pubkey_bitstr@plt+0x34234>
  44af8c:	mov    0x20(%rsp),%rsi
  44af91:	mov    %eax,%edx
  44af93:	mov    %rbx,%rdi
  44af96:	callq  413fa0 <SSL_SESSION_set1_id_context@plt>
  44af9b:	mov    0x2c(%rsp),%edx
  44af9f:	mov    0x1c(%rsp),%ecx
  44afa3:	test   %edx,%edx
  44afa5:	sete   %r12b
  44afa9:	test   %ecx,%ecx
  44afab:	setne  %r14b
  44afaf:	jne    44b086 <X509_get0_pubkey_bitstr@plt+0x346b6>
  44afb5:	xor    %r15d,%r15d
  44afb8:	test   %r12b,%r12b
  44afbb:	jne    44b086 <X509_get0_pubkey_bitstr@plt+0x346b6>
  44afc1:	mov    0x28(%rsp),%eax
  44afc5:	or     0x2c(%rsp),%eax
  44afc9:	jne    44b106 <X509_get0_pubkey_bitstr@plt+0x34736>
  44afcf:	cmpl   $0x1,0x4(%rsp)
  44afd4:	je     44b1eb <X509_get0_pubkey_bitstr@plt+0x3481b>
  44afda:	cmpl   $0x3,0x4(%rsp)
  44afdf:	je     44b1bc <X509_get0_pubkey_bitstr@plt+0x347ec>
  44afe5:	mov    0x0(%r13),%rdi
  44afe9:	lea    0x14380(%rip),%rsi        # 45f370 <_fini+0x1e6c>
  44aff0:	xor    %eax,%eax
  44aff2:	mov    $0x1,%ebp
  44aff7:	callq  413c40 <BIO_printf@plt>
  44affc:	test   %r15,%r15
  44afff:	je     44adc0 <X509_get0_pubkey_bitstr@plt+0x343f0>
  44b005:	mov    %r15,%rdi
  44b008:	callq  416570 <BIO_free_all@plt>
  44b00d:	jmpq   44adc0 <X509_get0_pubkey_bitstr@plt+0x343f0>
  44b012:	callq  416990 <ERR_load_crypto_strings@plt>
  44b017:	callq  4152b0 <BIO_s_file@plt>
  44b01c:	mov    %rax,%rdi
  44b01f:	callq  414a20 <BIO_new@plt>
  44b024:	test   %rax,%rax
  44b027:	mov    %rax,%rbp
  44b02a:	je     44b1ff <X509_get0_pubkey_bitstr@plt+0x3482f>
  44b030:	mov    $0x3,%r12d
  44b036:	movl   $0x3,0x4(%rsp)
  44b03e:	movl   $0x0,0x1c(%rsp)
  44b046:	movq   $0x0,0x10(%rsp)
  44b04f:	movq   $0x0,0x20(%rsp)
  44b058:	movl   $0x0,0x28(%rsp)
  44b060:	movl   $0x0,0x2c(%rsp)
  44b068:	mov    0x22aea1(%rip),%rax        # 675f10 <_fini+0x218a0c>
  44b06f:	xor    %edx,%edx
  44b071:	mov    $0x6a,%esi
  44b076:	mov    %rbp,%rdi
  44b079:	mov    (%rax),%rcx
  44b07c:	callq  412af0 <BIO_ctrl@plt>
  44b081:	jmpq   44ad43 <X509_get0_pubkey_bitstr@plt+0x34373>
  44b086:	callq  4152b0 <BIO_s_file@plt>
  44b08b:	mov    %rax,%rdi
  44b08e:	xchg   %ax,%ax
  44b090:	callq  414a20 <BIO_new@plt>
  44b095:	test   %rax,%rax
  44b098:	mov    %rax,%r15
  44b09b:	je     44b25e <X509_get0_pubkey_bitstr@plt+0x3488e>
  44b0a1:	cmpq   $0x0,0x10(%rsp)
  44b0a7:	je     44b240 <X509_get0_pubkey_bitstr@plt+0x34870>
  44b0ad:	mov    0x10(%rsp),%rcx
  44b0b2:	mov    $0x5,%edx
  44b0b7:	mov    $0x6c,%esi
  44b0bc:	mov    %rax,%rdi
  44b0bf:	callq  412af0 <BIO_ctrl@plt>
  44b0c4:	test   %rax,%rax
  44b0c7:	jle    44b22c <X509_get0_pubkey_bitstr@plt+0x3485c>
  44b0cd:	test   %r14b,%r14b
  44b0d0:	je     44afc1 <X509_get0_pubkey_bitstr@plt+0x345f1>
  44b0d6:	mov    %rbx,%rsi
  44b0d9:	mov    %r15,%rdi
  44b0dc:	callq  416020 <SSL_SESSION_print@plt>
  44b0e1:	mov    0x28(%rsp),%eax
  44b0e5:	test   %eax,%eax
  44b0e7:	je     44afc1 <X509_get0_pubkey_bitstr@plt+0x345f1>
  44b0ed:	test   %rbp,%rbp
  44b0f0:	je     44b26c <X509_get0_pubkey_bitstr@plt+0x3489c>
  44b0f6:	mov    %rbp,%rsi
  44b0f9:	mov    %r15,%rdi
  44b0fc:	callq  414e30 <X509_print@plt>
  44b101:	jmpq   44afc1 <X509_get0_pubkey_bitstr@plt+0x345f1>
  44b106:	test   %rbp,%rbp
  44b109:	je     44b137 <X509_get0_pubkey_bitstr@plt+0x34767>
  44b10b:	test   %r12b,%r12b
  44b10e:	xchg   %ax,%ax
  44b110:	je     44b137 <X509_get0_pubkey_bitstr@plt+0x34767>
  44b112:	cmpl   $0x1,0x4(%rsp)
  44b117:	je     44b21c <X509_get0_pubkey_bitstr@plt+0x3484c>
  44b11d:	cmpl   $0x3,0x4(%rsp)
  44b122:	jne    44afe5 <X509_get0_pubkey_bitstr@plt+0x34615>
  44b128:	mov    %rbp,%rsi
  44b12b:	mov    %r15,%rdi
  44b12e:	callq  413490 <PEM_write_bio_X509@plt>
  44b133:	test   %eax,%eax
  44b135:	je     44b13e <X509_get0_pubkey_bitstr@plt+0x3476e>
  44b137:	xor    %ebp,%ebp
  44b139:	jmpq   44affc <X509_get0_pubkey_bitstr@plt+0x3462c>
  44b13e:	mov    0x0(%r13),%rdi
  44b142:	lea    0x21292(%rip),%rsi        # 46c3db <_fini+0xeed7>
  44b149:	mov    $0x1,%ebp
  44b14e:	callq  413c40 <BIO_printf@plt>
  44b153:	jmpq   44affc <X509_get0_pubkey_bitstr@plt+0x3462c>
  44b158:	nopl   0x0(%rax,%rax,1)
  44b160:	mov    0x0(%r13),%rdi
  44b164:	lea    0x17b7d(%rip),%rsi        # 462ce8 <_fini+0x57e4>
  44b16b:	xor    %eax,%eax
  44b16d:	callq  413c40 <BIO_printf@plt>
  44b172:	mov    %rbp,%rdi
  44b175:	callq  413960 <BIO_free@plt>
  44b17a:	jmpq   44aec6 <X509_get0_pubkey_bitstr@plt+0x344f6>
  44b17f:	mov    0x22adea(%rip),%rsi        # 675f70 <_fini+0x218a6c>
  44b186:	mov    0x22ad93(%rip),%rdi        # 675f20 <_fini+0x218a1c>
  44b18d:	xor    %ecx,%ecx
  44b18f:	mov    %rbp,%rdx
  44b192:	callq  415520 <ASN1_d2i_bio@plt>
  44b197:	mov    %rax,%rbx
  44b19a:	jmpq   44ad68 <X509_get0_pubkey_bitstr@plt+0x34398>
  44b19f:	mov    0x0(%r13),%rdi
  44b1a3:	lea    0x211ce(%rip),%rsi        # 46c378 <_fini+0xee74>
  44b1aa:	xor    %eax,%eax
  44b1ac:	callq  413c40 <BIO_printf@plt>
  44b1b1:	mov    0x0(%r13),%rdi
  44b1b5:	callq  413f40 <ERR_print_errors@plt>
  44b1ba:	jmp    44b172 <X509_get0_pubkey_bitstr@plt+0x347a2>
  44b1bc:	mov    %rbx,%rsi
  44b1bf:	mov    %r15,%rdi
  44b1c2:	callq  416460 <PEM_write_bio_SSL_SESSION@plt>
  44b1c7:	test   %eax,%eax
  44b1c9:	jne    44b137 <X509_get0_pubkey_bitstr@plt+0x34767>
  44b1cf:	mov    0x0(%r13),%rdi
  44b1d3:	lea    0x211e4(%rip),%rsi        # 46c3be <_fini+0xeeba>
  44b1da:	xor    %eax,%eax
  44b1dc:	mov    $0x1,%ebp
  44b1e1:	callq  413c40 <BIO_printf@plt>
  44b1e6:	jmpq   44affc <X509_get0_pubkey_bitstr@plt+0x3462c>
  44b1eb:	mov    0x22ad3e(%rip),%rdi        # 675f30 <_fini+0x218a2c>
  44b1f2:	mov    %rbx,%rdx
  44b1f5:	mov    %r15,%rsi
  44b1f8:	callq  413c70 <ASN1_i2d_bio@plt>
  44b1fd:	jmp    44b1c7 <X509_get0_pubkey_bitstr@plt+0x347f7>
  44b1ff:	mov    0x0(%r13),%rdi
  44b203:	callq  413f40 <ERR_print_errors@plt>
  44b208:	jmpq   44aec6 <X509_get0_pubkey_bitstr@plt+0x344f6>
  44b20d:	mov    0x8(%rsp),%rdi
  44b212:	callq  4142c0 <perror@plt>
  44b217:	jmpq   44b172 <X509_get0_pubkey_bitstr@plt+0x347a2>
  44b21c:	mov    %rbp,%rsi
  44b21f:	mov    %r15,%rdi
  44b222:	callq  412850 <i2d_X509_bio@plt>
  44b227:	jmpq   44b133 <X509_get0_pubkey_bitstr@plt+0x34763>
  44b22c:	mov    0x10(%rsp),%rdi
  44b231:	mov    $0x1,%ebp
  44b236:	callq  4142c0 <perror@plt>
  44b23b:	jmpq   44b005 <X509_get0_pubkey_bitstr@plt+0x34635>
  44b240:	mov    0x22ac71(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  44b247:	xor    %edx,%edx
  44b249:	mov    $0x6a,%esi
  44b24e:	mov    %r15,%rdi
  44b251:	mov    (%rax),%rcx
  44b254:	callq  412af0 <BIO_ctrl@plt>
  44b259:	jmpq   44b0cd <X509_get0_pubkey_bitstr@plt+0x346fd>
  44b25e:	mov    0x0(%r13),%rdi
  44b262:	callq  413f40 <ERR_print_errors@plt>
  44b267:	jmpq   44adb6 <X509_get0_pubkey_bitstr@plt+0x343e6>
  44b26c:	lea    0x21133(%rip),%rsi        # 46c3a6 <_fini+0xeea2>
  44b273:	mov    %r15,%rdi
  44b276:	callq  413b70 <BIO_puts@plt>
  44b27b:	jmpq   44afc1 <X509_get0_pubkey_bitstr@plt+0x345f1>
  44b280:	push   %r15
  44b282:	push   %r14
  44b284:	push   %r13
  44b286:	push   %r12
  44b288:	mov    %edi,%r12d
  44b28b:	push   %rbp
  44b28c:	push   %rbx
  44b28d:	mov    %rsi,%rbx
  44b290:	sub    $0x238,%rsp
  44b297:	mov    %fs:0x28,%rax
  44b2a0:	mov    %rax,0x228(%rsp)
  44b2a8:	xor    %eax,%eax
  44b2aa:	callq  4163d0 <SSLv23_server_method@plt>
  44b2af:	mov    $0x1,%esi
  44b2b4:	mov    $0xd,%edi
  44b2b9:	mov    %rax,%r14
  44b2bc:	callq  414ee0 <signal@plt>
  44b2c1:	lea    0x22fa78(%rip),%rbp        # 67ad40 <_edata+0x38>
  44b2c8:	cmpq   $0x0,0x0(%rbp)
  44b2cd:	je     44b56b <X509_get0_pubkey_bitstr@plt+0x34b9b>
  44b2d3:	mov    0x22abde(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  44b2da:	xor    %esi,%esi
  44b2dc:	mov    (%rax),%rdi
  44b2df:	callq  4161e0 <BIO_new_fp@plt>
  44b2e4:	mov    0x0(%rbp),%rdi
  44b2e8:	xor    %esi,%esi
  44b2ea:	mov    %rax,0x8(%rsp)
  44b2ef:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  44b2f4:	test   %eax,%eax
  44b2f6:	je     44b4b0 <X509_get0_pubkey_bitstr@plt+0x34ae0>
  44b2fc:	cmp    $0x1,%r12d
  44b300:	lea    0x8(%rbx),%r13
  44b304:	jle    44b66b <X509_get0_pubkey_bitstr@plt+0x34c9b>
  44b30a:	sub    $0x2,%r12d
  44b30e:	movq   $0x0,0x18(%rsp)
  44b317:	movl   $0x0,0x10(%rsp)
  44b31f:	lea    0x10(%rbx,%r12,8),%r15
  44b324:	xor    %r12d,%r12d
  44b327:	mov    $0x6,%ebx
  44b32c:	jmp    44b3a9 <X509_get0_pubkey_bitstr@plt+0x349d9>
  44b32e:	xchg   %ax,%ax
  44b330:	lea    0x1d2a8(%rip),%rdi        # 4685df <_fini+0xb0db>
  44b337:	mov    %rax,%rsi
  44b33a:	mov    %rbx,%rcx
  44b33d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44b33f:	je     44b500 <X509_get0_pubkey_bitstr@plt+0x34b30>
  44b345:	lea    0x1d299(%rip),%rdi        # 4685e5 <_fini+0xb0e1>
  44b34c:	mov    %rax,%rsi
  44b34f:	mov    %rbx,%rcx
  44b352:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44b354:	je     44b510 <X509_get0_pubkey_bitstr@plt+0x34b40>
  44b35a:	lea    0x1d28a(%rip),%rdi        # 4685eb <_fini+0xb0e7>
  44b361:	mov    %rax,%rsi
  44b364:	mov    %rbx,%rcx
  44b367:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44b369:	je     44b520 <X509_get0_pubkey_bitstr@plt+0x34b50>
  44b36f:	lea    0x21121(%rip),%rdi        # 46c497 <_fini+0xef93>
  44b376:	mov    $0x2,%ecx
  44b37b:	mov    %rax,%rsi
  44b37e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44b380:	je     44b52d <X509_get0_pubkey_bitstr@plt+0x34b5d>
  44b386:	test   %r9d,%r9d
  44b389:	jne    44b39b <X509_get0_pubkey_bitstr@plt+0x349cb>
  44b38b:	cmpb   $0x3f,0x1(%rax)
  44b38f:	jne    44b39b <X509_get0_pubkey_bitstr@plt+0x349cb>
  44b391:	cmpb   $0x0,0x2(%rax)
  44b395:	je     44b52d <X509_get0_pubkey_bitstr@plt+0x34b5d>
  44b39b:	mov    %rax,0x18(%rsp)
  44b3a0:	add    $0x8,%r13
  44b3a4:	cmp    %r15,%r13
  44b3a7:	je     44b3f5 <X509_get0_pubkey_bitstr@plt+0x34a25>
  44b3a9:	mov    0x0(%r13),%rax
  44b3ad:	movzbl (%rax),%ecx
  44b3b0:	sub    $0x2d,%ecx
  44b3b3:	mov    %ecx,%r9d
  44b3b6:	jne    44b330 <X509_get0_pubkey_bitstr@plt+0x34960>
  44b3bc:	movzbl 0x1(%rax),%esi
  44b3c0:	cmp    $0x76,%sil
  44b3c4:	je     44b4f0 <X509_get0_pubkey_bitstr@plt+0x34b20>
  44b3ca:	cmp    $0x56,%sil
  44b3ce:	jne    44b330 <X509_get0_pubkey_bitstr@plt+0x34960>
  44b3d4:	cmpb   $0x0,0x2(%rax)
  44b3d8:	jne    44b330 <X509_get0_pubkey_bitstr@plt+0x34960>
  44b3de:	movl   $0x1,0x10(%rsp)
  44b3e6:	add    $0x8,%r13
  44b3ea:	mov    $0x1,%r12d
  44b3f0:	cmp    %r15,%r13
  44b3f3:	jne    44b3a9 <X509_get0_pubkey_bitstr@plt+0x349d9>
  44b3f5:	callq  414ce0 <SSL_library_init@plt>
  44b3fa:	mov    %r14,%rdi
  44b3fd:	callq  413890 <SSL_CTX_new@plt>
  44b402:	test   %rax,%rax
  44b405:	mov    %rax,%rbx
  44b408:	je     44b49f <X509_get0_pubkey_bitstr@plt+0x34acf>
  44b40e:	mov    0x18(%rsp),%rsi
  44b413:	test   %rsi,%rsi
  44b416:	je     44b428 <X509_get0_pubkey_bitstr@plt+0x34a58>
  44b418:	mov    %rbx,%rdi
  44b41b:	callq  412c10 <SSL_CTX_set_cipher_list@plt>
  44b420:	test   %eax,%eax
  44b422:	je     44b6b8 <X509_get0_pubkey_bitstr@plt+0x34ce8>
  44b428:	mov    %rbx,%rdi
  44b42b:	callq  413ae0 <SSL_new@plt>
  44b430:	test   %rax,%rax
  44b433:	mov    %rax,%r14
  44b436:	je     44b698 <X509_get0_pubkey_bitstr@plt+0x34cc8>
  44b43c:	test   %r12d,%r12d
  44b43f:	jne    44b5af <X509_get0_pubkey_bitstr@plt+0x34bdf>
  44b445:	xor    %ebp,%ebp
  44b447:	jmp    44b466 <X509_get0_pubkey_bitstr@plt+0x34a96>
  44b449:	nopl   0x0(%rax)
  44b450:	mov    0x8(%rsp),%rdi
  44b455:	lea    0x1f708(%rip),%rsi        # 46ab64 <_fini+0xd660>
  44b45c:	xor    %eax,%eax
  44b45e:	add    $0x1,%ebp
  44b461:	callq  413c40 <BIO_printf@plt>
  44b466:	mov    %ebp,%esi
  44b468:	mov    %r14,%rdi
  44b46b:	callq  413590 <SSL_get_cipher_list@plt>
  44b470:	test   %rax,%rax
  44b473:	mov    %rax,%rdx
  44b476:	je     44b585 <X509_get0_pubkey_bitstr@plt+0x34bb5>
  44b47c:	test   %ebp,%ebp
  44b47e:	je     44b450 <X509_get0_pubkey_bitstr@plt+0x34a80>
  44b480:	mov    0x8(%rsp),%rdi
  44b485:	lea    0x1e8cb(%rip),%rsi        # 469d57 <_fini+0xc853>
  44b48c:	mov    %rax,0x10(%rsp)
  44b491:	xor    %eax,%eax
  44b493:	callq  413c40 <BIO_printf@plt>
  44b498:	mov    0x10(%rsp),%rdx
  44b49d:	jmp    44b450 <X509_get0_pubkey_bitstr@plt+0x34a80>
  44b49f:	callq  412f00 <SSL_load_error_strings@plt>
  44b4a4:	mov    0x0(%rbp),%rdi
  44b4a8:	callq  413f40 <ERR_print_errors@plt>
  44b4ad:	nopl   (%rax)
  44b4b0:	mov    $0x1,%ebx
  44b4b5:	mov    0x8(%rsp),%rdi
  44b4ba:	test   %rdi,%rdi
  44b4bd:	je     44b4c4 <X509_get0_pubkey_bitstr@plt+0x34af4>
  44b4bf:	callq  416570 <BIO_free_all@plt>
  44b4c4:	mov    0x228(%rsp),%rdx
  44b4cc:	xor    %fs:0x28,%rdx
  44b4d5:	mov    %ebx,%eax
  44b4d7:	jne    44b707 <X509_get0_pubkey_bitstr@plt+0x34d37>
  44b4dd:	add    $0x238,%rsp
  44b4e4:	pop    %rbx
  44b4e5:	pop    %rbp
  44b4e6:	pop    %r12
  44b4e8:	pop    %r13
  44b4ea:	pop    %r14
  44b4ec:	pop    %r15
  44b4ee:	retq   
  44b4ef:	nop
  44b4f0:	cmpb   $0x0,0x2(%rax)
  44b4f4:	je     44b3e6 <X509_get0_pubkey_bitstr@plt+0x34a16>
  44b4fa:	jmpq   44b330 <X509_get0_pubkey_bitstr@plt+0x34960>
  44b4ff:	nop
  44b500:	callq  414a90 <SSLv2_client_method@plt>
  44b505:	mov    %rax,%r14
  44b508:	jmpq   44b3a0 <X509_get0_pubkey_bitstr@plt+0x349d0>
  44b50d:	nopl   (%rax)
  44b510:	callq  4169a0 <SSLv3_client_method@plt>
  44b515:	mov    %rax,%r14
  44b518:	jmpq   44b3a0 <X509_get0_pubkey_bitstr@plt+0x349d0>
  44b51d:	nopl   (%rax)
  44b520:	callq  412fd0 <TLSv1_client_method@plt>
  44b525:	mov    %rax,%r14
  44b528:	jmpq   44b3a0 <X509_get0_pubkey_bitstr@plt+0x349d0>
  44b52d:	mov    0x22f70c(%rip),%rdx        # 67ac40 <_fini+0x21d73c>
  44b534:	lea    0x22f705(%rip),%rbx        # 67ac40 <_fini+0x21d73c>
  44b53b:	test   %rdx,%rdx
  44b53e:	je     44b4b0 <X509_get0_pubkey_bitstr@plt+0x34ae0>
  44b544:	nopl   0x0(%rax)
  44b548:	mov    0x0(%rbp),%rdi
  44b54c:	lea    0x1f611(%rip),%rsi        # 46ab64 <_fini+0xd660>
  44b553:	xor    %eax,%eax
  44b555:	add    $0x8,%rbx
  44b559:	callq  413c40 <BIO_printf@plt>
  44b55e:	mov    (%rbx),%rdx
  44b561:	test   %rdx,%rdx
  44b564:	jne    44b548 <X509_get0_pubkey_bitstr@plt+0x34b78>
  44b566:	jmpq   44b4b0 <X509_get0_pubkey_bitstr@plt+0x34ae0>
  44b56b:	mov    0x22aa0e(%rip),%rax        # 675f80 <_fini+0x218a7c>
  44b572:	xor    %esi,%esi
  44b574:	mov    (%rax),%rdi
  44b577:	callq  4161e0 <BIO_new_fp@plt>
  44b57c:	mov    %rax,0x0(%rbp)
  44b580:	jmpq   44b2d3 <X509_get0_pubkey_bitstr@plt+0x34903>
  44b585:	mov    0x8(%rsp),%rdi
  44b58a:	lea    0x1960e(%rip),%rsi        # 464b9f <_fini+0x769b>
  44b591:	xor    %eax,%eax
  44b593:	callq  413c40 <BIO_printf@plt>
  44b598:	mov    %rbx,%rdi
  44b59b:	xor    %ebx,%ebx
  44b59d:	callq  412c50 <SSL_CTX_free@plt>
  44b5a2:	mov    %r14,%rdi
  44b5a5:	callq  413820 <SSL_free@plt>
  44b5aa:	jmpq   44b4b5 <X509_get0_pubkey_bitstr@plt+0x34ae5>
  44b5af:	mov    %rax,%rdi
  44b5b2:	xor    %ebp,%ebp
  44b5b4:	lea    0x20(%rsp),%r15
  44b5b9:	callq  4162f0 <SSL_get_ciphers@plt>
  44b5be:	mov    %rax,%r12
  44b5c1:	jmp    44b5e8 <X509_get0_pubkey_bitstr@plt+0x34c18>
  44b5c3:	nopl   0x0(%rax,%rax,1)
  44b5c8:	mov    $0x200,%edx
  44b5cd:	mov    %r15,%rsi
  44b5d0:	mov    %r13,%rdi
  44b5d3:	callq  415a30 <SSL_CIPHER_description@plt>
  44b5d8:	mov    0x8(%rsp),%rdi
  44b5dd:	mov    %rax,%rsi
  44b5e0:	add    $0x1,%ebp
  44b5e3:	callq  413b70 <BIO_puts@plt>
  44b5e8:	mov    %r12,%rdi
  44b5eb:	callq  4156d0 <sk_num@plt>
  44b5f0:	cmp    %eax,%ebp
  44b5f2:	jge    44b598 <X509_get0_pubkey_bitstr@plt+0x34bc8>
  44b5f4:	mov    %ebp,%esi
  44b5f6:	mov    %r12,%rdi
  44b5f9:	callq  412b30 <sk_value@plt>
  44b5fe:	mov    %rax,%r13
  44b601:	mov    0x10(%rsp),%eax
  44b605:	test   %eax,%eax
  44b607:	je     44b5c8 <X509_get0_pubkey_bitstr@plt+0x34bf8>
  44b609:	mov    %r13,%rdi
  44b60c:	callq  415600 <SSL_CIPHER_get_id@plt>
  44b611:	mov    %rax,%rsi
  44b614:	mov    %rax,%rdx
  44b617:	movzbl %ah,%edi
  44b61a:	and    $0xff000000,%esi
  44b620:	shr    $0x10,%rdx
  44b624:	movzbl %al,%r9d
  44b628:	cmp    $0x2000000,%rsi
  44b62f:	movzbl %dl,%r11d
  44b633:	je     44b6e7 <X509_get0_pubkey_bitstr@plt+0x34d17>
  44b639:	cmp    $0x3000000,%rsi
  44b640:	je     44b6ca <X509_get0_pubkey_bitstr@plt+0x34cfa>
  44b646:	mov    %edi,%r8d
  44b649:	mov    0x8(%rsp),%rdi
  44b64e:	shr    $0x18,%rax
  44b652:	lea    0x20ef7(%rip),%rsi        # 46c550 <_fini+0xf04c>
  44b659:	mov    %rax,%rdx
  44b65c:	mov    %r11d,%ecx
  44b65f:	xor    %eax,%eax
  44b661:	callq  413c40 <BIO_printf@plt>
  44b666:	jmpq   44b5c8 <X509_get0_pubkey_bitstr@plt+0x34bf8>
  44b66b:	callq  414ce0 <SSL_library_init@plt>
  44b670:	mov    %r14,%rdi
  44b673:	callq  413890 <SSL_CTX_new@plt>
  44b678:	test   %rax,%rax
  44b67b:	mov    %rax,%rbx
  44b67e:	je     44b49f <X509_get0_pubkey_bitstr@plt+0x34acf>
  44b684:	mov    %rax,%rdi
  44b687:	callq  413ae0 <SSL_new@plt>
  44b68c:	test   %rax,%rax
  44b68f:	mov    %rax,%r14
  44b692:	jne    44b445 <X509_get0_pubkey_bitstr@plt+0x34a75>
  44b698:	callq  412f00 <SSL_load_error_strings@plt>
  44b69d:	mov    0x0(%rbp),%rdi
  44b6a1:	callq  413f40 <ERR_print_errors@plt>
  44b6a6:	mov    %rbx,%rdi
  44b6a9:	mov    $0x1,%ebx
  44b6ae:	callq  412c50 <SSL_CTX_free@plt>
  44b6b3:	jmpq   44b4b5 <X509_get0_pubkey_bitstr@plt+0x34ae5>
  44b6b8:	mov    0x0(%rbp),%rdi
  44b6bc:	lea    0x20dd7(%rip),%rsi        # 46c49a <_fini+0xef96>
  44b6c3:	callq  413c40 <BIO_printf@plt>
  44b6c8:	jmp    44b698 <X509_get0_pubkey_bitstr@plt+0x34cc8>
  44b6ca:	mov    %edi,%edx
  44b6cc:	mov    0x8(%rsp),%rdi
  44b6d1:	lea    0x20df5(%rip),%rsi        # 46c4cd <_fini+0xefc9>
  44b6d8:	mov    %r9d,%ecx
  44b6db:	xor    %eax,%eax
  44b6dd:	callq  413c40 <BIO_printf@plt>
  44b6e2:	jmpq   44b5c8 <X509_get0_pubkey_bitstr@plt+0x34bf8>
  44b6e7:	mov    %edi,%ecx
  44b6e9:	mov    0x8(%rsp),%rdi
  44b6ee:	lea    0x20dbb(%rip),%rsi        # 46c4b0 <_fini+0xefac>
  44b6f5:	mov    %r9d,%r8d
  44b6f8:	mov    %r11d,%edx
  44b6fb:	xor    %eax,%eax
  44b6fd:	callq  413c40 <BIO_printf@plt>
  44b702:	jmpq   44b5c8 <X509_get0_pubkey_bitstr@plt+0x34bf8>
  44b707:	callq  414c30 <__stack_chk_fail@plt>
  44b70c:	nopl   0x0(%rax)
  44b710:	push   %r15
  44b712:	push   %r14
  44b714:	push   %r13
  44b716:	push   %r12
  44b718:	push   %rbp
  44b719:	mov    %rsi,%rbp
  44b71c:	push   %rbx
  44b71d:	sub    $0x8,%rsp
  44b721:	lea    0x22f618(%rip),%rbx        # 67ad40 <_edata+0x38>
  44b728:	cmpq   $0x0,(%rbx)
  44b72c:	je     44b9f9 <X509_get0_pubkey_bitstr@plt+0x35029>
  44b732:	callq  416990 <ERR_load_crypto_strings@plt>
  44b737:	lea    0x8(%rbp),%r8
  44b73b:	mov    (%r8),%rax
  44b73e:	xor    %r12d,%r12d
  44b741:	xor    %r15d,%r15d
  44b744:	xor    %ebp,%ebp
  44b746:	mov    $0x7,%edx
  44b74b:	mov    $0x5,%r10d
  44b751:	test   %rax,%rax
  44b754:	je     44b7b5 <X509_get0_pubkey_bitstr@plt+0x34de5>
  44b756:	nopw   %cs:0x0(%rax,%rax,1)
  44b760:	cmpb   $0x2d,(%rax)
  44b763:	jne    44b7b5 <X509_get0_pubkey_bitstr@plt+0x34de5>
  44b765:	lea    0x20e7e(%rip),%rdi        # 46c5ea <_fini+0xf0e6>
  44b76c:	mov    %rax,%rsi
  44b76f:	mov    %rdx,%rcx
  44b772:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44b774:	je     44b890 <X509_get0_pubkey_bitstr@plt+0x34ec0>
  44b77a:	cmpb   $0x69,0x1(%rax)
  44b77e:	jne    44b8a0 <X509_get0_pubkey_bitstr@plt+0x34ed0>
  44b784:	cmpb   $0x6e,0x2(%rax)
  44b788:	jne    44b8a0 <X509_get0_pubkey_bitstr@plt+0x34ed0>
  44b78e:	cmpb   $0x0,0x3(%rax)
  44b792:	jne    44b8a0 <X509_get0_pubkey_bitstr@plt+0x34ed0>
  44b798:	mov    0x8(%r8),%rbp
  44b79c:	test   %rbp,%rbp
  44b79f:	je     44b8c0 <X509_get0_pubkey_bitstr@plt+0x34ef0>
  44b7a5:	add    $0x8,%r8
  44b7a9:	add    $0x8,%r8
  44b7ad:	mov    (%r8),%rax
  44b7b0:	test   %rax,%rax
  44b7b3:	jne    44b760 <X509_get0_pubkey_bitstr@plt+0x34d90>
  44b7b5:	test   %rbp,%rbp
  44b7b8:	je     44b9ba <X509_get0_pubkey_bitstr@plt+0x34fea>
  44b7be:	lea    0x12a68(%rip),%rsi        # 45e22d <_fini+0xd29>
  44b7c5:	mov    %rbp,%rdi
  44b7c8:	callq  412ba0 <BIO_new_file@plt>
  44b7cd:	test   %rax,%rax
  44b7d0:	mov    %rax,%r14
  44b7d3:	je     44ba12 <X509_get0_pubkey_bitstr@plt+0x35042>
  44b7d9:	test   %r15,%r15
  44b7dc:	je     44b9e0 <X509_get0_pubkey_bitstr@plt+0x35010>
  44b7e2:	lea    0x17e2f(%rip),%rsi        # 463618 <_fini+0x6114>
  44b7e9:	mov    %r15,%rdi
  44b7ec:	callq  412ba0 <BIO_new_file@plt>
  44b7f1:	test   %rax,%rax
  44b7f4:	mov    %rax,%r13
  44b7f7:	je     44ba36 <X509_get0_pubkey_bitstr@plt+0x35066>
  44b7fd:	test   %r12d,%r12d
  44b800:	jne    44b940 <X509_get0_pubkey_bitstr@plt+0x34f70>
  44b806:	xor    %ecx,%ecx
  44b808:	xor    %edx,%edx
  44b80a:	xor    %esi,%esi
  44b80c:	mov    %r14,%rdi
  44b80f:	callq  413200 <PEM_read_bio_NETSCAPE_CERT_SEQUENCE@plt>
  44b814:	test   %rax,%rax
  44b817:	mov    %rax,%r12
  44b81a:	je     44ba57 <X509_get0_pubkey_bitstr@plt+0x35087>
  44b820:	xor    %ebx,%ebx
  44b822:	jmp    44b850 <X509_get0_pubkey_bitstr@plt+0x34e80>
  44b824:	nopl   0x0(%rax)
  44b828:	mov    0x8(%r12),%rdi
  44b82d:	mov    %ebx,%esi
  44b82f:	add    $0x1,%ebx
  44b832:	callq  412b30 <sk_value@plt>
  44b837:	mov    %r13,%rdi
  44b83a:	mov    %rax,%rbp
  44b83d:	mov    %rax,%rsi
  44b840:	callq  445980 <X509_get0_pubkey_bitstr@plt+0x2efb0>
  44b845:	mov    %rbp,%rsi
  44b848:	mov    %r13,%rdi
  44b84b:	callq  413490 <PEM_write_bio_X509@plt>
  44b850:	mov    0x8(%r12),%rdi
  44b855:	callq  4156d0 <sk_num@plt>
  44b85a:	cmp    %eax,%ebx
  44b85c:	jl     44b828 <X509_get0_pubkey_bitstr@plt+0x34e58>
  44b85e:	xor    %ebx,%ebx
  44b860:	mov    %r14,%rdi
  44b863:	callq  413960 <BIO_free@plt>
  44b868:	mov    %r13,%rdi
  44b86b:	callq  416570 <BIO_free_all@plt>
  44b870:	mov    %r12,%rdi
  44b873:	callq  413b60 <NETSCAPE_CERT_SEQUENCE_free@plt>
  44b878:	add    $0x8,%rsp
  44b87c:	mov    %ebx,%eax
  44b87e:	pop    %rbx
  44b87f:	pop    %rbp
  44b880:	pop    %r12
  44b882:	pop    %r13
  44b884:	pop    %r14
  44b886:	pop    %r15
  44b888:	retq   
  44b889:	nopl   0x0(%rax)
  44b890:	mov    $0x1,%r12d
  44b896:	jmpq   44b7a9 <X509_get0_pubkey_bitstr@plt+0x34dd9>
  44b89b:	nopl   0x0(%rax,%rax,1)
  44b8a0:	lea    0x1259f(%rip),%rdi        # 45de46 <_fini+0x942>
  44b8a7:	mov    %rax,%rsi
  44b8aa:	mov    %r10,%rcx
  44b8ad:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44b8af:	jne    44b8c0 <X509_get0_pubkey_bitstr@plt+0x34ef0>
  44b8b1:	mov    0x8(%r8),%r15
  44b8b5:	test   %r15,%r15
  44b8b8:	jne    44b7a5 <X509_get0_pubkey_bitstr@plt+0x34dd5>
  44b8be:	xchg   %ax,%ax
  44b8c0:	mov    (%rbx),%rdi
  44b8c3:	lea    0x20dc6(%rip),%rsi        # 46c690 <_fini+0xf18c>
  44b8ca:	xor    %eax,%eax
  44b8cc:	callq  413c40 <BIO_printf@plt>
  44b8d1:	mov    (%rbx),%rdi
  44b8d4:	lea    0x20d4d(%rip),%rsi        # 46c628 <_fini+0xf124>
  44b8db:	xor    %eax,%eax
  44b8dd:	callq  413c40 <BIO_printf@plt>
  44b8e2:	mov    (%rbx),%rdi
  44b8e5:	lea    0x12469(%rip),%rsi        # 45dd55 <_fini+0x851>
  44b8ec:	xor    %eax,%eax
  44b8ee:	callq  413c40 <BIO_printf@plt>
  44b8f3:	mov    (%rbx),%rdi
  44b8f6:	lea    0x20d41(%rip),%rsi        # 46c63e <_fini+0xf13a>
  44b8fd:	xor    %eax,%eax
  44b8ff:	callq  413c40 <BIO_printf@plt>
  44b904:	mov    (%rbx),%rdi
  44b907:	lea    0x20d46(%rip),%rsi        # 46c654 <_fini+0xf150>
  44b90e:	xor    %eax,%eax
  44b910:	callq  413c40 <BIO_printf@plt>
  44b915:	mov    (%rbx),%rdi
  44b918:	lea    0x20d99(%rip),%rsi        # 46c6b8 <_fini+0xf1b4>
  44b91f:	xor    %eax,%eax
  44b921:	callq  413c40 <BIO_printf@plt>
  44b926:	add    $0x8,%rsp
  44b92a:	mov    $0x1,%eax
  44b92f:	pop    %rbx
  44b930:	pop    %rbp
  44b931:	pop    %r12
  44b933:	pop    %r13
  44b935:	pop    %r14
  44b937:	pop    %r15
  44b939:	retq   
  44b93a:	nopw   0x0(%rax,%rax,1)
  44b940:	callq  414740 <NETSCAPE_CERT_SEQUENCE_new@plt>
  44b945:	mov    %rax,%r12
  44b948:	callq  412cd0 <sk_new_null@plt>
  44b94d:	mov    %rax,0x8(%r12)
  44b952:	jmp    44b960 <X509_get0_pubkey_bitstr@plt+0x34f90>
  44b954:	nopl   0x0(%rax)
  44b958:	mov    %rax,%rsi
  44b95b:	callq  412fe0 <sk_push@plt>
  44b960:	xor    %ecx,%ecx
  44b962:	xor    %edx,%edx
  44b964:	xor    %esi,%esi
  44b966:	mov    %r14,%rdi
  44b969:	callq  4166a0 <PEM_read_bio_X509@plt>
  44b96e:	test   %rax,%rax
  44b971:	mov    0x8(%r12),%rdi
  44b976:	jne    44b958 <X509_get0_pubkey_bitstr@plt+0x34f88>
  44b978:	callq  4156d0 <sk_num@plt>
  44b97d:	test   %eax,%eax
  44b97f:	jne    44b9a8 <X509_get0_pubkey_bitstr@plt+0x34fd8>
  44b981:	mov    (%rbx),%rdi
  44b984:	lea    0x20c80(%rip),%rsi        # 46c60b <_fini+0xf107>
  44b98b:	mov    %rbp,%rdx
  44b98e:	callq  413c40 <BIO_printf@plt>
  44b993:	mov    (%rbx),%rdi
  44b996:	mov    $0x1,%ebx
  44b99b:	callq  413f40 <ERR_print_errors@plt>
  44b9a0:	jmpq   44b860 <X509_get0_pubkey_bitstr@plt+0x34e90>
  44b9a5:	nopl   (%rax)
  44b9a8:	mov    %r12,%rsi
  44b9ab:	mov    %r13,%rdi
  44b9ae:	xor    %ebx,%ebx
  44b9b0:	callq  414f00 <PEM_write_bio_NETSCAPE_CERT_SEQUENCE@plt>
  44b9b5:	jmpq   44b860 <X509_get0_pubkey_bitstr@plt+0x34e90>
  44b9ba:	mov    0x22a54f(%rip),%rax        # 675f10 <_fini+0x218a0c>
  44b9c1:	xor    %esi,%esi
  44b9c3:	mov    (%rax),%rdi
  44b9c6:	callq  4161e0 <BIO_new_fp@plt>
  44b9cb:	test   %r15,%r15
  44b9ce:	mov    %rax,%r14
  44b9d1:	jne    44b7e2 <X509_get0_pubkey_bitstr@plt+0x34e12>
  44b9d7:	nopw   0x0(%rax,%rax,1)
  44b9e0:	mov    0x22a4d1(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  44b9e7:	xor    %esi,%esi
  44b9e9:	mov    (%rax),%rdi
  44b9ec:	callq  4161e0 <BIO_new_fp@plt>
  44b9f1:	mov    %rax,%r13
  44b9f4:	jmpq   44b7fd <X509_get0_pubkey_bitstr@plt+0x34e2d>
  44b9f9:	mov    0x22a580(%rip),%rax        # 675f80 <_fini+0x218a7c>
  44ba00:	xor    %esi,%esi
  44ba02:	mov    (%rax),%rdi
  44ba05:	callq  4161e0 <BIO_new_fp@plt>
  44ba0a:	mov    %rax,(%rbx)
  44ba0d:	jmpq   44b732 <X509_get0_pubkey_bitstr@plt+0x34d62>
  44ba12:	mov    (%rbx),%rdi
  44ba15:	lea    0x20bd5(%rip),%rsi        # 46c5f1 <_fini+0xf0ed>
  44ba1c:	mov    %rbp,%rdx
  44ba1f:	xor    %eax,%eax
  44ba21:	mov    $0x1,%ebx
  44ba26:	xor    %r12d,%r12d
  44ba29:	xor    %r13d,%r13d
  44ba2c:	callq  413c40 <BIO_printf@plt>
  44ba31:	jmpq   44b860 <X509_get0_pubkey_bitstr@plt+0x34e90>
  44ba36:	mov    (%rbx),%rdi
  44ba39:	lea    0x1a92b(%rip),%rsi        # 46636b <_fini+0x8e67>
  44ba40:	mov    %r15,%rdx
  44ba43:	xor    %eax,%eax
  44ba45:	mov    $0x1,%ebx
  44ba4a:	xor    %r12d,%r12d
  44ba4d:	callq  413c40 <BIO_printf@plt>
  44ba52:	jmpq   44b860 <X509_get0_pubkey_bitstr@plt+0x34e90>
  44ba57:	mov    (%rbx),%rdi
  44ba5a:	lea    0x20c0f(%rip),%rsi        # 46c670 <_fini+0xf16c>
  44ba61:	mov    %rbp,%rdx
  44ba64:	xor    %eax,%eax
  44ba66:	callq  413c40 <BIO_printf@plt>
  44ba6b:	mov    (%rbx),%rdi
  44ba6e:	mov    $0x1,%ebx
  44ba73:	callq  413f40 <ERR_print_errors@plt>
  44ba78:	jmpq   44b860 <X509_get0_pubkey_bitstr@plt+0x34e90>
  44ba7d:	nopl   (%rax)
  44ba80:	push   %r13
  44ba82:	xor    %ecx,%ecx
  44ba84:	push   %r12
  44ba86:	mov    %rdx,%r12
  44ba89:	mov    %rdi,%rdx
  44ba8c:	push   %rbp
  44ba8d:	push   %rbx
  44ba8e:	sub    $0x108,%rsp
  44ba95:	mov    %rsp,%rdi
  44ba98:	mov    %rsp,%rbx
  44ba9b:	mov    %fs:0x28,%rax
  44baa4:	mov    %rax,0xf8(%rsp)
  44baac:	xor    %eax,%eax
  44baae:	callq  413380 <X509_STORE_CTX_init@plt>
  44bab3:	mov    %rsp,%rdi
  44bab6:	callq  413610 <X509_verify_cert@plt>
  44babb:	test   %eax,%eax
  44babd:	mov    %rsp,%rdi
  44bac0:	jle    44bb00 <X509_get0_pubkey_bitstr@plt+0x35130>
  44bac2:	callq  416560 <X509_STORE_CTX_get1_chain@plt>
  44bac7:	xor    %ebp,%ebp
  44bac9:	mov    %rax,%r13
  44bacc:	mov    %rbx,%rdi
  44bacf:	callq  413780 <X509_STORE_CTX_cleanup@plt>
  44bad4:	mov    0xf8(%rsp),%rcx
  44badc:	xor    %fs:0x28,%rcx
  44bae5:	mov    %r13,(%r12)
  44bae9:	mov    %ebp,%eax
  44baeb:	jne    44bb17 <X509_get0_pubkey_bitstr@plt+0x35147>
  44baed:	add    $0x108,%rsp
  44baf4:	pop    %rbx
  44baf5:	pop    %rbp
  44baf6:	pop    %r12
  44baf8:	pop    %r13
  44bafa:	retq   
  44bafb:	nopl   0x0(%rax,%rax,1)
  44bb00:	callq  415050 <X509_STORE_CTX_get_error@plt>
  44bb05:	test   %eax,%eax
  44bb07:	mov    %eax,%ebp
  44bb09:	je     44bb10 <X509_get0_pubkey_bitstr@plt+0x35140>
  44bb0b:	xor    %r13d,%r13d
  44bb0e:	jmp    44bacc <X509_get0_pubkey_bitstr@plt+0x350fc>
  44bb10:	mov    $0xffffffff,%ebp
  44bb15:	jmp    44bb0b <X509_get0_pubkey_bitstr@plt+0x3513b>
  44bb17:	callq  414c30 <__stack_chk_fail@plt>
  44bb1c:	nopl   0x0(%rax)
  44bb20:	push   %r12
  44bb22:	xor    %edi,%edi
  44bb24:	push   %rbp
  44bb25:	mov    %rsi,%rbp
  44bb28:	push   %rbx
  44bb29:	sub    $0x10,%rsp
  44bb2d:	mov    %fs:0x28,%rax
  44bb36:	mov    %rax,0x8(%rsp)
  44bb3b:	xor    %eax,%eax
  44bb3d:	mov    0x8(%rsi),%rax
  44bb41:	mov    %rsp,%rsi
  44bb44:	mov    0x8(%rax),%rax
  44bb48:	mov    0x8(%rax),%rdx
  44bb4c:	mov    %rdx,(%rsp)
  44bb50:	movslq (%rax),%rdx
  44bb53:	callq  413a20 <d2i_PBEPARAM@plt>
  44bb58:	test   %rax,%rax
  44bb5b:	mov    %rax,%rbx
  44bb5e:	je     44bba2 <X509_get0_pubkey_bitstr@plt+0x351d2>
  44bb60:	mov    0x8(%rax),%rdi
  44bb64:	callq  415a60 <ASN1_INTEGER_get@plt>
  44bb69:	mov    0x0(%rbp),%rdi
  44bb6d:	mov    %rax,%r12
  44bb70:	callq  4167f0 <OBJ_obj2nid@plt>
  44bb75:	mov    %eax,%edi
  44bb77:	callq  413920 <OBJ_nid2ln@plt>
  44bb7c:	mov    %rax,%rdx
  44bb7f:	lea    0x22f1ba(%rip),%rax        # 67ad40 <_edata+0x38>
  44bb86:	lea    0x20b68(%rip),%rsi        # 46c6f5 <_fini+0xf1f1>
  44bb8d:	mov    %r12,%rcx
  44bb90:	mov    (%rax),%rdi
  44bb93:	xor    %eax,%eax
  44bb95:	callq  413c40 <BIO_printf@plt>
  44bb9a:	mov    %rbx,%rdi
  44bb9d:	callq  415ea0 <PBEPARAM_free@plt>
  44bba2:	mov    0x8(%rsp),%rcx
  44bba7:	xor    %fs:0x28,%rcx
  44bbb0:	mov    $0x1,%eax
  44bbb5:	jne    44bbc0 <X509_get0_pubkey_bitstr@plt+0x351f0>
  44bbb7:	add    $0x10,%rsp
  44bbbb:	pop    %rbx
  44bbbc:	pop    %rbp
  44bbbd:	pop    %r12
  44bbbf:	retq   
  44bbc0:	callq  414c30 <__stack_chk_fail@plt>
  44bbc5:	data32 nopw %cs:0x0(%rax,%rax,1)
  44bbd0:	push   %r12
  44bbd2:	mov    %rsi,%r12
  44bbd5:	push   %rbp
  44bbd6:	mov    %rdi,%rbp
  44bbd9:	push   %rbx
  44bbda:	xor    %ebx,%ebx
  44bbdc:	jmp    44bbf0 <X509_get0_pubkey_bitstr@plt+0x35220>
  44bbde:	xchg   %ax,%ax
  44bbe0:	mov    %rax,%rsi
  44bbe3:	mov    %r12,%rdi
  44bbe6:	mov    $0x1,%ebx
  44bbeb:	callq  412fe0 <sk_push@plt>
  44bbf0:	xor    %ecx,%ecx
  44bbf2:	xor    %edx,%edx
  44bbf4:	xor    %esi,%esi
  44bbf6:	mov    %rbp,%rdi
  44bbf9:	callq  4166a0 <PEM_read_bio_X509@plt>
  44bbfe:	test   %rax,%rax
  44bc01:	jne    44bbe0 <X509_get0_pubkey_bitstr@plt+0x35210>
  44bc03:	test   %ebx,%ebx
  44bc05:	je     44bc0c <X509_get0_pubkey_bitstr@plt+0x3523c>
  44bc07:	callq  412890 <ERR_clear_error@plt>
  44bc0c:	mov    %ebx,%eax
  44bc0e:	pop    %rbx
  44bc0f:	pop    %rbp
  44bc10:	pop    %r12
  44bc12:	retq   
  44bc13:	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  44bc20:	test   %edx,%edx
  44bc22:	jle    44bc61 <X509_get0_pubkey_bitstr@plt+0x35291>
  44bc24:	push   %r12
  44bc26:	sub    $0x1,%edx
  44bc29:	lea    0x1(%rsi,%rdx,1),%r12
  44bc2e:	push   %rbp
  44bc2f:	mov    %rdi,%rbp
  44bc32:	push   %rbx
  44bc33:	mov    %rsi,%rbx
  44bc36:	nopw   %cs:0x0(%rax,%rax,1)
  44bc40:	movzbl (%rbx),%edx
  44bc43:	lea    0x20abe(%rip),%rsi        # 46c708 <_fini+0xf204>
  44bc4a:	xor    %eax,%eax
  44bc4c:	mov    %rbp,%rdi
  44bc4f:	add    $0x1,%rbx
  44bc53:	callq  413c40 <BIO_printf@plt>
  44bc58:	cmp    %r12,%rbx
  44bc5b:	jne    44bc40 <X509_get0_pubkey_bitstr@plt+0x35270>
  44bc5d:	pop    %rbx
  44bc5e:	pop    %rbp
  44bc5f:	pop    %r12
  44bc61:	repz retq 
  44bc63:	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  44bc70:	push   %r14
  44bc72:	test   %rsi,%rsi
  44bc75:	push   %r13
  44bc77:	mov    %rsi,%r13
  44bc7a:	push   %r12
  44bc7c:	push   %rbp
  44bc7d:	mov    %rdi,%rbp
  44bc80:	push   %rbx
  44bc81:	mov    %rdx,%rbx
  44bc84:	je     44bde0 <X509_get0_pubkey_bitstr@plt+0x35410>
  44bc8a:	mov    %rsi,%rdi
  44bc8d:	callq  4156d0 <sk_num@plt>
  44bc92:	test   %eax,%eax
  44bc94:	mov    %rbx,%rdx
  44bc97:	je     44be38 <X509_get0_pubkey_bitstr@plt+0x35468>
  44bc9d:	lea    0x14b15(%rip),%rsi        # 4607b9 <_fini+0x32b5>
  44bca4:	mov    %rbp,%rdi
  44bca7:	xor    %eax,%eax
  44bca9:	xor    %ebx,%ebx
  44bcab:	callq  413c40 <BIO_printf@plt>
  44bcb0:	jmp    44bd2b <X509_get0_pubkey_bitstr@plt+0x3535b>
  44bcb2:	nopw   0x0(%rax,%rax,1)
  44bcb8:	mov    (%r12),%rsi
  44bcbc:	mov    %rbp,%rdi
  44bcbf:	callq  413000 <i2a_ASN1_OBJECT@plt>
  44bcc4:	lea    0x19f88(%rip),%rsi        # 465c53 <_fini+0x874f>
  44bccb:	mov    %rbp,%rdi
  44bcce:	xor    %eax,%eax
  44bcd0:	callq  413c40 <BIO_printf@plt>
  44bcd5:	mov    0x10(%r12),%rdi
  44bcda:	callq  4156d0 <sk_num@plt>
  44bcdf:	test   %eax,%eax
  44bce1:	je     44bd9b <X509_get0_pubkey_bitstr@plt+0x353cb>
  44bce7:	mov    0x10(%r12),%rdi
  44bcec:	xor    %esi,%esi
  44bcee:	callq  412b30 <sk_value@plt>
  44bcf3:	mov    (%rax),%edx
  44bcf5:	cmp    $0x4,%edx
  44bcf8:	je     44bdb8 <X509_get0_pubkey_bitstr@plt+0x353e8>
  44bcfe:	cmp    $0x1e,%edx
  44bd01:	je     44be00 <X509_get0_pubkey_bitstr@plt+0x35430>
  44bd07:	cmp    $0x3,%edx
  44bd0a:	je     44bdb8 <X509_get0_pubkey_bitstr@plt+0x353e8>
  44bd10:	lea    0x20a24(%rip),%rsi        # 46c73b <_fini+0xf237>
  44bd17:	mov    %rbp,%rdi
  44bd1a:	xor    %eax,%eax
  44bd1c:	callq  413c40 <BIO_printf@plt>
  44bd21:	nopl   0x0(%rax)
  44bd28:	add    $0x1,%ebx
  44bd2b:	mov    %r13,%rdi
  44bd2e:	callq  4156d0 <sk_num@plt>
  44bd33:	cmp    %eax,%ebx
  44bd35:	jge    44bdf0 <X509_get0_pubkey_bitstr@plt+0x35420>
  44bd3b:	mov    %ebx,%esi
  44bd3d:	mov    %r13,%rdi
  44bd40:	callq  412b30 <sk_value@plt>
  44bd45:	mov    (%rax),%rdi
  44bd48:	mov    %rax,%r12
  44bd4b:	callq  4167f0 <OBJ_obj2nid@plt>
  44bd50:	lea    0x1c54e(%rip),%rsi        # 4682a5 <_fini+0xada1>
  44bd57:	mov    %eax,%r14d
  44bd5a:	mov    %rbp,%rdi
  44bd5d:	xor    %eax,%eax
  44bd5f:	callq  413c40 <BIO_printf@plt>
  44bd64:	test   %r14d,%r14d
  44bd67:	je     44bcb8 <X509_get0_pubkey_bitstr@plt+0x352e8>
  44bd6d:	mov    %r14d,%edi
  44bd70:	callq  413920 <OBJ_nid2ln@plt>
  44bd75:	lea    0x11db4(%rip),%rsi        # 45db30 <_fini+0x62c>
  44bd7c:	mov    %rax,%rdx
  44bd7f:	mov    %rbp,%rdi
  44bd82:	xor    %eax,%eax
  44bd84:	callq  413c40 <BIO_printf@plt>
  44bd89:	mov    0x10(%r12),%rdi
  44bd8e:	callq  4156d0 <sk_num@plt>
  44bd93:	test   %eax,%eax
  44bd95:	jne    44bce7 <X509_get0_pubkey_bitstr@plt+0x35317>
  44bd9b:	lea    0x209af(%rip),%rsi        # 46c751 <_fini+0xf24d>
  44bda2:	mov    %rbp,%rdi
  44bda5:	xor    %eax,%eax
  44bda7:	callq  413c40 <BIO_printf@plt>
  44bdac:	jmpq   44bd28 <X509_get0_pubkey_bitstr@plt+0x35358>
  44bdb1:	nopl   0x0(%rax)
  44bdb8:	mov    0x8(%rax),%rax
  44bdbc:	mov    %rbp,%rdi
  44bdbf:	mov    0x8(%rax),%rsi
  44bdc3:	mov    (%rax),%edx
  44bdc5:	callq  44bc20 <X509_get0_pubkey_bitstr@plt+0x35250>
  44bdca:	lea    0x18dce(%rip),%rsi        # 464b9f <_fini+0x769b>
  44bdd1:	mov    %rbp,%rdi
  44bdd4:	xor    %eax,%eax
  44bdd6:	callq  413c40 <BIO_printf@plt>
  44bddb:	jmpq   44bd28 <X509_get0_pubkey_bitstr@plt+0x35358>
  44bde0:	lea    0x20927(%rip),%rsi        # 46c70e <_fini+0xf20a>
  44bde7:	xor    %eax,%eax
  44bde9:	callq  413c40 <BIO_printf@plt>
  44bdee:	xchg   %ax,%ax
  44bdf0:	pop    %rbx
  44bdf1:	pop    %rbp
  44bdf2:	pop    %r12
  44bdf4:	pop    %r13
  44bdf6:	mov    $0x1,%eax
  44bdfb:	pop    %r14
  44bdfd:	retq   
  44bdfe:	xchg   %ax,%ax
  44be00:	mov    0x8(%rax),%rax
  44be04:	mov    0x8(%rax),%rdi
  44be08:	mov    (%rax),%esi
  44be0a:	callq  412ef0 <OPENSSL_uni2asc@plt>
  44be0f:	lea    0x149a3(%rip),%rsi        # 4607b9 <_fini+0x32b5>
  44be16:	mov    %rax,%r12
  44be19:	mov    %rax,%rdx
  44be1c:	mov    %rbp,%rdi
  44be1f:	xor    %eax,%eax
  44be21:	callq  413c40 <BIO_printf@plt>
  44be26:	mov    %r12,%rdi
  44be29:	callq  415020 <CRYPTO_free@plt>
  44be2e:	jmpq   44bd28 <X509_get0_pubkey_bitstr@plt+0x35358>
  44be33:	nopl   0x0(%rax,%rax,1)
  44be38:	lea    0x208e4(%rip),%rsi        # 46c723 <_fini+0xf21f>
  44be3f:	mov    %rbp,%rdi
  44be42:	callq  413c40 <BIO_printf@plt>
  44be47:	pop    %rbx
  44be48:	pop    %rbp
  44be49:	pop    %r12
  44be4b:	pop    %r13
  44be4d:	mov    $0x1,%eax
  44be52:	pop    %r14
  44be54:	retq   
  44be55:	data32 nopw %cs:0x0(%rax,%rax,1)
  44be60:	push   %r15
  44be62:	mov    %r8d,%r15d
  44be65:	push   %r14
  44be67:	mov    %ecx,%r14d
  44be6a:	push   %r13
  44be6c:	mov    %rdx,%r13
  44be6f:	push   %r12
  44be71:	mov    %r9,%r12
  44be74:	push   %rbp
  44be75:	mov    %rdi,%rbp
  44be78:	push   %rbx
  44be79:	mov    %rsi,%rbx
  44be7c:	sub    $0x18,%rsp
  44be80:	mov    (%rsi),%rdi
  44be83:	callq  4167f0 <OBJ_obj2nid@plt>
  44be88:	cmp    $0x97,%eax
  44be8d:	je     44bff0 <X509_get0_pubkey_bitstr@plt+0x35620>
  44be93:	jle    44bf20 <X509_get0_pubkey_bitstr@plt+0x35550>
  44be99:	cmp    $0x98,%eax
  44be9e:	je     44bef0 <X509_get0_pubkey_bitstr@plt+0x35520>
  44bea0:	cmp    $0x9b,%eax
  44bea5:	jne    44bfb0 <X509_get0_pubkey_bitstr@plt+0x355e0>
  44beab:	test   $0x4,%r15b
  44beaf:	jne    44c130 <X509_get0_pubkey_bitstr@plt+0x35760>
  44beb5:	mov    0x10(%rbx),%rsi
  44beb9:	lea    0x208a7(%rip),%rdx        # 46c767 <_fini+0xf263>
  44bec0:	mov    %rbp,%rdi
  44bec3:	callq  44bc70 <X509_get0_pubkey_bitstr@plt+0x352a0>
  44bec8:	mov    0x8(%rbx),%rsi
  44becc:	add    $0x18,%rsp
  44bed0:	mov    %rbp,%rdi
  44bed3:	pop    %rbx
  44bed4:	pop    %rbp
  44bed5:	mov    %r12,%r9
  44bed8:	mov    %r13,%rdx
  44bedb:	mov    %r14d,%ecx
  44bede:	pop    %r12
  44bee0:	pop    %r13
  44bee2:	pop    %r14
  44bee4:	mov    %r15d,%r8d
  44bee7:	pop    %r15
  44bee9:	jmpq   44c1f0 <X509_get0_pubkey_bitstr@plt+0x35820>
  44beee:	xchg   %ax,%ax
  44bef0:	test   $0x4,%r15b
  44bef4:	jne    44c150 <X509_get0_pubkey_bitstr@plt+0x35780>
  44befa:	test   $0x2,%r15b
  44befe:	je     44c0a0 <X509_get0_pubkey_bitstr@plt+0x356d0>
  44bf04:	nopl   0x0(%rax)
  44bf08:	mov    $0x1,%r15d
  44bf0e:	add    $0x18,%rsp
  44bf12:	mov    %r15d,%eax
  44bf15:	pop    %rbx
  44bf16:	pop    %rbp
  44bf17:	pop    %r12
  44bf19:	pop    %r13
  44bf1b:	pop    %r14
  44bf1d:	pop    %r15
  44bf1f:	retq   
  44bf20:	cmp    $0x96,%eax
  44bf25:	jne    44bfb0 <X509_get0_pubkey_bitstr@plt+0x355e0>
  44bf2b:	test   $0x4,%r15b
  44bf2f:	jne    44c1a8 <X509_get0_pubkey_bitstr@plt+0x357d8>
  44bf35:	and    $0x1,%r15d
  44bf39:	jne    44bf08 <X509_get0_pubkey_bitstr@plt+0x35538>
  44bf3b:	mov    0x10(%rbx),%rsi
  44bf3f:	lea    0x20821(%rip),%rdx        # 46c767 <_fini+0xf263>
  44bf46:	mov    %rbp,%rdi
  44bf49:	callq  44bc70 <X509_get0_pubkey_bitstr@plt+0x352a0>
  44bf4e:	mov    0x8(%rbx),%r13
  44bf52:	mov    %r13,%rdi
  44bf55:	callq  414a80 <EVP_PKCS82PKEY@plt>
  44bf5a:	test   %rax,%rax
  44bf5d:	mov    %rax,%rbx
  44bf60:	je     44c1c8 <X509_get0_pubkey_bitstr@plt+0x357f8>
  44bf66:	mov    0x20(%r13),%rsi
  44bf6a:	lea    0x20805(%rip),%rdx        # 46c776 <_fini+0xf272>
  44bf71:	mov    %rbp,%rdi
  44bf74:	mov    $0x1,%r15d
  44bf7a:	callq  44bc70 <X509_get0_pubkey_bitstr@plt+0x352a0>
  44bf7f:	lea    0x22fd4a(%rip),%rax        # 67bcd0 <_edata+0xfc8>
  44bf86:	mov    %r12,(%rsp)
  44bf8a:	xor    %r9d,%r9d
  44bf8d:	xor    %r8d,%r8d
  44bf90:	xor    %ecx,%ecx
  44bf92:	mov    %rbx,%rsi
  44bf95:	mov    %rbp,%rdi
  44bf98:	mov    (%rax),%rdx
  44bf9b:	callq  4148c0 <PEM_write_bio_PrivateKey@plt>
  44bfa0:	mov    %rbx,%rdi
  44bfa3:	callq  412b00 <EVP_PKEY_free@plt>
  44bfa8:	jmpq   44bf0e <X509_get0_pubkey_bitstr@plt+0x3553e>
  44bfad:	nopl   (%rax)
  44bfb0:	lea    0x22ed89(%rip),%rbp        # 67ad40 <_edata+0x38>
  44bfb7:	lea    0x20a32(%rip),%rsi        # 46c9f0 <_fini+0xf4ec>
  44bfbe:	xor    %eax,%eax
  44bfc0:	mov    0x0(%rbp),%rdi
  44bfc4:	callq  413c40 <BIO_printf@plt>
  44bfc9:	mov    (%rbx),%rsi
  44bfcc:	mov    0x0(%rbp),%rdi
  44bfd0:	callq  413000 <i2a_ASN1_OBJECT@plt>
  44bfd5:	mov    0x0(%rbp),%rdi
  44bfd9:	lea    0x18bbf(%rip),%rsi        # 464b9f <_fini+0x769b>
  44bfe0:	xor    %eax,%eax
  44bfe2:	callq  413c40 <BIO_printf@plt>
  44bfe7:	jmpq   44bf08 <X509_get0_pubkey_bitstr@plt+0x35538>
  44bfec:	nopl   0x0(%rax)
  44bff0:	test   $0x4,%r15b
  44bff4:	jne    44c170 <X509_get0_pubkey_bitstr@plt+0x357a0>
  44bffa:	and    $0x1,%r15d
  44bffe:	xchg   %ax,%ax
  44c000:	jne    44bf08 <X509_get0_pubkey_bitstr@plt+0x35538>
  44c006:	mov    0x10(%rbx),%rsi
  44c00a:	lea    0x20756(%rip),%rdx        # 46c767 <_fini+0xf263>
  44c011:	mov    %rbp,%rdi
  44c014:	callq  44bc70 <X509_get0_pubkey_bitstr@plt+0x352a0>
  44c019:	mov    %rbx,%rdi
  44c01c:	mov    %r14d,%edx
  44c01f:	mov    %r13,%rsi
  44c022:	callq  414fd0 <PKCS12_decrypt_skey@plt>
  44c027:	test   %rax,%rax
  44c02a:	mov    %rax,%rbx
  44c02d:	je     44c1c8 <X509_get0_pubkey_bitstr@plt+0x357f8>
  44c033:	mov    %rax,%rdi
  44c036:	callq  414a80 <EVP_PKCS82PKEY@plt>
  44c03b:	test   %rax,%rax
  44c03e:	mov    %rax,%r13
  44c041:	je     44c1df <X509_get0_pubkey_bitstr@plt+0x3580f>
  44c047:	mov    0x20(%rbx),%rsi
  44c04b:	lea    0x20724(%rip),%rdx        # 46c776 <_fini+0xf272>
  44c052:	mov    %rbp,%rdi
  44c055:	mov    $0x1,%r15d
  44c05b:	callq  44bc70 <X509_get0_pubkey_bitstr@plt+0x352a0>
  44c060:	mov    %rbx,%rdi
  44c063:	callq  415070 <PKCS8_PRIV_KEY_INFO_free@plt>
  44c068:	lea    0x22fc61(%rip),%rax        # 67bcd0 <_edata+0xfc8>
  44c06f:	mov    %r12,(%rsp)
  44c073:	xor    %r9d,%r9d
  44c076:	xor    %r8d,%r8d
  44c079:	xor    %ecx,%ecx
  44c07b:	mov    %r13,%rsi
  44c07e:	mov    %rbp,%rdi
  44c081:	mov    (%rax),%rdx
  44c084:	callq  4148c0 <PEM_write_bio_PrivateKey@plt>
  44c089:	mov    %r13,%rdi
  44c08c:	callq  412b00 <EVP_PKEY_free@plt>
  44c091:	jmpq   44bf0e <X509_get0_pubkey_bitstr@plt+0x3553e>
  44c096:	nopw   %cs:0x0(%rax,%rax,1)
  44c0a0:	mov    0x10(%rbx),%rdi
  44c0a4:	mov    $0x9d,%esi
  44c0a9:	callq  413060 <PKCS12_get_attr_gen@plt>
  44c0ae:	test   %rax,%rax
  44c0b1:	je     44c1d0 <X509_get0_pubkey_bitstr@plt+0x35800>
  44c0b7:	and    $0x10,%r15d
  44c0bb:	jne    44bf08 <X509_get0_pubkey_bitstr@plt+0x35538>
  44c0c1:	mov    0x10(%rbx),%rsi
  44c0c5:	lea    0x2069b(%rip),%rdx        # 46c767 <_fini+0xf263>
  44c0cc:	mov    %rbp,%rdi
  44c0cf:	callq  44bc70 <X509_get0_pubkey_bitstr@plt+0x352a0>
  44c0d4:	mov    0x8(%rbx),%rax
  44c0d8:	mov    (%rax),%rdi
  44c0db:	callq  4167f0 <OBJ_obj2nid@plt>
  44c0e0:	cmp    $0x9e,%eax
  44c0e5:	jne    44bf08 <X509_get0_pubkey_bitstr@plt+0x35538>
  44c0eb:	mov    %rbx,%rdi
  44c0ee:	callq  415090 <PKCS12_certbag2x509@plt>
  44c0f3:	test   %rax,%rax
  44c0f6:	mov    %rax,%rbx
  44c0f9:	je     44c1c8 <X509_get0_pubkey_bitstr@plt+0x357f8>
  44c0ff:	mov    %rax,%rsi
  44c102:	mov    %rbp,%rdi
  44c105:	mov    $0x1,%r15d
  44c10b:	callq  445980 <X509_get0_pubkey_bitstr@plt+0x2efb0>
  44c110:	mov    %rbx,%rsi
  44c113:	mov    %rbp,%rdi
  44c116:	callq  413490 <PEM_write_bio_X509@plt>
  44c11b:	mov    %rbx,%rdi
  44c11e:	callq  4153a0 <X509_free@plt>
  44c123:	jmpq   44bf0e <X509_get0_pubkey_bitstr@plt+0x3553e>
  44c128:	nopl   0x0(%rax,%rax,1)
  44c130:	lea    0x22ec09(%rip),%rax        # 67ad40 <_edata+0x38>
  44c137:	lea    0x2066a(%rip),%rsi        # 46c7a8 <_fini+0xf2a4>
  44c13e:	mov    (%rax),%rdi
  44c141:	xor    %eax,%eax
  44c143:	callq  413c40 <BIO_printf@plt>
  44c148:	jmpq   44beb5 <X509_get0_pubkey_bitstr@plt+0x354e5>
  44c14d:	nopl   (%rax)
  44c150:	lea    0x22ebe9(%rip),%rax        # 67ad40 <_edata+0x38>
  44c157:	lea    0x20639(%rip),%rsi        # 46c797 <_fini+0xf293>
  44c15e:	mov    (%rax),%rdi
  44c161:	xor    %eax,%eax
  44c163:	callq  413c40 <BIO_printf@plt>
  44c168:	jmpq   44befa <X509_get0_pubkey_bitstr@plt+0x3552a>
  44c16d:	nopl   (%rax)
  44c170:	lea    0x22ebc9(%rip),%rax        # 67ad40 <_edata+0x38>
  44c177:	lea    0x20607(%rip),%rsi        # 46c785 <_fini+0xf281>
  44c17e:	mov    (%rax),%rdi
  44c181:	xor    %eax,%eax
  44c183:	callq  413c40 <BIO_printf@plt>
  44c188:	mov    0x8(%rbx),%rax
  44c18c:	mov    (%rax),%rsi
  44c18f:	lea    0x22ebaa(%rip),%rax        # 67ad40 <_edata+0x38>
  44c196:	mov    (%rax),%rdi
  44c199:	callq  44bb20 <X509_get0_pubkey_bitstr@plt+0x35150>
  44c19e:	jmpq   44bffa <X509_get0_pubkey_bitstr@plt+0x3562a>
  44c1a3:	nopl   0x0(%rax,%rax,1)
  44c1a8:	lea    0x22eb91(%rip),%rax        # 67ad40 <_edata+0x38>
  44c1af:	lea    0x205a8(%rip),%rsi        # 46c75e <_fini+0xf25a>
  44c1b6:	mov    (%rax),%rdi
  44c1b9:	xor    %eax,%eax
  44c1bb:	callq  413c40 <BIO_printf@plt>
  44c1c0:	jmpq   44bf35 <X509_get0_pubkey_bitstr@plt+0x35565>
  44c1c5:	nopl   (%rax)
  44c1c8:	xor    %r15d,%r15d
  44c1cb:	jmpq   44bf0e <X509_get0_pubkey_bitstr@plt+0x3553e>
  44c1d0:	and    $0x8,%r15d
  44c1d4:	je     44c0c1 <X509_get0_pubkey_bitstr@plt+0x356f1>
  44c1da:	jmpq   44bf08 <X509_get0_pubkey_bitstr@plt+0x35538>
  44c1df:	mov    %rbx,%rdi
  44c1e2:	callq  415070 <PKCS8_PRIV_KEY_INFO_free@plt>
  44c1e7:	jmpq   44bf0e <X509_get0_pubkey_bitstr@plt+0x3553e>
  44c1ec:	nopl   0x0(%rax)
  44c1f0:	push   %r15
  44c1f2:	mov    %rdi,%r15
  44c1f5:	push   %r14
  44c1f7:	mov    %rdx,%r14
  44c1fa:	push   %r13
  44c1fc:	mov    %r8d,%r13d
  44c1ff:	push   %r12
  44c201:	mov    %r9,%r12
  44c204:	push   %rbp
  44c205:	mov    %rsi,%rbp
  44c208:	push   %rbx
  44c209:	xor    %ebx,%ebx
  44c20b:	sub    $0x18,%rsp
  44c20f:	mov    %ecx,0xc(%rsp)
  44c213:	jmp    44c241 <X509_get0_pubkey_bitstr@plt+0x35871>
  44c215:	nopl   (%rax)
  44c218:	mov    %ebx,%esi
  44c21a:	mov    %rbp,%rdi
  44c21d:	callq  412b30 <sk_value@plt>
  44c222:	mov    0xc(%rsp),%ecx
  44c226:	mov    %r12,%r9
  44c229:	mov    %r13d,%r8d
  44c22c:	mov    %r14,%rdx
  44c22f:	mov    %rax,%rsi
  44c232:	mov    %r15,%rdi
  44c235:	callq  44be60 <X509_get0_pubkey_bitstr@plt+0x35490>
  44c23a:	test   %eax,%eax
  44c23c:	je     44c252 <X509_get0_pubkey_bitstr@plt+0x35882>
  44c23e:	add    $0x1,%ebx
  44c241:	mov    %rbp,%rdi
  44c244:	callq  4156d0 <sk_num@plt>
  44c249:	cmp    %eax,%ebx
  44c24b:	jl     44c218 <X509_get0_pubkey_bitstr@plt+0x35848>
  44c24d:	mov    $0x1,%eax
  44c252:	add    $0x18,%rsp
  44c256:	pop    %rbx
  44c257:	pop    %rbp
  44c258:	pop    %r12
  44c25a:	pop    %r13
  44c25c:	pop    %r14
  44c25e:	pop    %r15
  44c260:	retq   
  44c261:	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  44c270:	push   %r15
  44c272:	push   %r14
  44c274:	mov    %r8d,%r14d
  44c277:	push   %r13
  44c279:	mov    %ecx,%r13d
  44c27c:	push   %r12
  44c27e:	mov    %rdx,%r12
  44c281:	push   %rbp
  44c282:	push   %rbx
  44c283:	sub    $0x28,%rsp
  44c287:	mov    %rdi,0x8(%rsp)
  44c28c:	mov    %rsi,%rdi
  44c28f:	mov    %r8d,0x14(%rsp)
  44c294:	mov    %r9,0x18(%rsp)
  44c299:	callq  415ab0 <PKCS12_unpack_authsafes@plt>
  44c29e:	test   %rax,%rax
  44c2a1:	mov    %rax,%rbp
  44c2a4:	je     44c3f1 <X509_get0_pubkey_bitstr@plt+0x35a21>
  44c2aa:	xor    %ebx,%ebx
  44c2ac:	and    $0x4,%r14d
  44c2b0:	jmp    44c2bb <X509_get0_pubkey_bitstr@plt+0x358eb>
  44c2b2:	nopw   0x0(%rax,%rax,1)
  44c2b8:	add    $0x1,%ebx
  44c2bb:	mov    %rbp,%rdi
  44c2be:	callq  4156d0 <sk_num@plt>
  44c2c3:	cmp    %eax,%ebx
  44c2c5:	jge    44c3c0 <X509_get0_pubkey_bitstr@plt+0x359f0>
  44c2cb:	mov    %ebx,%esi
  44c2cd:	mov    %rbp,%rdi
  44c2d0:	callq  412b30 <sk_value@plt>
  44c2d5:	mov    0x18(%rax),%rdi
  44c2d9:	mov    %rax,%r15
  44c2dc:	callq  4167f0 <OBJ_obj2nid@plt>
  44c2e1:	cmp    $0x15,%eax
  44c2e4:	je     44c348 <X509_get0_pubkey_bitstr@plt+0x35978>
  44c2e6:	cmp    $0x1a,%eax
  44c2e9:	jne    44c2b8 <X509_get0_pubkey_bitstr@plt+0x358e8>
  44c2eb:	test   %r14d,%r14d
  44c2ee:	xchg   %ax,%ax
  44c2f0:	jne    44c380 <X509_get0_pubkey_bitstr@plt+0x359b0>
  44c2f6:	mov    %r15,%rdi
  44c2f9:	mov    %r13d,%edx
  44c2fc:	mov    %r12,%rsi
  44c2ff:	callq  414380 <PKCS12_unpack_p7encdata@plt>
  44c304:	mov    %rax,%r15
  44c307:	test   %r15,%r15
  44c30a:	je     44c378 <X509_get0_pubkey_bitstr@plt+0x359a8>
  44c30c:	mov    0x8(%rsp),%rdi
  44c311:	mov    0x18(%rsp),%r9
  44c316:	mov    %r15,%rsi
  44c319:	mov    0x14(%rsp),%r8d
  44c31e:	mov    %r13d,%ecx
  44c321:	mov    %r12,%rdx
  44c324:	callq  44c1f0 <X509_get0_pubkey_bitstr@plt+0x35820>
  44c329:	test   %eax,%eax
  44c32b:	mov    0x229bc6(%rip),%rsi        # 675ef8 <_fini+0x2189f4>
  44c332:	mov    %r15,%rdi
  44c335:	je     44c3e8 <X509_get0_pubkey_bitstr@plt+0x35a18>
  44c33b:	callq  416250 <sk_pop_free@plt>
  44c340:	jmpq   44c2b8 <X509_get0_pubkey_bitstr@plt+0x358e8>
  44c345:	nopl   (%rax)
  44c348:	mov    %r15,%rdi
  44c34b:	callq  413520 <PKCS12_unpack_p7data@plt>
  44c350:	test   %r14d,%r14d
  44c353:	mov    %rax,%r15
  44c356:	je     44c307 <X509_get0_pubkey_bitstr@plt+0x35937>
  44c358:	lea    0x22e9e1(%rip),%rax        # 67ad40 <_edata+0x38>
  44c35f:	lea    0x20455(%rip),%rsi        # 46c7bb <_fini+0xf2b7>
  44c366:	mov    (%rax),%rdi
  44c369:	xor    %eax,%eax
  44c36b:	callq  413c40 <BIO_printf@plt>
  44c370:	test   %r15,%r15
  44c373:	jne    44c30c <X509_get0_pubkey_bitstr@plt+0x3593c>
  44c375:	nopl   (%rax)
  44c378:	xor    %ebx,%ebx
  44c37a:	jmp    44c3c5 <X509_get0_pubkey_bitstr@plt+0x359f5>
  44c37c:	nopl   0x0(%rax)
  44c380:	lea    0x22e9b9(%rip),%rax        # 67ad40 <_edata+0x38>
  44c387:	lea    0x20439(%rip),%rsi        # 46c7c7 <_fini+0xf2c3>
  44c38e:	mov    (%rax),%rdi
  44c391:	xor    %eax,%eax
  44c393:	callq  413c40 <BIO_printf@plt>
  44c398:	mov    0x20(%r15),%rax
  44c39c:	mov    0x8(%rax),%rax
  44c3a0:	mov    0x8(%rax),%rsi
  44c3a4:	lea    0x22e995(%rip),%rax        # 67ad40 <_edata+0x38>
  44c3ab:	mov    (%rax),%rdi
  44c3ae:	callq  44bb20 <X509_get0_pubkey_bitstr@plt+0x35150>
  44c3b3:	jmpq   44c2f6 <X509_get0_pubkey_bitstr@plt+0x35926>
  44c3b8:	nopl   0x0(%rax,%rax,1)
  44c3c0:	mov    $0x1,%ebx
  44c3c5:	mov    0x229b04(%rip),%rsi        # 675ed0 <_fini+0x2189cc>
  44c3cc:	mov    %rbp,%rdi
  44c3cf:	callq  416250 <sk_pop_free@plt>
  44c3d4:	add    $0x28,%rsp
  44c3d8:	mov    %ebx,%eax
  44c3da:	pop    %rbx
  44c3db:	pop    %rbp
  44c3dc:	pop    %r12
  44c3de:	pop    %r13
  44c3e0:	pop    %r14
  44c3e2:	pop    %r15
  44c3e4:	retq   
  44c3e5:	nopl   (%rax)
  44c3e8:	callq  416250 <sk_pop_free@plt>
  44c3ed:	xor    %ebx,%ebx
  44c3ef:	jmp    44c3c5 <X509_get0_pubkey_bitstr@plt+0x359f5>
  44c3f1:	add    $0x28,%rsp
  44c3f5:	xor    %eax,%eax
  44c3f7:	pop    %rbx
  44c3f8:	pop    %rbp
  44c3f9:	pop    %r12
  44c3fb:	pop    %r13
  44c3fd:	pop    %r14
  44c3ff:	pop    %r15
  44c401:	retq   
  44c402:	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  44c410:	push   %r15
  44c412:	mov    $0xd,%edi
  44c417:	push   %r14
  44c419:	push   %r13
  44c41b:	push   %r12
  44c41d:	push   %rbp
  44c41e:	mov    %rsi,%rbp
  44c421:	mov    $0x1,%esi
  44c426:	push   %rbx
  44c427:	sub    $0x188,%rsp
  44c42e:	mov    %fs:0x28,%rax
  44c437:	mov    %rax,0x178(%rsp)
  44c43f:	xor    %eax,%eax
  44c441:	movl   $0x95,0xe0(%rsp)
  44c44c:	movl   $0x92,0xe4(%rsp)
  44c457:	movq   $0x0,0xe8(%rsp)
  44c463:	movq   $0x0,0xf0(%rsp)
  44c46f:	callq  414ee0 <signal@plt>
  44c474:	callq  415030 <FIPS_mode@plt>
  44c479:	test   %eax,%eax
  44c47b:	je     44c48b <X509_get0_pubkey_bitstr@plt+0x35abb>
  44c47d:	mov    0xe4(%rsp),%eax
  44c484:	mov    %eax,0xe0(%rsp)
  44c48b:	callq  415db0 <EVP_des_ede3_cbc@plt>
  44c490:	lea    0x22e8a9(%rip),%rbx        # 67ad40 <_edata+0x38>
  44c497:	lea    0x22f832(%rip),%rdx        # 67bcd0 <_edata+0xfc8>
  44c49e:	mov    (%rbx),%rdi
  44c4a1:	mov    %rax,(%rdx)
  44c4a4:	test   %rdi,%rdi
  44c4a7:	je     44cde0 <X509_get0_pubkey_bitstr@plt+0x36410>
  44c4ad:	xor    %esi,%esi
  44c4af:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  44c4b4:	test   %eax,%eax
  44c4b6:	je     44c998 <X509_get0_pubkey_bitstr@plt+0x35fc8>
  44c4bc:	lea    0x8(%rbp),%r14
  44c4c0:	mov    0x8(%rbp),%rbp
  44c4c4:	test   %rbp,%rbp
  44c4c7:	je     44cbf7 <X509_get0_pubkey_bitstr@plt+0x36227>
  44c4cd:	lea    0xe4(%rsp),%rax
  44c4d5:	xor    %r9d,%r9d
  44c4d8:	movq   $0x0,0xb8(%rsp)
  44c4e4:	movq   $0x0,0xb0(%rsp)
  44c4f0:	movq   $0x0,0x88(%rsp)
  44c4fc:	xor    %r12d,%r12d
  44c4ff:	mov    %rax,0x70(%rsp)
  44c504:	lea    0xe0(%rsp),%rax
  44c50c:	movq   $0x0,0x50(%rsp)
  44c515:	movq   $0x0,0x60(%rsp)
  44c51e:	movq   $0x0,0x58(%rsp)
  44c527:	xor    %r13d,%r13d
  44c52a:	movl   $0x0,0x68(%rsp)
  44c532:	movl   $0x1,0xa4(%rsp)
  44c53d:	xor    %edx,%edx
  44c53f:	movl   $0x0,0x38(%rsp)
  44c547:	movl   $0x0,0x80(%rsp)
  44c552:	mov    $0x8,%r15d
  44c558:	movl   $0x800,0x84(%rsp)
  44c563:	movl   $0x800,0xa0(%rsp)
  44c56e:	mov    $0x7,%r8d
  44c574:	movl   $0x0,0x6c(%rsp)
  44c57c:	movl   $0x0,0x28(%rsp)
  44c584:	movl   $0x0,0x30(%rsp)
  44c58c:	movl   $0x0,0xd0(%rsp)
  44c597:	movq   $0x0,0xa8(%rsp)
  44c5a3:	movq   $0x0,0x90(%rsp)
  44c5af:	movq   $0x0,0x78(%rsp)
  44c5b8:	movq   $0x0,0x98(%rsp)
  44c5c4:	movq   $0x0,0x48(%rsp)
  44c5cd:	movq   $0x0,0x40(%rsp)
  44c5d6:	mov    %rax,0xc0(%rsp)
  44c5de:	jmpq   44c5fd <X509_get0_pubkey_bitstr@plt+0x35c2d>
  44c5e3:	nopl   0x0(%rax,%rax,1)
  44c5e8:	mov    $0x1,%edx
  44c5ed:	mov    0x8(%r14),%rbp
  44c5f1:	lea    0x8(%r14),%rax
  44c5f5:	test   %rbp,%rbp
  44c5f8:	je     44c630 <X509_get0_pubkey_bitstr@plt+0x35c60>
  44c5fa:	mov    %rax,%r14
  44c5fd:	cmpb   $0x2d,0x0(%rbp)
  44c601:	jne    44c5e8 <X509_get0_pubkey_bitstr@plt+0x35c18>
  44c603:	lea    0x201e5(%rip),%rdi        # 46c7ef <_fini+0xf2eb>
  44c60a:	mov    %rbp,%rsi
  44c60d:	mov    %r15,%rcx
  44c610:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44c612:	jne    44ca20 <X509_get0_pubkey_bitstr@plt+0x36050>
  44c618:	mov    0x8(%r14),%rbp
  44c61c:	orl    $0x1,0x28(%rsp)
  44c621:	lea    0x8(%r14),%rax
  44c625:	test   %rbp,%rbp
  44c628:	jne    44c5fa <X509_get0_pubkey_bitstr@plt+0x35c2a>
  44c62a:	nopw   0x0(%rax,%rax,1)
  44c630:	movzbl 0x30(%rsp),%ebp
  44c635:	test   %r12,%r12
  44c638:	setne  %r14b
  44c63c:	mov    %r14b,0x70(%rsp)
  44c641:	or     %ebp,%r14d
  44c644:	test   %edx,%edx
  44c646:	je     44ccf0 <X509_get0_pubkey_bitstr@plt+0x36320>
  44c64c:	mov    (%rbx),%rdi
  44c64f:	lea    0x2024d(%rip),%rsi        # 46c8a3 <_fini+0xf39f>
  44c656:	xor    %eax,%eax
  44c658:	callq  413c40 <BIO_printf@plt>
  44c65d:	mov    (%rbx),%rdi
  44c660:	lea    0x116ee(%rip),%rsi        # 45dd55 <_fini+0x851>
  44c667:	xor    %eax,%eax
  44c669:	callq  413c40 <BIO_printf@plt>
  44c66e:	mov    (%rbx),%rdi
  44c671:	lea    0x20398(%rip),%rsi        # 46ca10 <_fini+0xf50c>
  44c678:	xor    %eax,%eax
  44c67a:	callq  413c40 <BIO_printf@plt>
  44c67f:	mov    (%rbx),%rdi
  44c682:	lea    0x203af(%rip),%rsi        # 46ca38 <_fini+0xf534>
  44c689:	xor    %eax,%eax
  44c68b:	callq  413c40 <BIO_printf@plt>
  44c690:	mov    (%rbx),%rdi
  44c693:	lea    0x203c6(%rip),%rsi        # 46ca60 <_fini+0xf55c>
  44c69a:	xor    %eax,%eax
  44c69c:	callq  413c40 <BIO_printf@plt>
  44c6a1:	mov    (%rbx),%rdi
  44c6a4:	lea    0x203e5(%rip),%rsi        # 46ca90 <_fini+0xf58c>
  44c6ab:	xor    %eax,%eax
  44c6ad:	callq  413c40 <BIO_printf@plt>
  44c6b2:	mov    (%rbx),%rdi
  44c6b5:	lea    0x203fc(%rip),%rsi        # 46cab8 <_fini+0xf5b4>
  44c6bc:	xor    %eax,%eax
  44c6be:	callq  413c40 <BIO_printf@plt>
  44c6c3:	mov    (%rbx),%rdi
  44c6c6:	lea    0x2041b(%rip),%rsi        # 46cae8 <_fini+0xf5e4>
  44c6cd:	xor    %eax,%eax
  44c6cf:	callq  413c40 <BIO_printf@plt>
  44c6d4:	mov    (%rbx),%rdi
  44c6d7:	lea    0x2043a(%rip),%rsi        # 46cb18 <_fini+0xf614>
  44c6de:	xor    %eax,%eax
  44c6e0:	callq  413c40 <BIO_printf@plt>
  44c6e5:	mov    (%rbx),%rdi
  44c6e8:	lea    0x20459(%rip),%rsi        # 46cb48 <_fini+0xf644>
  44c6ef:	xor    %eax,%eax
  44c6f1:	callq  413c40 <BIO_printf@plt>
  44c6f6:	mov    (%rbx),%rdi
  44c6f9:	lea    0x201bc(%rip),%rsi        # 46c8bc <_fini+0xf3b8>
  44c700:	xor    %eax,%eax
  44c702:	callq  413c40 <BIO_printf@plt>
  44c707:	mov    (%rbx),%rdi
  44c70a:	lea    0x2047f(%rip),%rsi        # 46cb90 <_fini+0xf68c>
  44c711:	xor    %eax,%eax
  44c713:	callq  413c40 <BIO_printf@plt>
  44c718:	mov    (%rbx),%rdi
  44c71b:	lea    0x2048e(%rip),%rsi        # 46cbb0 <_fini+0xf6ac>
  44c722:	xor    %eax,%eax
  44c724:	callq  413c40 <BIO_printf@plt>
  44c729:	mov    (%rbx),%rdi
  44c72c:	lea    0x204b5(%rip),%rsi        # 46cbe8 <_fini+0xf6e4>
  44c733:	xor    %eax,%eax
  44c735:	callq  413c40 <BIO_printf@plt>
  44c73a:	mov    (%rbx),%rdi
  44c73d:	lea    0x204cc(%rip),%rsi        # 46cc10 <_fini+0xf70c>
  44c744:	xor    %eax,%eax
  44c746:	callq  413c40 <BIO_printf@plt>
  44c74b:	mov    (%rbx),%rdi
  44c74e:	lea    0x204eb(%rip),%rsi        # 46cc40 <_fini+0xf73c>
  44c755:	xor    %eax,%eax
  44c757:	callq  413c40 <BIO_printf@plt>
  44c75c:	mov    (%rbx),%rdi
  44c75f:	lea    0x2050a(%rip),%rsi        # 46cc70 <_fini+0xf76c>
  44c766:	xor    %eax,%eax
  44c768:	callq  413c40 <BIO_printf@plt>
  44c76d:	mov    (%rbx),%rdi
  44c770:	lea    0x20529(%rip),%rsi        # 46cca0 <_fini+0xf79c>
  44c777:	xor    %eax,%eax
  44c779:	callq  413c40 <BIO_printf@plt>
  44c77e:	mov    (%rbx),%rdi
  44c781:	lea    0x20548(%rip),%rsi        # 46ccd0 <_fini+0xf7cc>
  44c788:	xor    %eax,%eax
  44c78a:	callq  413c40 <BIO_printf@plt>
  44c78f:	mov    (%rbx),%rdi
  44c792:	lea    0x2056f(%rip),%rsi        # 46cd08 <_fini+0xf804>
  44c799:	xor    %eax,%eax
  44c79b:	callq  413c40 <BIO_printf@plt>
  44c7a0:	mov    (%rbx),%rdi
  44c7a3:	lea    0x2058e(%rip),%rsi        # 46cd38 <_fini+0xf834>
  44c7aa:	xor    %eax,%eax
  44c7ac:	callq  413c40 <BIO_printf@plt>
  44c7b1:	mov    (%rbx),%rdi
  44c7b4:	lea    0x205bd(%rip),%rsi        # 46cd78 <_fini+0xf874>
  44c7bb:	xor    %eax,%eax
  44c7bd:	callq  413c40 <BIO_printf@plt>
  44c7c2:	mov    (%rbx),%rdi
  44c7c5:	lea    0x205dc(%rip),%rsi        # 46cda8 <_fini+0xf8a4>
  44c7cc:	xor    %eax,%eax
  44c7ce:	callq  413c40 <BIO_printf@plt>
  44c7d3:	mov    (%rbx),%rdi
  44c7d6:	lea    0x1693a(%rip),%rsi        # 463117 <_fini+0x5c13>
  44c7dd:	xor    %eax,%eax
  44c7df:	callq  413c40 <BIO_printf@plt>
  44c7e4:	mov    (%rbx),%rdi
  44c7e7:	lea    0x205ea(%rip),%rsi        # 46cdd8 <_fini+0xf8d4>
  44c7ee:	xor    %eax,%eax
  44c7f0:	callq  413c40 <BIO_printf@plt>
  44c7f5:	mov    (%rbx),%rdi
  44c7f8:	lea    0x20609(%rip),%rsi        # 46ce08 <_fini+0xf904>
  44c7ff:	xor    %eax,%eax
  44c801:	callq  413c40 <BIO_printf@plt>
  44c806:	mov    (%rbx),%rdi
  44c809:	lea    0x20628(%rip),%rsi        # 46ce38 <_fini+0xf934>
  44c810:	xor    %eax,%eax
  44c812:	callq  413c40 <BIO_printf@plt>
  44c817:	mov    (%rbx),%rdi
  44c81a:	lea    0x2064f(%rip),%rsi        # 46ce70 <_fini+0xf96c>
  44c821:	xor    %eax,%eax
  44c823:	callq  413c40 <BIO_printf@plt>
  44c828:	mov    (%rbx),%rdi
  44c82b:	lea    0x2066e(%rip),%rsi        # 46cea0 <_fini+0xf99c>
  44c832:	xor    %eax,%eax
  44c834:	callq  413c40 <BIO_printf@plt>
  44c839:	mov    (%rbx),%rdi
  44c83c:	lea    0x2068d(%rip),%rsi        # 46ced0 <_fini+0xf9cc>
  44c843:	xor    %eax,%eax
  44c845:	callq  413c40 <BIO_printf@plt>
  44c84a:	mov    (%rbx),%rdi
  44c84d:	lea    0x206a4(%rip),%rsi        # 46cef8 <_fini+0xf9f4>
  44c854:	xor    %eax,%eax
  44c856:	callq  413c40 <BIO_printf@plt>
  44c85b:	mov    (%rbx),%rdi
  44c85e:	lea    0x206bb(%rip),%rsi        # 46cf20 <_fini+0xfa1c>
  44c865:	xor    %eax,%eax
  44c867:	callq  413c40 <BIO_printf@plt>
  44c86c:	mov    (%rbx),%rdi
  44c86f:	lea    0x206d2(%rip),%rsi        # 46cf48 <_fini+0xfa44>
  44c876:	xor    %eax,%eax
  44c878:	callq  413c40 <BIO_printf@plt>
  44c87d:	mov    (%rbx),%rdi
  44c880:	lea    0x206f9(%rip),%rsi        # 46cf80 <_fini+0xfa7c>
  44c887:	xor    %eax,%eax
  44c889:	callq  413c40 <BIO_printf@plt>
  44c88e:	mov    (%rbx),%rdi
  44c891:	lea    0x20738(%rip),%rsi        # 46cfd0 <_fini+0xfacc>
  44c898:	xor    %eax,%eax
  44c89a:	callq  413c40 <BIO_printf@plt>
  44c89f:	mov    (%rbx),%rdi
  44c8a2:	lea    0x2076f(%rip),%rsi        # 46d018 <_fini+0xfb14>
  44c8a9:	xor    %eax,%eax
  44c8ab:	callq  413c40 <BIO_printf@plt>
  44c8b0:	mov    (%rbx),%rdi
  44c8b3:	lea    0x2079e(%rip),%rsi        # 46d058 <_fini+0xfb54>
  44c8ba:	xor    %eax,%eax
  44c8bc:	callq  413c40 <BIO_printf@plt>
  44c8c1:	mov    (%rbx),%rdi
  44c8c4:	lea    0x207cd(%rip),%rsi        # 46d098 <_fini+0xfb94>
  44c8cb:	xor    %eax,%eax
  44c8cd:	callq  413c40 <BIO_printf@plt>
  44c8d2:	mov    (%rbx),%rdi
  44c8d5:	lea    0x207e4(%rip),%rsi        # 46d0c0 <_fini+0xfbbc>
  44c8dc:	xor    %eax,%eax
  44c8de:	callq  413c40 <BIO_printf@plt>
  44c8e3:	mov    (%rbx),%rdi
  44c8e6:	lea    0x20803(%rip),%rsi        # 46d0f0 <_fini+0xfbec>
  44c8ed:	xor    %eax,%eax
  44c8ef:	callq  413c40 <BIO_printf@plt>
  44c8f4:	mov    (%rbx),%rdi
  44c8f7:	lea    0x2082a(%rip),%rsi        # 46d128 <_fini+0xfc24>
  44c8fe:	xor    %eax,%eax
  44c900:	callq  413c40 <BIO_printf@plt>
  44c905:	mov    (%rbx),%rdi
  44c908:	lea    0x20849(%rip),%rsi        # 46d158 <_fini+0xfc54>
  44c90f:	xor    %eax,%eax
  44c911:	callq  413c40 <BIO_printf@plt>
  44c916:	mov    (%rbx),%rdi
  44c919:	lea    0x20868(%rip),%rsi        # 46d188 <_fini+0xfc84>
  44c920:	xor    %eax,%eax
  44c922:	callq  413c40 <BIO_printf@plt>
  44c927:	mov    (%rbx),%rdi
  44c92a:	lea    0x119fa(%rip),%rsi        # 45e32b <_fini+0xe27>
  44c931:	mov    $0x3a,%ecx
  44c936:	mov    $0x3a,%edx
  44c93b:	xor    %eax,%eax
  44c93d:	callq  413c40 <BIO_printf@plt>
  44c942:	mov    (%rbx),%rdi
  44c945:	lea    0x2087c(%rip),%rsi        # 46d1c8 <_fini+0xfcc4>
  44c94c:	xor    %eax,%eax
  44c94e:	callq  413c40 <BIO_printf@plt>
  44c953:	mov    (%rbx),%rdi
  44c956:	lea    0x208b3(%rip),%rsi        # 46d210 <_fini+0xfd0c>
  44c95d:	xor    %eax,%eax
  44c95f:	callq  413c40 <BIO_printf@plt>
  44c964:	mov    (%rbx),%rdi
  44c967:	lea    0x208d2(%rip),%rsi        # 46d240 <_fini+0xfd3c>
  44c96e:	xor    %eax,%eax
  44c970:	callq  413c40 <BIO_printf@plt>
  44c975:	lea    0x208ec(%rip),%rsi        # 46d268 <_fini+0xfd64>
  44c97c:	mov    (%rbx),%rdi
  44c97f:	xor    %eax,%eax
  44c981:	xor    %r12d,%r12d
  44c984:	xor    %r15d,%r15d
  44c987:	callq  413c40 <BIO_printf@plt>
  44c98c:	jmpq   44c9a4 <X509_get0_pubkey_bitstr@plt+0x35fd4>
  44c991:	nopl   0x0(%rax)
  44c998:	xor    %r14d,%r14d
  44c99b:	xor    %r13d,%r13d
  44c99e:	xor    %r12d,%r12d
  44c9a1:	xor    %r15d,%r15d
  44c9a4:	mov    $0x1,%ebp
  44c9a9:	test   %r14b,%r14b
  44c9ac:	jne    44cbe8 <X509_get0_pubkey_bitstr@plt+0x36218>
  44c9b2:	mov    %r15,%rdi
  44c9b5:	callq  413960 <BIO_free@plt>
  44c9ba:	mov    %r12,%rdi
  44c9bd:	callq  416570 <BIO_free_all@plt>
  44c9c2:	test   %r13,%r13
  44c9c5:	je     44c9cf <X509_get0_pubkey_bitstr@plt+0x35fff>
  44c9c7:	mov    %r13,%rdi
  44c9ca:	callq  4143f0 <sk_free@plt>
  44c9cf:	mov    0xe8(%rsp),%rdi
  44c9d7:	test   %rdi,%rdi
  44c9da:	je     44c9e1 <X509_get0_pubkey_bitstr@plt+0x36011>
  44c9dc:	callq  415020 <CRYPTO_free@plt>
  44c9e1:	mov    0xf0(%rsp),%rdi
  44c9e9:	test   %rdi,%rdi
  44c9ec:	je     44c9f3 <X509_get0_pubkey_bitstr@plt+0x36023>
  44c9ee:	callq  415020 <CRYPTO_free@plt>
  44c9f3:	mov    0x178(%rsp),%rdx
  44c9fb:	xor    %fs:0x28,%rdx
  44ca04:	mov    %ebp,%eax
  44ca06:	jne    44d807 <X509_get0_pubkey_bitstr@plt+0x36e37>
  44ca0c:	add    $0x188,%rsp
  44ca13:	pop    %rbx
  44ca14:	pop    %rbp
  44ca15:	pop    %r12
  44ca17:	pop    %r13
  44ca19:	pop    %r14
  44ca1b:	pop    %r15
  44ca1d:	retq   
  44ca1e:	xchg   %ax,%ax
  44ca20:	lea    0x1fdd0(%rip),%rdi        # 46c7f7 <_fini+0xf2f3>
  44ca27:	mov    %rbp,%rsi
  44ca2a:	mov    %r8,%rcx
  44ca2d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44ca2f:	je     44ca70 <X509_get0_pubkey_bitstr@plt+0x360a0>
  44ca31:	lea    0x1fdc6(%rip),%rdi        # 46c7fe <_fini+0xf2fa>
  44ca38:	mov    %rbp,%rsi
  44ca3b:	mov    %r15,%rcx
  44ca3e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44ca40:	je     44cd58 <X509_get0_pubkey_bitstr@plt+0x36388>
  44ca46:	lea    0x1fdb9(%rip),%rdi        # 46c806 <_fini+0xf302>
  44ca4d:	mov    $0x9,%ecx
  44ca52:	mov    %rbp,%rsi
  44ca55:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44ca57:	jne    44cda8 <X509_get0_pubkey_bitstr@plt+0x363d8>
  44ca5d:	orl    $0x2,0x28(%rsp)
  44ca62:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44ca67:	nopw   0x0(%rax,%rax,1)
  44ca70:	movl   $0x10,0x38(%rsp)
  44ca78:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44ca7d:	mov    0x60(%rsp),%rdx
  44ca82:	mov    0x58(%rsp),%rsi
  44ca87:	lea    0xe8(%rsp),%rcx
  44ca8f:	mov    (%rbx),%rdi
  44ca92:	lea    0xf0(%rsp),%r8
  44ca9a:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  44ca9f:	test   %eax,%eax
  44caa1:	je     44cd48 <X509_get0_pubkey_bitstr@plt+0x36378>
  44caa7:	mov    0x30(%rsp),%r15d
  44caac:	test   %r15d,%r15d
  44caaf:	je     44cd90 <X509_get0_pubkey_bitstr@plt+0x363c0>
  44cab5:	mov    0xf0(%rsp),%rax
  44cabd:	mov    %rax,0x50(%rsp)
  44cac2:	cmpq   $0x0,0x50(%rsp)
  44cac8:	je     44d254 <X509_get0_pubkey_bitstr@plt+0x36884>
  44cace:	mov    0x50(%rsp),%rax
  44cad3:	movl   $0x1,0x68(%rsp)
  44cadb:	mov    %rax,0x58(%rsp)
  44cae0:	test   %r14b,%r14b
  44cae3:	jne    44ce00 <X509_get0_pubkey_bitstr@plt+0x36430>
  44cae9:	callq  416990 <ERR_load_crypto_strings@plt>
  44caee:	cmpq   $0x0,0x40(%rsp)
  44caf4:	je     44d20a <X509_get0_pubkey_bitstr@plt+0x3683a>
  44cafa:	mov    0x40(%rsp),%rdi
  44caff:	lea    0x12edb(%rip),%rsi        # 45f9e1 <_fini+0x24dd>
  44cb06:	callq  412ba0 <BIO_new_file@plt>
  44cb0b:	test   %rax,%rax
  44cb0e:	mov    %rax,%r15
  44cb11:	mov    0x40(%rsp),%rdx
  44cb16:	je     44d22e <X509_get0_pubkey_bitstr@plt+0x3685e>
  44cb1c:	cmpq   $0x0,0x48(%rsp)
  44cb22:	je     44d273 <X509_get0_pubkey_bitstr@plt+0x368a3>
  44cb28:	mov    0x48(%rsp),%rdi
  44cb2d:	lea    0x11277(%rip),%rsi        # 45ddab <_fini+0x8a7>
  44cb34:	callq  412ba0 <BIO_new_file@plt>
  44cb39:	test   %rax,%rax
  44cb3c:	mov    %rax,%r12
  44cb3f:	mov    0x48(%rsp),%rdx
  44cb44:	je     44d297 <X509_get0_pubkey_bitstr@plt+0x368c7>
  44cb4a:	mov    0x80(%rsp),%r11d
  44cb52:	test   %r11d,%r11d
  44cb55:	jne    44d0a7 <X509_get0_pubkey_bitstr@plt+0x366d7>
  44cb5b:	test   %bpl,%bpl
  44cb5e:	je     44d0e2 <X509_get0_pubkey_bitstr@plt+0x36712>
  44cb64:	mov    0x28(%rsp),%eax
  44cb68:	and    $0x3,%eax
  44cb6b:	cmp    $0x3,%eax
  44cb6e:	je     44d5ad <X509_get0_pubkey_bitstr@plt+0x36bdd>
  44cb74:	mov    0x28(%rsp),%edx
  44cb78:	mov    $0x0,%eax
  44cb7d:	mov    %edx,%ebp
  44cb7f:	and    $0x2,%ebp
  44cb82:	cmove  0x6c(%rsp),%eax
  44cb87:	and    $0x1,%edx
  44cb8a:	mov    %eax,0x6c(%rsp)
  44cb8e:	jne    44ce48 <X509_get0_pubkey_bitstr@plt+0x36478>
  44cb94:	mov    0x98(%rsp),%rsi
  44cb9c:	lea    0x145c0(%rip),%rax        # 461163 <_fini+0x3c5f>
  44cba3:	mov    0xc0(%rsp),%r9
  44cbab:	mov    0xe8(%rsp),%r8
  44cbb3:	mov    $0x1,%ecx
  44cbb8:	mov    $0x3,%edx
  44cbbd:	mov    %rax,(%rsp)
  44cbc1:	mov    (%rbx),%rdi
  44cbc4:	test   %rsi,%rsi
  44cbc7:	cmove  0x40(%rsp),%rsi
  44cbcd:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  44cbd2:	test   %rax,%rax
  44cbd5:	mov    %rax,0x28(%rsp)
  44cbda:	jne    44ce51 <X509_get0_pubkey_bitstr@plt+0x36481>
  44cbe0:	mov    $0x1,%ebp
  44cbe5:	nopl   (%rax)
  44cbe8:	mov    (%rbx),%rsi
  44cbeb:	xor    %edi,%edi
  44cbed:	callq  44a660 <X509_get0_pubkey_bitstr@plt+0x33c90>
  44cbf2:	jmpq   44c9b2 <X509_get0_pubkey_bitstr@plt+0x35fe2>
  44cbf7:	xor    %r14d,%r14d
  44cbfa:	movb   $0x0,0x70(%rsp)
  44cbff:	xor    %ebp,%ebp
  44cc01:	xor    %r9d,%r9d
  44cc04:	movq   $0x0,0xb8(%rsp)
  44cc10:	movq   $0x0,0xb0(%rsp)
  44cc1c:	movq   $0x0,0x88(%rsp)
  44cc28:	xor    %r12d,%r12d
  44cc2b:	movq   $0x0,0x50(%rsp)
  44cc34:	movq   $0x0,0x60(%rsp)
  44cc3d:	movq   $0x0,0x58(%rsp)
  44cc46:	xor    %r13d,%r13d
  44cc49:	movl   $0x0,0x68(%rsp)
  44cc51:	movl   $0x1,0xa4(%rsp)
  44cc5c:	movl   $0x0,0x38(%rsp)
  44cc64:	movl   $0x0,0x80(%rsp)
  44cc6f:	movl   $0x800,0x84(%rsp)
  44cc7a:	movl   $0x800,0xa0(%rsp)
  44cc85:	movl   $0x0,0x6c(%rsp)
  44cc8d:	movl   $0x0,0x28(%rsp)
  44cc95:	movl   $0x0,0x30(%rsp)
  44cc9d:	movl   $0x0,0xd0(%rsp)
  44cca8:	movq   $0x0,0xa8(%rsp)
  44ccb4:	movq   $0x0,0x90(%rsp)
  44ccc0:	movq   $0x0,0x78(%rsp)
  44ccc9:	movq   $0x0,0x98(%rsp)
  44ccd5:	movq   $0x0,0x48(%rsp)
  44ccde:	movq   $0x0,0x40(%rsp)
  44cce7:	nopw   0x0(%rax,%rax,1)
  44ccf0:	mov    (%rbx),%rdi
  44ccf3:	xor    %edx,%edx
  44ccf5:	mov    %r9,%rsi
  44ccf8:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  44ccfd:	cmpq   $0x0,0x50(%rsp)
  44cd03:	mov    %rax,0xc0(%rsp)
  44cd0b:	je     44ca7d <X509_get0_pubkey_bitstr@plt+0x360ad>
  44cd11:	mov    0x30(%rsp),%eax
  44cd15:	test   %eax,%eax
  44cd17:	je     44cd65 <X509_get0_pubkey_bitstr@plt+0x36395>
  44cd19:	mov    0x50(%rsp),%rdx
  44cd1e:	mov    0x58(%rsp),%rsi
  44cd23:	lea    0xe8(%rsp),%rcx
  44cd2b:	mov    (%rbx),%rdi
  44cd2e:	lea    0xf0(%rsp),%r8
  44cd36:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  44cd3b:	test   %eax,%eax
  44cd3d:	jne    44cab5 <X509_get0_pubkey_bitstr@plt+0x360e5>
  44cd43:	nopl   0x0(%rax,%rax,1)
  44cd48:	lea    0x11611(%rip),%rsi        # 45e360 <_fini+0xe5c>
  44cd4f:	jmpq   44c97c <X509_get0_pubkey_bitstr@plt+0x35fac>
  44cd54:	nopl   0x0(%rax)
  44cd58:	movl   $0x80,0x38(%rsp)
  44cd60:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44cd65:	mov    0x60(%rsp),%rdx
  44cd6a:	mov    0x50(%rsp),%rsi
  44cd6f:	lea    0xe8(%rsp),%rcx
  44cd77:	mov    (%rbx),%rdi
  44cd7a:	lea    0xf0(%rsp),%r8
  44cd82:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  44cd87:	test   %eax,%eax
  44cd89:	je     44cd48 <X509_get0_pubkey_bitstr@plt+0x36378>
  44cd8b:	nopl   0x0(%rax,%rax,1)
  44cd90:	mov    0xe8(%rsp),%rax
  44cd98:	mov    %rax,0x50(%rsp)
  44cd9d:	jmpq   44cac2 <X509_get0_pubkey_bitstr@plt+0x360f2>
  44cda2:	nopw   0x0(%rax,%rax,1)
  44cda8:	lea    0x1fa60(%rip),%rdi        # 46c80f <_fini+0xf30b>
  44cdaf:	mov    $0x9,%ecx
  44cdb4:	mov    %rbp,%rsi
  44cdb7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44cdb9:	je     44ce3e <X509_get0_pubkey_bitstr@plt+0x3646e>
  44cdbf:	lea    0x1fa52(%rip),%rdi        # 46c818 <_fini+0xf314>
  44cdc6:	mov    $0x9,%ecx
  44cdcb:	mov    %rbp,%rsi
  44cdce:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44cdd0:	jne    44d2ba <X509_get0_pubkey_bitstr@plt+0x368ea>
  44cdd6:	orl    $0x10,0x28(%rsp)
  44cddb:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44cde0:	mov    0x229199(%rip),%rax        # 675f80 <_fini+0x218a7c>
  44cde7:	xor    %esi,%esi
  44cde9:	mov    (%rax),%rdi
  44cdec:	callq  4161e0 <BIO_new_fp@plt>
  44cdf1:	mov    %rax,%rdi
  44cdf4:	mov    %rax,(%rbx)
  44cdf7:	jmpq   44c4ad <X509_get0_pubkey_bitstr@plt+0x35add>
  44cdfc:	nopl   0x0(%rax)
  44ce00:	movzbl 0x70(%rsp),%r15d
  44ce06:	mov    (%rbx),%rsi
  44ce09:	xor    %edi,%edi
  44ce0b:	movzbl %r15b,%edx
  44ce0f:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  44ce14:	test   %r15b,%r15b
  44ce17:	je     44cae9 <X509_get0_pubkey_bitstr@plt+0x36119>
  44ce1d:	mov    %r12,%rdi
  44ce20:	callq  44a710 <X509_get0_pubkey_bitstr@plt+0x33d40>
  44ce25:	mov    (%rbx),%rdi
  44ce28:	lea    0x12f62(%rip),%rsi        # 45fd91 <_fini+0x288d>
  44ce2f:	mov    %rax,%rdx
  44ce32:	xor    %eax,%eax
  44ce34:	callq  413c40 <BIO_printf@plt>
  44ce39:	jmpq   44cae9 <X509_get0_pubkey_bitstr@plt+0x36119>
  44ce3e:	orl    $0x8,0x28(%rsp)
  44ce43:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44ce48:	movq   $0x0,0x28(%rsp)
  44ce51:	test   %ebp,%ebp
  44ce53:	movq   $0x0,0x30(%rsp)
  44ce5c:	movq   $0x0,0x48(%rsp)
  44ce65:	je     44d2d9 <X509_get0_pubkey_bitstr@plt+0x36909>
  44ce6b:	mov    0x78(%rsp),%rsi
  44ce70:	test   %rsi,%rsi
  44ce73:	je     44cedd <X509_get0_pubkey_bitstr@plt+0x3650d>
  44ce75:	mov    0xc0(%rsp),%r8
  44ce7d:	mov    (%rbx),%rdi
  44ce80:	lea    0x1faa9(%rip),%r9        # 46c930 <_fini+0xf42c>
  44ce87:	xor    %ecx,%ecx
  44ce89:	mov    $0x3,%edx
  44ce8e:	callq  446530 <X509_get0_pubkey_bitstr@plt+0x2fb60>
  44ce93:	test   %rax,%rax
  44ce96:	mov    %rax,%rbp
  44ce99:	je     44d489 <X509_get0_pubkey_bitstr@plt+0x36ab9>
  44ce9f:	mov    %r14b,0x40(%rsp)
  44cea4:	mov    0x30(%rsp),%r14
  44cea9:	jmp    44cec3 <X509_get0_pubkey_bitstr@plt+0x364f3>
  44ceab:	nopl   0x0(%rax,%rax,1)
  44ceb0:	mov    %rbp,%rdi
  44ceb3:	callq  415850 <sk_shift@plt>
  44ceb8:	mov    %r14,%rdi
  44cebb:	mov    %rax,%rsi
  44cebe:	callq  412fe0 <sk_push@plt>
  44cec3:	mov    %rbp,%rdi
  44cec6:	callq  4156d0 <sk_num@plt>
  44cecb:	test   %eax,%eax
  44cecd:	jg     44ceb0 <X509_get0_pubkey_bitstr@plt+0x364e0>
  44cecf:	mov    %rbp,%rdi
  44ced2:	movzbl 0x40(%rsp),%r14d
  44ced8:	callq  4143f0 <sk_free@plt>
  44cedd:	mov    0x6c(%rsp),%r10d
  44cee2:	test   %r10d,%r10d
  44cee5:	jne    44d396 <X509_get0_pubkey_bitstr@plt+0x369c6>
  44ceeb:	mov    %r12,0x60(%rsp)
  44cef0:	xor    %ebp,%ebp
  44cef2:	mov    %r14b,0x40(%rsp)
  44cef7:	mov    0x30(%rsp),%r12
  44cefc:	jmp    44cf2a <X509_get0_pubkey_bitstr@plt+0x3655a>
  44cefe:	xchg   %ax,%ax
  44cf00:	mov    %ebp,%esi
  44cf02:	mov    %r13,%rdi
  44cf05:	callq  412b30 <sk_value@plt>
  44cf0a:	mov    %ebp,%esi
  44cf0c:	mov    %rax,%r14
  44cf0f:	mov    %r12,%rdi
  44cf12:	callq  412b30 <sk_value@plt>
  44cf17:	add    $0x1,%ebp
  44cf1a:	mov    $0xffffffff,%edx
  44cf1f:	mov    %r14,%rsi
  44cf22:	mov    %rax,%rdi
  44cf25:	callq  413400 <X509_alias_set1@plt>
  44cf2a:	mov    %r13,%rdi
  44cf2d:	callq  4156d0 <sk_num@plt>
  44cf32:	cmp    %eax,%ebp
  44cf34:	jl     44cf00 <X509_get0_pubkey_bitstr@plt+0x36530>
  44cf36:	cmpq   $0x0,0x28(%rsp)
  44cf3c:	movzbl 0x40(%rsp),%r14d
  44cf42:	mov    0x60(%rsp),%r12
  44cf47:	setne  %bpl
  44cf4b:	jne    44d529 <X509_get0_pubkey_bitstr@plt+0x36b59>
  44cf51:	mov    0x68(%rsp),%r8d
  44cf56:	test   %r8d,%r8d
  44cf59:	je     44d4e5 <X509_get0_pubkey_bitstr@plt+0x36b15>
  44cf5f:	mov    0x80(%rsp),%edi
  44cf66:	test   %edi,%edi
  44cf68:	je     44d58e <X509_get0_pubkey_bitstr@plt+0x36bbe>
  44cf6e:	mov    0x38(%rsp),%eax
  44cf72:	mov    0xe4(%rsp),%r9d
  44cf7a:	mov    0x30(%rsp),%r8
  44cf7f:	mov    0x48(%rsp),%rcx
  44cf84:	mov    0x28(%rsp),%rdx
  44cf89:	mov    0x90(%rsp),%rsi
  44cf91:	mov    %eax,0x18(%rsp)
  44cf95:	mov    0xa0(%rsp),%eax
  44cf9c:	mov    0x50(%rsp),%rdi
  44cfa1:	movl   $0xffffffff,0x10(%rsp)
  44cfa9:	mov    %eax,0x8(%rsp)
  44cfad:	mov    0xe0(%rsp),%eax
  44cfb4:	mov    %eax,(%rsp)
  44cfb7:	callq  413cb0 <PKCS12_create@plt>
  44cfbc:	test   %rax,%rax
  44cfbf:	mov    %rax,%r10
  44cfc2:	je     44d775 <X509_get0_pubkey_bitstr@plt+0x36da5>
  44cfc8:	mov    0x88(%rsp),%rdi
  44cfd0:	xor    %ebp,%ebp
  44cfd2:	test   %rdi,%rdi
  44cfd5:	je     44cff2 <X509_get0_pubkey_bitstr@plt+0x36622>
  44cfd7:	mov    %rax,0x38(%rsp)
  44cfdc:	callq  416720 <EVP_get_digestbyname@plt>
  44cfe1:	test   %rax,%rax
  44cfe4:	mov    %rax,%rbp
  44cfe7:	mov    0x38(%rsp),%r10
  44cfec:	je     44d7d7 <X509_get0_pubkey_bitstr@plt+0x36e07>
  44cff2:	mov    0x84(%rsp),%r9d
  44cffa:	cmp    $0xffffffff,%r9d
  44cffe:	je     44d025 <X509_get0_pubkey_bitstr@plt+0x36655>
  44d000:	mov    0x58(%rsp),%rsi
  44d005:	mov    %r10,%rdi
  44d008:	mov    %rbp,(%rsp)
  44d00c:	xor    %r8d,%r8d
  44d00f:	xor    %ecx,%ecx
  44d011:	mov    $0xffffffff,%edx
  44d016:	mov    %r10,0x38(%rsp)
  44d01b:	callq  413b40 <PKCS12_set_mac@plt>
  44d020:	mov    0x38(%rsp),%r10
  44d025:	mov    %r10,%rsi
  44d028:	mov    %r12,%rdi
  44d02b:	mov    %r10,0x38(%rsp)
  44d030:	callq  412b10 <i2d_PKCS12_bio@plt>
  44d035:	mov    0x38(%rsp),%r10
  44d03a:	xor    %ebp,%ebp
  44d03c:	cmpq   $0x0,0x28(%rsp)
  44d042:	je     44d058 <X509_get0_pubkey_bitstr@plt+0x36688>
  44d044:	mov    0x28(%rsp),%rdi
  44d049:	mov    %r10,0x38(%rsp)
  44d04e:	callq  412b00 <EVP_PKEY_free@plt>
  44d053:	mov    0x38(%rsp),%r10
  44d058:	mov    0x30(%rsp),%rdi
  44d05d:	test   %rdi,%rdi
  44d060:	je     44d078 <X509_get0_pubkey_bitstr@plt+0x366a8>
  44d062:	mov    0x228f0f(%rip),%rsi        # 675f78 <_fini+0x218a74>
  44d069:	mov    %r10,0x28(%rsp)
  44d06e:	callq  416250 <sk_pop_free@plt>
  44d073:	mov    0x28(%rsp),%r10
  44d078:	mov    0x48(%rsp),%rdi
  44d07d:	test   %rdi,%rdi
  44d080:	je     44d091 <X509_get0_pubkey_bitstr@plt+0x366c1>
  44d082:	mov    %r10,0x28(%rsp)
  44d087:	callq  4153a0 <X509_free@plt>
  44d08c:	mov    0x28(%rsp),%r10
  44d091:	test   %r10,%r10
  44d094:	je     44cbe8 <X509_get0_pubkey_bitstr@plt+0x36218>
  44d09a:	mov    %r10,%rdi
  44d09d:	callq  414a10 <PKCS12_free@plt>
  44d0a2:	jmpq   44c9a9 <X509_get0_pubkey_bitstr@plt+0x35fd9>
  44d0a7:	mov    0x30(%rsp),%ecx
  44d0ab:	lea    0x140(%rsp),%rdi
  44d0b3:	lea    0x1f83d(%rip),%rdx        # 46c8f7 <_fini+0xf3f3>
  44d0ba:	mov    $0x32,%esi
  44d0bf:	callq  4161f0 <EVP_read_pw_string@plt>
  44d0c4:	test   %eax,%eax
  44d0c6:	je     44cb5b <X509_get0_pubkey_bitstr@plt+0x3618b>
  44d0cc:	mov    (%rbx),%rdi
  44d0cf:	lea    0x1f835(%rip),%rsi        # 46c90b <_fini+0xf407>
  44d0d6:	xor    %eax,%eax
  44d0d8:	callq  413c40 <BIO_printf@plt>
  44d0dd:	jmpq   44c9a4 <X509_get0_pubkey_bitstr@plt+0x35fd4>
  44d0e2:	xor    %esi,%esi
  44d0e4:	mov    %r15,%rdi
  44d0e7:	callq  413d60 <d2i_PKCS12_bio@plt>
  44d0ec:	test   %rax,%rax
  44d0ef:	mov    %rax,%r10
  44d0f2:	je     44d7b4 <X509_get0_pubkey_bitstr@plt+0x36de4>
  44d0f8:	mov    0x68(%rsp),%esi
  44d0fc:	test   %esi,%esi
  44d0fe:	je     44d5e4 <X509_get0_pubkey_bitstr@plt+0x36c14>
  44d104:	mov    0x80(%rsp),%ecx
  44d10b:	test   %ecx,%ecx
  44d10d:	je     44d636 <X509_get0_pubkey_bitstr@plt+0x36c66>
  44d113:	testb  $0x4,0x28(%rsp)
  44d118:	je     44d15e <X509_get0_pubkey_bitstr@plt+0x3678e>
  44d11a:	mov    0x8(%r10),%rax
  44d11e:	test   %rax,%rax
  44d121:	je     44d15e <X509_get0_pubkey_bitstr@plt+0x3678e>
  44d123:	mov    0x10(%rax),%rdi
  44d127:	mov    $0x1,%edx
  44d12c:	test   %rdi,%rdi
  44d12f:	je     44d143 <X509_get0_pubkey_bitstr@plt+0x36773>
  44d131:	mov    %r10,0x30(%rsp)
  44d136:	callq  415a60 <ASN1_INTEGER_get@plt>
  44d13b:	mov    0x30(%rsp),%r10
  44d140:	mov    %rax,%rdx
  44d143:	mov    (%rbx),%rdi
  44d146:	lea    0x1f87b(%rip),%rsi        # 46c9c8 <_fini+0xf4c4>
  44d14d:	xor    %eax,%eax
  44d14f:	mov    %r10,0x30(%rsp)
  44d154:	callq  413c40 <BIO_printf@plt>
  44d159:	mov    0x30(%rsp),%r10
  44d15e:	mov    0xa4(%rsp),%edx
  44d165:	test   %edx,%edx
  44d167:	je     44d1c9 <X509_get0_pubkey_bitstr@plt+0x367f9>
  44d169:	mov    0x58(%rsp),%rax
  44d16e:	cmpb   $0x0,(%rax)
  44d171:	jne    44d496 <X509_get0_pubkey_bitstr@plt+0x36ac6>
  44d177:	xor    %edx,%edx
  44d179:	xor    %esi,%esi
  44d17b:	mov    %r10,%rdi
  44d17e:	mov    %r10,0x30(%rsp)
  44d183:	callq  413b20 <PKCS12_verify_mac@plt>
  44d188:	test   %eax,%eax
  44d18a:	mov    0x30(%rsp),%r10
  44d18f:	je     44d496 <X509_get0_pubkey_bitstr@plt+0x36ac6>
  44d195:	mov    0x80(%rsp),%eax
  44d19c:	test   %eax,%eax
  44d19e:	mov    $0x0,%eax
  44d1a3:	cmovne 0x50(%rsp),%rax
  44d1a9:	mov    %rax,0x50(%rsp)
  44d1ae:	mov    (%rbx),%rdi
  44d1b1:	lea    0x1f823(%rip),%rsi        # 46c9db <_fini+0xf4d7>
  44d1b8:	xor    %eax,%eax
  44d1ba:	mov    %r10,0x30(%rsp)
  44d1bf:	callq  413c40 <BIO_printf@plt>
  44d1c4:	mov    0x30(%rsp),%r10
  44d1c9:	mov    0x28(%rsp),%r8d
  44d1ce:	mov    0xf0(%rsp),%r9
  44d1d6:	mov    %r10,%rsi
  44d1d9:	mov    0x50(%rsp),%rdx
  44d1de:	mov    $0xffffffff,%ecx
  44d1e3:	mov    %r12,%rdi
  44d1e6:	mov    %r10,0x28(%rsp)
  44d1eb:	xor    %ebp,%ebp
  44d1ed:	callq  44c270 <X509_get0_pubkey_bitstr@plt+0x358a0>
  44d1f2:	test   %eax,%eax
  44d1f4:	mov    0x28(%rsp),%r10
  44d1f9:	je     44d65f <X509_get0_pubkey_bitstr@plt+0x36c8f>
  44d1ff:	movzbl 0x70(%rsp),%r14d
  44d205:	jmpq   44d09a <X509_get0_pubkey_bitstr@plt+0x366ca>
  44d20a:	mov    0x228cff(%rip),%rax        # 675f10 <_fini+0x218a0c>
  44d211:	xor    %esi,%esi
  44d213:	mov    (%rax),%rdi
  44d216:	callq  4161e0 <BIO_new_fp@plt>
  44d21b:	test   %rax,%rax
  44d21e:	mov    %rax,%r15
  44d221:	jne    44cb1c <X509_get0_pubkey_bitstr@plt+0x3614c>
  44d227:	lea    0x1f5b0(%rip),%rdx        # 46c7de <_fini+0xf2da>
  44d22e:	mov    (%rbx),%rdi
  44d231:	lea    0x1f6a2(%rip),%rsi        # 46c8da <_fini+0xf3d6>
  44d238:	xor    %eax,%eax
  44d23a:	xor    %r12d,%r12d
  44d23d:	xor    %r15d,%r15d
  44d240:	callq  413c40 <BIO_printf@plt>
  44d245:	mov    0x40(%rsp),%rdi
  44d24a:	callq  4142c0 <perror@plt>
  44d24f:	jmpq   44c9a4 <X509_get0_pubkey_bitstr@plt+0x35fd4>
  44d254:	lea    0x140(%rsp),%rax
  44d25c:	mov    %rax,0x58(%rsp)
  44d261:	lea    0x100(%rsp),%rax
  44d269:	mov    %rax,0x50(%rsp)
  44d26e:	jmpq   44cae0 <X509_get0_pubkey_bitstr@plt+0x36110>
  44d273:	mov    0x228c3e(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  44d27a:	xor    %esi,%esi
  44d27c:	mov    (%rax),%rdi
  44d27f:	callq  4161e0 <BIO_new_fp@plt>
  44d284:	test   %rax,%rax
  44d287:	mov    %rax,%r12
  44d28a:	jne    44cb4a <X509_get0_pubkey_bitstr@plt+0x3617a>
  44d290:	lea    0x1f54f(%rip),%rdx        # 46c7e6 <_fini+0xf2e2>
  44d297:	mov    (%rbx),%rdi
  44d29a:	lea    0x126ab(%rip),%rsi        # 45f94c <_fini+0x2448>
  44d2a1:	xor    %eax,%eax
  44d2a3:	xor    %r12d,%r12d
  44d2a6:	callq  413c40 <BIO_printf@plt>
  44d2ab:	mov    0x48(%rsp),%rdi
  44d2b0:	callq  4142c0 <perror@plt>
  44d2b5:	jmpq   44c9a4 <X509_get0_pubkey_bitstr@plt+0x35fd4>
  44d2ba:	lea    0x10a26(%rip),%rdi        # 45dce7 <_fini+0x7e3>
  44d2c1:	mov    %rbp,%rsi
  44d2c4:	mov    %r8,%rcx
  44d2c7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44d2c9:	jne    44d5c3 <X509_get0_pubkey_bitstr@plt+0x36bf3>
  44d2cf:	orl    $0x3,0x28(%rsp)
  44d2d4:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44d2d9:	mov    0xc0(%rsp),%r8
  44d2e1:	mov    0x40(%rsp),%rsi
  44d2e6:	lea    0x108c9(%rip),%r9        # 45dbb6 <_fini+0x6b2>
  44d2ed:	mov    (%rbx),%rdi
  44d2f0:	xor    %ecx,%ecx
  44d2f2:	mov    $0x3,%edx
  44d2f7:	callq  446530 <X509_get0_pubkey_bitstr@plt+0x2fb60>
  44d2fc:	test   %rax,%rax
  44d2ff:	mov    %rax,0x30(%rsp)
  44d304:	je     44d75e <X509_get0_pubkey_bitstr@plt+0x36d8e>
  44d30a:	mov    0x28(%rsp),%rdx
  44d30f:	test   %rdx,%rdx
  44d312:	je     44d74f <X509_get0_pubkey_bitstr@plt+0x36d7f>
  44d318:	mov    %r14b,0x40(%rsp)
  44d31d:	mov    %r12,0x70(%rsp)
  44d322:	mov    %rdx,%r14
  44d325:	mov    %r13,0x60(%rsp)
  44d32a:	mov    %rax,%r12
  44d32d:	jmp    44d353 <X509_get0_pubkey_bitstr@plt+0x36983>
  44d32f:	nop
  44d330:	mov    %ebp,%esi
  44d332:	mov    %r12,%rdi
  44d335:	callq  412b30 <sk_value@plt>
  44d33a:	mov    %r14,%rsi
  44d33d:	mov    %rax,%rdi
  44d340:	mov    %rax,%r13
  44d343:	callq  416430 <X509_check_private_key@plt>
  44d348:	test   %eax,%eax
  44d34a:	jne    44d683 <X509_get0_pubkey_bitstr@plt+0x36cb3>
  44d350:	add    $0x1,%ebp
  44d353:	mov    %r12,%rdi
  44d356:	callq  4156d0 <sk_num@plt>
  44d35b:	cmp    %eax,%ebp
  44d35d:	jl     44d330 <X509_get0_pubkey_bitstr@plt+0x36960>
  44d35f:	movzbl 0x40(%rsp),%r14d
  44d365:	mov    0x60(%rsp),%r13
  44d36a:	mov    0x70(%rsp),%r12
  44d36f:	mov    (%rbx),%rdi
  44d372:	lea    0x1ff37(%rip),%rsi        # 46d2b0 <_fini+0xfdac>
  44d379:	xor    %eax,%eax
  44d37b:	mov    $0x1,%ebp
  44d380:	callq  413c40 <BIO_printf@plt>
  44d385:	movq   $0x0,0x48(%rsp)
  44d38e:	xor    %r10d,%r10d
  44d391:	jmpq   44d044 <X509_get0_pubkey_bitstr@plt+0x36674>
  44d396:	callq  4166c0 <X509_STORE_new@plt>
  44d39b:	test   %rax,%rax
  44d39e:	mov    %rax,%rbp
  44d3a1:	je     44d79e <X509_get0_pubkey_bitstr@plt+0x36dce>
  44d3a7:	mov    0xb0(%rsp),%rdx
  44d3af:	mov    0xb8(%rsp),%rsi
  44d3b7:	mov    %rax,%rdi
  44d3ba:	callq  412c60 <X509_STORE_load_locations@plt>
  44d3bf:	test   %eax,%eax
  44d3c1:	je     44d742 <X509_get0_pubkey_bitstr@plt+0x36d72>
  44d3c7:	mov    0x48(%rsp),%rdi
  44d3cc:	lea    0xf8(%rsp),%rdx
  44d3d4:	mov    %rbp,%rsi
  44d3d7:	callq  44ba80 <X509_get0_pubkey_bitstr@plt+0x350b0>
  44d3dc:	mov    %rbp,%rdi
  44d3df:	mov    %eax,0x40(%rsp)
  44d3e3:	callq  4134b0 <X509_STORE_free@plt>
  44d3e8:	mov    0x40(%rsp),%eax
  44d3ec:	test   %eax,%eax
  44d3ee:	jne    44d465 <X509_get0_pubkey_bitstr@plt+0x36a95>
  44d3f0:	mov    %r14b,0x40(%rsp)
  44d3f5:	mov    $0x1,%ebp
  44d3fa:	mov    0x30(%rsp),%r14
  44d3ff:	jmp    44d425 <X509_get0_pubkey_bitstr@plt+0x36a55>
  44d401:	nopl   0x0(%rax)
  44d408:	mov    0xf8(%rsp),%rdi
  44d410:	mov    %ebp,%esi
  44d412:	add    $0x1,%ebp
  44d415:	callq  412b30 <sk_value@plt>
  44d41a:	mov    %r14,%rdi
  44d41d:	mov    %rax,%rsi
  44d420:	callq  412fe0 <sk_push@plt>
  44d425:	mov    0xf8(%rsp),%rdi
  44d42d:	callq  4156d0 <sk_num@plt>
  44d432:	cmp    %eax,%ebp
  44d434:	jl     44d408 <X509_get0_pubkey_bitstr@plt+0x36a38>
  44d436:	mov    0xf8(%rsp),%rdi
  44d43e:	xor    %esi,%esi
  44d440:	movzbl 0x40(%rsp),%r14d
  44d446:	callq  412b30 <sk_value@plt>
  44d44b:	mov    %rax,%rdi
  44d44e:	callq  4153a0 <X509_free@plt>
  44d453:	mov    0xf8(%rsp),%rdi
  44d45b:	callq  4143f0 <sk_free@plt>
  44d460:	jmpq   44ceeb <X509_get0_pubkey_bitstr@plt+0x3651b>
  44d465:	js     44d7fa <X509_get0_pubkey_bitstr@plt+0x36e2a>
  44d46b:	movslq %eax,%rdi
  44d46e:	xchg   %ax,%ax
  44d470:	callq  415690 <X509_verify_cert_error_string@plt>
  44d475:	mov    (%rbx),%rdi
  44d478:	lea    0x1f4e5(%rip),%rsi        # 46c964 <_fini+0xf460>
  44d47f:	mov    %rax,%rdx
  44d482:	xor    %eax,%eax
  44d484:	callq  413c40 <BIO_printf@plt>
  44d489:	mov    $0x1,%ebp
  44d48e:	xor    %r10d,%r10d
  44d491:	jmpq   44d03c <X509_get0_pubkey_bitstr@plt+0x3666c>
  44d496:	mov    0x58(%rsp),%rsi
  44d49b:	mov    %r10,%rdi
  44d49e:	mov    $0xffffffff,%edx
  44d4a3:	mov    %r10,0x30(%rsp)
  44d4a8:	callq  413b20 <PKCS12_verify_mac@plt>
  44d4ad:	test   %eax,%eax
  44d4af:	mov    0x30(%rsp),%r10
  44d4b4:	jne    44d1ae <X509_get0_pubkey_bitstr@plt+0x367de>
  44d4ba:	mov    (%rbx),%rdi
  44d4bd:	lea    0x1fe14(%rip),%rsi        # 46d2d8 <_fini+0xfdd4>
  44d4c4:	mov    %r10,0x28(%rsp)
  44d4c9:	mov    $0x1,%ebp
  44d4ce:	callq  413c40 <BIO_printf@plt>
  44d4d3:	mov    (%rbx),%rdi
  44d4d6:	callq  413f40 <ERR_print_errors@plt>
  44d4db:	mov    0x28(%rsp),%r10
  44d4e0:	jmpq   44d1ff <X509_get0_pubkey_bitstr@plt+0x3682f>
  44d4e5:	lea    0x100(%rsp),%rdi
  44d4ed:	lea    0x1f489(%rip),%rdx        # 46c97d <_fini+0xf479>
  44d4f4:	mov    $0x1,%ecx
  44d4f9:	mov    $0x32,%esi
  44d4fe:	callq  4161f0 <EVP_read_pw_string@plt>
  44d503:	test   %eax,%eax
  44d505:	je     44cf5f <X509_get0_pubkey_bitstr@plt+0x3658f>
  44d50b:	mov    (%rbx),%rdi
  44d50e:	lea    0x1f3f6(%rip),%rsi        # 46c90b <_fini+0xf407>
  44d515:	xor    %eax,%eax
  44d517:	mov    $0x1,%ebp
  44d51c:	callq  413c40 <BIO_printf@plt>
  44d521:	xor    %r10d,%r10d
  44d524:	jmpq   44d03c <X509_get0_pubkey_bitstr@plt+0x3666c>
  44d529:	cmpq   $0x0,0xa8(%rsp)
  44d532:	je     44d556 <X509_get0_pubkey_bitstr@plt+0x36b86>
  44d534:	mov    0xa8(%rsp),%rcx
  44d53c:	mov    0x28(%rsp),%rdi
  44d541:	mov    $0xffffffff,%r8d
  44d547:	mov    $0x1001,%edx
  44d54c:	mov    $0x1a1,%esi
  44d551:	callq  414500 <EVP_PKEY_add1_attr_by_NID@plt>
  44d556:	test   %bpl,%bpl
  44d559:	je     44cf51 <X509_get0_pubkey_bitstr@plt+0x36581>
  44d55f:	mov    0xd0(%rsp),%r9d
  44d567:	test   %r9d,%r9d
  44d56a:	je     44cf51 <X509_get0_pubkey_bitstr@plt+0x36581>
  44d570:	mov    0x28(%rsp),%rdi
  44d575:	mov    $0xffffffff,%r8d
  44d57b:	xor    %ecx,%ecx
  44d57d:	xor    %edx,%edx
  44d57f:	mov    $0x358,%esi
  44d584:	callq  414500 <EVP_PKEY_add1_attr_by_NID@plt>
  44d589:	jmpq   44cf51 <X509_get0_pubkey_bitstr@plt+0x36581>
  44d58e:	lea    0x100(%rsp),%rsi
  44d596:	lea    0x140(%rsp),%rdi
  44d59e:	mov    $0x32,%edx
  44d5a3:	callq  413560 <BUF_strlcpy@plt>
  44d5a8:	jmpq   44cf6e <X509_get0_pubkey_bitstr@plt+0x3659e>
  44d5ad:	mov    (%rbx),%rdi
  44d5b0:	lea    0x1f369(%rip),%rsi        # 46c920 <_fini+0xf41c>
  44d5b7:	xor    %eax,%eax
  44d5b9:	callq  413c40 <BIO_printf@plt>
  44d5be:	jmpq   44cbe0 <X509_get0_pubkey_bitstr@plt+0x36210>
  44d5c3:	lea    0x1f257(%rip),%rdi        # 46c821 <_fini+0xf31d>
  44d5ca:	mov    $0x6,%ecx
  44d5cf:	mov    %rbp,%rsi
  44d5d2:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44d5d4:	jne    44d6d8 <X509_get0_pubkey_bitstr@plt+0x36d08>
  44d5da:	orl    $0x4,0x28(%rsp)
  44d5df:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44d5e4:	lea    0x100(%rsp),%rdi
  44d5ec:	lea    0x1f3be(%rip),%rdx        # 46c9b1 <_fini+0xf4ad>
  44d5f3:	xor    %ecx,%ecx
  44d5f5:	mov    $0x32,%esi
  44d5fa:	mov    %rax,0x30(%rsp)
  44d5ff:	callq  4161f0 <EVP_read_pw_string@plt>
  44d604:	test   %eax,%eax
  44d606:	mov    0x30(%rsp),%r10
  44d60b:	je     44d104 <X509_get0_pubkey_bitstr@plt+0x36734>
  44d611:	mov    (%rbx),%rdi
  44d614:	lea    0x1f2f0(%rip),%rsi        # 46c90b <_fini+0xf407>
  44d61b:	xor    %eax,%eax
  44d61d:	mov    %r10,0x28(%rsp)
  44d622:	mov    $0x1,%ebp
  44d627:	callq  413c40 <BIO_printf@plt>
  44d62c:	mov    0x28(%rsp),%r10
  44d631:	jmpq   44d1ff <X509_get0_pubkey_bitstr@plt+0x3682f>
  44d636:	lea    0x100(%rsp),%rsi
  44d63e:	lea    0x140(%rsp),%rdi
  44d646:	mov    $0x32,%edx
  44d64b:	mov    %r10,0x30(%rsp)
  44d650:	callq  413560 <BUF_strlcpy@plt>
  44d655:	mov    0x30(%rsp),%r10
  44d65a:	jmpq   44d113 <X509_get0_pubkey_bitstr@plt+0x36743>
  44d65f:	mov    (%rbx),%rdi
  44d662:	lea    0x1fc97(%rip),%rsi        # 46d300 <_fini+0xfdfc>
  44d669:	mov    $0x1,%bpl
  44d66c:	callq  413c40 <BIO_printf@plt>
  44d671:	mov    (%rbx),%rdi
  44d674:	callq  413f40 <ERR_print_errors@plt>
  44d679:	mov    0x28(%rsp),%r10
  44d67e:	jmpq   44d1ff <X509_get0_pubkey_bitstr@plt+0x3682f>
  44d683:	mov    %r13,%rax
  44d686:	xor    %edx,%edx
  44d688:	xor    %esi,%esi
  44d68a:	mov    %rax,%rdi
  44d68d:	mov    %r13,0x48(%rsp)
  44d692:	movzbl 0x40(%rsp),%r14d
  44d698:	mov    0x60(%rsp),%r13
  44d69d:	mov    0x70(%rsp),%r12
  44d6a2:	callq  415390 <X509_keyid_set1@plt>
  44d6a7:	mov    0x48(%rsp),%rdi
  44d6ac:	xor    %edx,%edx
  44d6ae:	xor    %esi,%esi
  44d6b0:	callq  413400 <X509_alias_set1@plt>
  44d6b5:	mov    0x30(%rsp),%rdi
  44d6ba:	mov    %ebp,%esi
  44d6bc:	callq  415190 <sk_delete@plt>
  44d6c1:	cmpq   $0x0,0x48(%rsp)
  44d6c7:	jne    44ce6b <X509_get0_pubkey_bitstr@plt+0x3649b>
  44d6cd:	jmpq   44d36f <X509_get0_pubkey_bitstr@plt+0x3699f>
  44d6d2:	nopw   0x0(%rax,%rax,1)
  44d6d8:	lea    0x1af37(%rip),%rdi        # 468616 <_fini+0xb112>
  44d6df:	mov    %rbp,%rsi
  44d6e2:	mov    %r8,%rcx
  44d6e5:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44d6e7:	je     44d791 <X509_get0_pubkey_bitstr@plt+0x36dc1>
  44d6ed:	lea    0x1f133(%rip),%rdi        # 46c827 <_fini+0xf323>
  44d6f4:	mov    $0x9,%ecx
  44d6f9:	mov    %rbp,%rsi
  44d6fc:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44d6fe:	je     44d7c7 <X509_get0_pubkey_bitstr@plt+0x36df7>
  44d704:	lea    0x1f125(%rip),%rdi        # 46c830 <_fini+0xf32c>
  44d70b:	mov    $0xa,%ecx
  44d710:	mov    %rbp,%rsi
  44d713:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44d715:	je     44dbf0 <X509_get0_pubkey_bitstr@plt+0x37220>
  44d71b:	lea    0x1f118(%rip),%rdi        # 46c83a <_fini+0xf336>
  44d722:	mov    $0x9,%ecx
  44d727:	mov    %rbp,%rsi
  44d72a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44d72c:	jne    44d80c <X509_get0_pubkey_bitstr@plt+0x36e3c>
  44d732:	movl   $0x92,0xe0(%rsp)
  44d73d:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44d742:	mov    %rbp,%rdi
  44d745:	callq  412840 <X509_STORE_set_default_paths@plt>
  44d74a:	jmpq   44d3c7 <X509_get0_pubkey_bitstr@plt+0x369f7>
  44d74f:	mov    0x28(%rsp),%rax
  44d754:	mov    %rax,0x48(%rsp)
  44d759:	jmpq   44ce6b <X509_get0_pubkey_bitstr@plt+0x3649b>
  44d75e:	mov    0x30(%rsp),%rax
  44d763:	mov    $0x1,%ebp
  44d768:	xor    %r10d,%r10d
  44d76b:	mov    %rax,0x48(%rsp)
  44d770:	jmpq   44d03c <X509_get0_pubkey_bitstr@plt+0x3666c>
  44d775:	mov    (%rbx),%rdi
  44d778:	mov    %rax,0x38(%rsp)
  44d77d:	mov    $0x1,%ebp
  44d782:	callq  413f40 <ERR_print_errors@plt>
  44d787:	mov    0x38(%rsp),%r10
  44d78c:	jmpq   44d03c <X509_get0_pubkey_bitstr@plt+0x3666c>
  44d791:	movl   $0x1,0x6c(%rsp)
  44d799:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44d79e:	mov    (%rbx),%rdi
  44d7a1:	lea    0x1f1a3(%rip),%rsi        # 46c94b <_fini+0xf447>
  44d7a8:	xor    %eax,%eax
  44d7aa:	callq  413c40 <BIO_printf@plt>
  44d7af:	jmpq   44d489 <X509_get0_pubkey_bitstr@plt+0x36ab9>
  44d7b4:	mov    (%rbx),%rdi
  44d7b7:	callq  413f40 <ERR_print_errors@plt>
  44d7bc:	movzbl 0x70(%rsp),%r14d
  44d7c2:	jmpq   44c9a4 <X509_get0_pubkey_bitstr@plt+0x35fd4>
  44d7c7:	movl   $0x1,0x80(%rsp)
  44d7d2:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44d7d7:	mov    0x88(%rsp),%rdx
  44d7df:	mov    (%rbx),%rdi
  44d7e2:	lea    0x1f1ab(%rip),%rsi        # 46c994 <_fini+0xf490>
  44d7e9:	xor    %eax,%eax
  44d7eb:	callq  413c40 <BIO_printf@plt>
  44d7f0:	mov    0x38(%rsp),%r10
  44d7f5:	jmpq   44cff2 <X509_get0_pubkey_bitstr@plt+0x36622>
  44d7fa:	mov    (%rbx),%rdi
  44d7fd:	callq  413f40 <ERR_print_errors@plt>
  44d802:	jmpq   44d489 <X509_get0_pubkey_bitstr@plt+0x36ab9>
  44d807:	callq  414c30 <__stack_chk_fail@plt>
  44d80c:	lea    0x1f030(%rip),%rdi        # 46c843 <_fini+0xf33f>
  44d813:	mov    %rbp,%rsi
  44d816:	mov    %r15,%rcx
  44d819:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44d81b:	je     44dc00 <X509_get0_pubkey_bitstr@plt+0x37230>
  44d821:	lea    0x18841(%rip),%rsi        # 466069 <_fini+0x8b65>
  44d828:	mov    %rbp,%rdi
  44d82b:	mov    %r9,0xd8(%rsp)
  44d833:	mov    %edx,0xd4(%rsp)
  44d83a:	mov    %r8,0xc8(%rsp)
  44d842:	callq  4155c0 <strcmp@plt>
  44d847:	test   %eax,%eax
  44d849:	mov    0xc8(%rsp),%r8
  44d851:	mov    0xd4(%rsp),%edx
  44d858:	mov    0xd8(%rsp),%r9
  44d860:	je     44dc0d <X509_get0_pubkey_bitstr@plt+0x3723d>
  44d866:	lea    0x18801(%rip),%rsi        # 46606e <_fini+0x8b6a>
  44d86d:	mov    %rbp,%rdi
  44d870:	mov    %r9,0xd8(%rsp)
  44d878:	mov    %edx,0xd4(%rsp)
  44d87f:	mov    %r8,0xc8(%rsp)
  44d887:	callq  4155c0 <strcmp@plt>
  44d88c:	test   %eax,%eax
  44d88e:	mov    0xc8(%rsp),%r8
  44d896:	mov    0xd4(%rsp),%edx
  44d89d:	mov    0xd8(%rsp),%r9
  44d8a5:	je     44dc3f <X509_get0_pubkey_bitstr@plt+0x3726f>
  44d8ab:	lea    0x187c2(%rip),%rsi        # 466074 <_fini+0x8b70>
  44d8b2:	mov    %rbp,%rdi
  44d8b5:	mov    %r9,0xd8(%rsp)
  44d8bd:	mov    %edx,0xd4(%rsp)
  44d8c4:	mov    %r8,0xc8(%rsp)
  44d8cc:	callq  4155c0 <strcmp@plt>
  44d8d1:	test   %eax,%eax
  44d8d3:	mov    0xc8(%rsp),%r8
  44d8db:	mov    0xd4(%rsp),%edx
  44d8e2:	mov    0xd8(%rsp),%r9
  44d8ea:	je     44dc38 <X509_get0_pubkey_bitstr@plt+0x37268>
  44d8f0:	lea    0x18783(%rip),%rsi        # 46607a <_fini+0x8b76>
  44d8f7:	mov    %rbp,%rdi
  44d8fa:	mov    %r9,0xd8(%rsp)
  44d902:	mov    %edx,0xd4(%rsp)
  44d909:	mov    %r8,0xc8(%rsp)
  44d911:	callq  4155c0 <strcmp@plt>
  44d916:	test   %eax,%eax
  44d918:	mov    0xc8(%rsp),%r8
  44d920:	mov    0xd4(%rsp),%edx
  44d927:	mov    0xd8(%rsp),%r9
  44d92f:	je     44dc67 <X509_get0_pubkey_bitstr@plt+0x37297>
  44d935:	lea    0x18744(%rip),%rsi        # 466080 <_fini+0x8b7c>
  44d93c:	mov    %rbp,%rdi
  44d93f:	mov    %r9,0xd8(%rsp)
  44d947:	mov    %edx,0xd4(%rsp)
  44d94e:	mov    %r8,0xc8(%rsp)
  44d956:	callq  4155c0 <strcmp@plt>
  44d95b:	test   %eax,%eax
  44d95d:	mov    0xc8(%rsp),%r8
  44d965:	mov    0xd4(%rsp),%edx
  44d96c:	mov    0xd8(%rsp),%r9
  44d974:	je     44dc59 <X509_get0_pubkey_bitstr@plt+0x37289>
  44d97a:	lea    0x18707(%rip),%rsi        # 466088 <_fini+0x8b84>
  44d981:	mov    %rbp,%rdi
  44d984:	mov    %r9,0xd8(%rsp)
  44d98c:	mov    %edx,0xd4(%rsp)
  44d993:	mov    %r8,0xc8(%rsp)
  44d99b:	callq  4155c0 <strcmp@plt>
  44d9a0:	test   %eax,%eax
  44d9a2:	mov    0xc8(%rsp),%r8
  44d9aa:	mov    0xd4(%rsp),%edx
  44d9b1:	mov    0xd8(%rsp),%r9
  44d9b9:	je     44dc52 <X509_get0_pubkey_bitstr@plt+0x37282>
  44d9bf:	lea    0x186ca(%rip),%rsi        # 466090 <_fini+0x8b8c>
  44d9c6:	mov    %rbp,%rdi
  44d9c9:	mov    %r9,0xd8(%rsp)
  44d9d1:	mov    %edx,0xd4(%rsp)
  44d9d8:	mov    %r8,0xc8(%rsp)
  44d9e0:	callq  4155c0 <strcmp@plt>
  44d9e5:	test   %eax,%eax
  44d9e7:	mov    0xc8(%rsp),%r8
  44d9ef:	mov    0xd4(%rsp),%edx
  44d9f6:	mov    0xd8(%rsp),%r9
  44d9fe:	je     44dc47 <X509_get0_pubkey_bitstr@plt+0x37277>
  44da04:	lea    0x1868d(%rip),%rsi        # 466098 <_fini+0x8b94>
  44da0b:	mov    %rbp,%rdi
  44da0e:	mov    %r9,0xd8(%rsp)
  44da16:	mov    %edx,0xd4(%rsp)
  44da1d:	mov    %r8,0xc8(%rsp)
  44da25:	callq  4155c0 <strcmp@plt>
  44da2a:	test   %eax,%eax
  44da2c:	mov    0xc8(%rsp),%r8
  44da34:	mov    0xd4(%rsp),%edx
  44da3b:	mov    0xd8(%rsp),%r9
  44da43:	je     44defc <X509_get0_pubkey_bitstr@plt+0x3752c>
  44da49:	lea    0x18655(%rip),%rsi        # 4660a5 <_fini+0x8ba1>
  44da50:	mov    %rbp,%rdi
  44da53:	mov    %r9,0xd8(%rsp)
  44da5b:	mov    %edx,0xd4(%rsp)
  44da62:	mov    %r8,0xc8(%rsp)
  44da6a:	callq  4155c0 <strcmp@plt>
  44da6f:	test   %eax,%eax
  44da71:	mov    0xc8(%rsp),%r8
  44da79:	mov    0xd4(%rsp),%edx
  44da80:	mov    0xd8(%rsp),%r9
  44da88:	je     44def2 <X509_get0_pubkey_bitstr@plt+0x37522>
  44da8e:	lea    0x1861d(%rip),%rsi        # 4660b2 <_fini+0x8bae>
  44da95:	mov    %rbp,%rdi
  44da98:	mov    %r9,0xd8(%rsp)
  44daa0:	mov    %edx,0xd4(%rsp)
  44daa7:	mov    %r8,0xc8(%rsp)
  44daaf:	callq  4155c0 <strcmp@plt>
  44dab4:	test   %eax,%eax
  44dab6:	mov    0xc8(%rsp),%r8
  44dabe:	mov    0xd4(%rsp),%edx
  44dac5:	mov    0xd8(%rsp),%r9
  44dacd:	je     44df0a <X509_get0_pubkey_bitstr@plt+0x3753a>
  44dad3:	lea    0x1ed71(%rip),%rsi        # 46c84b <_fini+0xf347>
  44dada:	mov    %rbp,%rdi
  44dadd:	mov    %r9,0xd8(%rsp)
  44dae5:	mov    %edx,0xd4(%rsp)
  44daec:	mov    %r8,0xc8(%rsp)
  44daf4:	callq  4155c0 <strcmp@plt>
  44daf9:	test   %eax,%eax
  44dafb:	mov    0xc8(%rsp),%r8
  44db03:	mov    0xd4(%rsp),%edx
  44db0a:	mov    0xd8(%rsp),%r9
  44db12:	je     44dee2 <X509_get0_pubkey_bitstr@plt+0x37512>
  44db18:	lea    0x1ed34(%rip),%rsi        # 46c853 <_fini+0xf34f>
  44db1f:	mov    %rbp,%rdi
  44db22:	callq  4155c0 <strcmp@plt>
  44db27:	test   %eax,%eax
  44db29:	mov    0xc8(%rsp),%r8
  44db31:	mov    0xd4(%rsp),%edx
  44db38:	mov    0xd8(%rsp),%r9
  44db40:	je     44ddca <X509_get0_pubkey_bitstr@plt+0x373fa>
  44db46:	lea    0x1ed0f(%rip),%rsi        # 46c85c <_fini+0xf358>
  44db4d:	mov    %rbp,%rdi
  44db50:	callq  4155c0 <strcmp@plt>
  44db55:	test   %eax,%eax
  44db57:	mov    0xc8(%rsp),%r8
  44db5f:	mov    0xd4(%rsp),%edx
  44db66:	mov    0xd8(%rsp),%r9
  44db6e:	je     44ddba <X509_get0_pubkey_bitstr@plt+0x373ea>
  44db74:	lea    0x1ecec(%rip),%rsi        # 46c867 <_fini+0xf363>
  44db7b:	mov    %rbp,%rdi
  44db7e:	callq  4155c0 <strcmp@plt>
  44db83:	test   %eax,%eax
  44db85:	mov    0xc8(%rsp),%r8
  44db8d:	mov    0xd4(%rsp),%edx
  44db94:	mov    0xd8(%rsp),%r9
  44db9c:	je     44dcc6 <X509_get0_pubkey_bitstr@plt+0x372f6>
  44dba2:	lea    0x1ecc5(%rip),%rsi        # 46c86e <_fini+0xf36a>
  44dba9:	mov    %rbp,%rdi
  44dbac:	callq  4155c0 <strcmp@plt>
  44dbb1:	test   %eax,%eax
  44dbb3:	mov    0xc8(%rsp),%r8
  44dbbb:	mov    0xd4(%rsp),%edx
  44dbc2:	mov    0xd8(%rsp),%r9
  44dbca:	jne    44dc72 <X509_get0_pubkey_bitstr@plt+0x372a2>
  44dbd0:	mov    0x8(%r14),%rax
  44dbd4:	test   %rax,%rax
  44dbd7:	je     44c5e8 <X509_get0_pubkey_bitstr@plt+0x35c18>
  44dbdd:	add    $0x8,%r14
  44dbe1:	mov    %rax,0x88(%rsp)
  44dbe9:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44dbee:	xchg   %ax,%ax
  44dbf0:	movl   $0x0,0xa4(%rsp)
  44dbfb:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44dc00:	movl   $0x1,0x30(%rsp)
  44dc08:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44dc0d:	callq  414280 <EVP_des_cbc@plt>
  44dc12:	lea    0x22e0b7(%rip),%rdx        # 67bcd0 <_edata+0xfc8>
  44dc19:	mov    0xc8(%rsp),%r8
  44dc21:	mov    0xd8(%rsp),%r9
  44dc29:	mov    %rax,(%rdx)
  44dc2c:	mov    0xd4(%rsp),%edx
  44dc33:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44dc38:	callq  413810 <EVP_idea_cbc@plt>
  44dc3d:	jmp    44dc12 <X509_get0_pubkey_bitstr@plt+0x37242>
  44dc3f:	nop
  44dc40:	callq  415db0 <EVP_des_ede3_cbc@plt>
  44dc45:	jmp    44dc12 <X509_get0_pubkey_bitstr@plt+0x37242>
  44dc47:	callq  4129c0 <EVP_aes_256_cbc@plt>
  44dc4c:	nopl   0x0(%rax)
  44dc50:	jmp    44dc12 <X509_get0_pubkey_bitstr@plt+0x37242>
  44dc52:	callq  4131e0 <EVP_aes_192_cbc@plt>
  44dc57:	jmp    44dc12 <X509_get0_pubkey_bitstr@plt+0x37242>
  44dc59:	nopl   0x0(%rax)
  44dc60:	callq  412f60 <EVP_aes_128_cbc@plt>
  44dc65:	jmp    44dc12 <X509_get0_pubkey_bitstr@plt+0x37242>
  44dc67:	callq  4166e0 <EVP_seed_cbc@plt>
  44dc6c:	nopl   0x0(%rax)
  44dc70:	jmp    44dc12 <X509_get0_pubkey_bitstr@plt+0x37242>
  44dc72:	lea    0x105c7(%rip),%rsi        # 45e240 <_fini+0xd3c>
  44dc79:	mov    %rbp,%rdi
  44dc7c:	mov    %r9,0xd8(%rsp)
  44dc84:	mov    %edx,0xd4(%rsp)
  44dc8b:	mov    %r8,0xc8(%rsp)
  44dc93:	callq  4155c0 <strcmp@plt>
  44dc98:	test   %eax,%eax
  44dc9a:	mov    0xc8(%rsp),%r8
  44dca2:	mov    0xd4(%rsp),%edx
  44dca9:	mov    0xd8(%rsp),%r9
  44dcb1:	jne    44dcd6 <X509_get0_pubkey_bitstr@plt+0x37306>
  44dcb3:	lea    0x22e016(%rip),%rax        # 67bcd0 <_edata+0xfc8>
  44dcba:	movq   $0x0,(%rax)
  44dcc1:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44dcc6:	movl   $0xffffffff,0x84(%rsp)
  44dcd1:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44dcd6:	lea    0x1eb99(%rip),%rsi        # 46c876 <_fini+0xf372>
  44dcdd:	mov    %rbp,%rdi
  44dce0:	mov    %r9,0xd8(%rsp)
  44dce8:	mov    %edx,0xd4(%rsp)
  44dcef:	mov    %r8,0xc8(%rsp)
  44dcf7:	callq  4155c0 <strcmp@plt>
  44dcfc:	test   %eax,%eax
  44dcfe:	mov    0xc8(%rsp),%r8
  44dd06:	mov    0xd4(%rsp),%edx
  44dd0d:	mov    0xd8(%rsp),%r9
  44dd15:	je     44de74 <X509_get0_pubkey_bitstr@plt+0x374a4>
  44dd1b:	lea    0x1eb5d(%rip),%rsi        # 46c87f <_fini+0xf37b>
  44dd22:	mov    %rbp,%rdi
  44dd25:	mov    %r9,0xd8(%rsp)
  44dd2d:	mov    %edx,0xd4(%rsp)
  44dd34:	mov    %r8,0xc8(%rsp)
  44dd3c:	callq  4155c0 <strcmp@plt>
  44dd41:	test   %eax,%eax
  44dd43:	mov    0xc8(%rsp),%r8
  44dd4b:	mov    0xd4(%rsp),%edx
  44dd52:	mov    0xd8(%rsp),%r9
  44dd5a:	je     44de39 <X509_get0_pubkey_bitstr@plt+0x37469>
  44dd60:	lea    0x1049a(%rip),%rsi        # 45e201 <_fini+0xcfd>
  44dd67:	mov    %rbp,%rdi
  44dd6a:	mov    %r9,0xd8(%rsp)
  44dd72:	mov    %edx,0xd4(%rsp)
  44dd79:	mov    %r8,0xc8(%rsp)
  44dd81:	callq  4155c0 <strcmp@plt>
  44dd86:	test   %eax,%eax
  44dd88:	mov    0xc8(%rsp),%r8
  44dd90:	mov    0xd4(%rsp),%edx
  44dd97:	mov    0xd8(%rsp),%r9
  44dd9f:	jne    44ddda <X509_get0_pubkey_bitstr@plt+0x3740a>
  44dda1:	mov    0x8(%r14),%rax
  44dda5:	test   %rax,%rax
  44dda8:	je     44c5e8 <X509_get0_pubkey_bitstr@plt+0x35c18>
  44ddae:	add    $0x8,%r14
  44ddb2:	mov    %rax,%r12
  44ddb5:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44ddba:	movl   $0x1,0x84(%rsp)
  44ddc5:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44ddca:	movl   $0x800,0x84(%rsp)
  44ddd5:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44ddda:	lea    0x15811(%rip),%rsi        # 4635f2 <_fini+0x60ee>
  44dde1:	mov    %rbp,%rdi
  44dde4:	mov    %r9,0xd8(%rsp)
  44ddec:	mov    %edx,0xd4(%rsp)
  44ddf3:	mov    %r8,0xc8(%rsp)
  44ddfb:	callq  4155c0 <strcmp@plt>
  44de00:	test   %eax,%eax
  44de02:	mov    0xc8(%rsp),%r8
  44de0a:	mov    0xd4(%rsp),%edx
  44de11:	mov    0xd8(%rsp),%r9
  44de19:	jne    44de86 <X509_get0_pubkey_bitstr@plt+0x374b6>
  44de1b:	mov    0x8(%r14),%rax
  44de1f:	test   %rax,%rax
  44de22:	je     44c5e8 <X509_get0_pubkey_bitstr@plt+0x35c18>
  44de28:	add    $0x8,%r14
  44de2c:	mov    %rax,0x98(%rsp)
  44de34:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44de39:	mov    0x8(%r14),%rsi
  44de3d:	mov    0x70(%rsp),%rdi
  44de42:	lea    0x8(%r14),%rbp
  44de46:	callq  4182e6 <X509_get0_pubkey_bitstr@plt+0x1916>
  44de4b:	mov    0xd4(%rsp),%edx
  44de52:	test   %eax,%eax
  44de54:	mov    $0x1,%eax
  44de59:	mov    %rbp,%r14
  44de5c:	mov    0xc8(%rsp),%r8
  44de64:	mov    0xd8(%rsp),%r9
  44de6c:	cmove  %eax,%edx
  44de6f:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44de74:	lea    0x8(%r14),%rbp
  44de78:	mov    0x8(%r14),%rsi
  44de7c:	mov    0xc0(%rsp),%rdi
  44de84:	jmp    44de46 <X509_get0_pubkey_bitstr@plt+0x37476>
  44de86:	lea    0x14d37(%rip),%rsi        # 462bc4 <_fini+0x56c0>
  44de8d:	mov    %rbp,%rdi
  44de90:	mov    %r9,0xd8(%rsp)
  44de98:	mov    %edx,0xd4(%rsp)
  44de9f:	mov    %r8,0xc8(%rsp)
  44dea7:	callq  4155c0 <strcmp@plt>
  44deac:	test   %eax,%eax
  44deae:	mov    0xc8(%rsp),%r8
  44deb6:	mov    0xd4(%rsp),%edx
  44debd:	mov    0xd8(%rsp),%r9
  44dec5:	jne    44df1a <X509_get0_pubkey_bitstr@plt+0x3754a>
  44dec7:	mov    0x8(%r14),%rax
  44decb:	test   %rax,%rax
  44dece:	je     44c5e8 <X509_get0_pubkey_bitstr@plt+0x35c18>
  44ded4:	add    $0x8,%r14
  44ded8:	mov    %rax,0x78(%rsp)
  44dedd:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44dee2:	movl   $0x1,0xa0(%rsp)
  44deed:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44def2:	callq  413460 <EVP_camellia_192_cbc@plt>
  44def7:	jmpq   44dc12 <X509_get0_pubkey_bitstr@plt+0x37242>
  44defc:	nopl   0x0(%rax)
  44df00:	callq  415f60 <EVP_camellia_128_cbc@plt>
  44df05:	jmpq   44dc12 <X509_get0_pubkey_bitstr@plt+0x37242>
  44df0a:	nopw   0x0(%rax,%rax,1)
  44df10:	callq  4160b0 <EVP_camellia_256_cbc@plt>
  44df15:	jmpq   44dc12 <X509_get0_pubkey_bitstr@plt+0x37242>
  44df1a:	lea    0x13047(%rip),%rsi        # 460f68 <_fini+0x3a64>
  44df21:	mov    %rbp,%rdi
  44df24:	mov    %r9,0xd8(%rsp)
  44df2c:	mov    %edx,0xd4(%rsp)
  44df33:	mov    %r8,0xc8(%rsp)
  44df3b:	callq  4155c0 <strcmp@plt>
  44df40:	test   %eax,%eax
  44df42:	mov    0xc8(%rsp),%r8
  44df4a:	mov    0xd4(%rsp),%edx
  44df51:	mov    0xd8(%rsp),%r9
  44df59:	jne    44df79 <X509_get0_pubkey_bitstr@plt+0x375a9>
  44df5b:	mov    0x8(%r14),%rax
  44df5f:	test   %rax,%rax
  44df62:	je     44c5e8 <X509_get0_pubkey_bitstr@plt+0x35c18>
  44df68:	add    $0x8,%r14
  44df6c:	mov    %rax,0x90(%rsp)
  44df74:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44df79:	lea    0x1e907(%rip),%rsi        # 46c887 <_fini+0xf383>
  44df80:	mov    %rbp,%rdi
  44df83:	mov    %r9,0xd8(%rsp)
  44df8b:	mov    %edx,0xd4(%rsp)
  44df92:	mov    %r8,0xc8(%rsp)
  44df9a:	callq  4155c0 <strcmp@plt>
  44df9f:	test   %eax,%eax
  44dfa1:	mov    0xc8(%rsp),%r8
  44dfa9:	mov    0xd4(%rsp),%edx
  44dfb0:	mov    0xd8(%rsp),%r9
  44dfb8:	je     44e002 <X509_get0_pubkey_bitstr@plt+0x37632>
  44dfba:	lea    0x1e8cb(%rip),%rsi        # 46c88c <_fini+0xf388>
  44dfc1:	mov    %rbp,%rdi
  44dfc4:	callq  4155c0 <strcmp@plt>
  44dfc9:	test   %eax,%eax
  44dfcb:	mov    0xc8(%rsp),%r8
  44dfd3:	mov    0xd4(%rsp),%edx
  44dfda:	mov    0xd8(%rsp),%r9
  44dfe2:	jne    44e012 <X509_get0_pubkey_bitstr@plt+0x37642>
  44dfe4:	mov    0x8(%r14),%rax
  44dfe8:	test   %rax,%rax
  44dfeb:	je     44c5e8 <X509_get0_pubkey_bitstr@plt+0x35c18>
  44dff1:	add    $0x8,%r14
  44dff5:	mov    %rax,0xa8(%rsp)
  44dffd:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44e002:	movl   $0x1,0xd0(%rsp)
  44e00d:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44e012:	lea    0x1e878(%rip),%rsi        # 46c891 <_fini+0xf38d>
  44e019:	mov    %rbp,%rdi
  44e01c:	mov    %r9,0xd8(%rsp)
  44e024:	mov    %edx,0xd4(%rsp)
  44e02b:	mov    %r8,0xc8(%rsp)
  44e033:	callq  4155c0 <strcmp@plt>
  44e038:	test   %eax,%eax
  44e03a:	mov    0xc8(%rsp),%r8
  44e042:	mov    0xd4(%rsp),%edx
  44e049:	mov    0xd8(%rsp),%r9
  44e051:	jne    44e0c8 <X509_get0_pubkey_bitstr@plt+0x376f8>
  44e053:	cmpq   $0x0,0x8(%r14)
  44e058:	je     44c5e8 <X509_get0_pubkey_bitstr@plt+0x35c18>
  44e05e:	test   %r13,%r13
  44e061:	lea    0x8(%r14),%rbp
  44e065:	jne    44e086 <X509_get0_pubkey_bitstr@plt+0x376b6>
  44e067:	callq  412cd0 <sk_new_null@plt>
  44e06c:	mov    0xd8(%rsp),%r9
  44e074:	mov    0xd4(%rsp),%edx
  44e07b:	mov    %rax,%r13
  44e07e:	mov    0xc8(%rsp),%r8
  44e086:	mov    0x8(%r14),%rsi
  44e08a:	mov    %r13,%rdi
  44e08d:	mov    %r9,0xd8(%rsp)
  44e095:	mov    %edx,0xd4(%rsp)
  44e09c:	mov    %r8,0xc8(%rsp)
  44e0a4:	mov    %rbp,%r14
  44e0a7:	callq  412fe0 <sk_push@plt>
  44e0ac:	mov    0xc8(%rsp),%r8
  44e0b4:	mov    0xd4(%rsp),%edx
  44e0bb:	mov    0xd8(%rsp),%r9
  44e0c3:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44e0c8:	cmpb   $0x69,0x1(%rbp)
  44e0cc:	jne    44e0f5 <X509_get0_pubkey_bitstr@plt+0x37725>
  44e0ce:	cmpb   $0x6e,0x2(%rbp)
  44e0d2:	jne    44e0f5 <X509_get0_pubkey_bitstr@plt+0x37725>
  44e0d4:	cmpb   $0x0,0x3(%rbp)
  44e0d8:	jne    44e0f5 <X509_get0_pubkey_bitstr@plt+0x37725>
  44e0da:	mov    0x8(%r14),%rax
  44e0de:	test   %rax,%rax
  44e0e1:	je     44c5e8 <X509_get0_pubkey_bitstr@plt+0x35c18>
  44e0e7:	add    $0x8,%r14
  44e0eb:	mov    %rax,0x40(%rsp)
  44e0f0:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44e0f5:	lea    0xfd4a(%rip),%rsi        # 45de46 <_fini+0x942>
  44e0fc:	mov    %rbp,%rdi
  44e0ff:	mov    %r9,0xd8(%rsp)
  44e107:	mov    %edx,0xd4(%rsp)
  44e10e:	mov    %r8,0xc8(%rsp)
  44e116:	callq  4155c0 <strcmp@plt>
  44e11b:	test   %eax,%eax
  44e11d:	mov    0xc8(%rsp),%r8
  44e125:	mov    0xd4(%rsp),%edx
  44e12c:	mov    0xd8(%rsp),%r9
  44e134:	jne    44e151 <X509_get0_pubkey_bitstr@plt+0x37781>
  44e136:	mov    0x8(%r14),%rax
  44e13a:	test   %rax,%rax
  44e13d:	je     44c5e8 <X509_get0_pubkey_bitstr@plt+0x35c18>
  44e143:	add    $0x8,%r14
  44e147:	mov    %rax,0x48(%rsp)
  44e14c:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44e151:	lea    0x10098(%rip),%rsi        # 45e1f0 <_fini+0xcec>
  44e158:	mov    %rbp,%rdi
  44e15b:	mov    %r9,0xd8(%rsp)
  44e163:	mov    %edx,0xd4(%rsp)
  44e16a:	mov    %r8,0xc8(%rsp)
  44e172:	callq  4155c0 <strcmp@plt>
  44e177:	test   %eax,%eax
  44e179:	mov    0xc8(%rsp),%r8
  44e181:	mov    0xd4(%rsp),%edx
  44e188:	mov    0xd8(%rsp),%r9
  44e190:	jne    44e1ad <X509_get0_pubkey_bitstr@plt+0x377dd>
  44e192:	mov    0x8(%r14),%rax
  44e196:	test   %rax,%rax
  44e199:	je     44c5e8 <X509_get0_pubkey_bitstr@plt+0x35c18>
  44e19f:	add    $0x8,%r14
  44e1a3:	mov    %rax,0x58(%rsp)
  44e1a8:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44e1ad:	lea    0x10044(%rip),%rsi        # 45e1f8 <_fini+0xcf4>
  44e1b4:	mov    %rbp,%rdi
  44e1b7:	mov    %r9,0xd8(%rsp)
  44e1bf:	mov    %edx,0xd4(%rsp)
  44e1c6:	mov    %r8,0xc8(%rsp)
  44e1ce:	callq  4155c0 <strcmp@plt>
  44e1d3:	test   %eax,%eax
  44e1d5:	mov    0xc8(%rsp),%r8
  44e1dd:	mov    0xd4(%rsp),%edx
  44e1e4:	mov    0xd8(%rsp),%r9
  44e1ec:	jne    44e209 <X509_get0_pubkey_bitstr@plt+0x37839>
  44e1ee:	mov    0x8(%r14),%rax
  44e1f2:	test   %rax,%rax
  44e1f5:	je     44c5e8 <X509_get0_pubkey_bitstr@plt+0x35c18>
  44e1fb:	add    $0x8,%r14
  44e1ff:	mov    %rax,0x60(%rsp)
  44e204:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44e209:	lea    0x1e689(%rip),%rsi        # 46c899 <_fini+0xf395>
  44e210:	mov    %rbp,%rdi
  44e213:	mov    %r9,0xd8(%rsp)
  44e21b:	mov    %edx,0xd4(%rsp)
  44e222:	mov    %r8,0xc8(%rsp)
  44e22a:	callq  4155c0 <strcmp@plt>
  44e22f:	test   %eax,%eax
  44e231:	mov    0xc8(%rsp),%r8
  44e239:	mov    0xd4(%rsp),%edx
  44e240:	mov    0xd8(%rsp),%r9
  44e248:	jne    44e26d <X509_get0_pubkey_bitstr@plt+0x3789d>
  44e24a:	mov    0x8(%r14),%rax
  44e24e:	test   %rax,%rax
  44e251:	je     44c5e8 <X509_get0_pubkey_bitstr@plt+0x35c18>
  44e257:	add    $0x8,%r14
  44e25b:	mov    %rax,0x50(%rsp)
  44e260:	movl   $0x1,0x68(%rsp)
  44e268:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44e26d:	lea    0xf8c1(%rip),%rsi        # 45db35 <_fini+0x631>
  44e274:	mov    %rbp,%rdi
  44e277:	mov    %r9,0xd8(%rsp)
  44e27f:	mov    %edx,0xd4(%rsp)
  44e286:	mov    %r8,0xc8(%rsp)
  44e28e:	callq  4155c0 <strcmp@plt>
  44e293:	test   %eax,%eax
  44e295:	mov    0xc8(%rsp),%r8
  44e29d:	mov    0xd4(%rsp),%edx
  44e2a4:	mov    0xd8(%rsp),%r9
  44e2ac:	jne    44e2cc <X509_get0_pubkey_bitstr@plt+0x378fc>
  44e2ae:	mov    0x8(%r14),%rax
  44e2b2:	test   %rax,%rax
  44e2b5:	je     44c5e8 <X509_get0_pubkey_bitstr@plt+0x35c18>
  44e2bb:	add    $0x8,%r14
  44e2bf:	mov    %rax,0xb0(%rsp)
  44e2c7:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44e2cc:	lea    0xf86a(%rip),%rsi        # 45db3d <_fini+0x639>
  44e2d3:	mov    %rbp,%rdi
  44e2d6:	mov    %r9,0xd8(%rsp)
  44e2de:	mov    %edx,0xd4(%rsp)
  44e2e5:	mov    %r8,0xc8(%rsp)
  44e2ed:	callq  4155c0 <strcmp@plt>
  44e2f2:	test   %eax,%eax
  44e2f4:	mov    0xc8(%rsp),%r8
  44e2fc:	mov    0xd4(%rsp),%edx
  44e303:	mov    0xd8(%rsp),%r9
  44e30b:	jne    44e32b <X509_get0_pubkey_bitstr@plt+0x3795b>
  44e30d:	mov    0x8(%r14),%rax
  44e311:	test   %rax,%rax
  44e314:	je     44c5e8 <X509_get0_pubkey_bitstr@plt+0x35c18>
  44e31a:	add    $0x8,%r14
  44e31e:	mov    %rax,0xb8(%rsp)
  44e326:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44e32b:	lea    0xf830(%rip),%rsi        # 45db62 <_fini+0x65e>
  44e332:	mov    %rbp,%rdi
  44e335:	mov    %r9,0xd8(%rsp)
  44e33d:	mov    %edx,0xd4(%rsp)
  44e344:	mov    %r8,0xc8(%rsp)
  44e34c:	callq  4155c0 <strcmp@plt>
  44e351:	test   %eax,%eax
  44e353:	mov    0xc8(%rsp),%r8
  44e35b:	mov    0xd4(%rsp),%edx
  44e362:	mov    0xd8(%rsp),%r9
  44e36a:	jne    44c5e8 <X509_get0_pubkey_bitstr@plt+0x35c18>
  44e370:	mov    0x8(%r14),%rax
  44e374:	test   %rax,%rax
  44e377:	je     44c5e8 <X509_get0_pubkey_bitstr@plt+0x35c18>
  44e37d:	add    $0x8,%r14
  44e381:	mov    %rax,%r9
  44e384:	jmpq   44c5ed <X509_get0_pubkey_bitstr@plt+0x35c1d>
  44e389:	nopl   0x0(%rax)
  44e390:	push   %r15
  44e392:	push   %r14
  44e394:	push   %r13
  44e396:	push   %r12
  44e398:	push   %rbp
  44e399:	mov    %rsi,%rbp
  44e39c:	push   %rbx
  44e39d:	sub    $0xb8,%rsp
  44e3a4:	lea    0x22c995(%rip),%rbx        # 67ad40 <_edata+0x38>
  44e3ab:	mov    %fs:0x28,%rax
  44e3b4:	mov    %rax,0xa8(%rsp)
  44e3bc:	xor    %eax,%eax
  44e3be:	movq   $0x0,0x60(%rsp)
  44e3c7:	movq   $0x0,0x68(%rsp)
  44e3d0:	mov    (%rbx),%rdi
  44e3d3:	test   %rdi,%rdi
  44e3d6:	je     44e998 <X509_get0_pubkey_bitstr@plt+0x37fc8>
  44e3dc:	xor    %esi,%esi
  44e3de:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  44e3e3:	test   %eax,%eax
  44e3e5:	jne    44e470 <X509_get0_pubkey_bitstr@plt+0x37aa0>
  44e3eb:	mov    $0x1,%ebx
  44e3f0:	xor    %r15d,%r15d
  44e3f3:	xor    %r14d,%r14d
  44e3f6:	xor    %ebp,%ebp
  44e3f8:	xor    %r12d,%r12d
  44e3fb:	xor    %r13d,%r13d
  44e3fe:	mov    %rbp,%rdi
  44e401:	callq  414ed0 <X509_SIG_free@plt>
  44e406:	mov    %r14,%rdi
  44e409:	callq  415070 <PKCS8_PRIV_KEY_INFO_free@plt>
  44e40e:	mov    %r15,%rdi
  44e411:	callq  412b00 <EVP_PKEY_free@plt>
  44e416:	mov    %r12,%rdi
  44e419:	callq  416570 <BIO_free_all@plt>
  44e41e:	mov    %r13,%rdi
  44e421:	callq  413960 <BIO_free@plt>
  44e426:	mov    0x60(%rsp),%rdi
  44e42b:	test   %rdi,%rdi
  44e42e:	je     44e435 <X509_get0_pubkey_bitstr@plt+0x37a65>
  44e430:	callq  415020 <CRYPTO_free@plt>
  44e435:	mov    0x68(%rsp),%rdi
  44e43a:	test   %rdi,%rdi
  44e43d:	je     44e444 <X509_get0_pubkey_bitstr@plt+0x37a74>
  44e43f:	callq  415020 <CRYPTO_free@plt>
  44e444:	mov    %ebx,%eax
  44e446:	mov    0xa8(%rsp),%rbx
  44e44e:	xor    %fs:0x28,%rbx
  44e457:	jne    44ee5a <X509_get0_pubkey_bitstr@plt+0x3848a>
  44e45d:	add    $0xb8,%rsp
  44e464:	pop    %rbx
  44e465:	pop    %rbp
  44e466:	pop    %r12
  44e468:	pop    %r13
  44e46a:	pop    %r14
  44e46c:	pop    %r15
  44e46e:	retq   
  44e46f:	nop
  44e470:	callq  416990 <ERR_load_crypto_strings@plt>
  44e475:	callq  412cf0 <OPENSSL_add_all_algorithms_noconf@plt>
  44e47a:	mov    0x8(%rbp),%rax
  44e47e:	lea    0x8(%rbp),%r14
  44e482:	test   %rax,%rax
  44e485:	je     44eb84 <X509_get0_pubkey_bitstr@plt+0x381b4>
  44e48b:	cmpb   $0x2d,(%rax)
  44e48e:	movq   $0x0,0x38(%rsp)
  44e497:	mov    $0x3,%r15d
  44e49d:	movl   $0x0,0x48(%rsp)
  44e4a5:	movl   $0x0,0x58(%rsp)
  44e4ad:	mov    $0x0,%ebp
  44e4b2:	movl   $0x3,0x30(%rsp)
  44e4ba:	movl   $0x800,0x4c(%rsp)
  44e4c2:	jne    44ebb5 <X509_get0_pubkey_bitstr@plt+0x381e5>
  44e4c8:	mov    %r15d,0x18(%rsp)
  44e4cd:	mov    $0xffffffff,%r13d
  44e4d3:	movl   $0x0,0x34(%rsp)
  44e4db:	movq   $0x0,0x28(%rsp)
  44e4e4:	movq   $0x0,0x20(%rsp)
  44e4ed:	mov    $0x8,%r12d
  44e4f3:	movq   $0x0,0x50(%rsp)
  44e4fc:	movq   $0x0,0x40(%rsp)
  44e505:	mov    %rbp,%r15
  44e508:	mov    %rax,%rdx
  44e50b:	jmp    44e56a <X509_get0_pubkey_bitstr@plt+0x37b9a>
  44e50d:	nopl   (%rax)
  44e510:	lea    0xf7c8(%rip),%rdi        # 45dcdf <_fini+0x7db>
  44e517:	mov    %rdx,%rsi
  44e51a:	mov    %r12,%rcx
  44e51d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44e51f:	jne    44e5e0 <X509_get0_pubkey_bitstr@plt+0x37c10>
  44e525:	mov    0x8(%r14),%rdi
  44e529:	test   %rdi,%rdi
  44e52c:	je     44e5d0 <X509_get0_pubkey_bitstr@plt+0x37c00>
  44e532:	lea    0x8(%r14),%rbp
  44e536:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  44e53b:	xor    %edx,%edx
  44e53d:	mov    %eax,0x18(%rsp)
  44e541:	nopl   0x0(%rax)
  44e548:	test   %edx,%edx
  44e54a:	lea    0x8(%rbp),%r14
  44e54e:	jne    44e850 <X509_get0_pubkey_bitstr@plt+0x37e80>
  44e554:	mov    0x8(%rbp),%rdx
  44e558:	test   %rdx,%rdx
  44e55b:	je     44e738 <X509_get0_pubkey_bitstr@plt+0x37d68>
  44e561:	cmpb   $0x2d,(%rdx)
  44e564:	jne    44e738 <X509_get0_pubkey_bitstr@plt+0x37d68>
  44e56a:	movzbl (%rdx),%ecx
  44e56d:	mov    %ecx,%eax
  44e56f:	sub    $0x2d,%eax
  44e572:	jne    44e510 <X509_get0_pubkey_bitstr@plt+0x37b40>
  44e574:	cmpb   $0x76,0x1(%rdx)
  44e578:	jne    44e510 <X509_get0_pubkey_bitstr@plt+0x37b40>
  44e57a:	movzbl 0x2(%rdx),%ecx
  44e57e:	cmp    $0x32,%cl
  44e581:	je     44e610 <X509_get0_pubkey_bitstr@plt+0x37c40>
  44e587:	cmp    $0x31,%cl
  44e58a:	jne    44e510 <X509_get0_pubkey_bitstr@plt+0x37b40>
  44e58c:	cmpb   $0x0,0x3(%rdx)
  44e590:	jne    44e510 <X509_get0_pubkey_bitstr@plt+0x37b40>
  44e596:	mov    0x8(%r14),%rdi
  44e59a:	test   %rdi,%rdi
  44e59d:	je     44e5d0 <X509_get0_pubkey_bitstr@plt+0x37c00>
  44e59f:	callq  413720 <OBJ_txt2nid@plt>
  44e5a4:	xor    %edx,%edx
  44e5a6:	test   %eax,%eax
  44e5a8:	lea    0x8(%r14),%rbp
  44e5ac:	mov    %eax,%r13d
  44e5af:	jne    44e548 <X509_get0_pubkey_bitstr@plt+0x37b78>
  44e5b1:	mov    0x8(%r14),%rdx
  44e5b5:	mov    (%rbx),%rdi
  44e5b8:	lea    0x1e11c(%rip),%rsi        # 46c6db <_fini+0xf1d7>
  44e5bf:	xor    %eax,%eax
  44e5c1:	callq  413c40 <BIO_printf@plt>
  44e5c6:	mov    $0x1,%edx
  44e5cb:	jmpq   44e548 <X509_get0_pubkey_bitstr@plt+0x37b78>
  44e5d0:	mov    %r14,%rbp
  44e5d3:	mov    $0x1,%edx
  44e5d8:	jmpq   44e548 <X509_get0_pubkey_bitstr@plt+0x37b78>
  44e5dd:	nopl   (%rax)
  44e5e0:	lea    0xfba9(%rip),%rdi        # 45e190 <_fini+0xc8c>
  44e5e7:	mov    $0x9,%ecx
  44e5ec:	mov    %rdx,%rsi
  44e5ef:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44e5f1:	jne    44e660 <X509_get0_pubkey_bitstr@plt+0x37c90>
  44e5f3:	mov    0x8(%r14),%rdi
  44e5f7:	test   %rdi,%rdi
  44e5fa:	je     44e5d0 <X509_get0_pubkey_bitstr@plt+0x37c00>
  44e5fc:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  44e601:	lea    0x8(%r14),%rbp
  44e605:	mov    %eax,0x30(%rsp)
  44e609:	xor    %edx,%edx
  44e60b:	jmpq   44e548 <X509_get0_pubkey_bitstr@plt+0x37b78>
  44e610:	cmpb   $0x0,0x3(%rdx)
  44e614:	jne    44e510 <X509_get0_pubkey_bitstr@plt+0x37b40>
  44e61a:	mov    0x8(%r14),%rdi
  44e61e:	test   %rdi,%rdi
  44e621:	je     44e5d0 <X509_get0_pubkey_bitstr@plt+0x37c00>
  44e623:	callq  416810 <EVP_get_cipherbyname@plt>
  44e628:	xor    %edx,%edx
  44e62a:	test   %rax,%rax
  44e62d:	lea    0x8(%r14),%rbp
  44e631:	mov    %rax,%r15
  44e634:	jne    44e548 <X509_get0_pubkey_bitstr@plt+0x37b78>
  44e63a:	mov    0x8(%r14),%rdx
  44e63e:	mov    (%rbx),%rdi
  44e641:	lea    0x17ce0(%rip),%rsi        # 466328 <_fini+0x8e24>
  44e648:	xor    %eax,%eax
  44e64a:	callq  413c40 <BIO_printf@plt>
  44e64f:	mov    $0x1,%edx
  44e654:	jmpq   44e548 <X509_get0_pubkey_bitstr@plt+0x37b78>
  44e659:	nopl   0x0(%rax)
  44e660:	lea    0x1ecc1(%rip),%rdi        # 46d328 <_fini+0xfe24>
  44e667:	mov    $0x7,%ecx
  44e66c:	mov    %rdx,%rsi
  44e66f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44e671:	je     44e720 <X509_get0_pubkey_bitstr@plt+0x37d50>
  44e677:	lea    0x1e1cd(%rip),%rdi        # 46c84b <_fini+0xf347>
  44e67e:	mov    %rdx,%rsi
  44e681:	mov    %r12,%rcx
  44e684:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44e686:	je     44e980 <X509_get0_pubkey_bitstr@plt+0x37fb0>
  44e68c:	lea    0x1ec9c(%rip),%rdi        # 46d32f <_fini+0xfe2b>
  44e693:	mov    $0x9,%ecx
  44e698:	mov    %rdx,%rsi
  44e69b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44e69d:	je     44e9b4 <X509_get0_pubkey_bitstr@plt+0x37fe4>
  44e6a3:	lea    0x1ec8e(%rip),%rdi        # 46d338 <_fini+0xfe34>
  44e6aa:	mov    $0x7,%ecx
  44e6af:	mov    %rdx,%rsi
  44e6b2:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44e6b4:	je     44eae7 <X509_get0_pubkey_bitstr@plt+0x38117>
  44e6ba:	lea    0x1ec7e(%rip),%rdi        # 46d33f <_fini+0xfe3b>
  44e6c1:	mov    $0x6,%ecx
  44e6c6:	mov    %rdx,%rsi
  44e6c9:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44e6cb:	je     44ebee <X509_get0_pubkey_bitstr@plt+0x3821e>
  44e6d1:	lea    0x1ec6d(%rip),%rdi        # 46d345 <_fini+0xfe41>
  44e6d8:	mov    $0x7,%ecx
  44e6dd:	mov    %rdx,%rsi
  44e6e0:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44e6e2:	je     44ecd5 <X509_get0_pubkey_bitstr@plt+0x38305>
  44e6e8:	lea    0xfb01(%rip),%rdi        # 45e1f0 <_fini+0xcec>
  44e6ef:	mov    %rdx,%rsi
  44e6f2:	mov    %r12,%rcx
  44e6f5:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44e6f7:	jne    44e81f <X509_get0_pubkey_bitstr@plt+0x37e4f>
  44e6fd:	mov    0x8(%r14),%rax
  44e701:	test   %rax,%rax
  44e704:	mov    %rax,0x20(%rsp)
  44e709:	je     44e850 <X509_get0_pubkey_bitstr@plt+0x37e80>
  44e70f:	lea    0x8(%r14),%rbp
  44e713:	xor    %edx,%edx
  44e715:	jmpq   44e548 <X509_get0_pubkey_bitstr@plt+0x37b78>
  44e71a:	nopw   0x0(%rax,%rax,1)
  44e720:	mov    %r14,%rbp
  44e723:	xor    %edx,%edx
  44e725:	movl   $0x1,0x34(%rsp)
  44e72d:	jmpq   44e548 <X509_get0_pubkey_bitstr@plt+0x37b78>
  44e732:	nopw   0x0(%rax,%rax,1)
  44e738:	mov    %r15,%rbp
  44e73b:	mov    0x18(%rsp),%r15d
  44e740:	mov    %r13d,0x5c(%rsp)
  44e745:	mov    0x38(%rsp),%rsi
  44e74a:	mov    (%rbx),%rdi
  44e74d:	xor    %edx,%edx
  44e74f:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  44e754:	mov    0x28(%rsp),%rdx
  44e759:	mov    0x20(%rsp),%rsi
  44e75e:	lea    0x60(%rsp),%rcx
  44e763:	mov    (%rbx),%rdi
  44e766:	lea    0x68(%rsp),%r8
  44e76b:	mov    %rax,%r14
  44e76e:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  44e773:	test   %eax,%eax
  44e775:	je     44ea28 <X509_get0_pubkey_bitstr@plt+0x38058>
  44e77b:	test   %rbp,%rbp
  44e77e:	je     44e9c6 <X509_get0_pubkey_bitstr@plt+0x37ff6>
  44e784:	mov    0x40(%rsp),%rdi
  44e789:	test   %rdi,%rdi
  44e78c:	je     44ec00 <X509_get0_pubkey_bitstr@plt+0x38230>
  44e792:	lea    0x11248(%rip),%rsi        # 45f9e1 <_fini+0x24dd>
  44e799:	callq  412ba0 <BIO_new_file@plt>
  44e79e:	test   %rax,%rax
  44e7a1:	mov    %rax,%r13
  44e7a4:	je     44e9f7 <X509_get0_pubkey_bitstr@plt+0x38027>
  44e7aa:	mov    0x50(%rsp),%rdi
  44e7af:	test   %rdi,%rdi
  44e7b2:	je     44e9de <X509_get0_pubkey_bitstr@plt+0x3800e>
  44e7b8:	lea    0xf5ec(%rip),%rsi        # 45ddab <_fini+0x8a7>
  44e7bf:	callq  412ba0 <BIO_new_file@plt>
  44e7c4:	test   %rax,%rax
  44e7c7:	mov    %rax,%r12
  44e7ca:	je     44ece7 <X509_get0_pubkey_bitstr@plt+0x38317>
  44e7d0:	mov    0x34(%rsp),%esi
  44e7d4:	test   %esi,%esi
  44e7d6:	jne    44eaf9 <X509_get0_pubkey_bitstr@plt+0x38129>
  44e7dc:	mov    0x48(%rsp),%edx
  44e7e0:	test   %edx,%edx
  44e7e2:	je     44ea3e <X509_get0_pubkey_bitstr@plt+0x3806e>
  44e7e8:	cmp    $0x3,%r15d
  44e7ec:	je     44ed5c <X509_get0_pubkey_bitstr@plt+0x3838c>
  44e7f2:	cmp    $0x1,%r15d
  44e7f6:	je     44ecb2 <X509_get0_pubkey_bitstr@plt+0x382e2>
  44e7fc:	mov    (%rbx),%rdi
  44e7ff:	lea    0x17b9d(%rip),%rsi        # 4663a3 <_fini+0x8e9f>
  44e806:	xor    %eax,%eax
  44e808:	mov    $0x1,%ebx
  44e80d:	xor    %r15d,%r15d
  44e810:	xor    %r14d,%r14d
  44e813:	xor    %ebp,%ebp
  44e815:	callq  413c40 <BIO_printf@plt>
  44e81a:	jmpq   44e3fe <X509_get0_pubkey_bitstr@plt+0x37a2e>
  44e81f:	lea    0xf9d2(%rip),%rdi        # 45e1f8 <_fini+0xcf4>
  44e826:	mov    $0x9,%ecx
  44e82b:	mov    %rdx,%rsi
  44e82e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44e830:	jne    44ee5f <X509_get0_pubkey_bitstr@plt+0x3848f>
  44e836:	mov    0x8(%r14),%rax
  44e83a:	test   %rax,%rax
  44e83d:	mov    %rax,0x28(%rsp)
  44e842:	jne    44e70f <X509_get0_pubkey_bitstr@plt+0x37d3f>
  44e848:	nopl   0x0(%rax,%rax,1)
  44e850:	mov    (%rbx),%rdi
  44e853:	lea    0x1eaf2(%rip),%rsi        # 46d34c <_fini+0xfe48>
  44e85a:	xor    %eax,%eax
  44e85c:	callq  413c40 <BIO_printf@plt>
  44e861:	mov    (%rbx),%rdi
  44e864:	lea    0xf4ea(%rip),%rsi        # 45dd55 <_fini+0x851>
  44e86b:	xor    %eax,%eax
  44e86d:	callq  413c40 <BIO_printf@plt>
  44e872:	mov    (%rbx),%rdi
  44e875:	lea    0x14de5(%rip),%rsi        # 463661 <_fini+0x615d>
  44e87c:	xor    %eax,%eax
  44e87e:	callq  413c40 <BIO_printf@plt>
  44e883:	mov    (%rbx),%rdi
  44e886:	lea    0x1eb6b(%rip),%rsi        # 46d3f8 <_fini+0xfef4>
  44e88d:	xor    %eax,%eax
  44e88f:	callq  413c40 <BIO_printf@plt>
  44e894:	mov    (%rbx),%rdi
  44e897:	lea    0x1eb8a(%rip),%rsi        # 46d428 <_fini+0xff24>
  44e89e:	xor    %eax,%eax
  44e8a0:	callq  413c40 <BIO_printf@plt>
  44e8a5:	mov    (%rbx),%rdi
  44e8a8:	lea    0x1eba9(%rip),%rsi        # 46d458 <_fini+0xff54>
  44e8af:	xor    %eax,%eax
  44e8b1:	callq  413c40 <BIO_printf@plt>
  44e8b6:	mov    (%rbx),%rdi
  44e8b9:	lea    0x14dbd(%rip),%rsi        # 46367d <_fini+0x6179>
  44e8c0:	xor    %eax,%eax
  44e8c2:	callq  413c40 <BIO_printf@plt>
  44e8c7:	mov    (%rbx),%rdi
  44e8ca:	lea    0x1ebb7(%rip),%rsi        # 46d488 <_fini+0xff84>
  44e8d1:	xor    %eax,%eax
  44e8d3:	callq  413c40 <BIO_printf@plt>
  44e8d8:	mov    (%rbx),%rdi
  44e8db:	lea    0x1ebd6(%rip),%rsi        # 46d4b8 <_fini+0xffb4>
  44e8e2:	xor    %eax,%eax
  44e8e4:	callq  413c40 <BIO_printf@plt>
  44e8e9:	mov    (%rbx),%rdi
  44e8ec:	lea    0x1ebed(%rip),%rsi        # 46d4e0 <_fini+0xffdc>
  44e8f3:	xor    %eax,%eax
  44e8f5:	callq  413c40 <BIO_printf@plt>
  44e8fa:	mov    (%rbx),%rdi
  44e8fd:	lea    0x1ec14(%rip),%rsi        # 46d518 <_fini+0x10014>
  44e904:	xor    %eax,%eax
  44e906:	callq  413c40 <BIO_printf@plt>
  44e90b:	mov    (%rbx),%rdi
  44e90e:	lea    0x1ec4b(%rip),%rsi        # 46d560 <_fini+0x1005c>
  44e915:	xor    %eax,%eax
  44e917:	callq  413c40 <BIO_printf@plt>
  44e91c:	mov    (%rbx),%rdi
  44e91f:	lea    0x1ec7a(%rip),%rsi        # 46d5a0 <_fini+0x1009c>
  44e926:	xor    %eax,%eax
  44e928:	callq  413c40 <BIO_printf@plt>
  44e92d:	mov    (%rbx),%rdi
  44e930:	lea    0x1ec99(%rip),%rsi        # 46d5d0 <_fini+0x100cc>
  44e937:	xor    %eax,%eax
  44e939:	callq  413c40 <BIO_printf@plt>
  44e93e:	mov    (%rbx),%rdi
  44e941:	lea    0x1ecc0(%rip),%rsi        # 46d608 <_fini+0x10104>
  44e948:	xor    %eax,%eax
  44e94a:	callq  413c40 <BIO_printf@plt>
  44e94f:	mov    (%rbx),%rdi
  44e952:	lea    0x1ece7(%rip),%rsi        # 46d640 <_fini+0x1013c>
  44e959:	xor    %eax,%eax
  44e95b:	callq  413c40 <BIO_printf@plt>
  44e960:	mov    (%rbx),%rdi
  44e963:	lea    0x14c26(%rip),%rsi        # 463590 <_fini+0x608c>
  44e96a:	xor    %eax,%eax
  44e96c:	callq  413c40 <BIO_printf@plt>
  44e971:	jmpq   44e3eb <X509_get0_pubkey_bitstr@plt+0x37a1b>
  44e976:	nopw   %cs:0x0(%rax,%rax,1)
  44e980:	mov    %r14,%rbp
  44e983:	xor    %edx,%edx
  44e985:	movl   $0x1,0x4c(%rsp)
  44e98d:	jmpq   44e548 <X509_get0_pubkey_bitstr@plt+0x37b78>
  44e992:	nopw   0x0(%rax,%rax,1)
  44e998:	mov    0x2275e1(%rip),%rax        # 675f80 <_fini+0x218a7c>
  44e99f:	xor    %esi,%esi
  44e9a1:	mov    (%rax),%rdi
  44e9a4:	callq  4161e0 <BIO_new_fp@plt>
  44e9a9:	mov    %rax,%rdi
  44e9ac:	mov    %rax,(%rbx)
  44e9af:	jmpq   44e3dc <X509_get0_pubkey_bitstr@plt+0x37a0c>
  44e9b4:	mov    %r14,%rbp
  44e9b7:	xor    %edx,%edx
  44e9b9:	movl   $0x1,0x48(%rsp)
  44e9c1:	jmpq   44e548 <X509_get0_pubkey_bitstr@plt+0x37b78>
  44e9c6:	mov    0x5c(%rsp),%esi
  44e9ca:	mov    $0xa,%eax
  44e9cf:	cmp    $0xffffffff,%esi
  44e9d2:	cmovne %esi,%eax
  44e9d5:	mov    %eax,0x5c(%rsp)
  44e9d9:	jmpq   44e784 <X509_get0_pubkey_bitstr@plt+0x37db4>
  44e9de:	mov    0x2274d3(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  44e9e5:	xor    %esi,%esi
  44e9e7:	mov    (%rax),%rdi
  44e9ea:	callq  4161e0 <BIO_new_fp@plt>
  44e9ef:	mov    %rax,%r12
  44e9f2:	jmpq   44e7d0 <X509_get0_pubkey_bitstr@plt+0x37e00>
  44e9f7:	mov    (%rbx),%rdi
  44e9fa:	mov    0x40(%rsp),%rdx
  44e9ff:	lea    0x1dbeb(%rip),%rsi        # 46c5f1 <_fini+0xf0ed>
  44ea06:	xor    %eax,%eax
  44ea08:	mov    $0x1,%ebx
  44ea0d:	xor    %r15d,%r15d
  44ea10:	xor    %r14d,%r14d
  44ea13:	xor    %ebp,%ebp
  44ea15:	xor    %r12d,%r12d
  44ea18:	callq  413c40 <BIO_printf@plt>
  44ea1d:	jmpq   44e3fe <X509_get0_pubkey_bitstr@plt+0x37a2e>
  44ea22:	nopw   0x0(%rax,%rax,1)
  44ea28:	mov    (%rbx),%rdi
  44ea2b:	lea    0xf92e(%rip),%rsi        # 45e360 <_fini+0xe5c>
  44ea32:	xor    %eax,%eax
  44ea34:	callq  413c40 <BIO_printf@plt>
  44ea39:	jmpq   44e3eb <X509_get0_pubkey_bitstr@plt+0x37a1b>
  44ea3e:	cmp    $0x3,%r15d
  44ea42:	je     44ed86 <X509_get0_pubkey_bitstr@plt+0x383b6>
  44ea48:	cmp    $0x1,%r15d
  44ea4c:	jne    44e7fc <X509_get0_pubkey_bitstr@plt+0x37e2c>
  44ea52:	xor    %esi,%esi
  44ea54:	mov    %r13,%rdi
  44ea57:	callq  413770 <d2i_PKCS8_bio@plt>
  44ea5c:	mov    %rax,%rbp
  44ea5f:	test   %rbp,%rbp
  44ea62:	je     44eeaf <X509_get0_pubkey_bitstr@plt+0x384df>
  44ea68:	mov    0x60(%rsp),%r14
  44ea6d:	test   %r14,%r14
  44ea70:	je     44ef23 <X509_get0_pubkey_bitstr@plt+0x38553>
  44ea76:	mov    %r14,%rdi
  44ea79:	callq  413470 <strlen@plt>
  44ea7e:	mov    %r14,%rsi
  44ea81:	mov    %eax,%edx
  44ea83:	mov    %rbp,%rdi
  44ea86:	callq  4144b0 <PKCS8_decrypt@plt>
  44ea8b:	mov    %rax,%r14
  44ea8e:	test   %r14,%r14
  44ea91:	je     44ed9c <X509_get0_pubkey_bitstr@plt+0x383cc>
  44ea97:	mov    %r14,%rdi
  44ea9a:	callq  414a80 <EVP_PKCS82PKEY@plt>
  44ea9f:	test   %rax,%rax
  44eaa2:	mov    %rax,%r15
  44eaa5:	je     44ede7 <X509_get0_pubkey_bitstr@plt+0x38417>
  44eaab:	mov    (%r14),%eax
  44eaae:	test   %eax,%eax
  44eab0:	jne    44ed0f <X509_get0_pubkey_bitstr@plt+0x3833f>
  44eab6:	cmpl   $0x3,0x30(%rsp)
  44eabb:	je     44edc2 <X509_get0_pubkey_bitstr@plt+0x383f2>
  44eac1:	cmpl   $0x1,0x30(%rsp)
  44eac6:	je     44ed74 <X509_get0_pubkey_bitstr@plt+0x383a4>
  44eacc:	mov    (%rbx),%rdi
  44eacf:	lea    0x178cd(%rip),%rsi        # 4663a3 <_fini+0x8e9f>
  44ead6:	xor    %eax,%eax
  44ead8:	mov    $0x1,%ebx
  44eadd:	callq  413c40 <BIO_printf@plt>
  44eae2:	jmpq   44e3fe <X509_get0_pubkey_bitstr@plt+0x37a2e>
  44eae7:	mov    %r14,%rbp
  44eaea:	xor    %edx,%edx
  44eaec:	movl   $0x1,0x58(%rsp)
  44eaf4:	jmpq   44e548 <X509_get0_pubkey_bitstr@plt+0x37b78>
  44eaf9:	lea    0x171d7(%rip),%rax        # 465cd7 <_fini+0x87d3>
  44eb00:	mov    0x60(%rsp),%r8
  44eb05:	mov    0x40(%rsp),%rsi
  44eb0a:	mov    %r15d,%edx
  44eb0d:	mov    %r14,%r9
  44eb10:	mov    $0x1,%ecx
  44eb15:	mov    %rax,(%rsp)
  44eb19:	mov    (%rbx),%rdi
  44eb1c:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  44eb21:	test   %rax,%rax
  44eb24:	mov    %rax,%r15
  44eb27:	je     44ecc6 <X509_get0_pubkey_bitstr@plt+0x382f6>
  44eb2d:	mov    0x58(%rsp),%esi
  44eb31:	mov    %rax,%rdi
  44eb34:	callq  4160d0 <EVP_PKEY2PKCS8_broken@plt>
  44eb39:	test   %rax,%rax
  44eb3c:	mov    %rax,%r14
  44eb3f:	je     44eefe <X509_get0_pubkey_bitstr@plt+0x3852e>
  44eb45:	mov    0x48(%rsp),%ecx
  44eb49:	test   %ecx,%ecx
  44eb4b:	je     44ec19 <X509_get0_pubkey_bitstr@plt+0x38249>
  44eb51:	cmpl   $0x3,0x30(%rsp)
  44eb56:	je     44eed8 <X509_get0_pubkey_bitstr@plt+0x38508>
  44eb5c:	cmpl   $0x1,0x30(%rsp)
  44eb61:	je     44ee0a <X509_get0_pubkey_bitstr@plt+0x3843a>
  44eb67:	mov    (%rbx),%rdi
  44eb6a:	lea    0x17832(%rip),%rsi        # 4663a3 <_fini+0x8e9f>
  44eb71:	xor    %eax,%eax
  44eb73:	mov    $0x1,%ebx
  44eb78:	xor    %ebp,%ebp
  44eb7a:	callq  413c40 <BIO_printf@plt>
  44eb7f:	jmpq   44e3fe <X509_get0_pubkey_bitstr@plt+0x37a2e>
  44eb84:	movq   $0x0,0x38(%rsp)
  44eb8d:	movl   $0x0,0x48(%rsp)
  44eb95:	mov    $0x3,%r15d
  44eb9b:	movl   $0x0,0x58(%rsp)
  44eba3:	movl   $0x3,0x30(%rsp)
  44ebab:	xor    %ebp,%ebp
  44ebad:	movl   $0x800,0x4c(%rsp)
  44ebb5:	movl   $0xffffffff,0x5c(%rsp)
  44ebbd:	movl   $0x0,0x34(%rsp)
  44ebc5:	movq   $0x0,0x28(%rsp)
  44ebce:	movq   $0x0,0x20(%rsp)
  44ebd7:	movq   $0x0,0x50(%rsp)
  44ebe0:	movq   $0x0,0x40(%rsp)
  44ebe9:	jmpq   44e745 <X509_get0_pubkey_bitstr@plt+0x37d75>
  44ebee:	mov    %r14,%rbp
  44ebf1:	xor    %edx,%edx
  44ebf3:	movl   $0x3,0x58(%rsp)
  44ebfb:	jmpq   44e548 <X509_get0_pubkey_bitstr@plt+0x37b78>
  44ec00:	mov    0x227309(%rip),%rax        # 675f10 <_fini+0x218a0c>
  44ec07:	xor    %esi,%esi
  44ec09:	mov    (%rax),%rdi
  44ec0c:	callq  4161e0 <BIO_new_fp@plt>
  44ec11:	mov    %rax,%r13
  44ec14:	jmpq   44e7aa <X509_get0_pubkey_bitstr@plt+0x37dda>
  44ec19:	mov    0x68(%rsp),%r10
  44ec1e:	test   %r10,%r10
  44ec21:	je     44ee1e <X509_get0_pubkey_bitstr@plt+0x3844e>
  44ec27:	mov    (%rbx),%rsi
  44ec2a:	xor    %edx,%edx
  44ec2c:	xor    %edi,%edi
  44ec2e:	mov    %r10,0x18(%rsp)
  44ec33:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  44ec38:	mov    0x18(%rsp),%r10
  44ec3d:	mov    %r10,%rdi
  44ec40:	callq  413470 <strlen@plt>
  44ec45:	mov    0x4c(%rsp),%esi
  44ec49:	mov    0x18(%rsp),%r10
  44ec4e:	xor    %r9d,%r9d
  44ec51:	mov    0x5c(%rsp),%edi
  44ec55:	xor    %r8d,%r8d
  44ec58:	mov    %r14,0x8(%rsp)
  44ec5d:	mov    %eax,%ecx
  44ec5f:	mov    %esi,(%rsp)
  44ec62:	mov    %r10,%rdx
  44ec65:	mov    %rbp,%rsi
  44ec68:	callq  415b20 <PKCS8_encrypt@plt>
  44ec6d:	test   %rax,%rax
  44ec70:	mov    %rax,%rbp
  44ec73:	lea    0x1e71a(%rip),%rsi        # 46d394 <_fini+0xfe90>
  44ec7a:	je     44edee <X509_get0_pubkey_bitstr@plt+0x3841e>
  44ec80:	mov    (%rbx),%rsi
  44ec83:	xor    %edi,%edi
  44ec85:	callq  44a660 <X509_get0_pubkey_bitstr@plt+0x33c90>
  44ec8a:	cmpl   $0x3,0x30(%rsp)
  44ec8f:	je     44eeec <X509_get0_pubkey_bitstr@plt+0x3851c>
  44ec95:	cmpl   $0x1,0x30(%rsp)
  44ec9a:	jne    44eacc <X509_get0_pubkey_bitstr@plt+0x380fc>
  44eca0:	mov    %rbp,%rsi
  44eca3:	mov    %r12,%rdi
  44eca6:	xor    %ebx,%ebx
  44eca8:	callq  4134c0 <i2d_PKCS8_bio@plt>
  44ecad:	jmpq   44e3fe <X509_get0_pubkey_bitstr@plt+0x37a2e>
  44ecb2:	xor    %esi,%esi
  44ecb4:	mov    %r13,%rdi
  44ecb7:	xor    %ebp,%ebp
  44ecb9:	callq  413750 <d2i_PKCS8_PRIV_KEY_INFO_bio@plt>
  44ecbe:	mov    %rax,%r14
  44ecc1:	jmpq   44ea8e <X509_get0_pubkey_bitstr@plt+0x380be>
  44ecc6:	mov    $0x1,%ebx
  44eccb:	xor    %r14d,%r14d
  44ecce:	xor    %ebp,%ebp
  44ecd0:	jmpq   44e3fe <X509_get0_pubkey_bitstr@plt+0x37a2e>
  44ecd5:	mov    %r14,%rbp
  44ecd8:	xor    %edx,%edx
  44ecda:	movl   $0x2,0x58(%rsp)
  44ece2:	jmpq   44e548 <X509_get0_pubkey_bitstr@plt+0x37b78>
  44ece7:	mov    (%rbx),%rdi
  44ecea:	mov    0x50(%rsp),%rdx
  44ecef:	lea    0x17675(%rip),%rsi        # 46636b <_fini+0x8e67>
  44ecf6:	xor    %eax,%eax
  44ecf8:	mov    $0x1,%ebx
  44ecfd:	xor    %r15d,%r15d
  44ed00:	xor    %r14d,%r14d
  44ed03:	xor    %ebp,%ebp
  44ed05:	callq  413c40 <BIO_printf@plt>
  44ed0a:	jmpq   44e3fe <X509_get0_pubkey_bitstr@plt+0x37a2e>
  44ed0f:	mov    (%rbx),%rdi
  44ed12:	lea    0x1e95f(%rip),%rsi        # 46d678 <_fini+0x10174>
  44ed19:	xor    %eax,%eax
  44ed1b:	callq  413c40 <BIO_printf@plt>
  44ed20:	mov    (%r14),%eax
  44ed23:	cmp    $0x2,%eax
  44ed26:	je     44ef6f <X509_get0_pubkey_bitstr@plt+0x3859f>
  44ed2c:	jle    44ee90 <X509_get0_pubkey_bitstr@plt+0x384c0>
  44ed32:	cmp    $0x3,%eax
  44ed35:	je     44ef59 <X509_get0_pubkey_bitstr@plt+0x38589>
  44ed3b:	cmp    $0x4,%eax
  44ed3e:	xchg   %ax,%ax
  44ed40:	jne    44ef43 <X509_get0_pubkey_bitstr@plt+0x38573>
  44ed46:	mov    (%rbx),%rdi
  44ed49:	lea    0x1e9b8(%rip),%rsi        # 46d708 <_fini+0x10204>
  44ed50:	xor    %eax,%eax
  44ed52:	callq  413c40 <BIO_printf@plt>
  44ed57:	jmpq   44eab6 <X509_get0_pubkey_bitstr@plt+0x380e6>
  44ed5c:	xor    %ecx,%ecx
  44ed5e:	xor    %edx,%edx
  44ed60:	xor    %esi,%esi
  44ed62:	mov    %r13,%rdi
  44ed65:	xor    %ebp,%ebp
  44ed67:	callq  413c90 <PEM_read_bio_PKCS8_PRIV_KEY_INFO@plt>
  44ed6c:	mov    %rax,%r14
  44ed6f:	jmpq   44ea8e <X509_get0_pubkey_bitstr@plt+0x380be>
  44ed74:	mov    %r15,%rsi
  44ed77:	mov    %r12,%rdi
  44ed7a:	xor    %ebx,%ebx
  44ed7c:	callq  4156c0 <i2d_PrivateKey_bio@plt>
  44ed81:	jmpq   44e3fe <X509_get0_pubkey_bitstr@plt+0x37a2e>
  44ed86:	xor    %ecx,%ecx
  44ed88:	xor    %edx,%edx
  44ed8a:	xor    %esi,%esi
  44ed8c:	mov    %r13,%rdi
  44ed8f:	callq  415170 <PEM_read_bio_PKCS8@plt>
  44ed94:	mov    %rax,%rbp
  44ed97:	jmpq   44ea5f <X509_get0_pubkey_bitstr@plt+0x3808f>
  44ed9c:	mov    (%rbx),%rdi
  44ed9f:	lea    0x1e627(%rip),%rsi        # 46d3cd <_fini+0xfec9>
  44eda6:	xor    %eax,%eax
  44eda8:	xor    %r15d,%r15d
  44edab:	callq  413c40 <BIO_printf@plt>
  44edb0:	mov    (%rbx),%rdi
  44edb3:	mov    $0x1,%ebx
  44edb8:	callq  413f40 <ERR_print_errors@plt>
  44edbd:	jmpq   44e3fe <X509_get0_pubkey_bitstr@plt+0x37a2e>
  44edc2:	mov    0x68(%rsp),%rax
  44edc7:	xor    %r9d,%r9d
  44edca:	xor    %r8d,%r8d
  44edcd:	xor    %ecx,%ecx
  44edcf:	xor    %edx,%edx
  44edd1:	mov    %r15,%rsi
  44edd4:	mov    %r12,%rdi
  44edd7:	xor    %ebx,%ebx
  44edd9:	mov    %rax,(%rsp)
  44eddd:	callq  4148c0 <PEM_write_bio_PrivateKey@plt>
  44ede2:	jmpq   44e3fe <X509_get0_pubkey_bitstr@plt+0x37a2e>
  44ede7:	lea    0x1e575(%rip),%rsi        # 46d363 <_fini+0xfe5f>
  44edee:	mov    (%rbx),%rdi
  44edf1:	xor    %eax,%eax
  44edf3:	callq  413c40 <BIO_printf@plt>
  44edf8:	mov    (%rbx),%rdi
  44edfb:	mov    $0x1,%ebx
  44ee00:	callq  413f40 <ERR_print_errors@plt>
  44ee05:	jmpq   44e3fe <X509_get0_pubkey_bitstr@plt+0x37a2e>
  44ee0a:	mov    %rax,%rsi
  44ee0d:	mov    %r12,%rdi
  44ee10:	xor    %ebx,%ebx
  44ee12:	callq  4129d0 <i2d_PKCS8_PRIV_KEY_INFO_bio@plt>
  44ee17:	xor    %ebp,%ebp
  44ee19:	jmpq   44e3fe <X509_get0_pubkey_bitstr@plt+0x37a2e>
  44ee1e:	lea    0x70(%rsp),%r10
  44ee23:	lea    0x1e54f(%rip),%rdx        # 46d379 <_fini+0xfe75>
  44ee2a:	mov    $0x1,%ecx
  44ee2f:	mov    $0x32,%esi
  44ee34:	mov    %r10,%rdi
  44ee37:	mov    %r10,0x18(%rsp)
  44ee3c:	callq  4161f0 <EVP_read_pw_string@plt>
  44ee41:	test   %eax,%eax
  44ee43:	mov    0x18(%rsp),%r10
  44ee48:	je     44ec27 <X509_get0_pubkey_bitstr@plt+0x38257>
  44ee4e:	mov    $0x1,%ebx
  44ee53:	xor    %ebp,%ebp
  44ee55:	jmpq   44e3fe <X509_get0_pubkey_bitstr@plt+0x37a2e>
  44ee5a:	callq  414c30 <__stack_chk_fail@plt>
  44ee5f:	lea    0xecfc(%rip),%rdi        # 45db62 <_fini+0x65e>
  44ee66:	mov    %rdx,%rsi
  44ee69:	mov    %r12,%rcx
  44ee6c:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44ee6e:	jne    44ef85 <X509_get0_pubkey_bitstr@plt+0x385b5>
  44ee74:	mov    0x8(%r14),%rax
  44ee78:	test   %rax,%rax
  44ee7b:	mov    %rax,0x38(%rsp)
  44ee80:	jne    44e70f <X509_get0_pubkey_bitstr@plt+0x37d3f>
  44ee86:	jmpq   44e850 <X509_get0_pubkey_bitstr@plt+0x37e80>
  44ee8b:	nopl   0x0(%rax,%rax,1)
  44ee90:	cmp    $0x1,%eax
  44ee93:	jne    44ef43 <X509_get0_pubkey_bitstr@plt+0x38573>
  44ee99:	mov    (%rbx),%rdi
  44ee9c:	lea    0x1e7f5(%rip),%rsi        # 46d698 <_fini+0x10194>
  44eea3:	xor    %eax,%eax
  44eea5:	callq  413c40 <BIO_printf@plt>
  44eeaa:	jmpq   44eab6 <X509_get0_pubkey_bitstr@plt+0x380e6>
  44eeaf:	mov    (%rbx),%rdi
  44eeb2:	lea    0x1e4f1(%rip),%rsi        # 46d3aa <_fini+0xfea6>
  44eeb9:	xor    %eax,%eax
  44eebb:	xor    %r15d,%r15d
  44eebe:	xor    %r14d,%r14d
  44eec1:	callq  413c40 <BIO_printf@plt>
  44eec6:	mov    (%rbx),%rdi
  44eec9:	mov    $0x1,%ebx
  44eece:	callq  413f40 <ERR_print_errors@plt>
  44eed3:	jmpq   44e3fe <X509_get0_pubkey_bitstr@plt+0x37a2e>
  44eed8:	mov    %rax,%rsi
  44eedb:	mov    %r12,%rdi
  44eede:	xor    %ebx,%ebx
  44eee0:	callq  416850 <PEM_write_bio_PKCS8_PRIV_KEY_INFO@plt>
  44eee5:	xor    %ebp,%ebp
  44eee7:	jmpq   44e3fe <X509_get0_pubkey_bitstr@plt+0x37a2e>
  44eeec:	mov    %rbp,%rsi
  44eeef:	mov    %r12,%rdi
  44eef2:	xor    %ebx,%ebx
  44eef4:	callq  4134d0 <PEM_write_bio_PKCS8@plt>
  44eef9:	jmpq   44e3fe <X509_get0_pubkey_bitstr@plt+0x37a2e>
  44eefe:	mov    (%rbx),%rdi
  44ef01:	lea    0x1e45b(%rip),%rsi        # 46d363 <_fini+0xfe5f>
  44ef08:	xor    %eax,%eax
  44ef0a:	xor    %ebp,%ebp
  44ef0c:	callq  413c40 <BIO_printf@plt>
  44ef11:	mov    (%rbx),%rdi
  44ef14:	mov    $0x1,%ebx
  44ef19:	callq  413f40 <ERR_print_errors@plt>
  44ef1e:	jmpq   44e3fe <X509_get0_pubkey_bitstr@plt+0x37a2e>
  44ef23:	lea    0x70(%rsp),%r14
  44ef28:	lea    0x1e48e(%rip),%rdx        # 46d3bd <_fini+0xfeb9>
  44ef2f:	xor    %ecx,%ecx
  44ef31:	mov    $0x32,%esi
  44ef36:	mov    %r14,%rdi
  44ef39:	callq  4161f0 <EVP_read_pw_string@plt>
  44ef3e:	jmpq   44ea76 <X509_get0_pubkey_bitstr@plt+0x380a6>
  44ef43:	mov    (%rbx),%rdi
  44ef46:	lea    0x1e496(%rip),%rsi        # 46d3e3 <_fini+0xfedf>
  44ef4d:	xor    %eax,%eax
  44ef4f:	callq  413c40 <BIO_printf@plt>
  44ef54:	jmpq   44eab6 <X509_get0_pubkey_bitstr@plt+0x380e6>
  44ef59:	mov    (%rbx),%rdi
  44ef5c:	lea    0x1e77d(%rip),%rsi        # 46d6e0 <_fini+0x101dc>
  44ef63:	xor    %eax,%eax
  44ef65:	callq  413c40 <BIO_printf@plt>
  44ef6a:	jmpq   44eab6 <X509_get0_pubkey_bitstr@plt+0x380e6>
  44ef6f:	mov    (%rbx),%rdi
  44ef72:	lea    0x1e73f(%rip),%rsi        # 46d6b8 <_fini+0x101b4>
  44ef79:	xor    %eax,%eax
  44ef7b:	callq  413c40 <BIO_printf@plt>
  44ef80:	jmpq   44eab6 <X509_get0_pubkey_bitstr@plt+0x380e6>
  44ef85:	test   %eax,%eax
  44ef87:	jne    44efbb <X509_get0_pubkey_bitstr@plt+0x385eb>
  44ef89:	cmpb   $0x69,0x1(%rdx)
  44ef8d:	nopl   (%rax)
  44ef90:	jne    44efbb <X509_get0_pubkey_bitstr@plt+0x385eb>
  44ef92:	cmpb   $0x6e,0x2(%rdx)
  44ef96:	jne    44efbb <X509_get0_pubkey_bitstr@plt+0x385eb>
  44ef98:	cmpb   $0x0,0x3(%rdx)
  44ef9c:	jne    44efbb <X509_get0_pubkey_bitstr@plt+0x385eb>
  44ef9e:	mov    0x8(%r14),%rax
  44efa2:	test   %rax,%rax
  44efa5:	je     44e5d0 <X509_get0_pubkey_bitstr@plt+0x37c00>
  44efab:	lea    0x8(%r14),%rbp
  44efaf:	mov    %rax,0x40(%rsp)
  44efb4:	xor    %edx,%edx
  44efb6:	jmpq   44e548 <X509_get0_pubkey_bitstr@plt+0x37b78>
  44efbb:	lea    0xee84(%rip),%rsi        # 45de46 <_fini+0x942>
  44efc2:	mov    %rdx,%rdi
  44efc5:	callq  4155c0 <strcmp@plt>
  44efca:	test   %eax,%eax
  44efcc:	jne    44e5d0 <X509_get0_pubkey_bitstr@plt+0x37c00>
  44efd2:	mov    0x8(%r14),%rax
  44efd6:	test   %rax,%rax
  44efd9:	je     44e5d0 <X509_get0_pubkey_bitstr@plt+0x37c00>
  44efdf:	lea    0x8(%r14),%rbp
  44efe3:	mov    %rax,0x50(%rsp)
  44efe8:	xor    %edx,%edx
  44efea:	jmpq   44e548 <X509_get0_pubkey_bitstr@plt+0x37b78>
  44efef:	nop
  44eff0:	push   %r15
  44eff2:	push   %r14
  44eff4:	push   %r13
  44eff6:	push   %r12
  44eff8:	push   %rbp
  44eff9:	push   %rbx
  44effa:	mov    %rsi,%rbx
  44effd:	sub    $0x78,%rsp
  44f001:	lea    0x22bd38(%rip),%r12        # 67ad40 <_edata+0x38>
  44f008:	mov    %fs:0x28,%rax
  44f011:	mov    %rax,0x68(%rsp)
  44f016:	xor    %eax,%eax
  44f018:	movq   $0x0,0x58(%rsp)
  44f021:	movq   $0x0,0x60(%rsp)
  44f02a:	mov    (%r12),%rdi
  44f02e:	test   %rdi,%rdi
  44f031:	je     44f4b2 <X509_get0_pubkey_bitstr@plt+0x38ae2>
  44f037:	xor    %esi,%esi
  44f039:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  44f03e:	test   %eax,%eax
  44f040:	je     44f248 <X509_get0_pubkey_bitstr@plt+0x38878>
  44f046:	callq  416990 <ERR_load_crypto_strings@plt>
  44f04b:	nopl   0x0(%rax,%rax,1)
  44f050:	callq  412cf0 <OPENSSL_add_all_algorithms_noconf@plt>
  44f055:	mov    0x8(%rbx),%rax
  44f059:	lea    0x8(%rbx),%rdx
  44f05d:	test   %rax,%rax
  44f060:	je     44f600 <X509_get0_pubkey_bitstr@plt+0x38c30>
  44f066:	cmpb   $0x2d,(%rax)
  44f069:	movq   $0x0,0x10(%rsp)
  44f072:	mov    $0x3,%r13d
  44f078:	movl   $0x0,0x30(%rsp)
  44f080:	movl   $0x0,0x34(%rsp)
  44f088:	mov    $0x0,%r14d
  44f08e:	movl   $0x0,0x38(%rsp)
  44f096:	movl   $0x0,0x3c(%rsp)
  44f09e:	movl   $0x0,0x2c(%rsp)
  44f0a6:	movl   $0x3,0x28(%rsp)
  44f0ae:	movq   $0x0,0x40(%rsp)
  44f0b7:	movq   $0x0,0x8(%rsp)
  44f0c0:	movq   $0x0,0x20(%rsp)
  44f0c9:	movq   $0x0,0x18(%rsp)
  44f0d2:	jne    44f333 <X509_get0_pubkey_bitstr@plt+0x38963>
  44f0d8:	lea    0xec00(%rip),%rbp        # 45dcdf <_fini+0x7db>
  44f0df:	mov    $0x8,%ebx
  44f0e4:	mov    %r13d,%r15d
  44f0e7:	mov    %rax,%r8
  44f0ea:	jmp    44f12a <X509_get0_pubkey_bitstr@plt+0x3875a>
  44f0ec:	nopl   0x0(%rax)
  44f0f0:	mov    0x8(%rdx),%rdi
  44f0f4:	test   %rdi,%rdi
  44f0f7:	je     44f2c0 <X509_get0_pubkey_bitstr@plt+0x388f0>
  44f0fd:	lea    0x8(%rdx),%r13
  44f101:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  44f106:	mov    %eax,%r15d
  44f109:	xor    %eax,%eax
  44f10b:	test   %eax,%eax
  44f10d:	lea    0x8(%r13),%rdx
  44f111:	jne    44f178 <X509_get0_pubkey_bitstr@plt+0x387a8>
  44f113:	mov    0x8(%r13),%r8
  44f117:	test   %r8,%r8
  44f11a:	je     44f330 <X509_get0_pubkey_bitstr@plt+0x38960>
  44f120:	cmpb   $0x2d,(%r8)
  44f124:	jne    44f330 <X509_get0_pubkey_bitstr@plt+0x38960>
  44f12a:	mov    %r8,%rsi
  44f12d:	mov    %rbp,%rdi
  44f130:	mov    %rbx,%rcx
  44f133:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44f135:	je     44f0f0 <X509_get0_pubkey_bitstr@plt+0x38720>
  44f137:	lea    0xf052(%rip),%rdi        # 45e190 <_fini+0xc8c>
  44f13e:	mov    $0x9,%ecx
  44f143:	mov    %r8,%rsi
  44f146:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44f148:	jne    44f290 <X509_get0_pubkey_bitstr@plt+0x388c0>
  44f14e:	mov    0x8(%rdx),%rdi
  44f152:	test   %rdi,%rdi
  44f155:	je     44f2c0 <X509_get0_pubkey_bitstr@plt+0x388f0>
  44f15b:	lea    0x8(%rdx),%r13
  44f15f:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  44f164:	mov    %eax,0x28(%rsp)
  44f168:	xor    %eax,%eax
  44f16a:	lea    0x8(%r13),%rdx
  44f16e:	test   %eax,%eax
  44f170:	je     44f113 <X509_get0_pubkey_bitstr@plt+0x38743>
  44f172:	nopw   0x0(%rax,%rax,1)
  44f178:	mov    (%r12),%rdi
  44f17c:	lea    0x1e5b2(%rip),%rsi        # 46d735 <_fini+0x10231>
  44f183:	xor    %eax,%eax
  44f185:	mov    $0x1,%ebx
  44f18a:	callq  413c40 <BIO_printf@plt>
  44f18f:	mov    (%r12),%rdi
  44f193:	lea    0xebbb(%rip),%rsi        # 45dd55 <_fini+0x851>
  44f19a:	xor    %eax,%eax
  44f19c:	callq  413c40 <BIO_printf@plt>
  44f1a1:	mov    (%r12),%rdi
  44f1a5:	lea    0x144b5(%rip),%rsi        # 463661 <_fini+0x615d>
  44f1ac:	xor    %eax,%eax
  44f1ae:	callq  413c40 <BIO_printf@plt>
  44f1b3:	mov    (%r12),%rdi
  44f1b7:	lea    0x1e23a(%rip),%rsi        # 46d3f8 <_fini+0xfef4>
  44f1be:	xor    %eax,%eax
  44f1c0:	callq  413c40 <BIO_printf@plt>
  44f1c5:	mov    (%r12),%rdi
  44f1c9:	lea    0x1e258(%rip),%rsi        # 46d428 <_fini+0xff24>
  44f1d0:	xor    %eax,%eax
  44f1d2:	callq  413c40 <BIO_printf@plt>
  44f1d7:	mov    (%r12),%rdi
  44f1db:	lea    0x1e276(%rip),%rsi        # 46d458 <_fini+0xff54>
  44f1e2:	xor    %eax,%eax
  44f1e4:	callq  413c40 <BIO_printf@plt>
  44f1e9:	mov    (%r12),%rdi
  44f1ed:	lea    0x14489(%rip),%rsi        # 46367d <_fini+0x6179>
  44f1f4:	xor    %eax,%eax
  44f1f6:	callq  413c40 <BIO_printf@plt>
  44f1fb:	mov    (%r12),%rdi
  44f1ff:	lea    0x1e282(%rip),%rsi        # 46d488 <_fini+0xff84>
  44f206:	xor    %eax,%eax
  44f208:	callq  413c40 <BIO_printf@plt>
  44f20d:	mov    (%r12),%rdi
  44f211:	lea    0x10550(%rip),%rsi        # 45f768 <_fini+0x2264>
  44f218:	xor    %eax,%eax
  44f21a:	callq  413c40 <BIO_printf@plt>
  44f21f:	mov    %ebx,%eax
  44f221:	mov    0x68(%rsp),%rbx
  44f226:	xor    %fs:0x28,%rbx
  44f22f:	jne    44f72d <X509_get0_pubkey_bitstr@plt+0x38d5d>
  44f235:	add    $0x78,%rsp
  44f239:	pop    %rbx
  44f23a:	pop    %rbp
  44f23b:	pop    %r12
  44f23d:	pop    %r13
  44f23f:	pop    %r14
  44f241:	pop    %r15
  44f243:	retq   
  44f244:	nopl   0x0(%rax)
  44f248:	mov    $0x1,%ebx
  44f24d:	xor    %r13d,%r13d
  44f250:	xor    %ebp,%ebp
  44f252:	mov    %r13,%rdi
  44f255:	callq  412b00 <EVP_PKEY_free@plt>
  44f25a:	mov    %rbp,%rdi
  44f25d:	callq  416570 <BIO_free_all@plt>
  44f262:	xor    %edi,%edi
  44f264:	callq  413960 <BIO_free@plt>
  44f269:	mov    0x58(%rsp),%rdi
  44f26e:	test   %rdi,%rdi
  44f271:	je     44f278 <X509_get0_pubkey_bitstr@plt+0x388a8>
  44f273:	callq  415020 <CRYPTO_free@plt>
  44f278:	mov    0x60(%rsp),%rdi
  44f27d:	test   %rdi,%rdi
  44f280:	je     44f21f <X509_get0_pubkey_bitstr@plt+0x3884f>
  44f282:	callq  415020 <CRYPTO_free@plt>
  44f287:	jmp    44f21f <X509_get0_pubkey_bitstr@plt+0x3884f>
  44f289:	nopl   0x0(%rax)
  44f290:	lea    0xef59(%rip),%rdi        # 45e1f0 <_fini+0xcec>
  44f297:	mov    %r8,%rsi
  44f29a:	mov    %rbx,%rcx
  44f29d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44f29f:	jne    44f2d0 <X509_get0_pubkey_bitstr@plt+0x38900>
  44f2a1:	mov    0x8(%rdx),%r14
  44f2a5:	test   %r14,%r14
  44f2a8:	je     44f178 <X509_get0_pubkey_bitstr@plt+0x387a8>
  44f2ae:	lea    0x8(%rdx),%r13
  44f2b2:	xor    %eax,%eax
  44f2b4:	jmpq   44f10b <X509_get0_pubkey_bitstr@plt+0x3873b>
  44f2b9:	nopl   0x0(%rax)
  44f2c0:	mov    %rdx,%r13
  44f2c3:	mov    $0x1,%eax
  44f2c8:	jmpq   44f10b <X509_get0_pubkey_bitstr@plt+0x3873b>
  44f2cd:	nopl   (%rax)
  44f2d0:	lea    0xef21(%rip),%rdi        # 45e1f8 <_fini+0xcf4>
  44f2d7:	mov    $0x9,%ecx
  44f2dc:	mov    %r8,%rsi
  44f2df:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44f2e1:	jne    44f300 <X509_get0_pubkey_bitstr@plt+0x38930>
  44f2e3:	mov    0x8(%rdx),%rax
  44f2e7:	test   %rax,%rax
  44f2ea:	mov    %rax,0x8(%rsp)
  44f2ef:	jne    44f2ae <X509_get0_pubkey_bitstr@plt+0x388de>
  44f2f1:	jmpq   44f178 <X509_get0_pubkey_bitstr@plt+0x387a8>
  44f2f6:	nopw   %cs:0x0(%rax,%rax,1)
  44f300:	lea    0xe85b(%rip),%rdi        # 45db62 <_fini+0x65e>
  44f307:	mov    %r8,%rsi
  44f30a:	mov    %rbx,%rcx
  44f30d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44f30f:	jne    44f440 <X509_get0_pubkey_bitstr@plt+0x38a70>
  44f315:	mov    0x8(%rdx),%rax
  44f319:	test   %rax,%rax
  44f31c:	mov    %rax,0x10(%rsp)
  44f321:	jne    44f2ae <X509_get0_pubkey_bitstr@plt+0x388de>
  44f323:	jmpq   44f178 <X509_get0_pubkey_bitstr@plt+0x387a8>
  44f328:	nopl   0x0(%rax,%rax,1)
  44f330:	mov    %r15d,%r13d
  44f333:	mov    0x10(%rsp),%rsi
  44f338:	mov    (%r12),%rdi
  44f33c:	xor    %edx,%edx
  44f33e:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  44f343:	mov    0x8(%rsp),%rdx
  44f348:	mov    (%r12),%rdi
  44f34c:	lea    0x58(%rsp),%rcx
  44f351:	lea    0x60(%rsp),%r8
  44f356:	mov    %r14,%rsi
  44f359:	mov    %rax,%rbx
  44f35c:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  44f361:	test   %eax,%eax
  44f363:	je     44f588 <X509_get0_pubkey_bitstr@plt+0x38bb8>
  44f369:	mov    0x20(%rsp),%rdi
  44f36e:	test   %rdi,%rdi
  44f371:	je     44f5cb <X509_get0_pubkey_bitstr@plt+0x38bfb>
  44f377:	lea    0xea2d(%rip),%rsi        # 45ddab <_fini+0x8a7>
  44f37e:	callq  412ba0 <BIO_new_file@plt>
  44f383:	test   %rax,%rax
  44f386:	mov    %rax,%rbp
  44f389:	je     44f6d1 <X509_get0_pubkey_bitstr@plt+0x38d01>
  44f38f:	mov    0x2c(%rsp),%r8d
  44f394:	test   %r8d,%r8d
  44f397:	je     44f4cf <X509_get0_pubkey_bitstr@plt+0x38aff>
  44f39d:	lea    0x13de8(%rip),%rax        # 46318c <_fini+0x5c88>
  44f3a4:	mov    0x58(%rsp),%r8
  44f3a9:	mov    0x18(%rsp),%rsi
  44f3ae:	mov    %r13d,%edx
  44f3b1:	mov    %rbx,%r9
  44f3b4:	mov    $0x1,%ecx
  44f3b9:	mov    %rax,(%rsp)
  44f3bd:	mov    (%r12),%rdi
  44f3c1:	callq  446250 <X509_get0_pubkey_bitstr@plt+0x2f880>
  44f3c6:	mov    %rax,%r13
  44f3c9:	test   %r13,%r13
  44f3cc:	je     44f691 <X509_get0_pubkey_bitstr@plt+0x38cc1>
  44f3d2:	mov    0x30(%rsp),%edi
  44f3d6:	test   %edi,%edi
  44f3d8:	jne    44f410 <X509_get0_pubkey_bitstr@plt+0x38a40>
  44f3da:	cmpl   $0x3,0x28(%rsp)
  44f3df:	je     44f5e4 <X509_get0_pubkey_bitstr@plt+0x38c14>
  44f3e5:	cmpl   $0x1,0x28(%rsp)
  44f3ea:	jne    44f675 <X509_get0_pubkey_bitstr@plt+0x38ca5>
  44f3f0:	mov    0x3c(%rsp),%ecx
  44f3f4:	mov    %r13,%rsi
  44f3f7:	mov    %rbp,%rdi
  44f3fa:	test   %ecx,%ecx
  44f3fc:	je     44f6ad <X509_get0_pubkey_bitstr@plt+0x38cdd>
  44f402:	callq  412910 <i2d_PUBKEY_bio@plt>
  44f407:	nopw   0x0(%rax,%rax,1)
  44f410:	mov    0x34(%rsp),%edx
  44f414:	xor    %ebx,%ebx
  44f416:	test   %edx,%edx
  44f418:	je     44f252 <X509_get0_pubkey_bitstr@plt+0x38882>
  44f41e:	mov    0x38(%rsp),%eax
  44f422:	xor    %ecx,%ecx
  44f424:	xor    %edx,%edx
  44f426:	mov    %r13,%rsi
  44f429:	mov    %rbp,%rdi
  44f42c:	test   %eax,%eax
  44f42e:	je     44f66b <X509_get0_pubkey_bitstr@plt+0x38c9b>
  44f434:	callq  4164d0 <EVP_PKEY_print_public@plt>
  44f439:	jmpq   44f252 <X509_get0_pubkey_bitstr@plt+0x38882>
  44f43e:	xchg   %ax,%ax
  44f440:	cmpb   $0x2d,(%r8)
  44f444:	je     44f480 <X509_get0_pubkey_bitstr@plt+0x38ab0>
  44f446:	lea    0xe9f9(%rip),%rdi        # 45de46 <_fini+0x942>
  44f44d:	mov    $0x5,%ecx
  44f452:	mov    %r8,%rsi
  44f455:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44f457:	jne    44f500 <X509_get0_pubkey_bitstr@plt+0x38b30>
  44f45d:	mov    0x8(%rdx),%rax
  44f461:	test   %rax,%rax
  44f464:	je     44f2c0 <X509_get0_pubkey_bitstr@plt+0x388f0>
  44f46a:	mov    %rax,0x20(%rsp)
  44f46f:	lea    0x8(%rdx),%r13
  44f473:	xor    %eax,%eax
  44f475:	jmpq   44f10b <X509_get0_pubkey_bitstr@plt+0x3873b>
  44f47a:	nopw   0x0(%rax,%rax,1)
  44f480:	cmpb   $0x69,0x1(%r8)
  44f485:	jne    44f446 <X509_get0_pubkey_bitstr@plt+0x38a76>
  44f487:	cmpb   $0x6e,0x2(%r8)
  44f48c:	jne    44f446 <X509_get0_pubkey_bitstr@plt+0x38a76>
  44f48e:	cmpb   $0x0,0x3(%r8)
  44f493:	jne    44f446 <X509_get0_pubkey_bitstr@plt+0x38a76>
  44f495:	mov    0x8(%rdx),%rax
  44f499:	test   %rax,%rax
  44f49c:	je     44f2c0 <X509_get0_pubkey_bitstr@plt+0x388f0>
  44f4a2:	mov    %rax,0x18(%rsp)
  44f4a7:	lea    0x8(%rdx),%r13
  44f4ab:	xor    %eax,%eax
  44f4ad:	jmpq   44f10b <X509_get0_pubkey_bitstr@plt+0x3873b>
  44f4b2:	mov    0x226ac7(%rip),%rax        # 675f80 <_fini+0x218a7c>
  44f4b9:	xor    %esi,%esi
  44f4bb:	mov    (%rax),%rdi
  44f4be:	callq  4161e0 <BIO_new_fp@plt>
  44f4c3:	mov    %rax,%rdi
  44f4c6:	mov    %rax,(%r12)
  44f4ca:	jmpq   44f037 <X509_get0_pubkey_bitstr@plt+0x38667>
  44f4cf:	lea    0x16801(%rip),%rax        # 465cd7 <_fini+0x87d3>
  44f4d6:	mov    0x58(%rsp),%r8
  44f4db:	mov    0x18(%rsp),%rsi
  44f4e0:	mov    %r13d,%edx
  44f4e3:	mov    %rbx,%r9
  44f4e6:	mov    $0x1,%ecx
  44f4eb:	mov    %rax,(%rsp)
  44f4ef:	mov    (%r12),%rdi
  44f4f3:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  44f4f8:	mov    %rax,%r13
  44f4fb:	jmpq   44f3c9 <X509_get0_pubkey_bitstr@plt+0x389f9>
  44f500:	lea    0x13c33(%rip),%rdi        # 46313a <_fini+0x5c36>
  44f507:	mov    $0x7,%ecx
  44f50c:	mov    %r8,%rsi
  44f50f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44f511:	je     44f5a9 <X509_get0_pubkey_bitstr@plt+0x38bd9>
  44f517:	lea    0x13c23(%rip),%rdi        # 463141 <_fini+0x5c3d>
  44f51e:	mov    %r8,%rsi
  44f521:	mov    %rbx,%rcx
  44f524:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44f526:	je     44f69b <X509_get0_pubkey_bitstr@plt+0x38ccb>
  44f52c:	lea    0x1e1f8(%rip),%rdi        # 46d72b <_fini+0x10227>
  44f533:	mov    $0xa,%ecx
  44f538:	mov    %r8,%rsi
  44f53b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44f53d:	je     44f6b7 <X509_get0_pubkey_bitstr@plt+0x38ce7>
  44f543:	lea    0xed1d(%rip),%rdi        # 45e267 <_fini+0xd63>
  44f54a:	mov    $0x6,%ecx
  44f54f:	mov    %r8,%rsi
  44f552:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44f554:	je     44f71b <X509_get0_pubkey_bitstr@plt+0x38d4b>
  44f55a:	lea    0xe786(%rip),%rdi        # 45dce7 <_fini+0x7e3>
  44f561:	mov    $0x7,%ecx
  44f566:	mov    %r8,%rsi
  44f569:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44f56b:	jne    44f732 <X509_get0_pubkey_bitstr@plt+0x38d62>
  44f571:	mov    %rdx,%r13
  44f574:	xor    %eax,%eax
  44f576:	movl   $0x1,0x30(%rsp)
  44f57e:	jmpq   44f10b <X509_get0_pubkey_bitstr@plt+0x3873b>
  44f583:	nopl   0x0(%rax,%rax,1)
  44f588:	mov    (%r12),%rdi
  44f58c:	lea    0xedcd(%rip),%rsi        # 45e360 <_fini+0xe5c>
  44f593:	xor    %eax,%eax
  44f595:	mov    $0x1,%ebx
  44f59a:	xor    %r13d,%r13d
  44f59d:	xor    %ebp,%ebp
  44f59f:	callq  413c40 <BIO_printf@plt>
  44f5a4:	jmpq   44f252 <X509_get0_pubkey_bitstr@plt+0x38882>
  44f5a9:	mov    %rdx,%r13
  44f5ac:	xor    %eax,%eax
  44f5ae:	movl   $0x1,0x38(%rsp)
  44f5b6:	movl   $0x1,0x3c(%rsp)
  44f5be:	movl   $0x1,0x2c(%rsp)
  44f5c6:	jmpq   44f10b <X509_get0_pubkey_bitstr@plt+0x3873b>
  44f5cb:	mov    0x2268e6(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  44f5d2:	xor    %esi,%esi
  44f5d4:	mov    (%rax),%rdi
  44f5d7:	callq  4161e0 <BIO_new_fp@plt>
  44f5dc:	mov    %rax,%rbp
  44f5df:	jmpq   44f38f <X509_get0_pubkey_bitstr@plt+0x389bf>
  44f5e4:	mov    0x3c(%rsp),%esi
  44f5e8:	test   %esi,%esi
  44f5ea:	je     44f6f5 <X509_get0_pubkey_bitstr@plt+0x38d25>
  44f5f0:	mov    %r13,%rsi
  44f5f3:	mov    %rbp,%rdi
  44f5f6:	callq  414610 <PEM_write_bio_PUBKEY@plt>
  44f5fb:	jmpq   44f410 <X509_get0_pubkey_bitstr@plt+0x38a40>
  44f600:	movq   $0x0,0x10(%rsp)
  44f609:	movl   $0x0,0x30(%rsp)
  44f611:	mov    $0x3,%r13d
  44f617:	movl   $0x0,0x34(%rsp)
  44f61f:	movl   $0x0,0x38(%rsp)
  44f627:	xor    %r14d,%r14d
  44f62a:	movl   $0x0,0x3c(%rsp)
  44f632:	movl   $0x0,0x2c(%rsp)
  44f63a:	movl   $0x3,0x28(%rsp)
  44f642:	movq   $0x0,0x40(%rsp)
  44f64b:	movq   $0x0,0x8(%rsp)
  44f654:	movq   $0x0,0x20(%rsp)
  44f65d:	movq   $0x0,0x18(%rsp)
  44f666:	jmpq   44f333 <X509_get0_pubkey_bitstr@plt+0x38963>
  44f66b:	callq  413870 <EVP_PKEY_print_private@plt>
  44f670:	jmpq   44f252 <X509_get0_pubkey_bitstr@plt+0x38882>
  44f675:	mov    (%r12),%rdi
  44f679:	lea    0x16d23(%rip),%rsi        # 4663a3 <_fini+0x8e9f>
  44f680:	xor    %eax,%eax
  44f682:	mov    $0x1,%ebx
  44f687:	callq  413c40 <BIO_printf@plt>
  44f68c:	jmpq   44f252 <X509_get0_pubkey_bitstr@plt+0x38882>
  44f691:	mov    $0x1,%ebx
  44f696:	jmpq   44f252 <X509_get0_pubkey_bitstr@plt+0x38882>
  44f69b:	mov    %rdx,%r13
  44f69e:	xor    %eax,%eax
  44f6a0:	movl   $0x1,0x3c(%rsp)
  44f6a8:	jmpq   44f10b <X509_get0_pubkey_bitstr@plt+0x3873b>
  44f6ad:	callq  4156c0 <i2d_PrivateKey_bio@plt>
  44f6b2:	jmpq   44f410 <X509_get0_pubkey_bitstr@plt+0x38a40>
  44f6b7:	mov    %rdx,%r13
  44f6ba:	xor    %eax,%eax
  44f6bc:	movl   $0x1,0x34(%rsp)
  44f6c4:	movl   $0x1,0x38(%rsp)
  44f6cc:	jmpq   44f10b <X509_get0_pubkey_bitstr@plt+0x3873b>
  44f6d1:	mov    0x20(%rsp),%rdx
  44f6d6:	mov    (%r12),%rdi
  44f6da:	lea    0x16c8a(%rip),%rsi        # 46636b <_fini+0x8e67>
  44f6e1:	xor    %eax,%eax
  44f6e3:	mov    $0x1,%ebx
  44f6e8:	xor    %r13d,%r13d
  44f6eb:	callq  413c40 <BIO_printf@plt>
  44f6f0:	jmpq   44f252 <X509_get0_pubkey_bitstr@plt+0x38882>
  44f6f5:	mov    0x60(%rsp),%rax
  44f6fa:	mov    0x40(%rsp),%rdx
  44f6ff:	xor    %r9d,%r9d
  44f702:	xor    %r8d,%r8d
  44f705:	xor    %ecx,%ecx
  44f707:	mov    %r13,%rsi
  44f70a:	mov    %rbp,%rdi
  44f70d:	mov    %rax,(%rsp)
  44f711:	callq  4148c0 <PEM_write_bio_PrivateKey@plt>
  44f716:	jmpq   44f410 <X509_get0_pubkey_bitstr@plt+0x38a40>
  44f71b:	mov    %rdx,%r13
  44f71e:	xor    %eax,%eax
  44f720:	movl   $0x1,0x34(%rsp)
  44f728:	jmpq   44f10b <X509_get0_pubkey_bitstr@plt+0x3873b>
  44f72d:	callq  414c30 <__stack_chk_fail@plt>
  44f732:	lea    0x1(%r8),%rdi
  44f736:	mov    %rdx,0x48(%rsp)
  44f73b:	callq  416810 <EVP_get_cipherbyname@plt>
  44f740:	mov    0x48(%rsp),%rdx
  44f745:	mov    %rax,%rsi
  44f748:	mov    %rax,0x40(%rsp)
  44f74d:	xor    %eax,%eax
  44f74f:	test   %rsi,%rsi
  44f752:	mov    %rdx,%r13
  44f755:	jne    44f10b <X509_get0_pubkey_bitstr@plt+0x3873b>
  44f75b:	mov    (%rdx),%rdx
  44f75e:	mov    (%r12),%rdi
  44f762:	lea    0x16bbf(%rip),%rsi        # 466328 <_fini+0x8e24>
  44f769:	add    $0x1,%rdx
  44f76d:	callq  413c40 <BIO_printf@plt>
  44f772:	mov    $0x1,%eax
  44f777:	jmpq   44f10b <X509_get0_pubkey_bitstr@plt+0x3873b>
  44f77c:	nopl   0x0(%rax)
  44f780:	push   %r15
  44f782:	push   %r14
  44f784:	push   %r13
  44f786:	push   %r12
  44f788:	push   %rbp
  44f789:	push   %rbx
  44f78a:	mov    %rsi,%rbx
  44f78d:	sub    $0x8,%rsp
  44f791:	lea    0x22b5a8(%rip),%rbp        # 67ad40 <_edata+0x38>
  44f798:	mov    0x0(%rbp),%rdi
  44f79c:	test   %rdi,%rdi
  44f79f:	je     44fa0c <X509_get0_pubkey_bitstr@plt+0x3903c>
  44f7a5:	xor    %esi,%esi
  44f7a7:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  44f7ac:	test   %eax,%eax
  44f7ae:	je     44f928 <X509_get0_pubkey_bitstr@plt+0x38f58>
  44f7b4:	callq  416990 <ERR_load_crypto_strings@plt>
  44f7b9:	xor    %r12d,%r12d
  44f7bc:	xor    %r13d,%r13d
  44f7bf:	xor    %r14d,%r14d
  44f7c2:	callq  412cf0 <OPENSSL_add_all_algorithms_noconf@plt>
  44f7c7:	mov    $0x7,%r15d
  44f7cd:	lea    0x8(%rbx),%r8
  44f7d1:	xor    %r9d,%r9d
  44f7d4:	xor    %ebx,%ebx
  44f7d6:	mov    $0x5,%edx
  44f7db:	mov    $0x8,%r10d
  44f7e1:	mov    $0x6,%r11d
  44f7e7:	jmp    44f80d <X509_get0_pubkey_bitstr@plt+0x38e3d>
  44f7e9:	nopl   0x0(%rax)
  44f7f0:	cmpb   $0x6e,0x2(%rax)
  44f7f4:	jne    44f828 <X509_get0_pubkey_bitstr@plt+0x38e58>
  44f7f6:	cmpb   $0x0,0x3(%rax)
  44f7fa:	jne    44f828 <X509_get0_pubkey_bitstr@plt+0x38e58>
  44f7fc:	mov    0x8(%r8),%rbx
  44f800:	test   %rbx,%rbx
  44f803:	je     44f846 <X509_get0_pubkey_bitstr@plt+0x38e76>
  44f805:	add    $0x8,%r8
  44f809:	add    $0x8,%r8
  44f80d:	mov    (%r8),%rax
  44f810:	test   %rax,%rax
  44f813:	je     44f980 <X509_get0_pubkey_bitstr@plt+0x38fb0>
  44f819:	cmpb   $0x2d,(%rax)
  44f81c:	jne    44f980 <X509_get0_pubkey_bitstr@plt+0x38fb0>
  44f822:	cmpb   $0x69,0x1(%rax)
  44f826:	je     44f7f0 <X509_get0_pubkey_bitstr@plt+0x38e20>
  44f828:	lea    0xe617(%rip),%rdi        # 45de46 <_fini+0x942>
  44f82f:	mov    %rax,%rsi
  44f832:	mov    %rdx,%rcx
  44f835:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44f837:	jne    44f8e0 <X509_get0_pubkey_bitstr@plt+0x38f10>
  44f83d:	mov    0x8(%r8),%r14
  44f841:	test   %r14,%r14
  44f844:	jne    44f805 <X509_get0_pubkey_bitstr@plt+0x38e35>
  44f846:	mov    0x0(%rbp),%rdi
  44f84a:	lea    0x1defa(%rip),%rsi        # 46d74b <_fini+0x10247>
  44f851:	xor    %eax,%eax
  44f853:	callq  413c40 <BIO_printf@plt>
  44f858:	mov    0x0(%rbp),%rdi
  44f85c:	lea    0xe4f2(%rip),%rsi        # 45dd55 <_fini+0x851>
  44f863:	xor    %eax,%eax
  44f865:	callq  413c40 <BIO_printf@plt>
  44f86a:	mov    0x0(%rbp),%rdi
  44f86e:	lea    0x13dec(%rip),%rsi        # 463661 <_fini+0x615d>
  44f875:	xor    %eax,%eax
  44f877:	callq  413c40 <BIO_printf@plt>
  44f87c:	mov    0x0(%rbp),%rdi
  44f880:	lea    0x13df6(%rip),%rsi        # 46367d <_fini+0x6179>
  44f887:	xor    %eax,%eax
  44f889:	callq  413c40 <BIO_printf@plt>
  44f88e:	mov    0x0(%rbp),%rdi
  44f892:	lea    0x1dee7(%rip),%rsi        # 46d780 <_fini+0x1027c>
  44f899:	xor    %eax,%eax
  44f89b:	callq  413c40 <BIO_printf@plt>
  44f8a0:	mov    0x0(%rbp),%rdi
  44f8a4:	lea    0x1df05(%rip),%rsi        # 46d7b0 <_fini+0x102ac>
  44f8ab:	xor    %eax,%eax
  44f8ad:	callq  413c40 <BIO_printf@plt>
  44f8b2:	mov    0x0(%rbp),%rdi
  44f8b6:	lea    0xfeab(%rip),%rsi        # 45f768 <_fini+0x2264>
  44f8bd:	xor    %eax,%eax
  44f8bf:	callq  413c40 <BIO_printf@plt>
  44f8c4:	add    $0x8,%rsp
  44f8c8:	mov    $0x1,%eax
  44f8cd:	pop    %rbx
  44f8ce:	pop    %rbp
  44f8cf:	pop    %r12
  44f8d1:	pop    %r13
  44f8d3:	pop    %r14
  44f8d5:	pop    %r15
  44f8d7:	retq   
  44f8d8:	nopl   0x0(%rax,%rax,1)
  44f8e0:	lea    0xe27b(%rip),%rdi        # 45db62 <_fini+0x65e>
  44f8e7:	mov    %rax,%rsi
  44f8ea:	mov    %r10,%rcx
  44f8ed:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44f8ef:	jne    44f908 <X509_get0_pubkey_bitstr@plt+0x38f38>
  44f8f1:	mov    0x8(%r8),%r9
  44f8f5:	test   %r9,%r9
  44f8f8:	jne    44f805 <X509_get0_pubkey_bitstr@plt+0x38e35>
  44f8fe:	jmpq   44f846 <X509_get0_pubkey_bitstr@plt+0x38e76>
  44f903:	nopl   0x0(%rax,%rax,1)
  44f908:	lea    0xe958(%rip),%rdi        # 45e267 <_fini+0xd63>
  44f90f:	mov    %rax,%rsi
  44f912:	mov    %r11,%rcx
  44f915:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44f917:	jne    44f960 <X509_get0_pubkey_bitstr@plt+0x38f90>
  44f919:	mov    $0x1,%r13d
  44f91f:	jmpq   44f809 <X509_get0_pubkey_bitstr@plt+0x38e39>
  44f924:	nopl   0x0(%rax)
  44f928:	mov    $0x1,%ebp
  44f92d:	xor    %r14d,%r14d
  44f930:	xor    %ebx,%ebx
  44f932:	xor    %r15d,%r15d
  44f935:	mov    %r14,%rdi
  44f938:	callq  412b00 <EVP_PKEY_free@plt>
  44f93d:	mov    %rbx,%rdi
  44f940:	callq  416570 <BIO_free_all@plt>
  44f945:	mov    %r15,%rdi
  44f948:	callq  413960 <BIO_free@plt>
  44f94d:	add    $0x8,%rsp
  44f951:	mov    %ebp,%eax
  44f953:	pop    %rbx
  44f954:	pop    %rbp
  44f955:	pop    %r12
  44f957:	pop    %r13
  44f959:	pop    %r14
  44f95b:	pop    %r15
  44f95d:	retq   
  44f95e:	xchg   %ax,%ax
  44f960:	lea    0xe380(%rip),%rdi        # 45dce7 <_fini+0x7e3>
  44f967:	mov    %rax,%rsi
  44f96a:	mov    %r15,%rcx
  44f96d:	mov    $0x1,%eax
  44f972:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44f974:	cmove  %eax,%r12d
  44f978:	jmpq   44f809 <X509_get0_pubkey_bitstr@plt+0x38e39>
  44f97d:	nopl   (%rax)
  44f980:	mov    0x0(%rbp),%rdi
  44f984:	xor    %edx,%edx
  44f986:	mov    %r9,%rsi
  44f989:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  44f98e:	test   %rbx,%rbx
  44f991:	je     44fa5a <X509_get0_pubkey_bitstr@plt+0x3908a>
  44f997:	lea    0xe88f(%rip),%rsi        # 45e22d <_fini+0xd29>
  44f99e:	mov    %rbx,%rdi
  44f9a1:	callq  412ba0 <BIO_new_file@plt>
  44f9a6:	test   %rax,%rax
  44f9a9:	mov    %rax,%r15
  44f9ac:	je     44fa29 <X509_get0_pubkey_bitstr@plt+0x39059>
  44f9ae:	test   %r14,%r14
  44f9b1:	je     44fa73 <X509_get0_pubkey_bitstr@plt+0x390a3>
  44f9b7:	lea    0x13c5a(%rip),%rsi        # 463618 <_fini+0x6114>
  44f9be:	mov    %r14,%rdi
  44f9c1:	callq  412ba0 <BIO_new_file@plt>
  44f9c6:	test   %rax,%rax
  44f9c9:	mov    %rax,%rbx
  44f9cc:	je     44fab1 <X509_get0_pubkey_bitstr@plt+0x390e1>
  44f9d2:	xor    %esi,%esi
  44f9d4:	mov    %r15,%rdi
  44f9d7:	callq  413ee0 <PEM_read_bio_Parameters@plt>
  44f9dc:	test   %rax,%rax
  44f9df:	mov    %rax,%r14
  44f9e2:	je     44fa8c <X509_get0_pubkey_bitstr@plt+0x390bc>
  44f9e8:	test   %r12d,%r12d
  44f9eb:	je     44fa4d <X509_get0_pubkey_bitstr@plt+0x3907d>
  44f9ed:	xor    %ebp,%ebp
  44f9ef:	test   %r13d,%r13d
  44f9f2:	je     44f935 <X509_get0_pubkey_bitstr@plt+0x38f65>
  44f9f8:	xor    %ecx,%ecx
  44f9fa:	xor    %edx,%edx
  44f9fc:	mov    %r14,%rsi
  44f9ff:	mov    %rbx,%rdi
  44fa02:	callq  413bf0 <EVP_PKEY_print_params@plt>
  44fa07:	jmpq   44f935 <X509_get0_pubkey_bitstr@plt+0x38f65>
  44fa0c:	mov    0x22656d(%rip),%rax        # 675f80 <_fini+0x218a7c>
  44fa13:	xor    %esi,%esi
  44fa15:	mov    (%rax),%rdi
  44fa18:	callq  4161e0 <BIO_new_fp@plt>
  44fa1d:	mov    %rax,%rdi
  44fa20:	mov    %rax,0x0(%rbp)
  44fa24:	jmpq   44f7a5 <X509_get0_pubkey_bitstr@plt+0x38dd5>
  44fa29:	mov    0x0(%rbp),%rdi
  44fa2d:	lea    0x1cbbd(%rip),%rsi        # 46c5f1 <_fini+0xf0ed>
  44fa34:	mov    %rbx,%rdx
  44fa37:	xor    %eax,%eax
  44fa39:	mov    $0x1,%ebp
  44fa3e:	xor    %r14d,%r14d
  44fa41:	xor    %ebx,%ebx
  44fa43:	callq  413c40 <BIO_printf@plt>
  44fa48:	jmpq   44f935 <X509_get0_pubkey_bitstr@plt+0x38f65>
  44fa4d:	mov    %rax,%rsi
  44fa50:	mov    %rbx,%rdi
  44fa53:	callq  415910 <PEM_write_bio_Parameters@plt>
  44fa58:	jmp    44f9ed <X509_get0_pubkey_bitstr@plt+0x3901d>
  44fa5a:	mov    0x2264af(%rip),%rax        # 675f10 <_fini+0x218a0c>
  44fa61:	xor    %esi,%esi
  44fa63:	mov    (%rax),%rdi
  44fa66:	callq  4161e0 <BIO_new_fp@plt>
  44fa6b:	mov    %rax,%r15
  44fa6e:	jmpq   44f9ae <X509_get0_pubkey_bitstr@plt+0x38fde>
  44fa73:	mov    0x22643e(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  44fa7a:	xor    %esi,%esi
  44fa7c:	mov    (%rax),%rdi
  44fa7f:	callq  4161e0 <BIO_new_fp@plt>
  44fa84:	mov    %rax,%rbx
  44fa87:	jmpq   44f9d2 <X509_get0_pubkey_bitstr@plt+0x39002>
  44fa8c:	mov    0x0(%rbp),%rdi
  44fa90:	lea    0x1dccf(%rip),%rsi        # 46d766 <_fini+0x10262>
  44fa97:	xor    %eax,%eax
  44fa99:	callq  413c40 <BIO_printf@plt>
  44fa9e:	mov    0x0(%rbp),%rdi
  44faa2:	mov    $0x1,%ebp
  44faa7:	callq  413f40 <ERR_print_errors@plt>
  44faac:	jmpq   44f935 <X509_get0_pubkey_bitstr@plt+0x38f65>
  44fab1:	mov    0x0(%rbp),%rdi
  44fab5:	lea    0x168af(%rip),%rsi        # 46636b <_fini+0x8e67>
  44fabc:	mov    %r14,%rdx
  44fabf:	xor    %eax,%eax
  44fac1:	mov    $0x1,%ebp
  44fac6:	xor    %r14d,%r14d
  44fac9:	callq  413c40 <BIO_printf@plt>
  44face:	jmpq   44f935 <X509_get0_pubkey_bitstr@plt+0x38f65>
  44fad3:	nopw   %cs:0x0(%rax,%rax,1)
  44fadd:	nopl   (%rax)
  44fae0:	push   %rbx
  44fae1:	lea    0x22b258(%rip),%rbx        # 67ad40 <_edata+0x38>
  44fae8:	lea    0x1dcf2(%rip),%rsi        # 46d7e1 <_fini+0x102dd>
  44faef:	xor    %eax,%eax
  44faf1:	mov    (%rbx),%rdi
  44faf4:	callq  413c40 <BIO_printf@plt>
  44faf9:	mov    (%rbx),%rdi
  44fafc:	lea    0x13b5e(%rip),%rsi        # 463661 <_fini+0x615d>
  44fb03:	xor    %eax,%eax
  44fb05:	callq  413c40 <BIO_printf@plt>
  44fb0a:	mov    (%rbx),%rdi
  44fb0d:	lea    0x13b69(%rip),%rsi        # 46367d <_fini+0x6179>
  44fb14:	xor    %eax,%eax
  44fb16:	callq  413c40 <BIO_printf@plt>
  44fb1b:	mov    (%rbx),%rdi
  44fb1e:	lea    0x1ddcb(%rip),%rsi        # 46d8f0 <_fini+0x103ec>
  44fb25:	xor    %eax,%eax
  44fb27:	callq  413c40 <BIO_printf@plt>
  44fb2c:	mov    (%rbx),%rdi
  44fb2f:	lea    0x13b64(%rip),%rsi        # 46369a <_fini+0x6196>
  44fb36:	xor    %eax,%eax
  44fb38:	callq  413c40 <BIO_printf@plt>
  44fb3d:	mov    (%rbx),%rdi
  44fb40:	lea    0x13bf9(%rip),%rsi        # 463740 <_fini+0x623c>
  44fb47:	xor    %eax,%eax
  44fb49:	callq  413c40 <BIO_printf@plt>
  44fb4e:	mov    (%rbx),%rdi
  44fb51:	lea    0x1ddd0(%rip),%rsi        # 46d928 <_fini+0x10424>
  44fb58:	xor    %eax,%eax
  44fb5a:	callq  413c40 <BIO_printf@plt>
  44fb5f:	mov    (%rbx),%rdi
  44fb62:	lea    0x1dde7(%rip),%rsi        # 46d950 <_fini+0x1044c>
  44fb69:	xor    %eax,%eax
  44fb6b:	callq  413c40 <BIO_printf@plt>
  44fb70:	mov    (%rbx),%rdi
  44fb73:	lea    0x1de16(%rip),%rsi        # 46d990 <_fini+0x1048c>
  44fb7a:	xor    %eax,%eax
  44fb7c:	callq  413c40 <BIO_printf@plt>
  44fb81:	mov    (%rbx),%rdi
  44fb84:	lea    0x13d05(%rip),%rsi        # 463890 <_fini+0x638c>
  44fb8b:	xor    %eax,%eax
  44fb8d:	callq  413c40 <BIO_printf@plt>
  44fb92:	mov    (%rbx),%rdi
  44fb95:	lea    0x13d1c(%rip),%rsi        # 4638b8 <_fini+0x63b4>
  44fb9c:	xor    %eax,%eax
  44fb9e:	callq  413c40 <BIO_printf@plt>
  44fba3:	mov    (%rbx),%rdi
  44fba6:	lea    0x1de0b(%rip),%rsi        # 46d9b8 <_fini+0x104b4>
  44fbad:	xor    %eax,%eax
  44fbaf:	callq  413c40 <BIO_printf@plt>
  44fbb4:	mov    (%rbx),%rdi
  44fbb7:	lea    0x13d22(%rip),%rsi        # 4638e0 <_fini+0x63dc>
  44fbbe:	xor    %eax,%eax
  44fbc0:	callq  413c40 <BIO_printf@plt>
  44fbc5:	mov    (%rbx),%rdi
  44fbc8:	lea    0x13d41(%rip),%rsi        # 463910 <_fini+0x640c>
  44fbcf:	xor    %eax,%eax
  44fbd1:	callq  413c40 <BIO_printf@plt>
  44fbd6:	mov    (%rbx),%rdi
  44fbd9:	lea    0x1de18(%rip),%rsi        # 46d9f8 <_fini+0x104f4>
  44fbe0:	xor    %eax,%eax
  44fbe2:	callq  413c40 <BIO_printf@plt>
  44fbe7:	mov    (%rbx),%rdi
  44fbea:	lea    0x13d4f(%rip),%rsi        # 463940 <_fini+0x643c>
  44fbf1:	xor    %eax,%eax
  44fbf3:	callq  413c40 <BIO_printf@plt>
  44fbf8:	mov    (%rbx),%rdi
  44fbfb:	lea    0xfb66(%rip),%rsi        # 45f768 <_fini+0x2264>
  44fc02:	xor    %eax,%eax
  44fc04:	callq  413c40 <BIO_printf@plt>
  44fc09:	mov    (%rbx),%rdi
  44fc0c:	lea    0x1de0d(%rip),%rsi        # 46da20 <_fini+0x1051c>
  44fc13:	xor    %eax,%eax
  44fc15:	pop    %rbx
  44fc16:	jmpq   413c40 <BIO_printf@plt>
  44fc1b:	nopl   0x0(%rax,%rax,1)
  44fc20:	cmp    $0x100,%esi
  44fc26:	mov    %rdx,%rax
  44fc29:	mov    %rcx,%rdx
  44fc2c:	mov    %r8,%rcx
  44fc2f:	je     44fc98 <X509_get0_pubkey_bitstr@plt+0x392c8>
  44fc31:	jg     44fc50 <X509_get0_pubkey_bitstr@plt+0x39280>
  44fc33:	cmp    $0x8,%esi
  44fc36:	je     44fc88 <X509_get0_pubkey_bitstr@plt+0x392b8>
  44fc38:	cmp    $0x20,%esi
  44fc3b:	nopl   0x0(%rax,%rax,1)
  44fc40:	jne    44fc70 <X509_get0_pubkey_bitstr@plt+0x392a0>
  44fc42:	mov    %r9,%r8
  44fc45:	mov    %rax,%rsi
  44fc48:	jmpq   414020 <EVP_PKEY_verify_recover@plt>
  44fc4d:	nopl   (%rax)
  44fc50:	cmp    $0x200,%esi
  44fc56:	je     44fc78 <X509_get0_pubkey_bitstr@plt+0x392a8>
  44fc58:	cmp    $0x400,%esi
  44fc5e:	jne    44fc70 <X509_get0_pubkey_bitstr@plt+0x392a0>
  44fc60:	mov    %rax,%rsi
  44fc63:	jmpq   4144d0 <EVP_PKEY_derive@plt>
  44fc68:	nopl   0x0(%rax,%rax,1)
  44fc70:	xor    %eax,%eax
  44fc72:	retq   
  44fc73:	nopl   0x0(%rax,%rax,1)
  44fc78:	mov    %r9,%r8
  44fc7b:	mov    %rax,%rsi
  44fc7e:	jmpq   415780 <EVP_PKEY_decrypt@plt>
  44fc83:	nopl   0x0(%rax,%rax,1)
  44fc88:	mov    %r9,%r8
  44fc8b:	mov    %rax,%rsi
  44fc8e:	jmpq   416110 <EVP_PKEY_sign@plt>
  44fc93:	nopl   0x0(%rax,%rax,1)
  44fc98:	mov    %r9,%r8
  44fc9b:	mov    %rax,%rsi
  44fc9e:	jmpq   4165a0 <EVP_PKEY_encrypt@plt>
  44fca3:	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  44fcb0:	push   %r15
  44fcb2:	push   %r14
  44fcb4:	mov    %rsi,%r14
  44fcb7:	push   %r13
  44fcb9:	push   %r12
  44fcbb:	push   %rbp
  44fcbc:	push   %rbx
  44fcbd:	mov    %edi,%ebx
  44fcbf:	sub    $0x78,%rsp
  44fcc3:	mov    %fs:0x28,%rax
  44fccc:	mov    %rax,0x68(%rsp)
  44fcd1:	xor    %eax,%eax
  44fcd3:	lea    0x22b066(%rip),%rax        # 67ad40 <_edata+0x38>
  44fcda:	movq   $0x0,0x50(%rsp)
  44fce3:	movq   $0x0,0x58(%rsp)
  44fcec:	mov    (%rax),%rdi
  44fcef:	test   %rdi,%rdi
  44fcf2:	je     4503d0 <X509_get0_pubkey_bitstr@plt+0x39a00>
  44fcf8:	xor    %esi,%esi
  44fcfa:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  44fcff:	test   %eax,%eax
  44fd01:	jne    44fd70 <X509_get0_pubkey_bitstr@plt+0x393a0>
  44fd03:	mov    $0x1,%ebp
  44fd08:	xor    %ebx,%ebx
  44fd0a:	xor    %r13d,%r13d
  44fd0d:	xor    %r14d,%r14d
  44fd10:	mov    %r14,%rdi
  44fd13:	callq  413960 <BIO_free@plt>
  44fd18:	mov    %r13,%rdi
  44fd1b:	callq  416570 <BIO_free_all@plt>
  44fd20:	mov    0x50(%rsp),%rdi
  44fd25:	test   %rdi,%rdi
  44fd28:	je     44fd2f <X509_get0_pubkey_bitstr@plt+0x3935f>
  44fd2a:	callq  415020 <CRYPTO_free@plt>
  44fd2f:	test   %rbx,%rbx
  44fd32:	je     44fd3c <X509_get0_pubkey_bitstr@plt+0x3936c>
  44fd34:	mov    %rbx,%rdi
  44fd37:	callq  415020 <CRYPTO_free@plt>
  44fd3c:	mov    0x58(%rsp),%rdi
  44fd41:	test   %rdi,%rdi
  44fd44:	je     44fd4b <X509_get0_pubkey_bitstr@plt+0x3937b>
  44fd46:	callq  415020 <CRYPTO_free@plt>
  44fd4b:	mov    0x68(%rsp),%rcx
  44fd50:	xor    %fs:0x28,%rcx
  44fd59:	mov    %ebp,%eax
  44fd5b:	jne    45096c <X509_get0_pubkey_bitstr@plt+0x39f9c>
  44fd61:	add    $0x78,%rsp
  44fd65:	pop    %rbx
  44fd66:	pop    %rbp
  44fd67:	pop    %r12
  44fd69:	pop    %r13
  44fd6b:	pop    %r14
  44fd6d:	pop    %r15
  44fd6f:	retq   
  44fd70:	sub    $0x1,%ebx
  44fd73:	callq  416990 <ERR_load_crypto_strings@plt>
  44fd78:	callq  412cf0 <OPENSSL_add_all_algorithms_noconf@plt>
  44fd7d:	test   %ebx,%ebx
  44fd7f:	jle    45062f <X509_get0_pubkey_bitstr@plt+0x39c5f>
  44fd85:	lea    0x60(%rsp),%rax
  44fd8a:	add    $0x8,%r14
  44fd8e:	movl   $0xffffffff,0x30(%rsp)
  44fd96:	movq   $0x0,0x20(%rsp)
  44fd9f:	xor    %r12d,%r12d
  44fda2:	movb   $0x0,0x3e(%rsp)
  44fda7:	movb   $0x0,0x3f(%rsp)
  44fdac:	movb   $0x0,0x3d(%rsp)
  44fdb1:	xor    %r13d,%r13d
  44fdb4:	movl   $0x3,0x38(%rsp)
  44fdbc:	movl   $0x3,0x34(%rsp)
  44fdc4:	xor    %r15d,%r15d
  44fdc7:	movl   $0x1,0x14(%rsp)
  44fdcf:	movl   $0x8,0x10(%rsp)
  44fdd7:	movq   $0x0,0x18(%rsp)
  44fde0:	movq   $0x0,0x8(%rsp)
  44fde9:	mov    %rax,0x28(%rsp)
  44fdee:	jmp    44fe1e <X509_get0_pubkey_bitstr@plt+0x3944e>
  44fdf0:	cmpb   $0x69,0x1(%rbp)
  44fdf4:	jne    44fe27 <X509_get0_pubkey_bitstr@plt+0x39457>
  44fdf6:	cmpb   $0x6e,0x2(%rbp)
  44fdfa:	jne    44fe27 <X509_get0_pubkey_bitstr@plt+0x39457>
  44fdfc:	cmpb   $0x0,0x3(%rbp)
  44fe00:	jne    44fe27 <X509_get0_pubkey_bitstr@plt+0x39457>
  44fe02:	sub    $0x1,%ebx
  44fe05:	je     450180 <X509_get0_pubkey_bitstr@plt+0x397b0>
  44fe0b:	mov    0x8(%r14),%r15
  44fe0f:	lea    0x8(%r14),%rbp
  44fe13:	sub    $0x1,%ebx
  44fe16:	lea    0x8(%rbp),%r14
  44fe1a:	test   %ebx,%ebx
  44fe1c:	jle    44fe5a <X509_get0_pubkey_bitstr@plt+0x3948a>
  44fe1e:	mov    (%r14),%rbp
  44fe21:	cmpb   $0x2d,0x0(%rbp)
  44fe25:	je     44fdf0 <X509_get0_pubkey_bitstr@plt+0x39420>
  44fe27:	lea    0xe018(%rip),%rdi        # 45de46 <_fini+0x942>
  44fe2e:	mov    $0x5,%ecx
  44fe33:	mov    %rbp,%rsi
  44fe36:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  44fe38:	jne    450058 <X509_get0_pubkey_bitstr@plt+0x39688>
  44fe3e:	sub    $0x1,%ebx
  44fe41:	je     450180 <X509_get0_pubkey_bitstr@plt+0x397b0>
  44fe47:	lea    0x8(%r14),%rbp
  44fe4b:	sub    $0x1,%ebx
  44fe4e:	mov    0x8(%r14),%r13
  44fe52:	test   %ebx,%ebx
  44fe54:	lea    0x8(%rbp),%r14
  44fe58:	jg     44fe1e <X509_get0_pubkey_bitstr@plt+0x3944e>
  44fe5a:	test   %r12,%r12
  44fe5d:	je     45062f <X509_get0_pubkey_bitstr@plt+0x39c5f>
  44fe63:	cmpq   $0x0,0x8(%rsp)
  44fe69:	setne  %bl
  44fe6c:	cmpl   $0x10,0x10(%rsp)
  44fe71:	jne    450478 <X509_get0_pubkey_bitstr@plt+0x39aa8>
  44fe77:	cmpl   $0x10,0x10(%rsp)
  44fe7c:	sete   %bpl
  44fe80:	je     4503f8 <X509_get0_pubkey_bitstr@plt+0x39a28>
  44fe86:	lea    0x22aeb3(%rip),%rax        # 67ad40 <_edata+0x38>
  44fe8d:	xor    %edx,%edx
  44fe8f:	xor    %edi,%edi
  44fe91:	mov    (%rax),%rsi
  44fe94:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  44fe99:	cmpl   $0x400,0x10(%rsp)
  44fea1:	je     450615 <X509_get0_pubkey_bitstr@plt+0x39c45>
  44fea7:	test   %r15,%r15
  44feaa:	je     45084c <X509_get0_pubkey_bitstr@plt+0x39e7c>
  44feb0:	lea    0xfb2a(%rip),%rsi        # 45f9e1 <_fini+0x24dd>
  44feb7:	mov    %r15,%rdi
  44feba:	callq  412ba0 <BIO_new_file@plt>
  44febf:	test   %rax,%rax
  44fec2:	mov    %rax,%r14
  44fec5:	je     450920 <X509_get0_pubkey_bitstr@plt+0x39f50>
  44fecb:	test   %r13,%r13
  44fece:	je     450833 <X509_get0_pubkey_bitstr@plt+0x39e63>
  44fed4:	lea    0xded0(%rip),%rsi        # 45ddab <_fini+0x8a7>
  44fedb:	mov    %r13,%rdi
  44fede:	callq  412ba0 <BIO_new_file@plt>
  44fee3:	test   %rax,%rax
  44fee6:	mov    %rax,%r13
  44fee9:	je     4508dd <X509_get0_pubkey_bitstr@plt+0x39f0d>
  44feef:	test   %bl,%bl
  44fef1:	je     45061d <X509_get0_pubkey_bitstr@plt+0x39c4d>
  44fef7:	mov    0x8(%rsp),%rdi
  44fefc:	lea    0xfade(%rip),%rsi        # 45f9e1 <_fini+0x24dd>
  44ff03:	callq  412ba0 <BIO_new_file@plt>
  44ff08:	test   %rax,%rax
  44ff0b:	mov    %rax,%r15
  44ff0e:	je     450875 <X509_get0_pubkey_bitstr@plt+0x39ea5>
  44ff14:	mov    0x30(%rsp),%eax
  44ff18:	lea    0x58(%rsp),%rdi
  44ff1d:	mov    %r15,%rdx
  44ff20:	lea    (%rax,%rax,4),%esi
  44ff23:	add    %esi,%esi
  44ff25:	callq  448660 <X509_get0_pubkey_bitstr@plt+0x31c90>
  44ff2a:	mov    %r15,%rdi
  44ff2d:	mov    %eax,%ebx
  44ff2f:	callq  413960 <BIO_free@plt>
  44ff34:	test   %ebx,%ebx
  44ff36:	jle    45089e <X509_get0_pubkey_bitstr@plt+0x39ece>
  44ff3c:	test   %r14,%r14
  44ff3f:	je     450627 <X509_get0_pubkey_bitstr@plt+0x39c57>
  44ff45:	mov    0x30(%rsp),%eax
  44ff49:	lea    0x50(%rsp),%rdi
  44ff4e:	mov    %r14,%rdx
  44ff51:	lea    (%rax,%rax,4),%esi
  44ff54:	add    %esi,%esi
  44ff56:	callq  448660 <X509_get0_pubkey_bitstr@plt+0x31c90>
  44ff5b:	test   %eax,%eax
  44ff5d:	jle    4509b9 <X509_get0_pubkey_bitstr@plt+0x39fe9>
  44ff63:	cmpb   $0x0,0x3d(%rsp)
  44ff68:	movslq %eax,%r15
  44ff6b:	je     44ffb6 <X509_get0_pubkey_bitstr@plt+0x395e6>
  44ff6d:	movslq %eax,%r10
  44ff70:	mov    %r10,%r9
  44ff73:	shr    %r9
  44ff76:	je     450961 <X509_get0_pubkey_bitstr@plt+0x39f91>
  44ff7c:	lea    -0x1(%r10),%r8
  44ff80:	xor    %eax,%eax
  44ff82:	nopw   0x0(%rax,%rax,1)
  44ff88:	mov    0x50(%rsp),%rsi
  44ff8d:	mov    %r8,%rdx
  44ff90:	sub    %rax,%rdx
  44ff93:	lea    (%rsi,%rax,1),%rcx
  44ff97:	movzbl (%rsi,%rdx,1),%esi
  44ff9b:	add    $0x1,%rax
  44ff9f:	cmp    %r9,%rax
  44ffa2:	movzbl (%rcx),%edi
  44ffa5:	mov    %sil,(%rcx)
  44ffa8:	mov    0x50(%rsp),%rcx
  44ffad:	mov    %dil,(%rcx,%rdx,1)
  44ffb1:	jne    44ff88 <X509_get0_pubkey_bitstr@plt+0x395b8>
  44ffb3:	mov    %r10,%r15
  44ffb6:	test   %bpl,%bpl
  44ffb9:	jne    450504 <X509_get0_pubkey_bitstr@plt+0x39b34>
  44ffbf:	lea    0x60(%rsp),%rbp
  44ffc4:	mov    0x50(%rsp),%r8
  44ffc9:	mov    0x10(%rsp),%esi
  44ffcd:	xor    %edx,%edx
  44ffcf:	mov    %r15,%r9
  44ffd2:	mov    %r12,%rdi
  44ffd5:	mov    %rbp,%rcx
  44ffd8:	callq  44fc20 <X509_get0_pubkey_bitstr@plt+0x39250>
  44ffdd:	test   %eax,%eax
  44ffdf:	jle    45053c <X509_get0_pubkey_bitstr@plt+0x39b6c>
  44ffe5:	mov    0x60(%rsp),%edi
  44ffe9:	lea    0x1d8d4(%rip),%rsi        # 46d8c4 <_fini+0x103c0>
  44fff0:	mov    $0x15b,%edx
  44fff5:	callq  413d50 <CRYPTO_malloc@plt>
  44fffa:	test   %rax,%rax
  44fffd:	mov    %rax,%rbx
  450000:	je     45053c <X509_get0_pubkey_bitstr@plt+0x39b6c>
  450006:	mov    0x50(%rsp),%r8
  45000b:	mov    0x10(%rsp),%esi
  45000f:	mov    %r15,%r9
  450012:	mov    %rbp,%rcx
  450015:	mov    %rax,%rdx
  450018:	mov    %r12,%rdi
  45001b:	callq  44fc20 <X509_get0_pubkey_bitstr@plt+0x39250>
  450020:	test   %eax,%eax
  450022:	jle    45053e <X509_get0_pubkey_bitstr@plt+0x39b6e>
  450028:	cmpb   $0x0,0x3e(%rsp)
  45002d:	jne    4507d0 <X509_get0_pubkey_bitstr@plt+0x39e00>
  450033:	cmpb   $0x0,0x3f(%rsp)
  450038:	mov    0x60(%rsp),%edx
  45003c:	mov    %rbx,%rsi
  45003f:	mov    %r13,%rdi
  450042:	je     4507b0 <X509_get0_pubkey_bitstr@plt+0x39de0>
  450048:	callq  413c30 <BIO_dump@plt>
  45004d:	xor    %ebp,%ebp
  45004f:	jmpq   45019b <X509_get0_pubkey_bitstr@plt+0x397cb>
  450054:	nopl   0x0(%rax)
  450058:	lea    0x1d79c(%rip),%rdi        # 46d7fb <_fini+0x102f7>
  45005f:	mov    $0x9,%ecx
  450064:	mov    %rbp,%rsi
  450067:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  450069:	jne    450090 <X509_get0_pubkey_bitstr@plt+0x396c0>
  45006b:	sub    $0x1,%ebx
  45006e:	je     450180 <X509_get0_pubkey_bitstr@plt+0x397b0>
  450074:	mov    0x8(%r14),%rax
  450078:	lea    0x8(%r14),%rbp
  45007c:	mov    %rax,0x8(%rsp)
  450081:	jmpq   44fe13 <X509_get0_pubkey_bitstr@plt+0x39443>
  450086:	nopw   %cs:0x0(%rax,%rax,1)
  450090:	lea    0x1355b(%rip),%rdi        # 4635f2 <_fini+0x60ee>
  450097:	mov    $0x7,%ecx
  45009c:	mov    %rbp,%rsi
  45009f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4500a1:	jne    4501b0 <X509_get0_pubkey_bitstr@plt+0x397e0>
  4500a7:	sub    $0x1,%ebx
  4500aa:	je     450180 <X509_get0_pubkey_bitstr@plt+0x397b0>
  4500b0:	cmpl   $0x8,0x10(%rsp)
  4500b5:	lea    0x8(%r14),%rbp
  4500b9:	mov    0x8(%r14),%r12
  4500bd:	movq   $0x0,0x60(%rsp)
  4500c6:	je     450298 <X509_get0_pubkey_bitstr@plt+0x398c8>
  4500cc:	cmpl   $0x200,0x10(%rsp)
  4500d4:	je     450298 <X509_get0_pubkey_bitstr@plt+0x398c8>
  4500da:	cmpl   $0x400,0x10(%rsp)
  4500e2:	je     450298 <X509_get0_pubkey_bitstr@plt+0x398c8>
  4500e8:	lea    0x22ac51(%rip),%rax        # 67ad40 <_edata+0x38>
  4500ef:	mov    0x28(%rsp),%rcx
  4500f4:	xor    %r8d,%r8d
  4500f7:	mov    0x20(%rsp),%rsi
  4500fc:	xor    %edx,%edx
  4500fe:	mov    (%rax),%rdi
  450101:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  450106:	test   %eax,%eax
  450108:	je     4505b2 <X509_get0_pubkey_bitstr@plt+0x39be2>
  45010e:	mov    0x14(%rsp),%eax
  450112:	cmp    $0x2,%eax
  450115:	je     4504d1 <X509_get0_pubkey_bitstr@plt+0x39b01>
  45011b:	cmp    $0x3,%eax
  45011e:	je     450489 <X509_get0_pubkey_bitstr@plt+0x39ab9>
  450124:	cmp    $0x1,%eax
  450127:	je     4502d0 <X509_get0_pubkey_bitstr@plt+0x39900>
  45012d:	xor    %edi,%edi
  45012f:	xor    %r12d,%r12d
  450132:	callq  4135f0 <EVP_PKEY_size@plt>
  450137:	mov    %eax,0x30(%rsp)
  45013b:	mov    0x60(%rsp),%rdi
  450140:	test   %rdi,%rdi
  450143:	je     45014a <X509_get0_pubkey_bitstr@plt+0x3977a>
  450145:	callq  415020 <CRYPTO_free@plt>
  45014a:	test   %r12,%r12
  45014d:	jne    44fe13 <X509_get0_pubkey_bitstr@plt+0x39443>
  450153:	lea    0x22abe6(%rip),%rax        # 67ad40 <_edata+0x38>
  45015a:	lea    0x16287(%rip),%rsi        # 4663e8 <_fini+0x8ee4>
  450161:	mov    (%rax),%rdi
  450164:	callq  413b70 <BIO_puts@plt>
  450169:	lea    0x22abd0(%rip),%rax        # 67ad40 <_edata+0x38>
  450170:	mov    (%rax),%rdi
  450173:	callq  413f40 <ERR_print_errors@plt>
  450178:	nopl   0x0(%rax,%rax,1)
  450180:	callq  44fae0 <X509_get0_pubkey_bitstr@plt+0x39110>
  450185:	xor    %ebx,%ebx
  450187:	xor    %r13d,%r13d
  45018a:	xor    %r14d,%r14d
  45018d:	test   %r12,%r12
  450190:	mov    $0x1,%ebp
  450195:	je     44fd10 <X509_get0_pubkey_bitstr@plt+0x39340>
  45019b:	mov    %r12,%rdi
  45019e:	callq  4143b0 <EVP_PKEY_CTX_free@plt>
  4501a3:	jmpq   44fd10 <X509_get0_pubkey_bitstr@plt+0x39340>
  4501a8:	nopl   0x0(%rax,%rax,1)
  4501b0:	lea    0x1d64d(%rip),%rdi        # 46d804 <_fini+0x10300>
  4501b7:	mov    $0x9,%ecx
  4501bc:	mov    %rbp,%rsi
  4501bf:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4501c1:	jne    450260 <X509_get0_pubkey_bitstr@plt+0x39890>
  4501c7:	sub    $0x1,%ebx
  4501ca:	je     450180 <X509_get0_pubkey_bitstr@plt+0x397b0>
  4501cc:	mov    0x8(%r14),%rax
  4501d0:	test   %r12,%r12
  4501d3:	lea    0x8(%r14),%rbp
  4501d7:	mov    %rax,0x40(%rsp)
  4501dc:	lea    0x22ab5d(%rip),%rax        # 67ad40 <_edata+0x38>
  4501e3:	mov    (%rax),%r14
  4501e6:	je     4507bc <X509_get0_pubkey_bitstr@plt+0x39dec>
  4501ec:	lea    0x1d61a(%rip),%rax        # 46d80d <_fini+0x10309>
  4501f3:	mov    0x38(%rsp),%edx
  4501f7:	mov    0x40(%rsp),%rsi
  4501fc:	xor    %r9d,%r9d
  4501ff:	xor    %r8d,%r8d
  450202:	xor    %ecx,%ecx
  450204:	mov    %rax,(%rsp)
  450208:	mov    %r14,%rdi
  45020b:	callq  446250 <X509_get0_pubkey_bitstr@plt+0x2f880>
  450210:	test   %rax,%rax
  450213:	je     450809 <X509_get0_pubkey_bitstr@plt+0x39e39>
  450219:	mov    %rax,%rsi
  45021c:	mov    %r12,%rdi
  45021f:	mov    %rax,0x48(%rsp)
  450224:	callq  4130a0 <EVP_PKEY_derive_set_peer@plt>
  450229:	mov    0x48(%rsp),%rdx
  45022e:	mov    %eax,0x40(%rsp)
  450232:	mov    %rdx,%rdi
  450235:	callq  412b00 <EVP_PKEY_free@plt>
  45023a:	mov    0x40(%rsp),%eax
  45023e:	test   %eax,%eax
  450240:	jg     44fe13 <X509_get0_pubkey_bitstr@plt+0x39443>
  450246:	mov    %r14,%rdi
  450249:	callq  413f40 <ERR_print_errors@plt>
  45024e:	mov    0x40(%rsp),%eax
  450252:	test   %eax,%eax
  450254:	je     450180 <X509_get0_pubkey_bitstr@plt+0x397b0>
  45025a:	jmpq   44fe13 <X509_get0_pubkey_bitstr@plt+0x39443>
  45025f:	nop
  450260:	lea    0xdf89(%rip),%rdi        # 45e1f0 <_fini+0xcec>
  450267:	mov    $0x8,%ecx
  45026c:	mov    %rbp,%rsi
  45026f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  450271:	jne    450380 <X509_get0_pubkey_bitstr@plt+0x399b0>
  450277:	sub    $0x1,%ebx
  45027a:	je     450180 <X509_get0_pubkey_bitstr@plt+0x397b0>
  450280:	mov    0x8(%r14),%rax
  450284:	lea    0x8(%r14),%rbp
  450288:	mov    %rax,0x20(%rsp)
  45028d:	jmpq   44fe13 <X509_get0_pubkey_bitstr@plt+0x39443>
  450292:	nopw   0x0(%rax,%rax,1)
  450298:	cmpl   $0x1,0x14(%rsp)
  45029d:	lea    0x136ec(%rip),%rsi        # 463990 <_fini+0x648c>
  4502a4:	jne    4505b9 <X509_get0_pubkey_bitstr@plt+0x39be9>
  4502aa:	lea    0x22aa8f(%rip),%rax        # 67ad40 <_edata+0x38>
  4502b1:	mov    0x28(%rsp),%rcx
  4502b6:	xor    %r8d,%r8d
  4502b9:	mov    0x20(%rsp),%rsi
  4502be:	xor    %edx,%edx
  4502c0:	mov    (%rax),%rdi
  4502c3:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  4502c8:	test   %eax,%eax
  4502ca:	je     4505b2 <X509_get0_pubkey_bitstr@plt+0x39be2>
  4502d0:	lea    0x15a1f(%rip),%rax        # 465cf6 <_fini+0x87f2>
  4502d7:	mov    0x18(%rsp),%r9
  4502dc:	mov    0x60(%rsp),%r8
  4502e1:	mov    0x34(%rsp),%edx
  4502e5:	xor    %ecx,%ecx
  4502e7:	mov    %r12,%rsi
  4502ea:	mov    %rax,(%rsp)
  4502ee:	lea    0x22aa4b(%rip),%rax        # 67ad40 <_edata+0x38>
  4502f5:	mov    (%rax),%rdi
  4502f8:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  4502fd:	mov    %rax,%r14
  450300:	mov    %r14,%rdi
  450303:	callq  4135f0 <EVP_PKEY_size@plt>
  450308:	test   %r14,%r14
  45030b:	mov    %eax,0x30(%rsp)
  45030f:	je     4509db <X509_get0_pubkey_bitstr@plt+0x3a00b>
  450315:	mov    0x18(%rsp),%rsi
  45031a:	mov    %r14,%rdi
  45031d:	callq  4135e0 <EVP_PKEY_CTX_new@plt>
  450322:	mov    %r14,%rdi
  450325:	mov    %rax,%r12
  450328:	callq  412b00 <EVP_PKEY_free@plt>
  45032d:	test   %r12,%r12
  450330:	je     45013b <X509_get0_pubkey_bitstr@plt+0x3976b>
  450336:	cmpl   $0x20,0x10(%rsp)
  45033b:	je     4505d2 <X509_get0_pubkey_bitstr@plt+0x39c02>
  450341:	mov    0x10(%rsp),%eax
  450345:	jle    45044b <X509_get0_pubkey_bitstr@plt+0x39a7b>
  45034b:	cmp    $0x200,%eax
  450350:	je     450606 <X509_get0_pubkey_bitstr@plt+0x39c36>
  450356:	cmp    $0x400,%eax
  45035b:	je     4505ec <X509_get0_pubkey_bitstr@plt+0x39c1c>
  450361:	cmp    $0x100,%eax
  450366:	je     4505df <X509_get0_pubkey_bitstr@plt+0x39c0f>
  45036c:	mov    %r12,%rdi
  45036f:	xor    %r12d,%r12d
  450372:	callq  4143b0 <EVP_PKEY_CTX_free@plt>
  450377:	jmpq   45013b <X509_get0_pubkey_bitstr@plt+0x3976b>
  45037c:	nopl   0x0(%rax)
  450380:	lea    0x1d4aa(%rip),%rdi        # 46d831 <_fini+0x1032d>
  450387:	mov    $0xa,%ecx
  45038c:	mov    %rbp,%rsi
  45038f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  450391:	je     45042c <X509_get0_pubkey_bitstr@plt+0x39a5c>
  450397:	lea    0xde41(%rip),%rdi        # 45e1df <_fini+0xcdb>
  45039e:	mov    $0x9,%ecx
  4503a3:	mov    %rbp,%rsi
  4503a6:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4503a8:	jne    45056f <X509_get0_pubkey_bitstr@plt+0x39b9f>
  4503ae:	sub    $0x1,%ebx
  4503b1:	je     450180 <X509_get0_pubkey_bitstr@plt+0x397b0>
  4503b7:	mov    0x8(%r14),%rdi
  4503bb:	lea    0x8(%r14),%rbp
  4503bf:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  4503c4:	mov    %eax,0x34(%rsp)
  4503c8:	jmpq   44fe13 <X509_get0_pubkey_bitstr@plt+0x39443>
  4503cd:	nopl   (%rax)
  4503d0:	mov    0x225ba9(%rip),%rax        # 675f80 <_fini+0x218a7c>
  4503d7:	xor    %esi,%esi
  4503d9:	mov    (%rax),%rdi
  4503dc:	callq  4161e0 <BIO_new_fp@plt>
  4503e1:	mov    %rax,%rdi
  4503e4:	lea    0x22a955(%rip),%rax        # 67ad40 <_edata+0x38>
  4503eb:	mov    %rdi,(%rax)
  4503ee:	jmpq   44fcf8 <X509_get0_pubkey_bitstr@plt+0x39328>
  4503f3:	nopl   0x0(%rax,%rax,1)
  4503f8:	cmpq   $0x0,0x8(%rsp)
  4503fe:	jne    44fe86 <X509_get0_pubkey_bitstr@plt+0x394b6>
  450404:	lea    0x1d6ad(%rip),%rsi        # 46dab8 <_fini+0x105b4>
  45040b:	lea    0x22a92e(%rip),%rax        # 67ad40 <_edata+0x38>
  450412:	mov    $0x1,%ebp
  450417:	xor    %ebx,%ebx
  450419:	xor    %r13d,%r13d
  45041c:	xor    %r14d,%r14d
  45041f:	mov    (%rax),%rdi
  450422:	callq  413b70 <BIO_puts@plt>
  450427:	jmpq   45019b <X509_get0_pubkey_bitstr@plt+0x397cb>
  45042c:	sub    $0x1,%ebx
  45042f:	je     450180 <X509_get0_pubkey_bitstr@plt+0x397b0>
  450435:	mov    0x8(%r14),%rdi
  450439:	lea    0x8(%r14),%rbp
  45043d:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  450442:	mov    %eax,0x38(%rsp)
  450446:	jmpq   44fe13 <X509_get0_pubkey_bitstr@plt+0x39443>
  45044b:	cmp    $0x8,%eax
  45044e:	je     4505f9 <X509_get0_pubkey_bitstr@plt+0x39c29>
  450454:	cmp    $0x10,%eax
  450457:	jne    45036c <X509_get0_pubkey_bitstr@plt+0x3999c>
  45045d:	mov    %r12,%rdi
  450460:	callq  4130b0 <EVP_PKEY_verify_init@plt>
  450465:	nopl   (%rax)
  450468:	test   %eax,%eax
  45046a:	jg     45013b <X509_get0_pubkey_bitstr@plt+0x3976b>
  450470:	jmpq   45036c <X509_get0_pubkey_bitstr@plt+0x3999c>
  450475:	nopl   (%rax)
  450478:	test   %bl,%bl
  45047a:	lea    0x1d607(%rip),%rsi        # 46da88 <_fini+0x10584>
  450481:	je     44fe77 <X509_get0_pubkey_bitstr@plt+0x394a7>
  450487:	jmp    45040b <X509_get0_pubkey_bitstr@plt+0x39a3b>
  450489:	lea    0x22a8b0(%rip),%rax        # 67ad40 <_edata+0x38>
  450490:	mov    0x18(%rsp),%r8
  450495:	lea    0x1b669(%rip),%r9        # 46bb05 <_fini+0xe601>
  45049c:	mov    0x34(%rsp),%edx
  4504a0:	xor    %ecx,%ecx
  4504a2:	mov    %r12,%rsi
  4504a5:	mov    (%rax),%rdi
  4504a8:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  4504ad:	test   %rax,%rax
  4504b0:	mov    %rax,%r12
  4504b3:	je     45012d <X509_get0_pubkey_bitstr@plt+0x3975d>
  4504b9:	mov    %rax,%rdi
  4504bc:	callq  4161b0 <X509_get_pubkey@plt>
  4504c1:	mov    %r12,%rdi
  4504c4:	mov    %rax,%r14
  4504c7:	callq  4153a0 <X509_free@plt>
  4504cc:	jmpq   450300 <X509_get0_pubkey_bitstr@plt+0x39930>
  4504d1:	lea    0x12cb4(%rip),%rax        # 46318c <_fini+0x5c88>
  4504d8:	mov    0x18(%rsp),%r9
  4504dd:	mov    0x34(%rsp),%edx
  4504e1:	xor    %r8d,%r8d
  4504e4:	xor    %ecx,%ecx
  4504e6:	mov    %r12,%rsi
  4504e9:	mov    %rax,(%rsp)
  4504ed:	lea    0x22a84c(%rip),%rax        # 67ad40 <_edata+0x38>
  4504f4:	mov    (%rax),%rdi
  4504f7:	callq  446250 <X509_get0_pubkey_bitstr@plt+0x2f880>
  4504fc:	mov    %rax,%r14
  4504ff:	jmpq   450300 <X509_get0_pubkey_bitstr@plt+0x39930>
  450504:	mov    0x50(%rsp),%rcx
  450509:	mov    0x58(%rsp),%rsi
  45050e:	movslq %ebx,%rdx
  450511:	mov    %r15,%r8
  450514:	mov    %r12,%rdi
  450517:	callq  4151e0 <EVP_PKEY_verify@plt>
  45051c:	test   %eax,%eax
  45051e:	je     4508c2 <X509_get0_pubkey_bitstr@plt+0x39ef2>
  450524:	cmp    $0x1,%eax
  450527:	je     450971 <X509_get0_pubkey_bitstr@plt+0x39fa1>
  45052d:	xor    %ebx,%ebx
  45052f:	test   %eax,%eax
  450531:	mov    $0x1,%ebp
  450536:	jns    45019b <X509_get0_pubkey_bitstr@plt+0x397cb>
  45053c:	xor    %ebx,%ebx
  45053e:	lea    0x22a7fb(%rip),%rax        # 67ad40 <_edata+0x38>
  450545:	lea    0x1d382(%rip),%rsi        # 46d8ce <_fini+0x103ca>
  45054c:	mov    $0x1,%ebp
  450551:	mov    (%rax),%rdi
  450554:	xor    %eax,%eax
  450556:	callq  413c40 <BIO_printf@plt>
  45055b:	lea    0x22a7de(%rip),%rax        # 67ad40 <_edata+0x38>
  450562:	mov    (%rax),%rdi
  450565:	callq  413f40 <ERR_print_errors@plt>
  45056a:	jmpq   45019b <X509_get0_pubkey_bitstr@plt+0x397cb>
  45056f:	lea    0xd5ec(%rip),%rdi        # 45db62 <_fini+0x65e>
  450576:	mov    $0x8,%ecx
  45057b:	mov    %rbp,%rsi
  45057e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  450580:	jne    450639 <X509_get0_pubkey_bitstr@plt+0x39c69>
  450586:	sub    $0x1,%ebx
  450589:	je     450180 <X509_get0_pubkey_bitstr@plt+0x397b0>
  45058f:	lea    0x22a7aa(%rip),%rax        # 67ad40 <_edata+0x38>
  450596:	mov    0x8(%r14),%rsi
  45059a:	xor    %edx,%edx
  45059c:	lea    0x8(%r14),%rbp
  4505a0:	mov    (%rax),%rdi
  4505a3:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  4505a8:	mov    %rax,0x18(%rsp)
  4505ad:	jmpq   44fe13 <X509_get0_pubkey_bitstr@plt+0x39443>
  4505b2:	lea    0xf37b(%rip),%rsi        # 45f934 <_fini+0x2430>
  4505b9:	lea    0x22a780(%rip),%rax        # 67ad40 <_edata+0x38>
  4505c0:	xor    %r12d,%r12d
  4505c3:	mov    (%rax),%rdi
  4505c6:	xor    %eax,%eax
  4505c8:	callq  413c40 <BIO_printf@plt>
  4505cd:	jmpq   45013b <X509_get0_pubkey_bitstr@plt+0x3976b>
  4505d2:	mov    %r12,%rdi
  4505d5:	callq  416410 <EVP_PKEY_verify_recover_init@plt>
  4505da:	jmpq   450468 <X509_get0_pubkey_bitstr@plt+0x39a98>
  4505df:	mov    %r12,%rdi
  4505e2:	callq  4148a0 <EVP_PKEY_encrypt_init@plt>
  4505e7:	jmpq   450468 <X509_get0_pubkey_bitstr@plt+0x39a98>
  4505ec:	mov    %r12,%rdi
  4505ef:	callq  4140e0 <EVP_PKEY_derive_init@plt>
  4505f4:	jmpq   450468 <X509_get0_pubkey_bitstr@plt+0x39a98>
  4505f9:	mov    %r12,%rdi
  4505fc:	callq  4167e0 <EVP_PKEY_sign_init@plt>
  450601:	jmpq   450468 <X509_get0_pubkey_bitstr@plt+0x39a98>
  450606:	mov    %r12,%rdi
  450609:	callq  414340 <EVP_PKEY_decrypt_init@plt>
  45060e:	xchg   %ax,%ax
  450610:	jmpq   450468 <X509_get0_pubkey_bitstr@plt+0x39a98>
  450615:	xor    %r14d,%r14d
  450618:	jmpq   44fecb <X509_get0_pubkey_bitstr@plt+0x394fb>
  45061d:	mov    $0xffffffff,%ebx
  450622:	jmpq   44ff3c <X509_get0_pubkey_bitstr@plt+0x3956c>
  450627:	xor    %r15d,%r15d
  45062a:	jmpq   44ffb6 <X509_get0_pubkey_bitstr@plt+0x395e6>
  45062f:	callq  44fae0 <X509_get0_pubkey_bitstr@plt+0x39110>
  450634:	jmpq   44fd03 <X509_get0_pubkey_bitstr@plt+0x39333>
  450639:	lea    0x12afa(%rip),%rdi        # 46313a <_fini+0x5c36>
  450640:	mov    $0x7,%ecx
  450645:	mov    %rbp,%rsi
  450648:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45064a:	je     450865 <X509_get0_pubkey_bitstr@plt+0x39e95>
  450650:	lea    0x12fa2(%rip),%rdi        # 4635f9 <_fini+0x60f5>
  450657:	mov    $0x8,%ecx
  45065c:	mov    %rbp,%rsi
  45065f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  450661:	je     450910 <X509_get0_pubkey_bitstr@plt+0x39f40>
  450667:	lea    0x12f93(%rip),%rdi        # 463601 <_fini+0x60fd>
  45066e:	mov    $0xb,%ecx
  450673:	mov    %rbp,%rsi
  450676:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  450678:	je     450954 <X509_get0_pubkey_bitstr@plt+0x39f84>
  45067e:	lea    0x12f87(%rip),%rdi        # 46360c <_fini+0x6108>
  450685:	mov    $0x9,%ecx
  45068a:	mov    %rbp,%rsi
  45068d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45068f:	je     45098c <X509_get0_pubkey_bitstr@plt+0x39fbc>
  450695:	lea    0xf226(%rip),%rsi        # 45f8c2 <_fini+0x23be>
  45069c:	mov    %rbp,%rdi
  45069f:	callq  4155c0 <strcmp@plt>
  4506a4:	test   %eax,%eax
  4506a6:	je     4509a9 <X509_get0_pubkey_bitstr@plt+0x39fd9>
  4506ac:	lea    0xdb85(%rip),%rsi        # 45e238 <_fini+0xd34>
  4506b3:	mov    %rbp,%rdi
  4506b6:	callq  4155c0 <strcmp@plt>
  4506bb:	test   %eax,%eax
  4506bd:	je     450999 <X509_get0_pubkey_bitstr@plt+0x39fc9>
  4506c3:	lea    0x1d171(%rip),%rsi        # 46d83b <_fini+0x10337>
  4506ca:	mov    %rbp,%rdi
  4506cd:	callq  4155c0 <strcmp@plt>
  4506d2:	test   %eax,%eax
  4506d4:	je     4509f0 <X509_get0_pubkey_bitstr@plt+0x3a020>
  4506da:	lea    0x12f50(%rip),%rsi        # 463631 <_fini+0x612d>
  4506e1:	mov    %rbp,%rdi
  4506e4:	callq  4155c0 <strcmp@plt>
  4506e9:	test   %eax,%eax
  4506eb:	je     4509e3 <X509_get0_pubkey_bitstr@plt+0x3a013>
  4506f1:	lea    0x12f3e(%rip),%rsi        # 463636 <_fini+0x6132>
  4506f8:	mov    %rbp,%rdi
  4506fb:	callq  4155c0 <strcmp@plt>
  450700:	test   %eax,%eax
  450702:	je     450a3b <X509_get0_pubkey_bitstr@plt+0x3a06b>
  450708:	lea    0x12f30(%rip),%rsi        # 46363f <_fini+0x613b>
  45070f:	mov    %rbp,%rdi
  450712:	callq  4155c0 <strcmp@plt>
  450717:	test   %eax,%eax
  450719:	je     450a2b <X509_get0_pubkey_bitstr@plt+0x3a05b>
  45071f:	lea    0x1d124(%rip),%rsi        # 46d84a <_fini+0x10346>
  450726:	mov    %rbp,%rdi
  450729:	callq  4155c0 <strcmp@plt>
  45072e:	test   %eax,%eax
  450730:	je     450a1b <X509_get0_pubkey_bitstr@plt+0x3a04b>
  450736:	lea    0xdad2(%rip),%rsi        # 45e20f <_fini+0xd0b>
  45073d:	mov    %rbp,%rdi
  450740:	callq  4155c0 <strcmp@plt>
  450745:	test   %eax,%eax
  450747:	jne    450180 <X509_get0_pubkey_bitstr@plt+0x397b0>
  45074d:	sub    $0x1,%ebx
  450750:	je     450180 <X509_get0_pubkey_bitstr@plt+0x397b0>
  450756:	test   %r12,%r12
  450759:	je     450a00 <X509_get0_pubkey_bitstr@plt+0x3a030>
  45075f:	mov    0x8(%r14),%rsi
  450763:	mov    %r12,%rdi
  450766:	lea    0x8(%r14),%rbp
  45076a:	callq  448760 <X509_get0_pubkey_bitstr@plt+0x31d90>
  45076f:	test   %eax,%eax
  450771:	jg     44fe13 <X509_get0_pubkey_bitstr@plt+0x39443>
  450777:	lea    0x22a5c2(%rip),%rax        # 67ad40 <_edata+0x38>
  45077e:	lea    0x15b80(%rip),%rsi        # 466305 <_fini+0x8e01>
  450785:	mov    $0x1,%ebp
  45078a:	xor    %ebx,%ebx
  45078c:	xor    %r13d,%r13d
  45078f:	xor    %r14d,%r14d
  450792:	mov    (%rax),%rdi
  450795:	callq  413b70 <BIO_puts@plt>
  45079a:	lea    0x22a59f(%rip),%rax        # 67ad40 <_edata+0x38>
  4507a1:	mov    (%rax),%rdi
  4507a4:	callq  413f40 <ERR_print_errors@plt>
  4507a9:	jmpq   45019b <X509_get0_pubkey_bitstr@plt+0x397cb>
  4507ae:	xchg   %ax,%ax
  4507b0:	callq  412db0 <BIO_write@plt>
  4507b5:	xor    %ebp,%ebp
  4507b7:	jmpq   45019b <X509_get0_pubkey_bitstr@plt+0x397cb>
  4507bc:	lea    0x1d285(%rip),%rsi        # 46da48 <_fini+0x10544>
  4507c3:	mov    %r14,%rdi
  4507c6:	callq  413b70 <BIO_puts@plt>
  4507cb:	jmpq   450180 <X509_get0_pubkey_bitstr@plt+0x397b0>
  4507d0:	mov    0x60(%rsp),%rdx
  4507d5:	mov    $0xffffffff,%r8d
  4507db:	mov    $0x1,%ecx
  4507e0:	mov    %rbx,%rsi
  4507e3:	mov    %r13,%rdi
  4507e6:	xor    %ebp,%ebp
  4507e8:	callq  413760 <ASN1_parse_dump@plt>
  4507ed:	test   %eax,%eax
  4507ef:	jne    45019b <X509_get0_pubkey_bitstr@plt+0x397cb>
  4507f5:	lea    0x22a544(%rip),%rax        # 67ad40 <_edata+0x38>
  4507fc:	mov    (%rax),%rdi
  4507ff:	callq  413f40 <ERR_print_errors@plt>
  450804:	jmpq   45019b <X509_get0_pubkey_bitstr@plt+0x397cb>
  450809:	lea    0x22a530(%rip),%rax        # 67ad40 <_edata+0x38>
  450810:	mov    0x40(%rsp),%rdx
  450815:	lea    0x1cffa(%rip),%rsi        # 46d816 <_fini+0x10312>
  45081c:	mov    (%rax),%rdi
  45081f:	xor    %eax,%eax
  450821:	callq  413c40 <BIO_printf@plt>
  450826:	mov    %r14,%rdi
  450829:	callq  413f40 <ERR_print_errors@plt>
  45082e:	jmpq   450180 <X509_get0_pubkey_bitstr@plt+0x397b0>
  450833:	mov    0x22567e(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  45083a:	xor    %esi,%esi
  45083c:	mov    (%rax),%rdi
  45083f:	callq  4161e0 <BIO_new_fp@plt>
  450844:	mov    %rax,%r13
  450847:	jmpq   44feef <X509_get0_pubkey_bitstr@plt+0x3951f>
  45084c:	mov    0x2256bd(%rip),%rax        # 675f10 <_fini+0x218a0c>
  450853:	xor    %esi,%esi
  450855:	mov    (%rax),%rdi
  450858:	callq  4161e0 <BIO_new_fp@plt>
  45085d:	mov    %rax,%r14
  450860:	jmpq   44fecb <X509_get0_pubkey_bitstr@plt+0x394fb>
  450865:	mov    %r14,%rbp
  450868:	movl   $0x2,0x14(%rsp)
  450870:	jmpq   44fe13 <X509_get0_pubkey_bitstr@plt+0x39443>
  450875:	lea    0x22a4c4(%rip),%rax        # 67ad40 <_edata+0x38>
  45087c:	mov    0x8(%rsp),%rdx
  450881:	lea    0x1d000(%rip),%rsi        # 46d888 <_fini+0x10384>
  450888:	mov    $0x1,%ebp
  45088d:	xor    %ebx,%ebx
  45088f:	mov    (%rax),%rdi
  450892:	xor    %eax,%eax
  450894:	callq  413c40 <BIO_printf@plt>
  450899:	jmpq   45019b <X509_get0_pubkey_bitstr@plt+0x397cb>
  45089e:	lea    0x22a49b(%rip),%rax        # 67ad40 <_edata+0x38>
  4508a5:	lea    0x1cffa(%rip),%rsi        # 46d8a6 <_fini+0x103a2>
  4508ac:	mov    $0x1,%ebp
  4508b1:	xor    %ebx,%ebx
  4508b3:	mov    (%rax),%rdi
  4508b6:	xor    %eax,%eax
  4508b8:	callq  413c40 <BIO_printf@plt>
  4508bd:	jmpq   45019b <X509_get0_pubkey_bitstr@plt+0x397cb>
  4508c2:	lea    0x1d217(%rip),%rsi        # 46dae0 <_fini+0x105dc>
  4508c9:	mov    %r13,%rdi
  4508cc:	mov    $0x1,%ebp
  4508d1:	xor    %ebx,%ebx
  4508d3:	callq  413b70 <BIO_puts@plt>
  4508d8:	jmpq   45019b <X509_get0_pubkey_bitstr@plt+0x397cb>
  4508dd:	lea    0x22a45c(%rip),%rax        # 67ad40 <_edata+0x38>
  4508e4:	lea    0x1cf81(%rip),%rsi        # 46d86c <_fini+0x10368>
  4508eb:	mov    $0x1,%ebp
  4508f0:	xor    %ebx,%ebx
  4508f2:	mov    (%rax),%rdi
  4508f5:	xor    %eax,%eax
  4508f7:	callq  413c40 <BIO_printf@plt>
  4508fc:	lea    0x22a43d(%rip),%rax        # 67ad40 <_edata+0x38>
  450903:	mov    (%rax),%rdi
  450906:	callq  413f40 <ERR_print_errors@plt>
  45090b:	jmpq   45019b <X509_get0_pubkey_bitstr@plt+0x397cb>
  450910:	mov    %r14,%rbp
  450913:	movl   $0x3,0x14(%rsp)
  45091b:	jmpq   44fe13 <X509_get0_pubkey_bitstr@plt+0x39443>
  450920:	lea    0x22a419(%rip),%rax        # 67ad40 <_edata+0x38>
  450927:	lea    0x1cf24(%rip),%rsi        # 46d852 <_fini+0x1034e>
  45092e:	mov    $0x1,%ebp
  450933:	xor    %ebx,%ebx
  450935:	xor    %r13d,%r13d
  450938:	mov    (%rax),%rdi
  45093b:	callq  413b70 <BIO_puts@plt>
  450940:	lea    0x22a3f9(%rip),%rax        # 67ad40 <_edata+0x38>
  450947:	mov    (%rax),%rdi
  45094a:	callq  413f40 <ERR_print_errors@plt>
  45094f:	jmpq   45019b <X509_get0_pubkey_bitstr@plt+0x397cb>
  450954:	mov    %r14,%rbp
  450957:	movb   $0x1,0x3e(%rsp)
  45095c:	jmpq   44fe13 <X509_get0_pubkey_bitstr@plt+0x39443>
  450961:	mov    $0x1,%r15d
  450967:	jmpq   44ffb6 <X509_get0_pubkey_bitstr@plt+0x395e6>
  45096c:	callq  414c30 <__stack_chk_fail@plt>
  450971:	lea    0x1d188(%rip),%rsi        # 46db00 <_fini+0x105fc>
  450978:	mov    %r13,%rdi
  45097b:	mov    $0x1,%ebp
  450980:	xor    %ebx,%ebx
  450982:	callq  413b70 <BIO_puts@plt>
  450987:	jmpq   45019b <X509_get0_pubkey_bitstr@plt+0x397cb>
  45098c:	mov    %r14,%rbp
  45098f:	movb   $0x1,0x3f(%rsp)
  450994:	jmpq   44fe13 <X509_get0_pubkey_bitstr@plt+0x39443>
  450999:	mov    %r14,%rbp
  45099c:	movl   $0x10,0x10(%rsp)
  4509a4:	jmpq   44fe13 <X509_get0_pubkey_bitstr@plt+0x39443>
  4509a9:	mov    %r14,%rbp
  4509ac:	movl   $0x8,0x10(%rsp)
  4509b4:	jmpq   44fe13 <X509_get0_pubkey_bitstr@plt+0x39443>
  4509b9:	lea    0x22a380(%rip),%rax        # 67ad40 <_edata+0x38>
  4509c0:	lea    0x12d43(%rip),%rsi        # 46370a <_fini+0x6206>
  4509c7:	mov    (%rax),%rdi
  4509ca:	xor    %eax,%eax
  4509cc:	callq  413c40 <BIO_printf@plt>
  4509d1:	mov    $0x1,%edi
  4509d6:	callq  414fb0 <exit@plt>
  4509db:	xor    %r12d,%r12d
  4509de:	jmpq   45013b <X509_get0_pubkey_bitstr@plt+0x3976b>
  4509e3:	mov    %r14,%rbp
  4509e6:	movb   $0x1,0x3d(%rsp)
  4509eb:	jmpq   44fe13 <X509_get0_pubkey_bitstr@plt+0x39443>
  4509f0:	mov    %r14,%rbp
  4509f3:	movl   $0x20,0x10(%rsp)
  4509fb:	jmpq   44fe13 <X509_get0_pubkey_bitstr@plt+0x39443>
  450a00:	lea    0x22a339(%rip),%rax        # 67ad40 <_edata+0x38>
  450a07:	lea    0x1d05a(%rip),%rsi        # 46da68 <_fini+0x10564>
  450a0e:	mov    (%rax),%rdi
  450a11:	callq  413b70 <BIO_puts@plt>
  450a16:	jmpq   450180 <X509_get0_pubkey_bitstr@plt+0x397b0>
  450a1b:	mov    %r14,%rbp
  450a1e:	movl   $0x400,0x10(%rsp)
  450a26:	jmpq   44fe13 <X509_get0_pubkey_bitstr@plt+0x39443>
  450a2b:	mov    %r14,%rbp
  450a2e:	movl   $0x200,0x10(%rsp)
  450a36:	jmpq   44fe13 <X509_get0_pubkey_bitstr@plt+0x39443>
  450a3b:	mov    %r14,%rbp
  450a3e:	movl   $0x100,0x10(%rsp)
  450a46:	jmpq   44fe13 <X509_get0_pubkey_bitstr@plt+0x39443>
  450a4b:	nopl   0x0(%rax,%rax,1)
  450a50:	push   %r15
  450a52:	push   %r14
  450a54:	push   %r13
  450a56:	push   %r12
  450a58:	mov    %edi,%r12d
  450a5b:	mov    $0xd,%edi
  450a60:	push   %rbp
  450a61:	mov    %rsi,%rbp
  450a64:	mov    $0x1,%esi
  450a69:	push   %rbx
  450a6a:	sub    $0x48,%rsp
  450a6e:	mov    %fs:0x28,%rax
  450a77:	mov    %rax,0x38(%rsp)
  450a7c:	xor    %eax,%eax
  450a7e:	movq   $0x0,0x30(%rsp)
  450a87:	callq  414ee0 <signal@plt>
  450a8c:	lea    0x22a2ad(%rip),%rbx        # 67ad40 <_edata+0x38>
  450a93:	mov    (%rbx),%rdi
  450a96:	test   %rdi,%rdi
  450a99:	je     450f13 <X509_get0_pubkey_bitstr@plt+0x3a543>
  450a9f:	xor    %esi,%esi
  450aa1:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  450aa6:	test   %eax,%eax
  450aa8:	je     450daf <X509_get0_pubkey_bitstr@plt+0x3a3df>
  450aae:	lea    -0x1(%r12),%eax
  450ab3:	xor    %r13d,%r13d
  450ab6:	xor    %r15d,%r15d
  450ab9:	mov    0x0(%rbp),%rdx
  450abd:	lea    0x8(%rbp),%r8
  450ac1:	movq   $0x0,0x18(%rsp)
  450aca:	test   %eax,%eax
  450acc:	jle    450f50 <X509_get0_pubkey_bitstr@plt+0x3a580>
  450ad2:	lea    0x1a51d(%rip),%rcx        # 46aff6 <_fini+0xdaf2>
  450ad9:	xor    %r14d,%r14d
  450adc:	xor    %r12d,%r12d
  450adf:	xor    %ebp,%ebp
  450ae1:	movl   $0x0,0x2c(%rsp)
  450ae9:	movl   $0x0,0x28(%rsp)
  450af1:	mov    %rcx,0x10(%rsp)
  450af6:	lea    0x107d7(%rip),%rcx        # 4612d4 <_fini+0x3dd0>
  450afd:	movl   $0x0,0x24(%rsp)
  450b05:	movl   $0x0,0x20(%rsp)
  450b0d:	mov    $0x5,%r10d
  450b13:	mov    $0x8,%r11d
  450b19:	mov    %rcx,0x8(%rsp)
  450b1e:	mov    %rdx,%r9
  450b21:	jmp    450b56 <X509_get0_pubkey_bitstr@plt+0x3a186>
  450b23:	nopl   0x0(%rax,%rax,1)
  450b28:	cmpb   $0x69,0x1(%rdx)
  450b2c:	jne    450b5e <X509_get0_pubkey_bitstr@plt+0x3a18e>
  450b2e:	cmpb   $0x6e,0x2(%rdx)
  450b32:	jne    450b5e <X509_get0_pubkey_bitstr@plt+0x3a18e>
  450b34:	cmpb   $0x0,0x3(%rdx)
  450b38:	jne    450b5e <X509_get0_pubkey_bitstr@plt+0x3a18e>
  450b3a:	sub    $0x1,%eax
  450b3d:	je     450ce0 <X509_get0_pubkey_bitstr@plt+0x3a310>
  450b43:	mov    0x8(%r8),%rbp
  450b47:	lea    0x8(%r8),%rdx
  450b4b:	sub    $0x1,%eax
  450b4e:	lea    0x8(%rdx),%r8
  450b52:	test   %eax,%eax
  450b54:	jle    450b8f <X509_get0_pubkey_bitstr@plt+0x3a1bf>
  450b56:	mov    (%r8),%rdx
  450b59:	cmpb   $0x2d,(%rdx)
  450b5c:	je     450b28 <X509_get0_pubkey_bitstr@plt+0x3a158>
  450b5e:	lea    0xd2e1(%rip),%rdi        # 45de46 <_fini+0x942>
  450b65:	mov    %rdx,%rsi
  450b68:	mov    %r10,%rcx
  450b6b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  450b6d:	jne    450e20 <X509_get0_pubkey_bitstr@plt+0x3a450>
  450b73:	sub    $0x1,%eax
  450b76:	je     450ce0 <X509_get0_pubkey_bitstr@plt+0x3a310>
  450b7c:	lea    0x8(%r8),%rdx
  450b80:	sub    $0x1,%eax
  450b83:	mov    0x8(%r8),%r12
  450b87:	test   %eax,%eax
  450b89:	lea    0x8(%rdx),%r8
  450b8d:	jg     450b56 <X509_get0_pubkey_bitstr@plt+0x3a186>
  450b8f:	mov    0x20(%rsp),%esi
  450b93:	mov    %r9,%rdx
  450b96:	test   %esi,%esi
  450b98:	jne    450ce3 <X509_get0_pubkey_bitstr@plt+0x3a313>
  450b9e:	callq  416990 <ERR_load_crypto_strings@plt>
  450ba3:	mov    (%rbx),%rdi
  450ba6:	lea    0x30(%rsp),%rcx
  450bab:	xor    %r8d,%r8d
  450bae:	xor    %edx,%edx
  450bb0:	mov    %r14,%rsi
  450bb3:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  450bb8:	test   %eax,%eax
  450bba:	je     450f41 <X509_get0_pubkey_bitstr@plt+0x3a571>
  450bc0:	mov    0x18(%rsp),%rsi
  450bc5:	mov    (%rbx),%rdi
  450bc8:	xor    %edx,%edx
  450bca:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  450bcf:	test   %r13,%r13
  450bd2:	mov    %rax,%r9
  450bd5:	je     45100e <X509_get0_pubkey_bitstr@plt+0x3a63e>
  450bdb:	cmpb   $0x2d,0x0(%r13)
  450be0:	mov    0x30(%rsp),%r8
  450be5:	mov    %r13,%rsi
  450be8:	jne    450bf8 <X509_get0_pubkey_bitstr@plt+0x3a228>
  450bea:	cmpb   $0x0,0x1(%r13)
  450bef:	mov    $0x0,%eax
  450bf4:	cmove  %rax,%rsi
  450bf8:	lea    0x10564(%rip),%rax        # 461163 <_fini+0x3c5f>
  450bff:	mov    $0x1,%ecx
  450c04:	mov    $0x3,%edx
  450c09:	mov    %rax,(%rsp)
  450c0d:	mov    (%rbx),%rdi
  450c10:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  450c15:	test   %rax,%rax
  450c18:	mov    %rax,%rbp
  450c1b:	je     450daf <X509_get0_pubkey_bitstr@plt+0x3a3df>
  450c21:	callq  415bb0 <NETSCAPE_SPKI_new@plt>
  450c26:	test   %r15,%r15
  450c29:	mov    %rax,%r14
  450c2c:	je     450c47 <X509_get0_pubkey_bitstr@plt+0x3a277>
  450c2e:	mov    %r15,%rdi
  450c31:	callq  413470 <strlen@plt>
  450c36:	mov    (%r14),%rdx
  450c39:	mov    %r15,%rsi
  450c3c:	mov    0x8(%rdx),%rdi
  450c40:	mov    %eax,%edx
  450c42:	callq  416600 <ASN1_STRING_set@plt>
  450c47:	mov    %rbp,%rsi
  450c4a:	mov    %r14,%rdi
  450c4d:	callq  4157a0 <NETSCAPE_SPKI_set_pubkey@plt>
  450c52:	callq  412f50 <EVP_md5@plt>
  450c57:	mov    %rbp,%rsi
  450c5a:	mov    %rax,%rdx
  450c5d:	mov    %r14,%rdi
  450c60:	callq  413190 <NETSCAPE_SPKI_sign@plt>
  450c65:	mov    %r14,%rdi
  450c68:	callq  415680 <NETSCAPE_SPKI_b64_encode@plt>
  450c6d:	test   %r12,%r12
  450c70:	mov    %rax,%r13
  450c73:	je     45109f <X509_get0_pubkey_bitstr@plt+0x3a6cf>
  450c79:	lea    0x12998(%rip),%rsi        # 463618 <_fini+0x6114>
  450c80:	mov    %r12,%rdi
  450c83:	callq  412ba0 <BIO_new_file@plt>
  450c88:	mov    %rax,%r12
  450c8b:	test   %r12,%r12
  450c8e:	je     451076 <X509_get0_pubkey_bitstr@plt+0x3a6a6>
  450c94:	lea    0x1cec3(%rip),%rsi        # 46db5e <_fini+0x1065a>
  450c9b:	mov    %r13,%rdx
  450c9e:	mov    %r12,%rdi
  450ca1:	xor    %eax,%eax
  450ca3:	xor    %r15d,%r15d
  450ca6:	xor    %ebx,%ebx
  450ca8:	callq  413c40 <BIO_printf@plt>
  450cad:	mov    %r13,%rdi
  450cb0:	xor    %r13d,%r13d
  450cb3:	callq  415020 <CRYPTO_free@plt>
  450cb8:	jmpq   450dc2 <X509_get0_pubkey_bitstr@plt+0x3a3f2>
  450cbd:	lea    0xce9e(%rip),%rdi        # 45db62 <_fini+0x65e>
  450cc4:	mov    %rdx,%rsi
  450cc7:	mov    %r11,%rcx
  450cca:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  450ccc:	jne    450f8d <X509_get0_pubkey_bitstr@plt+0x3a5bd>
  450cd2:	sub    $0x1,%eax
  450cd5:	jne    450f2f <X509_get0_pubkey_bitstr@plt+0x3a55f>
  450cdb:	nopl   0x0(%rax,%rax,1)
  450ce0:	mov    %r9,%rdx
  450ce3:	mov    (%rbx),%rdi
  450ce6:	lea    0x1ce48(%rip),%rsi        # 46db35 <_fini+0x10631>
  450ced:	xor    %eax,%eax
  450cef:	callq  413c40 <BIO_printf@plt>
  450cf4:	mov    (%rbx),%rdi
  450cf7:	lea    0xd057(%rip),%rsi        # 45dd55 <_fini+0x851>
  450cfe:	xor    %eax,%eax
  450d00:	callq  413c40 <BIO_printf@plt>
  450d05:	mov    (%rbx),%rdi
  450d08:	lea    0xd5c5(%rip),%rsi        # 45e2d4 <_fini+0xdd0>
  450d0f:	xor    %eax,%eax
  450d11:	callq  413c40 <BIO_printf@plt>
  450d16:	mov    (%rbx),%rdi
  450d19:	lea    0xd5d0(%rip),%rsi        # 45e2f0 <_fini+0xdec>
  450d20:	xor    %eax,%eax
  450d22:	callq  413c40 <BIO_printf@plt>
  450d27:	mov    (%rbx),%rdi
  450d2a:	lea    0x1cec7(%rip),%rsi        # 46dbf8 <_fini+0x106f4>
  450d31:	xor    %eax,%eax
  450d33:	callq  413c40 <BIO_printf@plt>
  450d38:	mov    (%rbx),%rdi
  450d3b:	lea    0x1cee6(%rip),%rsi        # 46dc28 <_fini+0x10724>
  450d42:	xor    %eax,%eax
  450d44:	callq  413c40 <BIO_printf@plt>
  450d49:	mov    (%rbx),%rdi
  450d4c:	lea    0x1cf05(%rip),%rsi        # 46dc58 <_fini+0x10754>
  450d53:	xor    %eax,%eax
  450d55:	callq  413c40 <BIO_printf@plt>
  450d5a:	mov    (%rbx),%rdi
  450d5d:	lea    0x1cf1c(%rip),%rsi        # 46dc80 <_fini+0x1077c>
  450d64:	xor    %eax,%eax
  450d66:	callq  413c40 <BIO_printf@plt>
  450d6b:	mov    (%rbx),%rdi
  450d6e:	lea    0x1cf33(%rip),%rsi        # 46dca8 <_fini+0x107a4>
  450d75:	xor    %eax,%eax
  450d77:	callq  413c40 <BIO_printf@plt>
  450d7c:	mov    (%rbx),%rdi
  450d7f:	lea    0xda5a(%rip),%rsi        # 45e7e0 <_fini+0x12dc>
  450d86:	xor    %eax,%eax
  450d88:	callq  413c40 <BIO_printf@plt>
  450d8d:	mov    (%rbx),%rdi
  450d90:	lea    0x1cf39(%rip),%rsi        # 46dcd0 <_fini+0x107cc>
  450d97:	xor    %eax,%eax
  450d99:	callq  413c40 <BIO_printf@plt>
  450d9e:	mov    (%rbx),%rdi
  450da1:	lea    0x1cf50(%rip),%rsi        # 46dcf8 <_fini+0x107f4>
  450da8:	xor    %eax,%eax
  450daa:	callq  413c40 <BIO_printf@plt>
  450daf:	xor    %ebp,%ebp
  450db1:	xor    %r14d,%r14d
  450db4:	xor    %r15d,%r15d
  450db7:	xor    %r12d,%r12d
  450dba:	xor    %r13d,%r13d
  450dbd:	mov    $0x1,%ebx
  450dc2:	mov    %r15,%rdi
  450dc5:	callq  4137f0 <NCONF_free@plt>
  450dca:	mov    %r14,%rdi
  450dcd:	callq  414670 <NETSCAPE_SPKI_free@plt>
  450dd2:	mov    %r13,%rdi
  450dd5:	callq  413960 <BIO_free@plt>
  450dda:	mov    %r12,%rdi
  450ddd:	callq  416570 <BIO_free_all@plt>
  450de2:	mov    %rbp,%rdi
  450de5:	callq  412b00 <EVP_PKEY_free@plt>
  450dea:	mov    0x30(%rsp),%rdi
  450def:	test   %rdi,%rdi
  450df2:	je     450df9 <X509_get0_pubkey_bitstr@plt+0x3a429>
  450df4:	callq  415020 <CRYPTO_free@plt>
  450df9:	mov    %ebx,%eax
  450dfb:	mov    0x38(%rsp),%rbx
  450e00:	xor    %fs:0x28,%rbx
  450e09:	jne    451158 <X509_get0_pubkey_bitstr@plt+0x3a788>
  450e0f:	add    $0x48,%rsp
  450e13:	pop    %rbx
  450e14:	pop    %rbp
  450e15:	pop    %r12
  450e17:	pop    %r13
  450e19:	pop    %r14
  450e1b:	pop    %r15
  450e1d:	retq   
  450e1e:	xchg   %ax,%ax
  450e20:	lea    0xd3c9(%rip),%rdi        # 45e1f0 <_fini+0xcec>
  450e27:	mov    %rdx,%rsi
  450e2a:	mov    %r11,%rcx
  450e2d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  450e2f:	jne    450e50 <X509_get0_pubkey_bitstr@plt+0x3a480>
  450e31:	sub    $0x1,%eax
  450e34:	je     450ce0 <X509_get0_pubkey_bitstr@plt+0x3a310>
  450e3a:	lea    0x8(%r8),%rdx
  450e3e:	mov    0x8(%r8),%r14
  450e42:	jmpq   450b4b <X509_get0_pubkey_bitstr@plt+0x3a17b>
  450e47:	nopw   0x0(%rax,%rax,1)
  450e50:	lea    0xd36e(%rip),%rdi        # 45e1c5 <_fini+0xcc1>
  450e57:	mov    %rdx,%rsi
  450e5a:	mov    %r10,%rcx
  450e5d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  450e5f:	jne    450e80 <X509_get0_pubkey_bitstr@plt+0x3a4b0>
  450e61:	sub    $0x1,%eax
  450e64:	je     450ce0 <X509_get0_pubkey_bitstr@plt+0x3a310>
  450e6a:	lea    0x8(%r8),%rdx
  450e6e:	mov    0x8(%r8),%r13
  450e72:	jmpq   450b4b <X509_get0_pubkey_bitstr@plt+0x3a17b>
  450e77:	nopw   0x0(%rax,%rax,1)
  450e80:	lea    0x1cc9a(%rip),%rdi        # 46db21 <_fini+0x1061d>
  450e87:	mov    %rdx,%rsi
  450e8a:	mov    $0xb,%ecx
  450e8f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  450e91:	jne    450eb0 <X509_get0_pubkey_bitstr@plt+0x3a4e0>
  450e93:	sub    $0x1,%eax
  450e96:	je     450ce0 <X509_get0_pubkey_bitstr@plt+0x3a310>
  450e9c:	lea    0x8(%r8),%rdx
  450ea0:	mov    0x8(%r8),%r15
  450ea4:	jmpq   450b4b <X509_get0_pubkey_bitstr@plt+0x3a17b>
  450ea9:	nopl   0x0(%rax)
  450eb0:	lea    0x10162(%rip),%rdi        # 461019 <_fini+0x3b15>
  450eb7:	mov    %rdx,%rsi
  450eba:	mov    $0x7,%ecx
  450ebf:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  450ec1:	je     450ef8 <X509_get0_pubkey_bitstr@plt+0x3a528>
  450ec3:	lea    0x1cc62(%rip),%rdi        # 46db2c <_fini+0x10628>
  450eca:	mov    %rdx,%rsi
  450ecd:	mov    $0x9,%ecx
  450ed2:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  450ed4:	jne    450cbd <X509_get0_pubkey_bitstr@plt+0x3a2ed>
  450eda:	sub    $0x1,%eax
  450edd:	je     450ce0 <X509_get0_pubkey_bitstr@plt+0x3a310>
  450ee3:	mov    0x8(%r8),%rcx
  450ee7:	lea    0x8(%r8),%rdx
  450eeb:	mov    %rcx,0x10(%rsp)
  450ef0:	jmpq   450b4b <X509_get0_pubkey_bitstr@plt+0x3a17b>
  450ef5:	nopl   (%rax)
  450ef8:	sub    $0x1,%eax
  450efb:	je     450ce0 <X509_get0_pubkey_bitstr@plt+0x3a310>
  450f01:	mov    0x8(%r8),%rcx
  450f05:	lea    0x8(%r8),%rdx
  450f09:	mov    %rcx,0x8(%rsp)
  450f0e:	jmpq   450b4b <X509_get0_pubkey_bitstr@plt+0x3a17b>
  450f13:	mov    0x225066(%rip),%rax        # 675f80 <_fini+0x218a7c>
  450f1a:	xor    %esi,%esi
  450f1c:	mov    (%rax),%rdi
  450f1f:	callq  4161e0 <BIO_new_fp@plt>
  450f24:	mov    %rax,%rdi
  450f27:	mov    %rax,(%rbx)
  450f2a:	jmpq   450a9f <X509_get0_pubkey_bitstr@plt+0x3a0cf>
  450f2f:	mov    0x8(%r8),%rcx
  450f33:	lea    0x8(%r8),%rdx
  450f37:	mov    %rcx,0x18(%rsp)
  450f3c:	jmpq   450b4b <X509_get0_pubkey_bitstr@plt+0x3a17b>
  450f41:	lea    0xe9ec(%rip),%rsi        # 45f934 <_fini+0x2430>
  450f48:	mov    (%rbx),%rdi
  450f4b:	jmpq   450daa <X509_get0_pubkey_bitstr@plt+0x3a3da>
  450f50:	lea    0x1a09f(%rip),%rax        # 46aff6 <_fini+0xdaf2>
  450f57:	xor    %r14d,%r14d
  450f5a:	xor    %r12d,%r12d
  450f5d:	xor    %ebp,%ebp
  450f5f:	movl   $0x0,0x2c(%rsp)
  450f67:	movl   $0x0,0x28(%rsp)
  450f6f:	mov    %rax,0x10(%rsp)
  450f74:	lea    0x10359(%rip),%rax        # 4612d4 <_fini+0x3dd0>
  450f7b:	movl   $0x0,0x24(%rsp)
  450f83:	mov    %rax,0x8(%rsp)
  450f88:	jmpq   450b9e <X509_get0_pubkey_bitstr@plt+0x3a1ce>
  450f8d:	lea    0xcd53(%rip),%rdi        # 45dce7 <_fini+0x7e3>
  450f94:	mov    %rdx,%rsi
  450f97:	mov    $0x7,%ecx
  450f9c:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  450f9e:	je     450fee <X509_get0_pubkey_bitstr@plt+0x3a61e>
  450fa0:	lea    0xd223(%rip),%rdi        # 45e1ca <_fini+0xcc6>
  450fa7:	mov    %rdx,%rsi
  450faa:	mov    %r11,%rcx
  450fad:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  450faf:	je     450ffe <X509_get0_pubkey_bitstr@plt+0x3a62e>
  450fb1:	lea    0xd280(%rip),%rdi        # 45e238 <_fini+0xd34>
  450fb8:	mov    %rdx,%rsi
  450fbb:	mov    %r11,%rcx
  450fbe:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  450fc0:	mov    0x24(%rsp),%edi
  450fc4:	mov    $0x1,%esi
  450fc9:	setb   %dl
  450fcc:	seta   %cl
  450fcf:	sub    %edx,%ecx
  450fd1:	mov    %r8,%rdx
  450fd4:	movsbl %cl,%ecx
  450fd7:	test   %ecx,%ecx
  450fd9:	cmove  %esi,%edi
  450fdc:	cmove  0x20(%rsp),%esi
  450fe1:	mov    %edi,0x24(%rsp)
  450fe5:	mov    %esi,0x20(%rsp)
  450fe9:	jmpq   450b4b <X509_get0_pubkey_bitstr@plt+0x3a17b>
  450fee:	mov    %r8,%rdx
  450ff1:	movl   $0x1,0x28(%rsp)
  450ff9:	jmpq   450b4b <X509_get0_pubkey_bitstr@plt+0x3a17b>
  450ffe:	mov    %r8,%rdx
  451001:	movl   $0x1,0x2c(%rsp)
  451009:	jmpq   450b4b <X509_get0_pubkey_bitstr@plt+0x3a17b>
  45100e:	test   %rbp,%rbp
  451011:	je     45118b <X509_get0_pubkey_bitstr@plt+0x3a7bb>
  451017:	lea    0xd20f(%rip),%rsi        # 45e22d <_fini+0xd29>
  45101e:	mov    %rbp,%rdi
  451021:	callq  412ba0 <BIO_new_file@plt>
  451026:	mov    %rax,%r13
  451029:	test   %r13,%r13
  45102c:	je     45115d <X509_get0_pubkey_bitstr@plt+0x3a78d>
  451032:	xor    %edi,%edi
  451034:	callq  413cd0 <NCONF_new@plt>
  451039:	xor    %edx,%edx
  45103b:	mov    %r13,%rsi
  45103e:	mov    %rax,%rdi
  451041:	mov    %rax,%r15
  451044:	callq  412e10 <NCONF_load_bio@plt>
  451049:	test   %eax,%eax
  45104b:	jne    4510b8 <X509_get0_pubkey_bitstr@plt+0x3a6e8>
  45104d:	mov    (%rbx),%rdi
  451050:	lea    0x1cb2b(%rip),%rsi        # 46db82 <_fini+0x1067e>
  451057:	callq  413c40 <BIO_printf@plt>
  45105c:	mov    (%rbx),%rdi
  45105f:	xor    %ebp,%ebp
  451061:	xor    %r14d,%r14d
  451064:	xor    %r12d,%r12d
  451067:	mov    $0x1,%ebx
  45106c:	callq  413f40 <ERR_print_errors@plt>
  451071:	jmpq   450dc2 <X509_get0_pubkey_bitstr@plt+0x3a3f2>
  451076:	mov    (%rbx),%rdi
  451079:	lea    0x1cac3(%rip),%rsi        # 46db43 <_fini+0x1063f>
  451080:	xor    %eax,%eax
  451082:	xor    %r15d,%r15d
  451085:	xor    %r13d,%r13d
  451088:	callq  413c40 <BIO_printf@plt>
  45108d:	mov    (%rbx),%rdi
  451090:	mov    $0x1,%ebx
  451095:	callq  413f40 <ERR_print_errors@plt>
  45109a:	jmpq   450dc2 <X509_get0_pubkey_bitstr@plt+0x3a3f2>
  45109f:	mov    0x224e12(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  4510a6:	xor    %esi,%esi
  4510a8:	mov    (%rax),%rdi
  4510ab:	callq  4161e0 <BIO_new_fp@plt>
  4510b0:	mov    %rax,%r12
  4510b3:	jmpq   450c8b <X509_get0_pubkey_bitstr@plt+0x3a2bb>
  4510b8:	mov    0x8(%rsp),%rdx
  4510bd:	mov    0x10(%rsp),%rsi
  4510c2:	mov    %r15,%rdi
  4510c5:	callq  413fd0 <NCONF_get_string@plt>
  4510ca:	test   %rax,%rax
  4510cd:	je     4511cc <X509_get0_pubkey_bitstr@plt+0x3a7fc>
  4510d3:	mov    $0xffffffff,%esi
  4510d8:	mov    %rax,%rdi
  4510db:	callq  415fb0 <NETSCAPE_SPKI_b64_decode@plt>
  4510e0:	test   %rax,%rax
  4510e3:	mov    %rax,%r14
  4510e6:	je     4511a4 <X509_get0_pubkey_bitstr@plt+0x3a7d4>
  4510ec:	test   %r12,%r12
  4510ef:	je     451262 <X509_get0_pubkey_bitstr@plt+0x3a892>
  4510f5:	lea    0x1251c(%rip),%rsi        # 463618 <_fini+0x6114>
  4510fc:	mov    %r12,%rdi
  4510ff:	callq  412ba0 <BIO_new_file@plt>
  451104:	mov    %rax,%r12
  451107:	test   %r12,%r12
  45110a:	je     45123d <X509_get0_pubkey_bitstr@plt+0x3a86d>
  451110:	mov    0x28(%rsp),%ecx
  451114:	test   %ecx,%ecx
  451116:	je     45120a <X509_get0_pubkey_bitstr@plt+0x3a83a>
  45111c:	mov    %r14,%rdi
  45111f:	callq  413160 <NETSCAPE_SPKI_get_pubkey@plt>
  451124:	mov    0x24(%rsp),%edx
  451128:	mov    %rax,%rbp
  45112b:	test   %edx,%edx
  45112d:	jne    4511e5 <X509_get0_pubkey_bitstr@plt+0x3a815>
  451133:	mov    0x2c(%rsp),%eax
  451137:	xor    %ebx,%ebx
  451139:	test   %eax,%eax
  45113b:	je     450dc2 <X509_get0_pubkey_bitstr@plt+0x3a3f2>
  451141:	mov    %rbp,%rsi
  451144:	mov    %r12,%rdi
  451147:	callq  414610 <PEM_write_bio_PUBKEY@plt>
  45114c:	jmpq   450dc2 <X509_get0_pubkey_bitstr@plt+0x3a3f2>
  451151:	nopl   0x0(%rax)
  451158:	callq  414c30 <__stack_chk_fail@plt>
  45115d:	mov    (%rbx),%rdi
  451160:	lea    0x1ca01(%rip),%rsi        # 46db68 <_fini+0x10664>
  451167:	xor    %eax,%eax
  451169:	xor    %ebp,%ebp
  45116b:	xor    %r14d,%r14d
  45116e:	xor    %r15d,%r15d
  451171:	xor    %r12d,%r12d
  451174:	callq  413c40 <BIO_printf@plt>
  451179:	mov    (%rbx),%rdi
  45117c:	mov    $0x1,%ebx
  451181:	callq  413f40 <ERR_print_errors@plt>
  451186:	jmpq   450dc2 <X509_get0_pubkey_bitstr@plt+0x3a3f2>
  45118b:	mov    0x224d7e(%rip),%rax        # 675f10 <_fini+0x218a0c>
  451192:	xor    %esi,%esi
  451194:	mov    (%rax),%rdi
  451197:	callq  4161e0 <BIO_new_fp@plt>
  45119c:	mov    %rax,%r13
  45119f:	jmpq   451029 <X509_get0_pubkey_bitstr@plt+0x3a659>
  4511a4:	mov    (%rbx),%rdi
  4511a7:	lea    0x1ca0d(%rip),%rsi        # 46dbbb <_fini+0x106b7>
  4511ae:	xor    %eax,%eax
  4511b0:	xor    %ebp,%ebp
  4511b2:	xor    %r12d,%r12d
  4511b5:	callq  413c40 <BIO_printf@plt>
  4511ba:	mov    (%rbx),%rdi
  4511bd:	mov    $0x1,%ebx
  4511c2:	callq  413f40 <ERR_print_errors@plt>
  4511c7:	jmpq   450dc2 <X509_get0_pubkey_bitstr@plt+0x3a3f2>
  4511cc:	mov    0x8(%rsp),%rdx
  4511d1:	mov    (%rbx),%rdi
  4511d4:	lea    0x1c9c2(%rip),%rsi        # 46db9d <_fini+0x10699>
  4511db:	callq  413c40 <BIO_printf@plt>
  4511e0:	jmpq   45105c <X509_get0_pubkey_bitstr@plt+0x3a68c>
  4511e5:	mov    %rax,%rsi
  4511e8:	mov    %r14,%rdi
  4511eb:	callq  414010 <NETSCAPE_SPKI_verify@plt>
  4511f0:	test   %eax,%eax
  4511f2:	jle    45121a <X509_get0_pubkey_bitstr@plt+0x3a84a>
  4511f4:	mov    (%rbx),%rdi
  4511f7:	lea    0x1c9d2(%rip),%rsi        # 46dbd0 <_fini+0x106cc>
  4511fe:	xor    %eax,%eax
  451200:	callq  413c40 <BIO_printf@plt>
  451205:	jmpq   451133 <X509_get0_pubkey_bitstr@plt+0x3a763>
  45120a:	mov    %r14,%rsi
  45120d:	mov    %r12,%rdi
  451210:	callq  4132a0 <NETSCAPE_SPKI_print@plt>
  451215:	jmpq   45111c <X509_get0_pubkey_bitstr@plt+0x3a74c>
  45121a:	mov    (%rbx),%rdi
  45121d:	lea    0x1c9ba(%rip),%rsi        # 46dbde <_fini+0x106da>
  451224:	xor    %eax,%eax
  451226:	callq  413c40 <BIO_printf@plt>
  45122b:	mov    (%rbx),%rdi
  45122e:	mov    $0x1,%ebx
  451233:	callq  413f40 <ERR_print_errors@plt>
  451238:	jmpq   450dc2 <X509_get0_pubkey_bitstr@plt+0x3a3f2>
  45123d:	mov    (%rbx),%rdi
  451240:	lea    0x1c8fc(%rip),%rsi        # 46db43 <_fini+0x1063f>
  451247:	xor    %eax,%eax
  451249:	xor    %ebp,%ebp
  45124b:	callq  413c40 <BIO_printf@plt>
  451250:	mov    (%rbx),%rdi
  451253:	mov    $0x1,%ebx
  451258:	callq  413f40 <ERR_print_errors@plt>
  45125d:	jmpq   450dc2 <X509_get0_pubkey_bitstr@plt+0x3a3f2>
  451262:	mov    0x224c4f(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  451269:	xor    %esi,%esi
  45126b:	mov    (%rax),%rdi
  45126e:	callq  4161e0 <BIO_new_fp@plt>
  451273:	mov    %rax,%r12
  451276:	jmpq   451107 <X509_get0_pubkey_bitstr@plt+0x3a737>
  45127b:	nopl   0x0(%rax,%rax,1)
  451280:	push   %rbp
  451281:	mov    %edi,%ebp
  451283:	mov    %rsi,%rdi
  451286:	push   %rbx
  451287:	mov    %rsi,%rbx
  45128a:	sub    $0x8,%rsp
  45128e:	callq  415050 <X509_STORE_CTX_get_error@plt>
  451293:	cmp    $0x2b,%eax
  451296:	je     4512a2 <X509_get0_pubkey_bitstr@plt+0x3a8d2>
  451298:	test   %eax,%eax
  45129a:	jne    4512ac <X509_get0_pubkey_bitstr@plt+0x3a8dc>
  45129c:	cmp    $0x2,%ebp
  45129f:	nop
  4512a0:	jne    4512ac <X509_get0_pubkey_bitstr@plt+0x3a8dc>
  4512a2:	mov    %rbx,%rsi
  4512a5:	xor    %edi,%edi
  4512a7:	callq  4487c0 <X509_get0_pubkey_bitstr@plt+0x31df0>
  4512ac:	add    $0x8,%rsp
  4512b0:	mov    %ebp,%eax
  4512b2:	pop    %rbx
  4512b3:	pop    %rbp
  4512b4:	retq   
  4512b5:	data32 nopw %cs:0x0(%rax,%rax,1)
  4512c0:	push   %r15
  4512c2:	add    $0x8,%rsi
  4512c6:	mov    $0xd,%edi
  4512cb:	push   %r14
  4512cd:	push   %r13
  4512cf:	push   %r12
  4512d1:	push   %rbp
  4512d2:	push   %rbx
  4512d3:	sub    $0x118,%rsp
  4512da:	mov    %rsi,0xe8(%rsp)
  4512e2:	mov    $0x1,%esi
  4512e7:	movq   $0x0,0xf0(%rsp)
  4512f3:	mov    %fs:0x28,%rax
  4512fc:	mov    %rax,0x108(%rsp)
  451304:	xor    %eax,%eax
  451306:	movl   $0x0,0xe4(%rsp)
  451311:	movq   $0x0,0xf8(%rsp)
  45131d:	movq   $0x0,0x100(%rsp)
  451329:	callq  414ee0 <signal@plt>
  45132e:	lea    0x229a0b(%rip),%rbx        # 67ad40 <_edata+0x38>
  451335:	mov    (%rbx),%rdi
  451338:	test   %rdi,%rdi
  45133b:	je     451ea1 <X509_get0_pubkey_bitstr@plt+0x3b4d1>
  451341:	xor    %esi,%esi
  451343:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  451348:	test   %eax,%eax
  45134a:	je     451960 <X509_get0_pubkey_bitstr@plt+0x3af90>
  451350:	lea    0x100(%rsp),%rax
  451358:	mov    0xe4(%rsp),%edx
  45135f:	movq   $0x0,0x30(%rsp)
  451368:	movl   $0x3,0x5c(%rsp)
  451370:	movl   $0x6,0x88(%rsp)
  45137b:	xor    %r12d,%r12d
  45137e:	mov    %rax,0xc0(%rsp)
  451386:	lea    0xe4(%rsp),%rax
  45138e:	movl   $0x6,0x68(%rsp)
  451396:	movq   $0x0,0x60(%rsp)
  45139f:	movl   $0x0,0x8c(%rsp)
  4513aa:	xor    %ebp,%ebp
  4513ac:	mov    %rax,0xc8(%rsp)
  4513b4:	lea    0xe8(%rsp),%rax
  4513bc:	movl   $0x0,0x58(%rsp)
  4513c4:	movq   $0x0,0x40(%rsp)
  4513cd:	movq   $0x0,0x28(%rsp)
  4513d6:	mov    $0x9,%r14d
  4513dc:	movq   $0x0,0xb8(%rsp)
  4513e8:	movq   $0x0,0xb0(%rsp)
  4513f4:	movq   $0x0,0xa8(%rsp)
  451400:	movq   $0x0,0xa0(%rsp)
  45140c:	movq   $0x0,0x98(%rsp)
  451418:	movl   $0x40,0x50(%rsp)
  451420:	movq   $0x0,0x20(%rsp)
  451429:	movq   $0x0,0x90(%rsp)
  451435:	movq   $0x0,0x18(%rsp)
  45143e:	movq   $0x0,0x38(%rsp)
  451447:	movq   $0x0,0x10(%rsp)
  451450:	movq   $0x0,0x70(%rsp)
  451459:	movq   $0x0,0x48(%rsp)
  451462:	movq   $0x0,0x80(%rsp)
  45146e:	movq   $0x0,0x78(%rsp)
  451477:	mov    %rax,0xd0(%rsp)
  45147f:	test   %edx,%edx
  451481:	jne    451541 <X509_get0_pubkey_bitstr@plt+0x3ab71>
  451487:	nopw   0x0(%rax,%rax,1)
  451490:	mov    0xe8(%rsp),%r15
  451498:	mov    (%r15),%r13
  45149b:	test   %r13,%r13
  45149e:	je     451e28 <X509_get0_pubkey_bitstr@plt+0x3b458>
  4514a4:	cmpb   $0x2d,0x0(%r13)
  4514a9:	jne    451e28 <X509_get0_pubkey_bitstr@plt+0x3b458>
  4514af:	lea    0x12180(%rip),%rdi        # 463636 <_fini+0x6132>
  4514b6:	mov    %r13,%rsi
  4514b9:	mov    %r14,%rcx
  4514bc:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4514be:	je     451528 <X509_get0_pubkey_bitstr@plt+0x3ab58>
  4514c0:	lea    0x12178(%rip),%rdi        # 46363f <_fini+0x613b>
  4514c7:	mov    %r13,%rsi
  4514ca:	mov    %r14,%rcx
  4514cd:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4514cf:	je     451940 <X509_get0_pubkey_bitstr@plt+0x3af70>
  4514d5:	lea    0xe3e6(%rip),%rdi        # 45f8c2 <_fini+0x23be>
  4514dc:	mov    $0x6,%ecx
  4514e1:	mov    %r13,%rsi
  4514e4:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4514e6:	je     451950 <X509_get0_pubkey_bitstr@plt+0x3af80>
  4514ec:	lea    0x1c840(%rip),%rdi        # 46dd33 <_fini+0x1082f>
  4514f3:	mov    $0x8,%ecx
  4514f8:	mov    %r13,%rsi
  4514fb:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4514fd:	je     451aa0 <X509_get0_pubkey_bitstr@plt+0x3b0d0>
  451503:	lea    0xcd2e(%rip),%rdi        # 45e238 <_fini+0xd34>
  45150a:	mov    $0x8,%ecx
  45150f:	mov    %r13,%rsi
  451512:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  451514:	jne    451ab0 <X509_get0_pubkey_bitstr@plt+0x3b0e0>
  45151a:	mov    $0x24,%ebp
  45151f:	jmp    45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  451521:	nopl   0x0(%rax)
  451528:	mov    $0x11,%ebp
  45152d:	add    $0x8,%r15
  451531:	test   %edx,%edx
  451533:	mov    %r15,0xe8(%rsp)
  45153b:	je     451490 <X509_get0_pubkey_bitstr@plt+0x3aac0>
  451541:	mov    %ebp,%r14d
  451544:	and    $0x40,%r14d
  451548:	jne    451c00 <X509_get0_pubkey_bitstr@plt+0x3b230>
  45154e:	test   %r12,%r12
  451551:	jne    451e50 <X509_get0_pubkey_bitstr@plt+0x3b480>
  451557:	cmpq   $0x0,0x10(%rsp)
  45155d:	jne    451e50 <X509_get0_pubkey_bitstr@plt+0x3b480>
  451563:	cmp    $0x22,%ebp
  451566:	je     451e84 <X509_get0_pubkey_bitstr@plt+0x3b4b4>
  45156c:	cmp    $0x11,%ebp
  45156f:	je     451f52 <X509_get0_pubkey_bitstr@plt+0x3b582>
  451575:	test   %ebp,%ebp
  451577:	jne    451e90 <X509_get0_pubkey_bitstr@plt+0x3b4c0>
  45157d:	movl   $0x1,0xe4(%rsp)
  451588:	movq   $0x0,0x10(%rsp)
  451591:	xor    %r12d,%r12d
  451594:	mov    (%rbx),%rdi
  451597:	lea    0x1cab2(%rip),%rsi        # 46e050 <_fini+0x10b4c>
  45159e:	xor    %eax,%eax
  4515a0:	callq  413c40 <BIO_printf@plt>
  4515a5:	mov    (%rbx),%rdi
  4515a8:	lea    0xc7a6(%rip),%rsi        # 45dd55 <_fini+0x851>
  4515af:	xor    %eax,%eax
  4515b1:	callq  413c40 <BIO_printf@plt>
  4515b6:	mov    (%rbx),%rdi
  4515b9:	lea    0x1cab8(%rip),%rsi        # 46e078 <_fini+0x10b74>
  4515c0:	xor    %eax,%eax
  4515c2:	callq  413c40 <BIO_printf@plt>
  4515c7:	mov    (%rbx),%rdi
  4515ca:	lea    0x1cac7(%rip),%rsi        # 46e098 <_fini+0x10b94>
  4515d1:	xor    %eax,%eax
  4515d3:	callq  413c40 <BIO_printf@plt>
  4515d8:	mov    (%rbx),%rdi
  4515db:	lea    0x1c810(%rip),%rsi        # 46ddf2 <_fini+0x108ee>
  4515e2:	xor    %eax,%eax
  4515e4:	callq  413c40 <BIO_printf@plt>
  4515e9:	mov    (%rbx),%rdi
  4515ec:	lea    0x1cad5(%rip),%rsi        # 46e0c8 <_fini+0x10bc4>
  4515f3:	xor    %eax,%eax
  4515f5:	callq  413c40 <BIO_printf@plt>
  4515fa:	mov    (%rbx),%rdi
  4515fd:	lea    0x1caec(%rip),%rsi        # 46e0f0 <_fini+0x10bec>
  451604:	xor    %eax,%eax
  451606:	callq  413c40 <BIO_printf@plt>
  45160b:	mov    (%rbx),%rdi
  45160e:	lea    0x1cb03(%rip),%rsi        # 46e118 <_fini+0x10c14>
  451615:	xor    %eax,%eax
  451617:	callq  413c40 <BIO_printf@plt>
  45161c:	mov    (%rbx),%rdi
  45161f:	lea    0x1cb1a(%rip),%rsi        # 46e140 <_fini+0x10c3c>
  451626:	xor    %eax,%eax
  451628:	callq  413c40 <BIO_printf@plt>
  45162d:	mov    (%rbx),%rdi
  451630:	lea    0x1cb31(%rip),%rsi        # 46e168 <_fini+0x10c64>
  451637:	xor    %eax,%eax
  451639:	callq  413c40 <BIO_printf@plt>
  45163e:	mov    (%rbx),%rdi
  451641:	lea    0x1cb48(%rip),%rsi        # 46e190 <_fini+0x10c8c>
  451648:	xor    %eax,%eax
  45164a:	callq  413c40 <BIO_printf@plt>
  45164f:	mov    (%rbx),%rdi
  451652:	lea    0x1cb67(%rip),%rsi        # 46e1c0 <_fini+0x10cbc>
  451659:	xor    %eax,%eax
  45165b:	callq  413c40 <BIO_printf@plt>
  451660:	mov    (%rbx),%rdi
  451663:	lea    0x1cb7e(%rip),%rsi        # 46e1e8 <_fini+0x10ce4>
  45166a:	xor    %eax,%eax
  45166c:	callq  413c40 <BIO_printf@plt>
  451671:	mov    (%rbx),%rdi
  451674:	lea    0x11a9c(%rip),%rsi        # 463117 <_fini+0x5c13>
  45167b:	xor    %eax,%eax
  45167d:	callq  413c40 <BIO_printf@plt>
  451682:	mov    (%rbx),%rdi
  451685:	lea    0x1cb84(%rip),%rsi        # 46e210 <_fini+0x10d0c>
  45168c:	xor    %eax,%eax
  45168e:	callq  413c40 <BIO_printf@plt>
  451693:	mov    (%rbx),%rdi
  451696:	lea    0x1b76b(%rip),%rsi        # 46ce08 <_fini+0xf904>
  45169d:	xor    %eax,%eax
  45169f:	callq  413c40 <BIO_printf@plt>
  4516a4:	mov    (%rbx),%rdi
  4516a7:	lea    0x1cb92(%rip),%rsi        # 46e240 <_fini+0x10d3c>
  4516ae:	xor    %eax,%eax
  4516b0:	callq  413c40 <BIO_printf@plt>
  4516b5:	mov    (%rbx),%rdi
  4516b8:	lea    0x1cbb9(%rip),%rsi        # 46e278 <_fini+0x10d74>
  4516bf:	xor    %eax,%eax
  4516c1:	callq  413c40 <BIO_printf@plt>
  4516c6:	mov    (%rbx),%rdi
  4516c9:	lea    0x1cbe8(%rip),%rsi        # 46e2b8 <_fini+0x10db4>
  4516d0:	xor    %eax,%eax
  4516d2:	callq  413c40 <BIO_printf@plt>
  4516d7:	mov    (%rbx),%rdi
  4516da:	lea    0x1cc07(%rip),%rsi        # 46e2e8 <_fini+0x10de4>
  4516e1:	xor    %eax,%eax
  4516e3:	callq  413c40 <BIO_printf@plt>
  4516e8:	mov    (%rbx),%rdi
  4516eb:	lea    0x1cc2e(%rip),%rsi        # 46e320 <_fini+0x10e1c>
  4516f2:	xor    %eax,%eax
  4516f4:	callq  413c40 <BIO_printf@plt>
  4516f9:	mov    (%rbx),%rdi
  4516fc:	lea    0x1cc5d(%rip),%rsi        # 46e360 <_fini+0x10e5c>
  451703:	xor    %eax,%eax
  451705:	callq  413c40 <BIO_printf@plt>
  45170a:	mov    (%rbx),%rdi
  45170d:	lea    0x1cc74(%rip),%rsi        # 46e388 <_fini+0x10e84>
  451714:	xor    %eax,%eax
  451716:	callq  413c40 <BIO_printf@plt>
  45171b:	mov    (%rbx),%rdi
  45171e:	lea    0x1cc9b(%rip),%rsi        # 46e3c0 <_fini+0x10ebc>
  451725:	xor    %eax,%eax
  451727:	callq  413c40 <BIO_printf@plt>
  45172c:	mov    (%rbx),%rdi
  45172f:	lea    0x1ccba(%rip),%rsi        # 46e3f0 <_fini+0x10eec>
  451736:	xor    %eax,%eax
  451738:	callq  413c40 <BIO_printf@plt>
  45173d:	mov    (%rbx),%rdi
  451740:	lea    0x1ccd1(%rip),%rsi        # 46e418 <_fini+0x10f14>
  451747:	xor    %eax,%eax
  451749:	callq  413c40 <BIO_printf@plt>
  45174e:	mov    (%rbx),%rdi
  451751:	lea    0x1cce8(%rip),%rsi        # 46e440 <_fini+0x10f3c>
  451758:	xor    %eax,%eax
  45175a:	callq  413c40 <BIO_printf@plt>
  45175f:	mov    (%rbx),%rdi
  451762:	lea    0x1c6a6(%rip),%rsi        # 46de0f <_fini+0x1090b>
  451769:	xor    %eax,%eax
  45176b:	callq  413c40 <BIO_printf@plt>
  451770:	mov    (%rbx),%rdi
  451773:	lea    0x1cd06(%rip),%rsi        # 46e480 <_fini+0x10f7c>
  45177a:	xor    %eax,%eax
  45177c:	callq  413c40 <BIO_printf@plt>
  451781:	mov    (%rbx),%rdi
  451784:	lea    0x1cd35(%rip),%rsi        # 46e4c0 <_fini+0x10fbc>
  45178b:	xor    %eax,%eax
  45178d:	callq  413c40 <BIO_printf@plt>
  451792:	mov    (%rbx),%rdi
  451795:	lea    0x1cd64(%rip),%rsi        # 46e500 <_fini+0x10ffc>
  45179c:	xor    %eax,%eax
  45179e:	callq  413c40 <BIO_printf@plt>
  4517a3:	mov    (%rbx),%rdi
  4517a6:	lea    0x1c67d(%rip),%rsi        # 46de2a <_fini+0x10926>
  4517ad:	xor    %eax,%eax
  4517af:	callq  413c40 <BIO_printf@plt>
  4517b4:	mov    (%rbx),%rdi
  4517b7:	lea    0x1cd82(%rip),%rsi        # 46e540 <_fini+0x1103c>
  4517be:	xor    %eax,%eax
  4517c0:	callq  413c40 <BIO_printf@plt>
  4517c5:	mov    (%rbx),%rdi
  4517c8:	lea    0x1cdb1(%rip),%rsi        # 46e580 <_fini+0x1107c>
  4517cf:	xor    %eax,%eax
  4517d1:	callq  413c40 <BIO_printf@plt>
  4517d6:	mov    (%rbx),%rdi
  4517d9:	lea    0x1c666(%rip),%rsi        # 46de46 <_fini+0x10942>
  4517e0:	xor    %eax,%eax
  4517e2:	callq  413c40 <BIO_printf@plt>
  4517e7:	mov    (%rbx),%rdi
  4517ea:	lea    0x1c670(%rip),%rsi        # 46de61 <_fini+0x1095d>
  4517f1:	xor    %eax,%eax
  4517f3:	callq  413c40 <BIO_printf@plt>
  4517f8:	mov    (%rbx),%rdi
  4517fb:	lea    0x1c67c(%rip),%rsi        # 46de7e <_fini+0x1097a>
  451802:	xor    %eax,%eax
  451804:	callq  413c40 <BIO_printf@plt>
  451809:	mov    (%rbx),%rdi
  45180c:	lea    0x1cdb5(%rip),%rsi        # 46e5c8 <_fini+0x110c4>
  451813:	xor    %eax,%eax
  451815:	callq  413c40 <BIO_printf@plt>
  45181a:	mov    (%rbx),%rdi
  45181d:	lea    0x1cddc(%rip),%rsi        # 46e600 <_fini+0x110fc>
  451824:	xor    %eax,%eax
  451826:	callq  413c40 <BIO_printf@plt>
  45182b:	mov    (%rbx),%rdi
  45182e:	lea    0x1cdfb(%rip),%rsi        # 46e630 <_fini+0x1112c>
  451835:	xor    %eax,%eax
  451837:	callq  413c40 <BIO_printf@plt>
  45183c:	mov    (%rbx),%rdi
  45183f:	lea    0x1ce1a(%rip),%rsi        # 46e660 <_fini+0x1115c>
  451846:	xor    %eax,%eax
  451848:	callq  413c40 <BIO_printf@plt>
  45184d:	mov    (%rbx),%rdi
  451850:	lea    0x1ce59(%rip),%rsi        # 46e6b0 <_fini+0x111ac>
  451857:	xor    %eax,%eax
  451859:	callq  413c40 <BIO_printf@plt>
  45185e:	mov    (%rbx),%rdi
  451861:	lea    0x1ce98(%rip),%rsi        # 46e700 <_fini+0x111fc>
  451868:	xor    %eax,%eax
  45186a:	callq  413c40 <BIO_printf@plt>
  45186f:	mov    (%rbx),%rdi
  451872:	lea    0x1cedf(%rip),%rsi        # 46e758 <_fini+0x11254>
  451879:	xor    %eax,%eax
  45187b:	callq  413c40 <BIO_printf@plt>
  451880:	mov    (%rbx),%rdi
  451883:	lea    0x1cf0e(%rip),%rsi        # 46e798 <_fini+0x11294>
  45188a:	xor    %eax,%eax
  45188c:	callq  413c40 <BIO_printf@plt>
  451891:	mov    (%rbx),%rdi
  451894:	lea    0xca90(%rip),%rsi        # 45e32b <_fini+0xe27>
  45189b:	mov    $0x3a,%ecx
  4518a0:	mov    $0x3a,%edx
  4518a5:	xor    %eax,%eax
  4518a7:	callq  413c40 <BIO_printf@plt>
  4518ac:	mov    (%rbx),%rdi
  4518af:	lea    0x1cf12(%rip),%rsi        # 46e7c8 <_fini+0x112c4>
  4518b6:	xor    %eax,%eax
  4518b8:	callq  413c40 <BIO_printf@plt>
  4518bd:	mov    (%rbx),%rdi
  4518c0:	lea    0xe669(%rip),%rsi        # 45ff30 <_fini+0x2a2c>
  4518c7:	xor    %eax,%eax
  4518c9:	callq  413c40 <BIO_printf@plt>
  4518ce:	mov    (%rbx),%rdi
  4518d1:	lea    0x1cf38(%rip),%rsi        # 46e810 <_fini+0x1130c>
  4518d8:	xor    %eax,%eax
  4518da:	callq  413c40 <BIO_printf@plt>
  4518df:	xor    %r15d,%r15d
  4518e2:	movq   $0x0,0x18(%rsp)
  4518eb:	movq   $0x0,0x28(%rsp)
  4518f4:	movq   $0x0,0x38(%rsp)
  4518fd:	movq   $0x0,0x40(%rsp)
  451906:	xor    %r14d,%r14d
  451909:	movq   $0x0,0x30(%rsp)
  451912:	movq   $0x0,0x20(%rsp)
  45191b:	xor    %r13d,%r13d
  45191e:	mov    $0x1,%ebp
  451923:	mov    0x58(%rsp),%eax
  451927:	test   %eax,%eax
  451929:	je     451935 <X509_get0_pubkey_bitstr@plt+0x3af65>
  45192b:	mov    (%rbx),%rsi
  45192e:	xor    %edi,%edi
  451930:	callq  44a660 <X509_get0_pubkey_bitstr@plt+0x33c90>
  451935:	test   %ebp,%ebp
  451937:	je     4519b8 <X509_get0_pubkey_bitstr@plt+0x3afe8>
  451939:	jmp    4519b0 <X509_get0_pubkey_bitstr@plt+0x3afe0>
  45193b:	nopl   0x0(%rax,%rax,1)
  451940:	mov    $0x22,%ebp
  451945:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  45194a:	nopw   0x0(%rax,%rax,1)
  451950:	mov    $0x53,%ebp
  451955:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  45195a:	nopw   0x0(%rax,%rax,1)
  451960:	movq   $0x0,0x20(%rsp)
  451969:	xor    %r15d,%r15d
  45196c:	movq   $0x0,0x40(%rsp)
  451975:	xor    %r14d,%r14d
  451978:	movq   $0x0,0x30(%rsp)
  451981:	mov    $0x1,%ebp
  451986:	xor    %r12d,%r12d
  451989:	xor    %r13d,%r13d
  45198c:	movq   $0x0,0x38(%rsp)
  451995:	movq   $0x0,0x28(%rsp)
  45199e:	movq   $0x0,0x18(%rsp)
  4519a7:	movq   $0x0,0x10(%rsp)
  4519b0:	mov    (%rbx),%rdi
  4519b3:	callq  413f40 <ERR_print_errors@plt>
  4519b8:	mov    0x2245b9(%rip),%rbx        # 675f78 <_fini+0x218a74>
  4519bf:	mov    0x40(%rsp),%rdi
  4519c4:	mov    %rbx,%rsi
  4519c7:	callq  416250 <sk_pop_free@plt>
  4519cc:	mov    0x38(%rsp),%rdi
  4519d1:	mov    %rbx,%rsi
  4519d4:	callq  416250 <sk_pop_free@plt>
  4519d9:	mov    0x100(%rsp),%rdi
  4519e1:	test   %rdi,%rdi
  4519e4:	je     4519eb <X509_get0_pubkey_bitstr@plt+0x3b01b>
  4519e6:	callq  412f10 <X509_VERIFY_PARAM_free@plt>
  4519eb:	test   %r12,%r12
  4519ee:	je     4519f8 <X509_get0_pubkey_bitstr@plt+0x3b028>
  4519f0:	mov    %r12,%rdi
  4519f3:	callq  4143f0 <sk_free@plt>
  4519f8:	mov    0x10(%rsp),%rdi
  4519fd:	test   %rdi,%rdi
  451a00:	je     451a07 <X509_get0_pubkey_bitstr@plt+0x3b037>
  451a02:	callq  4143f0 <sk_free@plt>
  451a07:	mov    0x20(%rsp),%rdi
  451a0c:	callq  4134b0 <X509_STORE_free@plt>
  451a11:	xor    %edi,%edi
  451a13:	callq  4153a0 <X509_free@plt>
  451a18:	mov    0x30(%rsp),%rdi
  451a1d:	callq  4153a0 <X509_free@plt>
  451a22:	mov    %r14,%rdi
  451a25:	callq  4153a0 <X509_free@plt>
  451a2a:	mov    %r15,%rdi
  451a2d:	callq  412b00 <EVP_PKEY_free@plt>
  451a32:	mov    %r13,%rdi
  451a35:	callq  413150 <PKCS7_free@plt>
  451a3a:	mov    0x28(%rsp),%rdi
  451a3f:	callq  413960 <BIO_free@plt>
  451a44:	mov    0xf0(%rsp),%rdi
  451a4c:	callq  413960 <BIO_free@plt>
  451a51:	mov    0x18(%rsp),%rdi
  451a56:	callq  416570 <BIO_free_all@plt>
  451a5b:	mov    0xf8(%rsp),%rdi
  451a63:	test   %rdi,%rdi
  451a66:	je     451a6d <X509_get0_pubkey_bitstr@plt+0x3b09d>
  451a68:	callq  415020 <CRYPTO_free@plt>
  451a6d:	mov    0x108(%rsp),%rdx
  451a75:	xor    %fs:0x28,%rdx
  451a7e:	mov    %ebp,%eax
  451a80:	jne    452ac0 <X509_get0_pubkey_bitstr@plt+0x3c0f0>
  451a86:	add    $0x118,%rsp
  451a8d:	pop    %rbx
  451a8e:	pop    %rbp
  451a8f:	pop    %r12
  451a91:	pop    %r13
  451a93:	pop    %r14
  451a95:	pop    %r15
  451a97:	retq   
  451a98:	nopl   0x0(%rax,%rax,1)
  451aa0:	mov    $0x76,%ebp
  451aa5:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  451aaa:	nopw   0x0(%rax,%rax,1)
  451ab0:	lea    0x1c284(%rip),%rdi        # 46dd3b <_fini+0x10837>
  451ab7:	mov    $0x8,%ecx
  451abc:	mov    %r13,%rsi
  451abf:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  451ac1:	je     451e40 <X509_get0_pubkey_bitstr@plt+0x3b470>
  451ac7:	lea    0x145a0(%rip),%rdi        # 46606e <_fini+0x8b6a>
  451ace:	mov    $0x6,%ecx
  451ad3:	mov    %r13,%rsi
  451ad6:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  451ad8:	je     452062 <X509_get0_pubkey_bitstr@plt+0x3b692>
  451ade:	lea    0x14584(%rip),%rdi        # 466069 <_fini+0x8b65>
  451ae5:	mov    $0x5,%ecx
  451aea:	mov    %r13,%rsi
  451aed:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  451aef:	je     45208f <X509_get0_pubkey_bitstr@plt+0x3b6bf>
  451af5:	lea    0x1457e(%rip),%rdi        # 46607a <_fini+0x8b76>
  451afc:	mov    $0x6,%ecx
  451b01:	mov    %r13,%rsi
  451b04:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  451b06:	je     451efe <X509_get0_pubkey_bitstr@plt+0x3b52e>
  451b0c:	lea    0x1c230(%rip),%rdi        # 46dd43 <_fini+0x1083f>
  451b13:	mov    $0x8,%ecx
  451b18:	mov    %r13,%rsi
  451b1b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  451b1d:	je     45241c <X509_get0_pubkey_bitstr@plt+0x3ba4c>
  451b23:	lea    0x1c221(%rip),%rdi        # 46dd4b <_fini+0x10847>
  451b2a:	mov    %r13,%rsi
  451b2d:	mov    %r14,%rcx
  451b30:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  451b32:	je     45249a <X509_get0_pubkey_bitstr@plt+0x3baca>
  451b38:	lea    0x1c215(%rip),%rdi        # 46dd54 <_fini+0x10850>
  451b3f:	mov    $0x8,%ecx
  451b44:	mov    %r13,%rsi
  451b47:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  451b49:	je     4524ef <X509_get0_pubkey_bitstr@plt+0x3bb1f>
  451b4f:	lea    0x1452a(%rip),%rdi        # 466080 <_fini+0x8b7c>
  451b56:	mov    $0x8,%ecx
  451b5b:	mov    %r13,%rsi
  451b5e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  451b60:	je     4525d4 <X509_get0_pubkey_bitstr@plt+0x3bc04>
  451b66:	lea    0x1451b(%rip),%rdi        # 466088 <_fini+0x8b84>
  451b6d:	mov    $0x8,%ecx
  451b72:	mov    %r13,%rsi
  451b75:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  451b77:	je     45264c <X509_get0_pubkey_bitstr@plt+0x3bc7c>
  451b7d:	lea    0x1450c(%rip),%rdi        # 466090 <_fini+0x8b8c>
  451b84:	mov    $0x8,%ecx
  451b89:	mov    %r13,%rsi
  451b8c:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  451b8e:	je     45266e <X509_get0_pubkey_bitstr@plt+0x3bc9e>
  451b94:	lea    0x144fd(%rip),%rdi        # 466098 <_fini+0x8b94>
  451b9b:	mov    $0xd,%ecx
  451ba0:	mov    %r13,%rsi
  451ba3:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  451ba5:	je     452841 <X509_get0_pubkey_bitstr@plt+0x3be71>
  451bab:	lea    0x144f3(%rip),%rdi        # 4660a5 <_fini+0x8ba1>
  451bb2:	mov    $0xd,%ecx
  451bb7:	mov    %r13,%rsi
  451bba:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  451bbc:	je     4529e9 <X509_get0_pubkey_bitstr@plt+0x3c019>
  451bc2:	lea    0x144e9(%rip),%rdi        # 4660b2 <_fini+0x8bae>
  451bc9:	mov    $0xd,%ecx
  451bce:	mov    %r13,%rsi
  451bd1:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  451bd3:	je     452a24 <X509_get0_pubkey_bitstr@plt+0x3c054>
  451bd9:	lea    0xc687(%rip),%rdi        # 45e267 <_fini+0xd63>
  451be0:	mov    $0x6,%ecx
  451be5:	mov    %r13,%rsi
  451be8:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  451bea:	jne    452a07 <X509_get0_pubkey_bitstr@plt+0x3c037>
  451bf0:	orl    $0x1,0x50(%rsp)
  451bf5:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  451bfa:	nopw   0x0(%rax,%rax,1)
  451c00:	cmpq   $0x0,0x48(%rsp)
  451c06:	je     451e64 <X509_get0_pubkey_bitstr@plt+0x3b494>
  451c0c:	cmpq   $0x0,0x48(%rsp)
  451c12:	je     451c54 <X509_get0_pubkey_bitstr@plt+0x3b284>
  451c14:	test   %r12,%r12
  451c17:	je     4524c7 <X509_get0_pubkey_bitstr@plt+0x3baf7>
  451c1d:	mov    0x48(%rsp),%rsi
  451c22:	mov    %r12,%rdi
  451c25:	callq  412fe0 <sk_push@plt>
  451c2a:	cmpq   $0x0,0x10(%rsp)
  451c30:	je     4524b8 <X509_get0_pubkey_bitstr@plt+0x3bae8>
  451c36:	mov    0x18(%rsp),%rdx
  451c3b:	mov    0x48(%rsp),%rax
  451c40:	mov    0x10(%rsp),%rdi
  451c45:	test   %rdx,%rdx
  451c48:	cmovne %rdx,%rax
  451c4c:	mov    %rax,%rsi
  451c4f:	callq  412fe0 <sk_push@plt>
  451c54:	test   %r12,%r12
  451c57:	je     452471 <X509_get0_pubkey_bitstr@plt+0x3baa1>
  451c5d:	mov    0xe4(%rsp),%edx
  451c64:	movl   $0x1,0x58(%rsp)
  451c6c:	movq   $0x0,0x18(%rsp)
  451c75:	movq   $0x0,0x48(%rsp)
  451c7e:	test   %edx,%edx
  451c80:	jne    451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  451c86:	mov    0x30(%rsp),%rsi
  451c8b:	mov    (%rbx),%rdi
  451c8e:	xor    %edx,%edx
  451c90:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  451c95:	mov    0x28(%rsp),%rsi
  451c9a:	mov    (%rbx),%rdi
  451c9d:	lea    0xf8(%rsp),%rcx
  451ca5:	xor    %r8d,%r8d
  451ca8:	xor    %edx,%edx
  451caa:	mov    %rax,0xc0(%rsp)
  451cb2:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  451cb7:	test   %eax,%eax
  451cb9:	je     452080 <X509_get0_pubkey_bitstr@plt+0x3b6b0>
  451cbf:	mov    0x58(%rsp),%r8d
  451cc4:	test   %r8d,%r8d
  451cc7:	jne    4520ad <X509_get0_pubkey_bitstr@plt+0x3b6dd>
  451ccd:	mov    0x50(%rsp),%edx
  451cd1:	mov    %edx,%eax
  451cd3:	and    $0xffffffbf,%eax
  451cd6:	test   %r14d,%r14d
  451cd9:	cmovne %edx,%eax
  451cdc:	test   $0x10,%bpl
  451ce0:	mov    %eax,0x50(%rsp)
  451ce4:	lea    0xc0c0(%rip),%rax        # 45ddab <_fini+0x8a7>
  451ceb:	mov    %rax,%rdx
  451cee:	jne    451ede <X509_get0_pubkey_bitstr@plt+0x3b50e>
  451cf4:	testb  $0x80,0x50(%rsp)
  451cf9:	lea    0x11918(%rip),%rax        # 463618 <_fini+0x6114>
  451d00:	cmovne %rdx,%rax
  451d04:	mov    %rax,0xd0(%rsp)
  451d0c:	mov    %ebp,%eax
  451d0e:	lea    0xc518(%rip),%r13        # 45e22d <_fini+0xd29>
  451d15:	and    $0x20,%eax
  451d18:	mov    %eax,0xc8(%rsp)
  451d1f:	je     451f7d <X509_get0_pubkey_bitstr@plt+0x3b5ad>
  451d25:	cmpl   $0x1,0x68(%rsp)
  451d2a:	lea    0xdcb0(%rip),%rax        # 45f9e1 <_fini+0x24dd>
  451d31:	movq   $0x0,0x40(%rsp)
  451d3a:	cmove  %rax,%r13
  451d3e:	mov    0x38(%rsp),%rsi
  451d43:	test   %rsi,%rsi
  451d46:	je     452322 <X509_get0_pubkey_bitstr@plt+0x3b952>
  451d4c:	mov    0xc0(%rsp),%r8
  451d54:	mov    (%rbx),%rdi
  451d57:	lea    0x1694f(%rip),%r9        # 4686ad <_fini+0xb1a9>
  451d5e:	xor    %ecx,%ecx
  451d60:	mov    $0x3,%edx
  451d65:	callq  446530 <X509_get0_pubkey_bitstr@plt+0x2fb60>
  451d6a:	test   %rax,%rax
  451d6d:	mov    %rax,0x38(%rsp)
  451d72:	je     452572 <X509_get0_pubkey_bitstr@plt+0x3bba2>
  451d78:	cmp    $0x22,%ebp
  451d7b:	movq   $0x0,0x30(%rsp)
  451d84:	sete   0xd8(%rsp)
  451d8c:	je     452330 <X509_get0_pubkey_bitstr@plt+0x3b960>
  451d92:	xor    %r15d,%r15d
  451d95:	cmp    $0x53,%ebp
  451d98:	je     45243a <X509_get0_pubkey_bitstr@plt+0x3ba6a>
  451d9e:	mov    0x78(%rsp),%rdi
  451da3:	test   %rdi,%rdi
  451da6:	je     4524d4 <X509_get0_pubkey_bitstr@plt+0x3bb04>
  451dac:	mov    %r13,%rsi
  451daf:	callq  412ba0 <BIO_new_file@plt>
  451db4:	test   %rax,%rax
  451db7:	mov    %rax,0x28(%rsp)
  451dbc:	je     452591 <X509_get0_pubkey_bitstr@plt+0x3bbc1>
  451dc2:	mov    0xc8(%rsp),%edi
  451dc9:	test   %edi,%edi
  451dcb:	je     4520f1 <X509_get0_pubkey_bitstr@plt+0x3b721>
  451dd1:	cmpl   $0x6,0x68(%rsp)
  451dd6:	je     4527ea <X509_get0_pubkey_bitstr@plt+0x3be1a>
  451ddc:	cmpl   $0x3,0x68(%rsp)
  451de1:	je     452757 <X509_get0_pubkey_bitstr@plt+0x3bd87>
  451de7:	cmpl   $0x1,0x68(%rsp)
  451dec:	je     45282d <X509_get0_pubkey_bitstr@plt+0x3be5d>
  451df2:	mov    (%rbx),%rdi
  451df5:	lea    0x1ca4c(%rip),%rsi        # 46e848 <_fini+0x11344>
  451dfc:	xor    %eax,%eax
  451dfe:	callq  413c40 <BIO_printf@plt>
  451e03:	movq   $0x0,0x18(%rsp)
  451e0c:	xor    %r14d,%r14d
  451e0f:	movq   $0x0,0x20(%rsp)
  451e18:	xor    %r13d,%r13d
  451e1b:	mov    $0x2,%ebp
  451e20:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  451e25:	nopl   (%rax)
  451e28:	mov    %ebp,%r14d
  451e2b:	xor    %edx,%edx
  451e2d:	and    $0x40,%r14d
  451e31:	je     45154e <X509_get0_pubkey_bitstr@plt+0x3ab7e>
  451e37:	jmpq   451c00 <X509_get0_pubkey_bitstr@plt+0x3b230>
  451e3c:	nopl   0x0(%rax)
  451e40:	mov    $0x35,%ebp
  451e45:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  451e4a:	nopw   0x0(%rax,%rax,1)
  451e50:	mov    (%rbx),%rdi
  451e53:	lea    0x1c146(%rip),%rsi        # 46dfa0 <_fini+0x10a9c>
  451e5a:	callq  413b70 <BIO_puts@plt>
  451e5f:	jmpq   451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  451e64:	cmpq   $0x0,0x18(%rsp)
  451e6a:	je     451c0c <X509_get0_pubkey_bitstr@plt+0x3b23c>
  451e70:	mov    (%rbx),%rdi
  451e73:	lea    0x1c106(%rip),%rsi        # 46df80 <_fini+0x10a7c>
  451e7a:	callq  413b70 <BIO_puts@plt>
  451e7f:	jmpq   451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  451e84:	cmpq   $0x0,0x18(%rsp)
  451e8a:	je     451f1c <X509_get0_pubkey_bitstr@plt+0x3b54c>
  451e90:	movq   $0x0,0x10(%rsp)
  451e99:	xor    %r12d,%r12d
  451e9c:	jmpq   451c7e <X509_get0_pubkey_bitstr@plt+0x3b2ae>
  451ea1:	callq  4152b0 <BIO_s_file@plt>
  451ea6:	mov    %rax,%rdi
  451ea9:	callq  414a20 <BIO_new@plt>
  451eae:	test   %rax,%rax
  451eb1:	mov    %rax,%rdi
  451eb4:	mov    %rax,(%rbx)
  451eb7:	je     451341 <X509_get0_pubkey_bitstr@plt+0x3a971>
  451ebd:	mov    0x2240bc(%rip),%rax        # 675f80 <_fini+0x218a7c>
  451ec4:	mov    $0x10,%edx
  451ec9:	mov    $0x6a,%esi
  451ece:	mov    (%rax),%rcx
  451ed1:	callq  412af0 <BIO_ctrl@plt>
  451ed6:	mov    (%rbx),%rdi
  451ed9:	jmpq   451341 <X509_get0_pubkey_bitstr@plt+0x3a971>
  451ede:	cmpl   $0x1,0x88(%rsp)
  451ee6:	lea    0x1172b(%rip),%rax        # 463618 <_fini+0x6114>
  451eed:	cmove  %rdx,%rax
  451ef1:	mov    %rax,0xd0(%rsp)
  451ef9:	jmpq   451d0c <X509_get0_pubkey_bitstr@plt+0x3b33c>
  451efe:	callq  4166e0 <EVP_seed_cbc@plt>
  451f03:	mov    0xe8(%rsp),%r15
  451f0b:	mov    %rax,0x20(%rsp)
  451f10:	mov    0xe4(%rsp),%edx
  451f17:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  451f1c:	cmpq   $0x0,0x70(%rsp)
  451f22:	jne    451e90 <X509_get0_pubkey_bitstr@plt+0x3b4c0>
  451f28:	mov    (%rbx),%rdi
  451f2b:	lea    0x1c0be(%rip),%rsi        # 46dff0 <_fini+0x10aec>
  451f32:	xor    %eax,%eax
  451f34:	callq  413c40 <BIO_printf@plt>
  451f39:	movl   $0x1,0xe4(%rsp)
  451f44:	movq   $0x0,0x10(%rsp)
  451f4d:	jmpq   451591 <X509_get0_pubkey_bitstr@plt+0x3abc1>
  451f52:	mov    0xe8(%rsp),%rax
  451f5a:	cmpq   $0x0,(%rax)
  451f5e:	je     452725 <X509_get0_pubkey_bitstr@plt+0x3bd55>
  451f64:	movl   $0x1,0x58(%rsp)
  451f6c:	movq   $0x0,0x10(%rsp)
  451f75:	xor    %r12d,%r12d
  451f78:	jmpq   451c7e <X509_get0_pubkey_bitstr@plt+0x3b2ae>
  451f7d:	testb  $0x80,0x50(%rsp)
  451f82:	lea    0xda58(%rip),%rax        # 45f9e1 <_fini+0x24dd>
  451f89:	cmovne %rax,%r13
  451f8d:	cmp    $0x11,%ebp
  451f90:	jne    4523a9 <X509_get0_pubkey_bitstr@plt+0x3b9d9>
  451f96:	cmpq   $0x0,0x20(%rsp)
  451f9c:	je     45286c <X509_get0_pubkey_bitstr@plt+0x3be9c>
  451fa2:	callq  412cd0 <sk_new_null@plt>
  451fa7:	mov    %rax,%r15
  451faa:	mov    %rax,0x40(%rsp)
  451faf:	mov    0xe8(%rsp),%rax
  451fb7:	mov    (%rax),%rsi
  451fba:	test   %rsi,%rsi
  451fbd:	je     451d3e <X509_get0_pubkey_bitstr@plt+0x3b36e>
  451fc3:	mov    %ebp,0x28(%rsp)
  451fc7:	mov    0xc0(%rsp),%rbp
  451fcf:	jmp    452004 <X509_get0_pubkey_bitstr@plt+0x3b634>
  451fd1:	nopl   0x0(%rax)
  451fd8:	mov    %rax,%rsi
  451fdb:	mov    %r15,%rdi
  451fde:	callq  412fe0 <sk_push@plt>
  451fe3:	mov    0xe8(%rsp),%rax
  451feb:	mov    0x8(%rax),%rsi
  451fef:	lea    0x8(%rax),%rdx
  451ff3:	mov    %rdx,0xe8(%rsp)
  451ffb:	test   %rsi,%rsi
  451ffe:	je     452468 <X509_get0_pubkey_bitstr@plt+0x3ba98>
  452004:	mov    (%rbx),%rdi
  452007:	lea    0x1be88(%rip),%r9        # 46de96 <_fini+0x10992>
  45200e:	xor    %ecx,%ecx
  452010:	mov    %rbp,%r8
  452013:	mov    $0x3,%edx
  452018:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  45201d:	test   %rax,%rax
  452020:	jne    451fd8 <X509_get0_pubkey_bitstr@plt+0x3b608>
  452022:	movq   $0x0,0x18(%rsp)
  45202b:	movq   $0x0,0x28(%rsp)
  452034:	movq   $0x0,0x38(%rsp)
  45203d:	xor    %r15d,%r15d
  452040:	xor    %r14d,%r14d
  452043:	movq   $0x0,0x30(%rsp)
  45204c:	movq   $0x0,0x20(%rsp)
  452055:	xor    %r13d,%r13d
  452058:	mov    $0x2,%ebp
  45205d:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  452062:	callq  415db0 <EVP_des_ede3_cbc@plt>
  452067:	mov    0xe8(%rsp),%r15
  45206f:	mov    %rax,0x20(%rsp)
  452074:	mov    0xe4(%rsp),%edx
  45207b:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  452080:	lea    0xd8ad(%rip),%rsi        # 45f934 <_fini+0x2430>
  452087:	mov    (%rbx),%rdi
  45208a:	jmpq   4518da <X509_get0_pubkey_bitstr@plt+0x3af0a>
  45208f:	callq  414280 <EVP_des_cbc@plt>
  452094:	mov    0xe8(%rsp),%r15
  45209c:	mov    %rax,0x20(%rsp)
  4520a1:	mov    0xe4(%rsp),%edx
  4520a8:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  4520ad:	mov    0x40(%rsp),%r15
  4520b2:	mov    (%rbx),%rsi
  4520b5:	test   %r15,%r15
  4520b8:	setne  %r13b
  4520bc:	xor    %edi,%edi
  4520be:	movzbl %r13b,%edx
  4520c2:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  4520c7:	test   %r13b,%r13b
  4520ca:	je     451ccd <X509_get0_pubkey_bitstr@plt+0x3b2fd>
  4520d0:	mov    %r15,%rdi
  4520d3:	callq  44a710 <X509_get0_pubkey_bitstr@plt+0x33d40>
  4520d8:	mov    (%rbx),%rdi
  4520db:	lea    0xdcaf(%rip),%rsi        # 45fd91 <_fini+0x288d>
  4520e2:	mov    %rax,%rdx
  4520e5:	xor    %eax,%eax
  4520e7:	callq  413c40 <BIO_printf@plt>
  4520ec:	jmpq   451ccd <X509_get0_pubkey_bitstr@plt+0x3b2fd>
  4520f1:	xor    %r13d,%r13d
  4520f4:	mov    0x80(%rsp),%rdi
  4520fc:	test   %rdi,%rdi
  4520ff:	je     4525b9 <X509_get0_pubkey_bitstr@plt+0x3bbe9>
  452105:	mov    0xd0(%rsp),%rsi
  45210d:	callq  412ba0 <BIO_new_file@plt>
  452112:	test   %rax,%rax
  452115:	mov    %rax,0x18(%rsp)
  45211a:	je     45268c <X509_get0_pubkey_bitstr@plt+0x3bcbc>
  452120:	cmp    $0x24,%ebp
  452123:	je     4525f2 <X509_get0_pubkey_bitstr@plt+0x3bc22>
  452129:	cmp    $0x11,%ebp
  45212c:	je     45250d <X509_get0_pubkey_bitstr@plt+0x3bb3d>
  452132:	test   %r14d,%r14d
  452135:	movq   $0x0,0x20(%rsp)
  45213e:	je     452251 <X509_get0_pubkey_bitstr@plt+0x3b881>
  452144:	cmp    $0x53,%ebp
  452147:	je     4526c8 <X509_get0_pubkey_bitstr@plt+0x3bcf8>
  45214d:	orl    $0x8000,0x50(%rsp)
  452155:	xor    %eax,%eax
  452157:	mov    %ebp,0x70(%rsp)
  45215b:	mov    %r13,0x68(%rsp)
  452160:	mov    %eax,%ebp
  452162:	jmpq   45222f <X509_get0_pubkey_bitstr@plt+0x3b85f>
  452167:	nopw   0x0(%rax,%rax,1)
  452170:	mov    %ebp,%esi
  452172:	mov    %r12,%rdi
  452175:	callq  412b30 <sk_value@plt>
  45217a:	mov    0x10(%rsp),%rdi
  45217f:	mov    %ebp,%esi
  452181:	mov    %rax,%r14
  452184:	mov    %rax,0x48(%rsp)
  452189:	callq  412b30 <sk_value@plt>
  45218e:	mov    0xc0(%rsp),%r8
  452196:	mov    (%rbx),%rdi
  452199:	lea    0x1bd5c(%rip),%r9        # 46defc <_fini+0x109f8>
  4521a0:	xor    %ecx,%ecx
  4521a2:	mov    %r14,%rsi
  4521a5:	mov    $0x3,%edx
  4521aa:	mov    %rax,%r13
  4521ad:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  4521b2:	test   %rax,%rax
  4521b5:	mov    %rax,%r14
  4521b8:	je     4525aa <X509_get0_pubkey_bitstr@plt+0x3bbda>
  4521be:	lea    0x1bcec(%rip),%rax        # 46deb1 <_fini+0x109ad>
  4521c5:	mov    0xc0(%rsp),%r9
  4521cd:	mov    0xf8(%rsp),%r8
  4521d5:	mov    0x5c(%rsp),%edx
  4521d9:	xor    %ecx,%ecx
  4521db:	mov    %r13,%rsi
  4521de:	mov    %rax,(%rsp)
  4521e2:	mov    (%rbx),%rdi
  4521e5:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  4521ea:	test   %rax,%rax
  4521ed:	mov    %rax,%r15
  4521f0:	je     4525aa <X509_get0_pubkey_bitstr@plt+0x3bbda>
  4521f6:	mov    0x50(%rsp),%r8d
  4521fb:	mov    0x60(%rsp),%rcx
  452200:	mov    %rax,%rdx
  452203:	mov    0x68(%rsp),%rdi
  452208:	mov    %r14,%rsi
  45220b:	callq  4153c0 <PKCS7_sign_add_signer@plt>
  452210:	test   %rax,%rax
  452213:	je     4525aa <X509_get0_pubkey_bitstr@plt+0x3bbda>
  452219:	mov    %r14,%rdi
  45221c:	add    $0x1,%ebp
  45221f:	callq  4153a0 <X509_free@plt>
  452224:	mov    %r15,%rdi
  452227:	xor    %r15d,%r15d
  45222a:	callq  412b00 <EVP_PKEY_free@plt>
  45222f:	mov    %r12,%rdi
  452232:	callq  4156d0 <sk_num@plt>
  452237:	cmp    %eax,%ebp
  452239:	jl     452170 <X509_get0_pubkey_bitstr@plt+0x3b7a0>
  45223f:	mov    0x70(%rsp),%ebp
  452243:	mov    0x68(%rsp),%r13
  452248:	cmp    $0x53,%ebp
  45224b:	je     452a88 <X509_get0_pubkey_bitstr@plt+0x3c0b8>
  452251:	test   %r13,%r13
  452254:	je     452551 <X509_get0_pubkey_bitstr@plt+0x3bb81>
  45225a:	cmpb   $0x0,0xd8(%rsp)
  452262:	jne    452960 <X509_get0_pubkey_bitstr@plt+0x3bf90>
  452268:	cmp    $0x24,%ebp
  45226b:	je     452893 <X509_get0_pubkey_bitstr@plt+0x3bec3>
  452271:	cmp    $0x35,%ebp
  452274:	je     45287b <X509_get0_pubkey_bitstr@plt+0x3beab>
  45227a:	mov    0x98(%rsp),%rdx
  452282:	test   %rdx,%rdx
  452285:	je     45229a <X509_get0_pubkey_bitstr@plt+0x3b8ca>
  452287:	mov    0x18(%rsp),%rdi
  45228c:	lea    0x1bcab(%rip),%rsi        # 46df3e <_fini+0x10a3a>
  452293:	xor    %eax,%eax
  452295:	callq  413c40 <BIO_printf@plt>
  45229a:	mov    0xa0(%rsp),%rdx
  4522a2:	test   %rdx,%rdx
  4522a5:	je     4522ba <X509_get0_pubkey_bitstr@plt+0x3b8ea>
  4522a7:	mov    0x18(%rsp),%rdi
  4522ac:	lea    0x1bc93(%rip),%rsi        # 46df46 <_fini+0x10a42>
  4522b3:	xor    %eax,%eax
  4522b5:	callq  413c40 <BIO_printf@plt>
  4522ba:	mov    0xa8(%rsp),%rdx
  4522c2:	test   %rdx,%rdx
  4522c5:	je     4522da <X509_get0_pubkey_bitstr@plt+0x3b90a>
  4522c7:	mov    0x18(%rsp),%rdi
  4522cc:	lea    0x1bc7d(%rip),%rsi        # 46df50 <_fini+0x10a4c>
  4522d3:	xor    %eax,%eax
  4522d5:	callq  413c40 <BIO_printf@plt>
  4522da:	cmpl   $0x6,0x88(%rsp)
  4522e2:	je     452804 <X509_get0_pubkey_bitstr@plt+0x3be34>
  4522e8:	cmpl   $0x3,0x88(%rsp)
  4522f0:	je     4529c9 <X509_get0_pubkey_bitstr@plt+0x3bff9>
  4522f6:	cmpl   $0x1,0x88(%rsp)
  4522fe:	lea    0x1c5bb(%rip),%rsi        # 46e8c0 <_fini+0x113bc>
  452305:	je     452a68 <X509_get0_pubkey_bitstr@plt+0x3c098>
  45230b:	mov    (%rbx),%rdi
  45230e:	xor    %eax,%eax
  452310:	xor    %r14d,%r14d
  452313:	mov    $0x4,%ebp
  452318:	callq  413c40 <BIO_printf@plt>
  45231d:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  452322:	movq   $0x0,0x38(%rsp)
  45232b:	jmpq   451d78 <X509_get0_pubkey_bitstr@plt+0x3b3a8>
  452330:	cmpq   $0x0,0x70(%rsp)
  452336:	jne    4523b7 <X509_get0_pubkey_bitstr@plt+0x3b9e7>
  452338:	cmpq   $0x0,0x18(%rsp)
  45233e:	je     4526b9 <X509_get0_pubkey_bitstr@plt+0x3bce9>
  452344:	lea    0x1bb66(%rip),%rax        # 46deb1 <_fini+0x109ad>
  45234b:	mov    0xc0(%rsp),%r9
  452353:	mov    0xf8(%rsp),%r8
  45235b:	mov    0x5c(%rsp),%edx
  45235f:	mov    0x18(%rsp),%rsi
  452364:	xor    %ecx,%ecx
  452366:	mov    %rax,(%rsp)
  45236a:	mov    (%rbx),%rdi
  45236d:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  452372:	test   %rax,%rax
  452375:	mov    %rax,%r15
  452378:	jne    451d9e <X509_get0_pubkey_bitstr@plt+0x3b3ce>
  45237e:	movq   $0x0,0x18(%rsp)
  452387:	movq   $0x0,0x28(%rsp)
  452390:	xor    %r14d,%r14d
  452393:	movq   $0x0,0x20(%rsp)
  45239c:	xor    %r13d,%r13d
  45239f:	mov    $0x2,%ebp
  4523a4:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  4523a9:	movq   $0x0,0x40(%rsp)
  4523b2:	jmpq   451d3e <X509_get0_pubkey_bitstr@plt+0x3b36e>
  4523b7:	mov    0xc0(%rsp),%r8
  4523bf:	mov    0x70(%rsp),%rsi
  4523c4:	lea    0x1bacb(%rip),%r9        # 46de96 <_fini+0x10992>
  4523cb:	mov    (%rbx),%rdi
  4523ce:	xor    %ecx,%ecx
  4523d0:	mov    $0x3,%edx
  4523d5:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  4523da:	test   %rax,%rax
  4523dd:	mov    %rax,0x30(%rsp)
  4523e2:	jne    452338 <X509_get0_pubkey_bitstr@plt+0x3b968>
  4523e8:	mov    (%rbx),%rdi
  4523eb:	xor    %r15d,%r15d
  4523ee:	xor    %r14d,%r14d
  4523f1:	xor    %r13d,%r13d
  4523f4:	mov    $0x2,%bpl
  4523f7:	callq  413f40 <ERR_print_errors@plt>
  4523fc:	movq   $0x0,0x18(%rsp)
  452405:	movq   $0x0,0x28(%rsp)
  45240e:	movq   $0x0,0x20(%rsp)
  452417:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  45241c:	callq  415dd0 <EVP_rc2_40_cbc@plt>
  452421:	mov    0xe8(%rsp),%r15
  452429:	mov    %rax,0x20(%rsp)
  45242e:	mov    0xe4(%rsp),%edx
  452435:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  45243a:	cmpq   $0x0,0x18(%rsp)
  452440:	jne    452344 <X509_get0_pubkey_bitstr@plt+0x3b974>
  452446:	mov    0x48(%rsp),%rax
  45244b:	mov    %rax,0x18(%rsp)
  452450:	cmpq   $0x0,0x18(%rsp)
  452456:	jne    452344 <X509_get0_pubkey_bitstr@plt+0x3b974>
  45245c:	xor    %r15d,%r15d
  45245f:	jmpq   451d9e <X509_get0_pubkey_bitstr@plt+0x3b3ce>
  452464:	nopl   0x0(%rax)
  452468:	mov    0x28(%rsp),%ebp
  45246c:	jmpq   451d3e <X509_get0_pubkey_bitstr@plt+0x3b36e>
  452471:	mov    (%rbx),%rdi
  452474:	lea    0x1bb4d(%rip),%rsi        # 46dfc8 <_fini+0x10ac4>
  45247b:	xor    %eax,%eax
  45247d:	callq  413c40 <BIO_printf@plt>
  452482:	movl   $0x1,0xe4(%rsp)
  45248d:	movl   $0x1,0x58(%rsp)
  452495:	jmpq   451591 <X509_get0_pubkey_bitstr@plt+0x3abc1>
  45249a:	callq  414da0 <EVP_rc2_cbc@plt>
  45249f:	mov    0xe8(%rsp),%r15
  4524a7:	mov    %rax,0x20(%rsp)
  4524ac:	mov    0xe4(%rsp),%edx
  4524b3:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  4524b8:	callq  412cd0 <sk_new_null@plt>
  4524bd:	mov    %rax,0x10(%rsp)
  4524c2:	jmpq   451c36 <X509_get0_pubkey_bitstr@plt+0x3b266>
  4524c7:	callq  412cd0 <sk_new_null@plt>
  4524cc:	mov    %rax,%r12
  4524cf:	jmpq   451c1d <X509_get0_pubkey_bitstr@plt+0x3b24d>
  4524d4:	mov    0x223a35(%rip),%rax        # 675f10 <_fini+0x218a0c>
  4524db:	xor    %esi,%esi
  4524dd:	mov    (%rax),%rdi
  4524e0:	callq  4161e0 <BIO_new_fp@plt>
  4524e5:	mov    %rax,0x28(%rsp)
  4524ea:	jmpq   451dc2 <X509_get0_pubkey_bitstr@plt+0x3b3f2>
  4524ef:	callq  412ee0 <EVP_rc2_64_cbc@plt>
  4524f4:	mov    0xe8(%rsp),%r15
  4524fc:	mov    %rax,0x20(%rsp)
  452501:	mov    0xe4(%rsp),%edx
  452508:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  45250d:	mov    0x50(%rsp),%edx
  452511:	mov    0x8c(%rsp),%esi
  452518:	mov    0x40(%rsp),%rdi
  45251d:	mov    %edx,%eax
  45251f:	or     $0x10,%ah
  452522:	test   %esi,%esi
  452524:	mov    0x28(%rsp),%rsi
  452529:	cmove  %edx,%eax
  45252c:	mov    0x20(%rsp),%rdx
  452531:	mov    %eax,%ecx
  452533:	mov    %eax,0x50(%rsp)
  452537:	callq  416580 <PKCS7_encrypt@plt>
  45253c:	movq   $0x0,0x20(%rsp)
  452545:	mov    %rax,%r13
  452548:	test   %r13,%r13
  45254b:	jne    45227a <X509_get0_pubkey_bitstr@plt+0x3b8aa>
  452551:	mov    (%rbx),%rdi
  452554:	lea    0x1c315(%rip),%rsi        # 46e870 <_fini+0x1136c>
  45255b:	xor    %eax,%eax
  45255d:	xor    %r14d,%r14d
  452560:	xor    %r13d,%r13d
  452563:	mov    $0x3,%ebp
  452568:	callq  413c40 <BIO_printf@plt>
  45256d:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  452572:	mov    (%rbx),%rdi
  452575:	callq  413f40 <ERR_print_errors@plt>
  45257a:	movq   $0x0,0x18(%rsp)
  452583:	movq   $0x0,0x28(%rsp)
  45258c:	jmpq   45203d <X509_get0_pubkey_bitstr@plt+0x3b66d>
  452591:	mov    0x78(%rsp),%rdx
  452596:	mov    (%rbx),%rdi
  452599:	lea    0x1a051(%rip),%rsi        # 46c5f1 <_fini+0xf0ed>
  4525a0:	callq  413c40 <BIO_printf@plt>
  4525a5:	jmpq   451e03 <X509_get0_pubkey_bitstr@plt+0x3b433>
  4525aa:	mov    0x68(%rsp),%r13
  4525af:	mov    $0x3,%ebp
  4525b4:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  4525b9:	mov    0x2238f8(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  4525c0:	xor    %esi,%esi
  4525c2:	mov    (%rax),%rdi
  4525c5:	callq  4161e0 <BIO_new_fp@plt>
  4525ca:	mov    %rax,0x18(%rsp)
  4525cf:	jmpq   452120 <X509_get0_pubkey_bitstr@plt+0x3b750>
  4525d4:	callq  412f60 <EVP_aes_128_cbc@plt>
  4525d9:	mov    0xe8(%rsp),%r15
  4525e1:	mov    %rax,0x20(%rsp)
  4525e6:	mov    0xe4(%rsp),%edx
  4525ed:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  4525f2:	mov    0xb8(%rsp),%rdx
  4525fa:	mov    0xb0(%rsp),%rsi
  452602:	mov    (%rbx),%rdi
  452605:	callq  446880 <X509_get0_pubkey_bitstr@plt+0x2feb0>
  45260a:	test   %rax,%rax
  45260d:	mov    %rax,0x20(%rsp)
  452612:	je     45285f <X509_get0_pubkey_bitstr@plt+0x3be8f>
  452618:	lea    -0x139f(%rip),%rsi        # 451280 <X509_get0_pubkey_bitstr@plt+0x3a8b0>
  45261f:	mov    %rax,%rdi
  452622:	callq  416470 <X509_STORE_set_verify_cb@plt>
  452627:	mov    0x100(%rsp),%rsi
  45262f:	test   %rsi,%rsi
  452632:	je     45263e <X509_get0_pubkey_bitstr@plt+0x3bc6e>
  452634:	mov    0x20(%rsp),%rdi
  452639:	callq  4159e0 <X509_STORE_set1_param@plt>
  45263e:	test   %r14d,%r14d
  452641:	jne    45214d <X509_get0_pubkey_bitstr@plt+0x3b77d>
  452647:	jmpq   452251 <X509_get0_pubkey_bitstr@plt+0x3b881>
  45264c:	nopl   0x0(%rax)
  452650:	callq  4131e0 <EVP_aes_192_cbc@plt>
  452655:	mov    0xe8(%rsp),%r15
  45265d:	mov    %rax,0x20(%rsp)
  452662:	mov    0xe4(%rsp),%edx
  452669:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  45266e:	callq  4129c0 <EVP_aes_256_cbc@plt>
  452673:	mov    0xe8(%rsp),%r15
  45267b:	mov    %rax,0x20(%rsp)
  452680:	mov    0xe4(%rsp),%edx
  452687:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  45268c:	mov    0x80(%rsp),%rdx
  452694:	mov    (%rbx),%rdi
  452697:	lea    0x13ccd(%rip),%rsi        # 46636b <_fini+0x8e67>
  45269e:	xor    %r14d,%r14d
  4526a1:	mov    $0x2,%ebp
  4526a6:	callq  413c40 <BIO_printf@plt>
  4526ab:	movq   $0x0,0x20(%rsp)
  4526b4:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  4526b9:	mov    0x70(%rsp),%rax
  4526be:	mov    %rax,0x18(%rsp)
  4526c3:	jmpq   452450 <X509_get0_pubkey_bitstr@plt+0x3ba80>
  4526c8:	mov    0x50(%rsp),%edx
  4526cc:	mov    %edx,%eax
  4526ce:	or     $0x10,%ah
  4526d1:	testb  $0x40,0x50(%rsp)
  4526d6:	je     4529b4 <X509_get0_pubkey_bitstr@plt+0x3bfe4>
  4526dc:	cmpl   $0x6,0x88(%rsp)
  4526e4:	cmovne %edx,%eax
  4526e7:	mov    %eax,0x50(%rsp)
  4526eb:	orl    $0x4000,0x50(%rsp)
  4526f3:	mov    0x28(%rsp),%rcx
  4526f8:	xor    %esi,%esi
  4526fa:	mov    0x50(%rsp),%r8d
  4526ff:	mov    0x38(%rsp),%rdx
  452704:	xor    %edi,%edi
  452706:	callq  415920 <PKCS7_sign@plt>
  45270b:	test   %rax,%rax
  45270e:	mov    %rax,%r13
  452711:	je     45299e <X509_get0_pubkey_bitstr@plt+0x3bfce>
  452717:	movq   $0x0,0x20(%rsp)
  452720:	jmpq   452155 <X509_get0_pubkey_bitstr@plt+0x3b785>
  452725:	mov    (%rbx),%rdi
  452728:	lea    0x1b8f1(%rip),%rsi        # 46e020 <_fini+0x10b1c>
  45272f:	xor    %eax,%eax
  452731:	callq  413c40 <BIO_printf@plt>
  452736:	movl   $0x1,0xe4(%rsp)
  452741:	movl   $0x1,0x58(%rsp)
  452749:	movq   $0x0,0x10(%rsp)
  452752:	jmpq   451591 <X509_get0_pubkey_bitstr@plt+0x3abc1>
  452757:	mov    0x28(%rsp),%rdi
  45275c:	xor    %ecx,%ecx
  45275e:	xor    %edx,%edx
  452760:	xor    %esi,%esi
  452762:	callq  415b60 <PEM_read_bio_PKCS7@plt>
  452767:	mov    %rax,%r13
  45276a:	test   %r13,%r13
  45276d:	je     452ae5 <X509_get0_pubkey_bitstr@plt+0x3c115>
  452773:	cmpq   $0x0,0x90(%rsp)
  45277c:	je     4520f4 <X509_get0_pubkey_bitstr@plt+0x3b724>
  452782:	mov    0xf0(%rsp),%rdi
  45278a:	callq  413960 <BIO_free@plt>
  45278f:	mov    0x90(%rsp),%rdi
  452797:	lea    0xd243(%rip),%rsi        # 45f9e1 <_fini+0x24dd>
  45279e:	callq  412ba0 <BIO_new_file@plt>
  4527a3:	test   %rax,%rax
  4527a6:	mov    %rax,0xf0(%rsp)
  4527ae:	jne    4520f4 <X509_get0_pubkey_bitstr@plt+0x3b724>
  4527b4:	mov    0x90(%rsp),%rdx
  4527bc:	mov    (%rbx),%rdi
  4527bf:	lea    0x1b71a(%rip),%rsi        # 46dee0 <_fini+0x109dc>
  4527c6:	xor    %r14d,%r14d
  4527c9:	mov    $0x2,%ebp
  4527ce:	callq  413c40 <BIO_printf@plt>
  4527d3:	movq   $0x0,0x18(%rsp)
  4527dc:	movq   $0x0,0x20(%rsp)
  4527e5:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  4527ea:	mov    0x28(%rsp),%rdi
  4527ef:	lea    0xf0(%rsp),%rsi
  4527f7:	callq  412f30 <SMIME_read_PKCS7@plt>
  4527fc:	mov    %rax,%r13
  4527ff:	jmpq   45276a <X509_get0_pubkey_bitstr@plt+0x3bd9a>
  452804:	cmp    $0x76,%ebp
  452807:	mov    0x50(%rsp),%ecx
  45280b:	je     452ac5 <X509_get0_pubkey_bitstr@plt+0x3c0f5>
  452811:	mov    0x28(%rsp),%rdx
  452816:	mov    0x18(%rsp),%rdi
  45281b:	mov    %r13,%rsi
  45281e:	xor    %r14d,%r14d
  452821:	xor    %ebp,%ebp
  452823:	callq  414f80 <SMIME_write_PKCS7@plt>
  452828:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  45282d:	mov    0x28(%rsp),%rdi
  452832:	xor    %esi,%esi
  452834:	callq  413b50 <d2i_PKCS7_bio@plt>
  452839:	mov    %rax,%r13
  45283c:	jmpq   45276a <X509_get0_pubkey_bitstr@plt+0x3bd9a>
  452841:	callq  415f60 <EVP_camellia_128_cbc@plt>
  452846:	mov    0xe8(%rsp),%r15
  45284e:	mov    %rax,0x20(%rsp)
  452853:	mov    0xe4(%rsp),%edx
  45285a:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  45285f:	xor    %r14d,%r14d
  452862:	mov    $0x2,%ebp
  452867:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  45286c:	callq  415dd0 <EVP_rc2_40_cbc@plt>
  452871:	mov    %rax,0x20(%rsp)
  452876:	jmpq   451fa2 <X509_get0_pubkey_bitstr@plt+0x3b5d2>
  45287b:	mov    0x18(%rsp),%rdi
  452880:	mov    %r13,%rsi
  452883:	xor    %r14d,%r14d
  452886:	xor    %bpl,%bpl
  452889:	callq  414de0 <PEM_write_bio_PKCS7@plt>
  45288e:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  452893:	mov    0x38(%rsp),%rsi
  452898:	mov    0x50(%rsp),%r9d
  45289d:	mov    %r13,%rdi
  4528a0:	mov    0x18(%rsp),%r8
  4528a5:	mov    0xf0(%rsp),%rcx
  4528ad:	mov    0x20(%rsp),%rdx
  4528b2:	callq  414bc0 <PKCS7_verify@plt>
  4528b7:	test   %eax,%eax
  4528b9:	lea    0x1b668(%rip),%rsi        # 46df28 <_fini+0x10a24>
  4528c0:	je     45230b <X509_get0_pubkey_bitstr@plt+0x3b93b>
  4528c6:	mov    (%rbx),%rdi
  4528c9:	lea    0x1b63f(%rip),%rsi        # 46df0f <_fini+0x10a0b>
  4528d0:	xor    %eax,%eax
  4528d2:	callq  413c40 <BIO_printf@plt>
  4528d7:	mov    0x50(%rsp),%edx
  4528db:	mov    0x38(%rsp),%rsi
  4528e0:	mov    %r13,%rdi
  4528e3:	callq  415480 <PKCS7_get0_signers@plt>
  4528e8:	mov    0x48(%rsp),%rdi
  4528ed:	mov    %rax,0x50(%rsp)
  4528f2:	test   %rdi,%rdi
  4528f5:	je     452947 <X509_get0_pubkey_bitstr@plt+0x3bf77>
  4528f7:	lea    0x10d1a(%rip),%rsi        # 463618 <_fini+0x6114>
  4528fe:	callq  412ba0 <BIO_new_file@plt>
  452903:	test   %rax,%rax
  452906:	mov    %rax,%rbp
  452909:	je     452b15 <X509_get0_pubkey_bitstr@plt+0x3c145>
  45290f:	xor    %r14d,%r14d
  452912:	jmp    452930 <X509_get0_pubkey_bitstr@plt+0x3bf60>
  452914:	mov    0x50(%rsp),%rdi
  452919:	mov    %r14d,%esi
  45291c:	add    $0x1,%r14d
  452920:	callq  412b30 <sk_value@plt>
  452925:	mov    %rbp,%rdi
  452928:	mov    %rax,%rsi
  45292b:	callq  413490 <PEM_write_bio_X509@plt>
  452930:	mov    0x50(%rsp),%rdi
  452935:	callq  4156d0 <sk_num@plt>
  45293a:	cmp    %eax,%r14d
  45293d:	jl     452914 <X509_get0_pubkey_bitstr@plt+0x3bf44>
  45293f:	mov    %rbp,%rdi
  452942:	callq  413960 <BIO_free@plt>
  452947:	mov    0x50(%rsp),%rdi
  45294c:	xor    %r14d,%r14d
  45294f:	xor    %ebp,%ebp
  452951:	callq  4143f0 <sk_free@plt>
  452956:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  45295b:	nopl   0x0(%rax,%rax,1)
  452960:	mov    0x50(%rsp),%r8d
  452965:	mov    0x18(%rsp),%rcx
  45296a:	mov    %r15,%rsi
  45296d:	mov    0x30(%rsp),%rdx
  452972:	mov    %r13,%rdi
  452975:	xor    %r14d,%r14d
  452978:	xor    %ebp,%ebp
  45297a:	callq  4158a0 <PKCS7_decrypt@plt>
  45297f:	test   %eax,%eax
  452981:	jne    451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  452987:	mov    (%rbx),%rdi
  45298a:	lea    0x1bf07(%rip),%rsi        # 46e898 <_fini+0x11394>
  452991:	mov    $0x4,%bpl
  452994:	callq  413c40 <BIO_printf@plt>
  452999:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  45299e:	xor    %r14d,%r14d
  4529a1:	movq   $0x0,0x20(%rsp)
  4529aa:	mov    $0x3,%ebp
  4529af:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  4529b4:	mov    0x8c(%rsp),%ecx
  4529bb:	test   %ecx,%ecx
  4529bd:	cmove  %edx,%eax
  4529c0:	mov    %eax,0x50(%rsp)
  4529c4:	jmpq   4526eb <X509_get0_pubkey_bitstr@plt+0x3bd1b>
  4529c9:	mov    0x50(%rsp),%ecx
  4529cd:	mov    0x28(%rsp),%rdx
  4529d2:	mov    %r13,%rsi
  4529d5:	mov    0x18(%rsp),%rdi
  4529da:	xor    %r14d,%r14d
  4529dd:	xor    %ebp,%ebp
  4529df:	callq  413100 <PEM_write_bio_PKCS7_stream@plt>
  4529e4:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  4529e9:	callq  413460 <EVP_camellia_192_cbc@plt>
  4529ee:	mov    0xe8(%rsp),%r15
  4529f6:	mov    %rax,0x20(%rsp)
  4529fb:	mov    0xe4(%rsp),%edx
  452a02:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  452a07:	lea    0x1b34e(%rip),%rdi        # 46dd5c <_fini+0x10858>
  452a0e:	mov    $0xa,%ecx
  452a13:	mov    %r13,%rsi
  452a16:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  452a18:	jne    452a42 <X509_get0_pubkey_bitstr@plt+0x3c072>
  452a1a:	orl    $0x10,0x50(%rsp)
  452a1f:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  452a24:	callq  4160b0 <EVP_camellia_256_cbc@plt>
  452a29:	mov    0xe8(%rsp),%r15
  452a31:	mov    %rax,0x20(%rsp)
  452a36:	mov    0xe4(%rsp),%edx
  452a3d:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  452a42:	lea    0xdd88(%rip),%rdi        # 4607d1 <_fini+0x32cd>
  452a49:	mov    $0xa,%ecx
  452a4e:	mov    %r13,%rsi
  452a51:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  452a53:	jne    452b38 <X509_get0_pubkey_bitstr@plt+0x3c168>
  452a59:	orl    $0x20,0x50(%rsp)
  452a5e:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  452a63:	nopl   0x0(%rax,%rax,1)
  452a68:	mov    0x50(%rsp),%ecx
  452a6c:	mov    0x28(%rsp),%rdx
  452a71:	mov    %r13,%rsi
  452a74:	mov    0x18(%rsp),%rdi
  452a79:	xor    %r14d,%r14d
  452a7c:	xor    %ebp,%ebp
  452a7e:	callq  4150d0 <i2d_PKCS7_bio_stream@plt>
  452a83:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  452a88:	testl  $0x1000,0x50(%rsp)
  452a90:	jne    452548 <X509_get0_pubkey_bitstr@plt+0x3bb78>
  452a96:	mov    0x50(%rsp),%edx
  452a9a:	mov    0x28(%rsp),%rsi
  452a9f:	mov    %r13,%rdi
  452aa2:	callq  4155e0 <PKCS7_final@plt>
  452aa7:	test   %eax,%eax
  452aa9:	jne    452548 <X509_get0_pubkey_bitstr@plt+0x3bb78>
  452aaf:	xor    %r14d,%r14d
  452ab2:	mov    $0x3,%ebp
  452ab7:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  452abc:	nopl   0x0(%rax)
  452ac0:	callq  414c30 <__stack_chk_fail@plt>
  452ac5:	mov    0xf0(%rsp),%rdx
  452acd:	mov    0x18(%rsp),%rdi
  452ad2:	mov    %r13,%rsi
  452ad5:	xor    %r14d,%r14d
  452ad8:	xor    %bpl,%bpl
  452adb:	callq  414f80 <SMIME_write_PKCS7@plt>
  452ae0:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  452ae5:	mov    (%rbx),%rdi
  452ae8:	lea    0x1b3d3(%rip),%rsi        # 46dec2 <_fini+0x109be>
  452aef:	xor    %eax,%eax
  452af1:	xor    %r14d,%r14d
  452af4:	mov    $0x2,%ebp
  452af9:	callq  413c40 <BIO_printf@plt>
  452afe:	movq   $0x0,0x18(%rsp)
  452b07:	movq   $0x0,0x20(%rsp)
  452b10:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  452b15:	mov    0x48(%rsp),%rdx
  452b1a:	mov    (%rbx),%rdi
  452b1d:	lea    0x1b439(%rip),%rsi        # 46df5d <_fini+0x10a59>
  452b24:	xor    %eax,%eax
  452b26:	xor    %r14d,%r14d
  452b29:	mov    $0x5,%ebp
  452b2e:	callq  413c40 <BIO_printf@plt>
  452b33:	jmpq   451923 <X509_get0_pubkey_bitstr@plt+0x3af53>
  452b38:	lea    0x1b227(%rip),%rsi        # 46dd66 <_fini+0x10862>
  452b3f:	mov    %r13,%rdi
  452b42:	mov    %edx,0xd8(%rsp)
  452b49:	callq  4155c0 <strcmp@plt>
  452b4e:	test   %eax,%eax
  452b50:	mov    0xd8(%rsp),%edx
  452b57:	jne    452b63 <X509_get0_pubkey_bitstr@plt+0x3c193>
  452b59:	orl    $0x8,0x50(%rsp)
  452b5e:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  452b63:	lea    0x19c9c(%rip),%rsi        # 46c806 <_fini+0xf302>
  452b6a:	mov    %r13,%rdi
  452b6d:	mov    %edx,0xd8(%rsp)
  452b74:	callq  4155c0 <strcmp@plt>
  452b79:	test   %eax,%eax
  452b7b:	mov    0xd8(%rsp),%edx
  452b82:	jne    452b8e <X509_get0_pubkey_bitstr@plt+0x3c1be>
  452b84:	orl    $0x2,0x50(%rsp)
  452b89:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  452b8e:	lea    0x1b1da(%rip),%rsi        # 46dd6f <_fini+0x1086b>
  452b95:	mov    %r13,%rdi
  452b98:	mov    %edx,0xd8(%rsp)
  452b9f:	callq  4155c0 <strcmp@plt>
  452ba4:	test   %eax,%eax
  452ba6:	mov    0xd8(%rsp),%edx
  452bad:	jne    452bbc <X509_get0_pubkey_bitstr@plt+0x3c1ec>
  452baf:	orl    $0x100,0x50(%rsp)
  452bb7:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  452bbc:	lea    0x1b1b4(%rip),%rsi        # 46dd77 <_fini+0x10873>
  452bc3:	mov    %r13,%rdi
  452bc6:	mov    %edx,0xd8(%rsp)
  452bcd:	callq  4155c0 <strcmp@plt>
  452bd2:	test   %eax,%eax
  452bd4:	mov    0xd8(%rsp),%edx
  452bdb:	jne    452be7 <X509_get0_pubkey_bitstr@plt+0x3c217>
  452bdd:	andl   $0xffffffbf,0x50(%rsp)
  452be2:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  452be7:	lea    0x1b193(%rip),%rsi        # 46dd81 <_fini+0x1087d>
  452bee:	mov    %r13,%rdi
  452bf1:	mov    %edx,0xd8(%rsp)
  452bf8:	callq  4155c0 <strcmp@plt>
  452bfd:	test   %eax,%eax
  452bff:	mov    0xd8(%rsp),%edx
  452c06:	jne    452c15 <X509_get0_pubkey_bitstr@plt+0x3c245>
  452c08:	orl    $0x200,0x50(%rsp)
  452c10:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  452c15:	lea    0xccc6(%rip),%rsi        # 45f8e2 <_fini+0x23de>
  452c1c:	mov    %r13,%rdi
  452c1f:	mov    %edx,0xd8(%rsp)
  452c26:	callq  4155c0 <strcmp@plt>
  452c2b:	test   %eax,%eax
  452c2d:	mov    0xd8(%rsp),%edx
  452c34:	jne    452c43 <X509_get0_pubkey_bitstr@plt+0x3c273>
  452c36:	orl    $0x80,0x50(%rsp)
  452c3e:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  452c43:	lea    0x1b143(%rip),%rsi        # 46dd8d <_fini+0x10889>
  452c4a:	mov    %r13,%rdi
  452c4d:	mov    %edx,0xd8(%rsp)
  452c54:	callq  4155c0 <strcmp@plt>
  452c59:	test   %eax,%eax
  452c5b:	mov    0xd8(%rsp),%edx
  452c62:	jne    452c6e <X509_get0_pubkey_bitstr@plt+0x3c29e>
  452c64:	orl    $0x4,0x50(%rsp)
  452c69:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  452c6e:	lea    0x1b120(%rip),%rsi        # 46dd95 <_fini+0x10891>
  452c75:	mov    %r13,%rdi
  452c78:	mov    %edx,0xd8(%rsp)
  452c7f:	callq  4155c0 <strcmp@plt>
  452c84:	test   %eax,%eax
  452c86:	mov    0xd8(%rsp),%edx
  452c8d:	je     452cea <X509_get0_pubkey_bitstr@plt+0x3c31a>
  452c8f:	lea    0x1b107(%rip),%rsi        # 46dd9d <_fini+0x10899>
  452c96:	mov    %r13,%rdi
  452c99:	callq  4155c0 <strcmp@plt>
  452c9e:	test   %eax,%eax
  452ca0:	mov    0xd8(%rsp),%edx
  452ca7:	je     452cea <X509_get0_pubkey_bitstr@plt+0x3c31a>
  452ca9:	lea    0x1b0f4(%rip),%rsi        # 46dda4 <_fini+0x108a0>
  452cb0:	mov    %r13,%rdi
  452cb3:	callq  4155c0 <strcmp@plt>
  452cb8:	test   %eax,%eax
  452cba:	mov    0xd8(%rsp),%edx
  452cc1:	je     452d28 <X509_get0_pubkey_bitstr@plt+0x3c358>
  452cc3:	lea    0x1b0e3(%rip),%rsi        # 46ddad <_fini+0x108a9>
  452cca:	mov    %r13,%rdi
  452ccd:	callq  4155c0 <strcmp@plt>
  452cd2:	test   %eax,%eax
  452cd4:	mov    0xd8(%rsp),%edx
  452cdb:	jne    452cfa <X509_get0_pubkey_bitstr@plt+0x3c32a>
  452cdd:	orl    $0x400,0x50(%rsp)
  452ce5:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  452cea:	movl   $0x1,0x8c(%rsp)
  452cf5:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  452cfa:	lea    0x1b0b7(%rip),%rsi        # 46ddb8 <_fini+0x108b4>
  452d01:	mov    %r13,%rdi
  452d04:	mov    %edx,0xd8(%rsp)
  452d0b:	callq  4155c0 <strcmp@plt>
  452d10:	test   %eax,%eax
  452d12:	mov    0xd8(%rsp),%edx
  452d19:	jne    452d38 <X509_get0_pubkey_bitstr@plt+0x3c368>
  452d1b:	orl    $0x800,0x50(%rsp)
  452d23:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  452d28:	movl   $0x0,0x8c(%rsp)
  452d33:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  452d38:	lea    0xb4c2(%rip),%rsi        # 45e201 <_fini+0xcfd>
  452d3f:	mov    %r13,%rdi
  452d42:	mov    %edx,0xd8(%rsp)
  452d49:	callq  4155c0 <strcmp@plt>
  452d4e:	test   %eax,%eax
  452d50:	mov    0xd8(%rsp),%edx
  452d57:	jne    452d7c <X509_get0_pubkey_bitstr@plt+0x3c3ac>
  452d59:	mov    0x8(%r15),%rax
  452d5d:	test   %rax,%rax
  452d60:	mov    %rax,0x40(%rsp)
  452d65:	je     451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  452d6b:	add    $0x8,%r15
  452d6f:	movl   $0x1,0x58(%rsp)
  452d77:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  452d7c:	lea    0xaddf(%rip),%rsi        # 45db62 <_fini+0x65e>
  452d83:	mov    %r13,%rdi
  452d86:	mov    %edx,0xd8(%rsp)
  452d8d:	callq  4155c0 <strcmp@plt>
  452d92:	test   %eax,%eax
  452d94:	mov    0xd8(%rsp),%edx
  452d9b:	jne    452db8 <X509_get0_pubkey_bitstr@plt+0x3c3e8>
  452d9d:	mov    0x8(%r15),%rax
  452da1:	test   %rax,%rax
  452da4:	mov    %rax,0x30(%rsp)
  452da9:	je     451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  452daf:	add    $0x8,%r15
  452db3:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  452db8:	lea    0xb431(%rip),%rsi        # 45e1f0 <_fini+0xcec>
  452dbf:	mov    %r13,%rdi
  452dc2:	mov    %edx,0xd8(%rsp)
  452dc9:	callq  4155c0 <strcmp@plt>
  452dce:	test   %eax,%eax
  452dd0:	mov    0xd8(%rsp),%edx
  452dd7:	jne    452dec <X509_get0_pubkey_bitstr@plt+0x3c41c>
  452dd9:	mov    0x8(%r15),%rax
  452ddd:	test   %rax,%rax
  452de0:	mov    %rax,0x28(%rsp)
  452de5:	jne    452daf <X509_get0_pubkey_bitstr@plt+0x3c3df>
  452de7:	jmpq   451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  452dec:	movzbl 0x1(%r13),%eax
  452df1:	cmp    $0x74,%al
  452df3:	mov    %al,0xd8(%rsp)
  452dfa:	jne    452e20 <X509_get0_pubkey_bitstr@plt+0x3c450>
  452dfc:	cmpb   $0x6f,0x2(%r13)
  452e01:	jne    452e20 <X509_get0_pubkey_bitstr@plt+0x3c450>
  452e03:	cmpb   $0x0,0x3(%r13)
  452e08:	jne    452e20 <X509_get0_pubkey_bitstr@plt+0x3c450>
  452e0a:	mov    0x8(%r15),%rax
  452e0e:	test   %rax,%rax
  452e11:	mov    %rax,0x98(%rsp)
  452e19:	jne    452daf <X509_get0_pubkey_bitstr@plt+0x3c3df>
  452e1b:	jmpq   451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  452e20:	lea    0x1af9a(%rip),%rsi        # 46ddc1 <_fini+0x108bd>
  452e27:	mov    %r13,%rdi
  452e2a:	mov    %edx,0xdc(%rsp)
  452e31:	callq  4155c0 <strcmp@plt>
  452e36:	test   %eax,%eax
  452e38:	mov    0xdc(%rsp),%edx
  452e3f:	jne    452e5b <X509_get0_pubkey_bitstr@plt+0x3c48b>
  452e41:	mov    0x8(%r15),%rax
  452e45:	test   %rax,%rax
  452e48:	mov    %rax,0xa0(%rsp)
  452e50:	jne    452daf <X509_get0_pubkey_bitstr@plt+0x3c3df>
  452e56:	jmpq   451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  452e5b:	lea    0xb3fc(%rip),%rsi        # 45e25e <_fini+0xd5a>
  452e62:	mov    %r13,%rdi
  452e65:	mov    %edx,0xdc(%rsp)
  452e6c:	callq  4155c0 <strcmp@plt>
  452e71:	test   %eax,%eax
  452e73:	mov    0xdc(%rsp),%edx
  452e7a:	jne    452e96 <X509_get0_pubkey_bitstr@plt+0x3c4c6>
  452e7c:	mov    0x8(%r15),%rax
  452e80:	test   %rax,%rax
  452e83:	mov    %rax,0xa8(%rsp)
  452e8b:	jne    452daf <X509_get0_pubkey_bitstr@plt+0x3c3df>
  452e91:	jmpq   451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  452e96:	lea    0x1af2a(%rip),%rsi        # 46ddc7 <_fini+0x108c3>
  452e9d:	mov    %r13,%rdi
  452ea0:	mov    %edx,0xdc(%rsp)
  452ea7:	callq  4155c0 <strcmp@plt>
  452eac:	test   %eax,%eax
  452eae:	mov    0xdc(%rsp),%edx
  452eb5:	jne    452f47 <X509_get0_pubkey_bitstr@plt+0x3c577>
  452ebb:	cmpq   $0x0,0x8(%r15)
  452ec0:	je     451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  452ec6:	cmpq   $0x0,0x48(%rsp)
  452ecc:	je     452f2e <X509_get0_pubkey_bitstr@plt+0x3c55e>
  452ece:	test   %r12,%r12
  452ed1:	jne    452edb <X509_get0_pubkey_bitstr@plt+0x3c50b>
  452ed3:	callq  412cd0 <sk_new_null@plt>
  452ed8:	mov    %rax,%r12
  452edb:	mov    0x48(%rsp),%r15
  452ee0:	mov    %r12,%rdi
  452ee3:	mov    %r15,%rsi
  452ee6:	callq  412fe0 <sk_push@plt>
  452eeb:	mov    0x18(%rsp),%rax
  452ef0:	test   %rax,%rax
  452ef3:	cmove  %r15,%rax
  452ef7:	cmpq   $0x0,0x10(%rsp)
  452efd:	mov    %rax,0x48(%rsp)
  452f02:	jne    452f0e <X509_get0_pubkey_bitstr@plt+0x3c53e>
  452f04:	callq  412cd0 <sk_new_null@plt>
  452f09:	mov    %rax,0x10(%rsp)
  452f0e:	mov    0x48(%rsp),%rsi
  452f13:	mov    0x10(%rsp),%rdi
  452f18:	callq  412fe0 <sk_push@plt>
  452f1d:	mov    0xe8(%rsp),%r15
  452f25:	movq   $0x0,0x18(%rsp)
  452f2e:	mov    0x8(%r15),%rax
  452f32:	mov    0xe4(%rsp),%edx
  452f39:	add    $0x8,%r15
  452f3d:	mov    %rax,0x48(%rsp)
  452f42:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  452f47:	lea    0x1ae81(%rip),%rsi        # 46ddcf <_fini+0x108cb>
  452f4e:	mov    %r13,%rdi
  452f51:	mov    %edx,0xdc(%rsp)
  452f58:	callq  4155c0 <strcmp@plt>
  452f5d:	test   %eax,%eax
  452f5f:	mov    0xdc(%rsp),%edx
  452f66:	jne    452f7f <X509_get0_pubkey_bitstr@plt+0x3c5af>
  452f68:	mov    0x8(%r15),%rax
  452f6c:	test   %rax,%rax
  452f6f:	mov    %rax,0x70(%rsp)
  452f74:	jne    452daf <X509_get0_pubkey_bitstr@plt+0x3c3df>
  452f7a:	jmpq   451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  452f7f:	cmpb   $0x6d,0xd8(%rsp)
  452f87:	jne    452fd7 <X509_get0_pubkey_bitstr@plt+0x3c607>
  452f89:	cmpb   $0x64,0x2(%r13)
  452f8e:	jne    452fd7 <X509_get0_pubkey_bitstr@plt+0x3c607>
  452f90:	cmpb   $0x0,0x3(%r13)
  452f95:	jne    452fd7 <X509_get0_pubkey_bitstr@plt+0x3c607>
  452f97:	mov    0x8(%r15),%rdi
  452f9b:	test   %rdi,%rdi
  452f9e:	je     451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  452fa4:	add    $0x8,%r15
  452fa8:	mov    %r15,0xe8(%rsp)
  452fb0:	callq  416720 <EVP_get_digestbyname@plt>
  452fb5:	test   %rax,%rax
  452fb8:	mov    %rax,0x60(%rsp)
  452fbd:	je     4530d7 <X509_get0_pubkey_bitstr@plt+0x3c707>
  452fc3:	mov    0xe8(%rsp),%r15
  452fcb:	mov    0xe4(%rsp),%edx
  452fd2:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  452fd7:	lea    0x10614(%rip),%rsi        # 4635f2 <_fini+0x60ee>
  452fde:	mov    %r13,%rdi
  452fe1:	mov    %edx,0xdc(%rsp)
  452fe8:	callq  4155c0 <strcmp@plt>
  452fed:	test   %eax,%eax
  452fef:	mov    0xdc(%rsp),%edx
  452ff6:	jne    453080 <X509_get0_pubkey_bitstr@plt+0x3c6b0>
  452ffc:	cmpq   $0x0,0x8(%r15)
  453001:	je     451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  453007:	cmpq   $0x0,0x18(%rsp)
  45300d:	je     453067 <X509_get0_pubkey_bitstr@plt+0x3c697>
  45300f:	cmpq   $0x0,0x48(%rsp)
  453015:	je     451e70 <X509_get0_pubkey_bitstr@plt+0x3b4a0>
  45301b:	test   %r12,%r12
  45301e:	jne    453028 <X509_get0_pubkey_bitstr@plt+0x3c658>
  453020:	callq  412cd0 <sk_new_null@plt>
  453025:	mov    %rax,%r12
  453028:	mov    0x48(%rsp),%rsi
  45302d:	mov    %r12,%rdi
  453030:	callq  412fe0 <sk_push@plt>
  453035:	cmpq   $0x0,0x10(%rsp)
  45303b:	jne    453047 <X509_get0_pubkey_bitstr@plt+0x3c677>
  45303d:	callq  412cd0 <sk_new_null@plt>
  453042:	mov    %rax,0x10(%rsp)
  453047:	mov    0x18(%rsp),%rsi
  45304c:	mov    0x10(%rsp),%rdi
  453051:	callq  412fe0 <sk_push@plt>
  453056:	mov    0xe8(%rsp),%r15
  45305e:	movq   $0x0,0x48(%rsp)
  453067:	mov    0x8(%r15),%rax
  45306b:	mov    0xe4(%rsp),%edx
  453072:	add    $0x8,%r15
  453076:	mov    %rax,0x18(%rsp)
  45307b:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  453080:	lea    0xb158(%rip),%rsi        # 45e1df <_fini+0xcdb>
  453087:	mov    %r13,%rdi
  45308a:	mov    %edx,0xdc(%rsp)
  453091:	callq  4155c0 <strcmp@plt>
  453096:	test   %eax,%eax
  453098:	mov    0xdc(%rsp),%edx
  45309f:	jne    4530f8 <X509_get0_pubkey_bitstr@plt+0x3c728>
  4530a1:	mov    0x8(%r15),%rdi
  4530a5:	test   %rdi,%rdi
  4530a8:	je     451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  4530ae:	add    $0x8,%r15
  4530b2:	mov    %r15,0xe8(%rsp)
  4530ba:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  4530bf:	mov    0xe8(%rsp),%r15
  4530c7:	mov    %eax,0x5c(%rsp)
  4530cb:	mov    0xe4(%rsp),%edx
  4530d2:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  4530d7:	mov    0xe8(%rsp),%rax
  4530df:	mov    (%rbx),%rdi
  4530e2:	lea    0x1aced(%rip),%rsi        # 46ddd6 <_fini+0x108d2>
  4530e9:	mov    (%rax),%rdx
  4530ec:	xor    %eax,%eax
  4530ee:	callq  413c40 <BIO_printf@plt>
  4530f3:	jmpq   451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  4530f8:	lea    0xfac5(%rip),%rsi        # 462bc4 <_fini+0x56c0>
  4530ff:	mov    %r13,%rdi
  453102:	mov    %edx,0xdc(%rsp)
  453109:	callq  4155c0 <strcmp@plt>
  45310e:	test   %eax,%eax
  453110:	mov    0xdc(%rsp),%edx
  453117:	jne    453130 <X509_get0_pubkey_bitstr@plt+0x3c760>
  453119:	mov    0x8(%r15),%rax
  45311d:	test   %rax,%rax
  453120:	mov    %rax,0x38(%rsp)
  453125:	jne    452daf <X509_get0_pubkey_bitstr@plt+0x3c3df>
  45312b:	jmpq   451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  453130:	lea    0xaa06(%rip),%rsi        # 45db3d <_fini+0x639>
  453137:	mov    %r13,%rdi
  45313a:	mov    %edx,0xdc(%rsp)
  453141:	callq  4155c0 <strcmp@plt>
  453146:	test   %eax,%eax
  453148:	mov    0xdc(%rsp),%edx
  45314f:	jne    45316b <X509_get0_pubkey_bitstr@plt+0x3c79b>
  453151:	mov    0x8(%r15),%rax
  453155:	test   %rax,%rax
  453158:	mov    %rax,0xb0(%rsp)
  453160:	jne    452daf <X509_get0_pubkey_bitstr@plt+0x3c3df>
  453166:	jmpq   451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  45316b:	lea    0xa9c3(%rip),%rsi        # 45db35 <_fini+0x631>
  453172:	mov    %r13,%rdi
  453175:	mov    %edx,0xdc(%rsp)
  45317c:	callq  4155c0 <strcmp@plt>
  453181:	test   %eax,%eax
  453183:	mov    0xdc(%rsp),%edx
  45318a:	jne    4531a6 <X509_get0_pubkey_bitstr@plt+0x3c7d6>
  45318c:	mov    0x8(%r15),%rax
  453190:	test   %rax,%rax
  453193:	mov    %rax,0xb8(%rsp)
  45319b:	jne    452daf <X509_get0_pubkey_bitstr@plt+0x3c3df>
  4531a1:	jmpq   451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  4531a6:	cmpb   $0x69,0xd8(%rsp)
  4531ae:	jne    4531d5 <X509_get0_pubkey_bitstr@plt+0x3c805>
  4531b0:	cmpb   $0x6e,0x2(%r13)
  4531b5:	jne    4531d5 <X509_get0_pubkey_bitstr@plt+0x3c805>
  4531b7:	cmpb   $0x0,0x3(%r13)
  4531bc:	jne    4531d5 <X509_get0_pubkey_bitstr@plt+0x3c805>
  4531be:	mov    0x8(%r15),%rax
  4531c2:	test   %rax,%rax
  4531c5:	mov    %rax,0x78(%rsp)
  4531ca:	jne    452daf <X509_get0_pubkey_bitstr@plt+0x3c3df>
  4531d0:	jmpq   451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  4531d5:	lea    0xab03(%rip),%rsi        # 45dcdf <_fini+0x7db>
  4531dc:	mov    %r13,%rdi
  4531df:	mov    %edx,0xd8(%rsp)
  4531e6:	callq  4155c0 <strcmp@plt>
  4531eb:	test   %eax,%eax
  4531ed:	mov    0xd8(%rsp),%edx
  4531f4:	jne    45322c <X509_get0_pubkey_bitstr@plt+0x3c85c>
  4531f6:	mov    0x8(%r15),%rdi
  4531fa:	test   %rdi,%rdi
  4531fd:	je     451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  453203:	add    $0x8,%r15
  453207:	mov    %r15,0xe8(%rsp)
  45320f:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  453214:	mov    0xe8(%rsp),%r15
  45321c:	mov    %eax,0x68(%rsp)
  453220:	mov    0xe4(%rsp),%edx
  453227:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  45322c:	lea    0xaf5d(%rip),%rsi        # 45e190 <_fini+0xc8c>
  453233:	mov    %r13,%rdi
  453236:	mov    %edx,0xd8(%rsp)
  45323d:	callq  4155c0 <strcmp@plt>
  453242:	test   %eax,%eax
  453244:	mov    0xd8(%rsp),%edx
  45324b:	jne    453286 <X509_get0_pubkey_bitstr@plt+0x3c8b6>
  45324d:	mov    0x8(%r15),%rdi
  453251:	test   %rdi,%rdi
  453254:	je     451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  45325a:	add    $0x8,%r15
  45325e:	mov    %r15,0xe8(%rsp)
  453266:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  45326b:	mov    0xe8(%rsp),%r15
  453273:	mov    %eax,0x88(%rsp)
  45327a:	mov    0xe4(%rsp),%edx
  453281:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  453286:	lea    0xabb9(%rip),%rsi        # 45de46 <_fini+0x942>
  45328d:	mov    %r13,%rdi
  453290:	mov    %edx,0xd8(%rsp)
  453297:	callq  4155c0 <strcmp@plt>
  45329c:	test   %eax,%eax
  45329e:	mov    0xd8(%rsp),%edx
  4532a5:	jne    4532c1 <X509_get0_pubkey_bitstr@plt+0x3c8f1>
  4532a7:	mov    0x8(%r15),%rax
  4532ab:	test   %rax,%rax
  4532ae:	mov    %rax,0x80(%rsp)
  4532b6:	jne    452daf <X509_get0_pubkey_bitstr@plt+0x3c3df>
  4532bc:	jmpq   451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  4532c1:	lea    0x1ab21(%rip),%rsi        # 46dde9 <_fini+0x108e5>
  4532c8:	mov    %r13,%rdi
  4532cb:	mov    %edx,0xd8(%rsp)
  4532d2:	callq  4155c0 <strcmp@plt>
  4532d7:	test   %eax,%eax
  4532d9:	jne    453300 <X509_get0_pubkey_bitstr@plt+0x3c930>
  4532db:	mov    0x8(%r15),%rax
  4532df:	test   %rax,%rax
  4532e2:	mov    %rax,0x90(%rsp)
  4532ea:	je     451594 <X509_get0_pubkey_bitstr@plt+0x3abc4>
  4532f0:	add    $0x8,%r15
  4532f4:	mov    0xd8(%rsp),%edx
  4532fb:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  453300:	mov    0xc0(%rsp),%r8
  453308:	mov    (%rbx),%rcx
  45330b:	xor    %esi,%esi
  45330d:	mov    0xc8(%rsp),%rdx
  453315:	mov    0xd0(%rsp),%rdi
  45331d:	callq  447ee0 <X509_get0_pubkey_bitstr@plt+0x31510>
  453322:	test   %eax,%eax
  453324:	je     453332 <X509_get0_pubkey_bitstr@plt+0x3c962>
  453326:	mov    0xe4(%rsp),%edx
  45332d:	jmpq   45147f <X509_get0_pubkey_bitstr@plt+0x3aaaf>
  453332:	mov    0xe8(%rsp),%rax
  45333a:	mov    (%rax),%rdi
  45333d:	add    $0x1,%rdi
  453341:	callq  416810 <EVP_get_cipherbyname@plt>
  453346:	test   %rax,%rax
  453349:	mov    %rax,0x20(%rsp)
  45334e:	jne    452fc3 <X509_get0_pubkey_bitstr@plt+0x3c5f3>
  453354:	movl   $0x1,0xe4(%rsp)
  45335f:	mov    0xe8(%rsp),%r15
  453367:	mov    $0x1,%edx
  45336c:	jmpq   45152d <X509_get0_pubkey_bitstr@plt+0x3ab5d>
  453371:	nopw   %cs:0x0(%rax,%rax,1)
  45337b:	nopl   0x0(%rax,%rax,1)
  453380:	push   %rbp
  453381:	mov    %edi,%ebp
  453383:	mov    %rsi,%rdi
  453386:	push   %rbx
  453387:	mov    %rsi,%rbx
  45338a:	sub    $0x8,%rsp
  45338e:	callq  415050 <X509_STORE_CTX_get_error@plt>
  453393:	lea    0x22890e(%rip),%rdx        # 67bca8 <_edata+0xfa0>
  45339a:	cmp    $0x2b,%eax
  45339d:	mov    %eax,(%rdx)
  45339f:	je     4533aa <X509_get0_pubkey_bitstr@plt+0x3c9da>
  4533a1:	test   %eax,%eax
  4533a3:	jne    4533b4 <X509_get0_pubkey_bitstr@plt+0x3c9e4>
  4533a5:	cmp    $0x2,%ebp
  4533a8:	jne    4533b4 <X509_get0_pubkey_bitstr@plt+0x3c9e4>
  4533aa:	mov    %rbx,%rsi
  4533ad:	xor    %edi,%edi
  4533af:	callq  4487c0 <X509_get0_pubkey_bitstr@plt+0x31df0>
  4533b4:	add    $0x8,%rsp
  4533b8:	mov    %ebp,%eax
  4533ba:	pop    %rbx
  4533bb:	pop    %rbp
  4533bc:	retq   
  4533bd:	nopl   (%rax)
  4533c0:	test   %rdi,%rdi
  4533c3:	mov    $0x1,%eax
  4533c8:	je     453425 <X509_get0_pubkey_bitstr@plt+0x3ca55>
  4533ca:	push   %r12
  4533cc:	push   %rbp
  4533cd:	mov    %rsi,%rbp
  4533d0:	lea    0x10241(%rip),%rsi        # 463618 <_fini+0x6114>
  4533d7:	push   %rbx
  4533d8:	callq  412ba0 <BIO_new_file@plt>
  4533dd:	test   %rax,%rax
  4533e0:	mov    %rax,%r12
  4533e3:	je     453430 <X509_get0_pubkey_bitstr@plt+0x3ca60>
  4533e5:	xor    %ebx,%ebx
  4533e7:	jmp    453408 <X509_get0_pubkey_bitstr@plt+0x3ca38>
  4533e9:	nopl   0x0(%rax)
  4533f0:	mov    %ebx,%esi
  4533f2:	mov    %rbp,%rdi
  4533f5:	add    $0x1,%ebx
  4533f8:	callq  412b30 <sk_value@plt>
  4533fd:	mov    %r12,%rdi
  453400:	mov    %rax,%rsi
  453403:	callq  413490 <PEM_write_bio_X509@plt>
  453408:	mov    %rbp,%rdi
  45340b:	callq  4156d0 <sk_num@plt>
  453410:	cmp    %eax,%ebx
  453412:	jl     4533f0 <X509_get0_pubkey_bitstr@plt+0x3ca20>
  453414:	mov    %r12,%rdi
  453417:	callq  413960 <BIO_free@plt>
  45341c:	mov    $0x1,%eax
  453421:	pop    %rbx
  453422:	pop    %rbp
  453423:	pop    %r12
  453425:	repz retq 
  453427:	nopw   0x0(%rax,%rax,1)
  453430:	xor    %eax,%eax
  453432:	jmp    453421 <X509_get0_pubkey_bitstr@plt+0x3ca51>
  453434:	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  453440:	push   %r15
  453442:	add    $0x8,%rsi
  453446:	mov    $0xd,%edi
  45344b:	push   %r14
  45344d:	push   %r13
  45344f:	push   %r12
  453451:	push   %rbp
  453452:	push   %rbx
  453453:	sub    $0x1b8,%rsp
  45345a:	mov    %rsi,0x168(%rsp)
  453462:	mov    $0x1,%esi
  453467:	movq   $0x0,0x170(%rsp)
  453473:	mov    %fs:0x28,%rax
  45347c:	mov    %rax,0x1a8(%rsp)
  453484:	xor    %eax,%eax
  453486:	movl   $0x0,0x160(%rsp)
  453491:	movq   $0x0,0x178(%rsp)
  45349d:	movq   $0x0,0x180(%rsp)
  4534a9:	callq  414ee0 <signal@plt>
  4534ae:	lea    0x22788b(%rip),%rbx        # 67ad40 <_edata+0x38>
  4534b5:	mov    (%rbx),%rdi
  4534b8:	test   %rdi,%rdi
  4534bb:	je     4545d2 <X509_get0_pubkey_bitstr@plt+0x3dc02>
  4534c1:	xor    %esi,%esi
  4534c3:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  4534c8:	test   %eax,%eax
  4534ca:	je     454050 <X509_get0_pubkey_bitstr@plt+0x3d680>
  4534d0:	lea    0x180(%rsp),%rax
  4534d8:	mov    0x160(%rsp),%r14d
  4534e0:	movq   $0x0,0x90(%rsp)
  4534ec:	movq   $0x0,0x110(%rsp)
  4534f8:	movq   $0x0,0xe8(%rsp)
  453504:	xor    %r13d,%r13d
  453507:	movq   $0x0,0xd0(%rsp)
  453513:	movq   $0x0,0x70(%rsp)
  45351c:	xor    %r15d,%r15d
  45351f:	movq   $0x0,0x40(%rsp)
  453528:	movq   $0x0,0x30(%rsp)
  453531:	xor    %ebp,%ebp
  453533:	movl   $0x3,0xe4(%rsp)
  45353e:	movl   $0x6,0x100(%rsp)
  453549:	xor    %r12d,%r12d
  45354c:	movl   $0x6,0xe0(%rsp)
  453557:	movl   $0x6,0x50(%rsp)
  45355f:	movq   $0x0,0x108(%rsp)
  45356b:	movl   $0x0,0xc8(%rsp)
  453576:	movq   $0x0,0x68(%rsp)
  45357f:	movq   $0x0,0x28(%rsp)
  453588:	movq   $0x0,0x140(%rsp)
  453594:	movq   $0x0,0x138(%rsp)
  4535a0:	movq   $0x0,0x130(%rsp)
  4535ac:	movq   $0x0,0x128(%rsp)
  4535b8:	movq   $0x0,0x120(%rsp)
  4535c4:	movq   $0x0,0x20(%rsp)
  4535cd:	movl   $0xffffffff,0xb0(%rsp)
  4535d8:	movl   $0x0,0x11c(%rsp)
  4535e3:	movl   $0x0,0xcc(%rsp)
  4535ee:	movl   $0x0,0x118(%rsp)
  4535f9:	movl   $0x0,0x104(%rsp)
  453604:	movl   $0x40,0xa8(%rsp)
  45360f:	movq   $0x0,0xc0(%rsp)
  45361b:	movq   $0x0,0xf8(%rsp)
  453627:	movq   $0x0,0x78(%rsp)
  453630:	movq   $0x0,0x58(%rsp)
  453639:	movq   $0x0,0x18(%rsp)
  453642:	movq   $0x0,0x38(%rsp)
  45364b:	mov    %rax,0x88(%rsp)
  453653:	lea    0x160(%rsp),%rax
  45365b:	movq   $0x0,0xa0(%rsp)
  453667:	movq   $0x0,0x48(%rsp)
  453670:	movq   $0x0,0xf0(%rsp)
  45367c:	mov    %rax,0x98(%rsp)
  453684:	lea    0x168(%rsp),%rax
  45368c:	movq   $0x0,0x60(%rsp)
  453695:	mov    %rax,0xb8(%rsp)
  45369d:	lea    0x1a0(%rsp),%rax
  4536a5:	mov    %rax,0x80(%rsp)
  4536ad:	test   %r14d,%r14d
  4536b0:	jne    453b7b <X509_get0_pubkey_bitstr@plt+0x3d1ab>
  4536b6:	nopw   %cs:0x0(%rax,%rax,1)
  4536c0:	mov    0x168(%rsp),%r8
  4536c8:	mov    (%r8),%rdx
  4536cb:	test   %rdx,%rdx
  4536ce:	je     4542a8 <X509_get0_pubkey_bitstr@plt+0x3d8d8>
  4536d4:	cmpb   $0x2d,(%rdx)
  4536d7:	jne    4542a8 <X509_get0_pubkey_bitstr@plt+0x3d8d8>
  4536dd:	lea    0xff52(%rip),%rdi        # 463636 <_fini+0x6132>
  4536e4:	mov    $0x9,%ecx
  4536e9:	mov    %rdx,%rsi
  4536ec:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4536ee:	je     453b60 <X509_get0_pubkey_bitstr@plt+0x3d190>
  4536f4:	lea    0xff44(%rip),%rdi        # 46363f <_fini+0x613b>
  4536fb:	mov    $0x9,%ecx
  453700:	mov    %rdx,%rsi
  453703:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  453705:	je     454030 <X509_get0_pubkey_bitstr@plt+0x3d660>
  45370b:	lea    0xc1b0(%rip),%rdi        # 45f8c2 <_fini+0x23be>
  453712:	mov    $0x6,%ecx
  453717:	mov    %rdx,%rsi
  45371a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45371c:	je     454040 <X509_get0_pubkey_bitstr@plt+0x3d670>
  453722:	lea    0x1b1ba(%rip),%rdi        # 46e8e3 <_fini+0x113df>
  453729:	mov    $0xe,%ecx
  45372e:	mov    %rdx,%rsi
  453731:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  453733:	je     454298 <X509_get0_pubkey_bitstr@plt+0x3d8c8>
  453739:	lea    0x1a5f3(%rip),%rdi        # 46dd33 <_fini+0x1082f>
  453740:	mov    $0x8,%ecx
  453745:	mov    %rdx,%rsi
  453748:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45374a:	je     4542f0 <X509_get0_pubkey_bitstr@plt+0x3d920>
  453750:	lea    0xaae1(%rip),%rdi        # 45e238 <_fini+0xd34>
  453757:	mov    $0x8,%ecx
  45375c:	mov    %rdx,%rsi
  45375f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  453761:	je     454360 <X509_get0_pubkey_bitstr@plt+0x3d990>
  453767:	lea    0x1b183(%rip),%rdi        # 46e8f1 <_fini+0x113ed>
  45376e:	mov    $0x10,%ecx
  453773:	mov    %rdx,%rsi
  453776:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  453778:	je     45460f <X509_get0_pubkey_bitstr@plt+0x3dc3f>
  45377e:	lea    0x1b17c(%rip),%rdi        # 46e901 <_fini+0x113fd>
  453785:	mov    $0x10,%ecx
  45378a:	mov    %rdx,%rsi
  45378d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45378f:	je     454660 <X509_get0_pubkey_bitstr@plt+0x3dc90>
  453795:	lea    0x1b175(%rip),%rdi        # 46e911 <_fini+0x1140d>
  45379c:	mov    $0x8,%ecx
  4537a1:	mov    %rdx,%rsi
  4537a4:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4537a6:	je     45491e <X509_get0_pubkey_bitstr@plt+0x3df4e>
  4537ac:	lea    0x1b166(%rip),%rdi        # 46e919 <_fini+0x11415>
  4537b3:	mov    $0xa,%ecx
  4537b8:	mov    %rdx,%rsi
  4537bb:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4537bd:	je     454a37 <X509_get0_pubkey_bitstr@plt+0x3e067>
  4537c3:	lea    0x1b159(%rip),%rdi        # 46e923 <_fini+0x1141f>
  4537ca:	mov    $0xd,%ecx
  4537cf:	mov    %rdx,%rsi
  4537d2:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4537d4:	je     454c7c <X509_get0_pubkey_bitstr@plt+0x3e2ac>
  4537da:	lea    0x1b14f(%rip),%rdi        # 46e930 <_fini+0x1142c>
  4537e1:	mov    $0xf,%ecx
  4537e6:	mov    %rdx,%rsi
  4537e9:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4537eb:	je     454dc4 <X509_get0_pubkey_bitstr@plt+0x3e3f4>
  4537f1:	lea    0x1b147(%rip),%rdi        # 46e93f <_fini+0x1143b>
  4537f8:	mov    $0xf,%ecx
  4537fd:	mov    %rdx,%rsi
  453800:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  453802:	je     455457 <X509_get0_pubkey_bitstr@plt+0x3ea87>
  453808:	lea    0x1b13f(%rip),%rdi        # 46e94e <_fini+0x1144a>
  45380f:	mov    $0xa,%ecx
  453814:	mov    %rdx,%rsi
  453817:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  453819:	je     45544c <X509_get0_pubkey_bitstr@plt+0x3ea7c>
  45381f:	lea    0x1b132(%rip),%rdi        # 46e958 <_fini+0x11454>
  453826:	mov    $0xc,%ecx
  45382b:	mov    %rdx,%rsi
  45382e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  453830:	je     455441 <X509_get0_pubkey_bitstr@plt+0x3ea71>
  453836:	lea    0x1b127(%rip),%rsi        # 46e964 <_fini+0x11460>
  45383d:	mov    %rdx,%rdi
  453840:	mov    %r8,0x148(%rsp)
  453848:	mov    %rdx,0xd8(%rsp)
  453850:	callq  4155c0 <strcmp@plt>
  453855:	test   %eax,%eax
  453857:	mov    0xd8(%rsp),%rdx
  45385f:	mov    0x148(%rsp),%r8
  453867:	je     455de5 <X509_get0_pubkey_bitstr@plt+0x3f415>
  45386d:	lea    0x1b107(%rip),%rsi        # 46e97b <_fini+0x11477>
  453874:	mov    %rdx,%rdi
  453877:	callq  4155c0 <strcmp@plt>
  45387c:	test   %eax,%eax
  45387e:	mov    0xd8(%rsp),%rdx
  453886:	mov    0x148(%rsp),%r8
  45388e:	je     455b5b <X509_get0_pubkey_bitstr@plt+0x3f18b>
  453894:	lea    0x127d3(%rip),%rsi        # 46606e <_fini+0x8b6a>
  45389b:	mov    %rdx,%rdi
  45389e:	callq  4155c0 <strcmp@plt>
  4538a3:	test   %eax,%eax
  4538a5:	mov    0xd8(%rsp),%rdx
  4538ad:	mov    0x148(%rsp),%r8
  4538b5:	je     455b39 <X509_get0_pubkey_bitstr@plt+0x3f169>
  4538bb:	lea    0x127a7(%rip),%rsi        # 466069 <_fini+0x8b65>
  4538c2:	mov    %rdx,%rdi
  4538c5:	mov    %r8,0x148(%rsp)
  4538cd:	mov    %rdx,0xd8(%rsp)
  4538d5:	callq  4155c0 <strcmp@plt>
  4538da:	test   %eax,%eax
  4538dc:	mov    0xd8(%rsp),%rdx
  4538e4:	mov    0x148(%rsp),%r8
  4538ec:	je     455b17 <X509_get0_pubkey_bitstr@plt+0x3f147>
  4538f2:	lea    0x12781(%rip),%rsi        # 46607a <_fini+0x8b76>
  4538f9:	mov    %rdx,%rdi
  4538fc:	mov    %r8,0x148(%rsp)
  453904:	mov    %rdx,0xd8(%rsp)
  45390c:	callq  4155c0 <strcmp@plt>
  453911:	test   %eax,%eax
  453913:	mov    0xd8(%rsp),%rdx
  45391b:	mov    0x148(%rsp),%r8
  453923:	je     455af5 <X509_get0_pubkey_bitstr@plt+0x3f125>
  453929:	lea    0x1a413(%rip),%rsi        # 46dd43 <_fini+0x1083f>
  453930:	mov    %rdx,%rdi
  453933:	mov    %r8,0x148(%rsp)
  45393b:	mov    %rdx,0xd8(%rsp)
  453943:	callq  4155c0 <strcmp@plt>
  453948:	test   %eax,%eax
  45394a:	mov    0xd8(%rsp),%rdx
  453952:	mov    0x148(%rsp),%r8
  45395a:	je     455ad3 <X509_get0_pubkey_bitstr@plt+0x3f103>
  453960:	lea    0x1a3e4(%rip),%rsi        # 46dd4b <_fini+0x10847>
  453967:	mov    %rdx,%rdi
  45396a:	mov    %r8,0x148(%rsp)
  453972:	mov    %rdx,0xd8(%rsp)
  45397a:	callq  4155c0 <strcmp@plt>
  45397f:	test   %eax,%eax
  453981:	mov    0xd8(%rsp),%rdx
  453989:	mov    0x148(%rsp),%r8
  453991:	je     455ab1 <X509_get0_pubkey_bitstr@plt+0x3f0e1>
  453997:	lea    0x1a3b6(%rip),%rsi        # 46dd54 <_fini+0x10850>
  45399e:	mov    %rdx,%rdi
  4539a1:	mov    %r8,0x148(%rsp)
  4539a9:	mov    %rdx,0xd8(%rsp)
  4539b1:	callq  4155c0 <strcmp@plt>
  4539b6:	test   %eax,%eax
  4539b8:	mov    0xd8(%rsp),%rdx
  4539c0:	mov    0x148(%rsp),%r8
  4539c8:	je     455a8f <X509_get0_pubkey_bitstr@plt+0x3f0bf>
  4539ce:	lea    0x126ab(%rip),%rsi        # 466080 <_fini+0x8b7c>
  4539d5:	mov    %rdx,%rdi
  4539d8:	mov    %r8,0x148(%rsp)
  4539e0:	mov    %rdx,0xd8(%rsp)
  4539e8:	callq  4155c0 <strcmp@plt>
  4539ed:	test   %eax,%eax
  4539ef:	mov    0xd8(%rsp),%rdx
  4539f7:	mov    0x148(%rsp),%r8
  4539ff:	je     455a6d <X509_get0_pubkey_bitstr@plt+0x3f09d>
  453a05:	lea    0x1267c(%rip),%rsi        # 466088 <_fini+0x8b84>
  453a0c:	mov    %rdx,%rdi
  453a0f:	mov    %r8,0x148(%rsp)
  453a17:	mov    %rdx,0xd8(%rsp)
  453a1f:	callq  4155c0 <strcmp@plt>
  453a24:	test   %eax,%eax
  453a26:	mov    0xd8(%rsp),%rdx
  453a2e:	mov    0x148(%rsp),%r8
  453a36:	je     455d3a <X509_get0_pubkey_bitstr@plt+0x3f36a>
  453a3c:	lea    0x1264d(%rip),%rsi        # 466090 <_fini+0x8b8c>
  453a43:	mov    %rdx,%rdi
  453a46:	mov    %r8,0x148(%rsp)
  453a4e:	mov    %rdx,0xd8(%rsp)
  453a56:	callq  4155c0 <strcmp@plt>
  453a5b:	test   %eax,%eax
  453a5d:	mov    0xd8(%rsp),%rdx
  453a65:	mov    0x148(%rsp),%r8
  453a6d:	je     455d18 <X509_get0_pubkey_bitstr@plt+0x3f348>
  453a73:	lea    0x1261e(%rip),%rsi        # 466098 <_fini+0x8b94>
  453a7a:	mov    %rdx,%rdi
  453a7d:	mov    %r8,0x148(%rsp)
  453a85:	mov    %rdx,0xd8(%rsp)
  453a8d:	callq  4155c0 <strcmp@plt>
  453a92:	test   %eax,%eax
  453a94:	mov    0xd8(%rsp),%rdx
  453a9c:	mov    0x148(%rsp),%r8
  453aa4:	je     455d5c <X509_get0_pubkey_bitstr@plt+0x3f38c>
  453aaa:	lea    0x125f4(%rip),%rsi        # 4660a5 <_fini+0x8ba1>
  453ab1:	mov    %rdx,%rdi
  453ab4:	mov    %r8,0x148(%rsp)
  453abc:	mov    %rdx,0xd8(%rsp)
  453ac4:	callq  4155c0 <strcmp@plt>
  453ac9:	test   %eax,%eax
  453acb:	mov    0xd8(%rsp),%rdx
  453ad3:	mov    0x148(%rsp),%r8
  453adb:	je     455cf6 <X509_get0_pubkey_bitstr@plt+0x3f326>
  453ae1:	lea    0x125ca(%rip),%rsi        # 4660b2 <_fini+0x8bae>
  453ae8:	mov    %rdx,%rdi
  453aeb:	mov    %r8,0x148(%rsp)
  453af3:	mov    %rdx,0xd8(%rsp)
  453afb:	callq  4155c0 <strcmp@plt>
  453b00:	test   %eax,%eax
  453b02:	mov    0xd8(%rsp),%rdx
  453b0a:	mov    0x148(%rsp),%r8
  453b12:	je     455ba6 <X509_get0_pubkey_bitstr@plt+0x3f1d6>
  453b18:	lea    0x1ae73(%rip),%rsi        # 46e992 <_fini+0x1148e>
  453b1f:	mov    %rdx,%rdi
  453b22:	mov    %r8,0x148(%rsp)
  453b2a:	mov    %rdx,0xd8(%rsp)
  453b32:	callq  4155c0 <strcmp@plt>
  453b37:	test   %eax,%eax
  453b39:	mov    0xd8(%rsp),%rdx
  453b41:	mov    0x148(%rsp),%r8
  453b49:	jne    455b66 <X509_get0_pubkey_bitstr@plt+0x3f196>
  453b4f:	orl    $0x20000,0xa8(%rsp)
  453b5a:	jmp    453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  453b5c:	nopl   0x0(%rax)
  453b60:	mov    $0x11,%r12d
  453b66:	add    $0x8,%r8
  453b6a:	test   %r14d,%r14d
  453b6d:	mov    %r8,0x168(%rsp)
  453b75:	je     4536c0 <X509_get0_pubkey_bitstr@plt+0x3ccf0>
  453b7b:	test   %r13,%r13
  453b7e:	mov    %r14d,%r9d
  453b81:	setne  0xb8(%rsp)
  453b89:	je     4542bc <X509_get0_pubkey_bitstr@plt+0x3d8ec>
  453b8f:	cmpq   $0x0,0x20(%rsp)
  453b95:	je     4546f8 <X509_get0_pubkey_bitstr@plt+0x3dd28>
  453b9b:	mov    %r12d,%eax
  453b9e:	and    $0x40,%eax
  453ba1:	mov    %eax,0xd8(%rsp)
  453ba8:	je     454300 <X509_get0_pubkey_bitstr@plt+0x3d930>
  453bae:	cmpq   $0x0,0xa0(%rsp)
  453bb7:	je     454384 <X509_get0_pubkey_bitstr@plt+0x3d9b4>
  453bbd:	cmpq   $0x0,0xa0(%rsp)
  453bc6:	je     453c06 <X509_get0_pubkey_bitstr@plt+0x3d236>
  453bc8:	test   %rbp,%rbp
  453bcb:	je     454b0b <X509_get0_pubkey_bitstr@plt+0x3e13b>
  453bd1:	mov    0xa0(%rsp),%rsi
  453bd9:	mov    %rbp,%rdi
  453bdc:	callq  412fe0 <sk_push@plt>
  453be1:	cmpq   $0x0,0x18(%rsp)
  453be7:	je     454afc <X509_get0_pubkey_bitstr@plt+0x3e12c>
  453bed:	test   %r15,%r15
  453bf0:	cmove  0xa0(%rsp),%r15
  453bf9:	mov    0x18(%rsp),%rdi
  453bfe:	mov    %r15,%rsi
  453c01:	callq  412fe0 <sk_push@plt>
  453c06:	test   %rbp,%rbp
  453c09:	je     454a09 <X509_get0_pubkey_bitstr@plt+0x3e039>
  453c0f:	mov    0x160(%rsp),%r9d
  453c17:	movl   $0x1,0xc8(%rsp)
  453c22:	xor    %r15d,%r15d
  453c25:	movq   $0x0,0xa0(%rsp)
  453c31:	test   %r9d,%r9d
  453c34:	je     4543c0 <X509_get0_pubkey_bitstr@plt+0x3d9f0>
  453c3a:	mov    (%rbx),%rdi
  453c3d:	lea    0x1aff4(%rip),%rsi        # 46ec38 <_fini+0x11734>
  453c44:	xor    %eax,%eax
  453c46:	callq  413c40 <BIO_printf@plt>
  453c4b:	mov    (%rbx),%rdi
  453c4e:	lea    0xa100(%rip),%rsi        # 45dd55 <_fini+0x851>
  453c55:	xor    %eax,%eax
  453c57:	callq  413c40 <BIO_printf@plt>
  453c5c:	mov    (%rbx),%rdi
  453c5f:	lea    0x1a412(%rip),%rsi        # 46e078 <_fini+0x10b74>
  453c66:	xor    %eax,%eax
  453c68:	callq  413c40 <BIO_printf@plt>
  453c6d:	mov    (%rbx),%rdi
  453c70:	lea    0x1a421(%rip),%rsi        # 46e098 <_fini+0x10b94>
  453c77:	xor    %eax,%eax
  453c79:	callq  413c40 <BIO_printf@plt>
  453c7e:	mov    (%rbx),%rdi
  453c81:	lea    0x1a16a(%rip),%rsi        # 46ddf2 <_fini+0x108ee>
  453c88:	xor    %eax,%eax
  453c8a:	callq  413c40 <BIO_printf@plt>
  453c8f:	mov    (%rbx),%rdi
  453c92:	lea    0x1a42f(%rip),%rsi        # 46e0c8 <_fini+0x10bc4>
  453c99:	xor    %eax,%eax
  453c9b:	callq  413c40 <BIO_printf@plt>
  453ca0:	mov    (%rbx),%rdi
  453ca3:	lea    0x1afb6(%rip),%rsi        # 46ec60 <_fini+0x1175c>
  453caa:	xor    %eax,%eax
  453cac:	callq  413c40 <BIO_printf@plt>
  453cb1:	mov    (%rbx),%rdi
  453cb4:	lea    0x1a45d(%rip),%rsi        # 46e118 <_fini+0x10c14>
  453cbb:	xor    %eax,%eax
  453cbd:	callq  413c40 <BIO_printf@plt>
  453cc2:	mov    (%rbx),%rdi
  453cc5:	lea    0x1a474(%rip),%rsi        # 46e140 <_fini+0x10c3c>
  453ccc:	xor    %eax,%eax
  453cce:	callq  413c40 <BIO_printf@plt>
  453cd3:	mov    (%rbx),%rdi
  453cd6:	lea    0x1a48b(%rip),%rsi        # 46e168 <_fini+0x10c64>
  453cdd:	xor    %eax,%eax
  453cdf:	callq  413c40 <BIO_printf@plt>
  453ce4:	mov    (%rbx),%rdi
  453ce7:	lea    0x1a4a2(%rip),%rsi        # 46e190 <_fini+0x10c8c>
  453cee:	xor    %eax,%eax
  453cf0:	callq  413c40 <BIO_printf@plt>
  453cf5:	mov    (%rbx),%rdi
  453cf8:	lea    0x1a4c1(%rip),%rsi        # 46e1c0 <_fini+0x10cbc>
  453cff:	xor    %eax,%eax
  453d01:	callq  413c40 <BIO_printf@plt>
  453d06:	mov    (%rbx),%rdi
  453d09:	lea    0x1a4d8(%rip),%rsi        # 46e1e8 <_fini+0x10ce4>
  453d10:	xor    %eax,%eax
  453d12:	callq  413c40 <BIO_printf@plt>
  453d17:	mov    (%rbx),%rdi
  453d1a:	lea    0xf3f6(%rip),%rsi        # 463117 <_fini+0x5c13>
  453d21:	xor    %eax,%eax
  453d23:	callq  413c40 <BIO_printf@plt>
  453d28:	mov    (%rbx),%rdi
  453d2b:	lea    0x1a4de(%rip),%rsi        # 46e210 <_fini+0x10d0c>
  453d32:	xor    %eax,%eax
  453d34:	callq  413c40 <BIO_printf@plt>
  453d39:	mov    (%rbx),%rdi
  453d3c:	lea    0x190c5(%rip),%rsi        # 46ce08 <_fini+0xf904>
  453d43:	xor    %eax,%eax
  453d45:	callq  413c40 <BIO_printf@plt>
  453d4a:	mov    (%rbx),%rdi
  453d4d:	lea    0x1a4ec(%rip),%rsi        # 46e240 <_fini+0x10d3c>
  453d54:	xor    %eax,%eax
  453d56:	callq  413c40 <BIO_printf@plt>
  453d5b:	mov    (%rbx),%rdi
  453d5e:	lea    0x1a513(%rip),%rsi        # 46e278 <_fini+0x10d74>
  453d65:	xor    %eax,%eax
  453d67:	callq  413c40 <BIO_printf@plt>
  453d6c:	mov    (%rbx),%rdi
  453d6f:	lea    0x1a542(%rip),%rsi        # 46e2b8 <_fini+0x10db4>
  453d76:	xor    %eax,%eax
  453d78:	callq  413c40 <BIO_printf@plt>
  453d7d:	mov    (%rbx),%rdi
  453d80:	lea    0x1a561(%rip),%rsi        # 46e2e8 <_fini+0x10de4>
  453d87:	xor    %eax,%eax
  453d89:	callq  413c40 <BIO_printf@plt>
  453d8e:	mov    (%rbx),%rdi
  453d91:	lea    0x1a588(%rip),%rsi        # 46e320 <_fini+0x10e1c>
  453d98:	xor    %eax,%eax
  453d9a:	callq  413c40 <BIO_printf@plt>
  453d9f:	mov    (%rbx),%rdi
  453da2:	lea    0x1a5b7(%rip),%rsi        # 46e360 <_fini+0x10e5c>
  453da9:	xor    %eax,%eax
  453dab:	callq  413c40 <BIO_printf@plt>
  453db0:	mov    (%rbx),%rdi
  453db3:	lea    0x1a5ce(%rip),%rsi        # 46e388 <_fini+0x10e84>
  453dba:	xor    %eax,%eax
  453dbc:	callq  413c40 <BIO_printf@plt>
  453dc1:	mov    (%rbx),%rdi
  453dc4:	lea    0x1a5f5(%rip),%rsi        # 46e3c0 <_fini+0x10ebc>
  453dcb:	xor    %eax,%eax
  453dcd:	callq  413c40 <BIO_printf@plt>
  453dd2:	mov    (%rbx),%rdi
  453dd5:	lea    0x1a614(%rip),%rsi        # 46e3f0 <_fini+0x10eec>
  453ddc:	xor    %eax,%eax
  453dde:	callq  413c40 <BIO_printf@plt>
  453de3:	mov    (%rbx),%rdi
  453de6:	lea    0x1ae9b(%rip),%rsi        # 46ec88 <_fini+0x11784>
  453ded:	xor    %eax,%eax
  453def:	callq  413c40 <BIO_printf@plt>
  453df4:	mov    (%rbx),%rdi
  453df7:	lea    0x1a61a(%rip),%rsi        # 46e418 <_fini+0x10f14>
  453dfe:	xor    %eax,%eax
  453e00:	callq  413c40 <BIO_printf@plt>
  453e05:	mov    (%rbx),%rdi
  453e08:	lea    0x1a631(%rip),%rsi        # 46e440 <_fini+0x10f3c>
  453e0f:	xor    %eax,%eax
  453e11:	callq  413c40 <BIO_printf@plt>
  453e16:	mov    (%rbx),%rdi
  453e19:	lea    0x1ae90(%rip),%rsi        # 46ecb0 <_fini+0x117ac>
  453e20:	xor    %eax,%eax
  453e22:	callq  413c40 <BIO_printf@plt>
  453e27:	mov    (%rbx),%rdi
  453e2a:	lea    0x19fde(%rip),%rsi        # 46de0f <_fini+0x1090b>
  453e31:	xor    %eax,%eax
  453e33:	callq  413c40 <BIO_printf@plt>
  453e38:	mov    (%rbx),%rdi
  453e3b:	lea    0x1a63e(%rip),%rsi        # 46e480 <_fini+0x10f7c>
  453e42:	xor    %eax,%eax
  453e44:	callq  413c40 <BIO_printf@plt>
  453e49:	mov    (%rbx),%rdi
  453e4c:	lea    0x1a66d(%rip),%rsi        # 46e4c0 <_fini+0x10fbc>
  453e53:	xor    %eax,%eax
  453e55:	callq  413c40 <BIO_printf@plt>
  453e5a:	mov    (%rbx),%rdi
  453e5d:	lea    0x1a69c(%rip),%rsi        # 46e500 <_fini+0x10ffc>
  453e64:	xor    %eax,%eax
  453e66:	callq  413c40 <BIO_printf@plt>
  453e6b:	mov    (%rbx),%rdi
  453e6e:	lea    0x19fb5(%rip),%rsi        # 46de2a <_fini+0x10926>
  453e75:	xor    %eax,%eax
  453e77:	callq  413c40 <BIO_printf@plt>
  453e7c:	mov    (%rbx),%rdi
  453e7f:	lea    0x1a6ba(%rip),%rsi        # 46e540 <_fini+0x1103c>
  453e86:	xor    %eax,%eax
  453e88:	callq  413c40 <BIO_printf@plt>
  453e8d:	mov    (%rbx),%rdi
  453e90:	lea    0x1a6e9(%rip),%rsi        # 46e580 <_fini+0x1107c>
  453e97:	xor    %eax,%eax
  453e99:	callq  413c40 <BIO_printf@plt>
  453e9e:	mov    (%rbx),%rdi
  453ea1:	lea    0x19f9e(%rip),%rsi        # 46de46 <_fini+0x10942>
  453ea8:	xor    %eax,%eax
  453eaa:	callq  413c40 <BIO_printf@plt>
  453eaf:	mov    (%rbx),%rdi
  453eb2:	lea    0x19fa8(%rip),%rsi        # 46de61 <_fini+0x1095d>
  453eb9:	xor    %eax,%eax
  453ebb:	callq  413c40 <BIO_printf@plt>
  453ec0:	mov    (%rbx),%rdi
  453ec3:	lea    0x19fb4(%rip),%rsi        # 46de7e <_fini+0x1097a>
  453eca:	xor    %eax,%eax
  453ecc:	callq  413c40 <BIO_printf@plt>
  453ed1:	mov    (%rbx),%rdi
  453ed4:	lea    0x1a6ed(%rip),%rsi        # 46e5c8 <_fini+0x110c4>
  453edb:	xor    %eax,%eax
  453edd:	callq  413c40 <BIO_printf@plt>
  453ee2:	mov    (%rbx),%rdi
  453ee5:	lea    0x1a714(%rip),%rsi        # 46e600 <_fini+0x110fc>
  453eec:	xor    %eax,%eax
  453eee:	callq  413c40 <BIO_printf@plt>
  453ef3:	mov    (%rbx),%rdi
  453ef6:	lea    0x1a733(%rip),%rsi        # 46e630 <_fini+0x1112c>
  453efd:	xor    %eax,%eax
  453eff:	callq  413c40 <BIO_printf@plt>
  453f04:	mov    (%rbx),%rdi
  453f07:	lea    0x1a752(%rip),%rsi        # 46e660 <_fini+0x1115c>
  453f0e:	xor    %eax,%eax
  453f10:	callq  413c40 <BIO_printf@plt>
  453f15:	mov    (%rbx),%rdi
  453f18:	lea    0x1a791(%rip),%rsi        # 46e6b0 <_fini+0x111ac>
  453f1f:	xor    %eax,%eax
  453f21:	callq  413c40 <BIO_printf@plt>
  453f26:	mov    (%rbx),%rdi
  453f29:	lea    0x1a7d0(%rip),%rsi        # 46e700 <_fini+0x111fc>
  453f30:	xor    %eax,%eax
  453f32:	callq  413c40 <BIO_printf@plt>
  453f37:	mov    (%rbx),%rdi
  453f3a:	lea    0x1a817(%rip),%rsi        # 46e758 <_fini+0x11254>
  453f41:	xor    %eax,%eax
  453f43:	callq  413c40 <BIO_printf@plt>
  453f48:	mov    (%rbx),%rdi
  453f4b:	lea    0x1a846(%rip),%rsi        # 46e798 <_fini+0x11294>
  453f52:	xor    %eax,%eax
  453f54:	callq  413c40 <BIO_printf@plt>
  453f59:	mov    (%rbx),%rdi
  453f5c:	lea    0xa3c8(%rip),%rsi        # 45e32b <_fini+0xe27>
  453f63:	mov    $0x3a,%ecx
  453f68:	mov    $0x3a,%edx
  453f6d:	xor    %eax,%eax
  453f6f:	callq  413c40 <BIO_printf@plt>
  453f74:	mov    (%rbx),%rdi
  453f77:	lea    0x1a84a(%rip),%rsi        # 46e7c8 <_fini+0x112c4>
  453f7e:	xor    %eax,%eax
  453f80:	callq  413c40 <BIO_printf@plt>
  453f85:	mov    (%rbx),%rdi
  453f88:	lea    0xbfa1(%rip),%rsi        # 45ff30 <_fini+0x2a2c>
  453f8f:	xor    %eax,%eax
  453f91:	callq  413c40 <BIO_printf@plt>
  453f96:	mov    (%rbx),%rdi
  453f99:	lea    0x1a870(%rip),%rsi        # 46e810 <_fini+0x1130c>
  453fa0:	xor    %eax,%eax
  453fa2:	callq  413c40 <BIO_printf@plt>
  453fa7:	mov    0x221fca(%rip),%rax        # 675f78 <_fini+0x218a74>
  453fae:	xor    %r14d,%r14d
  453fb1:	xor    %r15d,%r15d
  453fb4:	movq   $0x0,0x60(%rsp)
  453fbd:	movq   $0x0,0x30(%rsp)
  453fc6:	mov    $0x1,%r12d
  453fcc:	movq   $0x0,0x38(%rsp)
  453fd5:	movq   $0x0,0x80(%rsp)
  453fe1:	movq   $0x0,0x98(%rsp)
  453fed:	movq   $0x0,0x58(%rsp)
  453ff6:	movq   $0x0,0x68(%rsp)
  453fff:	movq   $0x0,0x88(%rsp)
  45400b:	movq   $0x0,0x50(%rsp)
  454014:	movq   $0x0,0x48(%rsp)
  45401d:	movq   $0x0,0x28(%rsp)
  454026:	mov    %rax,0x78(%rsp)
  45402b:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  454030:	mov    $0x22,%r12d
  454036:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  45403b:	nopl   0x0(%rax,%rax,1)
  454040:	mov    $0x53,%r12d
  454046:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  45404b:	nopl   0x0(%rax,%rax,1)
  454050:	mov    0x221f21(%rip),%rax        # 675f78 <_fini+0x218a74>
  454057:	movq   $0x0,0x90(%rsp)
  454063:	xor    %r14d,%r14d
  454066:	movq   $0x0,0x70(%rsp)
  45406f:	movq   $0x0,0x40(%rsp)
  454078:	xor    %r15d,%r15d
  45407b:	movl   $0x0,0xc8(%rsp)
  454086:	xor    %r13d,%r13d
  454089:	movq   $0x0,0x20(%rsp)
  454092:	movq   $0x0,0x60(%rsp)
  45409b:	movq   $0x0,0x30(%rsp)
  4540a4:	xor    %ebp,%ebp
  4540a6:	movq   $0x0,0x38(%rsp)
  4540af:	movq   $0x0,0x80(%rsp)
  4540bb:	mov    $0x1,%r12d
  4540c1:	movq   $0x0,0x98(%rsp)
  4540cd:	movq   $0x0,0x58(%rsp)
  4540d6:	movq   $0x0,0x68(%rsp)
  4540df:	movq   $0x0,0x88(%rsp)
  4540eb:	movq   $0x0,0x50(%rsp)
  4540f4:	movq   $0x0,0x48(%rsp)
  4540fd:	movq   $0x0,0x28(%rsp)
  454106:	movq   $0x0,0x18(%rsp)
  45410f:	mov    %rax,0x78(%rsp)
  454114:	mov    (%rbx),%rdi
  454117:	callq  413f40 <ERR_print_errors@plt>
  45411c:	mov    0xc8(%rsp),%eax
  454123:	test   %eax,%eax
  454125:	jne    4542e0 <X509_get0_pubkey_bitstr@plt+0x3d910>
  45412b:	mov    0x78(%rsp),%rbx
  454130:	mov    0x98(%rsp),%rdi
  454138:	mov    %rbx,%rsi
  45413b:	callq  416250 <sk_pop_free@plt>
  454140:	mov    0x80(%rsp),%rdi
  454148:	mov    %rbx,%rsi
  45414b:	callq  416250 <sk_pop_free@plt>
  454150:	mov    0x180(%rsp),%rdi
  454158:	test   %rdi,%rdi
  45415b:	je     454162 <X509_get0_pubkey_bitstr@plt+0x3d792>
  45415d:	callq  412f10 <X509_VERIFY_PARAM_free@plt>
  454162:	test   %rbp,%rbp
  454165:	je     45416f <X509_get0_pubkey_bitstr@plt+0x3d79f>
  454167:	mov    %rbp,%rdi
  45416a:	callq  4143f0 <sk_free@plt>
  45416f:	mov    0x18(%rsp),%rdi
  454174:	test   %rdi,%rdi
  454177:	je     45417e <X509_get0_pubkey_bitstr@plt+0x3d7ae>
  454179:	callq  4143f0 <sk_free@plt>
  45417e:	mov    0x40(%rsp),%rdi
  454183:	test   %rdi,%rdi
  454186:	je     45418d <X509_get0_pubkey_bitstr@plt+0x3d7bd>
  454188:	callq  415020 <CRYPTO_free@plt>
  45418d:	mov    0x70(%rsp),%rdi
  454192:	test   %rdi,%rdi
  454195:	je     45419c <X509_get0_pubkey_bitstr@plt+0x3d7cc>
  454197:	callq  415020 <CRYPTO_free@plt>
  45419c:	test   %r14,%r14
  45419f:	je     4541a9 <X509_get0_pubkey_bitstr@plt+0x3d7d9>
  4541a1:	mov    %r14,%rdi
  4541a4:	callq  415020 <CRYPTO_free@plt>
  4541a9:	mov    0x90(%rsp),%rdi
  4541b1:	test   %rdi,%rdi
  4541b4:	je     4541bb <X509_get0_pubkey_bitstr@plt+0x3d7eb>
  4541b6:	callq  414230 <ASN1_OBJECT_free@plt>
  4541bb:	test   %r15,%r15
  4541be:	je     4541c8 <X509_get0_pubkey_bitstr@plt+0x3d7f8>
  4541c0:	mov    %r15,%rdi
  4541c3:	callq  412d10 <CMS_ReceiptRequest_free@plt>
  4541c8:	mov    0x20(%rsp),%rdi
  4541cd:	test   %rdi,%rdi
  4541d0:	je     4541d7 <X509_get0_pubkey_bitstr@plt+0x3d807>
  4541d2:	callq  4143f0 <sk_free@plt>
  4541d7:	test   %r13,%r13
  4541da:	je     4541e4 <X509_get0_pubkey_bitstr@plt+0x3d814>
  4541dc:	mov    %r13,%rdi
  4541df:	callq  4143f0 <sk_free@plt>
  4541e4:	mov    0x50(%rsp),%rdi
  4541e9:	callq  4134b0 <X509_STORE_free@plt>
  4541ee:	xor    %edi,%edi
  4541f0:	callq  4153a0 <X509_free@plt>
  4541f5:	mov    0x88(%rsp),%rdi
  4541fd:	callq  4153a0 <X509_free@plt>
  454202:	mov    0x68(%rsp),%rdi
  454207:	callq  4153a0 <X509_free@plt>
  45420c:	mov    0x58(%rsp),%rdi
  454211:	callq  412b00 <EVP_PKEY_free@plt>
  454216:	mov    0x28(%rsp),%rdi
  45421b:	callq  414c90 <CMS_ContentInfo_free@plt>
  454220:	mov    0x48(%rsp),%rdi
  454225:	callq  414c90 <CMS_ContentInfo_free@plt>
  45422a:	mov    0x60(%rsp),%rdi
  45422f:	callq  413960 <BIO_free@plt>
  454234:	mov    0x38(%rsp),%rdi
  454239:	callq  413960 <BIO_free@plt>
  45423e:	mov    0x170(%rsp),%rdi
  454246:	callq  413960 <BIO_free@plt>
  45424b:	mov    0x30(%rsp),%rdi
  454250:	callq  416570 <BIO_free_all@plt>
  454255:	mov    0x178(%rsp),%rdi
  45425d:	test   %rdi,%rdi
  454260:	je     454267 <X509_get0_pubkey_bitstr@plt+0x3d897>
  454262:	callq  415020 <CRYPTO_free@plt>
  454267:	mov    0x1a8(%rsp),%rbx
  45426f:	xor    %fs:0x28,%rbx
  454278:	mov    %r12d,%eax
  45427b:	jne    45543c <X509_get0_pubkey_bitstr@plt+0x3ea6c>
  454281:	add    $0x1b8,%rsp
  454288:	pop    %rbx
  454289:	pop    %rbp
  45428a:	pop    %r12
  45428c:	pop    %r13
  45428e:	pop    %r14
  454290:	pop    %r15
  454292:	retq   
  454293:	nopl   0x0(%rax,%rax,1)
  454298:	mov    $0x3f,%r12d
  45429e:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  4542a3:	nopl   0x0(%rax,%rax,1)
  4542a8:	xor    %r9d,%r9d
  4542ab:	test   %r13,%r13
  4542ae:	setne  0xb8(%rsp)
  4542b6:	jne    453b8f <X509_get0_pubkey_bitstr@plt+0x3d1bf>
  4542bc:	cmpl   $0xffffffff,0xb0(%rsp)
  4542c4:	je     453b9b <X509_get0_pubkey_bitstr@plt+0x3d1cb>
  4542ca:	cmpq   $0x0,0x20(%rsp)
  4542d0:	jne    453b9b <X509_get0_pubkey_bitstr@plt+0x3d1cb>
  4542d6:	jmpq   4546f8 <X509_get0_pubkey_bitstr@plt+0x3dd28>
  4542db:	nopl   0x0(%rax,%rax,1)
  4542e0:	mov    (%rbx),%rsi
  4542e3:	xor    %edi,%edi
  4542e5:	callq  44a660 <X509_get0_pubkey_bitstr@plt+0x33c90>
  4542ea:	jmpq   45412b <X509_get0_pubkey_bitstr@plt+0x3d75b>
  4542ef:	nop
  4542f0:	mov    $0x76,%r12d
  4542f6:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  4542fb:	nopl   0x0(%rax,%rax,1)
  454300:	cmpq   $0x0,0x20(%rsp)
  454306:	jne    454370 <X509_get0_pubkey_bitstr@plt+0x3d9a0>
  454308:	cmpb   $0x0,0xb8(%rsp)
  454310:	jne    454370 <X509_get0_pubkey_bitstr@plt+0x3d9a0>
  454312:	test   %rbp,%rbp
  454315:	jne    454620 <X509_get0_pubkey_bitstr@plt+0x3dc50>
  45431b:	cmpq   $0x0,0x18(%rsp)
  454321:	jne    454620 <X509_get0_pubkey_bitstr@plt+0x3dc50>
  454327:	cmp    $0x22,%r12d
  45432b:	je     4543a1 <X509_get0_pubkey_bitstr@plt+0x3d9d1>
  45432d:	cmp    $0x11,%r12d
  454331:	je     45470c <X509_get0_pubkey_bitstr@plt+0x3dd3c>
  454337:	test   %r12d,%r12d
  45433a:	jne    4543aa <X509_get0_pubkey_bitstr@plt+0x3d9da>
  45433c:	movl   $0x1,0x160(%rsp)
  454347:	movq   $0x0,0x18(%rsp)
  454350:	xor    %ebp,%ebp
  454352:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  454357:	nopw   0x0(%rax,%rax,1)
  454360:	mov    $0x24,%r12d
  454366:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  45436b:	nopl   0x0(%rax,%rax,1)
  454370:	mov    (%rbx),%rdi
  454373:	lea    0x1a88e(%rip),%rsi        # 46ec08 <_fini+0x11704>
  45437a:	callq  413b70 <BIO_puts@plt>
  45437f:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  454384:	test   %r15,%r15
  454387:	je     453bbd <X509_get0_pubkey_bitstr@plt+0x3d1ed>
  45438d:	mov    (%rbx),%rdi
  454390:	lea    0x19be9(%rip),%rsi        # 46df80 <_fini+0x10a7c>
  454397:	callq  413b70 <BIO_puts@plt>
  45439c:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  4543a1:	test   %r15,%r15
  4543a4:	je     454681 <X509_get0_pubkey_bitstr@plt+0x3dcb1>
  4543aa:	movq   $0x0,0x18(%rsp)
  4543b3:	xor    %ebp,%ebp
  4543b5:	jmpq   453c31 <X509_get0_pubkey_bitstr@plt+0x3d261>
  4543ba:	nopw   0x0(%rax,%rax,1)
  4543c0:	mov    0x30(%rsp),%rsi
  4543c5:	mov    (%rbx),%rdi
  4543c8:	xor    %edx,%edx
  4543ca:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  4543cf:	mov    0x28(%rsp),%rsi
  4543d4:	mov    (%rbx),%rdi
  4543d7:	lea    0x178(%rsp),%rcx
  4543df:	xor    %r8d,%r8d
  4543e2:	xor    %edx,%edx
  4543e4:	mov    %rax,0x148(%rsp)
  4543ec:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  4543f1:	test   %eax,%eax
  4543f3:	je     45485a <X509_get0_pubkey_bitstr@plt+0x3de8a>
  4543f9:	mov    0xc8(%rsp),%r9d
  454401:	test   %r9d,%r9d
  454404:	jne    4546af <X509_get0_pubkey_bitstr@plt+0x3dcdf>
  45440a:	mov    0xa8(%rsp),%edx
  454411:	mov    0xd8(%rsp),%r8d
  454419:	mov    %edx,%eax
  45441b:	and    $0xffffffbf,%eax
  45441e:	test   %r8d,%r8d
  454421:	cmovne %edx,%eax
  454424:	test   $0x10,%r12b
  454428:	mov    %eax,0xa8(%rsp)
  45442f:	lea    0x9975(%rip),%rax        # 45ddab <_fini+0x8a7>
  454436:	mov    %rax,%rdx
  454439:	jne    454640 <X509_get0_pubkey_bitstr@plt+0x3dc70>
  45443f:	testb  $0x80,0xa8(%rsp)
  454447:	lea    0xf1ca(%rip),%rax        # 463618 <_fini+0x6114>
  45444e:	cmovne %rdx,%rax
  454452:	mov    %rax,0x158(%rsp)
  45445a:	mov    %r12d,%eax
  45445d:	and    $0x20,%eax
  454460:	mov    %eax,0x28(%rsp)
  454464:	lea    0x9dc2(%rip),%rax        # 45e22d <_fini+0xd29>
  45446b:	mov    %rax,%rdx
  45446e:	je     454739 <X509_get0_pubkey_bitstr@plt+0x3dd69>
  454474:	cmpl   $0x1,0x50(%rsp)
  454479:	lea    0xb561(%rip),%rax        # 45f9e1 <_fini+0x24dd>
  454480:	movq   $0x0,0x98(%rsp)
  45448c:	cmovne %rdx,%rax
  454490:	mov    %rax,0x30(%rsp)
  454495:	mov    0x58(%rsp),%rsi
  45449a:	test   %rsi,%rsi
  45449d:	je     4549a1 <X509_get0_pubkey_bitstr@plt+0x3dfd1>
  4544a3:	mov    0x148(%rsp),%r8
  4544ab:	mov    (%rbx),%rdi
  4544ae:	lea    0x141f8(%rip),%r9        # 4686ad <_fini+0xb1a9>
  4544b5:	xor    %ecx,%ecx
  4544b7:	mov    $0x3,%edx
  4544bc:	callq  446530 <X509_get0_pubkey_bitstr@plt+0x2fb60>
  4544c1:	test   %rax,%rax
  4544c4:	mov    %rax,0x80(%rsp)
  4544cc:	je     454c30 <X509_get0_pubkey_bitstr@plt+0x3e260>
  4544d2:	cmp    $0x22,%r12d
  4544d6:	sete   0x150(%rsp)
  4544de:	je     4549b2 <X509_get0_pubkey_bitstr@plt+0x3dfe2>
  4544e4:	cmp    $0x3f,%r12d
  4544e8:	je     454b18 <X509_get0_pubkey_bitstr@plt+0x3e148>
  4544ee:	cmpb   $0x0,0x150(%rsp)
  4544f6:	jne    45529c <X509_get0_pubkey_bitstr@plt+0x3e8cc>
  4544fc:	cmp    $0x53,%r12d
  454500:	movq   $0x0,0x68(%rsp)
  454509:	je     454929 <X509_get0_pubkey_bitstr@plt+0x3df59>
  45450f:	movq   $0x0,0x88(%rsp)
  45451b:	movq   $0x0,0x58(%rsp)
  454524:	mov    0x60(%rsp),%rdi
  454529:	test   %rdi,%rdi
  45452c:	je     454bb9 <X509_get0_pubkey_bitstr@plt+0x3e1e9>
  454532:	mov    0x30(%rsp),%rsi
  454537:	callq  412ba0 <BIO_new_file@plt>
  45453c:	test   %rax,%rax
  45453f:	mov    %rax,0x38(%rsp)
  454544:	je     454c87 <X509_get0_pubkey_bitstr@plt+0x3e2b7>
  45454a:	mov    0x28(%rsp),%edi
  45454e:	test   %edi,%edi
  454550:	je     45487a <X509_get0_pubkey_bitstr@plt+0x3deaa>
  454556:	cmpl   $0x6,0x50(%rsp)
  45455b:	je     454ce0 <X509_get0_pubkey_bitstr@plt+0x3e310>
  454561:	cmpl   $0x3,0x50(%rsp)
  454566:	je     4551a4 <X509_get0_pubkey_bitstr@plt+0x3e7d4>
  45456c:	cmpl   $0x1,0x50(%rsp)
  454571:	je     4551be <X509_get0_pubkey_bitstr@plt+0x3e7ee>
  454577:	mov    (%rbx),%rdi
  45457a:	lea    0x1a77f(%rip),%rsi        # 46ed00 <_fini+0x117fc>
  454581:	xor    %eax,%eax
  454583:	xor    %r14d,%r14d
  454586:	xor    %r15d,%r15d
  454589:	callq  413c40 <BIO_printf@plt>
  45458e:	movq   $0x0,0x60(%rsp)
  454597:	movq   $0x0,0x30(%rsp)
  4545a0:	mov    0x2219d1(%rip),%rax        # 675f78 <_fini+0x218a74>
  4545a7:	movq   $0x0,0x50(%rsp)
  4545b0:	mov    $0x2,%r12d
  4545b6:	movq   $0x0,0x48(%rsp)
  4545bf:	movq   $0x0,0x28(%rsp)
  4545c8:	mov    %rax,0x78(%rsp)
  4545cd:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  4545d2:	callq  4152b0 <BIO_s_file@plt>
  4545d7:	mov    %rax,%rdi
  4545da:	callq  414a20 <BIO_new@plt>
  4545df:	test   %rax,%rax
  4545e2:	mov    %rax,%rdi
  4545e5:	mov    %rax,(%rbx)
  4545e8:	je     4534c1 <X509_get0_pubkey_bitstr@plt+0x3caf1>
  4545ee:	mov    0x22198b(%rip),%rax        # 675f80 <_fini+0x218a7c>
  4545f5:	mov    $0x10,%edx
  4545fa:	mov    $0x6a,%esi
  4545ff:	mov    (%rax),%rcx
  454602:	callq  412af0 <BIO_ctrl@plt>
  454607:	mov    (%rbx),%rdi
  45460a:	jmpq   4534c1 <X509_get0_pubkey_bitstr@plt+0x3caf1>
  45460f:	movl   $0x1,0xcc(%rsp)
  45461a:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  45461f:	nop
  454620:	mov    (%rbx),%rdi
  454623:	lea    0x19976(%rip),%rsi        # 46dfa0 <_fini+0x10a9c>
  45462a:	xor    %r13d,%r13d
  45462d:	callq  413b70 <BIO_puts@plt>
  454632:	movq   $0x0,0x20(%rsp)
  45463b:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  454640:	cmpl   $0x1,0xe0(%rsp)
  454648:	lea    0xefc9(%rip),%rax        # 463618 <_fini+0x6114>
  45464f:	cmove  %rdx,%rax
  454653:	mov    %rax,0x158(%rsp)
  45465b:	jmpq   45445a <X509_get0_pubkey_bitstr@plt+0x3da8a>
  454660:	mov    0x8(%r8),%rax
  454664:	test   %rax,%rax
  454667:	mov    %rax,0x48(%rsp)
  45466c:	je     453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  454672:	add    $0x8,%r8
  454676:	mov    $0x30,%r12d
  45467c:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  454681:	cmpq   $0x0,0x38(%rsp)
  454687:	jne    4543aa <X509_get0_pubkey_bitstr@plt+0x3d9da>
  45468d:	cmpq   $0x0,0xd0(%rsp)
  454696:	je     454ac4 <X509_get0_pubkey_bitstr@plt+0x3e0f4>
  45469c:	xor    %r15d,%r15d
  45469f:	movq   $0x0,0x18(%rsp)
  4546a8:	xor    %ebp,%ebp
  4546aa:	jmpq   453c31 <X509_get0_pubkey_bitstr@plt+0x3d261>
  4546af:	mov    0x68(%rsp),%r14
  4546b4:	mov    (%rbx),%rsi
  4546b7:	test   %r14,%r14
  4546ba:	setne  %cl
  4546bd:	xor    %edi,%edi
  4546bf:	movzbl %cl,%edx
  4546c2:	mov    %ecx,0x28(%rsp)
  4546c6:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  4546cb:	mov    0x28(%rsp),%ecx
  4546cf:	test   %cl,%cl
  4546d1:	je     45440a <X509_get0_pubkey_bitstr@plt+0x3da3a>
  4546d7:	mov    %r14,%rdi
  4546da:	callq  44a710 <X509_get0_pubkey_bitstr@plt+0x33d40>
  4546df:	mov    (%rbx),%rdi
  4546e2:	lea    0xb6a8(%rip),%rsi        # 45fd91 <_fini+0x288d>
  4546e9:	mov    %rax,%rdx
  4546ec:	xor    %eax,%eax
  4546ee:	callq  413c40 <BIO_printf@plt>
  4546f3:	jmpq   45440a <X509_get0_pubkey_bitstr@plt+0x3da3a>
  4546f8:	mov    (%rbx),%rdi
  4546fb:	lea    0x1a4e6(%rip),%rsi        # 46ebe8 <_fini+0x116e4>
  454702:	callq  413b70 <BIO_puts@plt>
  454707:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  45470c:	mov    0x168(%rsp),%rax
  454714:	cmpq   $0x0,(%rax)
  454718:	je     454bd4 <X509_get0_pubkey_bitstr@plt+0x3e204>
  45471e:	movl   $0x1,0xc8(%rsp)
  454729:	movq   $0x0,0x18(%rsp)
  454732:	xor    %ebp,%ebp
  454734:	jmpq   453c31 <X509_get0_pubkey_bitstr@plt+0x3d261>
  454739:	testb  $0x80,0xa8(%rsp)
  454741:	lea    0xb299(%rip),%rax        # 45f9e1 <_fini+0x24dd>
  454748:	cmove  %rdx,%rax
  45474c:	cmp    $0x11,%r12d
  454750:	mov    %rax,0x30(%rsp)
  454755:	jne    454869 <X509_get0_pubkey_bitstr@plt+0x3de99>
  45475b:	cmpq   $0x0,0xc0(%rsp)
  454764:	je     45542a <X509_get0_pubkey_bitstr@plt+0x3ea5a>
  45476a:	cmpq   $0x0,0x70(%rsp)
  454770:	je     454a42 <X509_get0_pubkey_bitstr@plt+0x3e072>
  454776:	mov    0x168(%rsp),%rax
  45477e:	cmpq   $0x0,(%rax)
  454782:	je     454869 <X509_get0_pubkey_bitstr@plt+0x3de99>
  454788:	callq  412cd0 <sk_new_null@plt>
  45478d:	mov    %rax,%r14
  454790:	mov    %rax,0x98(%rsp)
  454798:	mov    0x168(%rsp),%rax
  4547a0:	mov    (%rax),%rsi
  4547a3:	test   %rsi,%rsi
  4547a6:	je     454495 <X509_get0_pubkey_bitstr@plt+0x3dac5>
  4547ac:	mov    %r12d,0x68(%rsp)
  4547b1:	mov    0x148(%rsp),%r12
  4547b9:	jmp    4547ec <X509_get0_pubkey_bitstr@plt+0x3de1c>
  4547bb:	nopl   0x0(%rax,%rax,1)
  4547c0:	mov    %rax,%rsi
  4547c3:	mov    %r14,%rdi
  4547c6:	callq  412fe0 <sk_push@plt>
  4547cb:	mov    0x168(%rsp),%rax
  4547d3:	mov    0x8(%rax),%rsi
  4547d7:	lea    0x8(%rax),%rdx
  4547db:	mov    %rdx,0x168(%rsp)
  4547e3:	test   %rsi,%rsi
  4547e6:	je     454c26 <X509_get0_pubkey_bitstr@plt+0x3e256>
  4547ec:	mov    (%rbx),%rdi
  4547ef:	lea    0x196a0(%rip),%r9        # 46de96 <_fini+0x10992>
  4547f6:	xor    %ecx,%ecx
  4547f8:	mov    %r12,%r8
  4547fb:	mov    $0x3,%edx
  454800:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  454805:	test   %rax,%rax
  454808:	jne    4547c0 <X509_get0_pubkey_bitstr@plt+0x3ddf0>
  45480a:	xor    %r14d,%r14d
  45480d:	xor    %r15d,%r15d
  454810:	movq   $0x0,0x60(%rsp)
  454819:	movq   $0x0,0x30(%rsp)
  454822:	movq   $0x0,0x38(%rsp)
  45482b:	movq   $0x0,0x80(%rsp)
  454837:	movq   $0x0,0x58(%rsp)
  454840:	movq   $0x0,0x68(%rsp)
  454849:	movq   $0x0,0x88(%rsp)
  454855:	jmpq   4545a0 <X509_get0_pubkey_bitstr@plt+0x3dbd0>
  45485a:	lea    0xb0d3(%rip),%rsi        # 45f934 <_fini+0x2430>
  454861:	mov    (%rbx),%rdi
  454864:	jmpq   453fa2 <X509_get0_pubkey_bitstr@plt+0x3d5d2>
  454869:	movq   $0x0,0x98(%rsp)
  454875:	jmpq   454495 <X509_get0_pubkey_bitstr@plt+0x3dac5>
  45487a:	movq   $0x0,0x28(%rsp)
  454883:	mov    0x2216ee(%rip),%rax        # 675f78 <_fini+0x218a74>
  45488a:	mov    %rax,0x78(%rsp)
  45488f:	mov    0x48(%rsp),%rdi
  454894:	test   %rdi,%rdi
  454897:	je     454dcf <X509_get0_pubkey_bitstr@plt+0x3e3ff>
  45489d:	cmpl   $0x1,0x100(%rsp)
  4548a5:	je     455616 <X509_get0_pubkey_bitstr@plt+0x3ec46>
  4548ab:	lea    0x997b(%rip),%rsi        # 45e22d <_fini+0xd29>
  4548b2:	callq  412ba0 <BIO_new_file@plt>
  4548b7:	test   %rax,%rax
  4548ba:	mov    %rax,0x60(%rsp)
  4548bf:	je     4551ee <X509_get0_pubkey_bitstr@plt+0x3e81e>
  4548c5:	cmpl   $0x6,0x100(%rsp)
  4548cd:	je     455100 <X509_get0_pubkey_bitstr@plt+0x3e730>
  4548d3:	cmpl   $0x3,0x100(%rsp)
  4548db:	je     4551d4 <X509_get0_pubkey_bitstr@plt+0x3e804>
  4548e1:	mov    (%rbx),%rdi
  4548e4:	lea    0x1a225(%rip),%rsi        # 46eb10 <_fini+0x1160c>
  4548eb:	xor    %eax,%eax
  4548ed:	xor    %r14d,%r14d
  4548f0:	xor    %r15d,%r15d
  4548f3:	mov    $0x2,%r12d
  4548f9:	callq  413c40 <BIO_printf@plt>
  4548fe:	movq   $0x0,0x30(%rsp)
  454907:	movq   $0x0,0x50(%rsp)
  454910:	movq   $0x0,0x48(%rsp)
  454919:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  45491e:	mov    $0x35,%r12d
  454924:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  454929:	test   %r15,%r15
  45492c:	movq   $0x0,0x88(%rsp)
  454938:	je     454cb8 <X509_get0_pubkey_bitstr@plt+0x3e2e8>
  45493e:	lea    0x1956c(%rip),%rax        # 46deb1 <_fini+0x109ad>
  454945:	mov    0x148(%rsp),%r9
  45494d:	mov    0x178(%rsp),%r8
  454955:	mov    0xe4(%rsp),%edx
  45495c:	xor    %ecx,%ecx
  45495e:	mov    %r15,%rsi
  454961:	mov    %rax,(%rsp)
  454965:	mov    (%rbx),%rdi
  454968:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  45496d:	test   %rax,%rax
  454970:	mov    %rax,0x58(%rsp)
  454975:	jne    454524 <X509_get0_pubkey_bitstr@plt+0x3db54>
  45497b:	xor    %r14d,%r14d
  45497e:	xor    %r15d,%r15d
  454981:	movq   $0x0,0x60(%rsp)
  45498a:	movq   $0x0,0x30(%rsp)
  454993:	movq   $0x0,0x38(%rsp)
  45499c:	jmpq   4545a0 <X509_get0_pubkey_bitstr@plt+0x3dbd0>
  4549a1:	movq   $0x0,0x80(%rsp)
  4549ad:	jmpq   4544d2 <X509_get0_pubkey_bitstr@plt+0x3db02>
  4549b2:	cmpq   $0x0,0x38(%rsp)
  4549b8:	je     4544e4 <X509_get0_pubkey_bitstr@plt+0x3db14>
  4549be:	mov    0x148(%rsp),%r8
  4549c6:	mov    0x38(%rsp),%rsi
  4549cb:	lea    0x194c4(%rip),%r9        # 46de96 <_fini+0x10992>
  4549d2:	mov    (%rbx),%rdi
  4549d5:	xor    %ecx,%ecx
  4549d7:	mov    $0x3,%edx
  4549dc:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  4549e1:	test   %rax,%rax
  4549e4:	mov    %rax,0x88(%rsp)
  4549ec:	je     455164 <X509_get0_pubkey_bitstr@plt+0x3e794>
  4549f2:	test   %r15,%r15
  4549f5:	je     455151 <X509_get0_pubkey_bitstr@plt+0x3e781>
  4549fb:	movq   $0x0,0x68(%rsp)
  454a04:	jmpq   45493e <X509_get0_pubkey_bitstr@plt+0x3df6e>
  454a09:	mov    (%rbx),%rdi
  454a0c:	lea    0x195b5(%rip),%rsi        # 46dfc8 <_fini+0x10ac4>
  454a13:	xor    %eax,%eax
  454a15:	xor    %ebp,%ebp
  454a17:	callq  413c40 <BIO_printf@plt>
  454a1c:	movl   $0x1,0x160(%rsp)
  454a27:	movl   $0x1,0xc8(%rsp)
  454a32:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  454a37:	mov    $0x27,%r12d
  454a3d:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  454a42:	cmpq   $0x0,0x40(%rsp)
  454a48:	je     454776 <X509_get0_pubkey_bitstr@plt+0x3dda6>
  454a4e:	mov    (%rbx),%rdi
  454a51:	lea    0x1a06f(%rip),%rsi        # 46eac7 <_fini+0x115c3>
  454a58:	xor    %eax,%eax
  454a5a:	xor    %r14d,%r14d
  454a5d:	xor    %r15d,%r15d
  454a60:	callq  413c40 <BIO_printf@plt>
  454a65:	movq   $0x0,0x70(%rsp)
  454a6e:	movq   $0x0,0x60(%rsp)
  454a77:	movq   $0x0,0x30(%rsp)
  454a80:	movq   $0x0,0x38(%rsp)
  454a89:	movq   $0x0,0x80(%rsp)
  454a95:	movq   $0x0,0x98(%rsp)
  454aa1:	movq   $0x0,0x58(%rsp)
  454aaa:	movq   $0x0,0x68(%rsp)
  454ab3:	movq   $0x0,0x88(%rsp)
  454abf:	jmpq   4545a0 <X509_get0_pubkey_bitstr@plt+0x3dbd0>
  454ac4:	cmpq   $0x0,0x40(%rsp)
  454aca:	jne    45469c <X509_get0_pubkey_bitstr@plt+0x3dccc>
  454ad0:	mov    (%rbx),%rdi
  454ad3:	lea    0x19516(%rip),%rsi        # 46dff0 <_fini+0x10aec>
  454ada:	xor    %eax,%eax
  454adc:	xor    %ebp,%ebp
  454ade:	callq  413c40 <BIO_printf@plt>
  454ae3:	movl   $0x1,0x160(%rsp)
  454aee:	movq   $0x0,0x18(%rsp)
  454af7:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  454afc:	callq  412cd0 <sk_new_null@plt>
  454b01:	mov    %rax,0x18(%rsp)
  454b06:	jmpq   453bed <X509_get0_pubkey_bitstr@plt+0x3d21d>
  454b0b:	callq  412cd0 <sk_new_null@plt>
  454b10:	mov    %rax,%rbp
  454b13:	jmpq   453bd1 <X509_get0_pubkey_bitstr@plt+0x3d201>
  454b18:	mov    0x148(%rsp),%r8
  454b20:	mov    0xa0(%rsp),%rsi
  454b28:	lea    0x1a1b1(%rip),%r9        # 46ece0 <_fini+0x117dc>
  454b2f:	mov    (%rbx),%rdi
  454b32:	xor    %ecx,%ecx
  454b34:	mov    $0x3,%edx
  454b39:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  454b3e:	test   %rax,%rax
  454b41:	mov    %rax,0x68(%rsp)
  454b46:	jne    454929 <X509_get0_pubkey_bitstr@plt+0x3df59>
  454b4c:	mov    (%rbx),%rdi
  454b4f:	xor    %r14d,%r14d
  454b52:	xor    %r15d,%r15d
  454b55:	callq  413f40 <ERR_print_errors@plt>
  454b5a:	movq   $0x0,0x60(%rsp)
  454b63:	movq   $0x0,0x30(%rsp)
  454b6c:	movq   $0x0,0x38(%rsp)
  454b75:	movq   $0x0,0x58(%rsp)
  454b7e:	movq   $0x0,0x88(%rsp)
  454b8a:	mov    0x2213e7(%rip),%rax        # 675f78 <_fini+0x218a74>
  454b91:	movq   $0x0,0x50(%rsp)
  454b9a:	mov    $0x2,%r12b
  454b9d:	movq   $0x0,0x48(%rsp)
  454ba6:	movq   $0x0,0x28(%rsp)
  454baf:	mov    %rax,0x78(%rsp)
  454bb4:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  454bb9:	mov    0x221350(%rip),%rax        # 675f10 <_fini+0x218a0c>
  454bc0:	xor    %esi,%esi
  454bc2:	mov    (%rax),%rdi
  454bc5:	callq  4161e0 <BIO_new_fp@plt>
  454bca:	mov    %rax,0x38(%rsp)
  454bcf:	jmpq   45454a <X509_get0_pubkey_bitstr@plt+0x3db7a>
  454bd4:	cmpq   $0x0,0x40(%rsp)
  454bda:	jne    45471e <X509_get0_pubkey_bitstr@plt+0x3dd4e>
  454be0:	cmpq   $0x0,0xd0(%rsp)
  454be9:	jne    45471e <X509_get0_pubkey_bitstr@plt+0x3dd4e>
  454bef:	mov    (%rbx),%rdi
  454bf2:	lea    0x19427(%rip),%rsi        # 46e020 <_fini+0x10b1c>
  454bf9:	xor    %eax,%eax
  454bfb:	xor    %ebp,%ebp
  454bfd:	callq  413c40 <BIO_printf@plt>
  454c02:	movl   $0x1,0x160(%rsp)
  454c0d:	movl   $0x1,0xc8(%rsp)
  454c18:	movq   $0x0,0x18(%rsp)
  454c21:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  454c26:	mov    0x68(%rsp),%r12d
  454c2b:	jmpq   454495 <X509_get0_pubkey_bitstr@plt+0x3dac5>
  454c30:	mov    (%rbx),%rdi
  454c33:	xor    %r14d,%r14d
  454c36:	xor    %r15d,%r15d
  454c39:	callq  413f40 <ERR_print_errors@plt>
  454c3e:	movq   $0x0,0x60(%rsp)
  454c47:	movq   $0x0,0x30(%rsp)
  454c50:	movq   $0x0,0x38(%rsp)
  454c59:	movq   $0x0,0x58(%rsp)
  454c62:	movq   $0x0,0x68(%rsp)
  454c6b:	movq   $0x0,0x88(%rsp)
  454c77:	jmpq   4545a0 <X509_get0_pubkey_bitstr@plt+0x3dbd0>
  454c7c:	mov    $0x18,%r12d
  454c82:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  454c87:	mov    0x60(%rsp),%rdx
  454c8c:	mov    (%rbx),%rdi
  454c8f:	lea    0x1795b(%rip),%rsi        # 46c5f1 <_fini+0xf0ed>
  454c96:	xor    %r14d,%r14d
  454c99:	xor    %r15d,%r15d
  454c9c:	callq  413c40 <BIO_printf@plt>
  454ca1:	movq   $0x0,0x60(%rsp)
  454caa:	movq   $0x0,0x30(%rsp)
  454cb3:	jmpq   4545a0 <X509_get0_pubkey_bitstr@plt+0x3dbd0>
  454cb8:	mov    0xa0(%rsp),%r15
  454cc0:	test   %r15,%r15
  454cc3:	jne    45493e <X509_get0_pubkey_bitstr@plt+0x3df6e>
  454cc9:	movq   $0x0,0x58(%rsp)
  454cd2:	jmpq   454524 <X509_get0_pubkey_bitstr@plt+0x3db54>
  454cd7:	nopw   0x0(%rax,%rax,1)
  454ce0:	mov    0x38(%rsp),%rdi
  454ce5:	lea    0x170(%rsp),%rsi
  454ced:	callq  414dd0 <SMIME_read_CMS@plt>
  454cf2:	mov    %rax,0x28(%rsp)
  454cf7:	cmpq   $0x0,0x28(%rsp)
  454cfd:	je     45524a <X509_get0_pubkey_bitstr@plt+0x3e87a>
  454d03:	mov    0x78(%rsp),%r15
  454d08:	test   %r15,%r15
  454d0b:	je     454d3a <X509_get0_pubkey_bitstr@plt+0x3e36a>
  454d0d:	mov    0x170(%rsp),%rdi
  454d15:	callq  413960 <BIO_free@plt>
  454d1a:	lea    0xacc0(%rip),%rsi        # 45f9e1 <_fini+0x24dd>
  454d21:	mov    %r15,%rdi
  454d24:	callq  412ba0 <BIO_new_file@plt>
  454d29:	test   %rax,%rax
  454d2c:	mov    %rax,0x170(%rsp)
  454d34:	je     455411 <X509_get0_pubkey_bitstr@plt+0x3ea41>
  454d3a:	cmpq   $0x0,0xf8(%rsp)
  454d43:	je     454883 <X509_get0_pubkey_bitstr@plt+0x3deb3>
  454d49:	mov    0x28(%rsp),%rdi
  454d4e:	callq  415a90 <CMS_get1_certs@plt>
  454d53:	mov    0xf8(%rsp),%r15
  454d5b:	mov    %rax,%rsi
  454d5e:	mov    %rax,%r14
  454d61:	mov    %r15,%rdi
  454d64:	callq  4533c0 <X509_get0_pubkey_bitstr@plt+0x3c9f0>
  454d69:	test   %eax,%eax
  454d6b:	jne    4552ad <X509_get0_pubkey_bitstr@plt+0x3e8dd>
  454d71:	mov    (%rbx),%rdi
  454d74:	lea    0x19d5e(%rip),%rsi        # 46ead9 <_fini+0x115d5>
  454d7b:	mov    %r15,%rdx
  454d7e:	xor    %r14d,%r14d
  454d81:	xor    %r15d,%r15d
  454d84:	mov    $0x5,%r12d
  454d8a:	callq  413c40 <BIO_printf@plt>
  454d8f:	mov    0x2211e2(%rip),%rax        # 675f78 <_fini+0x218a74>
  454d96:	movq   $0x0,0x60(%rsp)
  454d9f:	movq   $0x0,0x30(%rsp)
  454da8:	movq   $0x0,0x50(%rsp)
  454db1:	movq   $0x0,0x48(%rsp)
  454dba:	mov    %rax,0x78(%rsp)
  454dbf:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  454dc4:	mov    $0x29,%r12d
  454dca:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  454dcf:	movq   $0x0,0x60(%rsp)
  454dd8:	movq   $0x0,0x48(%rsp)
  454de1:	mov    0xf0(%rsp),%rdi
  454de9:	test   %rdi,%rdi
  454dec:	je     455588 <X509_get0_pubkey_bitstr@plt+0x3ebb8>
  454df2:	mov    0x158(%rsp),%rsi
  454dfa:	callq  412ba0 <BIO_new_file@plt>
  454dff:	test   %rax,%rax
  454e02:	mov    %rax,0x30(%rsp)
  454e07:	je     455557 <X509_get0_pubkey_bitstr@plt+0x3eb87>
  454e0d:	cmp    $0x24,%r12d
  454e11:	sete   %al
  454e14:	cmp    $0x30,%r12d
  454e18:	mov    %al,0x100(%rsp)
  454e1f:	sete   0xf0(%rsp)
  454e27:	je     4550aa <X509_get0_pubkey_bitstr@plt+0x3e6da>
  454e2d:	test   %al,%al
  454e2f:	movq   $0x0,0x50(%rsp)
  454e38:	jne    4550aa <X509_get0_pubkey_bitstr@plt+0x3e6da>
  454e3e:	cmp    $0x18,%r12d
  454e42:	je     4553f3 <X509_get0_pubkey_bitstr@plt+0x3ea23>
  454e48:	cmp    $0x1a,%r12d
  454e4c:	je     4555f0 <X509_get0_pubkey_bitstr@plt+0x3ec20>
  454e52:	cmp    $0x1c,%r12d
  454e56:	je     4553d0 <X509_get0_pubkey_bitstr@plt+0x3ea00>
  454e5c:	cmp    $0x11,%r12d
  454e60:	je     4552c9 <X509_get0_pubkey_bitstr@plt+0x3e8f9>
  454e66:	cmp    $0x1e,%r12d
  454e6a:	je     45564b <X509_get0_pubkey_bitstr@plt+0x3ec7b>
  454e70:	cmp    $0x3f,%r12d
  454e74:	je     456045 <X509_get0_pubkey_bitstr@plt+0x3f675>
  454e7a:	mov    0xd8(%rsp),%esi
  454e81:	test   %esi,%esi
  454e83:	je     455020 <X509_get0_pubkey_bitstr@plt+0x3e650>
  454e89:	cmp    $0x53,%r12d
  454e8d:	je     455f54 <X509_get0_pubkey_bitstr@plt+0x3f584>
  454e93:	orl    $0x8000,0xa8(%rsp)
  454e9e:	xor    %r15d,%r15d
  454ea1:	mov    %r12d,0xb8(%rsp)
  454ea9:	mov    %r13,0xb0(%rsp)
  454eb1:	xor    %r14d,%r14d
  454eb4:	mov    0x68(%rsp),%r12
  454eb9:	mov    0x58(%rsp),%r13
  454ebe:	jmpq   454fb5 <X509_get0_pubkey_bitstr@plt+0x3e5e5>
  454ec3:	nopl   0x0(%rax,%rax,1)
  454ec8:	mov    %r14d,%esi
  454ecb:	mov    %rbp,%rdi
  454ece:	callq  412b30 <sk_value@plt>
  454ed3:	mov    0x18(%rsp),%rdi
  454ed8:	mov    %r14d,%esi
  454edb:	mov    %rax,%r12
  454ede:	mov    %rax,0xa0(%rsp)
  454ee6:	callq  412b30 <sk_value@plt>
  454eeb:	mov    0x148(%rsp),%r8
  454ef3:	mov    (%rbx),%rdi
  454ef6:	lea    0x18fff(%rip),%r9        # 46defc <_fini+0x109f8>
  454efd:	xor    %ecx,%ecx
  454eff:	mov    %r12,%rsi
  454f02:	mov    $0x3,%edx
  454f07:	mov    %rax,0x58(%rsp)
  454f0c:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  454f11:	test   %rax,%rax
  454f14:	mov    %rax,%r12
  454f17:	je     455dc5 <X509_get0_pubkey_bitstr@plt+0x3f3f5>
  454f1d:	lea    0x18f8d(%rip),%rdx        # 46deb1 <_fini+0x109ad>
  454f24:	mov    0x148(%rsp),%r9
  454f2c:	mov    0x178(%rsp),%r8
  454f34:	mov    0x58(%rsp),%rsi
  454f39:	xor    %ecx,%ecx
  454f3b:	mov    %rdx,(%rsp)
  454f3f:	mov    0xe4(%rsp),%edx
  454f46:	mov    (%rbx),%rdi
  454f49:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  454f4e:	test   %rax,%rax
  454f51:	mov    %rax,%r13
  454f54:	je     455dc5 <X509_get0_pubkey_bitstr@plt+0x3f3f5>
  454f5a:	mov    0xa8(%rsp),%r8d
  454f62:	mov    0x108(%rsp),%rcx
  454f6a:	mov    %rax,%rdx
  454f6d:	mov    0x28(%rsp),%rdi
  454f72:	mov    %r12,%rsi
  454f75:	callq  415650 <CMS_add1_signer@plt>
  454f7a:	test   %rax,%rax
  454f7d:	je     455dc5 <X509_get0_pubkey_bitstr@plt+0x3f3f5>
  454f83:	test   %r15,%r15
  454f86:	je     454f9b <X509_get0_pubkey_bitstr@plt+0x3e5cb>
  454f88:	mov    %r15,%rsi
  454f8b:	mov    %rax,%rdi
  454f8e:	callq  415820 <CMS_add1_ReceiptRequest@plt>
  454f93:	test   %eax,%eax
  454f95:	je     455dc5 <X509_get0_pubkey_bitstr@plt+0x3f3f5>
  454f9b:	mov    %r12,%rdi
  454f9e:	add    $0x1,%r14d
  454fa2:	xor    %r12d,%r12d
  454fa5:	callq  4153a0 <X509_free@plt>
  454faa:	mov    %r13,%rdi
  454fad:	xor    %r13d,%r13d
  454fb0:	callq  412b00 <EVP_PKEY_free@plt>
  454fb5:	mov    %rbp,%rdi
  454fb8:	callq  4156d0 <sk_num@plt>
  454fbd:	cmp    %eax,%r14d
  454fc0:	jl     454ec8 <X509_get0_pubkey_bitstr@plt+0x3e4f8>
  454fc6:	mov    %r12,0x68(%rsp)
  454fcb:	mov    0xb8(%rsp),%r12d
  454fd3:	mov    %r13,0x58(%rsp)
  454fd8:	mov    0xb0(%rsp),%r13
  454fe0:	cmp    $0x53,%r12d
  454fe4:	jne    455023 <X509_get0_pubkey_bitstr@plt+0x3e653>
  454fe6:	testl  $0x1000,0xa8(%rsp)
  454ff1:	jne    455023 <X509_get0_pubkey_bitstr@plt+0x3e653>
  454ff3:	mov    0xa8(%rsp),%ecx
  454ffa:	mov    0x38(%rsp),%rsi
  454fff:	xor    %edx,%edx
  455001:	mov    0x28(%rsp),%rdi
  455006:	callq  412c70 <CMS_final@plt>
  45500b:	test   %eax,%eax
  45500d:	jne    455023 <X509_get0_pubkey_bitstr@plt+0x3e653>
  45500f:	xor    %r14d,%r14d
  455012:	mov    $0x3,%r12d
  455018:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  45501d:	nopl   (%rax)
  455020:	xor    %r15d,%r15d
  455023:	cmpq   $0x0,0x28(%rsp)
  455029:	je     455538 <X509_get0_pubkey_bitstr@plt+0x3eb68>
  45502f:	cmpb   $0x0,0x150(%rsp)
  455037:	jne    455462 <X509_get0_pubkey_bitstr@plt+0x3ea92>
  45503d:	cmp    $0x27,%r12d
  455041:	je     455e36 <X509_get0_pubkey_bitstr@plt+0x3f466>
  455047:	cmp    $0x2b,%r12d
  45504b:	je     455e08 <X509_get0_pubkey_bitstr@plt+0x3f438>
  455051:	cmp    $0x29,%r12d
  455055:	je     455a01 <X509_get0_pubkey_bitstr@plt+0x3f031>
  45505b:	cmp    $0x2d,%r12d
  45505f:	je     4559c2 <X509_get0_pubkey_bitstr@plt+0x3eff2>
  455065:	cmpb   $0x0,0x100(%rsp)
  45506d:	jne    4556c7 <X509_get0_pubkey_bitstr@plt+0x3ecf7>
  455073:	cmpb   $0x0,0xf0(%rsp)
  45507b:	jne    45567f <X509_get0_pubkey_bitstr@plt+0x3ecaf>
  455081:	mov    0x104(%rsp),%ecx
  455088:	test   %ecx,%ecx
  45508a:	je     4555a3 <X509_get0_pubkey_bitstr@plt+0x3ebd3>
  455090:	mov    0x118(%rsp),%edx
  455097:	test   %edx,%edx
  455099:	jne    455df0 <X509_get0_pubkey_bitstr@plt+0x3f420>
  45509f:	xor    %r14d,%r14d
  4550a2:	xor    %r12d,%r12d
  4550a5:	jmpq   45411c <X509_get0_pubkey_bitstr@plt+0x3d74c>
  4550aa:	mov    0x140(%rsp),%rdx
  4550b2:	mov    0x138(%rsp),%rsi
  4550ba:	mov    (%rbx),%rdi
  4550bd:	callq  446880 <X509_get0_pubkey_bitstr@plt+0x2feb0>
  4550c2:	test   %rax,%rax
  4550c5:	mov    %rax,%r15
  4550c8:	mov    %rax,0x50(%rsp)
  4550cd:	je     455239 <X509_get0_pubkey_bitstr@plt+0x3e869>
  4550d3:	lea    -0x1d5a(%rip),%rsi        # 453380 <X509_get0_pubkey_bitstr@plt+0x3c9b0>
  4550da:	mov    %rax,%rdi
  4550dd:	callq  416470 <X509_STORE_set_verify_cb@plt>
  4550e2:	mov    0x180(%rsp),%rsi
  4550ea:	test   %rsi,%rsi
  4550ed:	je     454e3e <X509_get0_pubkey_bitstr@plt+0x3e46e>
  4550f3:	mov    %r15,%rdi
  4550f6:	callq  4159e0 <X509_STORE_set1_param@plt>
  4550fb:	jmpq   454e3e <X509_get0_pubkey_bitstr@plt+0x3e46e>
  455100:	mov    0x60(%rsp),%rdi
  455105:	xor    %esi,%esi
  455107:	callq  414dd0 <SMIME_read_CMS@plt>
  45510c:	mov    %rax,0x48(%rsp)
  455111:	cmpq   $0x0,0x48(%rsp)
  455117:	jne    454de1 <X509_get0_pubkey_bitstr@plt+0x3e411>
  45511d:	mov    (%rbx),%rdi
  455120:	lea    0x19a07(%rip),%rsi        # 46eb2e <_fini+0x1162a>
  455127:	xor    %eax,%eax
  455129:	xor    %r14d,%r14d
  45512c:	xor    %r15d,%r15d
  45512f:	mov    $0x2,%r12d
  455135:	callq  413c40 <BIO_printf@plt>
  45513a:	movq   $0x0,0x30(%rsp)
  455143:	movq   $0x0,0x50(%rsp)
  45514c:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  455151:	mov    0x38(%rsp),%r15
  455156:	movq   $0x0,0x68(%rsp)
  45515f:	jmpq   454cc0 <X509_get0_pubkey_bitstr@plt+0x3e2f0>
  455164:	mov    (%rbx),%rdi
  455167:	xor    %r14d,%r14d
  45516a:	xor    %r15d,%r15d
  45516d:	callq  413f40 <ERR_print_errors@plt>
  455172:	movq   $0x0,0x60(%rsp)
  45517b:	movq   $0x0,0x30(%rsp)
  455184:	movq   $0x0,0x38(%rsp)
  45518d:	movq   $0x0,0x58(%rsp)
  455196:	movq   $0x0,0x68(%rsp)
  45519f:	jmpq   454b8a <X509_get0_pubkey_bitstr@plt+0x3e1ba>
  4551a4:	mov    0x38(%rsp),%rdi
  4551a9:	xor    %ecx,%ecx
  4551ab:	xor    %edx,%edx
  4551ad:	xor    %esi,%esi
  4551af:	callq  415420 <PEM_read_bio_CMS@plt>
  4551b4:	mov    %rax,0x28(%rsp)
  4551b9:	jmpq   454cf7 <X509_get0_pubkey_bitstr@plt+0x3e327>
  4551be:	mov    0x38(%rsp),%rdi
  4551c3:	xor    %esi,%esi
  4551c5:	callq  415550 <d2i_CMS_bio@plt>
  4551ca:	mov    %rax,0x28(%rsp)
  4551cf:	jmpq   454cf7 <X509_get0_pubkey_bitstr@plt+0x3e327>
  4551d4:	mov    0x60(%rsp),%rdi
  4551d9:	xor    %ecx,%ecx
  4551db:	xor    %edx,%edx
  4551dd:	xor    %esi,%esi
  4551df:	callq  415420 <PEM_read_bio_CMS@plt>
  4551e4:	mov    %rax,0x48(%rsp)
  4551e9:	jmpq   455111 <X509_get0_pubkey_bitstr@plt+0x3e741>
  4551ee:	mov    0x48(%rsp),%rdx
  4551f3:	mov    (%rbx),%rdi
  4551f6:	lea    0x198f7(%rip),%rsi        # 46eaf4 <_fini+0x115f0>
  4551fd:	xor    %eax,%eax
  4551ff:	xor    %r14d,%r14d
  455202:	xor    %r15d,%r15d
  455205:	mov    $0x2,%r12d
  45520b:	callq  413c40 <BIO_printf@plt>
  455210:	movq   $0x0,0x60(%rsp)
  455219:	movq   $0x0,0x30(%rsp)
  455222:	movq   $0x0,0x50(%rsp)
  45522b:	movq   $0x0,0x48(%rsp)
  455234:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  455239:	xor    %r14d,%r14d
  45523c:	xor    %r15d,%r15d
  45523f:	mov    $0x2,%r12d
  455245:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  45524a:	mov    (%rbx),%rdi
  45524d:	lea    0x18c6e(%rip),%rsi        # 46dec2 <_fini+0x109be>
  455254:	xor    %eax,%eax
  455256:	callq  413c40 <BIO_printf@plt>
  45525b:	mov    0x220d16(%rip),%rax        # 675f78 <_fini+0x218a74>
  455262:	xor    %r14d,%r14d
  455265:	xor    %r15d,%r15d
  455268:	movq   $0x0,0x60(%rsp)
  455271:	movq   $0x0,0x30(%rsp)
  45527a:	mov    $0x2,%r12d
  455280:	movq   $0x0,0x50(%rsp)
  455289:	movq   $0x0,0x48(%rsp)
  455292:	mov    %rax,0x78(%rsp)
  455297:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  45529c:	movq   $0x0,0x88(%rsp)
  4552a8:	jmpq   4549f2 <X509_get0_pubkey_bitstr@plt+0x3e022>
  4552ad:	mov    0x220cc4(%rip),%rax        # 675f78 <_fini+0x218a74>
  4552b4:	mov    %r14,%rdi
  4552b7:	mov    %rax,%rsi
  4552ba:	mov    %rax,0x78(%rsp)
  4552bf:	callq  416250 <sk_pop_free@plt>
  4552c4:	jmpq   45488f <X509_get0_pubkey_bitstr@plt+0x3debf>
  4552c9:	mov    0xa8(%rsp),%r15d
  4552d1:	mov    0x98(%rsp),%rdi
  4552d9:	mov    0xc0(%rsp),%rdx
  4552e1:	mov    0x38(%rsp),%rsi
  4552e6:	or     $0x4000,%r15d
  4552ed:	mov    %r15d,%ecx
  4552f0:	callq  415670 <CMS_encrypt@plt>
  4552f5:	test   %rax,%rax
  4552f8:	mov    %rax,%rdi
  4552fb:	mov    %rax,0x28(%rsp)
  455300:	je     455c08 <X509_get0_pubkey_bitstr@plt+0x3f238>
  455306:	mov    0x40(%rsp),%rdx
  45530b:	test   %rdx,%rdx
  45530e:	je     455358 <X509_get0_pubkey_bitstr@plt+0x3e988>
  455310:	mov    0x110(%rsp),%r9
  455318:	mov    0x70(%rsp),%r8
  45531d:	xor    %esi,%esi
  45531f:	mov    0xe8(%rsp),%rcx
  455327:	movq   $0x0,0x10(%rsp)
  455330:	movq   $0x0,0x8(%rsp)
  455339:	movq   $0x0,(%rsp)
  455341:	callq  416540 <CMS_add0_recipient_key@plt>
  455346:	test   %rax,%rax
  455349:	je     455c08 <X509_get0_pubkey_bitstr@plt+0x3f238>
  45534f:	movq   $0x0,0x70(%rsp)
  455358:	cmpq   $0x0,0xd0(%rsp)
  455361:	je     4553a5 <X509_get0_pubkey_bitstr@plt+0x3e9d5>
  455363:	mov    0xd0(%rsp),%rdi
  45536b:	callq  415630 <BUF_strdup@plt>
  455370:	test   %rax,%rax
  455373:	mov    %rax,%r14
  455376:	je     455c38 <X509_get0_pubkey_bitstr@plt+0x3f268>
  45537c:	mov    0x28(%rsp),%rdi
  455381:	or     $0xffffffffffffffff,%r9
  455385:	xor    %ecx,%ecx
  455387:	xor    %edx,%edx
  455389:	or     $0xffffffff,%esi
  45538c:	movq   $0x0,(%rsp)
  455394:	mov    %rax,%r8
  455397:	callq  4129e0 <CMS_add0_recipient_password@plt>
  45539c:	test   %rax,%rax
  45539f:	je     455c38 <X509_get0_pubkey_bitstr@plt+0x3f268>
  4553a5:	testl  $0x1000,0xa8(%rsp)
  4553b0:	je     455c19 <X509_get0_pubkey_bitstr@plt+0x3f249>
  4553b6:	movq   $0x0,0x40(%rsp)
  4553bf:	mov    %r15d,0xa8(%rsp)
  4553c7:	xor    %r15d,%r15d
  4553ca:	jmpq   45502f <X509_get0_pubkey_bitstr@plt+0x3e65f>
  4553cf:	nop
  4553d0:	mov    0xa8(%rsp),%edx
  4553d7:	mov    0x38(%rsp),%rdi
  4553dc:	mov    $0xffffffff,%esi
  4553e1:	xor    %r15d,%r15d
  4553e4:	callq  4160e0 <CMS_compress@plt>
  4553e9:	mov    %rax,0x28(%rsp)
  4553ee:	jmpq   455023 <X509_get0_pubkey_bitstr@plt+0x3e653>
  4553f3:	mov    0xa8(%rsp),%esi
  4553fa:	mov    0x38(%rsp),%rdi
  4553ff:	xor    %r15d,%r15d
  455402:	callq  415870 <CMS_data_create@plt>
  455407:	mov    %rax,0x28(%rsp)
  45540c:	jmpq   455023 <X509_get0_pubkey_bitstr@plt+0x3e653>
  455411:	mov    0x78(%rsp),%rdx
  455416:	mov    (%rbx),%rdi
  455419:	lea    0x18ac0(%rip),%rsi        # 46dee0 <_fini+0x109dc>
  455420:	callq  413c40 <BIO_printf@plt>
  455425:	jmpq   45525b <X509_get0_pubkey_bitstr@plt+0x3e88b>
  45542a:	callq  415db0 <EVP_des_ede3_cbc@plt>
  45542f:	mov    %rax,0xc0(%rsp)
  455437:	jmpq   45476a <X509_get0_pubkey_bitstr@plt+0x3dd9a>
  45543c:	callq  414c30 <__stack_chk_fail@plt>
  455441:	mov    $0x2b,%r12d
  455447:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  45544c:	mov    $0x1c,%r12d
  455452:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455457:	mov    $0x1a,%r12d
  45545d:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455462:	testl  $0x20000,0xa8(%rsp)
  45546d:	jne    455f34 <X509_get0_pubkey_bitstr@plt+0x3f564>
  455473:	mov    0x40(%rsp),%rsi
  455478:	test   %rsi,%rsi
  45547b:	je     4554a4 <X509_get0_pubkey_bitstr@plt+0x3ead4>
  45547d:	mov    0x110(%rsp),%r8
  455485:	mov    0x70(%rsp),%rcx
  45548a:	mov    0xe8(%rsp),%rdx
  455492:	mov    0x28(%rsp),%rdi
  455497:	callq  414780 <CMS_decrypt_set1_key@plt>
  45549c:	test   %eax,%eax
  45549e:	je     456108 <X509_get0_pubkey_bitstr@plt+0x3f738>
  4554a4:	mov    0x58(%rsp),%rsi
  4554a9:	test   %rsi,%rsi
  4554ac:	je     4554c8 <X509_get0_pubkey_bitstr@plt+0x3eaf8>
  4554ae:	mov    0x88(%rsp),%rdx
  4554b6:	mov    0x28(%rsp),%rdi
  4554bb:	callq  412a50 <CMS_decrypt_set1_pkey@plt>
  4554c0:	test   %eax,%eax
  4554c2:	je     4560eb <X509_get0_pubkey_bitstr@plt+0x3f71b>
  4554c8:	mov    0xd0(%rsp),%rsi
  4554d0:	test   %rsi,%rsi
  4554d3:	je     4554eb <X509_get0_pubkey_bitstr@plt+0x3eb1b>
  4554d5:	mov    0x28(%rsp),%rdi
  4554da:	or     $0xffffffffffffffff,%rdx
  4554de:	callq  416060 <CMS_decrypt_set1_password@plt>
  4554e3:	test   %eax,%eax
  4554e5:	je     456141 <X509_get0_pubkey_bitstr@plt+0x3f771>
  4554eb:	mov    0xa8(%rsp),%r9d
  4554f3:	mov    0x30(%rsp),%r8
  4554f8:	xor    %edx,%edx
  4554fa:	mov    0x170(%rsp),%rcx
  455502:	mov    0x28(%rsp),%rdi
  455507:	xor    %esi,%esi
  455509:	callq  4132c0 <CMS_decrypt@plt>
  45550e:	test   %eax,%eax
  455510:	jne    45509f <X509_get0_pubkey_bitstr@plt+0x3e6cf>
  455516:	mov    (%rbx),%rdi
  455519:	lea    0x198a0(%rip),%rsi        # 46edc0 <_fini+0x118bc>
  455520:	xor    %r14d,%r14d
  455523:	mov    $0x4,%r12d
  455529:	callq  413c40 <BIO_printf@plt>
  45552e:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  455533:	nopl   0x0(%rax,%rax,1)
  455538:	mov    (%rbx),%rdi
  45553b:	lea    0x19603(%rip),%rsi        # 46eb45 <_fini+0x11641>
  455542:	xor    %eax,%eax
  455544:	xor    %r14d,%r14d
  455547:	mov    $0x3,%r12d
  45554d:	callq  413c40 <BIO_printf@plt>
  455552:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  455557:	mov    0xf0(%rsp),%rdx
  45555f:	mov    (%rbx),%rdi
  455562:	lea    0x10e02(%rip),%rsi        # 46636b <_fini+0x8e67>
  455569:	xor    %r14d,%r14d
  45556c:	xor    %r15d,%r15d
  45556f:	mov    $0x2,%r12d
  455575:	callq  413c40 <BIO_printf@plt>
  45557a:	movq   $0x0,0x50(%rsp)
  455583:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  455588:	mov    0x220929(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  45558f:	xor    %esi,%esi
  455591:	mov    (%rax),%rdi
  455594:	callq  4161e0 <BIO_new_fp@plt>
  455599:	mov    %rax,0x30(%rsp)
  45559e:	jmpq   454e0d <X509_get0_pubkey_bitstr@plt+0x3e43d>
  4555a3:	cmpl   $0x6,0xe0(%rsp)
  4555ab:	je     455eaa <X509_get0_pubkey_bitstr@plt+0x3f4da>
  4555b1:	cmpl   $0x3,0xe0(%rsp)
  4555b9:	je     455e8d <X509_get0_pubkey_bitstr@plt+0x3f4bd>
  4555bf:	cmpl   $0x1,0xe0(%rsp)
  4555c7:	lea    0x19832(%rip),%rsi        # 46ee00 <_fini+0x118fc>
  4555ce:	je     455e5c <X509_get0_pubkey_bitstr@plt+0x3f48c>
  4555d4:	mov    (%rbx),%rdi
  4555d7:	xor    %eax,%eax
  4555d9:	callq  413c40 <BIO_printf@plt>
  4555de:	xor    %r14d,%r14d
  4555e1:	mov    $0x4,%r12d
  4555e7:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  4555ec:	nopl   0x0(%rax)
  4555f0:	mov    0xa8(%rsp),%edx
  4555f7:	mov    0x108(%rsp),%rsi
  4555ff:	xor    %r15d,%r15d
  455602:	mov    0x38(%rsp),%rdi
  455607:	callq  413a70 <CMS_digest_create@plt>
  45560c:	mov    %rax,0x28(%rsp)
  455611:	jmpq   455023 <X509_get0_pubkey_bitstr@plt+0x3e653>
  455616:	mov    0x48(%rsp),%rdi
  45561b:	lea    0xa3bf(%rip),%rsi        # 45f9e1 <_fini+0x24dd>
  455622:	callq  412ba0 <BIO_new_file@plt>
  455627:	test   %rax,%rax
  45562a:	mov    %rax,0x60(%rsp)
  45562f:	je     4551ee <X509_get0_pubkey_bitstr@plt+0x3e81e>
  455635:	mov    0x60(%rsp),%rdi
  45563a:	xor    %esi,%esi
  45563c:	callq  415550 <d2i_CMS_bio@plt>
  455641:	mov    %rax,0x48(%rsp)
  455646:	jmpq   455111 <X509_get0_pubkey_bitstr@plt+0x3e741>
  45564b:	mov    0xa8(%rsp),%r8d
  455653:	mov    0xe8(%rsp),%rcx
  45565b:	xor    %r15d,%r15d
  45565e:	mov    0x40(%rsp),%rdx
  455663:	mov    0xc0(%rsp),%rsi
  45566b:	mov    0x38(%rsp),%rdi
  455670:	callq  4147c0 <CMS_EncryptedData_encrypt@plt>
  455675:	mov    %rax,0x28(%rsp)
  45567a:	jmpq   455023 <X509_get0_pubkey_bitstr@plt+0x3e653>
  45567f:	mov    0xa8(%rsp),%r8d
  455687:	mov    0x50(%rsp),%rcx
  45568c:	mov    0x80(%rsp),%rdx
  455694:	mov    0x28(%rsp),%rsi
  455699:	mov    0x48(%rsp),%rdi
  45569e:	callq  413970 <CMS_verify_receipt@plt>
  4556a3:	test   %eax,%eax
  4556a5:	jle    45575b <X509_get0_pubkey_bitstr@plt+0x3ed8b>
  4556ab:	mov    (%rbx),%rdi
  4556ae:	lea    0x1885a(%rip),%rsi        # 46df0f <_fini+0x10a0b>
  4556b5:	xor    %eax,%eax
  4556b7:	xor    %r14d,%r14d
  4556ba:	xor    %r12d,%r12d
  4556bd:	callq  413c40 <BIO_printf@plt>
  4556c2:	jmpq   45411c <X509_get0_pubkey_bitstr@plt+0x3d74c>
  4556c7:	mov    0xa8(%rsp),%r9d
  4556cf:	mov    0x30(%rsp),%r8
  4556d4:	mov    0x170(%rsp),%rcx
  4556dc:	mov    0x50(%rsp),%rdx
  4556e1:	mov    0x80(%rsp),%rsi
  4556e9:	mov    0x28(%rsp),%rdi
  4556ee:	callq  415d10 <CMS_verify@plt>
  4556f3:	test   %eax,%eax
  4556f5:	jle    45592a <X509_get0_pubkey_bitstr@plt+0x3ef5a>
  4556fb:	mov    (%rbx),%rdi
  4556fe:	lea    0x1880a(%rip),%rsi        # 46df0f <_fini+0x10a0b>
  455705:	xor    %eax,%eax
  455707:	callq  413c40 <BIO_printf@plt>
  45570c:	cmpq   $0x0,0xa0(%rsp)
  455715:	je     45576f <X509_get0_pubkey_bitstr@plt+0x3ed9f>
  455717:	mov    0x28(%rsp),%rdi
  45571c:	callq  413230 <CMS_get0_signers@plt>
  455721:	mov    0xa0(%rsp),%r12
  455729:	mov    %rax,%rsi
  45572c:	mov    %rax,%r14
  45572f:	mov    %r12,%rdi
  455732:	callq  4533c0 <X509_get0_pubkey_bitstr@plt+0x3c9f0>
  455737:	test   %eax,%eax
  455739:	jne    455767 <X509_get0_pubkey_bitstr@plt+0x3ed97>
  45573b:	mov    (%rbx),%rdi
  45573e:	lea    0x18818(%rip),%rsi        # 46df5d <_fini+0x10a59>
  455745:	mov    %r12,%rdx
  455748:	xor    %r14d,%r14d
  45574b:	mov    $0x5,%r12d
  455751:	callq  413c40 <BIO_printf@plt>
  455756:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  45575b:	lea    0x187c6(%rip),%rsi        # 46df28 <_fini+0x10a24>
  455762:	jmpq   4555d4 <X509_get0_pubkey_bitstr@plt+0x3ec04>
  455767:	mov    %r14,%rdi
  45576a:	callq  4143f0 <sk_free@plt>
  45576f:	cmpl   $0x0,0x11c(%rsp)
  455777:	je     45509f <X509_get0_pubkey_bitstr@plt+0x3e6cf>
  45577d:	mov    0x28(%rsp),%rdi
  455782:	mov    (%rbx),%r14
  455785:	xor    %r12d,%r12d
  455788:	callq  415470 <CMS_get0_SignerInfos@plt>
  45578d:	mov    %rax,0xa0(%rsp)
  455795:	lea    0x188(%rsp),%rax
  45579d:	mov    %rax,0xa8(%rsp)
  4557a5:	lea    0x190(%rsp),%rax
  4557ad:	mov    %rax,0xb0(%rsp)
  4557b5:	lea    0x198(%rsp),%rax
  4557bd:	mov    %rax,0xb8(%rsp)
  4557c5:	lea    0x164(%rsp),%rax
  4557cd:	mov    %rax,0xc0(%rsp)
  4557d5:	mov    0xa0(%rsp),%rdi
  4557dd:	callq  4156d0 <sk_num@plt>
  4557e2:	cmp    %eax,%r12d
  4557e5:	jge    45509f <X509_get0_pubkey_bitstr@plt+0x3e6cf>
  4557eb:	mov    0xa0(%rsp),%rdi
  4557f3:	mov    %r12d,%esi
  4557f6:	add    $0x1,%r12d
  4557fa:	callq  412b30 <sk_value@plt>
  4557ff:	mov    0xa8(%rsp),%rsi
  455807:	mov    %rax,%rdi
  45580a:	callq  4164e0 <CMS_get1_ReceiptRequest@plt>
  45580f:	mov    (%rbx),%rdi
  455812:	lea    0x1934a(%rip),%rsi        # 46eb63 <_fini+0x1165f>
  455819:	mov    %eax,0xcc(%rsp)
  455820:	mov    %r12d,%edx
  455823:	xor    %eax,%eax
  455825:	callq  413c40 <BIO_printf@plt>
  45582a:	mov    0xcc(%rsp),%ecx
  455831:	test   %ecx,%ecx
  455833:	je     4559ae <X509_get0_pubkey_bitstr@plt+0x3efde>
  455839:	js     455992 <X509_get0_pubkey_bitstr@plt+0x3efc2>
  45583f:	mov    0xb0(%rsp),%r8
  455847:	mov    0xb8(%rsp),%rcx
  45584f:	lea    0x1a0(%rsp),%rsi
  455857:	mov    0xc0(%rsp),%rdx
  45585f:	mov    0x188(%rsp),%rdi
  455867:	callq  413c80 <CMS_ReceiptRequest_get0_values@plt>
  45586c:	lea    0x19312(%rip),%rsi        # 46eb85 <_fini+0x11681>
  455873:	mov    %r14,%rdi
  455876:	callq  413b70 <BIO_puts@plt>
  45587b:	mov    0x1a0(%rsp),%rdi
  455883:	callq  414c60 <ASN1_STRING_length@plt>
  455888:	mov    0x1a0(%rsp),%rdi
  455890:	mov    %eax,0xcc(%rsp)
  455897:	callq  414370 <ASN1_STRING_data@plt>
  45589c:	mov    0xcc(%rsp),%edx
  4558a3:	mov    $0x4,%ecx
  4558a8:	mov    %rax,%rsi
  4558ab:	mov    %r14,%rdi
  4558ae:	callq  414490 <BIO_dump_indent@plt>
  4558b3:	lea    0x192e1(%rip),%rsi        # 46eb9b <_fini+0x11697>
  4558ba:	mov    %r14,%rdi
  4558bd:	callq  413b70 <BIO_puts@plt>
  4558c2:	cmpq   $0x0,0x198(%rsp)
  4558cb:	je     455966 <X509_get0_pubkey_bitstr@plt+0x3ef96>
  4558d1:	lea    0x192d3(%rip),%rsi        # 46ebab <_fini+0x116a7>
  4558d8:	mov    %r14,%rdi
  4558db:	callq  413b70 <BIO_puts@plt>
  4558e0:	mov    0x198(%rsp),%rsi
  4558e8:	mov    %r14,%rdi
  4558eb:	callq  418417 <X509_get0_pubkey_bitstr@plt+0x1a47>
  4558f0:	lea    0x192e0(%rip),%rsi        # 46ebd7 <_fini+0x116d3>
  4558f7:	mov    %r14,%rdi
  4558fa:	callq  413b70 <BIO_puts@plt>
  4558ff:	mov    0x190(%rsp),%rsi
  455907:	mov    %r14,%rdi
  45590a:	callq  418417 <X509_get0_pubkey_bitstr@plt+0x1a47>
  45590f:	mov    0x188(%rsp),%rdi
  455917:	test   %rdi,%rdi
  45591a:	je     4557d5 <X509_get0_pubkey_bitstr@plt+0x3ee05>
  455920:	callq  412d10 <CMS_ReceiptRequest_free@plt>
  455925:	jmpq   4557d5 <X509_get0_pubkey_bitstr@plt+0x3ee05>
  45592a:	mov    (%rbx),%rdi
  45592d:	lea    0x185f4(%rip),%rsi        # 46df28 <_fini+0x10a24>
  455934:	xor    %eax,%eax
  455936:	callq  413c40 <BIO_printf@plt>
  45593b:	cmpl   $0x0,0xcc(%rsp)
  455943:	je     4555de <X509_get0_pubkey_bitstr@plt+0x3ec0e>
  455949:	lea    0x226358(%rip),%rax        # 67bca8 <_edata+0xfa0>
  455950:	xor    %r14d,%r14d
  455953:	mov    (%rax),%eax
  455955:	add    $0x20,%eax
  455958:	mov    %eax,%r12d
  45595b:	je     45411c <X509_get0_pubkey_bitstr@plt+0x3d74c>
  455961:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  455966:	mov    0x164(%rsp),%edx
  45596d:	cmp    $0x1,%edx
  455970:	je     455a59 <X509_get0_pubkey_bitstr@plt+0x3f089>
  455976:	test   %edx,%edx
  455978:	jne    455a43 <X509_get0_pubkey_bitstr@plt+0x3f073>
  45597e:	lea    0x1923c(%rip),%rsi        # 46ebc1 <_fini+0x116bd>
  455985:	mov    %r14,%rdi
  455988:	callq  413b70 <BIO_puts@plt>
  45598d:	jmpq   4558f0 <X509_get0_pubkey_bitstr@plt+0x3ef20>
  455992:	mov    (%rbx),%rdi
  455995:	lea    0x19444(%rip),%rsi        # 46ede0 <_fini+0x118dc>
  45599c:	callq  413b70 <BIO_puts@plt>
  4559a1:	mov    (%rbx),%rdi
  4559a4:	callq  413f40 <ERR_print_errors@plt>
  4559a9:	jmpq   45590f <X509_get0_pubkey_bitstr@plt+0x3ef3f>
  4559ae:	mov    (%rbx),%rdi
  4559b1:	lea    0x191b7(%rip),%rsi        # 46eb6f <_fini+0x1166b>
  4559b8:	callq  413b70 <BIO_puts@plt>
  4559bd:	jmpq   45590f <X509_get0_pubkey_bitstr@plt+0x3ef3f>
  4559c2:	mov    0xa8(%rsp),%r9d
  4559ca:	mov    0x30(%rsp),%r8
  4559cf:	xor    %r14d,%r14d
  4559d2:	mov    0x170(%rsp),%rcx
  4559da:	mov    0xe8(%rsp),%rdx
  4559e2:	mov    0x40(%rsp),%rsi
  4559e7:	mov    0x28(%rsp),%rdi
  4559ec:	callq  414850 <CMS_EncryptedData_decrypt@plt>
  4559f1:	test   %eax,%eax
  4559f3:	jne    4550a2 <X509_get0_pubkey_bitstr@plt+0x3e6d2>
  4559f9:	mov    $0x4,%r12b
  4559fc:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  455a01:	mov    0xa8(%rsp),%ecx
  455a08:	mov    0x30(%rsp),%rdx
  455a0d:	mov    0x170(%rsp),%rsi
  455a15:	mov    0x28(%rsp),%rdi
  455a1a:	callq  4152e0 <CMS_digest_verify@plt>
  455a1f:	test   %eax,%eax
  455a21:	jle    45575b <X509_get0_pubkey_bitstr@plt+0x3ed8b>
  455a27:	mov    (%rbx),%rdi
  455a2a:	lea    0x184de(%rip),%rsi        # 46df0f <_fini+0x10a0b>
  455a31:	xor    %eax,%eax
  455a33:	xor    %r14d,%r14d
  455a36:	xor    %r12b,%r12b
  455a39:	callq  413c40 <BIO_printf@plt>
  455a3e:	jmpq   45411c <X509_get0_pubkey_bitstr@plt+0x3d74c>
  455a43:	lea    0x1917e(%rip),%rsi        # 46ebc8 <_fini+0x116c4>
  455a4a:	mov    %r14,%rdi
  455a4d:	xor    %eax,%eax
  455a4f:	callq  413c40 <BIO_printf@plt>
  455a54:	jmpq   4558f0 <X509_get0_pubkey_bitstr@plt+0x3ef20>
  455a59:	lea    0x19153(%rip),%rsi        # 46ebb3 <_fini+0x116af>
  455a60:	mov    %r14,%rdi
  455a63:	callq  413b70 <BIO_puts@plt>
  455a68:	jmpq   4558f0 <X509_get0_pubkey_bitstr@plt+0x3ef20>
  455a6d:	callq  412f60 <EVP_aes_128_cbc@plt>
  455a72:	mov    0x168(%rsp),%r8
  455a7a:	mov    %rax,0xc0(%rsp)
  455a82:	mov    0x160(%rsp),%r14d
  455a8a:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455a8f:	callq  412ee0 <EVP_rc2_64_cbc@plt>
  455a94:	mov    0x168(%rsp),%r8
  455a9c:	mov    %rax,0xc0(%rsp)
  455aa4:	mov    0x160(%rsp),%r14d
  455aac:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455ab1:	callq  414da0 <EVP_rc2_cbc@plt>
  455ab6:	mov    0x168(%rsp),%r8
  455abe:	mov    %rax,0xc0(%rsp)
  455ac6:	mov    0x160(%rsp),%r14d
  455ace:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455ad3:	callq  415dd0 <EVP_rc2_40_cbc@plt>
  455ad8:	mov    0x168(%rsp),%r8
  455ae0:	mov    %rax,0xc0(%rsp)
  455ae8:	mov    0x160(%rsp),%r14d
  455af0:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455af5:	callq  4166e0 <EVP_seed_cbc@plt>
  455afa:	mov    0x168(%rsp),%r8
  455b02:	mov    %rax,0xc0(%rsp)
  455b0a:	mov    0x160(%rsp),%r14d
  455b12:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455b17:	callq  414280 <EVP_des_cbc@plt>
  455b1c:	mov    0x168(%rsp),%r8
  455b24:	mov    %rax,0xc0(%rsp)
  455b2c:	mov    0x160(%rsp),%r14d
  455b34:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455b39:	callq  415db0 <EVP_des_ede3_cbc@plt>
  455b3e:	mov    0x168(%rsp),%r8
  455b46:	mov    %rax,0xc0(%rsp)
  455b4e:	mov    0x160(%rsp),%r14d
  455b56:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455b5b:	mov    $0x1e,%r12d
  455b61:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455b66:	lea    0x86fa(%rip),%rsi        # 45e267 <_fini+0xd63>
  455b6d:	mov    %rdx,%rdi
  455b70:	mov    %r8,0x148(%rsp)
  455b78:	mov    %rdx,0xd8(%rsp)
  455b80:	callq  4155c0 <strcmp@plt>
  455b85:	test   %eax,%eax
  455b87:	mov    0xd8(%rsp),%rdx
  455b8f:	mov    0x148(%rsp),%r8
  455b97:	jne    455bc8 <X509_get0_pubkey_bitstr@plt+0x3f1f8>
  455b99:	orl    $0x1,0xa8(%rsp)
  455ba1:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455ba6:	callq  4160b0 <EVP_camellia_256_cbc@plt>
  455bab:	mov    0x168(%rsp),%r8
  455bb3:	mov    %rax,0xc0(%rsp)
  455bbb:	mov    0x160(%rsp),%r14d
  455bc3:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455bc8:	lea    0x1818d(%rip),%rsi        # 46dd5c <_fini+0x10858>
  455bcf:	mov    %rdx,%rdi
  455bd2:	mov    %r8,0x148(%rsp)
  455bda:	mov    %rdx,0xd8(%rsp)
  455be2:	callq  4155c0 <strcmp@plt>
  455be7:	test   %eax,%eax
  455be9:	mov    0xd8(%rsp),%rdx
  455bf1:	mov    0x148(%rsp),%r8
  455bf9:	jne    455c4f <X509_get0_pubkey_bitstr@plt+0x3f27f>
  455bfb:	orl    $0x10,0xa8(%rsp)
  455c03:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455c08:	xor    %r14d,%r14d
  455c0b:	xor    %r15d,%r15d
  455c0e:	mov    $0x3,%r12d
  455c14:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  455c19:	mov    0x38(%rsp),%rsi
  455c1e:	mov    0x28(%rsp),%rdi
  455c23:	xor    %edx,%edx
  455c25:	mov    %r15d,%ecx
  455c28:	xor    %r14d,%r14d
  455c2b:	callq  412c70 <CMS_final@plt>
  455c30:	test   %eax,%eax
  455c32:	jne    4553b6 <X509_get0_pubkey_bitstr@plt+0x3e9e6>
  455c38:	movq   $0x0,0x40(%rsp)
  455c41:	xor    %r15d,%r15d
  455c44:	mov    $0x3,%r12d
  455c4a:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  455c4f:	lea    0xab7b(%rip),%rsi        # 4607d1 <_fini+0x32cd>
  455c56:	mov    %rdx,%rdi
  455c59:	mov    %r8,0x148(%rsp)
  455c61:	mov    %rdx,0xd8(%rsp)
  455c69:	callq  4155c0 <strcmp@plt>
  455c6e:	test   %eax,%eax
  455c70:	mov    0xd8(%rsp),%rdx
  455c78:	mov    0x148(%rsp),%r8
  455c80:	je     455ca5 <X509_get0_pubkey_bitstr@plt+0x3f2d5>
  455c82:	lea    0x18d18(%rip),%rsi        # 46e9a1 <_fini+0x1149d>
  455c89:	mov    %rdx,%rdi
  455c8c:	callq  4155c0 <strcmp@plt>
  455c91:	test   %eax,%eax
  455c93:	mov    0xd8(%rsp),%rdx
  455c9b:	mov    0x148(%rsp),%r8
  455ca3:	jne    455cb2 <X509_get0_pubkey_bitstr@plt+0x3f2e2>
  455ca5:	orl    $0x20,0xa8(%rsp)
  455cad:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455cb2:	lea    0x16b4d(%rip),%rsi        # 46c806 <_fini+0xf302>
  455cb9:	mov    %rdx,%rdi
  455cbc:	mov    %r8,0x148(%rsp)
  455cc4:	mov    %rdx,0xd8(%rsp)
  455ccc:	callq  4155c0 <strcmp@plt>
  455cd1:	test   %eax,%eax
  455cd3:	mov    0xd8(%rsp),%rdx
  455cdb:	mov    0x148(%rsp),%r8
  455ce3:	jne    455d7e <X509_get0_pubkey_bitstr@plt+0x3f3ae>
  455ce9:	orl    $0x2,0xa8(%rsp)
  455cf1:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455cf6:	callq  413460 <EVP_camellia_192_cbc@plt>
  455cfb:	mov    0x168(%rsp),%r8
  455d03:	mov    %rax,0xc0(%rsp)
  455d0b:	mov    0x160(%rsp),%r14d
  455d13:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455d18:	callq  4129c0 <EVP_aes_256_cbc@plt>
  455d1d:	mov    0x168(%rsp),%r8
  455d25:	mov    %rax,0xc0(%rsp)
  455d2d:	mov    0x160(%rsp),%r14d
  455d35:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455d3a:	callq  4131e0 <EVP_aes_192_cbc@plt>
  455d3f:	mov    0x168(%rsp),%r8
  455d47:	mov    %rax,0xc0(%rsp)
  455d4f:	mov    0x160(%rsp),%r14d
  455d57:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455d5c:	callq  415f60 <EVP_camellia_128_cbc@plt>
  455d61:	mov    0x168(%rsp),%r8
  455d69:	mov    %rax,0xc0(%rsp)
  455d71:	mov    0x160(%rsp),%r14d
  455d79:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455d7e:	lea    0x17fea(%rip),%rsi        # 46dd6f <_fini+0x1086b>
  455d85:	mov    %rdx,%rdi
  455d88:	mov    %r8,0x148(%rsp)
  455d90:	mov    %rdx,0xd8(%rsp)
  455d98:	callq  4155c0 <strcmp@plt>
  455d9d:	test   %eax,%eax
  455d9f:	mov    0xd8(%rsp),%rdx
  455da7:	mov    0x148(%rsp),%r8
  455daf:	jne    4560a7 <X509_get0_pubkey_bitstr@plt+0x3f6d7>
  455db5:	orl    $0x100,0xa8(%rsp)
  455dc0:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455dc5:	mov    %r12,0x68(%rsp)
  455dca:	mov    %r13,0x58(%rsp)
  455dcf:	xor    %r14d,%r14d
  455dd2:	mov    0xb0(%rsp),%r13
  455dda:	mov    $0x3,%r12d
  455de0:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  455de5:	mov    $0x2d,%r12d
  455deb:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  455df0:	mov    0x28(%rsp),%rsi
  455df5:	mov    0x30(%rsp),%rdi
  455dfa:	xor    %ecx,%ecx
  455dfc:	xor    %edx,%edx
  455dfe:	callq  4142f0 <CMS_ContentInfo_print_ctx@plt>
  455e03:	jmpq   45509f <X509_get0_pubkey_bitstr@plt+0x3e6cf>
  455e08:	mov    0xa8(%rsp),%ecx
  455e0f:	mov    0x30(%rsp),%rdx
  455e14:	xor    %r14d,%r14d
  455e17:	mov    0x170(%rsp),%rsi
  455e1f:	mov    0x28(%rsp),%rdi
  455e24:	callq  413670 <CMS_uncompress@plt>
  455e29:	test   %eax,%eax
  455e2b:	je     4559f9 <X509_get0_pubkey_bitstr@plt+0x3f029>
  455e31:	jmpq   4550a2 <X509_get0_pubkey_bitstr@plt+0x3e6d2>
  455e36:	mov    0xa8(%rsp),%edx
  455e3d:	mov    0x30(%rsp),%rsi
  455e42:	xor    %r14d,%r14d
  455e45:	mov    0x28(%rsp),%rdi
  455e4a:	callq  415760 <CMS_data@plt>
  455e4f:	test   %eax,%eax
  455e51:	je     4559f9 <X509_get0_pubkey_bitstr@plt+0x3f029>
  455e57:	jmpq   4550a2 <X509_get0_pubkey_bitstr@plt+0x3e6d2>
  455e5c:	mov    0xa8(%rsp),%ecx
  455e63:	mov    0x38(%rsp),%rdx
  455e68:	mov    0x28(%rsp),%rsi
  455e6d:	mov    0x30(%rsp),%rdi
  455e72:	callq  414b60 <i2d_CMS_bio_stream@plt>
  455e77:	xor    %r14d,%r14d
  455e7a:	test   %eax,%eax
  455e7c:	mov    $0x6,%r12d
  455e82:	jle    454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  455e88:	jmpq   45509f <X509_get0_pubkey_bitstr@plt+0x3e6cf>
  455e8d:	mov    0xa8(%rsp),%ecx
  455e94:	mov    0x38(%rsp),%rdx
  455e99:	mov    0x28(%rsp),%rsi
  455e9e:	mov    0x30(%rsp),%rdi
  455ea3:	callq  413e10 <PEM_write_bio_CMS_stream@plt>
  455ea8:	jmp    455e77 <X509_get0_pubkey_bitstr@plt+0x3f4a7>
  455eaa:	mov    0x120(%rsp),%rdx
  455eb2:	test   %rdx,%rdx
  455eb5:	je     455eca <X509_get0_pubkey_bitstr@plt+0x3f4fa>
  455eb7:	mov    0x30(%rsp),%rdi
  455ebc:	lea    0x1807b(%rip),%rsi        # 46df3e <_fini+0x10a3a>
  455ec3:	xor    %eax,%eax
  455ec5:	callq  413c40 <BIO_printf@plt>
  455eca:	mov    0x128(%rsp),%rdx
  455ed2:	test   %rdx,%rdx
  455ed5:	je     455eea <X509_get0_pubkey_bitstr@plt+0x3f51a>
  455ed7:	mov    0x30(%rsp),%rdi
  455edc:	lea    0x18063(%rip),%rsi        # 46df46 <_fini+0x10a42>
  455ee3:	xor    %eax,%eax
  455ee5:	callq  413c40 <BIO_printf@plt>
  455eea:	mov    0x130(%rsp),%rdx
  455ef2:	test   %rdx,%rdx
  455ef5:	je     455f0a <X509_get0_pubkey_bitstr@plt+0x3f53a>
  455ef7:	mov    0x30(%rsp),%rdi
  455efc:	lea    0x1804d(%rip),%rsi        # 46df50 <_fini+0x10a4c>
  455f03:	xor    %eax,%eax
  455f05:	callq  413c40 <BIO_printf@plt>
  455f0a:	cmp    $0x76,%r12d
  455f0e:	mov    0xa8(%rsp),%ecx
  455f15:	je     456125 <X509_get0_pubkey_bitstr@plt+0x3f755>
  455f1b:	mov    0x38(%rsp),%rdx
  455f20:	mov    0x28(%rsp),%rsi
  455f25:	mov    0x30(%rsp),%rdi
  455f2a:	callq  415cb0 <SMIME_write_CMS@plt>
  455f2f:	jmpq   455e77 <X509_get0_pubkey_bitstr@plt+0x3f4a7>
  455f34:	mov    0xa8(%rsp),%r9d
  455f3c:	mov    0x28(%rsp),%rdi
  455f41:	xor    %r8d,%r8d
  455f44:	xor    %ecx,%ecx
  455f46:	xor    %edx,%edx
  455f48:	xor    %esi,%esi
  455f4a:	callq  4132c0 <CMS_decrypt@plt>
  455f4f:	jmpq   455473 <X509_get0_pubkey_bitstr@plt+0x3eaa3>
  455f54:	testb  $0x40,0xa8(%rsp)
  455f5c:	je     455f7c <X509_get0_pubkey_bitstr@plt+0x3f5ac>
  455f5e:	mov    0xa8(%rsp),%edx
  455f65:	mov    %edx,%eax
  455f67:	or     $0x10,%ah
  455f6a:	cmpl   $0x6,0xe0(%rsp)
  455f72:	cmovne %edx,%eax
  455f75:	mov    %eax,0xa8(%rsp)
  455f7c:	orl    $0x4000,0xa8(%rsp)
  455f87:	mov    0x38(%rsp),%rcx
  455f8c:	xor    %edi,%edi
  455f8e:	mov    0xa8(%rsp),%r8d
  455f96:	mov    0x80(%rsp),%rdx
  455f9e:	xor    %esi,%esi
  455fa0:	callq  412b20 <CMS_sign@plt>
  455fa5:	test   %rax,%rax
  455fa8:	mov    %rax,%rdi
  455fab:	mov    %rax,0x28(%rsp)
  455fb0:	je     455c08 <X509_get0_pubkey_bitstr@plt+0x3f238>
  455fb6:	mov    0x90(%rsp),%rsi
  455fbe:	test   %rsi,%rsi
  455fc1:	je     455fc8 <X509_get0_pubkey_bitstr@plt+0x3f5f8>
  455fc3:	callq  413e70 <CMS_set1_eContentType@plt>
  455fc8:	mov    0x20(%rsp),%rdi
  455fcd:	test   %rdi,%rdi
  455fd0:	je     456039 <X509_get0_pubkey_bitstr@plt+0x3f669>
  455fd2:	callq  418356 <X509_get0_pubkey_bitstr@plt+0x1986>
  455fd7:	test   %rax,%rax
  455fda:	mov    %rax,%r14
  455fdd:	je     456019 <X509_get0_pubkey_bitstr@plt+0x3f649>
  455fdf:	cmpb   $0x0,0xb8(%rsp)
  455fe7:	je     456041 <X509_get0_pubkey_bitstr@plt+0x3f671>
  455fe9:	mov    %r13,%rdi
  455fec:	callq  418356 <X509_get0_pubkey_bitstr@plt+0x1986>
  455ff1:	test   %rax,%rax
  455ff4:	mov    %rax,%rcx
  455ff7:	je     456019 <X509_get0_pubkey_bitstr@plt+0x3f649>
  455ff9:	mov    0xb0(%rsp),%edx
  456000:	or     $0xffffffff,%esi
  456003:	xor    %edi,%edi
  456005:	mov    %r14,%r8
  456008:	callq  415b10 <CMS_ReceiptRequest_create0@plt>
  45600d:	test   %rax,%rax
  456010:	mov    %rax,%r15
  456013:	jne    454ea1 <X509_get0_pubkey_bitstr@plt+0x3e4d1>
  456019:	mov    (%rbx),%rdi
  45601c:	lea    0x18cfd(%rip),%rsi        # 46ed20 <_fini+0x1181c>
  456023:	xor    %r14d,%r14d
  456026:	xor    %r15d,%r15d
  456029:	mov    $0x3,%r12d
  45602f:	callq  413b70 <BIO_puts@plt>
  456034:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  456039:	xor    %r15d,%r15d
  45603c:	jmpq   454ea1 <X509_get0_pubkey_bitstr@plt+0x3e4d1>
  456041:	xor    %ecx,%ecx
  456043:	jmp    455ff9 <X509_get0_pubkey_bitstr@plt+0x3f629>
  456045:	mov    0x28(%rsp),%rdi
  45604a:	callq  415470 <CMS_get0_SignerInfos@plt>
  45604f:	test   %rax,%rax
  456052:	je     455c08 <X509_get0_pubkey_bitstr@plt+0x3f238>
  456058:	xor    %esi,%esi
  45605a:	mov    %rax,%rdi
  45605d:	callq  412b30 <sk_value@plt>
  456062:	mov    0xa8(%rsp),%r15d
  45606a:	mov    0x80(%rsp),%rcx
  456072:	mov    %rax,%rdi
  456075:	mov    0x58(%rsp),%rdx
  45607a:	mov    0x68(%rsp),%rsi
  45607f:	mov    %r15d,%r8d
  456082:	callq  414410 <CMS_sign_receipt@plt>
  456087:	test   %rax,%rax
  45608a:	mov    %rax,%r14
  45608d:	je     455c08 <X509_get0_pubkey_bitstr@plt+0x3f238>
  456093:	mov    0x28(%rsp),%rdi
  456098:	callq  414c90 <CMS_ContentInfo_free@plt>
  45609d:	mov    %r14,0x28(%rsp)
  4560a2:	jmpq   4553bf <X509_get0_pubkey_bitstr@plt+0x3e9ef>
  4560a7:	lea    0x17cc9(%rip),%rsi        # 46dd77 <_fini+0x10873>
  4560ae:	mov    %rdx,%rdi
  4560b1:	mov    %r8,0x148(%rsp)
  4560b9:	mov    %rdx,0xd8(%rsp)
  4560c1:	callq  4155c0 <strcmp@plt>
  4560c6:	test   %eax,%eax
  4560c8:	mov    0xd8(%rsp),%rdx
  4560d0:	mov    0x148(%rsp),%r8
  4560d8:	jne    45615e <X509_get0_pubkey_bitstr@plt+0x3f78e>
  4560de:	andl   $0xffffffbf,0xa8(%rsp)
  4560e6:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  4560eb:	mov    (%rbx),%rdi
  4560ee:	lea    0x18c7b(%rip),%rsi        # 46ed70 <_fini+0x1186c>
  4560f5:	xor    %r14d,%r14d
  4560f8:	mov    $0x4,%r12d
  4560fe:	callq  413b70 <BIO_puts@plt>
  456103:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  456108:	mov    (%rbx),%rdi
  45610b:	lea    0x18c36(%rip),%rsi        # 46ed48 <_fini+0x11844>
  456112:	xor    %r14d,%r14d
  456115:	mov    $0x4,%r12d
  45611b:	callq  413b70 <BIO_puts@plt>
  456120:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  456125:	mov    0x170(%rsp),%rdx
  45612d:	mov    0x28(%rsp),%rsi
  456132:	mov    0x30(%rsp),%rdi
  456137:	callq  415cb0 <SMIME_write_CMS@plt>
  45613c:	jmpq   455e77 <X509_get0_pubkey_bitstr@plt+0x3f4a7>
  456141:	mov    (%rbx),%rdi
  456144:	lea    0x18c4d(%rip),%rsi        # 46ed98 <_fini+0x11894>
  45614b:	xor    %r14d,%r14d
  45614e:	mov    $0x4,%r12d
  456154:	callq  413b70 <BIO_puts@plt>
  456159:	jmpq   454114 <X509_get0_pubkey_bitstr@plt+0x3d744>
  45615e:	lea    0x17c1c(%rip),%rsi        # 46dd81 <_fini+0x1087d>
  456165:	mov    %rdx,%rdi
  456168:	mov    %r8,0x148(%rsp)
  456170:	mov    %rdx,0xd8(%rsp)
  456178:	callq  4155c0 <strcmp@plt>
  45617d:	test   %eax,%eax
  45617f:	mov    0xd8(%rsp),%rdx
  456187:	mov    0x148(%rsp),%r8
  45618f:	jne    4561a1 <X509_get0_pubkey_bitstr@plt+0x3f7d1>
  456191:	orl    $0x200,0xa8(%rsp)
  45619c:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  4561a1:	lea    0x973a(%rip),%rsi        # 45f8e2 <_fini+0x23de>
  4561a8:	mov    %rdx,%rdi
  4561ab:	mov    %r8,0x148(%rsp)
  4561b3:	mov    %rdx,0xd8(%rsp)
  4561bb:	callq  4155c0 <strcmp@plt>
  4561c0:	test   %eax,%eax
  4561c2:	mov    0xd8(%rsp),%rdx
  4561ca:	mov    0x148(%rsp),%r8
  4561d2:	jne    4561e4 <X509_get0_pubkey_bitstr@plt+0x3f814>
  4561d4:	orl    $0x80,0xa8(%rsp)
  4561df:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  4561e4:	lea    0x187cd(%rip),%rsi        # 46e9b8 <_fini+0x114b4>
  4561eb:	mov    %rdx,%rdi
  4561ee:	mov    %r8,0x148(%rsp)
  4561f6:	mov    %rdx,0xd8(%rsp)
  4561fe:	callq  4155c0 <strcmp@plt>
  456203:	test   %eax,%eax
  456205:	mov    0xd8(%rsp),%rdx
  45620d:	mov    0x148(%rsp),%r8
  456215:	jne    456227 <X509_get0_pubkey_bitstr@plt+0x3f857>
  456217:	orl    $0x10000,0xa8(%rsp)
  456222:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  456227:	lea    0x17b5f(%rip),%rsi        # 46dd8d <_fini+0x10889>
  45622e:	mov    %rdx,%rdi
  456231:	mov    %r8,0x148(%rsp)
  456239:	mov    %rdx,0xd8(%rsp)
  456241:	callq  4155c0 <strcmp@plt>
  456246:	test   %eax,%eax
  456248:	mov    0xd8(%rsp),%rdx
  456250:	mov    0x148(%rsp),%r8
  456258:	jne    456267 <X509_get0_pubkey_bitstr@plt+0x3f897>
  45625a:	orl    $0xc,0xa8(%rsp)
  456262:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  456267:	lea    0x18751(%rip),%rsi        # 46e9bf <_fini+0x114bb>
  45626e:	mov    %rdx,%rdi
  456271:	mov    %r8,0x148(%rsp)
  456279:	mov    %rdx,0xd8(%rsp)
  456281:	callq  4155c0 <strcmp@plt>
  456286:	test   %eax,%eax
  456288:	mov    0xd8(%rsp),%rdx
  456290:	mov    0x148(%rsp),%r8
  456298:	jne    4562a7 <X509_get0_pubkey_bitstr@plt+0x3f8d7>
  45629a:	orl    $0x4,0xa8(%rsp)
  4562a2:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  4562a7:	lea    0x18724(%rip),%rsi        # 46e9d2 <_fini+0x114ce>
  4562ae:	mov    %rdx,%rdi
  4562b1:	mov    %r8,0x148(%rsp)
  4562b9:	mov    %rdx,0xd8(%rsp)
  4562c1:	callq  4155c0 <strcmp@plt>
  4562c6:	test   %eax,%eax
  4562c8:	mov    0xd8(%rsp),%rdx
  4562d0:	mov    0x148(%rsp),%r8
  4562d8:	jne    4562e7 <X509_get0_pubkey_bitstr@plt+0x3f917>
  4562da:	orl    $0x8,0xa8(%rsp)
  4562e2:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  4562e7:	lea    0x17aa7(%rip),%rsi        # 46dd95 <_fini+0x10891>
  4562ee:	mov    %rdx,%rdi
  4562f1:	mov    %r8,0x148(%rsp)
  4562f9:	mov    %rdx,0xd8(%rsp)
  456301:	callq  4155c0 <strcmp@plt>
  456306:	test   %eax,%eax
  456308:	mov    0xd8(%rsp),%rdx
  456310:	mov    0x148(%rsp),%r8
  456318:	je     45634d <X509_get0_pubkey_bitstr@plt+0x3f97d>
  45631a:	lea    0x17a7c(%rip),%rsi        # 46dd9d <_fini+0x10899>
  456321:	mov    %rdx,%rdi
  456324:	mov    %r8,0x148(%rsp)
  45632c:	mov    %rdx,0xd8(%rsp)
  456334:	callq  4155c0 <strcmp@plt>
  456339:	test   %eax,%eax
  45633b:	mov    0xd8(%rsp),%rdx
  456343:	mov    0x148(%rsp),%r8
  45634b:	jne    45635d <X509_get0_pubkey_bitstr@plt+0x3f98d>
  45634d:	orl    $0x1000,0xa8(%rsp)
  456358:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  45635d:	lea    0x17a40(%rip),%rsi        # 46dda4 <_fini+0x108a0>
  456364:	mov    %rdx,%rdi
  456367:	mov    %r8,0x148(%rsp)
  45636f:	mov    %rdx,0xd8(%rsp)
  456377:	callq  4155c0 <strcmp@plt>
  45637c:	test   %eax,%eax
  45637e:	mov    0xd8(%rsp),%rdx
  456386:	mov    0x148(%rsp),%r8
  45638e:	jne    4563a0 <X509_get0_pubkey_bitstr@plt+0x3f9d0>
  456390:	andl   $0xffffefff,0xa8(%rsp)
  45639b:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  4563a0:	lea    0x17a06(%rip),%rsi        # 46ddad <_fini+0x108a9>
  4563a7:	mov    %rdx,%rdi
  4563aa:	mov    %r8,0x148(%rsp)
  4563b2:	mov    %rdx,0xd8(%rsp)
  4563ba:	callq  4155c0 <strcmp@plt>
  4563bf:	test   %eax,%eax
  4563c1:	mov    0xd8(%rsp),%rdx
  4563c9:	mov    0x148(%rsp),%r8
  4563d1:	jne    4563e3 <X509_get0_pubkey_bitstr@plt+0x3fa13>
  4563d3:	orl    $0x400,0xa8(%rsp)
  4563de:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  4563e3:	lea    0x179ce(%rip),%rsi        # 46ddb8 <_fini+0x108b4>
  4563ea:	mov    %rdx,%rdi
  4563ed:	mov    %r8,0x148(%rsp)
  4563f5:	mov    %rdx,0xd8(%rsp)
  4563fd:	callq  4155c0 <strcmp@plt>
  456402:	test   %eax,%eax
  456404:	mov    0xd8(%rsp),%rdx
  45640c:	mov    0x148(%rsp),%r8
  456414:	jne    456426 <X509_get0_pubkey_bitstr@plt+0x3fa56>
  456416:	orl    $0x800,0xa8(%rsp)
  456421:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  456426:	lea    0x78ba(%rip),%rsi        # 45dce7 <_fini+0x7e3>
  45642d:	mov    %rdx,%rdi
  456430:	mov    %r8,0x148(%rsp)
  456438:	mov    %rdx,0xd8(%rsp)
  456440:	callq  4155c0 <strcmp@plt>
  456445:	test   %eax,%eax
  456447:	mov    0xd8(%rsp),%rdx
  45644f:	mov    0x148(%rsp),%r8
  456457:	je     4566a5 <X509_get0_pubkey_bitstr@plt+0x3fcd5>
  45645d:	lea    0x1857e(%rip),%rsi        # 46e9e2 <_fini+0x114de>
  456464:	mov    %rdx,%rdi
  456467:	callq  4155c0 <strcmp@plt>
  45646c:	test   %eax,%eax
  45646e:	mov    0xd8(%rsp),%rdx
  456476:	mov    0x148(%rsp),%r8
  45647e:	je     45668a <X509_get0_pubkey_bitstr@plt+0x3fcba>
  456484:	lea    0x1856e(%rip),%rsi        # 46e9f9 <_fini+0x114f5>
  45648b:	mov    %rdx,%rdi
  45648e:	callq  4155c0 <strcmp@plt>
  456493:	test   %eax,%eax
  456495:	mov    0xd8(%rsp),%rdx
  45649d:	mov    0x148(%rsp),%r8
  4564a5:	je     4566b5 <X509_get0_pubkey_bitstr@plt+0x3fce5>
  4564ab:	lea    0x1855c(%rip),%rsi        # 46ea0e <_fini+0x1150a>
  4564b2:	mov    %rdx,%rdi
  4564b5:	callq  4155c0 <strcmp@plt>
  4564ba:	test   %eax,%eax
  4564bc:	mov    0xd8(%rsp),%rdx
  4564c4:	mov    0x148(%rsp),%r8
  4564cc:	je     45667a <X509_get0_pubkey_bitstr@plt+0x3fcaa>
  4564d2:	lea    0x1854c(%rip),%rsi        # 46ea25 <_fini+0x11521>
  4564d9:	mov    %rdx,%rdi
  4564dc:	callq  4155c0 <strcmp@plt>
  4564e1:	test   %eax,%eax
  4564e3:	mov    0xd8(%rsp),%rdx
  4564eb:	mov    0x148(%rsp),%r8
  4564f3:	jne    456541 <X509_get0_pubkey_bitstr@plt+0x3fb71>
  4564f5:	cmpq   $0x0,0x8(%r8)
  4564fa:	je     453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456500:	add    $0x8,%r8
  456504:	test   %r13,%r13
  456507:	mov    %r8,0x168(%rsp)
  45650f:	jne    456519 <X509_get0_pubkey_bitstr@plt+0x3fb49>
  456511:	callq  412cd0 <sk_new_null@plt>
  456516:	mov    %rax,%r13
  456519:	mov    0x168(%rsp),%rax
  456521:	mov    %r13,%rdi
  456524:	mov    (%rax),%rsi
  456527:	callq  412fe0 <sk_push@plt>
  45652c:	mov    0x168(%rsp),%r8
  456534:	mov    0x160(%rsp),%r14d
  45653c:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  456541:	lea    0x184f3(%rip),%rsi        # 46ea3b <_fini+0x11537>
  456548:	mov    %rdx,%rdi
  45654b:	mov    %r8,0x148(%rsp)
  456553:	mov    %rdx,0xd8(%rsp)
  45655b:	callq  4155c0 <strcmp@plt>
  456560:	test   %eax,%eax
  456562:	mov    0xd8(%rsp),%rdx
  45656a:	mov    0x148(%rsp),%r8
  456572:	jne    4565c7 <X509_get0_pubkey_bitstr@plt+0x3fbf7>
  456574:	cmpq   $0x0,0x8(%r8)
  456579:	je     453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  45657f:	add    $0x8,%r8
  456583:	cmpq   $0x0,0x20(%rsp)
  456589:	mov    %r8,0x168(%rsp)
  456591:	jne    45659d <X509_get0_pubkey_bitstr@plt+0x3fbcd>
  456593:	callq  412cd0 <sk_new_null@plt>
  456598:	mov    %rax,0x20(%rsp)
  45659d:	mov    0x168(%rsp),%rax
  4565a5:	mov    0x20(%rsp),%rdi
  4565aa:	mov    (%rax),%rsi
  4565ad:	callq  412fe0 <sk_push@plt>
  4565b2:	mov    0x168(%rsp),%r8
  4565ba:	mov    0x160(%rsp),%r14d
  4565c2:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  4565c7:	lea    0xc472(%rip),%rsi        # 462a40 <_fini+0x553c>
  4565ce:	mov    %rdx,%rdi
  4565d1:	mov    %r8,0x148(%rsp)
  4565d9:	mov    %rdx,0xd8(%rsp)
  4565e1:	callq  4155c0 <strcmp@plt>
  4565e6:	test   %eax,%eax
  4565e8:	mov    0xd8(%rsp),%rdx
  4565f0:	mov    0x148(%rsp),%r8
  4565f8:	je     45669a <X509_get0_pubkey_bitstr@plt+0x3fcca>
  4565fe:	lea    0x1844a(%rip),%rsi        # 46ea4f <_fini+0x1154b>
  456605:	mov    %rdx,%rdi
  456608:	callq  4155c0 <strcmp@plt>
  45660d:	test   %eax,%eax
  45660f:	mov    0xd8(%rsp),%rdx
  456617:	mov    0x148(%rsp),%r8
  45661f:	jne    4566e6 <X509_get0_pubkey_bitstr@plt+0x3fd16>
  456625:	mov    0x8(%r8),%rdi
  456629:	test   %rdi,%rdi
  45662c:	je     453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456632:	mov    0x80(%rsp),%rsi
  45663a:	add    $0x8,%r8
  45663e:	mov    %r8,0x168(%rsp)
  456646:	callq  414d40 <string_to_hex@plt>
  45664b:	test   %rax,%rax
  45664e:	mov    %rax,0x40(%rsp)
  456653:	je     4566c5 <X509_get0_pubkey_bitstr@plt+0x3fcf5>
  456655:	mov    0x1a0(%rsp),%rax
  45665d:	mov    0x168(%rsp),%r8
  456665:	mov    0x160(%rsp),%r14d
  45666d:	mov    %rax,0xe8(%rsp)
  456675:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  45667a:	movl   $0x1,0xb0(%rsp)
  456685:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  45668a:	movl   $0x1,0x11c(%rsp)
  456695:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  45669a:	movl   $0x1,0x118(%rsp)
  4566a5:	movl   $0x1,0x104(%rsp)
  4566b0:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  4566b5:	movl   $0x0,0xb0(%rsp)
  4566c0:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  4566c5:	mov    0x168(%rsp),%rax
  4566cd:	mov    (%rbx),%rdi
  4566d0:	lea    0x18383(%rip),%rsi        # 46ea5a <_fini+0x11556>
  4566d7:	mov    (%rax),%rdx
  4566da:	xor    %eax,%eax
  4566dc:	callq  413c40 <BIO_printf@plt>
  4566e1:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  4566e6:	lea    0x1837d(%rip),%rsi        # 46ea6a <_fini+0x11566>
  4566ed:	mov    %rdx,%rdi
  4566f0:	mov    %r8,0x148(%rsp)
  4566f8:	mov    %rdx,0xd8(%rsp)
  456700:	callq  4155c0 <strcmp@plt>
  456705:	test   %eax,%eax
  456707:	mov    0xd8(%rsp),%rdx
  45670f:	mov    0x148(%rsp),%r8
  456717:	jne    45678f <X509_get0_pubkey_bitstr@plt+0x3fdbf>
  456719:	mov    0x8(%r8),%rdi
  45671d:	test   %rdi,%rdi
  456720:	je     453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456726:	mov    0x80(%rsp),%rsi
  45672e:	add    $0x8,%r8
  456732:	mov    %r8,0x168(%rsp)
  45673a:	callq  414d40 <string_to_hex@plt>
  45673f:	test   %rax,%rax
  456742:	mov    %rax,0x70(%rsp)
  456747:	je     45676e <X509_get0_pubkey_bitstr@plt+0x3fd9e>
  456749:	mov    0x1a0(%rsp),%rax
  456751:	mov    0x168(%rsp),%r8
  456759:	mov    0x160(%rsp),%r14d
  456761:	mov    %rax,0x110(%rsp)
  456769:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  45676e:	mov    0x168(%rsp),%rax
  456776:	mov    (%rbx),%rdi
  456779:	lea    0x182f7(%rip),%rsi        # 46ea77 <_fini+0x11573>
  456780:	mov    (%rax),%rdx
  456783:	xor    %eax,%eax
  456785:	callq  413c40 <BIO_printf@plt>
  45678a:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  45678f:	lea    0x182f0(%rip),%rsi        # 46ea86 <_fini+0x11582>
  456796:	mov    %rdx,%rdi
  456799:	mov    %r8,0x148(%rsp)
  4567a1:	mov    %rdx,0xd8(%rsp)
  4567a9:	callq  4155c0 <strcmp@plt>
  4567ae:	test   %eax,%eax
  4567b0:	mov    0xd8(%rsp),%rdx
  4567b8:	mov    0x148(%rsp),%r8
  4567c0:	jne    4567e0 <X509_get0_pubkey_bitstr@plt+0x3fe10>
  4567c2:	mov    0x8(%r8),%rax
  4567c6:	test   %rax,%rax
  4567c9:	mov    %rax,0xd0(%rsp)
  4567d1:	je     453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  4567d7:	add    $0x8,%r8
  4567db:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  4567e0:	lea    0x182ae(%rip),%rsi        # 46ea95 <_fini+0x11591>
  4567e7:	mov    %rdx,%rdi
  4567ea:	mov    %r8,0x148(%rsp)
  4567f2:	mov    %rdx,0xd8(%rsp)
  4567fa:	callq  4155c0 <strcmp@plt>
  4567ff:	test   %eax,%eax
  456801:	mov    0xd8(%rsp),%rdx
  456809:	mov    0x148(%rsp),%r8
  456811:	jne    456855 <X509_get0_pubkey_bitstr@plt+0x3fe85>
  456813:	mov    0x8(%r8),%rdi
  456817:	test   %rdi,%rdi
  45681a:	je     453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456820:	add    $0x8,%r8
  456824:	xor    %esi,%esi
  456826:	mov    %r8,0x168(%rsp)
  45682e:	callq  414870 <OBJ_txt2obj@plt>
  456833:	test   %rax,%rax
  456836:	mov    %rax,0x90(%rsp)
  45683e:	je     4568ae <X509_get0_pubkey_bitstr@plt+0x3fede>
  456840:	mov    0x168(%rsp),%r8
  456848:	mov    0x160(%rsp),%r14d
  456850:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  456855:	lea    0x79a5(%rip),%rsi        # 45e201 <_fini+0xcfd>
  45685c:	mov    %rdx,%rdi
  45685f:	mov    %r8,0x148(%rsp)
  456867:	mov    %rdx,0xd8(%rsp)
  45686f:	callq  4155c0 <strcmp@plt>
  456874:	test   %eax,%eax
  456876:	mov    0xd8(%rsp),%rdx
  45687e:	mov    0x148(%rsp),%r8
  456886:	jne    4568cf <X509_get0_pubkey_bitstr@plt+0x3feff>
  456888:	mov    0x8(%r8),%rax
  45688c:	test   %rax,%rax
  45688f:	mov    %rax,0x68(%rsp)
  456894:	je     453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  45689a:	add    $0x8,%r8
  45689e:	movl   $0x1,0xc8(%rsp)
  4568a9:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  4568ae:	mov    0x168(%rsp),%rax
  4568b6:	mov    (%rbx),%rdi
  4568b9:	lea    0x181e4(%rip),%rsi        # 46eaa4 <_fini+0x115a0>
  4568c0:	mov    (%rax),%rdx
  4568c3:	xor    %eax,%eax
  4568c5:	callq  413c40 <BIO_printf@plt>
  4568ca:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  4568cf:	lea    0x728c(%rip),%rsi        # 45db62 <_fini+0x65e>
  4568d6:	mov    %rdx,%rdi
  4568d9:	mov    %r8,0x148(%rsp)
  4568e1:	mov    %rdx,0xd8(%rsp)
  4568e9:	callq  4155c0 <strcmp@plt>
  4568ee:	test   %eax,%eax
  4568f0:	mov    0xd8(%rsp),%rdx
  4568f8:	mov    0x148(%rsp),%r8
  456900:	jne    456919 <X509_get0_pubkey_bitstr@plt+0x3ff49>
  456902:	mov    0x8(%r8),%rax
  456906:	test   %rax,%rax
  456909:	mov    %rax,0x30(%rsp)
  45690e:	jne    4567d7 <X509_get0_pubkey_bitstr@plt+0x3fe07>
  456914:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456919:	lea    0x78d0(%rip),%rsi        # 45e1f0 <_fini+0xcec>
  456920:	mov    %rdx,%rdi
  456923:	mov    %r8,0x148(%rsp)
  45692b:	mov    %rdx,0xd8(%rsp)
  456933:	callq  4155c0 <strcmp@plt>
  456938:	test   %eax,%eax
  45693a:	mov    0xd8(%rsp),%rdx
  456942:	mov    0x148(%rsp),%r8
  45694a:	jne    456963 <X509_get0_pubkey_bitstr@plt+0x3ff93>
  45694c:	mov    0x8(%r8),%rax
  456950:	test   %rax,%rax
  456953:	mov    %rax,0x28(%rsp)
  456958:	jne    4567d7 <X509_get0_pubkey_bitstr@plt+0x3fe07>
  45695e:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456963:	movzbl 0x1(%rdx),%eax
  456967:	cmp    $0x74,%al
  456969:	mov    %al,0xd8(%rsp)
  456970:	jne    456998 <X509_get0_pubkey_bitstr@plt+0x3ffc8>
  456972:	cmpb   $0x6f,0x2(%rdx)
  456976:	jne    456998 <X509_get0_pubkey_bitstr@plt+0x3ffc8>
  456978:	cmpb   $0x0,0x3(%rdx)
  45697c:	jne    456998 <X509_get0_pubkey_bitstr@plt+0x3ffc8>
  45697e:	mov    0x8(%r8),%rax
  456982:	test   %rax,%rax
  456985:	mov    %rax,0x120(%rsp)
  45698d:	jne    4567d7 <X509_get0_pubkey_bitstr@plt+0x3fe07>
  456993:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456998:	lea    0x17422(%rip),%rsi        # 46ddc1 <_fini+0x108bd>
  45699f:	mov    %rdx,%rdi
  4569a2:	mov    %r8,0x150(%rsp)
  4569aa:	mov    %rdx,0x148(%rsp)
  4569b2:	callq  4155c0 <strcmp@plt>
  4569b7:	test   %eax,%eax
  4569b9:	mov    0x148(%rsp),%rdx
  4569c1:	mov    0x150(%rsp),%r8
  4569c9:	jne    4569e5 <X509_get0_pubkey_bitstr@plt+0x40015>
  4569cb:	mov    0x8(%r8),%rax
  4569cf:	test   %rax,%rax
  4569d2:	mov    %rax,0x128(%rsp)
  4569da:	jne    4567d7 <X509_get0_pubkey_bitstr@plt+0x3fe07>
  4569e0:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  4569e5:	lea    0x7872(%rip),%rsi        # 45e25e <_fini+0xd5a>
  4569ec:	mov    %rdx,%rdi
  4569ef:	mov    %r8,0x150(%rsp)
  4569f7:	mov    %rdx,0x148(%rsp)
  4569ff:	callq  4155c0 <strcmp@plt>
  456a04:	test   %eax,%eax
  456a06:	mov    0x148(%rsp),%rdx
  456a0e:	mov    0x150(%rsp),%r8
  456a16:	jne    456a32 <X509_get0_pubkey_bitstr@plt+0x40062>
  456a18:	mov    0x8(%r8),%rax
  456a1c:	test   %rax,%rax
  456a1f:	mov    %rax,0x130(%rsp)
  456a27:	jne    4567d7 <X509_get0_pubkey_bitstr@plt+0x3fe07>
  456a2d:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456a32:	lea    0x1738e(%rip),%rsi        # 46ddc7 <_fini+0x108c3>
  456a39:	mov    %rdx,%rdi
  456a3c:	mov    %r8,0x150(%rsp)
  456a44:	mov    %rdx,0x148(%rsp)
  456a4c:	callq  4155c0 <strcmp@plt>
  456a51:	test   %eax,%eax
  456a53:	mov    0x148(%rsp),%rdx
  456a5b:	mov    0x150(%rsp),%r8
  456a63:	jne    456afa <X509_get0_pubkey_bitstr@plt+0x4012a>
  456a69:	cmpq   $0x0,0x8(%r8)
  456a6e:	je     453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456a74:	cmpq   $0x0,0xa0(%rsp)
  456a7d:	je     456add <X509_get0_pubkey_bitstr@plt+0x4010d>
  456a7f:	test   %rbp,%rbp
  456a82:	jne    456a8c <X509_get0_pubkey_bitstr@plt+0x400bc>
  456a84:	callq  412cd0 <sk_new_null@plt>
  456a89:	mov    %rax,%rbp
  456a8c:	mov    0xa0(%rsp),%r14
  456a94:	mov    %rbp,%rdi
  456a97:	mov    %r14,%rsi
  456a9a:	callq  412fe0 <sk_push@plt>
  456a9f:	test   %r15,%r15
  456aa2:	cmove  %r14,%r15
  456aa6:	cmpq   $0x0,0x18(%rsp)
  456aac:	mov    %r15,0xa0(%rsp)
  456ab4:	jne    456ac0 <X509_get0_pubkey_bitstr@plt+0x400f0>
  456ab6:	callq  412cd0 <sk_new_null@plt>
  456abb:	mov    %rax,0x18(%rsp)
  456ac0:	mov    0xa0(%rsp),%rsi
  456ac8:	mov    0x18(%rsp),%rdi
  456acd:	xor    %r15d,%r15d
  456ad0:	callq  412fe0 <sk_push@plt>
  456ad5:	mov    0x168(%rsp),%r8
  456add:	mov    0x8(%r8),%rax
  456ae1:	mov    0x160(%rsp),%r14d
  456ae9:	add    $0x8,%r8
  456aed:	mov    %rax,0xa0(%rsp)
  456af5:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  456afa:	lea    0x172ce(%rip),%rsi        # 46ddcf <_fini+0x108cb>
  456b01:	mov    %rdx,%rdi
  456b04:	mov    %r8,0x150(%rsp)
  456b0c:	mov    %rdx,0x148(%rsp)
  456b14:	callq  4155c0 <strcmp@plt>
  456b19:	test   %eax,%eax
  456b1b:	mov    0x148(%rsp),%rdx
  456b23:	mov    0x150(%rsp),%r8
  456b2b:	jne    456b44 <X509_get0_pubkey_bitstr@plt+0x40174>
  456b2d:	mov    0x8(%r8),%rax
  456b31:	test   %rax,%rax
  456b34:	mov    %rax,0x38(%rsp)
  456b39:	jne    4567d7 <X509_get0_pubkey_bitstr@plt+0x3fe07>
  456b3f:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456b44:	lea    0x17f69(%rip),%rsi        # 46eab4 <_fini+0x115b0>
  456b4b:	mov    %rdx,%rdi
  456b4e:	mov    %r8,0x150(%rsp)
  456b56:	mov    %rdx,0x148(%rsp)
  456b5e:	callq  4155c0 <strcmp@plt>
  456b63:	test   %eax,%eax
  456b65:	mov    0x148(%rsp),%rdx
  456b6d:	mov    0x150(%rsp),%r8
  456b75:	jne    456b91 <X509_get0_pubkey_bitstr@plt+0x401c1>
  456b77:	mov    0x8(%r8),%rax
  456b7b:	test   %rax,%rax
  456b7e:	mov    %rax,0xf8(%rsp)
  456b86:	jne    4567d7 <X509_get0_pubkey_bitstr@plt+0x3fe07>
  456b8c:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456b91:	cmpb   $0x6d,0xd8(%rsp)
  456b99:	jne    456bf7 <X509_get0_pubkey_bitstr@plt+0x40227>
  456b9b:	cmpb   $0x64,0x2(%rdx)
  456b9f:	jne    456bf7 <X509_get0_pubkey_bitstr@plt+0x40227>
  456ba1:	cmpb   $0x0,0x3(%rdx)
  456ba5:	jne    456bf7 <X509_get0_pubkey_bitstr@plt+0x40227>
  456ba7:	mov    0x8(%r8),%rdi
  456bab:	test   %rdi,%rdi
  456bae:	je     453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456bb4:	add    $0x8,%r8
  456bb8:	mov    %r8,0x168(%rsp)
  456bc0:	callq  416720 <EVP_get_digestbyname@plt>
  456bc5:	test   %rax,%rax
  456bc8:	mov    %rax,0x108(%rsp)
  456bd0:	jne    456840 <X509_get0_pubkey_bitstr@plt+0x3fe70>
  456bd6:	mov    0x168(%rsp),%rax
  456bde:	mov    (%rbx),%rdi
  456be1:	lea    0x171ee(%rip),%rsi        # 46ddd6 <_fini+0x108d2>
  456be8:	mov    (%rax),%rdx
  456beb:	xor    %eax,%eax
  456bed:	callq  413c40 <BIO_printf@plt>
  456bf2:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456bf7:	lea    0xc9f4(%rip),%rsi        # 4635f2 <_fini+0x60ee>
  456bfe:	mov    %rdx,%rdi
  456c01:	mov    %r8,0x150(%rsp)
  456c09:	mov    %rdx,0x148(%rsp)
  456c11:	callq  4155c0 <strcmp@plt>
  456c16:	test   %eax,%eax
  456c18:	mov    0x148(%rsp),%rdx
  456c20:	mov    0x150(%rsp),%r8
  456c28:	jne    456cb2 <X509_get0_pubkey_bitstr@plt+0x402e2>
  456c2e:	cmpq   $0x0,0x8(%r8)
  456c33:	je     453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456c39:	test   %r15,%r15
  456c3c:	je     456c9d <X509_get0_pubkey_bitstr@plt+0x402cd>
  456c3e:	cmpq   $0x0,0xa0(%rsp)
  456c47:	je     45438d <X509_get0_pubkey_bitstr@plt+0x3d9bd>
  456c4d:	test   %rbp,%rbp
  456c50:	jne    456c5a <X509_get0_pubkey_bitstr@plt+0x4028a>
  456c52:	callq  412cd0 <sk_new_null@plt>
  456c57:	mov    %rax,%rbp
  456c5a:	mov    0xa0(%rsp),%rsi
  456c62:	mov    %rbp,%rdi
  456c65:	callq  412fe0 <sk_push@plt>
  456c6a:	cmpq   $0x0,0x18(%rsp)
  456c70:	jne    456c7c <X509_get0_pubkey_bitstr@plt+0x402ac>
  456c72:	callq  412cd0 <sk_new_null@plt>
  456c77:	mov    %rax,0x18(%rsp)
  456c7c:	mov    0x18(%rsp),%rdi
  456c81:	mov    %r15,%rsi
  456c84:	callq  412fe0 <sk_push@plt>
  456c89:	mov    0x168(%rsp),%r8
  456c91:	movq   $0x0,0xa0(%rsp)
  456c9d:	mov    0x8(%r8),%r15
  456ca1:	mov    0x160(%rsp),%r14d
  456ca9:	add    $0x8,%r8
  456cad:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  456cb2:	lea    0x7526(%rip),%rsi        # 45e1df <_fini+0xcdb>
  456cb9:	mov    %rdx,%rdi
  456cbc:	mov    %r8,0x150(%rsp)
  456cc4:	mov    %rdx,0x148(%rsp)
  456ccc:	callq  4155c0 <strcmp@plt>
  456cd1:	test   %eax,%eax
  456cd3:	mov    0x148(%rsp),%rdx
  456cdb:	mov    0x150(%rsp),%r8
  456ce3:	jne    456d1f <X509_get0_pubkey_bitstr@plt+0x4034f>
  456ce5:	mov    0x8(%r8),%rdi
  456ce9:	test   %rdi,%rdi
  456cec:	je     453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456cf2:	add    $0x8,%r8
  456cf6:	mov    %r8,0x168(%rsp)
  456cfe:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  456d03:	mov    0x168(%rsp),%r8
  456d0b:	mov    %eax,0xe4(%rsp)
  456d12:	mov    0x160(%rsp),%r14d
  456d1a:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  456d1f:	lea    0x17d98(%rip),%rsi        # 46eabe <_fini+0x115ba>
  456d26:	mov    %rdx,%rdi
  456d29:	mov    %r8,0x150(%rsp)
  456d31:	mov    %rdx,0x148(%rsp)
  456d39:	callq  4155c0 <strcmp@plt>
  456d3e:	test   %eax,%eax
  456d40:	mov    0x148(%rsp),%rdx
  456d48:	mov    0x150(%rsp),%r8
  456d50:	jne    456d8c <X509_get0_pubkey_bitstr@plt+0x403bc>
  456d52:	mov    0x8(%r8),%rdi
  456d56:	test   %rdi,%rdi
  456d59:	je     453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456d5f:	add    $0x8,%r8
  456d63:	mov    %r8,0x168(%rsp)
  456d6b:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  456d70:	mov    0x168(%rsp),%r8
  456d78:	mov    %eax,0x100(%rsp)
  456d7f:	mov    0x160(%rsp),%r14d
  456d87:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  456d8c:	lea    0xbe31(%rip),%rsi        # 462bc4 <_fini+0x56c0>
  456d93:	mov    %rdx,%rdi
  456d96:	mov    %r8,0x150(%rsp)
  456d9e:	mov    %rdx,0x148(%rsp)
  456da6:	callq  4155c0 <strcmp@plt>
  456dab:	test   %eax,%eax
  456dad:	mov    0x148(%rsp),%rdx
  456db5:	mov    0x150(%rsp),%r8
  456dbd:	jne    456dd6 <X509_get0_pubkey_bitstr@plt+0x40406>
  456dbf:	mov    0x8(%r8),%rax
  456dc3:	test   %rax,%rax
  456dc6:	mov    %rax,0x58(%rsp)
  456dcb:	jne    4567d7 <X509_get0_pubkey_bitstr@plt+0x3fe07>
  456dd1:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456dd6:	lea    0x6d60(%rip),%rsi        # 45db3d <_fini+0x639>
  456ddd:	mov    %rdx,%rdi
  456de0:	mov    %r8,0x150(%rsp)
  456de8:	mov    %rdx,0x148(%rsp)
  456df0:	callq  4155c0 <strcmp@plt>
  456df5:	test   %eax,%eax
  456df7:	mov    0x148(%rsp),%rdx
  456dff:	mov    0x150(%rsp),%r8
  456e07:	jne    456e23 <X509_get0_pubkey_bitstr@plt+0x40453>
  456e09:	mov    0x8(%r8),%rax
  456e0d:	test   %rax,%rax
  456e10:	mov    %rax,0x138(%rsp)
  456e18:	jne    4567d7 <X509_get0_pubkey_bitstr@plt+0x3fe07>
  456e1e:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456e23:	lea    0x6d0b(%rip),%rsi        # 45db35 <_fini+0x631>
  456e2a:	mov    %rdx,%rdi
  456e2d:	mov    %r8,0x150(%rsp)
  456e35:	mov    %rdx,0x148(%rsp)
  456e3d:	callq  4155c0 <strcmp@plt>
  456e42:	test   %eax,%eax
  456e44:	mov    0x148(%rsp),%rdx
  456e4c:	mov    0x150(%rsp),%r8
  456e54:	jne    456e70 <X509_get0_pubkey_bitstr@plt+0x404a0>
  456e56:	mov    0x8(%r8),%rax
  456e5a:	test   %rax,%rax
  456e5d:	mov    %rax,0x140(%rsp)
  456e65:	jne    4567d7 <X509_get0_pubkey_bitstr@plt+0x3fe07>
  456e6b:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456e70:	cmpb   $0x69,0xd8(%rsp)
  456e78:	jne    456e9d <X509_get0_pubkey_bitstr@plt+0x404cd>
  456e7a:	cmpb   $0x6e,0x2(%rdx)
  456e7e:	jne    456e9d <X509_get0_pubkey_bitstr@plt+0x404cd>
  456e80:	cmpb   $0x0,0x3(%rdx)
  456e84:	jne    456e9d <X509_get0_pubkey_bitstr@plt+0x404cd>
  456e86:	mov    0x8(%r8),%rax
  456e8a:	test   %rax,%rax
  456e8d:	mov    %rax,0x60(%rsp)
  456e92:	jne    4567d7 <X509_get0_pubkey_bitstr@plt+0x3fe07>
  456e98:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456e9d:	lea    0x6e3b(%rip),%rsi        # 45dcdf <_fini+0x7db>
  456ea4:	mov    %rdx,%rdi
  456ea7:	mov    %r8,0x148(%rsp)
  456eaf:	mov    %rdx,0xd8(%rsp)
  456eb7:	callq  4155c0 <strcmp@plt>
  456ebc:	test   %eax,%eax
  456ebe:	mov    0xd8(%rsp),%rdx
  456ec6:	mov    0x148(%rsp),%r8
  456ece:	jne    456f07 <X509_get0_pubkey_bitstr@plt+0x40537>
  456ed0:	mov    0x8(%r8),%rdi
  456ed4:	test   %rdi,%rdi
  456ed7:	je     453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456edd:	add    $0x8,%r8
  456ee1:	mov    %r8,0x168(%rsp)
  456ee9:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  456eee:	mov    0x168(%rsp),%r8
  456ef6:	mov    %eax,0x50(%rsp)
  456efa:	mov    0x160(%rsp),%r14d
  456f02:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  456f07:	lea    0x7282(%rip),%rsi        # 45e190 <_fini+0xc8c>
  456f0e:	mov    %rdx,%rdi
  456f11:	mov    %r8,0x148(%rsp)
  456f19:	mov    %rdx,0xd8(%rsp)
  456f21:	callq  4155c0 <strcmp@plt>
  456f26:	test   %eax,%eax
  456f28:	mov    0xd8(%rsp),%rdx
  456f30:	mov    0x148(%rsp),%r8
  456f38:	jne    456f74 <X509_get0_pubkey_bitstr@plt+0x405a4>
  456f3a:	mov    0x8(%r8),%rdi
  456f3e:	test   %rdi,%rdi
  456f41:	je     453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456f47:	add    $0x8,%r8
  456f4b:	mov    %r8,0x168(%rsp)
  456f53:	callq  4455f0 <X509_get0_pubkey_bitstr@plt+0x2ec20>
  456f58:	mov    0x168(%rsp),%r8
  456f60:	mov    %eax,0xe0(%rsp)
  456f67:	mov    0x160(%rsp),%r14d
  456f6f:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  456f74:	lea    0x6ecb(%rip),%rsi        # 45de46 <_fini+0x942>
  456f7b:	mov    %rdx,%rdi
  456f7e:	mov    %r8,0x148(%rsp)
  456f86:	mov    %rdx,0xd8(%rsp)
  456f8e:	callq  4155c0 <strcmp@plt>
  456f93:	test   %eax,%eax
  456f95:	mov    0xd8(%rsp),%rdx
  456f9d:	mov    0x148(%rsp),%r8
  456fa5:	jne    456fc1 <X509_get0_pubkey_bitstr@plt+0x405f1>
  456fa7:	mov    0x8(%r8),%rax
  456fab:	test   %rax,%rax
  456fae:	mov    %rax,0xf0(%rsp)
  456fb6:	jne    4567d7 <X509_get0_pubkey_bitstr@plt+0x3fe07>
  456fbc:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456fc1:	lea    0x16e21(%rip),%rsi        # 46dde9 <_fini+0x108e5>
  456fc8:	mov    %rdx,%rdi
  456fcb:	mov    %r8,0xd8(%rsp)
  456fd3:	callq  4155c0 <strcmp@plt>
  456fd8:	test   %eax,%eax
  456fda:	jne    456ffb <X509_get0_pubkey_bitstr@plt+0x4062b>
  456fdc:	mov    0xd8(%rsp),%r8
  456fe4:	mov    0x8(%r8),%rax
  456fe8:	test   %rax,%rax
  456feb:	mov    %rax,0x78(%rsp)
  456ff0:	jne    4567d7 <X509_get0_pubkey_bitstr@plt+0x3fe07>
  456ff6:	jmpq   453c3a <X509_get0_pubkey_bitstr@plt+0x3d26a>
  456ffb:	mov    0x88(%rsp),%r8
  457003:	mov    (%rbx),%rcx
  457006:	xor    %esi,%esi
  457008:	mov    0x98(%rsp),%rdx
  457010:	mov    0xb8(%rsp),%rdi
  457018:	callq  447ee0 <X509_get0_pubkey_bitstr@plt+0x31510>
  45701d:	test   %eax,%eax
  45701f:	je     45702e <X509_get0_pubkey_bitstr@plt+0x4065e>
  457021:	mov    0x160(%rsp),%r14d
  457029:	jmpq   4536ad <X509_get0_pubkey_bitstr@plt+0x3ccdd>
  45702e:	mov    0x168(%rsp),%rax
  457036:	mov    (%rax),%rdi
  457039:	add    $0x1,%rdi
  45703d:	callq  416810 <EVP_get_cipherbyname@plt>
  457042:	test   %rax,%rax
  457045:	mov    %rax,0xc0(%rsp)
  45704d:	jne    456840 <X509_get0_pubkey_bitstr@plt+0x3fe70>
  457053:	movl   $0x1,0x160(%rsp)
  45705e:	mov    0x168(%rsp),%r8
  457066:	mov    $0x1,%r14d
  45706c:	jmpq   453b66 <X509_get0_pubkey_bitstr@plt+0x3d196>
  457071:	nopw   %cs:0x0(%rax,%rax,1)
  45707b:	nopl   0x0(%rax,%rax,1)
  457080:	push   %r15
  457082:	mov    $0xd,%edi
  457087:	mov    %rsi,%r15
  45708a:	mov    $0x1,%esi
  45708f:	push   %r14
  457091:	push   %r13
  457093:	push   %r12
  457095:	push   %rbp
  457096:	push   %rbx
  457097:	sub    $0x1058,%rsp
  45709e:	mov    %fs:0x28,%rax
  4570a7:	mov    %rax,0x1048(%rsp)
  4570af:	xor    %eax,%eax
  4570b1:	movl   $0xffffffff,0x3c(%rsp)
  4570b9:	callq  414ee0 <signal@plt>
  4570be:	lea    0x223c7b(%rip),%r12        # 67ad40 <_edata+0x38>
  4570c5:	mov    (%r12),%rdi
  4570c9:	test   %rdi,%rdi
  4570cc:	je     457555 <X509_get0_pubkey_bitstr@plt+0x40b85>
  4570d2:	xor    %esi,%esi
  4570d4:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  4570d9:	test   %eax,%eax
  4570db:	je     4573ca <X509_get0_pubkey_bitstr@plt+0x409fa>
  4570e1:	lea    0x3c(%rsp),%rax
  4570e6:	mov    0x3c(%rsp),%r10d
  4570eb:	xor    %r9d,%r9d
  4570ee:	xor    %r14d,%r14d
  4570f1:	xor    %r11d,%r11d
  4570f4:	xor    %r8d,%r8d
  4570f7:	xor    %r13d,%r13d
  4570fa:	xor    %edx,%edx
  4570fc:	mov    %rax,0x8(%rsp)
  457101:	lea    0x1(%rdx),%ebp
  457104:	movslq %ebp,%rcx
  457107:	mov    (%r15,%rcx,8),%rbx
  45710b:	lea    0x0(,%rcx,8),%rax
  457113:	test   %rbx,%rbx
  457116:	je     457460 <X509_get0_pubkey_bitstr@plt+0x40a90>
  45711c:	lea    0x6d23(%rip),%rdi        # 45de46 <_fini+0x942>
  457123:	mov    $0x5,%ecx
  457128:	mov    %rbx,%rsi
  45712b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45712d:	jne    4572c8 <X509_get0_pubkey_bitstr@plt+0x408f8>
  457133:	mov    0x8(%r15,%rax,1),%rax
  457138:	test   %rax,%rax
  45713b:	je     457146 <X509_get0_pubkey_bitstr@plt+0x40776>
  45713d:	test   %r13,%r13
  457140:	je     457455 <X509_get0_pubkey_bitstr@plt+0x40a85>
  457146:	mov    $0x1,%eax
  45714b:	test   %r11b,%r11b
  45714e:	mov    %r14b,0x8(%rsp)
  457153:	mov    %r11d,%ebx
  457156:	jne    457339 <X509_get0_pubkey_bitstr@plt+0x40969>
  45715c:	test   %r10d,%r10d
  45715f:	js     457342 <X509_get0_pubkey_bitstr@plt+0x40972>
  457165:	test   %eax,%eax
  457167:	jne    457342 <X509_get0_pubkey_bitstr@plt+0x40972>
  45716d:	mov    (%r12),%rdi
  457171:	xor    %edx,%edx
  457173:	mov    %r9,%rsi
  457176:	mov    %r8,0x10(%rsp)
  45717b:	callq  4469c0 <X509_get0_pubkey_bitstr@plt+0x2fff0>
  457180:	mov    0x10(%rsp),%r8
  457185:	mov    (%r12),%rsi
  457189:	test   %r8,%r8
  45718c:	setne  %r15b
  457190:	xor    %edi,%edi
  457192:	movzbl %r15b,%edx
  457196:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  45719b:	test   %r15b,%r15b
  45719e:	je     4571c2 <X509_get0_pubkey_bitstr@plt+0x407f2>
  4571a0:	mov    0x10(%rsp),%r8
  4571a5:	mov    %r8,%rdi
  4571a8:	callq  44a710 <X509_get0_pubkey_bitstr@plt+0x33d40>
  4571ad:	mov    (%r12),%rdi
  4571b1:	lea    0x8bd9(%rip),%rsi        # 45fd91 <_fini+0x288d>
  4571b8:	mov    %rax,%rdx
  4571bb:	xor    %eax,%eax
  4571bd:	callq  413c40 <BIO_printf@plt>
  4571c2:	callq  4152b0 <BIO_s_file@plt>
  4571c7:	mov    %rax,%rdi
  4571ca:	callq  414a20 <BIO_new@plt>
  4571cf:	test   %rax,%rax
  4571d2:	mov    %rax,%r15
  4571d5:	je     4573ca <X509_get0_pubkey_bitstr@plt+0x409fa>
  4571db:	test   %r13,%r13
  4571de:	je     4575aa <X509_get0_pubkey_bitstr@plt+0x40bda>
  4571e4:	mov    %r13,%rcx
  4571e7:	mov    $0x5,%edx
  4571ec:	mov    $0x6c,%esi
  4571f1:	mov    %rax,%rdi
  4571f4:	callq  412af0 <BIO_ctrl@plt>
  4571f9:	test   %eax,%eax
  4571fb:	jle    457542 <X509_get0_pubkey_bitstr@plt+0x40b72>
  457201:	test   %bl,%bl
  457203:	jne    45752e <X509_get0_pubkey_bitstr@plt+0x40b5e>
  457209:	mov    0x3c(%rsp),%eax
  45720d:	test   %eax,%eax
  45720f:	jle    45727d <X509_get0_pubkey_bitstr@plt+0x408ad>
  457211:	lea    0x40(%rsp),%r13
  457216:	nopw   %cs:0x0(%rax,%rax,1)
  457220:	cmp    $0x1000,%eax
  457225:	mov    $0x1000,%ebp
  45722a:	mov    %r13,%rdi
  45722d:	cmovle %eax,%ebp
  457230:	mov    %ebp,%esi
  457232:	callq  415360 <RAND_bytes@plt>
  457237:	test   %eax,%eax
  457239:	jle    457524 <X509_get0_pubkey_bitstr@plt+0x40b54>
  45723f:	xor    %ebx,%ebx
  457241:	test   %r14d,%r14d
  457244:	je     457500 <X509_get0_pubkey_bitstr@plt+0x40b30>
  45724a:	nopw   0x0(%rax,%rax,1)
  457250:	movzbl 0x0(%r13,%rbx,1),%edx
  457256:	lea    0x14949(%rip),%rsi        # 46bba6 <_fini+0xe6a2>
  45725d:	xor    %eax,%eax
  45725f:	mov    %r15,%rdi
  457262:	add    $0x1,%rbx
  457266:	callq  413c40 <BIO_printf@plt>
  45726b:	cmp    %ebx,%ebp
  45726d:	jg     457250 <X509_get0_pubkey_bitstr@plt+0x40880>
  45726f:	mov    0x3c(%rsp),%eax
  457273:	sub    %ebp,%eax
  457275:	test   %eax,%eax
  457277:	mov    %eax,0x3c(%rsp)
  45727b:	jg     457220 <X509_get0_pubkey_bitstr@plt+0x40850>
  45727d:	cmpb   $0x0,0x8(%rsp)
  457282:	jne    4575cb <X509_get0_pubkey_bitstr@plt+0x40bfb>
  457288:	xor    %ecx,%ecx
  45728a:	xor    %edx,%edx
  45728c:	mov    $0xb,%esi
  457291:	mov    %r15,%rdi
  457294:	xor    %ebx,%ebx
  457296:	callq  412af0 <BIO_ctrl@plt>
  45729b:	mov    (%r12),%rsi
  45729f:	xor    %edi,%edi
  4572a1:	callq  44a660 <X509_get0_pubkey_bitstr@plt+0x33c90>
  4572a6:	mov    (%r12),%rdi
  4572aa:	callq  413f40 <ERR_print_errors@plt>
  4572af:	test   %r15,%r15
  4572b2:	je     4573d8 <X509_get0_pubkey_bitstr@plt+0x40a08>
  4572b8:	mov    %r15,%rdi
  4572bb:	callq  416570 <BIO_free_all@plt>
  4572c0:	jmpq   4573d8 <X509_get0_pubkey_bitstr@plt+0x40a08>
  4572c5:	nopl   (%rax)
  4572c8:	lea    0x6893(%rip),%rdi        # 45db62 <_fini+0x65e>
  4572cf:	mov    $0x8,%ecx
  4572d4:	mov    %rbx,%rsi
  4572d7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4572d9:	jne    457300 <X509_get0_pubkey_bitstr@plt+0x40930>
  4572db:	mov    0x8(%r15,%rax,1),%rax
  4572e0:	test   %rax,%rax
  4572e3:	je     457146 <X509_get0_pubkey_bitstr@plt+0x40776>
  4572e9:	test   %r9,%r9
  4572ec:	jne    457146 <X509_get0_pubkey_bitstr@plt+0x40776>
  4572f2:	add    $0x2,%edx
  4572f5:	mov    %rax,%r9
  4572f8:	jmpq   457101 <X509_get0_pubkey_bitstr@plt+0x40731>
  4572fd:	nopl   (%rax)
  457300:	lea    0x6efa(%rip),%rdi        # 45e201 <_fini+0xcfd>
  457307:	mov    $0x6,%ecx
  45730c:	mov    %rbx,%rsi
  45730f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  457311:	jne    457403 <X509_get0_pubkey_bitstr@plt+0x40a33>
  457317:	mov    0x8(%r15,%rax,1),%rax
  45731c:	test   %rax,%rax
  45731f:	je     457146 <X509_get0_pubkey_bitstr@plt+0x40776>
  457325:	test   %r8,%r8
  457328:	jne    457146 <X509_get0_pubkey_bitstr@plt+0x40776>
  45732e:	add    $0x2,%edx
  457331:	mov    %rax,%r8
  457334:	jmpq   457101 <X509_get0_pubkey_bitstr@plt+0x40731>
  457339:	test   %r14b,%r14b
  45733c:	je     45715c <X509_get0_pubkey_bitstr@plt+0x4078c>
  457342:	mov    (%r12),%rdi
  457346:	lea    0x17ad3(%rip),%rsi        # 46ee20 <_fini+0x1191c>
  45734d:	xor    %eax,%eax
  45734f:	callq  413c40 <BIO_printf@plt>
  457354:	mov    (%r12),%rdi
  457358:	lea    0x69f6(%rip),%rsi        # 45dd55 <_fini+0x851>
  45735f:	xor    %eax,%eax
  457361:	callq  413c40 <BIO_printf@plt>
  457366:	mov    (%r12),%rdi
  45736a:	lea    0x17acf(%rip),%rsi        # 46ee40 <_fini+0x1193c>
  457371:	xor    %eax,%eax
  457373:	callq  413c40 <BIO_printf@plt>
  457378:	mov    (%r12),%rdi
  45737c:	lea    0x17ae5(%rip),%rsi        # 46ee68 <_fini+0x11964>
  457383:	xor    %eax,%eax
  457385:	callq  413c40 <BIO_printf@plt>
  45738a:	mov    (%r12),%rdi
  45738e:	lea    0x17b1b(%rip),%rsi        # 46eeb0 <_fini+0x119ac>
  457395:	mov    $0x3a,%ecx
  45739a:	mov    $0x3a,%edx
  45739f:	xor    %eax,%eax
  4573a1:	callq  413c40 <BIO_printf@plt>
  4573a6:	mov    (%r12),%rdi
  4573aa:	lea    0x17b2f(%rip),%rsi        # 46eee0 <_fini+0x119dc>
  4573b1:	xor    %eax,%eax
  4573b3:	callq  413c40 <BIO_printf@plt>
  4573b8:	mov    (%r12),%rdi
  4573bc:	lea    0x17b4d(%rip),%rsi        # 46ef10 <_fini+0x11a0c>
  4573c3:	xor    %eax,%eax
  4573c5:	callq  413c40 <BIO_printf@plt>
  4573ca:	mov    (%r12),%rdi
  4573ce:	mov    $0x1,%ebx
  4573d3:	callq  413f40 <ERR_print_errors@plt>
  4573d8:	mov    0x1048(%rsp),%rcx
  4573e0:	xor    %fs:0x28,%rcx
  4573e9:	mov    %ebx,%eax
  4573eb:	jne    4575df <X509_get0_pubkey_bitstr@plt+0x40c0f>
  4573f1:	add    $0x1058,%rsp
  4573f8:	pop    %rbx
  4573f9:	pop    %rbp
  4573fa:	pop    %r12
  4573fc:	pop    %r13
  4573fe:	pop    %r14
  457400:	pop    %r15
  457402:	retq   
  457403:	lea    0x8e74(%rip),%rdi        # 46027e <_fini+0x2d7a>
  45740a:	mov    $0x8,%ecx
  45740f:	mov    %rbx,%rsi
  457412:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  457414:	jne    45742c <X509_get0_pubkey_bitstr@plt+0x40a5c>
  457416:	test   %r11d,%r11d
  457419:	jne    457146 <X509_get0_pubkey_bitstr@plt+0x40776>
  45741f:	mov    %ebp,%edx
  457421:	mov    $0x1,%r11d
  457427:	jmpq   457101 <X509_get0_pubkey_bitstr@plt+0x40731>
  45742c:	lea    0x84aa(%rip),%rdi        # 45f8dd <_fini+0x23d9>
  457433:	mov    $0x5,%ecx
  457438:	mov    %rbx,%rsi
  45743b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45743d:	jne    457467 <X509_get0_pubkey_bitstr@plt+0x40a97>
  45743f:	test   %r14d,%r14d
  457442:	jne    457146 <X509_get0_pubkey_bitstr@plt+0x40776>
  457448:	mov    %ebp,%edx
  45744a:	mov    $0x1,%r14d
  457450:	jmpq   457101 <X509_get0_pubkey_bitstr@plt+0x40731>
  457455:	add    $0x2,%edx
  457458:	mov    %rax,%r13
  45745b:	jmpq   457101 <X509_get0_pubkey_bitstr@plt+0x40731>
  457460:	xor    %eax,%eax
  457462:	jmpq   45714b <X509_get0_pubkey_bitstr@plt+0x4077b>
  457467:	mov    %r9,0x28(%rsp)
  45746c:	mov    %r11d,0x20(%rsp)
  457471:	mov    %r8,0x18(%rsp)
  457476:	mov    %r10d,0x10(%rsp)
  45747b:	callq  414ae0 <__ctype_b_loc@plt>
  457480:	movzbl (%rbx),%edx
  457483:	mov    (%rax),%rax
  457486:	mov    0x10(%rsp),%r10d
  45748b:	mov    0x18(%rsp),%r8
  457490:	mov    0x20(%rsp),%r11d
  457495:	mov    0x28(%rsp),%r9
  45749a:	testb  $0x8,0x1(%rax,%rdx,2)
  45749f:	je     457146 <X509_get0_pubkey_bitstr@plt+0x40776>
  4574a5:	test   %r10d,%r10d
  4574a8:	jns    457146 <X509_get0_pubkey_bitstr@plt+0x40776>
  4574ae:	mov    0x8(%rsp),%rdx
  4574b3:	lea    0x1258d(%rip),%rsi        # 469a47 <_fini+0xc543>
  4574ba:	xor    %eax,%eax
  4574bc:	mov    %rbx,%rdi
  4574bf:	mov    %r9,0x20(%rsp)
  4574c4:	mov    %r11d,0x18(%rsp)
  4574c9:	mov    %r8,0x10(%rsp)
  4574ce:	callq  4147b0 <__isoc99_sscanf@plt>
  4574d3:	test   %eax,%eax
  4574d5:	mov    0x3c(%rsp),%r10d
  4574da:	mov    0x10(%rsp),%r8
  4574df:	mov    0x18(%rsp),%r11d
  4574e4:	mov    0x20(%rsp),%r9
  4574e9:	je     457146 <X509_get0_pubkey_bitstr@plt+0x40776>
  4574ef:	test   %r10d,%r10d
  4574f2:	js     457146 <X509_get0_pubkey_bitstr@plt+0x40776>
  4574f8:	mov    %ebp,%edx
  4574fa:	jmpq   457101 <X509_get0_pubkey_bitstr@plt+0x40731>
  4574ff:	nop
  457500:	mov    %ebp,%edx
  457502:	mov    %r13,%rsi
  457505:	mov    %r15,%rdi
  457508:	callq  412db0 <BIO_write@plt>
  45750d:	mov    0x3c(%rsp),%eax
  457511:	sub    %ebp,%eax
  457513:	test   %eax,%eax
  457515:	mov    %eax,0x3c(%rsp)
  457519:	jg     457220 <X509_get0_pubkey_bitstr@plt+0x40850>
  45751f:	jmpq   45727d <X509_get0_pubkey_bitstr@plt+0x408ad>
  457524:	mov    $0x1,%ebx
  457529:	jmpq   4572a6 <X509_get0_pubkey_bitstr@plt+0x408d6>
  45752e:	xchg   %ax,%ax
  457530:	callq  415060 <BIO_f_base64@plt>
  457535:	mov    %rax,%rdi
  457538:	callq  414a20 <BIO_new@plt>
  45753d:	test   %rax,%rax
  457540:	jne    457597 <X509_get0_pubkey_bitstr@plt+0x40bc7>
  457542:	mov    (%r12),%rdi
  457546:	mov    $0x1,%ebx
  45754b:	callq  413f40 <ERR_print_errors@plt>
  457550:	jmpq   4572b8 <X509_get0_pubkey_bitstr@plt+0x408e8>
  457555:	callq  4152b0 <BIO_s_file@plt>
  45755a:	mov    %rax,%rdi
  45755d:	nopl   (%rax)
  457560:	callq  414a20 <BIO_new@plt>
  457565:	test   %rax,%rax
  457568:	mov    %rax,%rdi
  45756b:	mov    %rax,(%r12)
  45756f:	je     4570d2 <X509_get0_pubkey_bitstr@plt+0x40702>
  457575:	mov    0x21ea04(%rip),%rax        # 675f80 <_fini+0x218a7c>
  45757c:	mov    $0x10,%edx
  457581:	mov    $0x6a,%esi
  457586:	mov    (%rax),%rcx
  457589:	callq  412af0 <BIO_ctrl@plt>
  45758e:	mov    (%r12),%rdi
  457592:	jmpq   4570d2 <X509_get0_pubkey_bitstr@plt+0x40702>
  457597:	mov    %r15,%rsi
  45759a:	mov    %rax,%rdi
  45759d:	callq  415ac0 <BIO_push@plt>
  4575a2:	mov    %rax,%r15
  4575a5:	jmpq   457209 <X509_get0_pubkey_bitstr@plt+0x40839>
  4575aa:	mov    0x21e907(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  4575b1:	mov    $0x10,%edx
  4575b6:	mov    $0x6a,%esi
  4575bb:	mov    %r15,%rdi
  4575be:	mov    (%rax),%rcx
  4575c1:	callq  412af0 <BIO_ctrl@plt>
  4575c6:	jmpq   4571f9 <X509_get0_pubkey_bitstr@plt+0x40829>
  4575cb:	lea    0xd5cd(%rip),%rsi        # 464b9f <_fini+0x769b>
  4575d2:	mov    %r15,%rdi
  4575d5:	callq  413b70 <BIO_puts@plt>
  4575da:	jmpq   457288 <X509_get0_pubkey_bitstr@plt+0x408b8>
  4575df:	callq  414c30 <__stack_chk_fail@plt>
  4575e4:	nopw   %cs:0x0(%rax,%rax,1)
  4575ee:	xchg   %ax,%ax
  4575f0:	repz retq 
  4575f2:	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  457600:	push   %r15
  457602:	push   %r14
  457604:	push   %r13
  457606:	mov    %rdx,%r13
  457609:	push   %r12
  45760b:	push   %rbp
  45760c:	push   %rbx
  45760d:	sub    $0x138,%rsp
  457614:	mov    %rdi,0x18(%rsp)
  457619:	mov    %rsi,%rdi
  45761c:	mov    %rsi,0x8(%rsp)
  457621:	mov    %fs:0x28,%rax
  45762a:	mov    %rax,0x128(%rsp)
  457632:	xor    %eax,%eax
  457634:	callq  4156d0 <sk_num@plt>
  457639:	test   %eax,%eax
  45763b:	mov    %eax,0x14(%rsp)
  45763f:	js     457773 <X509_get0_pubkey_bitstr@plt+0x40da3>
  457645:	mov    $0x0,%ebp
  45764a:	je     457719 <X509_get0_pubkey_bitstr@plt+0x40d49>
  457650:	lea    0x20(%rsp),%r12
  457655:	jmp    457689 <X509_get0_pubkey_bitstr@plt+0x40cb9>
  457657:	nopw   0x0(%rax,%rax,1)
  457660:	lea    0x17d38(%rip),%rsi        # 46f39f <_fini+0x11e9b>
  457667:	mov    %rbx,%rdx
  45766a:	mov    %r13,%rdi
  45766d:	xor    %eax,%eax
  45766f:	add    $0x1,%ebp
  457672:	callq  413c40 <BIO_printf@plt>
  457677:	mov    %r13,%rdi
  45767a:	callq  413f40 <ERR_print_errors@plt>
  45767f:	cmp    0x14(%rsp),%ebp
  457683:	je     457719 <X509_get0_pubkey_bitstr@plt+0x40d49>
  457689:	mov    0x8(%rsp),%rdi
  45768e:	mov    %ebp,%esi
  457690:	callq  412b30 <sk_value@plt>
  457695:	mov    $0x3a,%esi
  45769a:	mov    %rax,%rdi
  45769d:	mov    %rax,%rbx
  4576a0:	callq  413220 <strchr@plt>
  4576a5:	test   %rax,%rax
  4576a8:	mov    %rax,%r15
  4576ab:	je     457740 <X509_get0_pubkey_bitstr@plt+0x40d70>
  4576b1:	mov    %rax,%r14
  4576b4:	sub    %rbx,%r14
  4576b7:	cmp    $0xfe,%r14d
  4576be:	jg     457760 <X509_get0_pubkey_bitstr@plt+0x40d90>
  4576c4:	movslq %r14d,%rdx
  4576c7:	mov    $0x100,%ecx
  4576cc:	mov    %rbx,%rsi
  4576cf:	mov    %r12,%rdi
  4576d2:	callq  416010 <__memcpy_chk@plt>
  4576d7:	mov    0x18(%rsp),%rdi
  4576dc:	lea    0x1(%r15),%rdx
  4576e0:	xor    %ecx,%ecx
  4576e2:	mov    %r12,%rsi
  4576e5:	movb   $0x0,0x20(%rsp,%r14,1)
  4576eb:	callq  413540 <ENGINE_ctrl_cmd_string@plt>
  4576f0:	test   %eax,%eax
  4576f2:	je     457660 <X509_get0_pubkey_bitstr@plt+0x40c90>
  4576f8:	lea    0x17c91(%rip),%rsi        # 46f390 <_fini+0x11e8c>
  4576ff:	xor    %eax,%eax
  457701:	mov    %rbx,%rdx
  457704:	mov    %r13,%rdi
  457707:	add    $0x1,%ebp
  45770a:	callq  413c40 <BIO_printf@plt>
  45770f:	cmp    0x14(%rsp),%ebp
  457713:	jne    457689 <X509_get0_pubkey_bitstr@plt+0x40cb9>
  457719:	mov    0x128(%rsp),%rax
  457721:	xor    %fs:0x28,%rax
  45772a:	jne    457786 <X509_get0_pubkey_bitstr@plt+0x40db6>
  45772c:	add    $0x138,%rsp
  457733:	pop    %rbx
  457734:	pop    %rbp
  457735:	pop    %r12
  457737:	pop    %r13
  457739:	pop    %r14
  45773b:	pop    %r15
  45773d:	retq   
  45773e:	xchg   %ax,%ax
  457740:	mov    0x18(%rsp),%rdi
  457745:	xor    %ecx,%ecx
  457747:	xor    %edx,%edx
  457749:	mov    %rbx,%rsi
  45774c:	callq  413540 <ENGINE_ctrl_cmd_string@plt>
  457751:	test   %eax,%eax
  457753:	je     457660 <X509_get0_pubkey_bitstr@plt+0x40c90>
  457759:	jmp    4576f8 <X509_get0_pubkey_bitstr@plt+0x40d28>
  45775b:	nopl   0x0(%rax,%rax,1)
  457760:	lea    0x177f9(%rip),%rsi        # 46ef60 <_fini+0x11a5c>
  457767:	mov    %r13,%rdi
  45776a:	xor    %eax,%eax
  45776c:	callq  413c40 <BIO_printf@plt>
  457771:	jmp    457719 <X509_get0_pubkey_bitstr@plt+0x40d49>
  457773:	lea    0x177c6(%rip),%rsi        # 46ef40 <_fini+0x11a3c>
  45777a:	mov    %r13,%rdi
  45777d:	xor    %eax,%eax
  45777f:	callq  413c40 <BIO_printf@plt>
  457784:	jmp    457719 <X509_get0_pubkey_bitstr@plt+0x40d49>
  457786:	callq  414c30 <__stack_chk_fail@plt>
  45778b:	nopl   0x0(%rax,%rax,1)
  457790:	push   %r14
  457792:	push   %r13
  457794:	mov    %rdi,%r13
  457797:	push   %r12
  457799:	mov    %rsi,%r12
  45779c:	push   %rbp
  45779d:	mov    %rdx,%rbp
  4577a0:	push   %rbx
  4577a1:	mov    (%rdi),%rbx
  4577a4:	test   %rbx,%rbx
  4577a7:	je     457850 <X509_get0_pubkey_bitstr@plt+0x40e80>
  4577ad:	mov    %rbx,%rdi
  4577b0:	callq  413470 <strlen@plt>
  4577b5:	mov    %r12,%rdi
  4577b8:	mov    %rax,%r14
  4577bb:	callq  413470 <strlen@plt>
  4577c0:	mov    0x0(%rbp),%esi
  4577c3:	add    %rax,%r14
  4577c6:	mov    %esi,%edx
  4577c8:	cmp    %rdx,%r14
  4577cb:	jae    4577f8 <X509_get0_pubkey_bitstr@plt+0x40e28>
  4577cd:	test   %rbx,%rbx
  4577d0:	je     457821 <X509_get0_pubkey_bitstr@plt+0x40e51>
  4577d2:	cmpb   $0x0,(%rbx)
  4577d5:	jne    457830 <X509_get0_pubkey_bitstr@plt+0x40e60>
  4577d7:	movslq 0x0(%rbp),%rdx
  4577db:	mov    %r12,%rsi
  4577de:	mov    %rbx,%rdi
  4577e1:	callq  414b30 <BUF_strlcat@plt>
  4577e6:	pop    %rbx
  4577e7:	pop    %rbp
  4577e8:	pop    %r12
  4577ea:	pop    %r13
  4577ec:	mov    $0x1,%eax
  4577f1:	pop    %r14
  4577f3:	retq   
  4577f4:	nopl   0x0(%rax)
  4577f8:	add    $0x100,%esi
  4577fe:	lea    0x17ba9(%rip),%rdx        # 46f3ae <_fini+0x11eaa>
  457805:	mov    %rbx,%rdi
  457808:	mov    %esi,0x0(%rbp)
  45780b:	mov    $0x77,%ecx
  457810:	callq  4143c0 <CRYPTO_realloc@plt>
  457815:	mov    %rax,%rbx
  457818:	mov    %rax,0x0(%r13)
  45781c:	test   %rbx,%rbx
  45781f:	jne    4577d2 <X509_get0_pubkey_bitstr@plt+0x40e02>
  457821:	pop    %rbx
  457822:	pop    %rbp
  457823:	pop    %r12
  457825:	pop    %r13
  457827:	xor    %eax,%eax
  457829:	pop    %r14
  45782b:	retq   
  45782c:	nopl   0x0(%rax)
  457830:	movslq 0x0(%rbp),%rdx
  457834:	lea    0x10a15(%rip),%rsi        # 468250 <_fini+0xad4c>
  45783b:	mov    %rbx,%rdi
  45783e:	callq  414b30 <BUF_strlcat@plt>
  457843:	mov    0x0(%r13),%rbx
  457847:	jmp    4577d7 <X509_get0_pubkey_bitstr@plt+0x40e07>
  457849:	nopl   0x0(%rax)
  457850:	lea    0x17b57(%rip),%rsi        # 46f3ae <_fini+0x11eaa>
  457857:	movl   $0x100,(%rdx)
  45785d:	mov    $0x100,%edi
  457862:	mov    $0x6b,%edx
  457867:	callq  413d50 <CRYPTO_malloc@plt>
  45786c:	test   %rax,%rax
  45786f:	mov    %rax,0x0(%r13)
  457873:	je     457821 <X509_get0_pubkey_bitstr@plt+0x40e51>
  457875:	movb   $0x0,(%rax)
  457878:	mov    0x0(%r13),%rbx
  45787c:	jmpq   4577ad <X509_get0_pubkey_bitstr@plt+0x40ddd>
  457881:	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  457890:	push   %r15
  457892:	push   %r14
  457894:	push   %r13
  457896:	push   %r12
  457898:	push   %rbp
  457899:	mov    %edi,%ebp
  45789b:	push   %rbx
  45789c:	mov    %rsi,%rbx
  45789f:	sub    $0x88,%rsp
  4578a6:	mov    %fs:0x28,%rax
  4578af:	mov    %rax,0x78(%rsp)
  4578b4:	xor    %eax,%eax
  4578b6:	callq  412cd0 <sk_new_null@plt>
  4578bb:	mov    %rax,(%rsp)
  4578bf:	callq  412cd0 <sk_new_null@plt>
  4578c4:	mov    %rax,0x8(%rsp)
  4578c9:	callq  412cd0 <sk_new_null@plt>
  4578ce:	mov    $0xd,%edi
  4578d3:	mov    $0x1,%esi
  4578d8:	mov    %rax,0x10(%rsp)
  4578dd:	callq  414ee0 <signal@plt>
  4578e2:	callq  412f00 <SSL_load_error_strings@plt>
  4578e7:	lea    0x223452(%rip),%rax        # 67ad40 <_edata+0x38>
  4578ee:	mov    (%rax),%rdi
  4578f1:	test   %rdi,%rdi
  4578f4:	je     45804d <X509_get0_pubkey_bitstr@plt+0x4167d>
  4578fa:	xor    %esi,%esi
  4578fc:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  457901:	test   %eax,%eax
  457903:	jne    457973 <X509_get0_pubkey_bitstr@plt+0x40fa3>
  457905:	lea    0x223434(%rip),%rax        # 67ad40 <_edata+0x38>
  45790c:	mov    $0x1,%ebx
  457911:	mov    (%rax),%rdi
  457914:	callq  413f40 <ERR_print_errors@plt>
  457919:	mov    (%rsp),%rdi
  45791d:	lea    -0x334(%rip),%rsi        # 4575f0 <X509_get0_pubkey_bitstr@plt+0x40c20>
  457924:	callq  416250 <sk_pop_free@plt>
  457929:	mov    0x8(%rsp),%rdi
  45792e:	lea    -0x345(%rip),%rsi        # 4575f0 <X509_get0_pubkey_bitstr@plt+0x40c20>
  457935:	callq  416250 <sk_pop_free@plt>
  45793a:	mov    0x10(%rsp),%rdi
  45793f:	lea    -0x356(%rip),%rsi        # 4575f0 <X509_get0_pubkey_bitstr@plt+0x40c20>
  457946:	callq  416250 <sk_pop_free@plt>
  45794b:	mov    0x78(%rsp),%rdx
  457950:	xor    %fs:0x28,%rdx
  457959:	mov    %ebx,%eax
  45795b:	jne    45852e <X509_get0_pubkey_bitstr@plt+0x41b5e>
  457961:	add    $0x88,%rsp
  457968:	pop    %rbx
  457969:	pop    %rbp
  45796a:	pop    %r12
  45796c:	pop    %r13
  45796e:	pop    %r14
  457970:	pop    %r15
  457972:	retq   
  457973:	mov    0x21e53e(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  45797a:	lea    -0x1(%rbp),%r14d
  45797e:	xor    %esi,%esi
  457980:	lea    0x8(%rbx),%r15
  457984:	mov    (%rax),%rdi
  457987:	callq  4161e0 <BIO_new_fp@plt>
  45798c:	test   %r14d,%r14d
  45798f:	mov    %rax,0x28(%rsp)
  457994:	jle    4584f4 <X509_get0_pubkey_bitstr@plt+0x41b24>
  45799a:	mov    %r15,%rax
  45799d:	lea    0x17a24(%rip),%r12        # 46f3c8 <_fini+0x11ec4>
  4579a4:	mov    %r14d,%r15d
  4579a7:	xor    %r13d,%r13d
  4579aa:	movl   $0x0,0x1c(%rsp)
  4579b2:	movl   $0x0,0x18(%rsp)
  4579ba:	xor    %ebp,%ebp
  4579bc:	mov    $0x2,%ebx
  4579c1:	mov    %rax,%r14
  4579c4:	nopl   0x0(%rax)
  4579c8:	mov    (%r14),%rax
  4579cb:	mov    %r12,%rdi
  4579ce:	mov    %rbx,%rcx
  4579d1:	mov    %rax,%rsi
  4579d4:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4579d6:	jne    457b48 <X509_get0_pubkey_bitstr@plt+0x41178>
  4579dc:	xor    %ebp,%ebp
  4579de:	cmpb   $0x76,0x1(%rax)
  4579e2:	lea    0x1(%rax),%rdi
  4579e6:	jne    4579fb <X509_get0_pubkey_bitstr@plt+0x4102b>
  4579e8:	nopl   0x0(%rax,%rax,1)
  4579f0:	add    $0x1,%rbp
  4579f4:	cmpb   $0x76,0x1(%rax,%rbp,1)
  4579f9:	je     4579f0 <X509_get0_pubkey_bitstr@plt+0x41020>
  4579fb:	callq  413470 <strlen@plt>
  457a00:	cmp    %rbp,%rax
  457a03:	ja     457c52 <X509_get0_pubkey_bitstr@plt+0x41282>
  457a09:	cmp    $0x4,%eax
  457a0c:	mov    %eax,%ebp
  457a0e:	jg     457c52 <X509_get0_pubkey_bitstr@plt+0x41282>
  457a14:	sub    $0x1,%r15d
  457a18:	add    $0x8,%r14
  457a1c:	test   %r15d,%r15d
  457a1f:	jg     4579c8 <X509_get0_pubkey_bitstr@plt+0x40ff8>
  457a21:	mov    %r13d,0x44(%rsp)
  457a26:	mov    (%rsp),%rdi
  457a2a:	callq  4156d0 <sk_num@plt>
  457a2f:	test   %eax,%eax
  457a31:	je     458336 <X509_get0_pubkey_bitstr@plt+0x41966>
  457a37:	mov    (%rsp),%rdi
  457a3b:	lea    0x70(%rsp),%rax
  457a40:	movl   $0x0,0x20(%rsp)
  457a48:	mov    %ebp,0x30(%rsp)
  457a4c:	mov    0x28(%rsp),%r13
  457a51:	lea    0x64(%rsp),%r15
  457a56:	mov    %rax,0x38(%rsp)
  457a5b:	lea    0x68(%rsp),%r14
  457a60:	callq  4156d0 <sk_num@plt>
  457a65:	cmp    %eax,0x20(%rsp)
  457a69:	jge    457b3d <X509_get0_pubkey_bitstr@plt+0x4116d>
  457a6f:	mov    0x20(%rsp),%esi
  457a73:	mov    (%rsp),%rdi
  457a77:	callq  412b30 <sk_value@plt>
  457a7c:	mov    %rax,%rdi
  457a7f:	mov    %rax,%rbp
  457a82:	callq  4141e0 <ENGINE_by_id@plt>
  457a87:	test   %rax,%rax
  457a8a:	mov    %rax,%rbx
  457a8d:	je     458070 <X509_get0_pubkey_bitstr@plt+0x416a0>
  457a93:	mov    %rax,%rdi
  457a96:	callq  415210 <ENGINE_get_name@plt>
  457a9b:	lea    0x1793f(%rip),%rsi        # 46f3e1 <_fini+0x11edd>
  457aa2:	mov    %rax,%rcx
  457aa5:	mov    %rbp,%rdx
  457aa8:	mov    %r13,%rdi
  457aab:	xor    %eax,%eax
  457aad:	callq  413c40 <BIO_printf@plt>
  457ab2:	mov    0x8(%rsp),%rsi
  457ab7:	mov    %r13,%rdx
  457aba:	mov    %rbx,%rdi
  457abd:	callq  457600 <X509_get0_pubkey_bitstr@plt+0x40c30>
  457ac2:	mov    %rbx,%rdi
  457ac5:	callq  4130f0 <ENGINE_get_id@plt>
  457aca:	mov    %rbp,%rsi
  457acd:	mov    %rax,%rdi
  457ad0:	callq  4155c0 <strcmp@plt>
  457ad5:	test   %eax,%eax
  457ad7:	jne    457e32 <X509_get0_pubkey_bitstr@plt+0x41462>
  457add:	mov    0x18(%rsp),%r10d
  457ae2:	test   %r10d,%r10d
  457ae5:	jne    457d15 <X509_get0_pubkey_bitstr@plt+0x41345>
  457aeb:	mov    0x1c(%rsp),%r9d
  457af0:	test   %r9d,%r9d
  457af3:	jne    457ffc <X509_get0_pubkey_bitstr@plt+0x4162c>
  457af9:	mov    0x30(%rsp),%edi
  457afd:	test   %edi,%edi
  457aff:	jle    457b1d <X509_get0_pubkey_bitstr@plt+0x4114d>
  457b01:	xor    %r8d,%r8d
  457b04:	xor    %ecx,%ecx
  457b06:	xor    %edx,%edx
  457b08:	mov    $0xa,%esi
  457b0d:	mov    %rbx,%rdi
  457b10:	callq  4168c0 <ENGINE_ctrl@plt>
  457b15:	test   %eax,%eax
  457b17:	jne    457e61 <X509_get0_pubkey_bitstr@plt+0x41491>
  457b1d:	mov    %rbx,%rdi
  457b20:	callq  413360 <ENGINE_free@plt>
  457b25:	mov    (%rsp),%rdi
  457b29:	addl   $0x1,0x20(%rsp)
  457b2e:	callq  4156d0 <sk_num@plt>
  457b33:	cmp    %eax,0x20(%rsp)
  457b37:	jl     457a6f <X509_get0_pubkey_bitstr@plt+0x4109f>
  457b3d:	xor    %ebx,%ebx
  457b3f:	jmpq   457c91 <X509_get0_pubkey_bitstr@plt+0x412c1>
  457b44:	nopl   0x0(%rax)
  457b48:	movzbl (%rax),%ecx
  457b4b:	sub    $0x2d,%ecx
  457b4e:	mov    %ecx,%r10d
  457b51:	jne    457b70 <X509_get0_pubkey_bitstr@plt+0x411a0>
  457b53:	cmpb   $0x63,0x1(%rax)
  457b57:	jne    457b70 <X509_get0_pubkey_bitstr@plt+0x411a0>
  457b59:	cmpb   $0x0,0x2(%rax)
  457b5d:	jne    457b70 <X509_get0_pubkey_bitstr@plt+0x411a0>
  457b5f:	movl   $0x1,0x18(%rsp)
  457b67:	jmpq   457a14 <X509_get0_pubkey_bitstr@plt+0x41044>
  457b6c:	nopl   0x0(%rax)
  457b70:	lea    0x17854(%rip),%rdi        # 46f3cb <_fini+0x11ec7>
  457b77:	mov    %rax,%rsi
  457b7a:	mov    %rbx,%rcx
  457b7d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  457b7f:	jne    457bc8 <X509_get0_pubkey_bitstr@plt+0x411f8>
  457b81:	xor    %r13d,%r13d
  457b84:	cmpb   $0x74,0x1(%rax)
  457b88:	lea    0x1(%rax),%rdi
  457b8c:	jne    457b9c <X509_get0_pubkey_bitstr@plt+0x411cc>
  457b8e:	xchg   %ax,%ax
  457b90:	add    $0x1,%r13
  457b94:	cmpb   $0x74,0x1(%rax,%r13,1)
  457b9a:	je     457b90 <X509_get0_pubkey_bitstr@plt+0x411c0>
  457b9c:	callq  413470 <strlen@plt>
  457ba1:	cmp    %r13,%rax
  457ba4:	ja     457c52 <X509_get0_pubkey_bitstr@plt+0x41282>
  457baa:	lea    -0x1(%rax),%r13d
  457bae:	cmp    $0x1,%r13d
  457bb2:	jg     457c52 <X509_get0_pubkey_bitstr@plt+0x41282>
  457bb8:	movl   $0x1,0x1c(%rsp)
  457bc0:	jmpq   457a14 <X509_get0_pubkey_bitstr@plt+0x41044>
  457bc5:	nopl   (%rax)
  457bc8:	lea    0x177ff(%rip),%rdi        # 46f3ce <_fini+0x11eca>
  457bcf:	mov    $0x5,%ecx
  457bd4:	mov    %rax,%rsi
  457bd7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  457bd9:	jne    457c08 <X509_get0_pubkey_bitstr@plt+0x41238>
  457bdb:	lea    0x8(%r14),%rax
  457bdf:	sub    $0x1,%r15d
  457be3:	mov    %rax,0x20(%rsp)
  457be8:	je     457c52 <X509_get0_pubkey_bitstr@plt+0x41282>
  457bea:	mov    0x8(%r14),%rsi
  457bee:	mov    0x8(%rsp),%rdi
  457bf3:	callq  412fe0 <sk_push@plt>
  457bf8:	mov    0x20(%rsp),%r14
  457bfd:	jmpq   457a14 <X509_get0_pubkey_bitstr@plt+0x41044>
  457c02:	nopw   0x0(%rax,%rax,1)
  457c08:	lea    0x177c4(%rip),%rdi        # 46f3d3 <_fini+0x11ecf>
  457c0f:	mov    $0x6,%ecx
  457c14:	mov    %rax,%rsi
  457c17:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  457c19:	je     457cea <X509_get0_pubkey_bitstr@plt+0x4131a>
  457c1f:	lea    0x14871(%rip),%rdi        # 46c497 <_fini+0xef93>
  457c26:	mov    %rax,%rsi
  457c29:	mov    %rbx,%rcx
  457c2c:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  457c2e:	je     457c52 <X509_get0_pubkey_bitstr@plt+0x41282>
  457c30:	test   %r10d,%r10d
  457c33:	jne    457c41 <X509_get0_pubkey_bitstr@plt+0x41271>
  457c35:	cmpb   $0x3f,0x1(%rax)
  457c39:	jne    457c41 <X509_get0_pubkey_bitstr@plt+0x41271>
  457c3b:	cmpb   $0x0,0x2(%rax)
  457c3f:	je     457c52 <X509_get0_pubkey_bitstr@plt+0x41282>
  457c41:	mov    (%rsp),%rdi
  457c45:	mov    %rax,%rsi
  457c48:	callq  412fe0 <sk_push@plt>
  457c4d:	jmpq   457a14 <X509_get0_pubkey_bitstr@plt+0x41044>
  457c52:	mov    0x223027(%rip),%rdx        # 67ac80 <_fini+0x21d77c>
  457c59:	lea    0x223020(%rip),%rbx        # 67ac80 <_fini+0x21d77c>
  457c60:	test   %rdx,%rdx
  457c63:	je     457c8c <X509_get0_pubkey_bitstr@plt+0x412bc>
  457c65:	nopl   (%rax)
  457c68:	lea    0x2230d1(%rip),%rax        # 67ad40 <_edata+0x38>
  457c6f:	lea    0x12eee(%rip),%rsi        # 46ab64 <_fini+0xd660>
  457c76:	add    $0x8,%rbx
  457c7a:	mov    (%rax),%rdi
  457c7d:	xor    %eax,%eax
  457c7f:	callq  413c40 <BIO_printf@plt>
  457c84:	mov    (%rbx),%rdx
  457c87:	test   %rdx,%rdx
  457c8a:	jne    457c68 <X509_get0_pubkey_bitstr@plt+0x41298>
  457c8c:	mov    $0x1,%ebx
  457c91:	lea    0x2230a8(%rip),%rax        # 67ad40 <_edata+0x38>
  457c98:	mov    (%rax),%rdi
  457c9b:	callq  413f40 <ERR_print_errors@plt>
  457ca0:	mov    (%rsp),%rdi
  457ca4:	lea    -0x6bb(%rip),%rsi        # 4575f0 <X509_get0_pubkey_bitstr@plt+0x40c20>
  457cab:	callq  416250 <sk_pop_free@plt>
  457cb0:	mov    0x8(%rsp),%rdi
  457cb5:	lea    -0x6cc(%rip),%rsi        # 4575f0 <X509_get0_pubkey_bitstr@plt+0x40c20>
  457cbc:	callq  416250 <sk_pop_free@plt>
  457cc1:	mov    0x10(%rsp),%rdi
  457cc6:	lea    -0x6dd(%rip),%rsi        # 4575f0 <X509_get0_pubkey_bitstr@plt+0x40c20>
  457ccd:	callq  416250 <sk_pop_free@plt>
  457cd2:	mov    0x28(%rsp),%rdi
  457cd7:	test   %rdi,%rdi
  457cda:	je     45794b <X509_get0_pubkey_bitstr@plt+0x40f7b>
  457ce0:	callq  416570 <BIO_free_all@plt>
  457ce5:	jmpq   45794b <X509_get0_pubkey_bitstr@plt+0x40f7b>
  457cea:	lea    0x8(%r14),%rax
  457cee:	sub    $0x1,%r15d
  457cf2:	mov    %rax,0x20(%rsp)
  457cf7:	je     457c52 <X509_get0_pubkey_bitstr@plt+0x41282>
  457cfd:	mov    0x8(%r14),%rsi
  457d01:	mov    0x10(%rsp),%rdi
  457d06:	callq  412fe0 <sk_push@plt>
  457d0b:	mov    0x20(%rsp),%r14
  457d10:	jmpq   457a14 <X509_get0_pubkey_bitstr@plt+0x41044>
  457d15:	mov    %rbx,%rdi
  457d18:	movl   $0x100,0x64(%rsp)
  457d20:	movq   $0x0,0x68(%rsp)
  457d29:	callq  413090 <ENGINE_get_RSA@plt>
  457d2e:	test   %rax,%rax
  457d31:	je     457d4d <X509_get0_pubkey_bitstr@plt+0x4137d>
  457d33:	lea    0x176b0(%rip),%rsi        # 46f3ea <_fini+0x11ee6>
  457d3a:	mov    %r15,%rdx
  457d3d:	mov    %r14,%rdi
  457d40:	callq  457790 <X509_get0_pubkey_bitstr@plt+0x40dc0>
  457d45:	test   %eax,%eax
  457d47:	je     457c8c <X509_get0_pubkey_bitstr@plt+0x412bc>
  457d4d:	mov    %rbx,%rdi
  457d50:	callq  413600 <ENGINE_get_DSA@plt>
  457d55:	test   %rax,%rax
  457d58:	je     457d74 <X509_get0_pubkey_bitstr@plt+0x413a4>
  457d5a:	lea    0x1768d(%rip),%rsi        # 46f3ee <_fini+0x11eea>
  457d61:	mov    %r15,%rdx
  457d64:	mov    %r14,%rdi
  457d67:	callq  457790 <X509_get0_pubkey_bitstr@plt+0x40dc0>
  457d6c:	test   %eax,%eax
  457d6e:	je     457c8c <X509_get0_pubkey_bitstr@plt+0x412bc>
  457d74:	mov    %rbx,%rdi
  457d77:	callq  414e50 <ENGINE_get_DH@plt>
  457d7c:	test   %rax,%rax
  457d7f:	je     457d9b <X509_get0_pubkey_bitstr@plt+0x413cb>
  457d81:	lea    0x1766a(%rip),%rsi        # 46f3f2 <_fini+0x11eee>
  457d88:	mov    %r15,%rdx
  457d8b:	mov    %r14,%rdi
  457d8e:	callq  457790 <X509_get0_pubkey_bitstr@plt+0x40dc0>
  457d93:	test   %eax,%eax
  457d95:	je     457c8c <X509_get0_pubkey_bitstr@plt+0x412bc>
  457d9b:	mov    %rbx,%rdi
  457d9e:	callq  416550 <ENGINE_get_RAND@plt>
  457da3:	test   %rax,%rax
  457da6:	je     457dc2 <X509_get0_pubkey_bitstr@plt+0x413f2>
  457da8:	lea    0x17646(%rip),%rsi        # 46f3f5 <_fini+0x11ef1>
  457daf:	mov    %r15,%rdx
  457db2:	mov    %r14,%rdi
  457db5:	callq  457790 <X509_get0_pubkey_bitstr@plt+0x40dc0>
  457dba:	test   %eax,%eax
  457dbc:	je     457c8c <X509_get0_pubkey_bitstr@plt+0x412bc>
  457dc2:	mov    %rbx,%rdi
  457dc5:	callq  414800 <ENGINE_get_ciphers@plt>
  457dca:	test   %rax,%rax
  457dcd:	je     458084 <X509_get0_pubkey_bitstr@plt+0x416b4>
  457dd3:	xor    %ecx,%ecx
  457dd5:	xor    %esi,%esi
  457dd7:	mov    0x38(%rsp),%rdx
  457ddc:	mov    %rbx,%rdi
  457ddf:	callq  *%rax
  457de1:	test   %eax,%eax
  457de3:	jle    458084 <X509_get0_pubkey_bitstr@plt+0x416b4>
  457de9:	sub    $0x1,%eax
  457dec:	xor    %r12d,%r12d
  457def:	lea    0x4(,%rax,4),%rbp
  457df7:	jmp    457e0d <X509_get0_pubkey_bitstr@plt+0x4143d>
  457df9:	nopl   0x0(%rax)
  457e00:	add    $0x4,%r12
  457e04:	cmp    %rbp,%r12
  457e07:	je     458084 <X509_get0_pubkey_bitstr@plt+0x416b4>
  457e0d:	mov    0x70(%rsp),%rax
  457e12:	mov    (%rax,%r12,1),%edi
  457e16:	callq  415b30 <OBJ_nid2sn@plt>
  457e1b:	mov    %r15,%rdx
  457e1e:	mov    %rax,%rsi
  457e21:	mov    %r14,%rdi
  457e24:	callq  457790 <X509_get0_pubkey_bitstr@plt+0x40dc0>
  457e29:	test   %eax,%eax
  457e2b:	jne    457e00 <X509_get0_pubkey_bitstr@plt+0x41430>
  457e2d:	jmpq   457c8c <X509_get0_pubkey_bitstr@plt+0x412bc>
  457e32:	mov    %rbx,%rdi
  457e35:	callq  415210 <ENGINE_get_name@plt>
  457e3a:	mov    %rbx,%rdi
  457e3d:	mov    %rax,%rbp
  457e40:	callq  4130f0 <ENGINE_get_id@plt>
  457e45:	lea    0x1758d(%rip),%rsi        # 46f3d9 <_fini+0x11ed5>
  457e4c:	mov    %rax,%rdx
  457e4f:	mov    %rbp,%rcx
  457e52:	mov    %r13,%rdi
  457e55:	xor    %eax,%eax
  457e57:	callq  413c40 <BIO_printf@plt>
  457e5c:	jmpq   457add <X509_get0_pubkey_bitstr@plt+0x4110d>
  457e61:	xor    %r8d,%r8d
  457e64:	xor    %ecx,%ecx
  457e66:	xor    %edx,%edx
  457e68:	mov    $0xb,%esi
  457e6d:	mov    %rbx,%rdi
  457e70:	callq  4168c0 <ENGINE_ctrl@plt>
  457e75:	test   %eax,%eax
  457e77:	mov    %eax,%r12d
  457e7a:	jle    457b1d <X509_get0_pubkey_bitstr@plt+0x4114d>
  457e80:	callq  412cd0 <sk_new_null@plt>
  457e85:	test   %rax,%rax
  457e88:	mov    %rax,0x48(%rsp)
  457e8d:	je     457c8c <X509_get0_pubkey_bitstr@plt+0x412bc>
  457e93:	movl   $0x0,0x34(%rsp)
  457e9b:	mov    %r12d,%eax
  457e9e:	mov    %r15,0x50(%rsp)
  457ea3:	mov    %r14,0x58(%rsp)
  457ea8:	jmp    457ece <X509_get0_pubkey_bitstr@plt+0x414fe>
  457eaa:	xor    %edi,%edi
  457eac:	callq  415020 <CRYPTO_free@plt>
  457eb1:	xor    %r8d,%r8d
  457eb4:	xor    %ecx,%ecx
  457eb6:	mov    %r12,%rdx
  457eb9:	mov    $0xc,%esi
  457ebe:	mov    %rbx,%rdi
  457ec1:	callq  4168c0 <ENGINE_ctrl@plt>
  457ec6:	test   %eax,%eax
  457ec8:	jle    4584c3 <X509_get0_pubkey_bitstr@plt+0x41af3>
  457ece:	movslq %eax,%r12
  457ed1:	xor    %r8d,%r8d
  457ed4:	xor    %ecx,%ecx
  457ed6:	mov    %r12,%rdx
  457ed9:	mov    $0x12,%esi
  457ede:	mov    %rbx,%rdi
  457ee1:	callq  4168c0 <ENGINE_ctrl@plt>
  457ee6:	test   %eax,%eax
  457ee8:	mov    %eax,%ebp
  457eea:	js     4583cd <X509_get0_pubkey_bitstr@plt+0x419fd>
  457ef0:	and    $0x8,%eax
  457ef3:	mov    %eax,0x40(%rsp)
  457ef7:	je     457f00 <X509_get0_pubkey_bitstr@plt+0x41530>
  457ef9:	cmpl   $0x3,0x30(%rsp)
  457efe:	jle    457eaa <X509_get0_pubkey_bitstr@plt+0x414da>
  457f00:	xor    %r8d,%r8d
  457f03:	xor    %ecx,%ecx
  457f05:	mov    %r12,%rdx
  457f08:	mov    $0xe,%esi
  457f0d:	mov    %rbx,%rdi
  457f10:	callq  4168c0 <ENGINE_ctrl@plt>
  457f15:	test   %eax,%eax
  457f17:	jle    4583cd <X509_get0_pubkey_bitstr@plt+0x419fd>
  457f1d:	lea    0x1(%rax),%edi
  457f20:	lea    0x17487(%rip),%rsi        # 46f3ae <_fini+0x11eaa>
  457f27:	mov    $0xe6,%edx
  457f2c:	callq  413d50 <CRYPTO_malloc@plt>
  457f31:	test   %rax,%rax
  457f34:	mov    %rax,%r15
  457f37:	je     4583cd <X509_get0_pubkey_bitstr@plt+0x419fd>
  457f3d:	xor    %r8d,%r8d
  457f40:	mov    %rax,%rcx
  457f43:	mov    %r12,%rdx
  457f46:	mov    $0xf,%esi
  457f4b:	mov    %rbx,%rdi
  457f4e:	callq  4168c0 <ENGINE_ctrl@plt>
  457f53:	test   %eax,%eax
  457f55:	jle    4584bc <X509_get0_pubkey_bitstr@plt+0x41aec>
  457f5b:	xor    %r8d,%r8d
  457f5e:	xor    %ecx,%ecx
  457f60:	mov    %r12,%rdx
  457f63:	mov    $0x10,%esi
  457f68:	mov    %rbx,%rdi
  457f6b:	callq  4168c0 <ENGINE_ctrl@plt>
  457f70:	test   %eax,%eax
  457f72:	js     4584bc <X509_get0_pubkey_bitstr@plt+0x41aec>
  457f78:	jne    458190 <X509_get0_pubkey_bitstr@plt+0x417c0>
  457f7e:	xor    %r14d,%r14d
  457f81:	mov    0x34(%rsp),%esi
  457f85:	test   %esi,%esi
  457f87:	jne    4581fc <X509_get0_pubkey_bitstr@plt+0x4182c>
  457f8d:	lea    0x10310(%rip),%rsi        # 4682a4 <_fini+0xada0>
  457f94:	mov    %r13,%rdi
  457f97:	callq  413b70 <BIO_puts@plt>
  457f9c:	mov    %eax,%ecx
  457f9e:	cmpl   $0x1,0x30(%rsp)
  457fa3:	je     458218 <X509_get0_pubkey_bitstr@plt+0x41848>
  457fa9:	lea    0x17407(%rip),%rcx        # 46f3b7 <_fini+0x11eb3>
  457fb0:	test   %r14,%r14
  457fb3:	lea    0x17467(%rip),%rsi        # 46f421 <_fini+0x11f1d>
  457fba:	mov    %r15,%rdx
  457fbd:	mov    %r13,%rdi
  457fc0:	cmovne %r14,%rcx
  457fc4:	xor    %eax,%eax
  457fc6:	callq  413c40 <BIO_printf@plt>
  457fcb:	cmpl   $0x2,0x30(%rsp)
  457fd0:	movl   $0x0,0x34(%rsp)
  457fd8:	jne    45827d <X509_get0_pubkey_bitstr@plt+0x418ad>
  457fde:	mov    %r15,%rdi
  457fe1:	callq  415020 <CRYPTO_free@plt>
  457fe6:	test   %r14,%r14
  457fe9:	je     457eb1 <X509_get0_pubkey_bitstr@plt+0x414e1>
  457fef:	mov    %r14,%rdi
  457ff2:	callq  415020 <CRYPTO_free@plt>
  457ff7:	jmpq   457eb1 <X509_get0_pubkey_bitstr@plt+0x414e1>
  457ffc:	lea    0x102a1(%rip),%rdx        # 4682a4 <_fini+0xada0>
  458003:	lea    0x12b5a(%rip),%rsi        # 46ab64 <_fini+0xd660>
  45800a:	mov    %r13,%rdi
  45800d:	xor    %eax,%eax
  45800f:	callq  413c40 <BIO_printf@plt>
  458014:	mov    %rbx,%rdi
  458017:	callq  4138c0 <ENGINE_init@plt>
  45801c:	test   %eax,%eax
  45801e:	jne    4580ee <X509_get0_pubkey_bitstr@plt+0x4171e>
  458024:	lea    0x173e5(%rip),%rsi        # 46f410 <_fini+0x11f0c>
  45802b:	xor    %eax,%eax
  45802d:	mov    %r13,%rdi
  458030:	callq  413c40 <BIO_printf@plt>
  458035:	mov    0x44(%rsp),%r8d
  45803a:	test   %r8d,%r8d
  45803d:	jne    458474 <X509_get0_pubkey_bitstr@plt+0x41aa4>
  458043:	callq  412890 <ERR_clear_error@plt>
  458048:	jmpq   457af9 <X509_get0_pubkey_bitstr@plt+0x41129>
  45804d:	mov    0x21df2c(%rip),%rax        # 675f80 <_fini+0x218a7c>
  458054:	xor    %esi,%esi
  458056:	mov    (%rax),%rdi
  458059:	callq  4161e0 <BIO_new_fp@plt>
  45805e:	mov    %rax,%rdi
  458061:	lea    0x222cd8(%rip),%rax        # 67ad40 <_edata+0x38>
  458068:	mov    %rdi,(%rax)
  45806b:	jmpq   4578fa <X509_get0_pubkey_bitstr@plt+0x40f2a>
  458070:	lea    0x222cc9(%rip),%rax        # 67ad40 <_edata+0x38>
  458077:	mov    (%rax),%rdi
  45807a:	callq  413f40 <ERR_print_errors@plt>
  45807f:	jmpq   457b25 <X509_get0_pubkey_bitstr@plt+0x41155>
  458084:	mov    %rbx,%rdi
  458087:	callq  415080 <ENGINE_get_digests@plt>
  45808c:	test   %rax,%rax
  45808f:	nop
  458090:	je     45811c <X509_get0_pubkey_bitstr@plt+0x4174c>
  458096:	xor    %ecx,%ecx
  458098:	xor    %esi,%esi
  45809a:	mov    0x38(%rsp),%rdx
  45809f:	mov    %rbx,%rdi
  4580a2:	callq  *%rax
  4580a4:	test   %eax,%eax
  4580a6:	jle    45811c <X509_get0_pubkey_bitstr@plt+0x4174c>
  4580a8:	sub    $0x1,%eax
  4580ab:	xor    %r12d,%r12d
  4580ae:	lea    0x4(,%rax,4),%rbp
  4580b6:	jmp    4580c9 <X509_get0_pubkey_bitstr@plt+0x416f9>
  4580b8:	nopl   0x0(%rax,%rax,1)
  4580c0:	add    $0x4,%r12
  4580c4:	cmp    %rbp,%r12
  4580c7:	je     45811c <X509_get0_pubkey_bitstr@plt+0x4174c>
  4580c9:	mov    0x70(%rsp),%rax
  4580ce:	mov    (%rax,%r12,1),%edi
  4580d2:	callq  415b30 <OBJ_nid2sn@plt>
  4580d7:	mov    %r15,%rdx
  4580da:	mov    %rax,%rsi
  4580dd:	mov    %r14,%rdi
  4580e0:	callq  457790 <X509_get0_pubkey_bitstr@plt+0x40dc0>
  4580e5:	test   %eax,%eax
  4580e7:	jne    4580c0 <X509_get0_pubkey_bitstr@plt+0x416f0>
  4580e9:	jmpq   457c8c <X509_get0_pubkey_bitstr@plt+0x412bc>
  4580ee:	lea    0x1730c(%rip),%rsi        # 46f401 <_fini+0x11efd>
  4580f5:	mov    %r13,%rdi
  4580f8:	xor    %eax,%eax
  4580fa:	callq  413c40 <BIO_printf@plt>
  4580ff:	mov    0x10(%rsp),%rsi
  458104:	mov    %rbx,%rdi
  458107:	mov    %r13,%rdx
  45810a:	callq  457600 <X509_get0_pubkey_bitstr@plt+0x40c30>
  45810f:	mov    %rbx,%rdi
  458112:	callq  412e70 <ENGINE_finish@plt>
  458117:	jmpq   457af9 <X509_get0_pubkey_bitstr@plt+0x41129>
  45811c:	mov    %rbx,%rdi
  45811f:	callq  415b50 <ENGINE_get_pkey_meths@plt>
  458124:	test   %rax,%rax
  458127:	je     458373 <X509_get0_pubkey_bitstr@plt+0x419a3>
  45812d:	xor    %ecx,%ecx
  45812f:	xor    %esi,%esi
  458131:	mov    0x38(%rsp),%rdx
  458136:	mov    %rbx,%rdi
  458139:	callq  *%rax
  45813b:	test   %eax,%eax
  45813d:	jle    458373 <X509_get0_pubkey_bitstr@plt+0x419a3>
  458143:	sub    $0x1,%eax
  458146:	xor    %r12d,%r12d
  458149:	lea    0x4(,%rax,4),%rbp
  458151:	jmp    458165 <X509_get0_pubkey_bitstr@plt+0x41795>
  458153:	nopl   0x0(%rax,%rax,1)
  458158:	add    $0x4,%r12
  45815c:	cmp    %rbp,%r12
  45815f:	je     458373 <X509_get0_pubkey_bitstr@plt+0x419a3>
  458165:	mov    0x70(%rsp),%rax
  45816a:	mov    (%rax,%r12,1),%edi
  45816e:	callq  415b30 <OBJ_nid2sn@plt>
  458173:	mov    %r15,%rdx
  458176:	mov    %rax,%rsi
  458179:	mov    %r14,%rdi
  45817c:	callq  457790 <X509_get0_pubkey_bitstr@plt+0x40dc0>
  458181:	test   %eax,%eax
  458183:	jne    458158 <X509_get0_pubkey_bitstr@plt+0x41788>
  458185:	jmpq   457c8c <X509_get0_pubkey_bitstr@plt+0x412bc>
  45818a:	nopw   0x0(%rax,%rax,1)
  458190:	lea    0x1(%rax),%edi
  458193:	lea    0x17214(%rip),%rsi        # 46f3ae <_fini+0x11eaa>
  45819a:	mov    $0xf1,%edx
  45819f:	callq  413d50 <CRYPTO_malloc@plt>
  4581a4:	test   %rax,%rax
  4581a7:	mov    %rax,%r14
  4581aa:	je     4581ca <X509_get0_pubkey_bitstr@plt+0x417fa>
  4581ac:	xor    %r8d,%r8d
  4581af:	mov    %rax,%rcx
  4581b2:	mov    %r12,%rdx
  4581b5:	mov    $0x11,%esi
  4581ba:	mov    %rbx,%rdi
  4581bd:	callq  4168c0 <ENGINE_ctrl@plt>
  4581c2:	test   %eax,%eax
  4581c4:	jg     457f81 <X509_get0_pubkey_bitstr@plt+0x415b1>
  4581ca:	mov    %r14,%rbx
  4581cd:	mov    0x48(%rsp),%rdi
  4581d2:	lea    -0xbe9(%rip),%rsi        # 4575f0 <X509_get0_pubkey_bitstr@plt+0x40c20>
  4581d9:	callq  416250 <sk_pop_free@plt>
  4581de:	mov    %r15,%rdi
  4581e1:	callq  415020 <CRYPTO_free@plt>
  4581e6:	test   %rbx,%rbx
  4581e9:	je     457c8c <X509_get0_pubkey_bitstr@plt+0x412bc>
  4581ef:	mov    %rbx,%rdi
  4581f2:	callq  415020 <CRYPTO_free@plt>
  4581f7:	jmpq   457c8c <X509_get0_pubkey_bitstr@plt+0x412bc>
  4581fc:	lea    0x1004d(%rip),%rsi        # 468250 <_fini+0xad4c>
  458203:	mov    %r13,%rdi
  458206:	xor    %eax,%eax
  458208:	callq  413c40 <BIO_printf@plt>
  45820d:	mov    0x34(%rsp),%ecx
  458211:	add    %eax,%ecx
  458213:	jmpq   457f9e <X509_get0_pubkey_bitstr@plt+0x415ce>
  458218:	cmp    $0x5,%ecx
  45821b:	jle    458256 <X509_get0_pubkey_bitstr@plt+0x41886>
  45821d:	mov    %r15,%rdi
  458220:	mov    %ecx,0x34(%rsp)
  458224:	callq  413470 <strlen@plt>
  458229:	mov    0x34(%rsp),%ecx
  45822d:	add    %ecx,%eax
  45822f:	cmp    $0x4e,%eax
  458232:	jle    458256 <X509_get0_pubkey_bitstr@plt+0x41886>
  458234:	lea    0xc964(%rip),%rsi        # 464b9f <_fini+0x769b>
  45823b:	mov    %r13,%rdi
  45823e:	xor    %eax,%eax
  458240:	callq  413c40 <BIO_printf@plt>
  458245:	lea    0x10058(%rip),%rsi        # 4682a4 <_fini+0xada0>
  45824c:	mov    %r13,%rdi
  45824f:	callq  413b70 <BIO_puts@plt>
  458254:	mov    %eax,%ecx
  458256:	lea    0x12907(%rip),%rsi        # 46ab64 <_fini+0xd660>
  45825d:	mov    %r15,%rdx
  458260:	mov    %r13,%rdi
  458263:	xor    %eax,%eax
  458265:	mov    %ecx,0x34(%rsp)
  458269:	callq  413c40 <BIO_printf@plt>
  45826e:	mov    0x34(%rsp),%ecx
  458272:	add    %ecx,%eax
  458274:	mov    %eax,0x34(%rsp)
  458278:	jmpq   457fde <X509_get0_pubkey_bitstr@plt+0x4160e>
  45827d:	lea    0x10020(%rip),%rcx        # 4682a4 <_fini+0xada0>
  458284:	lea    0x1719e(%rip),%rsi        # 46f429 <_fini+0x11f25>
  45828b:	xor    %eax,%eax
  45828d:	mov    %r13,%rdi
  458290:	mov    %rcx,%rdx
  458293:	callq  413c40 <BIO_printf@plt>
  458298:	test   %ebp,%ebp
  45829a:	je     458488 <X509_get0_pubkey_bitstr@plt+0x41ab8>
  4582a0:	mov    0x40(%rsp),%ecx
  4582a4:	test   %ecx,%ecx
  4582a6:	jne    458448 <X509_get0_pubkey_bitstr@plt+0x41a78>
  4582ac:	test   $0x1,%bpl
  4582b0:	jne    458400 <X509_get0_pubkey_bitstr@plt+0x41a30>
  4582b6:	test   $0x2,%bpl
  4582ba:	je     458533 <X509_get0_pubkey_bitstr@plt+0x41b63>
  4582c0:	movl   $0x0,0x34(%rsp)
  4582c8:	lea    0x17190(%rip),%rsi        # 46f45f <_fini+0x11f5b>
  4582cf:	xor    %eax,%eax
  4582d1:	mov    %r13,%rdi
  4582d4:	callq  413c40 <BIO_printf@plt>
  4582d9:	test   $0x4,%bpl
  4582dd:	jne    458395 <X509_get0_pubkey_bitstr@plt+0x419c5>
  4582e3:	and    $0xfffffff0,%ebp
  4582e6:	je     45830c <X509_get0_pubkey_bitstr@plt+0x4193c>
  4582e8:	lea    0x1716e(%rip),%rsi        # 46f45d <_fini+0x11f59>
  4582ef:	mov    %r13,%rdi
  4582f2:	xor    %eax,%eax
  4582f4:	callq  413c40 <BIO_printf@plt>
  4582f9:	lea    0x1716f(%rip),%rsi        # 46f46f <_fini+0x11f6b>
  458300:	mov    %ebp,%edx
  458302:	mov    %r13,%rdi
  458305:	xor    %eax,%eax
  458307:	callq  413c40 <BIO_printf@plt>
  45830c:	mov    0x34(%rsp),%edx
  458310:	test   %edx,%edx
  458312:	jne    45845e <X509_get0_pubkey_bitstr@plt+0x41a8e>
  458318:	lea    0xc880(%rip),%rsi        # 464b9f <_fini+0x769b>
  45831f:	mov    %r13,%rdi
  458322:	xor    %eax,%eax
  458324:	callq  413c40 <BIO_printf@plt>
  458329:	movl   $0x0,0x34(%rsp)
  458331:	jmpq   457fde <X509_get0_pubkey_bitstr@plt+0x4160e>
  458336:	callq  413240 <ENGINE_get_first@plt>
  45833b:	test   %rax,%rax
  45833e:	mov    %rax,%rbx
  458341:	je     457a37 <X509_get0_pubkey_bitstr@plt+0x41067>
  458347:	mov    (%rsp),%r12
  45834b:	mov    %rbx,%rdi
  45834e:	callq  4130f0 <ENGINE_get_id@plt>
  458353:	mov    %r12,%rdi
  458356:	mov    %rax,%rsi
  458359:	callq  412fe0 <sk_push@plt>
  45835e:	mov    %rbx,%rdi
  458361:	callq  415880 <ENGINE_get_next@plt>
  458366:	test   %rax,%rax
  458369:	mov    %rax,%rbx
  45836c:	jne    45834b <X509_get0_pubkey_bitstr@plt+0x4197b>
  45836e:	jmpq   457a37 <X509_get0_pubkey_bitstr@plt+0x41067>
  458373:	mov    0x68(%rsp),%rdx
  458378:	test   %rdx,%rdx
  45837b:	je     458386 <X509_get0_pubkey_bitstr@plt+0x419b6>
  45837d:	cmpb   $0x0,(%rdx)
  458380:	jne    458513 <X509_get0_pubkey_bitstr@plt+0x41b43>
  458386:	mov    %rdx,%rdi
  458389:	callq  415020 <CRYPTO_free@plt>
  45838e:	xchg   %ax,%ax
  458390:	jmpq   457aeb <X509_get0_pubkey_bitstr@plt+0x4111b>
  458395:	lea    0x170c1(%rip),%rsi        # 46f45d <_fini+0x11f59>
  45839c:	mov    %r13,%rdi
  45839f:	xor    %eax,%eax
  4583a1:	callq  413c40 <BIO_printf@plt>
  4583a6:	movl   $0x1,0x34(%rsp)
  4583ae:	lea    0x170b1(%rip),%rsi        # 46f466 <_fini+0x11f62>
  4583b5:	xor    %eax,%eax
  4583b7:	mov    %r13,%rdi
  4583ba:	callq  413c40 <BIO_printf@plt>
  4583bf:	and    $0xfffffff0,%ebp
  4583c2:	jne    4582e8 <X509_get0_pubkey_bitstr@plt+0x41918>
  4583c8:	jmpq   45830c <X509_get0_pubkey_bitstr@plt+0x4193c>
  4583cd:	mov    0x50(%rsp),%r15
  4583d2:	mov    0x58(%rsp),%r14
  4583d7:	xor    %ebp,%ebp
  4583d9:	mov    0x48(%rsp),%rdi
  4583de:	lea    -0xdf5(%rip),%rsi        # 4575f0 <X509_get0_pubkey_bitstr@plt+0x40c20>
  4583e5:	callq  416250 <sk_pop_free@plt>
  4583ea:	test   %ebp,%ebp
  4583ec:	jne    457b1d <X509_get0_pubkey_bitstr@plt+0x4114d>
  4583f2:	jmpq   457c8c <X509_get0_pubkey_bitstr@plt+0x412bc>
  4583f7:	nopw   0x0(%rax,%rax,1)
  458400:	lea    0x1704e(%rip),%rsi        # 46f455 <_fini+0x11f51>
  458407:	xor    %eax,%eax
  458409:	mov    %r13,%rdi
  45840c:	callq  413c40 <BIO_printf@plt>
  458411:	test   $0x2,%bpl
  458415:	jne    45849e <X509_get0_pubkey_bitstr@plt+0x41ace>
  45841b:	test   $0x4,%bpl
  45841f:	mov    $0x1,%eax
  458424:	jne    458395 <X509_get0_pubkey_bitstr@plt+0x419c5>
  45842a:	and    $0xfffffff0,%ebp
  45842d:	je     458318 <X509_get0_pubkey_bitstr@plt+0x41948>
  458433:	test   %eax,%eax
  458435:	movl   $0x0,0x34(%rsp)
  45843d:	je     4582f9 <X509_get0_pubkey_bitstr@plt+0x41929>
  458443:	jmpq   4582e8 <X509_get0_pubkey_bitstr@plt+0x41918>
  458448:	lea    0x16ffa(%rip),%rsi        # 46f449 <_fini+0x11f45>
  45844f:	mov    %r13,%rdi
  458452:	xor    %eax,%eax
  458454:	callq  413c40 <BIO_printf@plt>
  458459:	jmpq   4582ac <X509_get0_pubkey_bitstr@plt+0x418dc>
  45845e:	lea    0x17013(%rip),%rsi        # 46f478 <_fini+0x11f74>
  458465:	mov    %r13,%rdi
  458468:	xor    %eax,%eax
  45846a:	callq  413c40 <BIO_printf@plt>
  45846f:	jmpq   458318 <X509_get0_pubkey_bitstr@plt+0x41948>
  458474:	mov    0x21da3d(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  45847b:	mov    (%rax),%rdi
  45847e:	callq  415540 <ERR_print_errors_fp@plt>
  458483:	jmpq   458043 <X509_get0_pubkey_bitstr@plt+0x41673>
  458488:	lea    0x16fae(%rip),%rsi        # 46f43d <_fini+0x11f39>
  45848f:	mov    %r13,%rdi
  458492:	xor    %eax,%eax
  458494:	callq  413c40 <BIO_printf@plt>
  458499:	jmpq   457fde <X509_get0_pubkey_bitstr@plt+0x4160e>
  45849e:	lea    0x16fb8(%rip),%rsi        # 46f45d <_fini+0x11f59>
  4584a5:	mov    %r13,%rdi
  4584a8:	xor    %eax,%eax
  4584aa:	callq  413c40 <BIO_printf@plt>
  4584af:	movl   $0x1,0x34(%rsp)
  4584b7:	jmpq   4582c8 <X509_get0_pubkey_bitstr@plt+0x418f8>
  4584bc:	xor    %ebx,%ebx
  4584be:	jmpq   4581cd <X509_get0_pubkey_bitstr@plt+0x417fd>
  4584c3:	mov    0x34(%rsp),%eax
  4584c7:	mov    0x50(%rsp),%r15
  4584cc:	mov    $0x1,%ebp
  4584d1:	mov    0x58(%rsp),%r14
  4584d6:	test   %eax,%eax
  4584d8:	jle    4583d9 <X509_get0_pubkey_bitstr@plt+0x41a09>
  4584de:	lea    0xc6ba(%rip),%rsi        # 464b9f <_fini+0x769b>
  4584e5:	mov    %r13,%rdi
  4584e8:	xor    %eax,%eax
  4584ea:	callq  413c40 <BIO_printf@plt>
  4584ef:	jmpq   4583d9 <X509_get0_pubkey_bitstr@plt+0x41a09>
  4584f4:	movl   $0x0,0x18(%rsp)
  4584fc:	movl   $0x0,0x44(%rsp)
  458504:	xor    %ebp,%ebp
  458506:	movl   $0x0,0x1c(%rsp)
  45850e:	jmpq   457a26 <X509_get0_pubkey_bitstr@plt+0x41056>
  458513:	lea    0x16ee0(%rip),%rsi        # 46f3fa <_fini+0x11ef6>
  45851a:	mov    %r13,%rdi
  45851d:	xor    %eax,%eax
  45851f:	callq  413c40 <BIO_printf@plt>
  458524:	mov    0x68(%rsp),%rdx
  458529:	jmpq   458386 <X509_get0_pubkey_bitstr@plt+0x419b6>
  45852e:	callq  414c30 <__stack_chk_fail@plt>
  458533:	xor    %eax,%eax
  458535:	test   $0x4,%bpl
  458539:	je     45842a <X509_get0_pubkey_bitstr@plt+0x41a5a>
  45853f:	movl   $0x0,0x34(%rsp)
  458547:	jmpq   4583ae <X509_get0_pubkey_bitstr@plt+0x419de>
  45854c:	nopl   0x0(%rax)
  458550:	push   %rbp
  458551:	push   %rbx
  458552:	mov    %rdi,%rbx
  458555:	sub    $0x68,%rsp
  458559:	mov    %fs:0x28,%rax
  458562:	mov    %rax,0x58(%rsp)
  458567:	xor    %eax,%eax
  458569:	movabs $0x302e312f50545448,%rax
  458573:	movb   $0x0,0x50(%rsp)
  458578:	mov    %rax,(%rsp)
  45857c:	movabs $0xd4b4f2030303220,%rax
  458586:	mov    %rax,0x8(%rsp)
  45858b:	movabs $0x746e65746e6f430a,%rax
  458595:	mov    %rax,0x10(%rsp)
  45859a:	movabs $0x61203a657079742d,%rax
  4585a4:	mov    %rax,0x18(%rsp)
  4585a9:	movabs $0x69746163696c7070,%rax
  4585b3:	mov    %rax,0x20(%rsp)
  4585b8:	movabs $0x2d7073636f2f6e6f,%rax
  4585c2:	mov    %rax,0x28(%rsp)
  4585c7:	movabs $0x65736e6f70736572,%rax
  4585d1:	mov    %rax,0x30(%rsp)
  4585d6:	movabs $0x6e65746e6f430a0d,%rax
  4585e0:	mov    %rax,0x38(%rsp)
  4585e5:	movabs $0x6874676e654c2d74,%rax
  4585ef:	mov    %rax,0x40(%rsp)
  4585f4:	movabs $0xa0d0a0d6425203a,%rax
  4585fe:	mov    %rax,0x48(%rsp)
  458603:	xor    %eax,%eax
  458605:	test   %rdi,%rdi
  458608:	je     45864e <X509_get0_pubkey_bitstr@plt+0x41c7e>
  45860a:	mov    %rsi,%rbp
  45860d:	xor    %esi,%esi
  45860f:	mov    %rbp,%rdi
  458612:	callq  412fb0 <i2d_OCSP_RESPONSE@plt>
  458617:	mov    %rsp,%rsi
  45861a:	mov    %eax,%edx
  45861c:	mov    %rbx,%rdi
  45861f:	xor    %eax,%eax
  458621:	callq  413c40 <BIO_printf@plt>
  458626:	mov    0x21d89b(%rip),%rdi        # 675ec8 <_fini+0x2189c4>
  45862d:	mov    %rbp,%rdx
  458630:	mov    %rbx,%rsi
  458633:	callq  413c70 <ASN1_i2d_bio@plt>
  458638:	xor    %ecx,%ecx
  45863a:	xor    %edx,%edx
  45863c:	mov    $0xb,%esi
  458641:	mov    %rbx,%rdi
  458644:	callq  412af0 <BIO_ctrl@plt>
  458649:	mov    $0x1,%eax
  45864e:	mov    0x58(%rsp),%rcx
  458653:	xor    %fs:0x28,%rcx
  45865c:	jne    458665 <X509_get0_pubkey_bitstr@plt+0x41c95>
  45865e:	add    $0x68,%rsp
  458662:	pop    %rbx
  458663:	pop    %rbp
  458664:	retq   
  458665:	callq  414c30 <__stack_chk_fail@plt>
  45866a:	nopw   0x0(%rax,%rax,1)
  458670:	push   %r14
  458672:	xor    %ecx,%ecx
  458674:	push   %r13
  458676:	mov    %rdi,%r13
  458679:	push   %r12
  45867b:	mov    %rsi,%r12
  45867e:	mov    $0x65,%esi
  458683:	push   %rbp
  458684:	push   %rbx
  458685:	mov    %rdx,%rbx
  458688:	xor    %edx,%edx
  45868a:	mov    %rbx,%rdi
  45868d:	sub    $0x410,%rsp
  458694:	mov    %fs:0x28,%rax
  45869d:	mov    %rax,0x408(%rsp)
  4586a5:	xor    %eax,%eax
  4586a7:	callq  412af0 <BIO_ctrl@plt>
  4586ac:	test   %rax,%rax
  4586af:	jle    458780 <X509_get0_pubkey_bitstr@plt+0x41db0>
  4586b5:	mov    %rbx,%rdi
  4586b8:	xor    %r14d,%r14d
  4586bb:	mov    %rsp,%rbx
  4586be:	callq  414550 <BIO_pop@plt>
  4586c3:	mov    %rax,(%r12)
  4586c7:	mov    %rax,%rbp
  4586ca:	mov    $0x4,%r12d
  4586d0:	jmp    458709 <X509_get0_pubkey_bitstr@plt+0x41d39>
  4586d2:	nopw   0x0(%rax,%rax,1)
  4586d8:	test   %r14d,%r14d
  4586db:	jne    4586f2 <X509_get0_pubkey_bitstr@plt+0x41d22>
  4586dd:	lea    0x16dc3(%rip),%rdi        # 46f4a7 <_fini+0x11fa3>
  4586e4:	mov    %rbx,%rsi
  4586e7:	mov    %r12,%rcx
  4586ea:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4586ec:	jne    4587b0 <X509_get0_pubkey_bitstr@plt+0x41de0>
  4586f2:	movzbl (%rsp),%r8d
  4586f7:	cmp    $0xa,%r8b
  4586fb:	je     458750 <X509_get0_pubkey_bitstr@plt+0x41d80>
  4586fd:	cmp    $0xd,%r8b
  458701:	je     458750 <X509_get0_pubkey_bitstr@plt+0x41d80>
  458703:	mov    $0x1,%r14d
  458709:	mov    $0x400,%edx
  45870e:	mov    %rbx,%rsi
  458711:	mov    %rbp,%rdi
  458714:	callq  4138a0 <BIO_gets@plt>
  458719:	test   %eax,%eax
  45871b:	jg     4586d8 <X509_get0_pubkey_bitstr@plt+0x41d08>
  45871d:	mov    $0x1,%eax
  458722:	mov    0x408(%rsp),%rcx
  45872a:	xor    %fs:0x28,%rcx
  458733:	jne    4587f9 <X509_get0_pubkey_bitstr@plt+0x41e29>
  458739:	add    $0x410,%rsp
  458740:	pop    %rbx
  458741:	pop    %rbp
  458742:	pop    %r12
  458744:	pop    %r13
  458746:	pop    %r14
  458748:	retq   
  458749:	nopl   0x0(%rax)
  458750:	mov    0x21d7f1(%rip),%rsi        # 675f48 <_fini+0x218a44>
  458757:	mov    0x21d762(%rip),%rdi        # 675ec0 <_fini+0x2189bc>
  45875e:	xor    %ecx,%ecx
  458760:	mov    %rbp,%rdx
  458763:	callq  415520 <ASN1_d2i_bio@plt>
  458768:	test   %rax,%rax
  45876b:	mov    %rax,%rbx
  45876e:	je     4587d2 <X509_get0_pubkey_bitstr@plt+0x41e02>
  458770:	mov    %rbx,0x0(%r13)
  458774:	mov    $0x1,%eax
  458779:	jmp    458722 <X509_get0_pubkey_bitstr@plt+0x41d52>
  45877b:	nopl   0x0(%rax,%rax,1)
  458780:	lea    0x2225b9(%rip),%rbx        # 67ad40 <_edata+0x38>
  458787:	lea    0x16cfd(%rip),%rsi        # 46f48b <_fini+0x11f87>
  45878e:	xor    %eax,%eax
  458790:	mov    (%rbx),%rdi
  458793:	callq  413c40 <BIO_printf@plt>
  458798:	mov    (%rbx),%rdi
  45879b:	callq  413f40 <ERR_print_errors@plt>
  4587a0:	xor    %eax,%eax
  4587a2:	jmpq   458722 <X509_get0_pubkey_bitstr@plt+0x41d52>
  4587a7:	nopw   0x0(%rax,%rax,1)
  4587b0:	lea    0x222589(%rip),%rax        # 67ad40 <_edata+0x38>
  4587b7:	lea    0x16cee(%rip),%rsi        # 46f4ac <_fini+0x11fa8>
  4587be:	mov    (%rax),%rdi
  4587c1:	xor    %eax,%eax
  4587c3:	callq  413c40 <BIO_printf@plt>
  4587c8:	mov    $0x1,%eax
  4587cd:	jmpq   458722 <X509_get0_pubkey_bitstr@plt+0x41d52>
  4587d2:	lea    0x222567(%rip),%rbp        # 67ad40 <_edata+0x38>
  4587d9:	lea    0x16cdd(%rip),%rsi        # 46f4bd <_fini+0x11fb9>
  4587e0:	xor    %eax,%eax
  4587e2:	mov    0x0(%rbp),%rdi
  4587e6:	callq  413c40 <BIO_printf@plt>
  4587eb:	mov    0x0(%rbp),%rdi
  4587ef:	callq  413f40 <ERR_print_errors@plt>
  4587f4:	jmpq   458770 <X509_get0_pubkey_bitstr@plt+0x41da0>
  4587f9:	callq  414c30 <__stack_chk_fail@plt>
  4587fe:	xchg   %ax,%ax
  458800:	push   %r15
  458802:	push   %r14
  458804:	mov    %r8,%r14
  458807:	push   %r13
  458809:	push   %r12
  45880b:	mov    %rcx,%r12
  45880e:	push   %rbp
  45880f:	push   %rbx
  458810:	mov    %r9d,%ebx
  458813:	sub    $0xd8,%rsp
  45881a:	mov    %rdi,0x18(%rsp)
  45881f:	mov    %rdx,%rdi
  458822:	mov    %rsi,0x8(%rsp)
  458827:	mov    %fs:0x28,%rax
  458830:	mov    %rax,0xc8(%rsp)
  458838:	xor    %eax,%eax
  45883a:	mov    0x110(%rsp),%r15
  458842:	mov    0x118(%rsp),%r13d
  45884a:	callq  415de0 <BIO_new_connect@plt>
  45884f:	test   %rax,%rax
  458852:	mov    %rax,%rbp
  458855:	je     458c18 <X509_get0_pubkey_bitstr@plt+0x42248>
  45885b:	test   %r14,%r14
  45885e:	je     458875 <X509_get0_pubkey_bitstr@plt+0x41ea5>
  458860:	mov    %r14,%rcx
  458863:	mov    $0x1,%edx
  458868:	mov    $0x64,%esi
  45886d:	mov    %rax,%rdi
  458870:	callq  412af0 <BIO_ctrl@plt>
  458875:	xor    %r14d,%r14d
  458878:	cmp    $0x1,%ebx
  45887b:	je     458a68 <X509_get0_pubkey_bitstr@plt+0x42098>
  458881:	xor    %ecx,%ecx
  458883:	cmp    $0xffffffff,%r13d
  458887:	movq   $0x0,0x28(%rsp)
  458890:	je     458c51 <X509_get0_pubkey_bitstr@plt+0x42281>
  458896:	mov    $0x1,%edx
  45889b:	mov    $0x66,%esi
  4588a0:	mov    %rbp,%rdi
  4588a3:	callq  412af0 <BIO_ctrl@plt>
  4588a8:	xor    %ecx,%ecx
  4588aa:	xor    %edx,%edx
  4588ac:	mov    $0x65,%esi
  4588b1:	mov    %rbp,%rdi
  4588b4:	callq  412af0 <BIO_ctrl@plt>
  4588b9:	test   %eax,%eax
  4588bb:	mov    %eax,%ebx
  4588bd:	jle    458a20 <X509_get0_pubkey_bitstr@plt+0x42050>
  4588c3:	lea    0x24(%rsp),%rcx
  4588c8:	xor    %edx,%edx
  4588ca:	mov    $0x69,%esi
  4588cf:	mov    %rbp,%rdi
  4588d2:	callq  412af0 <BIO_ctrl@plt>
  4588d7:	test   %rax,%rax
  4588da:	jle    458bc0 <X509_get0_pubkey_bitstr@plt+0x421f0>
  4588e0:	test   %ebx,%ebx
  4588e2:	jg     458955 <X509_get0_pubkey_bitstr@plt+0x41f85>
  4588e4:	cmp    $0xffffffff,%r13d
  4588e8:	je     458955 <X509_get0_pubkey_bitstr@plt+0x41f85>
  4588ea:	lea    0x40(%rsp),%rbx
  4588ef:	mov    $0x10,%ecx
  4588f4:	xor    %eax,%eax
  4588f6:	mov    %rbx,%rdi
  4588f9:	cld    
  4588fa:	rep stos %rax,%es:(%rdi)
  4588fd:	movslq 0x24(%rsp),%rdi
  458902:	callq  415c10 <__fdelt_chk@plt>
  458907:	mov    0x24(%rsp),%edi
  45890b:	mov    $0x1,%edx
  458910:	lea    0x30(%rsp),%r8
  458915:	movq   $0x0,0x38(%rsp)
  45891e:	mov    %edi,%esi
  458920:	sar    $0x1f,%esi
  458923:	shr    $0x1a,%esi
  458926:	lea    (%rdi,%rsi,1),%ecx
  458929:	add    $0x1,%edi
  45892c:	and    $0x3f,%ecx
  45892f:	sub    %esi,%ecx
  458931:	xor    %esi,%esi
  458933:	shl    %cl,%rdx
  458936:	xor    %ecx,%ecx
  458938:	or     %rdx,0x40(%rsp,%rax,8)
  45893d:	movslq %r13d,%rax
  458940:	mov    %rbx,%rdx
  458943:	mov    %rax,0x30(%rsp)
  458948:	callq  4146b0 <select@plt>
  45894d:	test   %eax,%eax
  45894f:	je     458c02 <X509_get0_pubkey_bitstr@plt+0x42232>
  458955:	xor    %edx,%edx
  458957:	mov    $0xffffffff,%ecx
  45895c:	mov    %r12,%rsi
  45895f:	mov    %rbp,%rdi
  458962:	callq  4161d0 <OCSP_sendreq_new@plt>
  458967:	test   %rax,%rax
  45896a:	mov    %rax,%rbx
  45896d:	je     458a46 <X509_get0_pubkey_bitstr@plt+0x42076>
  458973:	xor    %r12d,%r12d
  458976:	jmp    4589a3 <X509_get0_pubkey_bitstr@plt+0x41fd3>
  458978:	nopl   0x0(%rax,%rax,1)
  458980:	mov    %r12d,%esi
  458983:	mov    %r15,%rdi
  458986:	callq  412b30 <sk_value@plt>
  45898b:	mov    0x10(%rax),%rdx
  45898f:	mov    0x8(%rax),%rsi
  458993:	mov    %rbx,%rdi
  458996:	callq  4137c0 <OCSP_REQ_CTX_add1_header@plt>
  45899b:	test   %eax,%eax
  45899d:	je     4589c5 <X509_get0_pubkey_bitstr@plt+0x41ff5>
  45899f:	add    $0x1,%r12d
  4589a3:	mov    %r15,%rdi
  4589a6:	callq  4156d0 <sk_num@plt>
  4589ab:	cmp    %eax,%r12d
  4589ae:	jl     458980 <X509_get0_pubkey_bitstr@plt+0x41fb0>
  4589b0:	mov    0x8(%rsp),%rsi
  4589b5:	mov    %rbx,%rdi
  4589b8:	callq  413320 <OCSP_REQ_CTX_set1_req@plt>
  4589bd:	test   %eax,%eax
  4589bf:	jne    458ab8 <X509_get0_pubkey_bitstr@plt+0x420e8>
  4589c5:	mov    %rbx,%rdi
  4589c8:	callq  414f30 <OCSP_REQ_CTX_free@plt>
  4589cd:	mov    0x28(%rsp),%rbx
  4589d2:	test   %rbx,%rbx
  4589d5:	je     458a46 <X509_get0_pubkey_bitstr@plt+0x42076>
  4589d7:	test   %rbp,%rbp
  4589da:	je     4589e4 <X509_get0_pubkey_bitstr@plt+0x42014>
  4589dc:	mov    %rbp,%rdi
  4589df:	callq  416570 <BIO_free_all@plt>
  4589e4:	test   %r14,%r14
  4589e7:	je     4589f1 <X509_get0_pubkey_bitstr@plt+0x42021>
  4589e9:	mov    %r14,%rdi
  4589ec:	callq  412c50 <SSL_CTX_free@plt>
  4589f1:	mov    %rbx,%rax
  4589f4:	mov    0xc8(%rsp),%rbx
  4589fc:	xor    %fs:0x28,%rbx
  458a05:	jne    458c4c <X509_get0_pubkey_bitstr@plt+0x4227c>
  458a0b:	add    $0xd8,%rsp
  458a12:	pop    %rbx
  458a13:	pop    %rbp
  458a14:	pop    %r12
  458a16:	pop    %r13
  458a18:	pop    %r14
  458a1a:	pop    %r15
  458a1c:	retq   
  458a1d:	nopl   (%rax)
  458a20:	mov    $0x8,%esi
  458a25:	mov    %rbp,%rdi
  458a28:	callq  415c30 <BIO_test_flags@plt>
  458a2d:	test   %eax,%eax
  458a2f:	jne    4588c3 <X509_get0_pubkey_bitstr@plt+0x41ef3>
  458a35:	mov    0x18(%rsp),%rdi
  458a3a:	lea    0x16ad1(%rip),%rsi        # 46f512 <_fini+0x1200e>
  458a41:	callq  413b70 <BIO_puts@plt>
  458a46:	lea    0x2222f3(%rip),%rax        # 67ad40 <_edata+0x38>
  458a4d:	lea    0x16f7c(%rip),%rsi        # 46f9d0 <_fini+0x124cc>
  458a54:	xor    %ebx,%ebx
  458a56:	mov    (%rax),%rdi
  458a59:	xor    %eax,%eax
  458a5b:	callq  413c40 <BIO_printf@plt>
  458a60:	jmpq   4589d7 <X509_get0_pubkey_bitstr@plt+0x42007>
  458a65:	nopl   (%rax)
  458a68:	callq  415730 <SSLv23_client_method@plt>
  458a6d:	mov    %rax,%rdi
  458a70:	callq  413890 <SSL_CTX_new@plt>
  458a75:	test   %rax,%rax
  458a78:	mov    %rax,%r14
  458a7b:	je     458c32 <X509_get0_pubkey_bitstr@plt+0x42262>
  458a81:	xor    %ecx,%ecx
  458a83:	mov    $0x4,%edx
  458a88:	mov    $0x21,%esi
  458a8d:	mov    %rax,%rdi
  458a90:	callq  413e30 <SSL_CTX_ctrl@plt>
  458a95:	mov    $0x1,%esi
  458a9a:	mov    %r14,%rdi
  458a9d:	callq  416790 <BIO_new_ssl@plt>
  458aa2:	mov    %rbp,%rsi
  458aa5:	mov    %rax,%rdi
  458aa8:	callq  415ac0 <BIO_push@plt>
  458aad:	mov    %rax,%rbp
  458ab0:	jmpq   458881 <X509_get0_pubkey_bitstr@plt+0x41eb1>
  458ab5:	nopl   (%rax)
  458ab8:	movslq %r13d,%rax
  458abb:	lea    0x28(%rsp),%r15
  458ac0:	lea    0x40(%rsp),%r12
  458ac5:	mov    %rax,0x8(%rsp)
  458aca:	lea    0x30(%rsp),%rax
  458acf:	mov    %rax,0x10(%rsp)
  458ad4:	nopl   0x0(%rax)
  458ad8:	mov    %rbx,%rsi
  458adb:	mov    %r15,%rdi
  458ade:	callq  413aa0 <OCSP_sendreq_nbio@plt>
  458ae3:	cmp    $0xffffffff,%eax
  458ae6:	jne    4589c5 <X509_get0_pubkey_bitstr@plt+0x41ff5>
  458aec:	cmp    $0xffffffff,%r13d
  458af0:	je     458ad8 <X509_get0_pubkey_bitstr@plt+0x42108>
  458af2:	mov    $0x10,%ecx
  458af7:	mov    %r12,%rdi
  458afa:	xor    %eax,%eax
  458afc:	cld    
  458afd:	rep stos %rax,%es:(%rdi)
  458b00:	movslq 0x24(%rsp),%rdi
  458b05:	callq  415c10 <__fdelt_chk@plt>
  458b0a:	mov    0x24(%rsp),%ecx
  458b0e:	mov    $0x1,%esi
  458b13:	mov    %rbp,%rdi
  458b16:	movq   $0x0,0x38(%rsp)
  458b1f:	mov    %ecx,%edx
  458b21:	sar    $0x1f,%edx
  458b24:	shr    $0x1a,%edx
  458b27:	add    %edx,%ecx
  458b29:	and    $0x3f,%ecx
  458b2c:	sub    %edx,%ecx
  458b2e:	mov    $0x1,%edx
  458b33:	shl    %cl,%rdx
  458b36:	or     %rdx,0x40(%rsp,%rax,8)
  458b3b:	mov    0x8(%rsp),%rax
  458b40:	mov    %rax,0x30(%rsp)
  458b45:	callq  415c30 <BIO_test_flags@plt>
  458b4a:	test   %eax,%eax
  458b4c:	je     458b90 <X509_get0_pubkey_bitstr@plt+0x421c0>
  458b4e:	mov    0x24(%rsp),%eax
  458b52:	mov    0x10(%rsp),%r8
  458b57:	xor    %ecx,%ecx
  458b59:	xor    %edx,%edx
  458b5b:	mov    %r12,%rsi
  458b5e:	lea    0x1(%rax),%edi
  458b61:	callq  4146b0 <select@plt>
  458b66:	test   %eax,%eax
  458b68:	je     458bd6 <X509_get0_pubkey_bitstr@plt+0x42206>
  458b6a:	cmp    $0xffffffff,%eax
  458b6d:	jne    458ad8 <X509_get0_pubkey_bitstr@plt+0x42108>
  458b73:	mov    0x18(%rsp),%rdi
  458b78:	lea    0x16a06(%rip),%rsi        # 46f585 <_fini+0x12081>
  458b7f:	callq  413b70 <BIO_puts@plt>
  458b84:	jmpq   4589c5 <X509_get0_pubkey_bitstr@plt+0x41ff5>
  458b89:	nopl   0x0(%rax)
  458b90:	mov    $0x2,%esi
  458b95:	mov    %rbp,%rdi
  458b98:	callq  415c30 <BIO_test_flags@plt>
  458b9d:	test   %eax,%eax
  458b9f:	je     458bec <X509_get0_pubkey_bitstr@plt+0x4221c>
  458ba1:	mov    0x24(%rsp),%eax
  458ba5:	mov    0x10(%rsp),%r8
  458baa:	xor    %ecx,%ecx
  458bac:	mov    %r12,%rdx
  458baf:	xor    %esi,%esi
  458bb1:	lea    0x1(%rax),%edi
  458bb4:	callq  4146b0 <select@plt>
  458bb9:	jmp    458b66 <X509_get0_pubkey_bitstr@plt+0x42196>
  458bbb:	nopl   0x0(%rax,%rax,1)
  458bc0:	mov    0x18(%rsp),%rdi
  458bc5:	lea    0x1695c(%rip),%rsi        # 46f528 <_fini+0x12024>
  458bcc:	callq  413b70 <BIO_puts@plt>
  458bd1:	jmpq   4589cd <X509_get0_pubkey_bitstr@plt+0x41ffd>
  458bd6:	mov    0x18(%rsp),%rdi
  458bdb:	lea    0x1698f(%rip),%rsi        # 46f571 <_fini+0x1206d>
  458be2:	callq  413b70 <BIO_puts@plt>
  458be7:	jmpq   4589c5 <X509_get0_pubkey_bitstr@plt+0x41ff5>
  458bec:	mov    0x18(%rsp),%rdi
  458bf1:	lea    0x1695d(%rip),%rsi        # 46f555 <_fini+0x12051>
  458bf8:	callq  413b70 <BIO_puts@plt>
  458bfd:	jmpq   4589c5 <X509_get0_pubkey_bitstr@plt+0x41ff5>
  458c02:	mov    0x18(%rsp),%rdi
  458c07:	lea    0x16933(%rip),%rsi        # 46f541 <_fini+0x1203d>
  458c0e:	callq  413b70 <BIO_puts@plt>
  458c13:	jmpq   458a46 <X509_get0_pubkey_bitstr@plt+0x42076>
  458c18:	mov    0x18(%rsp),%rdi
  458c1d:	lea    0x168b5(%rip),%rsi        # 46f4d9 <_fini+0x11fd5>
  458c24:	xor    %eax,%eax
  458c26:	xor    %ebx,%ebx
  458c28:	callq  413c40 <BIO_printf@plt>
  458c2d:	jmpq   4589f1 <X509_get0_pubkey_bitstr@plt+0x42021>
  458c32:	mov    0x18(%rsp),%rdi
  458c37:	lea    0x168b7(%rip),%rsi        # 46f4f5 <_fini+0x11ff1>
  458c3e:	xor    %eax,%eax
  458c40:	xor    %ebx,%ebx
  458c42:	callq  413c40 <BIO_printf@plt>
  458c47:	jmpq   4589dc <X509_get0_pubkey_bitstr@plt+0x4200c>
  458c4c:	callq  414c30 <__stack_chk_fail@plt>
  458c51:	xor    %edx,%edx
  458c53:	mov    $0x65,%esi
  458c58:	mov    %rbp,%rdi
  458c5b:	callq  412af0 <BIO_ctrl@plt>
  458c60:	test   %eax,%eax
  458c62:	mov    %eax,%ebx
  458c64:	jg     4588c3 <X509_get0_pubkey_bitstr@plt+0x41ef3>
  458c6a:	jmpq   458a35 <X509_get0_pubkey_bitstr@plt+0x42065>
  458c6f:	nop
  458c70:	push   %r15
  458c72:	push   %r14
  458c74:	push   %r13
  458c76:	push   %r12
  458c78:	push   %rbp
  458c79:	push   %rbx
  458c7a:	mov    %rsi,%rbx
  458c7d:	sub    $0x218,%rsp
  458c84:	lea    0x2220b5(%rip),%r15        # 67ad40 <_edata+0x38>
  458c8b:	mov    %fs:0x28,%rax
  458c94:	mov    %rax,0x208(%rsp)
  458c9c:	xor    %eax,%eax
  458c9e:	lea    0xf62e(%rip),%rax        # 4682d3 <_fini+0xadcf>
  458ca5:	movq   $0x0,0x178(%rsp)
  458cb1:	movq   $0x0,0x180(%rsp)
  458cbd:	mov    (%r15),%rdi
  458cc0:	movl   $0xffffffff,0x170(%rsp)
  458ccb:	mov    %rax,0x188(%rsp)
  458cd3:	movq   $0x0,0x190(%rsp)
  458cdf:	movq   $0x0,0x198(%rsp)
  458ceb:	movq   $0x0,0x1a0(%rsp)
  458cf7:	test   %rdi,%rdi
  458cfa:	je     45a2a0 <X509_get0_pubkey_bitstr@plt+0x438d0>
  458d00:	xor    %esi,%esi
  458d02:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  458d07:	test   %eax,%eax
  458d09:	jne    458ef8 <X509_get0_pubkey_bitstr@plt+0x42528>
  458d0f:	xor    %ebx,%ebx
  458d11:	xor    %r14d,%r14d
  458d14:	movq   $0x0,0x10(%rsp)
  458d1d:	movq   $0x0,0x90(%rsp)
  458d29:	movq   $0x0,0xa0(%rsp)
  458d35:	mov    $0x1,%r12d
  458d3b:	movq   $0x0,0x18(%rsp)
  458d44:	movq   $0x0,0x40(%rsp)
  458d4d:	xor    %r13d,%r13d
  458d50:	movq   $0x0,0x68(%rsp)
  458d59:	movq   $0x0,0x58(%rsp)
  458d62:	xor    %ebp,%ebp
  458d64:	movq   $0x0,0x78(%rsp)
  458d6d:	movq   $0x0,0x80(%rsp)
  458d79:	movq   $0x0,0x70(%rsp)
  458d82:	movq   $0x0,0x38(%rsp)
  458d8b:	movq   $0x0,0x98(%rsp)
  458d97:	movq   $0x0,0x88(%rsp)
  458da3:	mov    (%r15),%rdi
  458da6:	callq  413f40 <ERR_print_errors@plt>
  458dab:	mov    0x38(%rsp),%rdi
  458db0:	callq  4153a0 <X509_free@plt>
  458db5:	mov    %r13,%rdi
  458db8:	callq  4134b0 <X509_STORE_free@plt>
  458dbd:	mov    0x80(%rsp),%rdi
  458dc5:	callq  412b00 <EVP_PKEY_free@plt>
  458dca:	mov    0x78(%rsp),%rdi
  458dcf:	callq  412b00 <EVP_PKEY_free@plt>
  458dd4:	mov    0x88(%rsp),%rdi
  458ddc:	callq  4153a0 <X509_free@plt>
  458de1:	mov    0x98(%rsp),%rdi
  458de9:	callq  4153a0 <X509_free@plt>
  458dee:	mov    0x70(%rsp),%rdi
  458df3:	callq  4153a0 <X509_free@plt>
  458df8:	mov    0x10(%rsp),%rdi
  458dfd:	callq  4153a0 <X509_free@plt>
  458e02:	mov    %r14,%rdi
  458e05:	callq  447890 <X509_get0_pubkey_bitstr@plt+0x30ec0>
  458e0a:	mov    0x1a0(%rsp),%rdi
  458e12:	callq  416570 <BIO_free_all@plt>
  458e17:	mov    0x58(%rsp),%rdi
  458e1c:	callq  416570 <BIO_free_all@plt>
  458e21:	mov    0x68(%rsp),%rdi
  458e26:	callq  413960 <BIO_free@plt>
  458e2b:	mov    0x198(%rsp),%rdi
  458e33:	callq  4149b0 <OCSP_REQUEST_free@plt>
  458e38:	mov    %rbx,%rdi
  458e3b:	callq  412e30 <OCSP_RESPONSE_free@plt>
  458e40:	mov    %rbp,%rdi
  458e43:	callq  414760 <OCSP_BASICRESP_free@plt>
  458e48:	mov    0xa0(%rsp),%rdi
  458e50:	callq  4143f0 <sk_free@plt>
  458e55:	mov    0x90(%rsp),%rdi
  458e5d:	callq  4143f0 <sk_free@plt>
  458e62:	mov    0x21d10f(%rip),%rbx        # 675f78 <_fini+0x218a74>
  458e69:	mov    0x40(%rsp),%rdi
  458e6e:	mov    %rbx,%rsi
  458e71:	callq  416250 <sk_pop_free@plt>
  458e76:	mov    0x18(%rsp),%rdi
  458e7b:	mov    %rbx,%rsi
  458e7e:	callq  416250 <sk_pop_free@plt>
  458e83:	mov    0x21d07e(%rip),%rsi        # 675f08 <_fini+0x218a04>
  458e8a:	mov    0x190(%rsp),%rdi
  458e92:	callq  416250 <sk_pop_free@plt>
  458e97:	cmpl   $0xffffffff,0x170(%rsp)
  458e9f:	je     458ec8 <X509_get0_pubkey_bitstr@plt+0x424f8>
  458ea1:	mov    0x178(%rsp),%rdi
  458ea9:	callq  415020 <CRYPTO_free@plt>
  458eae:	mov    0x180(%rsp),%rdi
  458eb6:	callq  415020 <CRYPTO_free@plt>
  458ebb:	mov    0x188(%rsp),%rdi
  458ec3:	callq  415020 <CRYPTO_free@plt>
  458ec8:	mov    0x208(%rsp),%rbx
  458ed0:	xor    %fs:0x28,%rbx
  458ed9:	mov    %r12d,%eax
  458edc:	jne    45aa97 <X509_get0_pubkey_bitstr@plt+0x440c7>
  458ee2:	add    $0x218,%rsp
  458ee9:	pop    %rbx
  458eea:	pop    %rbp
  458eeb:	pop    %r12
  458eed:	pop    %r13
  458eef:	pop    %r14
  458ef1:	pop    %r15
  458ef3:	retq   
  458ef4:	nopl   0x0(%rax)
  458ef8:	callq  412f00 <SSL_load_error_strings@plt>
  458efd:	callq  414ce0 <SSL_library_init@plt>
  458f02:	callq  412cd0 <sk_new_null@plt>
  458f07:	mov    %rax,0xa0(%rsp)
  458f0f:	lea    0x8(%rbx),%r12
  458f13:	callq  412cd0 <sk_new_null@plt>
  458f18:	mov    %rax,0x90(%rsp)
  458f20:	mov    0x8(%rbx),%rax
  458f24:	test   %rax,%rax
  458f27:	je     459267 <X509_get0_pubkey_bitstr@plt+0x42897>
  458f2d:	cmpb   $0x2d,(%rax)
  458f30:	jne    459267 <X509_get0_pubkey_bitstr@plt+0x42897>
  458f36:	lea    0x190(%rsp),%rcx
  458f3e:	mov    $0xffffffff,%ebx
  458f43:	movq   $0x0,0x50(%rsp)
  458f4c:	mov    %ebx,0x100(%rsp)
  458f53:	mov    %ebx,0xcc(%rsp)
  458f5a:	mov    $0xffffffffffffffff,%rbx
  458f61:	mov    %rcx,0x58(%rsp)
  458f66:	lea    0x170(%rsp),%rcx
  458f6e:	mov    %rbx,0x140(%rsp)
  458f76:	mov    %ebx,0xc8(%rsp)
  458f7d:	movl   $0x0,0x40(%rsp)
  458f85:	xor    %ebp,%ebp
  458f87:	mov    %rcx,0x10(%rsp)
  458f8c:	lea    0x188(%rsp),%rcx
  458f94:	movq   $0x0,0x38(%rsp)
  458f9d:	movq   $0x0,0xc0(%rsp)
  458fa9:	movl   $0x0,0x130(%rsp)
  458fb4:	xor    %r13d,%r13d
  458fb7:	movq   $0x0,0x108(%rsp)
  458fc3:	movq   $0x0,0x118(%rsp)
  458fcf:	lea    0x4e70(%rip),%rbx        # 45de46 <_fini+0x942>
  458fd6:	movq   $0x0,0xf8(%rsp)
  458fe2:	movq   $0x0,0x30(%rsp)
  458feb:	mov    %r12,%r14
  458fee:	movq   $0x0,0x128(%rsp)
  458ffa:	movq   $0x0,0xf0(%rsp)
  459006:	movq   $0x0,0x150(%rsp)
  459012:	movq   $0x0,0x148(%rsp)
  45901e:	movq   $0x12c,0x138(%rsp)
  45902a:	movl   $0x0,0x104(%rsp)
  459035:	movl   $0x0,0xec(%rsp)
  459040:	movq   $0x0,0x98(%rsp)
  45904c:	movq   $0x0,0x88(%rsp)
  459058:	movl   $0x0,0x134(%rsp)
  459063:	movl   $0x1,0xe8(%rsp)
  45906e:	movq   $0x0,0x28(%rsp)
  459077:	movq   $0x0,0xa8(%rsp)
  459083:	movq   $0x0,0xd0(%rsp)
  45908f:	movq   $0x0,0xe0(%rsp)
  45909b:	movq   $0x0,0xd8(%rsp)
  4590a7:	movq   $0x0,0x120(%rsp)
  4590b3:	movq   $0x0,0x48(%rsp)
  4590bc:	mov    %rcx,0x18(%rsp)
  4590c1:	lea    0x180(%rsp),%rcx
  4590c9:	mov    %rcx,0x20(%rsp)
  4590ce:	jmp    45910a <X509_get0_pubkey_bitstr@plt+0x4273a>
  4590d0:	mov    0x8(%r14),%rax
  4590d4:	test   %rax,%rax
  4590d7:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  4590dd:	lea    0x8(%r14),%r12
  4590e1:	mov    %rax,%rbp
  4590e4:	xor    %edx,%edx
  4590e6:	test   %edx,%edx
  4590e8:	lea    0x8(%r12),%r14
  4590ed:	jne    459d70 <X509_get0_pubkey_bitstr@plt+0x433a0>
  4590f3:	mov    0x8(%r12),%rax
  4590f8:	test   %rax,%rax
  4590fb:	je     4593c0 <X509_get0_pubkey_bitstr@plt+0x429f0>
  459101:	cmpb   $0x2d,(%rax)
  459104:	jne    4593c0 <X509_get0_pubkey_bitstr@plt+0x429f0>
  45910a:	mov    $0x5,%ecx
  45910f:	mov    %rax,%rsi
  459112:	mov    %rbx,%rdi
  459115:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  459117:	je     4590d0 <X509_get0_pubkey_bitstr@plt+0x42700>
  459119:	lea    0xf4e8(%rip),%rdi        # 468608 <_fini+0xb104>
  459120:	mov    $0x9,%ecx
  459125:	mov    %rax,%rsi
  459128:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45912a:	jne    459178 <X509_get0_pubkey_bitstr@plt+0x427a8>
  45912c:	mov    0x8(%r14),%rdi
  459130:	test   %rdi,%rdi
  459133:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  459139:	mov    $0xa,%edx
  45913e:	xor    %esi,%esi
  459140:	lea    0x8(%r14),%r12
  459144:	callq  4155d0 <strtol@plt>
  459149:	xor    %edx,%edx
  45914b:	test   %eax,%eax
  45914d:	mov    %eax,0xc8(%rsp)
  459154:	jns    4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  459156:	mov    0x8(%r14),%rdx
  45915a:	mov    (%r15),%rdi
  45915d:	lea    0x1642f(%rip),%rsi        # 46f593 <_fini+0x1208f>
  459164:	xor    %eax,%eax
  459166:	callq  413c40 <BIO_printf@plt>
  45916b:	mov    $0x1,%edx
  459170:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  459175:	nopl   (%rax)
  459178:	lea    0x1642e(%rip),%rdi        # 46f5ad <_fini+0x120a9>
  45917f:	mov    $0x5,%ecx
  459184:	mov    %rax,%rsi
  459187:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  459189:	jne    459238 <X509_get0_pubkey_bitstr@plt+0x42868>
  45918f:	mov    0x8(%r14),%rdi
  459193:	test   %rdi,%rdi
  459196:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45919c:	mov    0x20(%rsp),%rdx
  4591a1:	mov    0x10(%rsp),%r8
  4591a6:	lea    0x178(%rsp),%rsi
  4591ae:	mov    0x18(%rsp),%rcx
  4591b3:	lea    0x8(%r14),%r12
  4591b7:	callq  413650 <OCSP_parse_url@plt>
  4591bc:	xor    %edx,%edx
  4591be:	test   %eax,%eax
  4591c0:	jne    4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  4591c6:	mov    (%r15),%rdi
  4591c9:	lea    0xf345(%rip),%rsi        # 468515 <_fini+0xb011>
  4591d0:	callq  413c40 <BIO_printf@plt>
  4591d5:	mov    $0x1,%edx
  4591da:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  4591df:	nop
  4591e0:	lea    0xf217(%rip),%rdi        # 4683fe <_fini+0xaefa>
  4591e7:	mov    $0x6,%ecx
  4591ec:	mov    %rax,%rsi
  4591ef:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  4591f1:	je     459b30 <X509_get0_pubkey_bitstr@plt+0x43160>
  4591f7:	lea    0x163b4(%rip),%rdi        # 46f5b2 <_fini+0x120ae>
  4591fe:	mov    $0x8,%ecx
  459203:	mov    %rax,%rsi
  459206:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  459208:	jne    45a210 <X509_get0_pubkey_bitstr@plt+0x43840>
  45920e:	mov    0x8(%r14),%rdi
  459212:	test   %rdi,%rdi
  459215:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  459217:	mov    0x10(%r14),%rsi
  45921b:	test   %rsi,%rsi
  45921e:	jne    45a363 <X509_get0_pubkey_bitstr@plt+0x43993>
  459224:	nopl   0x0(%rax)
  459228:	mov    %r14,%r12
  45922b:	mov    $0x1,%edx
  459230:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  459235:	nopl   (%rax)
  459238:	lea    0xf6a3(%rip),%rdi        # 4688e2 <_fini+0xb3de>
  45923f:	mov    $0x6,%ecx
  459244:	mov    %rax,%rsi
  459247:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  459249:	jne    4591e0 <X509_get0_pubkey_bitstr@plt+0x42810>
  45924b:	mov    0x8(%r14),%rax
  45924f:	test   %rax,%rax
  459252:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  459254:	lea    0x8(%r14),%r12
  459258:	mov    %rax,0x178(%rsp)
  459260:	xor    %edx,%edx
  459262:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  459267:	mov    $0xffffffff,%eax
  45926c:	movl   $0x0,0x40(%rsp)
  459274:	movq   $0x0,0x38(%rsp)
  45927d:	mov    %eax,0x100(%rsp)
  459284:	mov    %eax,0xcc(%rsp)
  45928b:	mov    $0xffffffffffffffff,%rax
  459292:	movq   $0x0,0xc0(%rsp)
  45929e:	movl   $0x0,0x130(%rsp)
  4592a9:	xor    %edx,%edx
  4592ab:	movq   $0x0,0x108(%rsp)
  4592b7:	movq   $0x0,0x118(%rsp)
  4592c3:	xor    %ebp,%ebp
  4592c5:	movq   $0x0,0xf8(%rsp)
  4592d1:	movq   $0x0,0x30(%rsp)
  4592da:	xor    %r13d,%r13d
  4592dd:	movq   $0x0,0x128(%rsp)
  4592e9:	movq   $0x0,0xf0(%rsp)
  4592f5:	movq   $0x0,0x150(%rsp)
  459301:	movq   $0x0,0x148(%rsp)
  45930d:	mov    %rax,0x140(%rsp)
  459315:	movq   $0x12c,0x138(%rsp)
  459321:	movl   $0x0,0x104(%rsp)
  45932c:	movl   $0x0,0xec(%rsp)
  459337:	mov    %eax,0xc8(%rsp)
  45933e:	movq   $0x0,0x98(%rsp)
  45934a:	movq   $0x0,0x88(%rsp)
  459356:	movl   $0x0,0x134(%rsp)
  459361:	movl   $0x1,0xe8(%rsp)
  45936c:	movq   $0x0,0x28(%rsp)
  459375:	movq   $0x0,0xa8(%rsp)
  459381:	movq   $0x0,0xd0(%rsp)
  45938d:	movq   $0x0,0xe0(%rsp)
  459399:	movq   $0x0,0xd8(%rsp)
  4593a5:	movq   $0x0,0x120(%rsp)
  4593b1:	movq   $0x0,0x48(%rsp)
  4593ba:	nopw   0x0(%rax,%rax,1)
  4593c0:	cmpq   $0x0,0x198(%rsp)
  4593c9:	je     459df0 <X509_get0_pubkey_bitstr@plt+0x43420>
  4593cf:	test   %edx,%edx
  4593d1:	jne    459e28 <X509_get0_pubkey_bitstr@plt+0x43458>
  4593d7:	test   %rbp,%rbp
  4593da:	je     45a395 <X509_get0_pubkey_bitstr@plt+0x439c5>
  4593e0:	lea    0xa231(%rip),%rsi        # 463618 <_fini+0x6114>
  4593e7:	mov    %rbp,%rdi
  4593ea:	callq  412ba0 <BIO_new_file@plt>
  4593ef:	mov    %rax,0x68(%rsp)
  4593f4:	cmpq   $0x0,0x68(%rsp)
  4593fa:	je     45a5b8 <X509_get0_pubkey_bitstr@plt+0x43be8>
  459400:	cmpq   $0x0,0x198(%rsp)
  459409:	je     45a402 <X509_get0_pubkey_bitstr@plt+0x43a32>
  45940f:	movq   $0x0,0x58(%rsp)
  459418:	mov    0x28(%rsp),%rsi
  45941d:	test   %rsi,%rsi
  459420:	je     45a58c <X509_get0_pubkey_bitstr@plt+0x43bbc>
  459426:	mov    (%r15),%rdi
  459429:	test   %r13,%r13
  45942c:	lea    0x163ed(%rip),%r9        # 46f820 <_fini+0x1231c>
  459433:	cmove  %rsi,%r13
  459437:	mov    $0x3,%edx
  45943c:	xor    %r8d,%r8d
  45943f:	xor    %ecx,%ecx
  459441:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  459446:	test   %rax,%rax
  459449:	mov    %rax,0x70(%rsp)
  45944e:	je     45a4b7 <X509_get0_pubkey_bitstr@plt+0x43ae7>
  459454:	mov    0x38(%rsp),%rsi
  459459:	mov    (%r15),%rdi
  45945c:	lea    0x7d0c(%rip),%r9        # 46116f <_fini+0x3c6b>
  459463:	xor    %r8d,%r8d
  459466:	xor    %ecx,%ecx
  459468:	mov    $0x3,%edx
  45946d:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  459472:	mov    0x30(%rsp),%rsi
  459477:	mov    %rax,0x10(%rsp)
  45947c:	test   %rsi,%rsi
  45947f:	je     45a514 <X509_get0_pubkey_bitstr@plt+0x43b44>
  459485:	mov    (%r15),%rdi
  459488:	lea    0x163a7(%rip),%r9        # 46f836 <_fini+0x12332>
  45948f:	xor    %r8d,%r8d
  459492:	xor    %ecx,%ecx
  459494:	mov    $0x3,%edx
  459499:	callq  446530 <X509_get0_pubkey_bitstr@plt+0x2fb60>
  45949e:	test   %rax,%rax
  4594a1:	mov    %rax,0x158(%rsp)
  4594a9:	je     45a56d <X509_get0_pubkey_bitstr@plt+0x43b9d>
  4594af:	lea    0x1639d(%rip),%rax        # 46f853 <_fini+0x1234f>
  4594b6:	xor    %r9d,%r9d
  4594b9:	xor    %r8d,%r8d
  4594bc:	xor    %ecx,%ecx
  4594be:	mov    $0x3,%edx
  4594c3:	mov    %r13,%rsi
  4594c6:	mov    %rax,(%rsp)
  4594ca:	mov    (%r15),%rdi
  4594cd:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  4594d2:	test   %rax,%rax
  4594d5:	mov    %rax,0x78(%rsp)
  4594da:	je     45a531 <X509_get0_pubkey_bitstr@plt+0x43b61>
  4594e0:	cmpq   $0x0,0x58(%rsp)
  4594e6:	je     4594f9 <X509_get0_pubkey_bitstr@plt+0x42b29>
  4594e8:	mov    (%r15),%rdi
  4594eb:	lea    0x16fde(%rip),%rsi        # 4704d0 <_fini+0x12fcc>
  4594f2:	xor    %eax,%eax
  4594f4:	callq  413c40 <BIO_printf@plt>
  4594f9:	mov    0x40(%rsp),%edx
  4594fd:	mov    0x100(%rsp),%ebx
  459504:	mov    $0x3c,%r11d
  45950a:	xor    %r14d,%r14d
  45950d:	movq   $0x0,0x40(%rsp)
  459516:	movq   $0x0,0x80(%rsp)
  459522:	movq   $0x0,0x38(%rsp)
  45952b:	imul   $0x15180,%ebx,%eax
  459531:	xor    %ebx,%ebx
  459533:	imul   %r11d,%edx
  459537:	add    %edx,%eax
  459539:	cltq   
  45953b:	mov    %rax,0x168(%rsp)
  459543:	lea    0x1b0(%rsp),%rax
  45954b:	mov    %rax,0x28(%rsp)
  459550:	lea    0x1a8(%rsp),%rax
  459558:	mov    %rax,0xb0(%rsp)
  459560:	lea    0x1d0(%rsp),%rax
  459568:	mov    %rax,0xb8(%rsp)
  459570:	lea    0x1c8(%rsp),%rax
  459578:	mov    %rax,0x160(%rsp)
  459580:	mov    0x58(%rsp),%rdx
  459585:	test   %rdx,%rdx
  459588:	je     459ad2 <X509_get0_pubkey_bitstr@plt+0x43102>
  45958e:	lea    0x1a0(%rsp),%rsi
  459596:	lea    0x198(%rsp),%rdi
  45959e:	callq  458670 <X509_get0_pubkey_bitstr@plt+0x41ca0>
  4595a3:	test   %eax,%eax
  4595a5:	je     459ca0 <X509_get0_pubkey_bitstr@plt+0x432d0>
  4595ab:	mov    0x198(%rsp),%rdi
  4595b3:	test   %rdi,%rdi
  4595b6:	je     45a3e0 <X509_get0_pubkey_bitstr@plt+0x43a10>
  4595bc:	mov    0xe8(%rsp),%r9d
  4595c4:	test   %r9d,%r9d
  4595c7:	jne    459d08 <X509_get0_pubkey_bitstr@plt+0x43338>
  4595cd:	mov    0xd0(%rsp),%rsi
  4595d5:	test   %rsi,%rsi
  4595d8:	je     4596b5 <X509_get0_pubkey_bitstr@plt+0x42ce5>
  4595de:	mov    0xa8(%rsp),%rax
  4595e6:	mov    (%r15),%rdi
  4595e9:	lea    0x1490c(%rip),%r9        # 46defc <_fini+0x109f8>
  4595f0:	mov    $0x3,%edx
  4595f5:	test   %rax,%rax
  4595f8:	cmove  %rsi,%rax
  4595fc:	xor    %r8d,%r8d
  4595ff:	xor    %ecx,%ecx
  459601:	mov    %rax,0xa8(%rsp)
  459609:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  45960e:	test   %rax,%rax
  459611:	mov    %rax,0x38(%rsp)
  459616:	je     45a5d0 <X509_get0_pubkey_bitstr@plt+0x43c00>
  45961c:	mov    0xf0(%rsp),%rsi
  459624:	test   %rsi,%rsi
  459627:	je     459650 <X509_get0_pubkey_bitstr@plt+0x42c80>
  459629:	mov    (%r15),%rdi
  45962c:	lea    0x16236(%rip),%r9        # 46f869 <_fini+0x12365>
  459633:	xor    %r8d,%r8d
  459636:	xor    %ecx,%ecx
  459638:	mov    $0x3,%edx
  45963d:	callq  446530 <X509_get0_pubkey_bitstr@plt+0x2fb60>
  459642:	test   %rax,%rax
  459645:	mov    %rax,0x40(%rsp)
  45964a:	je     459ca0 <X509_get0_pubkey_bitstr@plt+0x432d0>
  459650:	lea    0x16226(%rip),%rax        # 46f87d <_fini+0x12379>
  459657:	mov    0xa8(%rsp),%rsi
  45965f:	xor    %r9d,%r9d
  459662:	xor    %r8d,%r8d
  459665:	xor    %ecx,%ecx
  459667:	mov    $0x3,%edx
  45966c:	mov    %rax,(%rsp)
  459670:	mov    (%r15),%rdi
  459673:	callq  445f10 <X509_get0_pubkey_bitstr@plt+0x2f540>
  459678:	test   %rax,%rax
  45967b:	mov    %rax,0x80(%rsp)
  459683:	je     459ca0 <X509_get0_pubkey_bitstr@plt+0x432d0>
  459689:	mov    0xf8(%rsp),%r9
  459691:	mov    0x40(%rsp),%r8
  459696:	xor    %ecx,%ecx
  459698:	mov    0x38(%rsp),%rsi
  45969d:	mov    0x198(%rsp),%rdi
  4596a5:	mov    %rax,%rdx
  4596a8:	callq  4132d0 <OCSP_request_sign@plt>
  4596ad:	test   %eax,%eax
  4596af:	je     45a60f <X509_get0_pubkey_bitstr@plt+0x43c3f>
  4596b5:	mov    0xec(%rsp),%r8d
  4596bd:	test   %r8d,%r8d
  4596c0:	je     4596db <X509_get0_pubkey_bitstr@plt+0x42d0b>
  4596c2:	mov    0x198(%rsp),%rsi
  4596ca:	test   %rsi,%rsi
  4596cd:	je     4596db <X509_get0_pubkey_bitstr@plt+0x42d0b>
  4596cf:	mov    0x68(%rsp),%rdi
  4596d4:	xor    %edx,%edx
  4596d6:	callq  413440 <OCSP_REQUEST_print@plt>
  4596db:	mov    0xd8(%rsp),%rdi
  4596e3:	test   %rdi,%rdi
  4596e6:	je     45971f <X509_get0_pubkey_bitstr@plt+0x42d4f>
  4596e8:	lea    0x46bc(%rip),%rsi        # 45ddab <_fini+0x8a7>
  4596ef:	callq  412ba0 <BIO_new_file@plt>
  4596f4:	test   %rax,%rax
  4596f7:	mov    %rax,%rbp
  4596fa:	je     45a7b9 <X509_get0_pubkey_bitstr@plt+0x43de9>
  459700:	mov    0x21c849(%rip),%rdi        # 675f50 <_fini+0x218a4c>
  459707:	mov    0x198(%rsp),%rdx
  45970f:	mov    %rax,%rsi
  459712:	callq  413c70 <ASN1_i2d_bio@plt>
  459717:	mov    %rbp,%rdi
  45971a:	callq  413960 <BIO_free@plt>
  45971f:	cmpq   $0x0,0xc0(%rsp)
  459728:	je     459d80 <X509_get0_pubkey_bitstr@plt+0x433b0>
  45972e:	cmpq   $0x0,0x70(%rsp)
  459734:	je     45a525 <X509_get0_pubkey_bitstr@plt+0x43b55>
  45973a:	cmpq   $0x0,0x78(%rsp)
  459740:	je     45a525 <X509_get0_pubkey_bitstr@plt+0x43b55>
  459746:	cmpq   $0x0,0x10(%rsp)
  45974c:	je     45a525 <X509_get0_pubkey_bitstr@plt+0x43b55>
  459752:	test   %r14,%r14
  459755:	je     459c70 <X509_get0_pubkey_bitstr@plt+0x432a0>
  45975b:	mov    0x198(%rsp),%rax
  459763:	mov    %rax,%rdi
  459766:	mov    %rax,0x18(%rsp)
  45976b:	callq  414840 <OCSP_request_onereq_count@plt>
  459770:	test   %eax,%eax
  459772:	mov    %eax,0x20(%rsp)
  459776:	jle    45a1d8 <X509_get0_pubkey_bitstr@plt+0x43808>
  45977c:	callq  416090 <OCSP_BASICRESP_new@plt>
  459781:	xor    %esi,%esi
  459783:	xor    %edi,%edi
  459785:	mov    %rax,0x48(%rsp)
  45978a:	callq  4164f0 <X509_gmtime_adj@plt>
  45978f:	cmpl   $0xffffffff,0x100(%rsp)
  459797:	mov    %rax,0x60(%rsp)
  45979c:	movq   $0x0,0x50(%rsp)
  4597a5:	je     4597bb <X509_get0_pubkey_bitstr@plt+0x42deb>
  4597a7:	mov    0x168(%rsp),%rsi
  4597af:	xor    %edi,%edi
  4597b1:	callq  4164f0 <X509_gmtime_adj@plt>
  4597b6:	mov    %rax,0x50(%rsp)
  4597bb:	lea    0x1b8(%rsp),%rax
  4597c3:	xor    %r12d,%r12d
  4597c6:	xor    %ebp,%ebp
  4597c8:	mov    %rax,0x110(%rsp)
  4597d0:	jmpq   4598d0 <X509_get0_pubkey_bitstr@plt+0x42f00>
  4597d5:	nopl   (%rax)
  4597d8:	mov    0xb0(%rsp),%rcx
  4597e0:	xor    %edx,%edx
  4597e2:	xor    %esi,%esi
  4597e4:	xor    %edi,%edi
  4597e6:	mov    %rbx,%r8
  4597e9:	callq  415a80 <OCSP_id_get0_info@plt>
  4597ee:	mov    0x1a8(%rsp),%rdi
  4597f6:	xor    %esi,%esi
  4597f8:	movq   $0x0,0x1d0(%rsp)
  459804:	movq   $0x0,0x1d8(%rsp)
  459810:	movq   $0x0,0x1e0(%rsp)
  45981c:	movq   $0x0,0x1e8(%rsp)
  459828:	movq   $0x0,0x1f0(%rsp)
  459834:	movq   $0x0,0x1f8(%rsp)
  459840:	callq  412f90 <ASN1_INTEGER_to_BN@plt>
  459845:	test   %rax,%rax
  459848:	mov    %rax,%r13
  45984b:	je     459d50 <X509_get0_pubkey_bitstr@plt+0x43380>
  459851:	mov    0x8(%r13),%edi
  459855:	test   %edi,%edi
  459857:	je     459b50 <X509_get0_pubkey_bitstr@plt+0x43180>
  45985d:	mov    %r13,%rdi
  459860:	callq  414930 <BN_bn2hex@plt>
  459865:	mov    %rax,%r8
  459868:	mov    %r13,%rdi
  45986b:	mov    %r8,0x1e8(%rsp)
  459873:	mov    %r8,0x30(%rsp)
  459878:	callq  4138e0 <BN_free@plt>
  45987d:	mov    0x8(%r14),%rdi
  459881:	mov    0xb8(%rsp),%rdx
  459889:	mov    $0x3,%esi
  45988e:	callq  413420 <TXT_DB_get_by_index@plt>
  459893:	mov    0x30(%rsp),%r8
  459898:	mov    %rax,%r13
  45989b:	mov    %r8,%rdi
  45989e:	callq  415020 <CRYPTO_free@plt>
  4598a3:	test   %r13,%r13
  4598a6:	je     459954 <X509_get0_pubkey_bitstr@plt+0x42f84>
  4598ac:	mov    0x0(%r13),%rax
  4598b0:	movzbl (%rax),%eax
  4598b3:	cmp    $0x56,%al
  4598b5:	je     459b68 <X509_get0_pubkey_bitstr@plt+0x43198>
  4598bb:	cmp    $0x52,%al
  4598bd:	je     459b90 <X509_get0_pubkey_bitstr@plt+0x431c0>
  4598c3:	add    $0x1,%ebp
  4598c6:	cmp    0x20(%rsp),%ebp
  4598ca:	je     459986 <X509_get0_pubkey_bitstr@plt+0x42fb6>
  4598d0:	mov    0x18(%rsp),%rdi
  4598d5:	mov    %ebp,%esi
  4598d7:	callq  414d80 <OCSP_request_onereq_get0@plt>
  4598dc:	mov    %rax,%rdi
  4598df:	callq  4164b0 <OCSP_onereq_get0_id@plt>
  4598e4:	mov    0x28(%rsp),%rsi
  4598e9:	xor    %ecx,%ecx
  4598eb:	xor    %edx,%edx
  4598ed:	mov    %rax,%r8
  4598f0:	xor    %edi,%edi
  4598f2:	mov    %rax,%rbx
  4598f5:	callq  415a80 <OCSP_id_get0_info@plt>
  4598fa:	mov    0x1b0(%rsp),%rdi
  459902:	callq  4167f0 <OBJ_obj2nid@plt>
  459907:	mov    %eax,%edi
  459909:	callq  415b30 <OBJ_nid2sn@plt>
  45990e:	mov    %rax,%rdi
  459911:	callq  416720 <EVP_get_digestbyname@plt>
  459916:	test   %rax,%rax
  459919:	mov    %rax,%r13
  45991c:	je     459d20 <X509_get0_pubkey_bitstr@plt+0x43350>
  459922:	test   %r12,%r12
  459925:	je     45992f <X509_get0_pubkey_bitstr@plt+0x42f5f>
  459927:	mov    %r12,%rdi
  45992a:	callq  412a80 <OCSP_CERTID_free@plt>
  45992f:	mov    0x10(%rsp),%rdx
  459934:	xor    %esi,%esi
  459936:	mov    %r13,%rdi
  459939:	callq  414d70 <OCSP_cert_to_id@plt>
  45993e:	mov    %rbx,%rsi
  459941:	mov    %rax,%rdi
  459944:	mov    %rax,%r12
  459947:	callq  413bd0 <OCSP_id_issuer_cmp@plt>
  45994c:	test   %eax,%eax
  45994e:	je     4597d8 <X509_get0_pubkey_bitstr@plt+0x42e08>
  459954:	mov    0x50(%rsp),%rax
  459959:	mov    0x60(%rsp),%r9
  45995e:	xor    %r8d,%r8d
  459961:	mov    0x48(%rsp),%rdi
  459966:	xor    %ecx,%ecx
  459968:	mov    $0x2,%edx
  45996d:	mov    %rbx,%rsi
  459970:	add    $0x1,%ebp
  459973:	mov    %rax,(%rsp)
  459977:	callq  4156a0 <OCSP_basic_add1_status@plt>
  45997c:	cmp    0x20(%rsp),%ebp
  459980:	jne    4598d0 <X509_get0_pubkey_bitstr@plt+0x42f00>
  459986:	mov    0x48(%rsp),%rbx
  45998b:	mov    0x18(%rsp),%rsi
  459990:	mov    %rbx,%rdi
  459993:	callq  415c80 <OCSP_copy_nonce@plt>
  459998:	mov    0x108(%rsp),%r9
  4599a0:	mov    0x158(%rsp),%r8
  4599a8:	mov    %rbx,%rdi
  4599ab:	mov    0x78(%rsp),%rdx
  4599b0:	mov    0x70(%rsp),%rsi
  4599b5:	xor    %ecx,%ecx
  4599b7:	callq  414950 <OCSP_basic_sign@plt>
  4599bc:	mov    %rbx,%rsi
  4599bf:	xor    %edi,%edi
  4599c1:	callq  413cf0 <OCSP_response_create@plt>
  4599c6:	mov    %rax,%rbx
  4599c9:	mov    0x60(%rsp),%rdi
  4599ce:	callq  4155b0 <ASN1_TIME_free@plt>
  4599d3:	mov    0x50(%rsp),%rdi
  4599d8:	callq  4155b0 <ASN1_TIME_free@plt>
  4599dd:	mov    %r12,%rdi
  4599e0:	callq  412a80 <OCSP_CERTID_free@plt>
  4599e5:	mov    0x48(%rsp),%rdi
  4599ea:	callq  414760 <OCSP_BASICRESP_free@plt>
  4599ef:	mov    0x1a0(%rsp),%rdi
  4599f7:	test   %rdi,%rdi
  4599fa:	je     459a04 <X509_get0_pubkey_bitstr@plt+0x43034>
  4599fc:	mov    %rbx,%rsi
  4599ff:	callq  458550 <X509_get0_pubkey_bitstr@plt+0x41b80>
  459a04:	mov    0xe0(%rsp),%rdi
  459a0c:	test   %rdi,%rdi
  459a0f:	je     459a43 <X509_get0_pubkey_bitstr@plt+0x43073>
  459a11:	lea    0x4393(%rip),%rsi        # 45ddab <_fini+0x8a7>
  459a18:	callq  412ba0 <BIO_new_file@plt>
  459a1d:	test   %rax,%rax
  459a20:	mov    %rax,%rbp
  459a23:	je     45a5df <X509_get0_pubkey_bitstr@plt+0x43c0f>
  459a29:	mov    0x21c498(%rip),%rdi        # 675ec8 <_fini+0x2189c4>
  459a30:	mov    %rbx,%rdx
  459a33:	mov    %rax,%rsi
  459a36:	callq  413c70 <ASN1_i2d_bio@plt>
  459a3b:	mov    %rbp,%rdi
  459a3e:	callq  413960 <BIO_free@plt>
  459a43:	mov    %rbx,%rdi
  459a46:	callq  4141d0 <OCSP_response_status@plt>
  459a4b:	test   %eax,%eax
  459a4d:	mov    %eax,%ebp
  459a4f:	jne    459cc0 <X509_get0_pubkey_bitstr@plt+0x432f0>
  459a55:	mov    0x104(%rsp),%ecx
  459a5c:	test   %ecx,%ecx
  459a5e:	jne    459d38 <X509_get0_pubkey_bitstr@plt+0x43368>
  459a64:	mov    0x1a0(%rsp),%rdi
  459a6c:	test   %rdi,%rdi
  459a6f:	je     45a6d5 <X509_get0_pubkey_bitstr@plt+0x43d05>
  459a75:	mov    0xcc(%rsp),%edx
  459a7c:	xor    %eax,%eax
  459a7e:	test   %edx,%edx
  459a80:	setg   %al
  459a83:	sub    %eax,0xcc(%rsp)
  459a8a:	je     459ca0 <X509_get0_pubkey_bitstr@plt+0x432d0>
  459a90:	callq  416570 <BIO_free_all@plt>
  459a95:	mov    0x198(%rsp),%rdi
  459a9d:	movq   $0x0,0x1a0(%rsp)
  459aa9:	callq  4149b0 <OCSP_REQUEST_free@plt>
  459aae:	mov    %rbx,%rdi
  459ab1:	movq   $0x0,0x198(%rsp)
  459abd:	xor    %ebx,%ebx
  459abf:	callq  412e30 <OCSP_RESPONSE_free@plt>
  459ac4:	mov    0x58(%rsp),%rdx
  459ac9:	test   %rdx,%rdx
  459acc:	jne    45958e <X509_get0_pubkey_bitstr@plt+0x42bbe>
  459ad2:	mov    0x198(%rsp),%rdi
  459ada:	test   %rdi,%rdi
  459add:	jne    4595bc <X509_get0_pubkey_bitstr@plt+0x42bec>
  459ae3:	cmpq   $0x0,0xd8(%rsp)
  459aec:	jne    459b20 <X509_get0_pubkey_bitstr@plt+0x43150>
  459aee:	cmpq   $0x0,0xd0(%rsp)
  459af7:	jne    459b20 <X509_get0_pubkey_bitstr@plt+0x43150>
  459af9:	cmpq   $0x0,0x178(%rsp)
  459b02:	jne    459b20 <X509_get0_pubkey_bitstr@plt+0x43150>
  459b04:	mov    0xe8(%rsp),%r10d
  459b0c:	test   %r10d,%r10d
  459b0f:	jne    459b20 <X509_get0_pubkey_bitstr@plt+0x43150>
  459b11:	cmpq   $0x0,0xc0(%rsp)
  459b1a:	je     4595cd <X509_get0_pubkey_bitstr@plt+0x42bfd>
  459b20:	lea    0x169d1(%rip),%rsi        # 4704f8 <_fini+0x12ff4>
  459b27:	jmpq   45a354 <X509_get0_pubkey_bitstr@plt+0x43984>
  459b2c:	nopl   0x0(%rax)
  459b30:	mov    0x8(%r14),%rax
  459b34:	test   %rax,%rax
  459b37:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  459b3d:	lea    0x8(%r14),%r12
  459b41:	mov    %rax,0x180(%rsp)
  459b49:	xor    %edx,%edx
  459b4b:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  459b50:	lea    0xb040(%rip),%rdi        # 464b97 <_fini+0x7693>
  459b57:	callq  415630 <BUF_strdup@plt>
  459b5c:	mov    %rax,%r8
  459b5f:	jmpq   459868 <X509_get0_pubkey_bitstr@plt+0x42e98>
  459b64:	nopl   0x0(%rax)
  459b68:	mov    0x50(%rsp),%rax
  459b6d:	mov    0x60(%rsp),%r9
  459b72:	xor    %r8d,%r8d
  459b75:	mov    0x48(%rsp),%rdi
  459b7a:	xor    %ecx,%ecx
  459b7c:	xor    %edx,%edx
  459b7e:	mov    %rbx,%rsi
  459b81:	mov    %rax,(%rsp)
  459b85:	callq  4156a0 <OCSP_basic_add1_status@plt>
  459b8a:	jmpq   4598c3 <X509_get0_pubkey_bitstr@plt+0x42ef3>
  459b8f:	nop
  459b90:	movq   $0x0,0x1b8(%rsp)
  459b9c:	movq   $0x0,0x1c0(%rsp)
  459ba8:	lea    0x174(%rsp),%rsi
  459bb0:	movq   $0x0,0x1c8(%rsp)
  459bbc:	mov    0x160(%rsp),%rcx
  459bc4:	lea    0x1c0(%rsp),%rdi
  459bcc:	mov    0x10(%r13),%r8
  459bd0:	mov    0x110(%rsp),%rdx
  459bd8:	movl   $0xffffffff,0x174(%rsp)
  459be3:	callq  424fc0 <X509_get0_pubkey_bitstr@plt+0xe5f0>
  459be8:	mov    0x50(%rsp),%rax
  459bed:	mov    0x60(%rsp),%r9
  459bf2:	mov    $0x1,%edx
  459bf7:	mov    0x1c0(%rsp),%r8
  459bff:	mov    0x174(%rsp),%ecx
  459c06:	mov    %rbx,%rsi
  459c09:	mov    0x48(%rsp),%rdi
  459c0e:	mov    %rax,(%rsp)
  459c12:	callq  4156a0 <OCSP_basic_add1_status@plt>
  459c17:	mov    0x1c8(%rsp),%rdx
  459c1f:	test   %rdx,%rdx
  459c22:	je     45a2c0 <X509_get0_pubkey_bitstr@plt+0x438f0>
  459c28:	mov    %rax,%rdi
  459c2b:	xor    %r8d,%r8d
  459c2e:	xor    %ecx,%ecx
  459c30:	mov    $0x8e,%esi
  459c35:	callq  412ae0 <OCSP_SINGLERESP_add1_ext_i2d@plt>
  459c3a:	mov    0x1b8(%rsp),%rdi
  459c42:	callq  414230 <ASN1_OBJECT_free@plt>
  459c47:	mov    0x1c0(%rsp),%rdi
  459c4f:	callq  4155b0 <ASN1_TIME_free@plt>
  459c54:	mov    0x1c8(%rsp),%rdi
  459c5c:	callq  4133b0 <ASN1_GENERALIZEDTIME_free@plt>
  459c61:	jmpq   4598c3 <X509_get0_pubkey_bitstr@plt+0x42ef3>
  459c66:	nopw   %cs:0x0(%rax,%rax,1)
  459c70:	mov    0xc0(%rsp),%rdi
  459c78:	xor    %esi,%esi
  459c7a:	callq  447900 <X509_get0_pubkey_bitstr@plt+0x30f30>
  459c7f:	test   %rax,%rax
  459c82:	mov    %rax,%r14
  459c85:	je     459ca0 <X509_get0_pubkey_bitstr@plt+0x432d0>
  459c87:	mov    %rax,%rdi
  459c8a:	callq  447250 <X509_get0_pubkey_bitstr@plt+0x30880>
  459c8f:	test   %eax,%eax
  459c91:	jne    45975b <X509_get0_pubkey_bitstr@plt+0x42d8b>
  459c97:	nopw   0x0(%rax,%rax,1)
  459ca0:	mov    $0x1,%r12d
  459ca6:	movq   $0x0,0x18(%rsp)
  459caf:	xor    %r13d,%r13d
  459cb2:	xor    %ebp,%ebp
  459cb4:	jmpq   458da3 <X509_get0_pubkey_bitstr@plt+0x423d3>
  459cb9:	nopl   0x0(%rax)
  459cc0:	movslq %eax,%rdi
  459cc3:	callq  4164a0 <OCSP_response_status_str@plt>
  459cc8:	mov    0x68(%rsp),%rdi
  459ccd:	lea    0x15c16(%rip),%rsi        # 46f8ea <_fini+0x123e6>
  459cd4:	mov    %rax,%rdx
  459cd7:	mov    %ebp,%ecx
  459cd9:	xor    %eax,%eax
  459cdb:	callq  413c40 <BIO_printf@plt>
  459ce0:	mov    0x130(%rsp),%esi
  459ce7:	test   %esi,%esi
  459ce9:	jne    459580 <X509_get0_pubkey_bitstr@plt+0x42bb0>
  459cef:	xor    %r12d,%r12d
  459cf2:	movq   $0x0,0x18(%rsp)
  459cfb:	xor    %r13d,%r13d
  459cfe:	xor    %ebp,%ebp
  459d00:	jmpq   458da3 <X509_get0_pubkey_bitstr@plt+0x423d3>
  459d05:	nopl   (%rax)
  459d08:	mov    $0xffffffff,%edx
  459d0d:	xor    %esi,%esi
  459d0f:	callq  416830 <OCSP_request_add1_nonce@plt>
  459d14:	jmpq   4595cd <X509_get0_pubkey_bitstr@plt+0x42bfd>
  459d19:	nopl   0x0(%rax)
  459d20:	xor    %esi,%esi
  459d22:	mov    $0x2,%edi
  459d27:	callq  413cf0 <OCSP_response_create@plt>
  459d2c:	mov    %rax,%rbx
  459d2f:	jmpq   4599c9 <X509_get0_pubkey_bitstr@plt+0x42ff9>
  459d34:	nopl   0x0(%rax)
  459d38:	mov    0x68(%rsp),%rdi
  459d3d:	xor    %edx,%edx
  459d3f:	mov    %rbx,%rsi
  459d42:	callq  4131a0 <OCSP_RESPONSE_print@plt>
  459d47:	jmpq   459a64 <X509_get0_pubkey_bitstr@plt+0x43094>
  459d4c:	nopl   0x0(%rax)
  459d50:	lea    0x15b6c(%rip),%rdx        # 46f8c3 <_fini+0x123bf>
  459d57:	lea    0x15b68(%rip),%rdi        # 46f8c6 <_fini+0x123c2>
  459d5e:	mov    $0x48e,%esi
  459d63:	callq  4145b0 <OpenSSLDie@plt>
  459d68:	jmpq   459851 <X509_get0_pubkey_bitstr@plt+0x42e81>
  459d6d:	nopl   (%rax)
  459d70:	mov    $0x1,%edx
  459d75:	jmpq   4593c0 <X509_get0_pubkey_bitstr@plt+0x429f0>
  459d7a:	nopw   0x0(%rax,%rax,1)
  459d80:	test   %r14,%r14
  459d83:	jne    45975b <X509_get0_pubkey_bitstr@plt+0x42d8b>
  459d89:	mov    0x178(%rsp),%rdx
  459d91:	test   %rdx,%rdx
  459d94:	je     45a2f8 <X509_get0_pubkey_bitstr@plt+0x43928>
  459d9a:	mov    0xc8(%rsp),%eax
  459da1:	mov    0x170(%rsp),%r9d
  459da9:	mov    0x180(%rsp),%r8
  459db1:	mov    0x188(%rsp),%rcx
  459db9:	mov    0x198(%rsp),%rsi
  459dc1:	mov    %eax,0x8(%rsp)
  459dc5:	mov    0x190(%rsp),%rax
  459dcd:	mov    %rax,(%rsp)
  459dd1:	mov    (%r15),%rdi
  459dd4:	callq  458800 <X509_get0_pubkey_bitstr@plt+0x41e30>
  459dd9:	test   %rax,%rax
  459ddc:	mov    %rax,%rbx
  459ddf:	jne    459a04 <X509_get0_pubkey_bitstr@plt+0x43034>
  459de5:	jmpq   459ca0 <X509_get0_pubkey_bitstr@plt+0x432d0>
  459dea:	nopw   0x0(%rax,%rax,1)
  459df0:	cmpq   $0x0,0x48(%rsp)
  459df6:	jne    4593cf <X509_get0_pubkey_bitstr@plt+0x429ff>
  459dfc:	cmpq   $0x0,0x120(%rsp)
  459e05:	jne    4593cf <X509_get0_pubkey_bitstr@plt+0x429ff>
  459e0b:	cmpq   $0x0,0x180(%rsp)
  459e14:	je     459e28 <X509_get0_pubkey_bitstr@plt+0x43458>
  459e16:	cmpq   $0x0,0xc0(%rsp)
  459e1f:	jne    4593cf <X509_get0_pubkey_bitstr@plt+0x429ff>
  459e25:	nopl   (%rax)
  459e28:	mov    (%r15),%rdi
  459e2b:	lea    0x15976(%rip),%rsi        # 46f7a8 <_fini+0x122a4>
  459e32:	xor    %eax,%eax
  459e34:	callq  413c40 <BIO_printf@plt>
  459e39:	mov    (%r15),%rdi
  459e3c:	lea    0x15973(%rip),%rsi        # 46f7b6 <_fini+0x122b2>
  459e43:	xor    %eax,%eax
  459e45:	callq  413c40 <BIO_printf@plt>
  459e4a:	mov    (%r15),%rdi
  459e4d:	lea    0x3f01(%rip),%rsi        # 45dd55 <_fini+0x851>
  459e54:	xor    %eax,%eax
  459e56:	callq  413c40 <BIO_printf@plt>
  459e5b:	mov    (%r15),%rdi
  459e5e:	lea    0x15bdb(%rip),%rsi        # 46fa40 <_fini+0x1253c>
  459e65:	xor    %eax,%eax
  459e67:	callq  413c40 <BIO_printf@plt>
  459e6c:	mov    (%r15),%rdi
  459e6f:	lea    0x15bf2(%rip),%rsi        # 46fa68 <_fini+0x12564>
  459e76:	xor    %eax,%eax
  459e78:	callq  413c40 <BIO_printf@plt>
  459e7d:	mov    (%r15),%rdi
  459e80:	lea    0x15c09(%rip),%rsi        # 46fa90 <_fini+0x1258c>
  459e87:	xor    %eax,%eax
  459e89:	callq  413c40 <BIO_printf@plt>
  459e8e:	mov    (%r15),%rdi
  459e91:	lea    0x15c28(%rip),%rsi        # 46fac0 <_fini+0x125bc>
  459e98:	xor    %eax,%eax
  459e9a:	callq  413c40 <BIO_printf@plt>
  459e9f:	mov    (%r15),%rdi
  459ea2:	lea    0x15c47(%rip),%rsi        # 46faf0 <_fini+0x125ec>
  459ea9:	xor    %eax,%eax
  459eab:	callq  413c40 <BIO_printf@plt>
  459eb0:	mov    (%r15),%rdi
  459eb3:	lea    0x15c76(%rip),%rsi        # 46fb30 <_fini+0x1262c>
  459eba:	xor    %eax,%eax
  459ebc:	callq  413c40 <BIO_printf@plt>
  459ec1:	mov    (%r15),%rdi
  459ec4:	lea    0x15ca5(%rip),%rsi        # 46fb70 <_fini+0x1266c>
  459ecb:	xor    %eax,%eax
  459ecd:	callq  413c40 <BIO_printf@plt>
  459ed2:	mov    (%r15),%rdi
  459ed5:	lea    0x15ce4(%rip),%rsi        # 46fbc0 <_fini+0x126bc>
  459edc:	xor    %eax,%eax
  459ede:	callq  413c40 <BIO_printf@plt>
  459ee3:	mov    (%r15),%rdi
  459ee6:	lea    0x15d1b(%rip),%rsi        # 46fc08 <_fini+0x12704>
  459eed:	xor    %eax,%eax
  459eef:	callq  413c40 <BIO_printf@plt>
  459ef4:	mov    (%r15),%rdi
  459ef7:	lea    0x15d3a(%rip),%rsi        # 46fc38 <_fini+0x12734>
  459efe:	xor    %eax,%eax
  459f00:	callq  413c40 <BIO_printf@plt>
  459f05:	mov    (%r15),%rdi
  459f08:	lea    0x15d59(%rip),%rsi        # 46fc68 <_fini+0x12764>
  459f0f:	xor    %eax,%eax
  459f11:	callq  413c40 <BIO_printf@plt>
  459f16:	mov    (%r15),%rdi
  459f19:	lea    0x15d88(%rip),%rsi        # 46fca8 <_fini+0x127a4>
  459f20:	xor    %eax,%eax
  459f22:	callq  413c40 <BIO_printf@plt>
  459f27:	mov    (%r15),%rdi
  459f2a:	lea    0x15db7(%rip),%rsi        # 46fce8 <_fini+0x127e4>
  459f31:	xor    %eax,%eax
  459f33:	callq  413c40 <BIO_printf@plt>
  459f38:	mov    (%r15),%rdi
  459f3b:	lea    0x15de6(%rip),%rsi        # 46fd28 <_fini+0x12824>
  459f42:	xor    %eax,%eax
  459f44:	callq  413c40 <BIO_printf@plt>
  459f49:	mov    (%r15),%rdi
  459f4c:	lea    0x15e15(%rip),%rsi        # 46fd68 <_fini+0x12864>
  459f53:	xor    %eax,%eax
  459f55:	callq  413c40 <BIO_printf@plt>
  459f5a:	mov    (%r15),%rdi
  459f5d:	lea    0x15e44(%rip),%rsi        # 46fda8 <_fini+0x128a4>
  459f64:	xor    %eax,%eax
  459f66:	callq  413c40 <BIO_printf@plt>
  459f6b:	mov    (%r15),%rdi
  459f6e:	lea    0x15e63(%rip),%rsi        # 46fdd8 <_fini+0x128d4>
  459f75:	xor    %eax,%eax
  459f77:	callq  413c40 <BIO_printf@plt>
  459f7c:	mov    (%r15),%rdi
  459f7f:	lea    0x15e8a(%rip),%rsi        # 46fe10 <_fini+0x1290c>
  459f86:	xor    %eax,%eax
  459f88:	callq  413c40 <BIO_printf@plt>
  459f8d:	mov    (%r15),%rdi
  459f90:	lea    0x15ea1(%rip),%rsi        # 46fe38 <_fini+0x12934>
  459f97:	xor    %eax,%eax
  459f99:	callq  413c40 <BIO_printf@plt>
  459f9e:	mov    (%r15),%rdi
  459fa1:	lea    0x15ec8(%rip),%rsi        # 46fe70 <_fini+0x1296c>
  459fa8:	xor    %eax,%eax
  459faa:	callq  413c40 <BIO_printf@plt>
  459faf:	mov    (%r15),%rdi
  459fb2:	lea    0x15ee7(%rip),%rsi        # 46fea0 <_fini+0x1299c>
  459fb9:	xor    %eax,%eax
  459fbb:	callq  413c40 <BIO_printf@plt>
  459fc0:	mov    (%r15),%rdi
  459fc3:	lea    0x15f0e(%rip),%rsi        # 46fed8 <_fini+0x129d4>
  459fca:	xor    %eax,%eax
  459fcc:	callq  413c40 <BIO_printf@plt>
  459fd1:	mov    (%r15),%rdi
  459fd4:	lea    0x15f2d(%rip),%rsi        # 46ff08 <_fini+0x12a04>
  459fdb:	xor    %eax,%eax
  459fdd:	callq  413c40 <BIO_printf@plt>
  459fe2:	mov    (%r15),%rdi
  459fe5:	lea    0x15f74(%rip),%rsi        # 46ff60 <_fini+0x12a5c>
  459fec:	xor    %eax,%eax
  459fee:	callq  413c40 <BIO_printf@plt>
  459ff3:	mov    (%r15),%rdi
  459ff6:	lea    0x15f93(%rip),%rsi        # 46ff90 <_fini+0x12a8c>
  459ffd:	xor    %eax,%eax
  459fff:	callq  413c40 <BIO_printf@plt>
  45a004:	mov    (%r15),%rdi
  45a007:	lea    0x15fc2(%rip),%rsi        # 46ffd0 <_fini+0x12acc>
  45a00e:	xor    %eax,%eax
  45a010:	callq  413c40 <BIO_printf@plt>
  45a015:	mov    (%r15),%rdi
  45a018:	lea    0x15fe9(%rip),%rsi        # 470008 <_fini+0x12b04>
  45a01f:	xor    %eax,%eax
  45a021:	callq  413c40 <BIO_printf@plt>
  45a026:	mov    (%r15),%rdi
  45a029:	lea    0x16010(%rip),%rsi        # 470040 <_fini+0x12b3c>
  45a030:	xor    %eax,%eax
  45a032:	callq  413c40 <BIO_printf@plt>
  45a037:	mov    (%r15),%rdi
  45a03a:	lea    0x16047(%rip),%rsi        # 470088 <_fini+0x12b84>
  45a041:	xor    %eax,%eax
  45a043:	callq  413c40 <BIO_printf@plt>
  45a048:	mov    (%r15),%rdi
  45a04b:	lea    0x16076(%rip),%rsi        # 4700c8 <_fini+0x12bc4>
  45a052:	xor    %eax,%eax
  45a054:	callq  413c40 <BIO_printf@plt>
  45a059:	mov    (%r15),%rdi
  45a05c:	lea    0x160b5(%rip),%rsi        # 470118 <_fini+0x12c14>
  45a063:	xor    %eax,%eax
  45a065:	callq  413c40 <BIO_printf@plt>
  45a06a:	mov    (%r15),%rdi
  45a06d:	lea    0x160dc(%rip),%rsi        # 470150 <_fini+0x12c4c>
  45a074:	xor    %eax,%eax
  45a076:	callq  413c40 <BIO_printf@plt>
  45a07b:	mov    (%r15),%rdi
  45a07e:	lea    0x16103(%rip),%rsi        # 470188 <_fini+0x12c84>
  45a085:	xor    %eax,%eax
  45a087:	callq  413c40 <BIO_printf@plt>
  45a08c:	mov    (%r15),%rdi
  45a08f:	lea    0x16122(%rip),%rsi        # 4701b8 <_fini+0x12cb4>
  45a096:	xor    %eax,%eax
  45a098:	callq  413c40 <BIO_printf@plt>
  45a09d:	mov    (%r15),%rdi
  45a0a0:	lea    0x16159(%rip),%rsi        # 470200 <_fini+0x12cfc>
  45a0a7:	xor    %eax,%eax
  45a0a9:	callq  413c40 <BIO_printf@plt>
  45a0ae:	mov    (%r15),%rdi
  45a0b1:	lea    0x16170(%rip),%rsi        # 470228 <_fini+0x12d24>
  45a0b8:	xor    %eax,%eax
  45a0ba:	callq  413c40 <BIO_printf@plt>
  45a0bf:	mov    (%r15),%rdi
  45a0c2:	lea    0x15703(%rip),%rsi        # 46f7cc <_fini+0x122c8>
  45a0c9:	xor    %eax,%eax
  45a0cb:	callq  413c40 <BIO_printf@plt>
  45a0d0:	mov    (%r15),%rdi
  45a0d3:	lea    0x1617e(%rip),%rsi        # 470258 <_fini+0x12d54>
  45a0da:	xor    %eax,%eax
  45a0dc:	callq  413c40 <BIO_printf@plt>
  45a0e1:	mov    (%r15),%rdi
  45a0e4:	lea    0x161ad(%rip),%rsi        # 470298 <_fini+0x12d94>
  45a0eb:	xor    %eax,%eax
  45a0ed:	callq  413c40 <BIO_printf@plt>
  45a0f2:	mov    (%r15),%rdi
  45a0f5:	lea    0x161d4(%rip),%rsi        # 4702d0 <_fini+0x12dcc>
  45a0fc:	xor    %eax,%eax
  45a0fe:	callq  413c40 <BIO_printf@plt>
  45a103:	mov    (%r15),%rdi
  45a106:	lea    0x16203(%rip),%rsi        # 470310 <_fini+0x12e0c>
  45a10d:	xor    %eax,%eax
  45a10f:	callq  413c40 <BIO_printf@plt>
  45a114:	mov    (%r15),%rdi
  45a117:	lea    0x16232(%rip),%rsi        # 470350 <_fini+0x12e4c>
  45a11e:	xor    %eax,%eax
  45a120:	callq  413c40 <BIO_printf@plt>
  45a125:	mov    (%r15),%rdi
  45a128:	lea    0x16259(%rip),%rsi        # 470388 <_fini+0x12e84>
  45a12f:	xor    %eax,%eax
  45a131:	callq  413c40 <BIO_printf@plt>
  45a136:	mov    (%r15),%rdi
  45a139:	lea    0x16278(%rip),%rsi        # 4703b8 <_fini+0x12eb4>
  45a140:	xor    %eax,%eax
  45a142:	callq  413c40 <BIO_printf@plt>
  45a147:	mov    (%r15),%rdi
  45a14a:	lea    0x162af(%rip),%rsi        # 470400 <_fini+0x12efc>
  45a151:	xor    %eax,%eax
  45a153:	callq  413c40 <BIO_printf@plt>
  45a158:	mov    (%r15),%rdi
  45a15b:	lea    0x162e6(%rip),%rsi        # 470448 <_fini+0x12f44>
  45a162:	xor    %eax,%eax
  45a164:	callq  413c40 <BIO_printf@plt>
  45a169:	xor    %ebx,%ebx
  45a16b:	xor    %r14d,%r14d
  45a16e:	movq   $0x0,0x10(%rsp)
  45a177:	mov    $0x1,%r12d
  45a17d:	movq   $0x0,0x18(%rsp)
  45a186:	movq   $0x0,0x40(%rsp)
  45a18f:	xor    %r13d,%r13d
  45a192:	movq   $0x0,0x68(%rsp)
  45a19b:	movq   $0x0,0x58(%rsp)
  45a1a4:	movq   $0x0,0x78(%rsp)
  45a1ad:	xor    %ebp,%ebp
  45a1af:	movq   $0x0,0x80(%rsp)
  45a1bb:	movq   $0x0,0x70(%rsp)
  45a1c4:	movq   $0x0,0x38(%rsp)
  45a1cd:	jmpq   458da3 <X509_get0_pubkey_bitstr@plt+0x423d3>
  45a1d2:	nopw   0x0(%rax,%rax,1)
  45a1d8:	xor    %esi,%esi
  45a1da:	mov    $0x1,%edi
  45a1df:	xor    %r12d,%r12d
  45a1e2:	callq  413cf0 <OCSP_response_create@plt>
  45a1e7:	movq   $0x0,0x48(%rsp)
  45a1f0:	mov    %rax,%rbx
  45a1f3:	movq   $0x0,0x50(%rsp)
  45a1fc:	movq   $0x0,0x60(%rsp)
  45a205:	jmpq   4599c9 <X509_get0_pubkey_bitstr@plt+0x42ff9>
  45a20a:	nopw   0x0(%rax,%rax,1)
  45a210:	lea    0x153a3(%rip),%rdi        # 46f5ba <_fini+0x120b6>
  45a217:	mov    $0xc,%ecx
  45a21c:	mov    %rax,%rsi
  45a21f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45a221:	je     45a380 <X509_get0_pubkey_bitstr@plt+0x439b0>
  45a227:	lea    0x65a3(%rip),%rdi        # 4607d1 <_fini+0x32cd>
  45a22e:	mov    $0xa,%ecx
  45a233:	mov    %rax,%rsi
  45a236:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45a238:	je     45a577 <X509_get0_pubkey_bitstr@plt+0x43ba7>
  45a23e:	lea    0x15381(%rip),%rdi        # 46f5c6 <_fini+0x120c2>
  45a245:	mov    $0x7,%ecx
  45a24a:	mov    %rax,%rsi
  45a24d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45a24f:	je     45a61e <X509_get0_pubkey_bitstr@plt+0x43c4e>
  45a255:	lea    0x15371(%rip),%rdi        # 46f5cd <_fini+0x120c9>
  45a25c:	mov    $0xa,%ecx
  45a261:	mov    %rax,%rsi
  45a264:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45a266:	je     45a7c6 <X509_get0_pubkey_bitstr@plt+0x43df6>
  45a26c:	lea    0x15364(%rip),%rdi        # 46f5d7 <_fini+0x120d3>
  45a273:	mov    $0xf,%ecx
  45a278:	mov    %rax,%rsi
  45a27b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45a27d:	jne    45a7f1 <X509_get0_pubkey_bitstr@plt+0x43e21>
  45a283:	orq    $0x1,0x108(%rsp)
  45a28c:	mov    %r14,%r12
  45a28f:	xor    %edx,%edx
  45a291:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45a296:	nopw   %cs:0x0(%rax,%rax,1)
  45a2a0:	mov    0x21bcd9(%rip),%rax        # 675f80 <_fini+0x218a7c>
  45a2a7:	xor    %esi,%esi
  45a2a9:	mov    (%rax),%rdi
  45a2ac:	callq  4161e0 <BIO_new_fp@plt>
  45a2b1:	mov    %rax,%rdi
  45a2b4:	mov    %rax,(%r15)
  45a2b7:	jmpq   458d00 <X509_get0_pubkey_bitstr@plt+0x42330>
  45a2bc:	nopl   0x0(%rax)
  45a2c0:	mov    0x1b8(%rsp),%rdx
  45a2c8:	xor    %edi,%edi
  45a2ca:	test   %rdx,%rdx
  45a2cd:	je     459c42 <X509_get0_pubkey_bitstr@plt+0x43272>
  45a2d3:	mov    %rax,%rdi
  45a2d6:	xor    %r8d,%r8d
  45a2d9:	xor    %ecx,%ecx
  45a2db:	mov    $0x1ae,%esi
  45a2e0:	callq  412ae0 <OCSP_SINGLERESP_add1_ext_i2d@plt>
  45a2e5:	mov    0x1b8(%rsp),%rdi
  45a2ed:	jmpq   459c42 <X509_get0_pubkey_bitstr@plt+0x43272>
  45a2f2:	nopw   0x0(%rax,%rax,1)
  45a2f8:	mov    0x120(%rsp),%rdi
  45a300:	test   %rdi,%rdi
  45a303:	je     459cef <X509_get0_pubkey_bitstr@plt+0x4331f>
  45a309:	lea    0x56d1(%rip),%rsi        # 45f9e1 <_fini+0x24dd>
  45a310:	callq  412ba0 <BIO_new_file@plt>
  45a315:	test   %rax,%rax
  45a318:	mov    %rax,%rbp
  45a31b:	je     45a3b0 <X509_get0_pubkey_bitstr@plt+0x439e0>
  45a321:	mov    0x21bc00(%rip),%rsi        # 675f28 <_fini+0x218a24>
  45a328:	mov    0x21bca9(%rip),%rdi        # 675fd8 <_fini+0x218ad4>
  45a32f:	xor    %ecx,%ecx
  45a331:	mov    %rax,%rdx
  45a334:	callq  415520 <ASN1_d2i_bio@plt>
  45a339:	mov    %rbp,%rdi
  45a33c:	mov    %rax,%rbx
  45a33f:	callq  413960 <BIO_free@plt>
  45a344:	test   %rbx,%rbx
  45a347:	jne    459a04 <X509_get0_pubkey_bitstr@plt+0x43034>
  45a34d:	lea    0x15579(%rip),%rsi        # 46f8cd <_fini+0x123c9>
  45a354:	mov    (%r15),%rdi
  45a357:	xor    %eax,%eax
  45a359:	callq  413c40 <BIO_printf@plt>
  45a35e:	jmpq   459ca0 <X509_get0_pubkey_bitstr@plt+0x432d0>
  45a363:	mov    0x58(%rsp),%rdx
  45a368:	callq  415490 <X509V3_add_value@plt>
  45a36d:	test   %eax,%eax
  45a36f:	je     45a169 <X509_get0_pubkey_bitstr@plt+0x43799>
  45a375:	lea    0x10(%r14),%r12
  45a379:	xor    %edx,%edx
  45a37b:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45a380:	mov    %r14,%r12
  45a383:	movl   $0x1,0x130(%rsp)
  45a38e:	xor    %edx,%edx
  45a390:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45a395:	mov    0x21bb1c(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  45a39c:	xor    %esi,%esi
  45a39e:	mov    (%rax),%rdi
  45a3a1:	callq  4161e0 <BIO_new_fp@plt>
  45a3a6:	mov    %rax,0x68(%rsp)
  45a3ab:	jmpq   4593f4 <X509_get0_pubkey_bitstr@plt+0x42a24>
  45a3b0:	mov    (%r15),%rdi
  45a3b3:	lea    0x161d6(%rip),%rsi        # 470590 <_fini+0x1308c>
  45a3ba:	xor    %eax,%eax
  45a3bc:	mov    $0x1,%r12d
  45a3c2:	xor    %r13d,%r13d
  45a3c5:	callq  413c40 <BIO_printf@plt>
  45a3ca:	movq   $0x0,0x18(%rsp)
  45a3d3:	jmpq   458da3 <X509_get0_pubkey_bitstr@plt+0x423d3>
  45a3d8:	nopl   0x0(%rax,%rax,1)
  45a3e0:	xor    %esi,%esi
  45a3e2:	mov    $0x1,%dil
  45a3e5:	callq  413cf0 <OCSP_response_create@plt>
  45a3ea:	mov    0x1a0(%rsp),%rdi
  45a3f2:	mov    %rax,%rsi
  45a3f5:	mov    %rax,%rbx
  45a3f8:	callq  458550 <X509_get0_pubkey_bitstr@plt+0x41b80>
  45a3fd:	jmpq   459a04 <X509_get0_pubkey_bitstr@plt+0x43034>
  45a402:	mov    0xe8(%rsp),%ebx
  45a409:	mov    0x48(%rsp),%rdi
  45a40e:	mov    $0x0,%eax
  45a413:	cmp    $0x2,%ebx
  45a416:	cmove  %ebx,%eax
  45a419:	test   %rdi,%rdi
  45a41c:	mov    %eax,0xe8(%rsp)
  45a423:	je     45a633 <X509_get0_pubkey_bitstr@plt+0x43c63>
  45a429:	lea    0x55b1(%rip),%rsi        # 45f9e1 <_fini+0x24dd>
  45a430:	callq  412ba0 <BIO_new_file@plt>
  45a435:	test   %rax,%rax
  45a438:	mov    %rax,%rbx
  45a43b:	je     45a7db <X509_get0_pubkey_bitstr@plt+0x43e0b>
  45a441:	mov    0x21bb00(%rip),%rsi        # 675f48 <_fini+0x218a44>
  45a448:	mov    0x21ba71(%rip),%rdi        # 675ec0 <_fini+0x2189bc>
  45a44f:	xor    %ecx,%ecx
  45a451:	mov    %rax,%rdx
  45a454:	callq  415520 <ASN1_d2i_bio@plt>
  45a459:	mov    %rbx,%rdi
  45a45c:	mov    %rax,0x198(%rsp)
  45a464:	callq  413960 <BIO_free@plt>
  45a469:	cmpq   $0x0,0x198(%rsp)
  45a472:	jne    45940f <X509_get0_pubkey_bitstr@plt+0x42a3f>
  45a478:	mov    (%r15),%rdi
  45a47b:	lea    0x15365(%rip),%rsi        # 46f7e7 <_fini+0x122e3>
  45a482:	xor    %eax,%eax
  45a484:	xor    %ebx,%ebx
  45a486:	callq  413c40 <BIO_printf@plt>
  45a48b:	xor    %r14d,%r14d
  45a48e:	movq   $0x0,0x10(%rsp)
  45a497:	mov    $0x1,%r12d
  45a49d:	movq   $0x0,0x18(%rsp)
  45a4a6:	movq   $0x0,0x40(%rsp)
  45a4af:	xor    %r13d,%r13d
  45a4b2:	jmpq   45a19b <X509_get0_pubkey_bitstr@plt+0x437cb>
  45a4b7:	mov    (%r15),%rdi
  45a4ba:	lea    0x15fe7(%rip),%rsi        # 4704a8 <_fini+0x12fa4>
  45a4c1:	xor    %ebx,%ebx
  45a4c3:	xor    %r14d,%r14d
  45a4c6:	callq  413c40 <BIO_printf@plt>
  45a4cb:	movq   $0x0,0x10(%rsp)
  45a4d4:	mov    $0x1,%r12d
  45a4da:	movq   $0x0,0x18(%rsp)
  45a4e3:	movq   $0x0,0x40(%rsp)
  45a4ec:	xor    %r13d,%r13d
  45a4ef:	movq   $0x0,0x78(%rsp)
  45a4f8:	movq   $0x0,0x80(%rsp)
  45a504:	movq   $0x0,0x38(%rsp)
  45a50d:	xor    %ebp,%ebp
  45a50f:	jmpq   458da3 <X509_get0_pubkey_bitstr@plt+0x423d3>
  45a514:	movq   $0x0,0x158(%rsp)
  45a520:	jmpq   4594af <X509_get0_pubkey_bitstr@plt+0x42adf>
  45a525:	lea    0x16024(%rip),%rsi        # 470550 <_fini+0x1304c>
  45a52c:	jmpq   45a354 <X509_get0_pubkey_bitstr@plt+0x43984>
  45a531:	xor    %ebx,%ebx
  45a533:	xor    %r14d,%r14d
  45a536:	mov    $0x1,%r12d
  45a53c:	movq   $0x0,0x18(%rsp)
  45a545:	movq   $0x0,0x40(%rsp)
  45a54e:	xor    %r13d,%r13d
  45a551:	movq   $0x0,0x80(%rsp)
  45a55d:	movq   $0x0,0x38(%rsp)
  45a566:	xor    %ebp,%ebp
  45a568:	jmpq   458da3 <X509_get0_pubkey_bitstr@plt+0x423d3>
  45a56d:	xor    %ebx,%ebx
  45a56f:	xor    %r14d,%r14d
  45a572:	jmpq   45a4d4 <X509_get0_pubkey_bitstr@plt+0x43b04>
  45a577:	mov    %r14,%r12
  45a57a:	xor    %edx,%edx
  45a57c:	movl   $0x1,0x134(%rsp)
  45a587:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45a58c:	movq   $0x0,0x10(%rsp)
  45a595:	movq   $0x0,0x158(%rsp)
  45a5a1:	movq   $0x0,0x78(%rsp)
  45a5aa:	movq   $0x0,0x70(%rsp)
  45a5b3:	jmpq   4594e0 <X509_get0_pubkey_bitstr@plt+0x42b10>
  45a5b8:	mov    (%r15),%rdi
  45a5bb:	lea    0x13581(%rip),%rsi        # 46db43 <_fini+0x1063f>
  45a5c2:	xor    %eax,%eax
  45a5c4:	xor    %ebx,%ebx
  45a5c6:	callq  413c40 <BIO_printf@plt>
  45a5cb:	jmpq   45a48b <X509_get0_pubkey_bitstr@plt+0x43abb>
  45a5d0:	lea    0x15f51(%rip),%rsi        # 470528 <_fini+0x13024>
  45a5d7:	mov    (%r15),%rdi
  45a5da:	jmpq   45a359 <X509_get0_pubkey_bitstr@plt+0x43989>
  45a5df:	mov    0xe0(%rsp),%rdx
  45a5e7:	mov    (%r15),%rdi
  45a5ea:	lea    0x152bb(%rip),%rsi        # 46f8ac <_fini+0x123a8>
  45a5f1:	xor    %eax,%eax
  45a5f3:	mov    $0x1,%r12d
  45a5f9:	xor    %r13d,%r13d
  45a5fc:	callq  413c40 <BIO_printf@plt>
  45a601:	movq   $0x0,0x18(%rsp)
  45a60a:	jmpq   458da3 <X509_get0_pubkey_bitstr@plt+0x423d3>
  45a60f:	lea    0x1527a(%rip),%rsi        # 46f890 <_fini+0x1238c>
  45a616:	mov    (%r15),%rdi
  45a619:	jmpq   45a359 <X509_get0_pubkey_bitstr@plt+0x43989>
  45a61e:	mov    %r14,%r12
  45a621:	xor    %edx,%edx
  45a623:	movl   $0x2,0xe8(%rsp)
  45a62e:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45a633:	mov    0x180(%rsp),%rbp
  45a63b:	test   %rbp,%rbp
  45a63e:	je     45940f <X509_get0_pubkey_bitstr@plt+0x42a3f>
  45a644:	callq  413840 <BIO_f_buffer@plt>
  45a649:	mov    %rax,%rdi
  45a64c:	callq  414a20 <BIO_new@plt>
  45a651:	test   %rax,%rax
  45a654:	mov    %rax,%rbx
  45a657:	je     45ab60 <X509_get0_pubkey_bitstr@plt+0x44190>
  45a65d:	mov    %rbp,%rdi
  45a660:	callq  4152c0 <BIO_new_accept@plt>
  45a665:	test   %rax,%rax
  45a668:	mov    %rax,0x58(%rsp)
  45a66d:	je     45a6bc <X509_get0_pubkey_bitstr@plt+0x43cec>
  45a66f:	mov    %rbx,%rcx
  45a672:	mov    $0x2,%edx
  45a677:	mov    $0x76,%esi
  45a67c:	mov    %rax,%rbx
  45a67f:	mov    %rax,%rdi
  45a682:	callq  412af0 <BIO_ctrl@plt>
  45a687:	xor    %ecx,%ecx
  45a689:	xor    %edx,%edx
  45a68b:	mov    $0x65,%esi
  45a690:	mov    %rbx,%rdi
  45a693:	callq  412af0 <BIO_ctrl@plt>
  45a698:	test   %rax,%rax
  45a69b:	jg     459418 <X509_get0_pubkey_bitstr@plt+0x42a48>
  45a6a1:	mov    (%r15),%rdi
  45a6a4:	lea    0x15158(%rip),%rsi        # 46f803 <_fini+0x122ff>
  45a6ab:	xor    %eax,%eax
  45a6ad:	xor    %ebx,%ebx
  45a6af:	callq  413c40 <BIO_printf@plt>
  45a6b4:	mov    (%r15),%rdi
  45a6b7:	callq  413f40 <ERR_print_errors@plt>
  45a6bc:	mov    0x58(%rsp),%rdi
  45a6c1:	callq  416570 <BIO_free_all@plt>
  45a6c6:	mov    %rbx,%rdi
  45a6c9:	xor    %ebx,%ebx
  45a6cb:	callq  413960 <BIO_free@plt>
  45a6d0:	jmpq   45a48b <X509_get0_pubkey_bitstr@plt+0x43abb>
  45a6d5:	mov    0x150(%rsp),%rdx
  45a6dd:	mov    0x148(%rsp),%rsi
  45a6e5:	mov    (%r15),%rdi
  45a6e8:	callq  446880 <X509_get0_pubkey_bitstr@plt+0x2feb0>
  45a6ed:	test   %rax,%rax
  45a6f0:	mov    %rax,%r13
  45a6f3:	je     45aa4f <X509_get0_pubkey_bitstr@plt+0x4407f>
  45a6f9:	mov    0x128(%rsp),%rsi
  45a701:	test   %rsi,%rsi
  45a704:	je     45aaf6 <X509_get0_pubkey_bitstr@plt+0x44126>
  45a70a:	mov    (%r15),%rdi
  45a70d:	lea    0x151f0(%rip),%r9        # 46f904 <_fini+0x12400>
  45a714:	xor    %r8d,%r8d
  45a717:	xor    %ecx,%ecx
  45a719:	mov    $0x3,%edx
  45a71e:	callq  446530 <X509_get0_pubkey_bitstr@plt+0x2fb60>
  45a723:	test   %rax,%rax
  45a726:	mov    %rax,0x18(%rsp)
  45a72b:	je     45aa8a <X509_get0_pubkey_bitstr@plt+0x440ba>
  45a731:	mov    %rbx,%rdi
  45a734:	callq  412f80 <OCSP_response_get1_basic@plt>
  45a739:	test   %rax,%rax
  45a73c:	mov    %rax,%rbp
  45a73f:	je     45ab82 <X509_get0_pubkey_bitstr@plt+0x441b2>
  45a745:	mov    0x134(%rsp),%eax
  45a74c:	test   %eax,%eax
  45a74e:	jne    45a7a6 <X509_get0_pubkey_bitstr@plt+0x43dd6>
  45a750:	mov    0x198(%rsp),%rdi
  45a758:	test   %rdi,%rdi
  45a75b:	je     45a76d <X509_get0_pubkey_bitstr@plt+0x43d9d>
  45a75d:	mov    %rbp,%rsi
  45a760:	callq  413dc0 <OCSP_check_nonce@plt>
  45a765:	test   %eax,%eax
  45a767:	jle    45aa65 <X509_get0_pubkey_bitstr@plt+0x44095>
  45a76d:	mov    0x118(%rsp),%rcx
  45a775:	mov    0x18(%rsp),%rsi
  45a77a:	mov    %r13,%rdx
  45a77d:	mov    %rbp,%rdi
  45a780:	callq  415a50 <OCSP_basic_verify@plt>
  45a785:	test   %eax,%eax
  45a787:	js     45ab6e <X509_get0_pubkey_bitstr@plt+0x4419e>
  45a78d:	test   %eax,%eax
  45a78f:	jle    45aad8 <X509_get0_pubkey_bitstr@plt+0x44108>
  45a795:	mov    (%r15),%rdi
  45a798:	lea    0x151c0(%rip),%rsi        # 46f95f <_fini+0x1245b>
  45a79f:	xor    %eax,%eax
  45a7a1:	callq  413c40 <BIO_printf@plt>
  45a7a6:	cmpq   $0x0,0x198(%rsp)
  45a7af:	jne    45a81e <X509_get0_pubkey_bitstr@plt+0x43e4e>
  45a7b1:	xor    %r12d,%r12d
  45a7b4:	jmpq   458da3 <X509_get0_pubkey_bitstr@plt+0x423d3>
  45a7b9:	mov    0xd8(%rsp),%rdx
  45a7c1:	jmpq   45a5e7 <X509_get0_pubkey_bitstr@plt+0x43c17>
  45a7c6:	mov    %r14,%r12
  45a7c9:	xor    %edx,%edx
  45a7cb:	movl   $0x0,0xe8(%rsp)
  45a7d6:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45a7db:	mov    (%r15),%rdi
  45a7de:	lea    0x15c9b(%rip),%rsi        # 470480 <_fini+0x12f7c>
  45a7e5:	xor    %eax,%eax
  45a7e7:	callq  413c40 <BIO_printf@plt>
  45a7ec:	jmpq   45a48b <X509_get0_pubkey_bitstr@plt+0x43abb>
  45a7f1:	lea    0x14dee(%rip),%rdi        # 46f5e6 <_fini+0x120e2>
  45a7f8:	mov    $0xd,%ecx
  45a7fd:	mov    %rax,%rsi
  45a800:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45a802:	jne    45aa9c <X509_get0_pubkey_bitstr@plt+0x440cc>
  45a808:	orq    $0x400,0x108(%rsp)
  45a814:	mov    %r14,%r12
  45a817:	xor    %edx,%edx
  45a819:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45a81e:	mov    0xa0(%rsp),%rdi
  45a826:	callq  4156d0 <sk_num@plt>
  45a82b:	test   %eax,%eax
  45a82d:	je     45a7b1 <X509_get0_pubkey_bitstr@plt+0x43de1>
  45a82f:	mov    0x90(%rsp),%rdi
  45a837:	callq  4156d0 <sk_num@plt>
  45a83c:	test   %eax,%eax
  45a83e:	je     45a7b1 <X509_get0_pubkey_bitstr@plt+0x43de1>
  45a844:	lea    0x1c0(%rsp),%rax
  45a84c:	mov    %r13,0x60(%rsp)
  45a851:	xor    %r12d,%r12d
  45a854:	mov    0x68(%rsp),%r13
  45a859:	mov    %rax,0x28(%rsp)
  45a85e:	lea    0x1b8(%rsp),%rax
  45a866:	mov    %rax,0x30(%rsp)
  45a86b:	lea    0x1b0(%rsp),%rax
  45a873:	mov    %rax,0x48(%rsp)
  45a878:	lea    0x1a8(%rsp),%rax
  45a880:	mov    %rax,0x50(%rsp)
  45a885:	jmp    45a89a <X509_get0_pubkey_bitstr@plt+0x43eca>
  45a887:	lea    0x150e5(%rip),%rsi        # 46f973 <_fini+0x1246f>
  45a88e:	mov    %r13,%rdi
  45a891:	callq  413b70 <BIO_puts@plt>
  45a896:	add    $0x1,%r12d
  45a89a:	mov    0x90(%rsp),%rdi
  45a8a2:	callq  4156d0 <sk_num@plt>
  45a8a7:	cmp    %eax,%r12d
  45a8aa:	jge    45ab56 <X509_get0_pubkey_bitstr@plt+0x44186>
  45a8b0:	mov    0x90(%rsp),%rdi
  45a8b8:	mov    %r12d,%esi
  45a8bb:	callq  412b30 <sk_value@plt>
  45a8c0:	mov    0xa0(%rsp),%rdi
  45a8c8:	mov    %r12d,%esi
  45a8cb:	mov    %rax,0x20(%rsp)
  45a8d0:	callq  412b30 <sk_value@plt>
  45a8d5:	lea    0x3254(%rip),%rsi        # 45db30 <_fini+0x62c>
  45a8dc:	mov    %rax,%rdx
  45a8df:	mov    %r13,%rdi
  45a8e2:	xor    %eax,%eax
  45a8e4:	callq  413c40 <BIO_printf@plt>
  45a8e9:	lea    0x1c8(%rsp),%rax
  45a8f1:	mov    0x28(%rsp),%r9
  45a8f6:	mov    0x30(%rsp),%r8
  45a8fb:	mov    0x48(%rsp),%rcx
  45a900:	mov    0x50(%rsp),%rdx
  45a905:	mov    %rbp,%rdi
  45a908:	mov    0x20(%rsp),%rsi
  45a90d:	mov    %rax,(%rsp)
  45a911:	callq  4168b0 <OCSP_resp_find_status@plt>
  45a916:	test   %eax,%eax
  45a918:	je     45a887 <X509_get0_pubkey_bitstr@plt+0x43eb7>
  45a91e:	mov    0x140(%rsp),%rcx
  45a926:	mov    0x138(%rsp),%rdx
  45a92e:	mov    0x1c8(%rsp),%rsi
  45a936:	mov    0x1c0(%rsp),%rdi
  45a93e:	callq  415e70 <OCSP_check_validity@plt>
  45a943:	test   %eax,%eax
  45a945:	jne    45a95e <X509_get0_pubkey_bitstr@plt+0x43f8e>
  45a947:	lea    0x15c8a(%rip),%rsi        # 4705d8 <_fini+0x130d4>
  45a94e:	mov    %r13,%rdi
  45a951:	callq  413b70 <BIO_puts@plt>
  45a956:	mov    %r13,%rdi
  45a959:	callq  413f40 <ERR_print_errors@plt>
  45a95e:	movslq 0x1a8(%rsp),%rdi
  45a966:	callq  413e60 <OCSP_cert_status_str@plt>
  45a96b:	lea    0x5e47(%rip),%rsi        # 4607b9 <_fini+0x32b5>
  45a972:	mov    %rax,%rdx
  45a975:	mov    %r13,%rdi
  45a978:	xor    %eax,%eax
  45a97a:	callq  413c40 <BIO_printf@plt>
  45a97f:	lea    0x15006(%rip),%rsi        # 46f98c <_fini+0x12488>
  45a986:	mov    %r13,%rdi
  45a989:	callq  413b70 <BIO_puts@plt>
  45a98e:	mov    0x1c0(%rsp),%rsi
  45a996:	mov    %r13,%rdi
  45a999:	callq  414910 <ASN1_GENERALIZEDTIME_print@plt>
  45a99e:	lea    0xa1fa(%rip),%rsi        # 464b9f <_fini+0x769b>
  45a9a5:	mov    %r13,%rdi
  45a9a8:	callq  413b70 <BIO_puts@plt>
  45a9ad:	cmpq   $0x0,0x1c8(%rsp)
  45a9b6:	je     45a9e6 <X509_get0_pubkey_bitstr@plt+0x44016>
  45a9b8:	lea    0x14fdc(%rip),%rsi        # 46f99b <_fini+0x12497>
  45a9bf:	mov    %r13,%rdi
  45a9c2:	callq  413b70 <BIO_puts@plt>
  45a9c7:	mov    0x1c8(%rsp),%rsi
  45a9cf:	mov    %r13,%rdi
  45a9d2:	callq  414910 <ASN1_GENERALIZEDTIME_print@plt>
  45a9d7:	lea    0xa1c1(%rip),%rsi        # 464b9f <_fini+0x769b>
  45a9de:	mov    %r13,%rdi
  45a9e1:	callq  413b70 <BIO_puts@plt>
  45a9e6:	cmpl   $0x1,0x1a8(%rsp)
  45a9ee:	jne    45a896 <X509_get0_pubkey_bitstr@plt+0x43ec6>
  45a9f4:	mov    0x1b0(%rsp),%eax
  45a9fb:	cmp    $0xffffffff,%eax
  45a9fe:	je     45aa1c <X509_get0_pubkey_bitstr@plt+0x4404c>
  45aa00:	movslq %eax,%rdi
  45aa03:	callq  415220 <OCSP_crl_reason_str@plt>
  45aa08:	lea    0x14f9b(%rip),%rsi        # 46f9aa <_fini+0x124a6>
  45aa0f:	mov    %rax,%rdx
  45aa12:	mov    %r13,%rdi
  45aa15:	xor    %eax,%eax
  45aa17:	callq  413c40 <BIO_printf@plt>
  45aa1c:	lea    0x14f94(%rip),%rsi        # 46f9b7 <_fini+0x124b3>
  45aa23:	mov    %r13,%rdi
  45aa26:	callq  413b70 <BIO_puts@plt>
  45aa2b:	mov    0x1b8(%rsp),%rsi
  45aa33:	mov    %r13,%rdi
  45aa36:	callq  414910 <ASN1_GENERALIZEDTIME_print@plt>
  45aa3b:	lea    0xa15d(%rip),%rsi        # 464b9f <_fini+0x769b>
  45aa42:	mov    %r13,%rdi
  45aa45:	callq  413b70 <BIO_puts@plt>
  45aa4a:	jmpq   45a896 <X509_get0_pubkey_bitstr@plt+0x43ec6>
  45aa4f:	mov    $0x1,%r12d
  45aa55:	movq   $0x0,0x18(%rsp)
  45aa5e:	xor    %ebp,%ebp
  45aa60:	jmpq   458da3 <X509_get0_pubkey_bitstr@plt+0x423d3>
  45aa65:	cmp    $0xffffffff,%eax
  45aa68:	je     45ab1a <X509_get0_pubkey_bitstr@plt+0x4414a>
  45aa6e:	mov    (%r15),%rdi
  45aa71:	lea    0x14eba(%rip),%rsi        # 46f932 <_fini+0x1242e>
  45aa78:	xor    %eax,%eax
  45aa7a:	mov    $0x1,%r12d
  45aa80:	callq  413c40 <BIO_printf@plt>
  45aa85:	jmpq   458da3 <X509_get0_pubkey_bitstr@plt+0x423d3>
  45aa8a:	mov    $0x1,%r12d
  45aa90:	xor    %ebp,%ebp
  45aa92:	jmpq   458da3 <X509_get0_pubkey_bitstr@plt+0x423d3>
  45aa97:	callq  414c30 <__stack_chk_fail@plt>
  45aa9c:	lea    0x14b50(%rip),%rdi        # 46f5f3 <_fini+0x120ef>
  45aaa3:	mov    $0xa,%ecx
  45aaa8:	mov    %rax,%rsi
  45aaab:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45aaad:	je     45ab04 <X509_get0_pubkey_bitstr@plt+0x44134>
  45aaaf:	lea    0x14b47(%rip),%rdi        # 46f5fd <_fini+0x120f9>
  45aab6:	mov    $0x15,%ecx
  45aabb:	mov    %rax,%rsi
  45aabe:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45aac0:	jne    45ab30 <X509_get0_pubkey_bitstr@plt+0x44160>
  45aac2:	orq    $0x4,0x118(%rsp)
  45aacb:	mov    %r14,%r12
  45aace:	xor    %edx,%edx
  45aad0:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45aad5:	nopl   (%rax)
  45aad8:	mov    (%r15),%rdi
  45aadb:	lea    0x14e64(%rip),%rsi        # 46f946 <_fini+0x12442>
  45aae2:	xor    %eax,%eax
  45aae4:	callq  413c40 <BIO_printf@plt>
  45aae9:	mov    (%r15),%rdi
  45aaec:	callq  413f40 <ERR_print_errors@plt>
  45aaf1:	jmpq   45a7a6 <X509_get0_pubkey_bitstr@plt+0x43dd6>
  45aaf6:	movq   $0x0,0x18(%rsp)
  45aaff:	jmpq   45a731 <X509_get0_pubkey_bitstr@plt+0x43d61>
  45ab04:	mov    %r14,%r12
  45ab07:	xor    %edx,%edx
  45ab09:	movq   $0x1,0xf8(%rsp)
  45ab15:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45ab1a:	mov    (%r15),%rdi
  45ab1d:	lea    0x15a94(%rip),%rsi        # 4705b8 <_fini+0x130b4>
  45ab24:	xor    %eax,%eax
  45ab26:	callq  413c40 <BIO_printf@plt>
  45ab2b:	jmpq   45a76d <X509_get0_pubkey_bitstr@plt+0x43d9d>
  45ab30:	lea    0x14adb(%rip),%rdi        # 46f612 <_fini+0x1210e>
  45ab37:	mov    $0x10,%ecx
  45ab3c:	mov    %rax,%rsi
  45ab3f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45ab41:	jne    45ab9e <X509_get0_pubkey_bitstr@plt+0x441ce>
  45ab43:	orq    $0x10,0x118(%rsp)
  45ab4c:	mov    %r14,%r12
  45ab4f:	xor    %edx,%edx
  45ab51:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45ab56:	mov    0x60(%rsp),%r13
  45ab5b:	jmpq   45a7b1 <X509_get0_pubkey_bitstr@plt+0x43de1>
  45ab60:	movq   $0x0,0x58(%rsp)
  45ab69:	jmpq   45a6bc <X509_get0_pubkey_bitstr@plt+0x43cec>
  45ab6e:	xor    %ecx,%ecx
  45ab70:	mov    %r13,%rdx
  45ab73:	xor    %esi,%esi
  45ab75:	mov    %rbp,%rdi
  45ab78:	callq  415a50 <OCSP_basic_verify@plt>
  45ab7d:	jmpq   45a78d <X509_get0_pubkey_bitstr@plt+0x43dbd>
  45ab82:	mov    (%r15),%rdi
  45ab85:	lea    0x14d8e(%rip),%rsi        # 46f91a <_fini+0x12416>
  45ab8c:	xor    %eax,%eax
  45ab8e:	mov    $0x1,%r12d
  45ab94:	callq  413c40 <BIO_printf@plt>
  45ab99:	jmpq   458da3 <X509_get0_pubkey_bitstr@plt+0x423d3>
  45ab9e:	lea    0x14a7d(%rip),%rdi        # 46f622 <_fini+0x1211e>
  45aba5:	mov    $0xa,%ecx
  45abaa:	mov    %rax,%rsi
  45abad:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45abaf:	jne    45abc4 <X509_get0_pubkey_bitstr@plt+0x441f4>
  45abb1:	orq    $0x8,0x118(%rsp)
  45abba:	mov    %r14,%r12
  45abbd:	xor    %edx,%edx
  45abbf:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45abc4:	lea    0x14a61(%rip),%rdi        # 46f62c <_fini+0x12128>
  45abcb:	mov    $0x10,%ecx
  45abd0:	mov    %rax,%rsi
  45abd3:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45abd5:	jne    45abed <X509_get0_pubkey_bitstr@plt+0x4421d>
  45abd7:	orq    $0x100,0x118(%rsp)
  45abe3:	mov    %r14,%r12
  45abe6:	xor    %edx,%edx
  45abe8:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45abed:	lea    0x14a48(%rip),%rdi        # 46f63c <_fini+0x12138>
  45abf4:	mov    $0xd,%ecx
  45abf9:	mov    %rax,%rsi
  45abfc:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45abfe:	jne    45ac13 <X509_get0_pubkey_bitstr@plt+0x44243>
  45ac00:	orq    $0x20,0x118(%rsp)
  45ac09:	mov    %r14,%r12
  45ac0c:	xor    %edx,%edx
  45ac0e:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45ac13:	lea    0x14a2f(%rip),%rdi        # 46f649 <_fini+0x12145>
  45ac1a:	mov    $0xd,%ecx
  45ac1f:	mov    %rax,%rsi
  45ac22:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45ac24:	jne    45ac3c <X509_get0_pubkey_bitstr@plt+0x4426c>
  45ac26:	orq    $0x200,0x118(%rsp)
  45ac32:	mov    %r14,%r12
  45ac35:	xor    %edx,%edx
  45ac37:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45ac3c:	lea    0x14a13(%rip),%rdi        # 46f656 <_fini+0x12152>
  45ac43:	mov    $0xb,%ecx
  45ac48:	mov    %rax,%rsi
  45ac4b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45ac4d:	jne    45ac62 <X509_get0_pubkey_bitstr@plt+0x44292>
  45ac4f:	orq    $0x2,0x118(%rsp)
  45ac58:	mov    %r14,%r12
  45ac5b:	xor    %edx,%edx
  45ac5d:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45ac62:	lea    0x35fe(%rip),%rdi        # 45e267 <_fini+0xd63>
  45ac69:	mov    $0x6,%ecx
  45ac6e:	mov    %rax,%rsi
  45ac71:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45ac73:	je     45acd3 <X509_get0_pubkey_bitstr@plt+0x44303>
  45ac75:	lea    0x149e5(%rip),%rdi        # 46f661 <_fini+0x1215d>
  45ac7c:	mov    $0xa,%ecx
  45ac81:	mov    %rax,%rsi
  45ac84:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45ac86:	je     45ad3b <X509_get0_pubkey_bitstr@plt+0x4436b>
  45ac8c:	lea    0x149d8(%rip),%rdi        # 46f66b <_fini+0x12167>
  45ac93:	mov    $0xb,%ecx
  45ac98:	mov    %rax,%rsi
  45ac9b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45ac9d:	je     45ad26 <X509_get0_pubkey_bitstr@plt+0x44356>
  45aca3:	lea    0x149cc(%rip),%rdi        # 46f676 <_fini+0x12172>
  45acaa:	mov    $0x7,%ecx
  45acaf:	mov    %rax,%rsi
  45acb2:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45acb4:	jne    45acf3 <X509_get0_pubkey_bitstr@plt+0x44323>
  45acb6:	mov    0x8(%r14),%rax
  45acba:	test   %rax,%rax
  45acbd:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45acc3:	lea    0x8(%r14),%r12
  45acc7:	mov    %rax,0x48(%rsp)
  45accc:	xor    %edx,%edx
  45acce:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45acd3:	mov    %r14,%r12
  45acd6:	xor    %edx,%edx
  45acd8:	movl   $0x1,0x104(%rsp)
  45ace3:	movl   $0x1,0xec(%rsp)
  45acee:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45acf3:	lea    0x14983(%rip),%rdi        # 46f67d <_fini+0x12179>
  45acfa:	mov    $0x8,%ecx
  45acff:	mov    %rax,%rsi
  45ad02:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45ad04:	jne    45ad50 <X509_get0_pubkey_bitstr@plt+0x44380>
  45ad06:	mov    0x8(%r14),%rax
  45ad0a:	test   %rax,%rax
  45ad0d:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45ad13:	lea    0x8(%r14),%r12
  45ad17:	mov    %rax,0x120(%rsp)
  45ad1f:	xor    %edx,%edx
  45ad21:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45ad26:	mov    %r14,%r12
  45ad29:	xor    %edx,%edx
  45ad2b:	movl   $0x1,0x104(%rsp)
  45ad36:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45ad3b:	mov    %r14,%r12
  45ad3e:	xor    %edx,%edx
  45ad40:	movl   $0x1,0xec(%rsp)
  45ad4b:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45ad50:	lea    0x13070(%rip),%rdi        # 46ddc7 <_fini+0x108c3>
  45ad57:	mov    $0x8,%ecx
  45ad5c:	mov    %rax,%rsi
  45ad5f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45ad61:	jne    45ad83 <X509_get0_pubkey_bitstr@plt+0x443b3>
  45ad63:	mov    0x8(%r14),%rax
  45ad67:	test   %rax,%rax
  45ad6a:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45ad70:	lea    0x8(%r14),%r12
  45ad74:	mov    %rax,0xd0(%rsp)
  45ad7c:	xor    %edx,%edx
  45ad7e:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45ad83:	lea    0x148fb(%rip),%rdi        # 46f685 <_fini+0x12181>
  45ad8a:	mov    $0x8,%ecx
  45ad8f:	mov    %rax,%rsi
  45ad92:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45ad94:	jne    45adc2 <X509_get0_pubkey_bitstr@plt+0x443f2>
  45ad96:	mov    0x8(%r14),%rax
  45ad9a:	test   %rax,%rax
  45ad9d:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45ada3:	lea    0x8(%r14),%r12
  45ada7:	orq    $0x200,0x118(%rsp)
  45adb3:	mov    %rax,0x128(%rsp)
  45adbb:	xor    %edx,%edx
  45adbd:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45adc2:	lea    0x148c4(%rip),%rdi        # 46f68d <_fini+0x12189>
  45adc9:	mov    $0xc,%ecx
  45adce:	mov    %rax,%rsi
  45add1:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45add3:	jne    45adf5 <X509_get0_pubkey_bitstr@plt+0x44425>
  45add5:	mov    0x8(%r14),%rax
  45add9:	test   %rax,%rax
  45addc:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45ade2:	lea    0x8(%r14),%r12
  45ade6:	mov    %rax,0xf0(%rsp)
  45adee:	xor    %edx,%edx
  45adf0:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45adf5:	lea    0x1489d(%rip),%rdi        # 46f699 <_fini+0x12195>
  45adfc:	mov    $0xe,%ecx
  45ae01:	mov    %rax,%rsi
  45ae04:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45ae06:	jne    45ae28 <X509_get0_pubkey_bitstr@plt+0x44458>
  45ae08:	mov    0x8(%r14),%rax
  45ae0c:	test   %rax,%rax
  45ae0f:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45ae15:	lea    0x8(%r14),%r12
  45ae19:	mov    %rax,0x128(%rsp)
  45ae21:	xor    %edx,%edx
  45ae23:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45ae28:	lea    0x2d0e(%rip),%rdi        # 45db3d <_fini+0x639>
  45ae2f:	mov    $0x8,%ecx
  45ae34:	mov    %rax,%rsi
  45ae37:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45ae39:	jne    45ae5b <X509_get0_pubkey_bitstr@plt+0x4448b>
  45ae3b:	mov    0x8(%r14),%rax
  45ae3f:	test   %rax,%rax
  45ae42:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45ae48:	lea    0x8(%r14),%r12
  45ae4c:	mov    %rax,0x148(%rsp)
  45ae54:	xor    %edx,%edx
  45ae56:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45ae5b:	lea    0x2cd3(%rip),%rdi        # 45db35 <_fini+0x631>
  45ae62:	mov    $0x8,%ecx
  45ae67:	mov    %rax,%rsi
  45ae6a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45ae6c:	jne    45ae8e <X509_get0_pubkey_bitstr@plt+0x444be>
  45ae6e:	mov    0x8(%r14),%rax
  45ae72:	test   %rax,%rax
  45ae75:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45ae7b:	lea    0x8(%r14),%r12
  45ae7f:	mov    %rax,0x150(%rsp)
  45ae87:	xor    %edx,%edx
  45ae89:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45ae8e:	lea    0x14812(%rip),%rdi        # 46f6a7 <_fini+0x121a3>
  45ae95:	mov    $0x11,%ecx
  45ae9a:	mov    %rax,%rsi
  45ae9d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45ae9f:	jne    45aef0 <X509_get0_pubkey_bitstr@plt+0x44520>
  45aea1:	mov    0x8(%r14),%rdi
  45aea5:	test   %rdi,%rdi
  45aea8:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45aeae:	mov    $0xa,%edx
  45aeb3:	xor    %esi,%esi
  45aeb5:	lea    0x8(%r14),%r12
  45aeb9:	callq  4155d0 <strtol@plt>
  45aebe:	xor    %edx,%edx
  45aec0:	test   %rax,%rax
  45aec3:	mov    %rax,0x138(%rsp)
  45aecb:	jns    4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45aed1:	mov    0x8(%r14),%rdx
  45aed5:	mov    (%r15),%rdi
  45aed8:	lea    0x147d9(%rip),%rsi        # 46f6b8 <_fini+0x121b4>
  45aedf:	xor    %eax,%eax
  45aee1:	callq  413c40 <BIO_printf@plt>
  45aee6:	mov    $0x1,%edx
  45aeeb:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45aef0:	lea    0x147dd(%rip),%rdi        # 46f6d4 <_fini+0x121d0>
  45aef7:	mov    $0xc,%ecx
  45aefc:	mov    %rax,%rsi
  45aeff:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45af01:	jne    45af52 <X509_get0_pubkey_bitstr@plt+0x44582>
  45af03:	mov    0x8(%r14),%rdi
  45af07:	test   %rdi,%rdi
  45af0a:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45af10:	mov    $0xa,%edx
  45af15:	xor    %esi,%esi
  45af17:	lea    0x8(%r14),%r12
  45af1b:	callq  4155d0 <strtol@plt>
  45af20:	xor    %edx,%edx
  45af22:	test   %rax,%rax
  45af25:	mov    %rax,0x140(%rsp)
  45af2d:	jns    4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45af33:	mov    0x8(%r14),%rdx
  45af37:	mov    (%r15),%rdi
  45af3a:	lea    0x1479f(%rip),%rsi        # 46f6e0 <_fini+0x121dc>
  45af41:	xor    %eax,%eax
  45af43:	callq  413c40 <BIO_printf@plt>
  45af48:	mov    $0x1,%edx
  45af4d:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45af52:	lea    0xab48(%rip),%rdi        # 465aa1 <_fini+0x859d>
  45af59:	mov    $0x9,%ecx
  45af5e:	mov    %rax,%rsi
  45af61:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45af63:	jne    45af85 <X509_get0_pubkey_bitstr@plt+0x445b5>
  45af65:	mov    0x8(%r14),%rax
  45af69:	test   %rax,%rax
  45af6c:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45af72:	lea    0x8(%r14),%r12
  45af76:	mov    %rax,0xa8(%rsp)
  45af7e:	xor    %edx,%edx
  45af80:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45af85:	lea    0x1476d(%rip),%rdi        # 46f6f9 <_fini+0x121f5>
  45af8c:	mov    $0x8,%ecx
  45af91:	mov    %rax,%rsi
  45af94:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45af96:	jne    45afb8 <X509_get0_pubkey_bitstr@plt+0x445e8>
  45af98:	mov    0x8(%r14),%rax
  45af9c:	test   %rax,%rax
  45af9f:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45afa5:	lea    0x8(%r14),%r12
  45afa9:	mov    %rax,0xd8(%rsp)
  45afb1:	xor    %edx,%edx
  45afb3:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45afb8:	lea    0x14742(%rip),%rdi        # 46f701 <_fini+0x121fd>
  45afbf:	mov    $0x9,%ecx
  45afc4:	mov    %rax,%rsi
  45afc7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45afc9:	jne    45afeb <X509_get0_pubkey_bitstr@plt+0x4461b>
  45afcb:	mov    0x8(%r14),%rax
  45afcf:	test   %rax,%rax
  45afd2:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45afd8:	lea    0x8(%r14),%r12
  45afdc:	mov    %rax,0xe0(%rsp)
  45afe4:	xor    %edx,%edx
  45afe6:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45afeb:	lea    0x14718(%rip),%rdi        # 46f70a <_fini+0x12206>
  45aff2:	mov    $0x6,%ecx
  45aff7:	mov    %rax,%rsi
  45affa:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45affc:	jne    45b01e <X509_get0_pubkey_bitstr@plt+0x4464e>
  45affe:	mov    0x8(%r14),%rax
  45b002:	test   %rax,%rax
  45b005:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45b00b:	lea    0x8(%r14),%r12
  45b00f:	mov    %rax,0x188(%rsp)
  45b017:	xor    %edx,%edx
  45b019:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45b01e:	lea    0x7cf3(%rip),%rdi        # 462d18 <_fini+0x5814>
  45b025:	mov    $0x8,%ecx
  45b02a:	mov    %rax,%rsi
  45b02d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45b02f:	jne    45b082 <X509_get0_pubkey_bitstr@plt+0x446b2>
  45b031:	cmpq   $0x0,0x8(%r14)
  45b036:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45b03c:	mov    0x88(%rsp),%rdi
  45b044:	lea    0x8(%r14),%r12
  45b048:	callq  4153a0 <X509_free@plt>
  45b04d:	mov    0x8(%r14),%rsi
  45b051:	mov    (%r15),%rdi
  45b054:	lea    0x146b5(%rip),%r9        # 46f710 <_fini+0x1220c>
  45b05b:	xor    %r8d,%r8d
  45b05e:	xor    %ecx,%ecx
  45b060:	mov    $0x3,%edx
  45b065:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  45b06a:	test   %rax,%rax
  45b06d:	mov    %rax,0x88(%rsp)
  45b075:	je     45a169 <X509_get0_pubkey_bitstr@plt+0x43799>
  45b07b:	xor    %edx,%edx
  45b07d:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45b082:	lea    0x5f19(%rip),%rdi        # 460fa2 <_fini+0x3a9e>
  45b089:	mov    $0x6,%ecx
  45b08e:	mov    %rax,%rsi
  45b091:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45b093:	jne    45b18c <X509_get0_pubkey_bitstr@plt+0x447bc>
  45b099:	cmpq   $0x0,0x8(%r14)
  45b09e:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45b0a4:	mov    0x98(%rsp),%rdi
  45b0ac:	lea    0x8(%r14),%r12
  45b0b0:	callq  4153a0 <X509_free@plt>
  45b0b5:	mov    0x8(%r14),%rsi
  45b0b9:	mov    (%r15),%rdi
  45b0bc:	lea    0x60af(%rip),%r9        # 461172 <_fini+0x3c6e>
  45b0c3:	xor    %r8d,%r8d
  45b0c6:	xor    %ecx,%ecx
  45b0c8:	mov    $0x3,%edx
  45b0cd:	callq  445ca0 <X509_get0_pubkey_bitstr@plt+0x2f2d0>
  45b0d2:	test   %rax,%rax
  45b0d5:	mov    %rax,0x98(%rsp)
  45b0dd:	je     45a169 <X509_get0_pubkey_bitstr@plt+0x43799>
  45b0e3:	cmpq   $0x0,0x50(%rsp)
  45b0e9:	jne    45b0f5 <X509_get0_pubkey_bitstr@plt+0x44725>
  45b0eb:	callq  413790 <EVP_sha1@plt>
  45b0f0:	mov    %rax,0x50(%rsp)
  45b0f5:	cmpq   $0x0,0x88(%rsp)
  45b0fe:	je     45b176 <X509_get0_pubkey_bitstr@plt+0x447a6>
  45b100:	cmpq   $0x0,0x198(%rsp)
  45b109:	je     45b162 <X509_get0_pubkey_bitstr@plt+0x44792>
  45b10b:	mov    0x88(%rsp),%rdx
  45b113:	mov    0x98(%rsp),%rsi
  45b11b:	mov    0x50(%rsp),%rdi
  45b120:	callq  414d70 <OCSP_cert_to_id@plt>
  45b125:	test   %rax,%rax
  45b128:	je     45b14c <X509_get0_pubkey_bitstr@plt+0x4477c>
  45b12a:	mov    0x90(%rsp),%rdi
  45b132:	mov    %rax,%rsi
  45b135:	mov    %rax,0x60(%rsp)
  45b13a:	callq  412fe0 <sk_push@plt>
  45b13f:	test   %eax,%eax
  45b141:	mov    0x60(%rsp),%rdx
  45b146:	jne    45b2e4 <X509_get0_pubkey_bitstr@plt+0x44914>
  45b14c:	mov    (%r15),%rdi
  45b14f:	lea    0x145cd(%rip),%rsi        # 46f723 <_fini+0x1221f>
  45b156:	xor    %eax,%eax
  45b158:	callq  413c40 <BIO_printf@plt>
  45b15d:	jmpq   45a169 <X509_get0_pubkey_bitstr@plt+0x43799>
  45b162:	callq  412d70 <OCSP_REQUEST_new@plt>
  45b167:	test   %rax,%rax
  45b16a:	mov    %rax,0x198(%rsp)
  45b172:	jne    45b10b <X509_get0_pubkey_bitstr@plt+0x4473b>
  45b174:	jmp    45b14c <X509_get0_pubkey_bitstr@plt+0x4477c>
  45b176:	mov    (%r15),%rdi
  45b179:	lea    0x14870(%rip),%rsi        # 46f9f0 <_fini+0x124ec>
  45b180:	xor    %eax,%eax
  45b182:	callq  413c40 <BIO_printf@plt>
  45b187:	jmpq   45a169 <X509_get0_pubkey_bitstr@plt+0x43799>
  45b18c:	lea    0xa961(%rip),%rdi        # 465af4 <_fini+0x85f0>
  45b193:	mov    $0x8,%ecx
  45b198:	mov    %rax,%rsi
  45b19b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45b19d:	jne    45b2b1 <X509_get0_pubkey_bitstr@plt+0x448e1>
  45b1a3:	mov    0x8(%r14),%rax
  45b1a7:	test   %rax,%rax
  45b1aa:	mov    %rax,0x60(%rsp)
  45b1af:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45b1b5:	cmpq   $0x0,0x50(%rsp)
  45b1bb:	lea    0x8(%r14),%r12
  45b1bf:	jne    45b1d4 <X509_get0_pubkey_bitstr@plt+0x44804>
  45b1c1:	callq  413790 <EVP_sha1@plt>
  45b1c6:	mov    %rax,0x50(%rsp)
  45b1cb:	mov    0x8(%r14),%rax
  45b1cf:	mov    %rax,0x60(%rsp)
  45b1d4:	cmpq   $0x0,0x88(%rsp)
  45b1dd:	je     45b176 <X509_get0_pubkey_bitstr@plt+0x447a6>
  45b1df:	cmpq   $0x0,0x198(%rsp)
  45b1e8:	je     45b34d <X509_get0_pubkey_bitstr@plt+0x4497d>
  45b1ee:	mov    0x88(%rsp),%rdi
  45b1f6:	callq  414400 <X509_get_subject_name@plt>
  45b1fb:	mov    0x88(%rsp),%rdi
  45b203:	mov    %rax,0x68(%rsp)
  45b208:	callq  4169d0 <X509_get0_pubkey_bitstr@plt>
  45b20d:	mov    0x60(%rsp),%rsi
  45b212:	xor    %edi,%edi
  45b214:	mov    %rax,0x70(%rsp)
  45b219:	callq  415200 <s2i_ASN1_INTEGER@plt>
  45b21e:	test   %rax,%rax
  45b221:	mov    0x70(%rsp),%rdx
  45b226:	je     45b332 <X509_get0_pubkey_bitstr@plt+0x44962>
  45b22c:	mov    0x68(%rsp),%rsi
  45b231:	mov    0x50(%rsp),%rdi
  45b236:	mov    %rax,%rcx
  45b239:	mov    %rax,0x70(%rsp)
  45b23e:	callq  413de0 <OCSP_cert_id_new@plt>
  45b243:	mov    0x70(%rsp),%r8
  45b248:	mov    %rax,0x60(%rsp)
  45b24d:	mov    %r8,%rdi
  45b250:	callq  412a90 <ASN1_INTEGER_free@plt>
  45b255:	mov    0x60(%rsp),%rsi
  45b25a:	test   %rsi,%rsi
  45b25d:	je     45b14c <X509_get0_pubkey_bitstr@plt+0x4477c>
  45b263:	mov    0x90(%rsp),%rdi
  45b26b:	callq  412fe0 <sk_push@plt>
  45b270:	test   %eax,%eax
  45b272:	je     45b14c <X509_get0_pubkey_bitstr@plt+0x4477c>
  45b278:	mov    0x60(%rsp),%rsi
  45b27d:	mov    0x198(%rsp),%rdi
  45b285:	callq  414450 <OCSP_request_add0_id@plt>
  45b28a:	test   %rax,%rax
  45b28d:	je     45b14c <X509_get0_pubkey_bitstr@plt+0x4477c>
  45b293:	mov    0x8(%r14),%rsi
  45b297:	mov    0xa0(%rsp),%rdi
  45b29f:	callq  412fe0 <sk_push@plt>
  45b2a4:	test   %eax,%eax
  45b2a6:	jne    45b07b <X509_get0_pubkey_bitstr@plt+0x446ab>
  45b2ac:	jmpq   45a169 <X509_get0_pubkey_bitstr@plt+0x43799>
  45b2b1:	lea    0x14488(%rip),%rdi        # 46f740 <_fini+0x1223c>
  45b2b8:	mov    $0x7,%ecx
  45b2bd:	mov    %rax,%rsi
  45b2c0:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45b2c2:	jne    45b2fe <X509_get0_pubkey_bitstr@plt+0x4492e>
  45b2c4:	mov    0x8(%r14),%rax
  45b2c8:	test   %rax,%rax
  45b2cb:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45b2d1:	lea    0x8(%r14),%r12
  45b2d5:	mov    %rax,0xc0(%rsp)
  45b2dd:	xor    %edx,%edx
  45b2df:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45b2e4:	mov    0x198(%rsp),%rdi
  45b2ec:	mov    %rdx,%rsi
  45b2ef:	callq  414450 <OCSP_request_add0_id@plt>
  45b2f4:	test   %rax,%rax
  45b2f7:	jne    45b293 <X509_get0_pubkey_bitstr@plt+0x448c3>
  45b2f9:	jmpq   45b14c <X509_get0_pubkey_bitstr@plt+0x4477c>
  45b2fe:	cmpb   $0x2d,(%rax)
  45b301:	jne    45b368 <X509_get0_pubkey_bitstr@plt+0x44998>
  45b303:	cmpb   $0x43,0x1(%rax)
  45b307:	jne    45b368 <X509_get0_pubkey_bitstr@plt+0x44998>
  45b309:	cmpb   $0x41,0x2(%rax)
  45b30d:	jne    45b368 <X509_get0_pubkey_bitstr@plt+0x44998>
  45b30f:	cmpb   $0x0,0x3(%rax)
  45b313:	jne    45b368 <X509_get0_pubkey_bitstr@plt+0x44998>
  45b315:	mov    0x8(%r14),%rax
  45b319:	test   %rax,%rax
  45b31c:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45b322:	lea    0x8(%r14),%r12
  45b326:	mov    %rax,0x38(%rsp)
  45b32b:	xor    %edx,%edx
  45b32d:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45b332:	mov    0x60(%rsp),%rdx
  45b337:	mov    (%r15),%rdi
  45b33a:	lea    0x146d7(%rip),%rsi        # 46fa18 <_fini+0x12514>
  45b341:	xor    %eax,%eax
  45b343:	callq  413c40 <BIO_printf@plt>
  45b348:	jmpq   45a169 <X509_get0_pubkey_bitstr@plt+0x43799>
  45b34d:	callq  412d70 <OCSP_REQUEST_new@plt>
  45b352:	test   %rax,%rax
  45b355:	mov    %rax,0x198(%rsp)
  45b35d:	jne    45b1ee <X509_get0_pubkey_bitstr@plt+0x4481e>
  45b363:	jmpq   45b14c <X509_get0_pubkey_bitstr@plt+0x4477c>
  45b368:	lea    0x143d8(%rip),%rdi        # 46f747 <_fini+0x12243>
  45b36f:	mov    $0x6,%ecx
  45b374:	mov    %rax,%rsi
  45b377:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45b379:	jne    45b3dd <X509_get0_pubkey_bitstr@plt+0x44a0d>
  45b37b:	mov    0x8(%r14),%rdi
  45b37f:	test   %rdi,%rdi
  45b382:	je     45b3d6 <X509_get0_pubkey_bitstr@plt+0x44a06>
  45b384:	mov    $0xa,%edx
  45b389:	xor    %esi,%esi
  45b38b:	lea    0x8(%r14),%r12
  45b38f:	callq  4155d0 <strtol@plt>
  45b394:	xor    %edx,%edx
  45b396:	test   %eax,%eax
  45b398:	mov    %eax,0x40(%rsp)
  45b39c:	jns    45b3b8 <X509_get0_pubkey_bitstr@plt+0x449e8>
  45b39e:	mov    0x8(%r14),%rdx
  45b3a2:	mov    (%r15),%rdi
  45b3a5:	lea    0x143a1(%rip),%rsi        # 46f74d <_fini+0x12249>
  45b3ac:	xor    %eax,%eax
  45b3ae:	callq  413c40 <BIO_printf@plt>
  45b3b3:	mov    $0x1,%edx
  45b3b8:	cmpl   $0xffffffff,0x100(%rsp)
  45b3c0:	jne    45922b <X509_get0_pubkey_bitstr@plt+0x4285b>
  45b3c6:	movl   $0x0,0x100(%rsp)
  45b3d1:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45b3d6:	mov    %r14,%r12
  45b3d9:	xor    %edx,%edx
  45b3db:	jmp    45b3b8 <X509_get0_pubkey_bitstr@plt+0x449e8>
  45b3dd:	lea    0x14383(%rip),%rdi        # 46f767 <_fini+0x12263>
  45b3e4:	mov    $0xa,%ecx
  45b3e9:	mov    %rax,%rsi
  45b3ec:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45b3ee:	jne    45b43d <X509_get0_pubkey_bitstr@plt+0x44a6d>
  45b3f0:	mov    0x8(%r14),%rdi
  45b3f4:	test   %rdi,%rdi
  45b3f7:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45b3fd:	mov    $0xa,%edx
  45b402:	xor    %esi,%esi
  45b404:	lea    0x8(%r14),%r12
  45b408:	callq  4155d0 <strtol@plt>
  45b40d:	xor    %edx,%edx
  45b40f:	test   %eax,%eax
  45b411:	mov    %eax,0xcc(%rsp)
  45b418:	jns    4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45b41e:	mov    0x8(%r14),%rdx
  45b422:	mov    (%r15),%rdi
  45b425:	lea    0x14345(%rip),%rsi        # 46f771 <_fini+0x1226d>
  45b42c:	xor    %eax,%eax
  45b42e:	callq  413c40 <BIO_printf@plt>
  45b433:	mov    $0x1,%edx
  45b438:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45b43d:	lea    0x14346(%rip),%rdi        # 46f78a <_fini+0x12286>
  45b444:	mov    $0x7,%ecx
  45b449:	mov    %rax,%rsi
  45b44c:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45b44e:	jne    45b49d <X509_get0_pubkey_bitstr@plt+0x44acd>
  45b450:	mov    0x8(%r14),%rdi
  45b454:	test   %rdi,%rdi
  45b457:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45b45d:	mov    $0xa,%edx
  45b462:	xor    %esi,%esi
  45b464:	lea    0x8(%r14),%r12
  45b468:	callq  4155d0 <strtol@plt>
  45b46d:	xor    %edx,%edx
  45b46f:	test   %eax,%eax
  45b471:	mov    %eax,0x100(%rsp)
  45b478:	jns    4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45b47e:	mov    0x8(%r14),%rdx
  45b482:	mov    (%r15),%rdi
  45b485:	lea    0x142c1(%rip),%rsi        # 46f74d <_fini+0x12249>
  45b48c:	xor    %eax,%eax
  45b48e:	callq  413c40 <BIO_printf@plt>
  45b493:	mov    $0x1,%edx
  45b498:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45b49d:	lea    0x142ed(%rip),%rdi        # 46f791 <_fini+0x1228d>
  45b4a4:	mov    $0x9,%ecx
  45b4a9:	mov    %rax,%rsi
  45b4ac:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45b4ae:	jne    45b4cd <X509_get0_pubkey_bitstr@plt+0x44afd>
  45b4b0:	mov    0x8(%r14),%rax
  45b4b4:	test   %rax,%rax
  45b4b7:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45b4bd:	lea    0x8(%r14),%r12
  45b4c1:	mov    %rax,0x28(%rsp)
  45b4c6:	xor    %edx,%edx
  45b4c8:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45b4cd:	lea    0x142c6(%rip),%rdi        # 46f79a <_fini+0x12296>
  45b4d4:	mov    $0x6,%ecx
  45b4d9:	mov    %rax,%rsi
  45b4dc:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45b4de:	jne    45b4fb <X509_get0_pubkey_bitstr@plt+0x44b2b>
  45b4e0:	mov    0x8(%r14),%rax
  45b4e4:	test   %rax,%rax
  45b4e7:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45b4ed:	lea    0x8(%r14),%r12
  45b4f1:	mov    %rax,%r13
  45b4f4:	xor    %edx,%edx
  45b4f6:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45b4fb:	lea    0x1429e(%rip),%rdi        # 46f7a0 <_fini+0x1229c>
  45b502:	mov    $0x8,%ecx
  45b507:	mov    %rax,%rsi
  45b50a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45b50c:	jne    45b529 <X509_get0_pubkey_bitstr@plt+0x44b59>
  45b50e:	mov    0x8(%r14),%rax
  45b512:	test   %rax,%rax
  45b515:	je     459228 <X509_get0_pubkey_bitstr@plt+0x42858>
  45b51b:	lea    0x8(%r14),%r12
  45b51f:	mov    %rax,0x30(%rsp)
  45b524:	jmpq   45b07b <X509_get0_pubkey_bitstr@plt+0x446ab>
  45b529:	lea    0x1(%rax),%rdi
  45b52d:	mov    %r14,%r12
  45b530:	callq  416720 <EVP_get_digestbyname@plt>
  45b535:	xor    %edx,%edx
  45b537:	test   %rax,%rax
  45b53a:	mov    %rax,0x50(%rsp)
  45b53f:	sete   %dl
  45b542:	jmpq   4590e6 <X509_get0_pubkey_bitstr@plt+0x42716>
  45b547:	nopw   0x0(%rax,%rax,1)
  45b550:	push   %r15
  45b552:	push   %r14
  45b554:	push   %r13
  45b556:	push   %r12
  45b558:	push   %rbp
  45b559:	mov    %rsi,%rbp
  45b55c:	mov    $0x1,%esi
  45b561:	push   %rbx
  45b562:	mov    %edi,%ebx
  45b564:	mov    $0xd,%edi
  45b569:	sub    $0x28,%rsp
  45b56d:	mov    %fs:0x28,%rax
  45b576:	mov    %rax,0x18(%rsp)
  45b57b:	xor    %eax,%eax
  45b57d:	movq   $0x0,0x10(%rsp)
  45b586:	callq  414ee0 <signal@plt>
  45b58b:	lea    0x21f7ae(%rip),%rax        # 67ad40 <_edata+0x38>
  45b592:	cmpq   $0x0,(%rax)
  45b596:	je     45b8e7 <X509_get0_pubkey_bitstr@plt+0x44f17>
  45b59c:	sub    $0x1,%ebx
  45b59f:	lea    0x8(%rbp),%rax
  45b5a3:	test   %ebx,%ebx
  45b5a5:	jle    45b842 <X509_get0_pubkey_bitstr@plt+0x44e72>
  45b5ab:	mov    0x8(%rbp),%rdx
  45b5af:	cmpb   $0x2d,(%rdx)
  45b5b2:	jne    45b928 <X509_get0_pubkey_bitstr@plt+0x44f58>
  45b5b8:	movl   $0x0,0xc(%rsp)
  45b5c0:	movl   $0x0,0x4(%rsp)
  45b5c8:	xor    %ebp,%ebp
  45b5ca:	movl   $0x14,0x8(%rsp)
  45b5d2:	xor    %r15d,%r15d
  45b5d5:	lea    0x4301(%rip),%r13        # 45f8dd <_fini+0x23d9>
  45b5dc:	mov    $0x5,%r14d
  45b5e2:	jmp    45b651 <X509_get0_pubkey_bitstr@plt+0x44c81>
  45b5e4:	nopl   0x0(%rax)
  45b5e8:	lea    0x1500e(%rip),%rdi        # 4705fd <_fini+0x130f9>
  45b5ef:	mov    $0xa,%ecx
  45b5f4:	mov    %rdx,%rsi
  45b5f7:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45b5f9:	je     45b750 <X509_get0_pubkey_bitstr@plt+0x44d80>
  45b5ff:	lea    0x15001(%rip),%rdi        # 470607 <_fini+0x13103>
  45b606:	mov    $0x6,%ecx
  45b60b:	mov    %rdx,%rsi
  45b60e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45b610:	jne    45b760 <X509_get0_pubkey_bitstr@plt+0x44d90>
  45b616:	sub    $0x1,%ebx
  45b619:	je     45b865 <X509_get0_pubkey_bitstr@plt+0x44e95>
  45b61f:	mov    0x8(%rax),%rdi
  45b623:	lea    0x8(%rax),%r12
  45b627:	mov    $0xa,%edx
  45b62c:	xor    %esi,%esi
  45b62e:	callq  4155d0 <strtol@plt>
  45b633:	mov    %eax,0x4(%rsp)
  45b637:	mov    %r12,%rax
  45b63a:	sub    $0x1,%ebx
  45b63d:	lea    0x8(%rax),%r12
  45b641:	test   %ebx,%ebx
  45b643:	jle    45b66f <X509_get0_pubkey_bitstr@plt+0x44c9f>
  45b645:	mov    0x8(%rax),%rdx
  45b649:	cmpb   $0x2d,(%rdx)
  45b64c:	jne    45b683 <X509_get0_pubkey_bitstr@plt+0x44cb3>
  45b64e:	mov    %r12,%rax
  45b651:	mov    %rdx,%rsi
  45b654:	mov    %r13,%rdi
  45b657:	mov    %r14,%rcx
  45b65a:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45b65c:	jne    45b5e8 <X509_get0_pubkey_bitstr@plt+0x44c18>
  45b65e:	sub    $0x1,%ebx
  45b661:	mov    $0x1,%r15d
  45b667:	lea    0x8(%rax),%r12
  45b66b:	test   %ebx,%ebx
  45b66d:	jg     45b645 <X509_get0_pubkey_bitstr@plt+0x44c75>
  45b66f:	cmpq   $0x0,0x8(%rax)
  45b674:	jne    45b683 <X509_get0_pubkey_bitstr@plt+0x44cb3>
  45b676:	test   %ebp,%ebp
  45b678:	je     45b84d <X509_get0_pubkey_bitstr@plt+0x44e7d>
  45b67e:	mov    $0x1,%ebp
  45b683:	callq  4152b0 <BIO_s_file@plt>
  45b688:	mov    %rax,%rdi
  45b68b:	callq  414a20 <BIO_new@plt>
  45b690:	test   %rax,%rax
  45b693:	mov    %rax,%rbx
  45b696:	je     45b6b1 <X509_get0_pubkey_bitstr@plt+0x44ce1>
  45b698:	mov    0x21a819(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  45b69f:	xor    %edx,%edx
  45b6a1:	mov    $0x6a,%esi
  45b6a6:	mov    %rbx,%rdi
  45b6a9:	mov    (%rax),%rcx
  45b6ac:	callq  412af0 <BIO_ctrl@plt>
  45b6b1:	test   %ebp,%ebp
  45b6b3:	jne    45b7c8 <X509_get0_pubkey_bitstr@plt+0x44df8>
  45b6b9:	test   %r15d,%r15d
  45b6bc:	lea    0x10(%rsp),%rdi
  45b6c1:	mov    (%r12),%rsi
  45b6c5:	je     45b829 <X509_get0_pubkey_bitstr@plt+0x44e59>
  45b6cb:	callq  413030 <BN_hex2bn@plt>
  45b6d0:	mov    0x10(%rsp),%rsi
  45b6d5:	mov    %rbx,%rdi
  45b6d8:	callq  413c20 <BN_print@plt>
  45b6dd:	mov    0x8(%rsp),%esi
  45b6e1:	mov    0x10(%rsp),%rdi
  45b6e6:	xor    %edx,%edx
  45b6e8:	xor    %ecx,%ecx
  45b6ea:	callq  415e30 <BN_is_prime_ex@plt>
  45b6ef:	lea    0x46cc(%rip),%rdx        # 45fdc2 <_fini+0x28be>
  45b6f6:	test   %eax,%eax
  45b6f8:	lea    0x14ef9(%rip),%rax        # 4705f8 <_fini+0x130f4>
  45b6ff:	lea    0x14f5c(%rip),%rsi        # 470662 <_fini+0x1315e>
  45b706:	mov    %rbx,%rdi
  45b709:	cmove  %rax,%rdx
  45b70d:	xor    %eax,%eax
  45b70f:	callq  413c40 <BIO_printf@plt>
  45b714:	mov    0x10(%rsp),%rdi
  45b719:	callq  4138e0 <BN_free@plt>
  45b71e:	mov    %rbx,%rdi
  45b721:	callq  416570 <BIO_free_all@plt>
  45b726:	xor    %eax,%eax
  45b728:	mov    0x18(%rsp),%rbx
  45b72d:	xor    %fs:0x28,%rbx
  45b736:	jne    45b96a <X509_get0_pubkey_bitstr@plt+0x44f9a>
  45b73c:	add    $0x28,%rsp
  45b740:	pop    %rbx
  45b741:	pop    %rbp
  45b742:	pop    %r12
  45b744:	pop    %r13
  45b746:	pop    %r14
  45b748:	pop    %r15
  45b74a:	retq   
  45b74b:	nopl   0x0(%rax,%rax,1)
  45b750:	mov    $0x1,%ebp
  45b755:	jmpq   45b63a <X509_get0_pubkey_bitstr@plt+0x44c6a>
  45b75a:	nopw   0x0(%rax,%rax,1)
  45b760:	lea    0x14ea6(%rip),%rdi        # 47060d <_fini+0x13109>
  45b767:	mov    $0x6,%ecx
  45b76c:	mov    %rdx,%rsi
  45b76f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45b771:	je     45b7b8 <X509_get0_pubkey_bitstr@plt+0x44de8>
  45b773:	lea    0x14e99(%rip),%rdi        # 470613 <_fini+0x1310f>
  45b77a:	mov    $0x8,%ecx
  45b77f:	mov    %rdx,%rsi
  45b782:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45b784:	jne    45b94d <X509_get0_pubkey_bitstr@plt+0x44f7d>
  45b78a:	sub    $0x1,%ebx
  45b78d:	je     45b865 <X509_get0_pubkey_bitstr@plt+0x44e95>
  45b793:	mov    0x8(%rax),%rdi
  45b797:	lea    0x8(%rax),%r12
  45b79b:	mov    $0xa,%edx
  45b7a0:	xor    %esi,%esi
  45b7a2:	callq  4155d0 <strtol@plt>
  45b7a7:	mov    %eax,0x8(%rsp)
  45b7ab:	mov    %r12,%rax
  45b7ae:	jmpq   45b63a <X509_get0_pubkey_bitstr@plt+0x44c6a>
  45b7b3:	nopl   0x0(%rax,%rax,1)
  45b7b8:	movl   $0x1,0xc(%rsp)
  45b7c0:	jmpq   45b63a <X509_get0_pubkey_bitstr@plt+0x44c6a>
  45b7c5:	nopl   (%rax)
  45b7c8:	mov    0x4(%rsp),%eax
  45b7cc:	test   %eax,%eax
  45b7ce:	je     45b8c5 <X509_get0_pubkey_bitstr@plt+0x44ef5>
  45b7d4:	callq  416760 <BN_new@plt>
  45b7d9:	mov    0xc(%rsp),%edx
  45b7dd:	mov    0x4(%rsp),%esi
  45b7e1:	xor    %r9d,%r9d
  45b7e4:	xor    %r8d,%r8d
  45b7e7:	xor    %ecx,%ecx
  45b7e9:	mov    %rax,%rdi
  45b7ec:	mov    %rax,0x10(%rsp)
  45b7f1:	callq  414260 <BN_generate_prime_ex@plt>
  45b7f6:	test   %r15d,%r15d
  45b7f9:	mov    0x10(%rsp),%rdi
  45b7fe:	jne    45b835 <X509_get0_pubkey_bitstr@plt+0x44e65>
  45b800:	callq  413990 <BN_bn2dec@plt>
  45b805:	mov    %rax,%rbp
  45b808:	lea    0x4faa(%rip),%rsi        # 4607b9 <_fini+0x32b5>
  45b80f:	mov    %rbx,%rdi
  45b812:	mov    %rbp,%rdx
  45b815:	xor    %eax,%eax
  45b817:	callq  413c40 <BIO_printf@plt>
  45b81c:	mov    %rbp,%rdi
  45b81f:	callq  415020 <CRYPTO_free@plt>
  45b824:	jmpq   45b714 <X509_get0_pubkey_bitstr@plt+0x44d44>
  45b829:	callq  414650 <BN_dec2bn@plt>
  45b82e:	xchg   %ax,%ax
  45b830:	jmpq   45b6d0 <X509_get0_pubkey_bitstr@plt+0x44d00>
  45b835:	callq  414930 <BN_bn2hex@plt>
  45b83a:	mov    %rax,%rbp
  45b83d:	nopl   (%rax)
  45b840:	jmp    45b808 <X509_get0_pubkey_bitstr@plt+0x44e38>
  45b842:	cmpq   $0x0,0x8(%rbp)
  45b847:	jne    45b928 <X509_get0_pubkey_bitstr@plt+0x44f58>
  45b84d:	lea    0x21f4ec(%rip),%rax        # 67ad40 <_edata+0x38>
  45b854:	lea    0x14dd5(%rip),%rsi        # 470630 <_fini+0x1312c>
  45b85b:	mov    (%rax),%rdi
  45b85e:	xor    %eax,%eax
  45b860:	callq  413c40 <BIO_printf@plt>
  45b865:	lea    0x21f4d4(%rip),%rax        # 67ad40 <_edata+0x38>
  45b86c:	lea    0x24e8(%rip),%rsi        # 45dd5b <_fini+0x857>
  45b873:	mov    (%rax),%rdi
  45b876:	xor    %eax,%eax
  45b878:	callq  413c40 <BIO_printf@plt>
  45b87d:	lea    0x21f4bc(%rip),%rax        # 67ad40 <_edata+0x38>
  45b884:	lea    0x4052(%rip),%rdx        # 45f8dd <_fini+0x23d9>
  45b88b:	lea    0x14ddd(%rip),%rsi        # 47066f <_fini+0x1316b>
  45b892:	mov    (%rax),%rdi
  45b895:	xor    %eax,%eax
  45b897:	callq  413c40 <BIO_printf@plt>
  45b89c:	lea    0x21f49d(%rip),%rax        # 67ad40 <_edata+0x38>
  45b8a3:	lea    0x14dd0(%rip),%rdx        # 47067a <_fini+0x13176>
  45b8aa:	lea    0x14dd5(%rip),%rsi        # 470686 <_fini+0x13182>
  45b8b1:	mov    (%rax),%rdi
  45b8b4:	xor    %eax,%eax
  45b8b6:	callq  413c40 <BIO_printf@plt>
  45b8bb:	mov    $0x1,%eax
  45b8c0:	jmpq   45b728 <X509_get0_pubkey_bitstr@plt+0x44d58>
  45b8c5:	lea    0x21f474(%rip),%rax        # 67ad40 <_edata+0x38>
  45b8cc:	lea    0x14d71(%rip),%rsi        # 470644 <_fini+0x13140>
  45b8d3:	mov    (%rax),%rdi
  45b8d6:	xor    %eax,%eax
  45b8d8:	callq  413c40 <BIO_printf@plt>
  45b8dd:	mov    $0x1,%eax
  45b8e2:	jmpq   45b728 <X509_get0_pubkey_bitstr@plt+0x44d58>
  45b8e7:	callq  4152b0 <BIO_s_file@plt>
  45b8ec:	mov    %rax,%rdi
  45b8ef:	callq  414a20 <BIO_new@plt>
  45b8f4:	lea    0x21f445(%rip),%rdx        # 67ad40 <_edata+0x38>
  45b8fb:	test   %rax,%rax
  45b8fe:	mov    %rax,(%rdx)
  45b901:	je     45b59c <X509_get0_pubkey_bitstr@plt+0x44bcc>
  45b907:	mov    0x21a672(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  45b90e:	mov    $0x6a,%esi
  45b913:	mov    %rax,%rdi
  45b916:	mov    (%rdx),%rcx
  45b919:	mov    $0x10,%edx
  45b91e:	callq  412af0 <BIO_ctrl@plt>
  45b923:	jmpq   45b59c <X509_get0_pubkey_bitstr@plt+0x44bcc>
  45b928:	mov    %rax,%r12
  45b92b:	movl   $0x0,0xc(%rsp)
  45b933:	movl   $0x0,0x4(%rsp)
  45b93b:	xor    %ebp,%ebp
  45b93d:	movl   $0x14,0x8(%rsp)
  45b945:	xor    %r15d,%r15d
  45b948:	jmpq   45b683 <X509_get0_pubkey_bitstr@plt+0x44cb3>
  45b94d:	lea    0x21f3ec(%rip),%rax        # 67ad40 <_edata+0x38>
  45b954:	lea    0x14cc0(%rip),%rsi        # 47061b <_fini+0x13117>
  45b95b:	mov    (%rax),%rdi
  45b95e:	xor    %eax,%eax
  45b960:	callq  413c40 <BIO_printf@plt>
  45b965:	jmpq   45b865 <X509_get0_pubkey_bitstr@plt+0x44e95>
  45b96a:	callq  414c30 <__stack_chk_fail@plt>
  45b96f:	nop
  45b970:	mov    %edi,%eax
  45b972:	retq   
  45b973:	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  45b980:	push   %r14
  45b982:	mov    %rcx,%r14
  45b985:	push   %r13
  45b987:	push   %r12
  45b989:	mov    %rsi,%r12
  45b98c:	push   %rbp
  45b98d:	mov    %rdi,%rbp
  45b990:	mov    %rdx,%rdi
  45b993:	push   %rbx
  45b994:	mov    %rdx,%rbx
  45b997:	sub    $0x1040,%rsp
  45b99e:	mov    %fs:0x28,%rax
  45b9a7:	mov    %rax,0x1038(%rsp)
  45b9af:	xor    %eax,%eax
  45b9b1:	callq  414330 <EVP_MD_size@plt>
  45b9b6:	test   %eax,%eax
  45b9b8:	mov    %eax,%r13d
  45b9bb:	js     45ba60 <X509_get0_pubkey_bitstr@plt+0x45090>
  45b9c1:	test   %rbp,%rbp
  45b9c4:	je     45ba68 <X509_get0_pubkey_bitstr@plt+0x45098>
  45b9ca:	lea    0x14ccd(%rip),%rsi        # 47069e <_fini+0x1319a>
  45b9d1:	mov    $0x265,%edx
  45b9d6:	mov    %eax,%edi
  45b9d8:	callq  413d50 <CRYPTO_malloc@plt>
  45b9dd:	xor    %ecx,%ecx
  45b9df:	test   %rax,%rax
  45b9e2:	mov    %rax,(%r14)
  45b9e5:	je     45ba32 <X509_get0_pubkey_bitstr@plt+0x45062>
  45b9e7:	mov    %rbx,%rsi
  45b9ea:	mov    %rsp,%rdi
  45b9ed:	mov    %rsp,%r12
  45b9f0:	callq  4129f0 <EVP_DigestInit@plt>
  45b9f5:	lea    0x30(%rsp),%rbx
  45b9fa:	jmp    45ba0e <X509_get0_pubkey_bitstr@plt+0x4503e>
  45b9fc:	nopl   0x0(%rax)
  45ba00:	movslq %eax,%rdx
  45ba03:	mov    %rbx,%rsi
  45ba06:	mov    %r12,%rdi
  45ba09:	callq  415f30 <EVP_DigestUpdate@plt>
  45ba0e:	mov    $0x1000,%edx
  45ba13:	mov    %rbx,%rsi
  45ba16:	mov    %rbp,%rdi
  45ba19:	callq  413930 <BIO_read@plt>
  45ba1e:	test   %eax,%eax
  45ba20:	jg     45ba00 <X509_get0_pubkey_bitstr@plt+0x45030>
  45ba22:	mov    (%r14),%rsi
  45ba25:	xor    %edx,%edx
  45ba27:	mov    %r12,%rdi
  45ba2a:	callq  415640 <EVP_DigestFinal@plt>
  45ba2f:	mov    %r13d,%ecx
  45ba32:	mov    %ecx,%eax
  45ba34:	mov    0x1038(%rsp),%rcx
  45ba3c:	xor    %fs:0x28,%rcx
  45ba45:	jne    45bab8 <X509_get0_pubkey_bitstr@plt+0x450e8>
  45ba47:	add    $0x1040,%rsp
  45ba4e:	pop    %rbx
  45ba4f:	pop    %rbp
  45ba50:	pop    %r12
  45ba52:	pop    %r13
  45ba54:	pop    %r14
  45ba56:	retq   
  45ba57:	nopw   0x0(%rax,%rax,1)
  45ba60:	xor    %ecx,%ecx
  45ba62:	jmp    45ba32 <X509_get0_pubkey_bitstr@plt+0x45062>
  45ba64:	nopl   0x0(%rax)
  45ba68:	mov    %rsp,%rsi
  45ba6b:	mov    %r12,%rdi
  45ba6e:	callq  414d40 <string_to_hex@plt>
  45ba73:	test   %rax,%rax
  45ba76:	mov    %rax,(%r14)
  45ba79:	je     45ba87 <X509_get0_pubkey_bitstr@plt+0x450b7>
  45ba7b:	movslq %r13d,%rdx
  45ba7e:	cmp    (%rsp),%rdx
  45ba82:	mov    %r13d,%ecx
  45ba85:	je     45ba32 <X509_get0_pubkey_bitstr@plt+0x45062>
  45ba87:	mov    %rax,%rdi
  45ba8a:	callq  415020 <CRYPTO_free@plt>
  45ba8f:	lea    0x21f2aa(%rip),%rax        # 67ad40 <_edata+0x38>
  45ba96:	movq   $0x0,(%r14)
  45ba9d:	lea    0x14d2c(%rip),%rsi        # 4707d0 <_fini+0x132cc>
  45baa4:	mov    %r13d,%edx
  45baa7:	mov    (%rax),%rdi
  45baaa:	xor    %eax,%eax
  45baac:	callq  413c40 <BIO_printf@plt>
  45bab1:	xor    %ecx,%ecx
  45bab3:	jmpq   45ba32 <X509_get0_pubkey_bitstr@plt+0x45062>
  45bab8:	callq  414c30 <__stack_chk_fail@plt>
  45babd:	nopl   (%rax)
  45bac0:	push   %r12
  45bac2:	push   %rbp
  45bac3:	mov    %rdi,%rbp
  45bac6:	push   %rbx
  45bac7:	sub    $0x10,%rsp
  45bacb:	mov    %fs:0x28,%rax
  45bad4:	mov    %rax,0x8(%rsp)
  45bad9:	xor    %eax,%eax
  45badb:	test   %rdi,%rdi
  45bade:	movq   $0xffffffffffffffff,(%rsp)
  45bae6:	je     45bc20 <X509_get0_pubkey_bitstr@plt+0x45250>
  45baec:	xor    %edi,%edi
  45baee:	callq  413cd0 <NCONF_new@plt>
  45baf3:	test   %rax,%rax
  45baf6:	mov    %rax,%rbx
  45baf9:	je     45bbb0 <X509_get0_pubkey_bitstr@plt+0x451e0>
  45baff:	mov    %rsp,%rdx
  45bb02:	mov    %rbp,%rsi
  45bb05:	mov    %rax,%rdi
  45bb08:	callq  414c50 <NCONF_load@plt>
  45bb0d:	test   %eax,%eax
  45bb0f:	jle    45bbb0 <X509_get0_pubkey_bitstr@plt+0x451e0>
  45bb15:	lea    0x21f224(%rip),%r12        # 67ad40 <_edata+0x38>
  45bb1c:	mov    (%r12),%rdi
  45bb20:	lea    0x2852(%rip),%rsi        # 45e379 <_fini+0xe75>
  45bb27:	mov    %rbp,%rdx
  45bb2a:	xor    %eax,%eax
  45bb2c:	callq  413c40 <BIO_printf@plt>
  45bb31:	lea    0x2877(%rip),%rdx        # 45e3af <_fini+0xeab>
  45bb38:	xor    %esi,%esi
  45bb3a:	mov    %rbx,%rdi
  45bb3d:	callq  413fd0 <NCONF_get_string@plt>
  45bb42:	test   %rax,%rax
  45bb45:	je     45bc00 <X509_get0_pubkey_bitstr@plt+0x45230>
  45bb4b:	lea    0x26db(%rip),%rsi        # 45e22d <_fini+0xd29>
  45bb52:	mov    %rax,%rdi
  45bb55:	callq  412ba0 <BIO_new_file@plt>
  45bb5a:	test   %rax,%rax
  45bb5d:	mov    %rax,%rbp
  45bb60:	je     45bc10 <X509_get0_pubkey_bitstr@plt+0x45240>
  45bb66:	mov    %rax,%rdi
  45bb69:	callq  415fd0 <OBJ_create_objects@plt>
  45bb6e:	mov    %rbp,%rdi
  45bb71:	callq  416570 <BIO_free_all@plt>
  45bb76:	mov    (%r12),%rdi
  45bb7a:	mov    %rbx,%rsi
  45bb7d:	callq  445bb0 <X509_get0_pubkey_bitstr@plt+0x2f1e0>
  45bb82:	test   %eax,%eax
  45bb84:	jne    45bb8f <X509_get0_pubkey_bitstr@plt+0x451bf>
  45bb86:	mov    (%r12),%rdi
  45bb8a:	callq  413f40 <ERR_print_errors@plt>
  45bb8f:	mov    0x8(%rsp),%rcx
  45bb94:	xor    %fs:0x28,%rcx
  45bb9d:	mov    %rbx,%rax
  45bba0:	jne    45bc57 <X509_get0_pubkey_bitstr@plt+0x45287>
  45bba6:	add    $0x10,%rsp
  45bbaa:	pop    %rbx
  45bbab:	pop    %rbp
  45bbac:	pop    %r12
  45bbae:	retq   
  45bbaf:	nop
  45bbb0:	mov    (%rsp),%rdx
  45bbb4:	test   %rdx,%rdx
  45bbb7:	jle    45bbe0 <X509_get0_pubkey_bitstr@plt+0x45210>
  45bbb9:	lea    0x21f180(%rip),%r12        # 67ad40 <_edata+0x38>
  45bbc0:	lea    0x5f39(%rip),%rsi        # 461b00 <_fini+0x45fc>
  45bbc7:	mov    %rbp,%rcx
  45bbca:	xor    %eax,%eax
  45bbcc:	mov    (%r12),%rdi
  45bbd0:	callq  413c40 <BIO_printf@plt>
  45bbd5:	test   %rbx,%rbx
  45bbd8:	jne    45bb1c <X509_get0_pubkey_bitstr@plt+0x4514c>
  45bbde:	jmp    45bb8f <X509_get0_pubkey_bitstr@plt+0x451bf>
  45bbe0:	lea    0x21f159(%rip),%r12        # 67ad40 <_edata+0x38>
  45bbe7:	lea    0x5eea(%rip),%rsi        # 461ad8 <_fini+0x45d4>
  45bbee:	mov    %rbp,%rdx
  45bbf1:	xor    %eax,%eax
  45bbf3:	mov    (%r12),%rdi
  45bbf7:	callq  413c40 <BIO_printf@plt>
  45bbfc:	jmp    45bbd5 <X509_get0_pubkey_bitstr@plt+0x45205>
  45bbfe:	xchg   %ax,%ax
  45bc00:	callq  412890 <ERR_clear_error@plt>
  45bc05:	jmpq   45bb76 <X509_get0_pubkey_bitstr@plt+0x451a6>
  45bc0a:	nopw   0x0(%rax,%rax,1)
  45bc10:	mov    (%r12),%rdi
  45bc14:	callq  413f40 <ERR_print_errors@plt>
  45bc19:	jmpq   45bb76 <X509_get0_pubkey_bitstr@plt+0x451a6>
  45bc1e:	xchg   %ax,%ax
  45bc20:	lea    0x1ac3(%rip),%rdi        # 45d6ea <_fini+0x1e6>
  45bc27:	callq  414fc0 <getenv@plt>
  45bc2c:	test   %rax,%rax
  45bc2f:	mov    %rax,%rbp
  45bc32:	jne    45baec <X509_get0_pubkey_bitstr@plt+0x4511c>
  45bc38:	lea    0x1ab8(%rip),%rdi        # 45d6f7 <_fini+0x1f3>
  45bc3f:	xor    %ebx,%ebx
  45bc41:	callq  414fc0 <getenv@plt>
  45bc46:	test   %rax,%rax
  45bc49:	mov    %rax,%rbp
  45bc4c:	je     45bb8f <X509_get0_pubkey_bitstr@plt+0x451bf>
  45bc52:	jmpq   45baec <X509_get0_pubkey_bitstr@plt+0x4511c>
  45bc57:	callq  414c30 <__stack_chk_fail@plt>
  45bc5c:	nopl   0x0(%rax)
  45bc60:	push   %r12
  45bc62:	mov    %rdi,%r12
  45bc65:	push   %rbp
  45bc66:	push   %rbx
  45bc67:	sub    $0x410,%rsp
  45bc6e:	mov    %fs:0x28,%rax
  45bc77:	mov    %rax,0x408(%rsp)
  45bc7f:	xor    %eax,%eax
  45bc81:	callq  4162e0 <ASN1_INTEGER_new@plt>
  45bc86:	test   %rax,%rax
  45bc89:	mov    %rax,%rbx
  45bc8c:	je     45bd70 <X509_get0_pubkey_bitstr@plt+0x453a0>
  45bc92:	lea    0x2594(%rip),%rsi        # 45e22d <_fini+0xd29>
  45bc99:	mov    %r12,%rdi
  45bc9c:	callq  412ba0 <BIO_new_file@plt>
  45bca1:	test   %rax,%rax
  45bca4:	mov    %rax,%rbp
  45bca7:	je     45bd80 <X509_get0_pubkey_bitstr@plt+0x453b0>
  45bcad:	mov    %rsp,%rdx
  45bcb0:	mov    $0x400,%ecx
  45bcb5:	mov    %rbx,%rsi
  45bcb8:	mov    %rax,%rdi
  45bcbb:	callq  4167d0 <a2i_ASN1_INTEGER@plt>
  45bcc0:	test   %eax,%eax
  45bcc2:	jne    45bd28 <X509_get0_pubkey_bitstr@plt+0x45358>
  45bcc4:	lea    0x21f075(%rip),%rax        # 67ad40 <_edata+0x38>
  45bccb:	lea    0xf626(%rip),%rsi        # 46b2f8 <_fini+0xddf4>
  45bcd2:	mov    %r12,%rdx
  45bcd5:	xor    %r12d,%r12d
  45bcd8:	mov    (%rax),%rdi
  45bcdb:	xor    %eax,%eax
  45bcdd:	callq  413c40 <BIO_printf@plt>
  45bce2:	mov    %rbx,%rdi
  45bce5:	xor    %ebx,%ebx
  45bce7:	callq  412a90 <ASN1_INTEGER_free@plt>
  45bcec:	mov    %rbp,%rdi
  45bcef:	callq  416570 <BIO_free_all@plt>
  45bcf4:	mov    %r12,%rdi
  45bcf7:	callq  4138e0 <BN_free@plt>
  45bcfc:	mov    0x408(%rsp),%rcx
  45bd04:	xor    %fs:0x28,%rcx
  45bd0d:	mov    %rbx,%rax
  45bd10:	jne    45bdbd <X509_get0_pubkey_bitstr@plt+0x453ed>
  45bd16:	add    $0x410,%rsp
  45bd1d:	pop    %rbx
  45bd1e:	pop    %rbp
  45bd1f:	pop    %r12
  45bd21:	retq   
  45bd22:	nopw   0x0(%rax,%rax,1)
  45bd28:	xor    %esi,%esi
  45bd2a:	mov    %rbx,%rdi
  45bd2d:	callq  412f90 <ASN1_INTEGER_to_BN@plt>
  45bd32:	test   %rax,%rax
  45bd35:	mov    %rax,%r12
  45bd38:	je     45bce2 <X509_get0_pubkey_bitstr@plt+0x45312>
  45bd3a:	mov    %rbx,%rdi
  45bd3d:	xor    %ebx,%ebx
  45bd3f:	callq  412a90 <ASN1_INTEGER_free@plt>
  45bd44:	mov    $0x1,%esi
  45bd49:	mov    %r12,%rdi
  45bd4c:	callq  414220 <BN_add_word@plt>
  45bd51:	test   %eax,%eax
  45bd53:	je     45bce2 <X509_get0_pubkey_bitstr@plt+0x45312>
  45bd55:	xor    %esi,%esi
  45bd57:	mov    %r12,%rdi
  45bd5a:	callq  412da0 <BN_to_ASN1_INTEGER@plt>
  45bd5f:	test   %rax,%rax
  45bd62:	mov    %rax,%rbx
  45bd65:	jne    45bcec <X509_get0_pubkey_bitstr@plt+0x4531c>
  45bd67:	jmpq   45bce2 <X509_get0_pubkey_bitstr@plt+0x45312>
  45bd6c:	nopl   0x0(%rax)
  45bd70:	xor    %r12d,%r12d
  45bd73:	xor    %ebp,%ebp
  45bd75:	jmpq   45bce2 <X509_get0_pubkey_bitstr@plt+0x45312>
  45bd7a:	nopw   0x0(%rax,%rax,1)
  45bd80:	callq  412890 <ERR_clear_error@plt>
  45bd85:	lea    0x21efb4(%rip),%rax        # 67ad40 <_edata+0x38>
  45bd8c:	lea    0x14a65(%rip),%rsi        # 4707f8 <_fini+0x132f4>
  45bd93:	mov    %r12,%rdx
  45bd96:	xor    %r12d,%r12d
  45bd99:	mov    (%rax),%rdi
  45bd9c:	xor    %eax,%eax
  45bd9e:	callq  413c40 <BIO_printf@plt>
  45bda3:	mov    $0x1,%esi
  45bda8:	mov    %rbx,%rdi
  45bdab:	callq  416340 <ASN1_INTEGER_set@plt>
  45bdb0:	test   %eax,%eax
  45bdb2:	je     45bce2 <X509_get0_pubkey_bitstr@plt+0x45312>
  45bdb8:	jmpq   45bcec <X509_get0_pubkey_bitstr@plt+0x4531c>
  45bdbd:	nopl   (%rax)
  45bdc0:	callq  414c30 <__stack_chk_fail@plt>
  45bdc5:	data32 nopw %cs:0x0(%rax,%rax,1)
  45bdd0:	test   %rdi,%rdi
  45bdd3:	je     45bde0 <X509_get0_pubkey_bitstr@plt+0x45410>
  45bdd5:	jmpq   412ba0 <BIO_new_file@plt>
  45bdda:	nopw   0x0(%rax,%rax,1)
  45bde0:	xor    %esi,%esi
  45bde2:	mov    %rdx,%rdi
  45bde5:	jmpq   4161e0 <BIO_new_fp@plt>
  45bdea:	nopw   0x0(%rax,%rax,1)
  45bdf0:	push   %r12
  45bdf2:	mov    %rsi,%r12
  45bdf5:	push   %rbp
  45bdf6:	mov    %rdi,%rbp
  45bdf9:	mov    %rsi,%rdi
  45bdfc:	push   %rbx
  45bdfd:	callq  45bc60 <X509_get0_pubkey_bitstr@plt+0x45290>
  45be02:	test   %rax,%rax
  45be05:	mov    %rax,%rbx
  45be08:	je     45be78 <X509_get0_pubkey_bitstr@plt+0x454a8>
  45be0a:	lea    0x7807(%rip),%rsi        # 463618 <_fini+0x6114>
  45be11:	mov    %r12,%rdi
  45be14:	callq  412ba0 <BIO_new_file@plt>
  45be19:	test   %rax,%rax
  45be1c:	mov    %rax,%rbp
  45be1f:	je     45be48 <X509_get0_pubkey_bitstr@plt+0x45478>
  45be21:	mov    %rbx,%rsi
  45be24:	mov    %rax,%rdi
  45be27:	callq  414ea0 <i2a_ASN1_INTEGER@plt>
  45be2c:	test   %eax,%eax
  45be2e:	jle    45be48 <X509_get0_pubkey_bitstr@plt+0x45478>
  45be30:	lea    0x8d68(%rip),%rsi        # 464b9f <_fini+0x769b>
  45be37:	mov    %rbp,%rdi
  45be3a:	callq  413b70 <BIO_puts@plt>
  45be3f:	test   %eax,%eax
  45be41:	jg     45be63 <X509_get0_pubkey_bitstr@plt+0x45493>
  45be43:	nopl   0x0(%rax,%rax,1)
  45be48:	lea    0x21eef1(%rip),%rax        # 67ad40 <_edata+0x38>
  45be4f:	lea    0x14a12(%rip),%rsi        # 470868 <_fini+0x13364>
  45be56:	mov    %r12,%rdx
  45be59:	mov    (%rax),%rdi
  45be5c:	xor    %eax,%eax
  45be5e:	callq  413c40 <BIO_printf@plt>
  45be63:	mov    %rbp,%rdi
  45be66:	callq  416570 <BIO_free_all@plt>
  45be6b:	mov    %rbx,%rax
  45be6e:	pop    %rbx
  45be6f:	pop    %rbp
  45be70:	pop    %r12
  45be72:	retq   
  45be73:	nopl   0x0(%rax,%rax,1)
  45be78:	lea    0x149c1(%rip),%rdx        # 470840 <_fini+0x1333c>
  45be7f:	mov    %rbp,%rdi
  45be82:	mov    $0x2,%esi
  45be87:	callq  412f20 <TS_RESP_CTX_set_status_info@plt>
  45be8c:	mov    %rbp,%rdi
  45be8f:	mov    $0x11,%esi
  45be94:	callq  412e80 <TS_RESP_CTX_add_failure_info@plt>
  45be99:	mov    %rbx,%rax
  45be9c:	pop    %rbx
  45be9d:	pop    %rbp
  45be9e:	pop    %r12
  45bea0:	retq   
  45bea1:	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  45beb0:	push   %r15
  45beb2:	push   %r14
  45beb4:	push   %r13
  45beb6:	push   %r12
  45beb8:	push   %rbp
  45beb9:	mov    %rsi,%rbp
  45bebc:	push   %rbx
  45bebd:	mov    %edi,%ebx
  45bebf:	sub    $0xd8,%rsp
  45bec6:	mov    %fs:0x28,%rax
  45becf:	mov    %rax,0xc8(%rsp)
  45bed7:	xor    %eax,%eax
  45bed9:	movq   $0x0,0xa0(%rsp)
  45bee5:	callq  416990 <ERR_load_crypto_strings@plt>
  45beea:	mov    $0xd,%edi
  45beef:	mov    $0x1,%esi
  45bef4:	callq  414ee0 <signal@plt>
  45bef9:	lea    0x21ee40(%rip),%rax        # 67ad40 <_edata+0x38>
  45bf00:	movl   $0x0,0x30(%rsp)
  45bf08:	mov    (%rax),%rdi
  45bf0b:	test   %rdi,%rdi
  45bf0e:	je     45c611 <X509_get0_pubkey_bitstr@plt+0x45c41>
  45bf14:	xor    %esi,%esi
  45bf16:	callq  446b60 <X509_get0_pubkey_bitstr@plt+0x30190>
  45bf1b:	test   %eax,%eax
  45bf1d:	je     45c308 <X509_get0_pubkey_bitstr@plt+0x45938>
  45bf23:	sub    $0x1,%ebx
  45bf26:	add    $0x8,%rbp
  45bf2a:	test   %ebx,%ebx
  45bf2c:	jle    45c548 <X509_get0_pubkey_bitstr@plt+0x45b78>
  45bf32:	movl   $0x0,0x54(%rsp)
  45bf3a:	movl   $0x0,0x34(%rsp)
  45bf42:	xor    %r11d,%r11d
  45bf45:	movq   $0x0,0x78(%rsp)
  45bf4e:	movq   $0x0,0x70(%rsp)
  45bf57:	xor    %r10d,%r10d
  45bf5a:	movq   $0x0,0x40(%rsp)
  45bf63:	movq   $0x0,0x38(%rsp)
  45bf6c:	xor    %r9d,%r9d
  45bf6f:	movq   $0x0,0x68(%rsp)
  45bf78:	movq   $0x0,0x60(%rsp)
  45bf81:	xor    %r14d,%r14d
  45bf84:	movq   $0x0,0x58(%rsp)
  45bf8d:	movq   $0x0,0x8(%rsp)
  45bf96:	xor    %r13d,%r13d
  45bf99:	movq   $0x0,0x18(%rsp)
  45bfa2:	movl   $0x0,0x50(%rsp)
  45bfaa:	xor    %r12d,%r12d
  45bfad:	movq   $0x0,0x48(%rsp)
  45bfb6:	movq   $0x0,0x20(%rsp)
  45bfbf:	lea    0x2211(%rip),%r8        # 45e1d7 <_fini+0xcd3>
  45bfc6:	movl   $0x0,0x98(%rsp)
  45bfd1:	movq   $0x0,0x10(%rsp)
  45bfda:	mov    $0x8,%r15d
  45bfe0:	movq   $0x0,0x28(%rsp)
  45bfe9:	movq   $0x0,(%rsp)
  45bff1:	jmp    45c00e <X509_get0_pubkey_bitstr@plt+0x4563e>
  45bff3:	nopl   0x0(%rax,%rax,1)
  45bff8:	mov    0x8(%rbp),%r12
  45bffc:	lea    0x8(%rbp),%rax
  45c000:	sub    $0x1,%ebx
  45c003:	sub    $0x1,%ebx
  45c006:	lea    0x8(%rax),%rbp
  45c00a:	test   %ebx,%ebx
  45c00c:	jle    45c04c <X509_get0_pubkey_bitstr@plt+0x4567c>
  45c00e:	mov    0x0(%rbp),%rax
  45c012:	mov    %r8,%rdi
  45c015:	mov    %r15,%rcx
  45c018:	mov    %rax,%rsi
  45c01b:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45c01d:	je     45bff8 <X509_get0_pubkey_bitstr@plt+0x45628>
  45c01f:	lea    0x1467d(%rip),%rdi        # 4706a3 <_fini+0x1319f>
  45c026:	mov    $0x9,%ecx
  45c02b:	mov    %rax,%rsi
  45c02e:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45c030:	jne    45c390 <X509_get0_pubkey_bitstr@plt+0x459c0>
  45c036:	sub    $0x1,%ebx
  45c039:	lea    0x8(%rbp),%rax
  45c03d:	mov    0x8(%rbp),%r13
  45c041:	sub    $0x1,%ebx
  45c044:	test   %ebx,%ebx
  45c046:	lea    0x8(%rax),%rbp
  45c04a:	jg     45c00e <X509_get0_pubkey_bitstr@plt+0x4563e>
  45c04c:	test   %r11d,%r11d
  45c04f:	sete   %r15b
  45c053:	cmp    $0x1,%r14d
  45c057:	sete   %al
  45c05a:	cmp    $0x2,%r14d
  45c05e:	sete   %bl
  45c061:	cmpq   $0x0,0x8(%rsp)
  45c067:	setne  %dl
  45c06a:	and    %edx,%ebx
  45c06c:	test   %r15b,%al
  45c06f:	jne    45c4be <X509_get0_pubkey_bitstr@plt+0x45aee>
  45c075:	test   %bl,%bl
  45c077:	jne    45c460 <X509_get0_pubkey_bitstr@plt+0x45a90>
  45c07d:	cmp    $0x1,%r14d
  45c081:	je     45c672 <X509_get0_pubkey_bitstr@plt+0x45ca2>
  45c087:	jb     45c548 <X509_get0_pubkey_bitstr@plt+0x45b78>
  45c08d:	cmp    $0x2,%r14d
  45c091:	je     45c7b1 <X509_get0_pubkey_bitstr@plt+0x45de1>
  45c097:	cmp    $0x3,%r14d
  45c09b:	jne    45c308 <X509_get0_pubkey_bitstr@plt+0x45938>
  45c0a1:	test   %r9,%r9
  45c0a4:	setne  %r12b
  45c0a8:	jne    45c0b2 <X509_get0_pubkey_bitstr@plt+0x456e2>
  45c0aa:	cmpq   $0x0,0x18(%rsp)
  45c0b0:	jne    45c0cc <X509_get0_pubkey_bitstr@plt+0x456fc>
  45c0b2:	cmpq   $0x0,0x18(%rsp)
  45c0b8:	setne  %al
  45c0bb:	test   %r9,%r9
  45c0be:	je     45c530 <X509_get0_pubkey_bitstr@plt+0x45b60>
  45c0c4:	test   %al,%al
  45c0c6:	jne    45c530 <X509_get0_pubkey_bitstr@plt+0x45b60>
  45c0cc:	cmpq   $0x0,(%rsp)
  45c0d1:	je     45c0e8 <X509_get0_pubkey_bitstr@plt+0x45718>
  45c0d3:	test   %r12b,%r12b
  45c0d6:	jne    45c548 <X509_get0_pubkey_bitstr@plt+0x45b78>
  45c0dc:	cmpq   $0x0,0x18(%rsp)
  45c0e2:	jne    45c548 <X509_get0_pubkey_bitstr@plt+0x45b78>
  45c0e8:	cmpq   $0x0,0x20(%rsp)
  45c0ee:	je     45c548 <X509_get0_pubkey_bitstr@plt+0x45b78>
  45c0f4:	mov    0x20(%rsp),%rdi
  45c0f9:	lea    0x38e1(%rip),%rsi        # 45f9e1 <_fini+0x24dd>
  45c100:	mov    %r9,0x10(%rsp)
  45c105:	callq  412ba0 <BIO_new_file@plt>
  45c10a:	test   %rax,%rax
  45c10d:	mov    %rax,0x8(%rsp)
  45c112:	mov    0x10(%rsp),%r9
  45c117:	je     45c972 <X509_get0_pubkey_bitstr@plt+0x45fa2>
  45c11d:	mov    0x34(%rsp),%ecx
  45c121:	mov    %r9,0x10(%rsp)
  45c126:	mov    $0x0,%esi
  45c12b:	mov    0x8(%rsp),%rdi
  45c130:	test   %ecx,%ecx
  45c132:	je     45cabf <X509_get0_pubkey_bitstr@plt+0x460ef>
  45c138:	callq  413b50 <d2i_PKCS7_bio@plt>
  45c13d:	xor    %r13d,%r13d
  45c140:	test   %rax,%rax
  45c143:	mov    %rax,%r15
  45c146:	mov    0x10(%rsp),%r9
  45c14b:	je     45c972 <X509_get0_pubkey_bitstr@plt+0x45fa2>
  45c151:	cmpq   $0x0,(%rsp)
  45c156:	setne  %bpl
  45c15a:	jne    45cca6 <X509_get0_pubkey_bitstr@plt+0x462d6>
  45c160:	test   %r12b,%r12b
  45c163:	jne    45cca6 <X509_get0_pubkey_bitstr@plt+0x462d6>
  45c169:	mov    0x18(%rsp),%rdi
  45c16e:	test   %rdi,%rdi
  45c171:	je     45c978 <X509_get0_pubkey_bitstr@plt+0x45fa8>
  45c177:	lea    0x3863(%rip),%rsi        # 45f9e1 <_fini+0x24dd>
  45c17e:	callq  412ba0 <BIO_new_file@plt>
  45c183:	test   %rax,%rax
  45c186:	mov    %rax,%r12
  45c189:	je     45cc49 <X509_get0_pubkey_bitstr@plt+0x46279>
  45c18f:	xor    %esi,%esi
  45c191:	mov    %rax,%rdi
  45c194:	callq  414bb0 <d2i_TS_REQ_bio@plt>
  45c199:	test   %rax,%rax
  45c19c:	mov    %rax,%rbp
  45c19f:	je     45cd9a <X509_get0_pubkey_bitstr@plt+0x463ca>
  45c1a5:	xor    %esi,%esi
  45c1a7:	mov    %rax,%rdi
  45c1aa:	callq  4137a0 <TS_REQ_to_TS_VERIFY_CTX@plt>
  45c1af:	test   %rax,%rax
  45c1b2:	mov    %rax,%rbx
  45c1b5:	je     45cb18 <X509_get0_pubkey_bitstr@plt+0x46148>
  45c1bb:	mov    (%rax),%eax
  45c1bd:	or     $0x1,%eax
  45c1c0:	mov    %eax,(%rbx)
  45c1c2:	callq  4166c0 <X509_STORE_new@plt>
  45c1c7:	lea    -0x85e(%rip),%rsi        # 45b970 <X509_get0_pubkey_bitstr@plt+0x44fa0>
  45c1ce:	mov    %rax,%rdi
  45c1d1:	mov    %rax,%r14
  45c1d4:	callq  416470 <X509_STORE_set_verify_cb@plt>
  45c1d9:	cmpq   $0x0,0x38(%rsp)
  45c1df:	je     45c21c <X509_get0_pubkey_bitstr@plt+0x4584c>
  45c1e1:	callq  415b90 <X509_LOOKUP_hash_dir@plt>
  45c1e6:	mov    %r14,%rdi
  45c1e9:	mov    %rax,%rsi
  45c1ec:	callq  412c00 <X509_STORE_add_lookup@plt>
  45c1f1:	test   %rax,%rax
  45c1f4:	je     45d169 <X509_get0_pubkey_bitstr@plt+0x46799>
  45c1fa:	mov    0x38(%rsp),%rdx
  45c1ff:	xor    %r8d,%r8d
  45c202:	mov    $0x1,%ecx
  45c207:	mov    $0x2,%esi
  45c20c:	mov    %rax,%rdi
  45c20f:	callq  4165f0 <X509_LOOKUP_ctrl@plt>
  45c214:	test   %eax,%eax
  45c216:	je     45d147 <X509_get0_pubkey_bitstr@plt+0x46777>
  45c21c:	cmpq   $0x0,0x40(%rsp)
  45c222:	je     45c25f <X509_get0_pubkey_bitstr@plt+0x4588f>
  45c224:	callq  416980 <X509_LOOKUP_file@plt>
  45c229:	mov    %r14,%rdi
  45c22c:	mov    %rax,%rsi
  45c22f:	callq  412c00 <X509_STORE_add_lookup@plt>
  45c234:	test   %rax,%rax
  45c237:	je     45d169 <X509_get0_pubkey_bitstr@plt+0x46799>
  45c23d:	mov    0x40(%rsp),%rdx
  45c242:	xor    %r8d,%r8d
  45c245:	mov    $0x1,%ecx
  45c24a:	mov    $0x1,%esi
  45c24f:	mov    %rax,%rdi
  45c252:	callq  4165f0 <X509_LOOKUP_ctrl@plt>
  45c257:	test   %eax,%eax
  45c259:	je     45caeb <X509_get0_pubkey_bitstr@plt+0x4611b>
  45c25f:	test   %r14,%r14
  45c262:	mov    %r14,0x8(%rbx)
  45c266:	je     45cb18 <X509_get0_pubkey_bitstr@plt+0x46148>
  45c26c:	mov    0x70(%rsp),%rdi
  45c271:	test   %rdi,%rdi
  45c274:	je     45c288 <X509_get0_pubkey_bitstr@plt+0x458b8>
  45c276:	callq  416210 <TS_CONF_load_certs@plt>
  45c27b:	test   %rax,%rax
  45c27e:	mov    %rax,0x10(%rbx)
  45c282:	je     45cb18 <X509_get0_pubkey_bitstr@plt+0x46148>
  45c288:	mov    %r12,%rdi
  45c28b:	callq  416570 <BIO_free_all@plt>
  45c290:	mov    %rbp,%rdi
  45c293:	callq  414480 <TS_REQ_free@plt>
  45c298:	mov    0x34(%rsp),%eax
  45c29c:	test   %eax,%eax
  45c29e:	je     45cc1e <X509_get0_pubkey_bitstr@plt+0x4624e>
  45c2a4:	mov    %r15,%rsi
  45c2a7:	mov    %rbx,%rdi
  45c2aa:	callq  4141f0 <TS_RESP_verify_token@plt>
  45c2af:	mov    %eax,%ebp
  45c2b1:	lea    0x144ad(%rip),%rsi        # 470765 <_fini+0x13261>
  45c2b8:	xor    %eax,%eax
  45c2ba:	mov    $0x1,%edi
  45c2bf:	callq  412780 <__printf_chk@plt>
  45c2c4:	test   %ebp,%ebp
  45c2c6:	je     45c98d <X509_get0_pubkey_bitstr@plt+0x45fbd>
  45c2cc:	lea    0x144a1(%rip),%rdi        # 470774 <_fini+0x13270>
  45c2d3:	xor    %r12d,%r12d
  45c2d6:	callq  415a40 <puts@plt>
  45c2db:	mov    0x8(%rsp),%rdi
  45c2e0:	callq  416570 <BIO_free_all@plt>
  45c2e5:	mov    %r15,%rdi
  45c2e8:	callq  413150 <PKCS7_free@plt>
  45c2ed:	mov    %r13,%rdi
  45c2f0:	callq  4158f0 <TS_RESP_free@plt>
  45c2f5:	mov    %rbx,%rdi
  45c2f8:	xor    %ebx,%ebx
  45c2fa:	callq  416770 <TS_VERIFY_CTX_free@plt>
  45c2ff:	jmp    45c310 <X509_get0_pubkey_bitstr@plt+0x45940>
  45c301:	nopl   0x0(%rax)
  45c308:	xor    %ebx,%ebx
  45c30a:	mov    $0x1,%r12d
  45c310:	lea    0x21ea29(%rip),%rax        # 67ad40 <_edata+0x38>
  45c317:	xor    %edi,%edi
  45c319:	mov    (%rax),%rsi
  45c31c:	callq  44a660 <X509_get0_pubkey_bitstr@plt+0x33c90>
  45c321:	mov    %rbx,%rdi
  45c324:	callq  4137f0 <NCONF_free@plt>
  45c329:	mov    0xa0(%rsp),%rdi
  45c331:	callq  415020 <CRYPTO_free@plt>
  45c336:	callq  414120 <OBJ_cleanup@plt>
  45c33b:	mov    0x30(%rsp),%edx
  45c33f:	test   %edx,%edx
  45c341:	je     45c360 <X509_get0_pubkey_bitstr@plt+0x45990>
  45c343:	lea    0x21e9f6(%rip),%rax        # 67ad40 <_edata+0x38>
  45c34a:	mov    (%rax),%rdi
  45c34d:	callq  416570 <BIO_free_all@plt>
  45c352:	lea    0x21e9e7(%rip),%rax        # 67ad40 <_edata+0x38>
  45c359:	movq   $0x0,(%rax)
  45c360:	mov    0xc8(%rsp),%rbx
  45c368:	xor    %fs:0x28,%rbx
  45c371:	mov    %r12d,%eax
  45c374:	jne    45cd7f <X509_get0_pubkey_bitstr@plt+0x463af>
  45c37a:	add    $0xd8,%rsp
  45c381:	pop    %rbx
  45c382:	pop    %rbp
  45c383:	pop    %r12
  45c385:	pop    %r13
  45c387:	pop    %r14
  45c389:	pop    %r15
  45c38b:	retq   
  45c38c:	nopl   0x0(%rax)
  45c390:	lea    0x14315(%rip),%rdi        # 4706ac <_fini+0x131a8>
  45c397:	mov    $0x7,%ecx
  45c39c:	mov    %rax,%rsi
  45c39f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45c3a1:	jne    45c3c0 <X509_get0_pubkey_bitstr@plt+0x459f0>
  45c3a3:	test   %r14d,%r14d
  45c3a6:	jne    45c548 <X509_get0_pubkey_bitstr@plt+0x45b78>
  45c3ac:	mov    %rbp,%rax
  45c3af:	mov    $0x1,%r14b
  45c3b2:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45c3b7:	nopw   0x0(%rax,%rax,1)
  45c3c0:	lea    0x142ec(%rip),%rdi        # 4706b3 <_fini+0x131af>
  45c3c7:	mov    $0x6,%ecx
  45c3cc:	mov    %rax,%rsi
  45c3cf:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45c3d1:	jne    45c3e8 <X509_get0_pubkey_bitstr@plt+0x45a18>
  45c3d3:	sub    $0x1,%ebx
  45c3d6:	lea    0x8(%rbp),%rax
  45c3da:	mov    0x8(%rbp),%r9
  45c3de:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45c3e3:	nopl   0x0(%rax,%rax,1)
  45c3e8:	lea    0x142ca(%rip),%rdi        # 4706b9 <_fini+0x131b5>
  45c3ef:	mov    %rax,%rsi
  45c3f2:	mov    %r15,%rcx
  45c3f5:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45c3f7:	jne    45c410 <X509_get0_pubkey_bitstr@plt+0x45a40>
  45c3f9:	mov    0x8(%rbp),%rdx
  45c3fd:	sub    $0x1,%ebx
  45c400:	lea    0x8(%rbp),%rax
  45c404:	mov    %rdx,(%rsp)
  45c408:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45c40d:	nopl   (%rax)
  45c410:	lea    0x1dea(%rip),%rdi        # 45e201 <_fini+0xcfd>
  45c417:	mov    $0x6,%ecx
  45c41c:	mov    %rax,%rsi
  45c41f:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45c421:	je     45c450 <X509_get0_pubkey_bitstr@plt+0x45a80>
  45c423:	lea    0x4b67(%rip),%rdi        # 460f91 <_fini+0x3a8d>
  45c42a:	mov    %rax,%rsi
  45c42d:	mov    %r15,%rcx
  45c430:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45c432:	jne    45c5a7 <X509_get0_pubkey_bitstr@plt+0x45bd7>
  45c438:	mov    0x8(%rbp),%rdx
  45c43c:	sub    $0x1,%ebx
  45c43f:	lea    0x8(%rbp),%rax
  45c443:	mov    %rdx,0x10(%rsp)
  45c448:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45c44d:	nopl   (%rax)
  45c450:	sub    $0x1,%ebx
  45c453:	lea    0x8(%rbp),%rax
  45c457:	mov    0x8(%rbp),%r10
  45c45b:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45c460:	lea    0x21e8d9(%rip),%rax        # 67ad40 <_edata+0x38>
  45c467:	mov    0x8(%rsp),%rsi
  45c46c:	lea    0xa0(%rsp),%rcx
  45c474:	xor    %r8d,%r8d
  45c477:	xor    %edx,%edx
  45c479:	mov    %r9,0x80(%rsp)
  45c481:	mov    (%rax),%rdi
  45c484:	callq  445ac0 <X509_get0_pubkey_bitstr@plt+0x2f0f0>
  45c489:	test   %eax,%eax
  45c48b:	mov    0x80(%rsp),%r9
  45c493:	jne    45c07d <X509_get0_pubkey_bitstr@plt+0x456ad>
  45c499:	lea    0x21e8a0(%rip),%rax        # 67ad40 <_edata+0x38>
  45c4a0:	lea    0x14241(%rip),%rsi        # 4706e8 <_fini+0x131e4>
  45c4a7:	xor    %ebx,%ebx
  45c4a9:	mov    $0x1,%r12d
  45c4af:	mov    (%rax),%rdi
  45c4b2:	xor    %eax,%eax
  45c4b4:	callq  413c40 <BIO_printf@plt>
  45c4b9:	jmpq   45c310 <X509_get0_pubkey_bitstr@plt+0x45940>
  45c4be:	lea    0x21e87b(%rip),%rax        # 67ad40 <_edata+0x38>
  45c4c5:	xor    %edi,%edi
  45c4c7:	mov    $0x1,%edx
  45c4cc:	mov    %r10,0x88(%rsp)
  45c4d4:	mov    %r9,0x80(%rsp)
  45c4dc:	mov    (%rax),%rsi
  45c4df:	callq  44a520 <X509_get0_pubkey_bitstr@plt+0x33b50>
  45c4e4:	test   %eax,%eax
  45c4e6:	mov    0x80(%rsp),%r9
  45c4ee:	mov    0x88(%rsp),%r10
  45c4f6:	jne    45c75b <X509_get0_pubkey_bitstr@plt+0x45d8b>
  45c4fc:	test   %r10,%r10
  45c4ff:	jne    45c766 <X509_get0_pubkey_bitstr@plt+0x45d96>
  45c505:	lea    0x21e834(%rip),%rax        # 67ad40 <_edata+0x38>
  45c50c:	lea    0x3a7d(%rip),%rsi        # 45ff90 <_fini+0x2a8c>
  45c513:	mov    (%rax),%rdi
  45c516:	xor    %eax,%eax
  45c518:	callq  413c40 <BIO_printf@plt>
  45c51d:	mov    0x80(%rsp),%r9
  45c525:	jmpq   45c075 <X509_get0_pubkey_bitstr@plt+0x456a5>
  45c52a:	nopw   0x0(%rax,%rax,1)
  45c530:	test   %r12b,%r12b
  45c533:	jne    45c548 <X509_get0_pubkey_bitstr@plt+0x45b78>
  45c535:	test   %al,%al
  45c537:	jne    45c548 <X509_get0_pubkey_bitstr@plt+0x45b78>
  45c539:	cmpq   $0x0,(%rsp)
  45c53e:	jne    45c0e8 <X509_get0_pubkey_bitstr@plt+0x45718>
  45c544:	nopl   0x0(%rax)
  45c548:	xor    %ebx,%ebx
  45c54a:	lea    0x21e7ef(%rip),%rax        # 67ad40 <_edata+0x38>
  45c551:	lea    0x14338(%rip),%rsi        # 470890 <_fini+0x1338c>
  45c558:	mov    $0x3a,%ecx
  45c55d:	mov    $0x3a,%edx
  45c562:	mov    $0x1,%r12d
  45c568:	mov    (%rax),%rdi
  45c56b:	xor    %eax,%eax
  45c56d:	callq  413c40 <BIO_printf@plt>
  45c572:	lea    0x21e7c7(%rip),%rax        # 67ad40 <_edata+0x38>
  45c579:	lea    0x143e0(%rip),%rsi        # 470960 <_fini+0x1345c>
  45c580:	mov    (%rax),%rdi
  45c583:	xor    %eax,%eax
  45c585:	callq  413c40 <BIO_printf@plt>
  45c58a:	lea    0x21e7af(%rip),%rax        # 67ad40 <_edata+0x38>
  45c591:	lea    0x144e0(%rip),%rsi        # 470a78 <_fini+0x13574>
  45c598:	mov    (%rax),%rdi
  45c59b:	xor    %eax,%eax
  45c59d:	callq  413c40 <BIO_printf@plt>
  45c5a2:	jmpq   45c310 <X509_get0_pubkey_bitstr@plt+0x45940>
  45c5a7:	lea    0x1301f(%rip),%rdi        # 46f5cd <_fini+0x120c9>
  45c5ae:	mov    $0xa,%ecx
  45c5b3:	mov    %rax,%rsi
  45c5b6:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45c5b8:	je     45c664 <X509_get0_pubkey_bitstr@plt+0x45c94>
  45c5be:	lea    0x49dd(%rip),%rdi        # 460fa2 <_fini+0x3a9e>
  45c5c5:	mov    $0x6,%ecx
  45c5ca:	mov    %rax,%rsi
  45c5cd:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45c5cf:	je     45c79e <X509_get0_pubkey_bitstr@plt+0x45dce>
  45c5d5:	cmpb   $0x2d,(%rax)
  45c5d8:	jne    45c922 <X509_get0_pubkey_bitstr@plt+0x45f52>
  45c5de:	cmpb   $0x69,0x1(%rax)
  45c5e2:	jne    45c922 <X509_get0_pubkey_bitstr@plt+0x45f52>
  45c5e8:	cmpb   $0x6e,0x2(%rax)
  45c5ec:	jne    45c922 <X509_get0_pubkey_bitstr@plt+0x45f52>
  45c5f2:	cmpb   $0x0,0x3(%rax)
  45c5f6:	jne    45c922 <X509_get0_pubkey_bitstr@plt+0x45f52>
  45c5fc:	mov    0x8(%rbp),%rdx
  45c600:	sub    $0x1,%ebx
  45c603:	lea    0x8(%rbp),%rax
  45c607:	mov    %rdx,0x20(%rsp)
  45c60c:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45c611:	callq  4152b0 <BIO_s_file@plt>
  45c616:	mov    %rax,%rdi
  45c619:	callq  414a20 <BIO_new@plt>
  45c61e:	mov    %rax,%rdi
  45c621:	lea    0x21e718(%rip),%rax        # 67ad40 <_edata+0x38>
  45c628:	test   %rdi,%rdi
  45c62b:	mov    %rdi,(%rax)
  45c62e:	je     45bf14 <X509_get0_pubkey_bitstr@plt+0x45544>
  45c634:	mov    0x219945(%rip),%rdx        # 675f80 <_fini+0x218a7c>
  45c63b:	mov    $0x6a,%esi
  45c640:	mov    (%rdx),%rcx
  45c643:	mov    $0x10,%edx
  45c648:	callq  412af0 <BIO_ctrl@plt>
  45c64d:	lea    0x21e6ec(%rip),%rax        # 67ad40 <_edata+0x38>
  45c654:	movl   $0x1,0x30(%rsp)
  45c65c:	mov    (%rax),%rdi
  45c65f:	jmpq   45bf14 <X509_get0_pubkey_bitstr@plt+0x45544>
  45c664:	mov    %rbp,%rax
  45c667:	mov    $0x1,%r11d
  45c66d:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45c672:	cmpq   $0x0,(%rsp)
  45c677:	je     45c682 <X509_get0_pubkey_bitstr@plt+0x45cb2>
  45c679:	test   %r9,%r9
  45c67c:	jne    45c548 <X509_get0_pubkey_bitstr@plt+0x45b78>
  45c682:	mov    %r12,%rdi
  45c685:	mov    %r9,0x8(%rsp)
  45c68a:	callq  45bac0 <X509_get0_pubkey_bitstr@plt+0x450f0>
  45c68f:	mov    0x20(%rsp),%rdi
  45c694:	mov    %rax,%rbx
  45c697:	mov    0x8(%rsp),%r9
  45c69c:	test   %rdi,%rdi
  45c69f:	je     45cb48 <X509_get0_pubkey_bitstr@plt+0x46178>
  45c6a5:	lea    0x3335(%rip),%rsi        # 45f9e1 <_fini+0x24dd>
  45c6ac:	callq  412ba0 <BIO_new_file@plt>
  45c6b1:	test   %rax,%rax
  45c6b4:	mov    %rax,%r13
  45c6b7:	je     45cc7c <X509_get0_pubkey_bitstr@plt+0x462ac>
  45c6bd:	xor    %esi,%esi
  45c6bf:	mov    %rax,%rdi
  45c6c2:	callq  414bb0 <d2i_TS_REQ_bio@plt>
  45c6c7:	movq   $0x0,0x8(%rsp)
  45c6d0:	mov    %rax,%rbp
  45c6d3:	test   %rbp,%rbp
  45c6d6:	je     45cc98 <X509_get0_pubkey_bitstr@plt+0x462c8>
  45c6dc:	mov    0x2197d5(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  45c6e3:	mov    0x48(%rsp),%rdi
  45c6e8:	lea    0x16bc(%rip),%rsi        # 45ddab <_fini+0x8a7>
  45c6ef:	mov    (%rax),%rdx
  45c6f2:	callq  45bdd0 <X509_get0_pubkey_bitstr@plt+0x45400>
  45c6f7:	test   %rax,%rax
  45c6fa:	mov    %rax,%r14
  45c6fd:	je     45cd84 <X509_get0_pubkey_bitstr@plt+0x463b4>
  45c703:	mov    0x50(%rsp),%r11d
  45c708:	mov    %rbp,%rsi
  45c70b:	mov    %rax,%rdi
  45c70e:	test   %r11d,%r11d
  45c711:	je     45cb35 <X509_get0_pubkey_bitstr@plt+0x46165>
  45c717:	xor    %r12d,%r12d
  45c71a:	callq  412b70 <TS_REQ_print_bio@plt>
  45c71f:	test   %eax,%eax
  45c721:	sete   %r12b
  45c725:	lea    0x21e614(%rip),%rax        # 67ad40 <_edata+0x38>
  45c72c:	mov    (%rax),%rdi
  45c72f:	callq  413f40 <ERR_print_errors@plt>
  45c734:	mov    %r13,%rdi
  45c737:	callq  416570 <BIO_free_all@plt>
  45c73c:	mov    0x8(%rsp),%rdi
  45c741:	callq  416570 <BIO_free_all@plt>
  45c746:	mov    %r14,%rdi
  45c749:	callq  416570 <BIO_free_all@plt>
  45c74e:	mov    %rbp,%rdi
  45c751:	callq  414480 <TS_REQ_free@plt>
  45c756:	jmpq   45c310 <X509_get0_pubkey_bitstr@plt+0x45940>
  45c75b:	test   %r10,%r10
  45c75e:	xchg   %ax,%ax
  45c760:	je     45c075 <X509_get0_pubkey_bitstr@plt+0x456a5>
  45c766:	mov    %r10,%rdi
  45c769:	mov    %r9,0x80(%rsp)
  45c771:	callq  44a710 <X509_get0_pubkey_bitstr@plt+0x33d40>
  45c776:	mov    %rax,%rdx
  45c779:	lea    0x21e5c0(%rip),%rax        # 67ad40 <_edata+0x38>
  45c780:	lea    0x360a(%rip),%rsi        # 45fd91 <_fini+0x288d>
  45c787:	mov    (%rax),%rdi
  45c78a:	xor    %eax,%eax
  45c78c:	callq  413c40 <BIO_printf@plt>
  45c791:	mov    0x80(%rsp),%r9
  45c799:	jmpq   45c075 <X509_get0_pubkey_bitstr@plt+0x456a5>
  45c79e:	mov    %rbp,%rax
  45c7a1:	movl   $0x1,0x98(%rsp)
  45c7ac:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45c7b1:	mov    %r12,%rdi
  45c7b4:	callq  45bac0 <X509_get0_pubkey_bitstr@plt+0x450f0>
  45c7b9:	cmpq   $0x0,0x20(%rsp)
  45c7bf:	mov    %rax,%rbx
  45c7c2:	je     45c9e0 <X509_get0_pubkey_bitstr@plt+0x46010>
  45c7c8:	cmpq   $0x0,0x18(%rsp)
  45c7ce:	jne    45c54a <X509_get0_pubkey_bitstr@plt+0x45b7a>
  45c7d4:	mov    0x20(%rsp),%rdi
  45c7d9:	lea    0x3201(%rip),%rsi        # 45f9e1 <_fini+0x24dd>
  45c7e0:	callq  412ba0 <BIO_new_file@plt>
  45c7e5:	test   %rax,%rax
  45c7e8:	mov    %rax,%r13
  45c7eb:	je     45cd50 <X509_get0_pubkey_bitstr@plt+0x46380>
  45c7f1:	mov    0x34(%rsp),%r9d
  45c7f6:	xor    %esi,%esi
  45c7f8:	mov    %r13,%rdi
  45c7fb:	test   %r9d,%r9d
  45c7fe:	je     45c965 <X509_get0_pubkey_bitstr@plt+0x45f95>
  45c804:	callq  413b50 <d2i_PKCS7_bio@plt>
  45c809:	test   %rax,%rax
  45c80c:	mov    %rax,%r15
  45c80f:	je     45cd6a <X509_get0_pubkey_bitstr@plt+0x4639a>
  45c815:	mov    %rax,%rdi
  45c818:	callq  414640 <PKCS7_to_TS_TST_INFO@plt>
  45c81d:	test   %rax,%rax
  45c820:	mov    %rax,%r14
  45c823:	je     45cd60 <X509_get0_pubkey_bitstr@plt+0x46390>
  45c829:	callq  413fc0 <TS_RESP_new@plt>
  45c82e:	test   %rax,%rax
  45c831:	mov    %rax,%rbp
  45c834:	je     45cd77 <X509_get0_pubkey_bitstr@plt+0x463a7>
  45c83a:	callq  413a30 <TS_STATUS_INFO_new@plt>
  45c83f:	test   %rax,%rax
  45c842:	mov    %rax,%r12
  45c845:	je     45c859 <X509_get0_pubkey_bitstr@plt+0x45e89>
  45c847:	mov    (%rax),%rdi
  45c84a:	xor    %esi,%esi
  45c84c:	callq  416340 <ASN1_INTEGER_set@plt>
  45c851:	test   %eax,%eax
  45c853:	jne    45d186 <X509_get0_pubkey_bitstr@plt+0x467b6>
  45c859:	mov    %r15,%rdi
  45c85c:	callq  413150 <PKCS7_free@plt>
  45c861:	mov    %r14,%rdi
  45c864:	callq  416400 <TS_TST_INFO_free@plt>
  45c869:	mov    %rbp,%rdi
  45c86c:	xor    %ebp,%ebp
  45c86e:	callq  4158f0 <TS_RESP_free@plt>
  45c873:	mov    %r12,%rdi
  45c876:	callq  415940 <TS_STATUS_INFO_free@plt>
  45c87b:	test   %rbp,%rbp
  45c87e:	je     45cadd <X509_get0_pubkey_bitstr@plt+0x4610d>
  45c884:	mov    0x21962d(%rip),%rax        # 675eb8 <_fini+0x2189b4>
  45c88b:	mov    0x48(%rsp),%rdi
  45c890:	lea    0x1514(%rip),%rsi        # 45ddab <_fini+0x8a7>
  45c897:	mov    (%rax),%rdx
  45c89a:	callq  45bdd0 <X509_get0_pubkey_bitstr@plt+0x45400>
  45c89f:	test   %rax,%rax
  45c8a2:	mov    %rax,%r14
  45c8a5:	je     45cd8f <X509_get0_pubkey_bitstr@plt+0x463bf>
  45c8ab:	mov    0x50(%rsp),%r8d
  45c8b0:	test   %r8d,%r8d
  45c8b3:	je     45c9b3 <X509_get0_pubkey_bitstr@plt+0x45fe3>
  45c8b9:	mov    0x54(%rsp),%edi
  45c8bd:	test   %edi,%edi
  45c8bf:	je     45cc30 <X509_get0_pubkey_bitstr@plt+0x46260>
  45c8c5:	mov    %rbp,%rdi
  45c8c8:	xor    %r12d,%r12d
  45c8cb:	callq  416700 <TS_RESP_get_tst_info@plt>
  45c8d0:	mov    %r14,%rdi
  45c8d3:	mov    %rax,%rsi
  45c8d6:	callq  413dd0 <TS_TST_INFO_print_bio@plt>
  45c8db:	test   %eax,%eax
  45c8dd:	sete   %r12b
  45c8e1:	lea    0x21e458(%rip),%rax        # 67ad40 <_edata+0x38>
  45c8e8:	mov    (%rax),%rdi
  45c8eb:	callq  413f40 <ERR_print_errors@plt>
  45c8f0:	mov    %r13,%rdi
  45c8f3:	callq  416570 <BIO_free_all@plt>
  45c8f8:	xor    %edi,%edi
  45c8fa:	callq  416570 <BIO_free_all@plt>
  45c8ff:	xor    %edi,%edi
  45c901:	callq  416570 <BIO_free_all@plt>
  45c906:	xor    %edi,%edi
  45c908:	callq  416570 <BIO_free_all@plt>
  45c90d:	mov    %r14,%rdi
  45c910:	callq  416570 <BIO_free_all@plt>
  45c915:	mov    %rbp,%rdi
  45c918:	callq  4158f0 <TS_RESP_free@plt>
  45c91d:	jmpq   45c310 <X509_get0_pubkey_bitstr@plt+0x45940>
  45c922:	lea    0x13d98(%rip),%rdi        # 4706c1 <_fini+0x131bd>
  45c929:	mov    $0xa,%ecx
  45c92e:	mov    %rax,%rsi
  45c931:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45c933:	je     45caaf <X509_get0_pubkey_bitstr@plt+0x460df>
  45c939:	lea    0x1506(%rip),%rdi        # 45de46 <_fini+0x942>
  45c940:	mov    $0x5,%ecx
  45c945:	mov    %rax,%rsi
  45c948:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45c94a:	jne    45ccf7 <X509_get0_pubkey_bitstr@plt+0x46327>
  45c950:	mov    0x8(%rbp),%rdx
  45c954:	sub    $0x1,%ebx
  45c957:	lea    0x8(%rbp),%rax
  45c95b:	mov    %rdx,0x48(%rsp)
  45c960:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45c965:	callq  414b70 <d2i_TS_RESP_bio@plt>
  45c96a:	mov    %rax,%rbp
  45c96d:	jmpq   45c87b <X509_get0_pubkey_bitstr@plt+0x45eab>
  45c972:	xor    %r13d,%r13d
  45c975:	xor    %r15d,%r15d
  45c978:	lea    0x13de6(%rip),%rsi        # 470765 <_fini+0x13261>
  45c97f:	mov    $0x1,%edi
  45c984:	xor    %eax,%eax
  45c986:	xor    %ebx,%ebx
  45c988:	callq  412780 <__printf_chk@plt>
  45c98d:	lea    0x13de3(%rip),%rdi        # 470777 <_fini+0x13273>
  45c994:	mov    $0x1,%r12d
  45c99a:	callq  415a40 <puts@plt>
  45c99f:	lea    0x21e39a(%rip),%rax        # 67ad40 <_edata+0x38>
  45c9a6:	mov    (%rax),%rdi
  45c9a9:	callq  413f40 <ERR_print_errors@plt>
  45c9ae:	jmpq   45c2db <X509_get0_pubkey_bitstr@plt+0x4590b>
  45c9b3:	mov    0x54(%rsp),%esi
  45c9b7:	test   %esi,%esi
  45c9b9:	je     45cc05 <X509_get0_pubkey_bitstr@plt+0x46235>
  45c9bf:	mov    %rbp,%rdi
  45c9c2:	xor    %r12d,%r12d
  45c9c5:	callq  4165e0 <TS_RESP_get_token@plt>
  45c9ca:	mov    %r14,%rdi
  45c9cd:	mov    %rax,%rsi
  45c9d0:	callq  415770 <i2d_PKCS7_bio@plt>
  45c9d5:	test   %eax,%eax
  45c9d7:	sete   %r12b
  45c9db:	jmpq   45c8e1 <X509_get0_pubkey_bitstr@plt+0x45f11>
  45c9e0:	cmpq   $0x0,0x18(%rsp)
  45c9e6:	je     45c54a <X509_get0_pubkey_bitstr@plt+0x45b7a>
  45c9ec:	test   %rax,%rax
  45c9ef:	je     45c54a <X509_get0_pubkey_bitstr@plt+0x45b7a>
  45c9f5:	mov    0x34(%rsp),%r10d
  45c9fa:	test   %r10d,%r10d
  45c9fd:	jne    45c54a <X509_get0_pubkey_bitstr@plt+0x45b7a>
  45ca03:	mov    0x18(%rsp),%rdi
  45ca08:	lea    0x2fd2(%rip),%rsi        # 45f9e1 <_fini+0x24dd>
  45ca0f:	mov    0xa0(%rsp),%r15
  45ca17:	callq  412ba0 <BIO_new_file@plt>
  45ca1c:	test   %rax,%rax
  45ca1f:	mov    %rax,%r14
  45ca22:	je     45cda1 <X509_get0_pubkey_bitstr@plt+0x463d1>
  45ca28:	mov    %r13,%rsi
  45ca2b:	mov    %rbx,%rdi
  45ca2e:	callq  414cb0 <TS_CONF_get_tsa_section@plt>
  45ca33:	test   %rax,%rax
  45ca36:	mov    %rax,%rbp
  45ca39:	je     45cda1 <X509_get0_pubkey_bitstr@plt+0x463d1>
  45ca3f:	callq  414b90 <TS_RESP_CTX_new@plt>
  45ca44:	test   %rax,%rax
  45ca47:	mov    %rax,%r12
  45ca4a:	je     45cda1 <X509_get0_pubkey_bitstr@plt+0x463d1>
  45ca50:	lea    -0xc67(%rip),%rdx        # 45bdf0 <X509_get0_pubkey_bitstr@plt+0x45420>
  45ca57:	mov    %rax,%rcx
  45ca5a:	mov    %rbp,%rsi
  45ca5d:	mov    %rbx,%rdi
  45ca60:	callq  4135a0 <TS_CONF_set_serial@plt>
  45ca65:	test   %eax,%eax
  45ca67:	jne    45d1ba <X509_get0_pubkey_bitstr@plt+0x467ea>
  45ca6d:	xor    %edi,%edi
  45ca6f:	xor    %r13d,%r13d
  45ca72:	xor    %ebp,%ebp
  45ca74:	callq  4158f0 <TS_RESP_free@plt>
  45ca79:	mov    %r12,%rdi
  45ca7c:	mov    $0x1,%r12d
  45ca82:	callq  412860 <TS_RESP_CTX_free@plt>
  45ca87:	mov    %r14,%rdi
  45ca8a:	xor    %r14d,%r14d
  45ca8d:	callq  416570 <BIO_free_all@plt>
  45ca92:	lea    0x21e2a7(%rip),%rax        # 67ad40 <_edata+0x38>
  45ca99:	lea    0x13d14(%rip),%rsi        # 4707b4 <_fini+0x132b0>
  45caa0:	mov    (%rax),%rdi
  45caa3:	xor    %eax,%eax
  45caa5:	callq  413c40 <BIO_printf@plt>
  45caaa:	jmpq   45c8e1 <X509_get0_pubkey_bitstr@plt+0x45f11>
  45caaf:	mov    %rbp,%rax
  45cab2:	movl   $0x1,0x34(%rsp)
  45caba:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45cabf:	callq  414b70 <d2i_TS_RESP_bio@plt>
  45cac4:	test   %rax,%rax
  45cac7:	mov    %rax,%r13
  45caca:	je     45c972 <X509_get0_pubkey_bitstr@plt+0x45fa2>
  45cad0:	xor    %r15d,%r15d
  45cad3:	mov    0x10(%rsp),%r9
  45cad8:	jmpq   45c151 <X509_get0_pubkey_bitstr@plt+0x45781>
  45cadd:	mov    $0x1,%r12d
  45cae3:	xor    %r14d,%r14d
  45cae6:	jmpq   45c8e1 <X509_get0_pubkey_bitstr@plt+0x45f11>
  45caeb:	lea    0x21e24e(%rip),%rax        # 67ad40 <_edata+0x38>
  45caf2:	mov    0x40(%rsp),%rdx
  45caf7:	lea    0x107b(%rip),%rsi        # 45db79 <_fini+0x675>
  45cafe:	mov    (%rax),%rdi
  45cb01:	xor    %eax,%eax
  45cb03:	callq  413c40 <BIO_printf@plt>
  45cb08:	mov    %r14,%rdi
  45cb0b:	callq  4134b0 <X509_STORE_free@plt>
  45cb10:	movq   $0x0,0x8(%rbx)
  45cb18:	mov    %rbx,%rdi
  45cb1b:	callq  416770 <TS_VERIFY_CTX_free@plt>
  45cb20:	mov    %r12,%rdi
  45cb23:	callq  416570 <BIO_free_all@plt>
  45cb28:	mov    %rbp,%rdi
  45cb2b:	callq  414480 <TS_REQ_free@plt>
  45cb30:	jmpq   45c978 <X509_get0_pubkey_bitstr@plt+0x45fa8>
  45cb35:	xor    %r12d,%r12d
  45cb38:	callq  415ed0 <i2d_TS_REQ_bio@plt>
  45cb3d:	test   %eax,%eax
  45cb3f:	sete   %r12b
  45cb43:	jmpq   45c725 <X509_get0_pubkey_bitstr@plt+0x45d55>
  45cb48:	cmpq   $0x0,(%rsp)
  45cb4d:	movq   $0x0,0x8(%rsp)
  45cb56:	je     45cc55 <X509_get0_pubkey_bitstr@plt+0x46285>
  45cb5c:	cmpq   $0x0,0x28(%rsp)
  45cb62:	movq   $0x0,0xa8(%rsp)
  45cb6e:	je     45cf15 <X509_get0_pubkey_bitstr@plt+0x46545>
  45cb74:	callq  414a50 <TS_REQ_new@plt>
  45cb79:	test   %rax,%rax
  45cb7c:	mov    %rax,%rbp
  45cb7f:	je     45cf2f <X509_get0_pubkey_bitstr@plt+0x4655f>
  45cb85:	mov    $0x1,%esi
  45cb8a:	mov    %rax,%rdi
  45cb8d:	callq  415160 <TS_REQ_set_version@plt>
  45cb92:	test   %eax,%eax
  45cb94:	jne    45cdf0 <X509_get0_pubkey_bitstr@plt+0x46420>
  45cb9a:	xor    %r14d,%r14d
  45cb9d:	xor    %r12d,%r12d
  45cba0:	xor    %r13d,%r13d
  45cba3:	movq   $0x0,0x18(%rsp)
  45cbac:	mov    %rbp,%rdi
  45cbaf:	xor    %ebp,%ebp
  45cbb1:	callq  414480 <TS_REQ_free@plt>
  45cbb6:	lea    0x21e183(%rip),%rax        # 67ad40 <_edata+0x38>
  45cbbd:	lea    0x13bba(%rip),%rsi        # 47077e <_fini+0x1327a>
  45cbc4:	mov    (%rax),%rdi
  45cbc7:	xor    %eax,%eax
  45cbc9:	callq  413c40 <BIO_printf@plt>
  45cbce:	mov    0x18(%rsp),%rdi
  45cbd3:	callq  416490 <TS_MSG_IMPRINT_free@plt>
  45cbd8:	mov    %r13,%rdi
  45cbdb:	xor    %r13d,%r13d
  45cbde:	callq  4165c0 <X509_ALGOR_free@plt>
  45cbe3:	mov    0xa8(%rsp),%rdi
  45cbeb:	callq  415020 <CRYPTO_free@plt>
  45cbf0:	mov    %r12,%rdi
  45cbf3:	callq  414230 <ASN1_OBJECT_free@plt>
  45cbf8:	mov    %r14,%rdi
  45cbfb:	callq  412a90 <ASN1_INTEGER_free@plt>
  45cc00:	jmpq   45c6d3 <X509_get0_pubkey_bitstr@plt+0x45d03>
  45cc05:	mov    %rbp,%rsi
  45cc08:	mov    %rax,%rdi
  45cc0b:	xor    %r12d,%r12d
  45cc0e:	callq  412920 <i2d_TS_RESP_bio@plt>
  45cc13:	test   %eax,%eax
  45cc15:	sete   %r12b
  45cc19:	jmpq   45c8e1 <X509_get0_pubkey_bitstr@plt+0x45f11>
  45cc1e:	mov    %r13,%rsi
  45cc21:	mov    %rbx,%rdi
  45cc24:	callq  414420 <TS_RESP_verify_response@plt>
  45cc29:	mov    %eax,%ebp
  45cc2b:	jmpq   45c2b1 <X509_get0_pubkey_bitstr@plt+0x458e1>
  45cc30:	mov    %rbp,%rsi
  45cc33:	mov    %rax,%rdi
  45cc36:	xor    %r12d,%r12d
  45cc39:	callq  412900 <TS_RESP_print_bio@plt>
  45cc3e:	test   %eax,%eax
  45cc40:	sete   %r12b
  45cc44:	jmpq   45c8e1 <X509_get0_pubkey_bitstr@plt+0x45f11>
  45cc49:	xor    %ebp,%ebp
  45cc4b:	xor    %r12d,%r12d
  45cc4e:	xor    %ebx,%ebx
  45cc50:	jmpq   45cb18 <X509_get0_pubkey_bitstr@plt+0x46148>
  45cc55:	mov    0x2192b4(%rip),%rax        # 675f10 <_fini+0x218a0c>
  45cc5c:	lea    0x2d7e(%rip),%rsi        # 45f9e1 <_fini+0x24dd>
  45cc63:	mov    %r9,%rdi
  45cc66:	mov    (%rax),%rdx
  45cc69:	callq  45bdd0 <X509_get0_pubkey_bitstr@plt+0x45400>
  45cc6e:	test   %rax,%rax
  45cc71:	mov    %rax,0x8(%rsp)
  45cc76:	jne    45cb5c <X509_get0_pubkey_bitstr@plt+0x4618c>
  45cc7c:	mov    $0x1,%r12d
  45cc82:	xor    %r14d,%r14d
  45cc85:	movq   $0x0,0x8(%rsp)
  45cc8e:	xor    %r13d,%r13d
  45cc91:	xor    %ebp,%ebp
  45cc93:	jmpq   45c725 <X509_get0_pubkey_bitstr@plt+0x45d55>
  45cc98:	mov    $0x1,%r12d
  45cc9e:	xor    %r14d,%r14d
  45cca1:	jmpq   45c725 <X509_get0_pubkey_bitstr@plt+0x45d55>
  45cca6:	mov    %r9,0x10(%rsp)
  45ccab:	callq  413be0 <TS_VERIFY_CTX_new@plt>
  45ccb0:	test   %rax,%rax
  45ccb3:	mov    %rax,%rbx
  45ccb6:	je     45cc49 <X509_get0_pubkey_bitstr@plt+0x46279>
  45ccb8:	test   %r12b,%r12b
  45ccbb:	je     45cda9 <X509_get0_pubkey_bitstr@plt+0x463d9>
  45ccc1:	mov    0x10(%rsp),%r9
  45ccc6:	lea    0x2d14(%rip),%rsi        # 45f9e1 <_fini+0x24dd>
  45cccd:	movl   $0x52,(%rax)
  45ccd3:	mov    %r9,%rdi
  45ccd6:	callq  412ba0 <BIO_new_file@plt>
  45ccdb:	test   %rax,%rax
  45ccde:	mov    %rax,0x38(%rbx)
  45cce2:	je     45cf68 <X509_get0_pubkey_bitstr@plt+0x46598>
  45cce8:	mov    (%rbx),%eax
  45ccea:	xor    %ebp,%ebp
  45ccec:	xor    %r12d,%r12d
  45ccef:	or     $0x1,%eax
  45ccf2:	jmpq   45c1c0 <X509_get0_pubkey_bitstr@plt+0x457f0>
  45ccf7:	lea    0x139cd(%rip),%rdi        # 4706cb <_fini+0x131c7>
  45ccfe:	mov    $0xb,%ecx
  45cd03:	mov    %rax,%rsi
  45cd06:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45cd08:	je     45cf58 <X509_get0_pubkey_bitstr@plt+0x46588>
  45cd0e:	lea    0x1552(%rip),%rdi        # 45e267 <_fini+0xd63>
  45cd15:	mov    $0x6,%ecx
  45cd1a:	mov    %rax,%rsi
  45cd1d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45cd1f:	je     45cf48 <X509_get0_pubkey_bitstr@plt+0x46578>
  45cd25:	lea    0x139aa(%rip),%rdi        # 4706d6 <_fini+0x131d2>
  45cd2c:	mov    $0x7,%ecx
  45cd31:	mov    %rax,%rsi
  45cd34:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45cd36:	jne    45d023 <X509_get0_pubkey_bitstr@plt+0x46653>
  45cd3c:	test   %r14d,%r14d
  45cd3f:	jne    45c548 <X509_get0_pubkey_bitstr@plt+0x45b78>
  45cd45:	mov    %rbp,%rax
  45cd48:	mov    $0x2,%r14b
  45cd4b:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45cd50:	mov    $0x1,%r12d
  45cd56:	xor    %r14d,%r14d
  45cd59:	xor    %ebp,%ebp
  45cd5b:	jmpq   45c8e1 <X509_get0_pubkey_bitstr@plt+0x45f11>
  45cd60:	xor    %r12d,%r12d
  45cd63:	xor    %ebp,%ebp
  45cd65:	jmpq   45c859 <X509_get0_pubkey_bitstr@plt+0x45e89>
  45cd6a:	xor    %r12d,%r12d
  45cd6d:	xor    %ebp,%ebp
  45cd6f:	xor    %r14d,%r14d
  45cd72:	jmpq   45c859 <X509_get0_pubkey_bitstr@plt+0x45e89>
  45cd77:	xor    %r12d,%r12d
  45cd7a:	jmpq   45c859 <X509_get0_pubkey_bitstr@plt+0x45e89>
  45cd7f:	callq  414c30 <__stack_chk_fail@plt>
  45cd84:	mov    $0x1,%r12d
  45cd8a:	jmpq   45c725 <X509_get0_pubkey_bitstr@plt+0x45d55>
  45cd8f:	mov    $0x1,%r12d
  45cd95:	jmpq   45c8e1 <X509_get0_pubkey_bitstr@plt+0x45f11>
  45cd9a:	xor    %ebx,%ebx
  45cd9c:	jmpq   45cb18 <X509_get0_pubkey_bitstr@plt+0x46148>
  45cda1:	xor    %r12d,%r12d
  45cda4:	jmpq   45ca6d <X509_get0_pubkey_bitstr@plt+0x4609d>
  45cda9:	test   %bpl,%bpl
  45cdac:	je     45d0e6 <X509_get0_pubkey_bitstr@plt+0x46716>
  45cdb2:	mov    (%rsp),%rdi
  45cdb6:	lea    0xa8(%rsp),%rsi
  45cdbe:	movl   $0x4a,(%rax)
  45cdc4:	callq  414d40 <string_to_hex@plt>
  45cdc9:	test   %rax,%rax
  45cdcc:	mov    %rax,0x28(%rbx)
  45cdd0:	je     45d0c4 <X509_get0_pubkey_bitstr@plt+0x466f4>
  45cdd6:	mov    0xa8(%rsp),%rax
  45cdde:	mov    %eax,0x30(%rbx)
  45cde1:	jmpq   45cce8 <X509_get0_pubkey_bitstr@plt+0x46318>
  45cde6:	nopw   %cs:0x0(%rax,%rax,1)
  45cdf0:	callq  413110 <TS_MSG_IMPRINT_new@plt>
  45cdf5:	test   %rax,%rax
  45cdf8:	mov    %rax,%r14
  45cdfb:	mov    %rax,0x18(%rsp)
  45ce00:	je     45d32d <X509_get0_pubkey_bitstr@plt+0x4695d>
  45ce06:	callq  416230 <X509_ALGOR_new@plt>
  45ce0b:	test   %rax,%rax
  45ce0e:	mov    %rax,%r13
  45ce11:	je     45d322 <X509_get0_pubkey_bitstr@plt+0x46952>
  45ce17:	mov    0x28(%rsp),%rdi
  45ce1c:	callq  415290 <EVP_MD_type@plt>
  45ce21:	mov    %eax,%edi
  45ce23:	callq  415950 <OBJ_nid2obj@plt>
  45ce28:	test   %rax,%rax
  45ce2b:	mov    %rax,0x0(%r13)
  45ce2f:	je     45d322 <X509_get0_pubkey_bitstr@plt+0x46952>
  45ce35:	callq  4148b0 <ASN1_TYPE_new@plt>
  45ce3a:	test   %rax,%rax
  45ce3d:	mov    %rax,0x8(%r13)
  45ce41:	je     45d322 <X509_get0_pubkey_bitstr@plt+0x46952>
  45ce47:	mov    %r14,%rdi
  45ce4a:	movl   $0x5,(%rax)
  45ce50:	mov    %r13,%rsi
  45ce53:	callq  415aa0 <TS_MSG_IMPRINT_set_algo@plt>
  45ce58:	xor    %r14d,%r14d
  45ce5b:	xor    %r12d,%r12d
  45ce5e:	test   %eax,%eax
  45ce60:	je     45cbac <X509_get0_pubkey_bitstr@plt+0x461dc>
  45ce66:	mov    0x28(%rsp),%rdx
  45ce6b:	mov    (%rsp),%rsi
  45ce6f:	lea    0xa8(%rsp),%rcx
  45ce77:	mov    0x8(%rsp),%rdi
  45ce7c:	callq  45b980 <X509_get0_pubkey_bitstr@plt+0x44fb0>
  45ce81:	test   %eax,%eax
  45ce83:	je     45cbac <X509_get0_pubkey_bitstr@plt+0x461dc>
  45ce89:	mov    0xa8(%rsp),%rsi
  45ce91:	mov    0x18(%rsp),%rdi
  45ce96:	mov    %eax,%edx
  45ce98:	callq  4136d0 <TS_MSG_IMPRINT_set_msg@plt>
  45ce9d:	test   %eax,%eax
  45ce9f:	je     45cbac <X509_get0_pubkey_bitstr@plt+0x461dc>
  45cea5:	mov    0x18(%rsp),%rsi
  45ceaa:	mov    %rbp,%rdi
  45cead:	callq  415bd0 <TS_REQ_set_msg_imprint@plt>
  45ceb2:	test   %eax,%eax
  45ceb4:	je     45d322 <X509_get0_pubkey_bitstr@plt+0x46952>
  45ceba:	mov    0x10(%rsp),%rdi
  45cebf:	test   %rdi,%rdi
  45cec2:	je     45d33b <X509_get0_pubkey_bitstr@plt+0x4696b>
  45cec8:	xor    %esi,%esi
  45ceca:	callq  414870 <OBJ_txt2obj@plt>
  45cecf:	test   %rax,%rax
  45ced2:	mov    %rax,%r12
  45ced5:	je     45d125 <X509_get0_pubkey_bitstr@plt+0x46755>
  45cedb:	mov    %rax,%rsi
  45cede:	mov    %rbp,%rdi
  45cee1:	xor    %r14d,%r14d
  45cee4:	callq  415f90 <TS_REQ_set_policy_id@plt>
  45cee9:	test   %eax,%eax
  45ceeb:	je     45cbac <X509_get0_pubkey_bitstr@plt+0x461dc>
  45cef1:	xor    %r14d,%r14d
  45cef4:	test   %r15b,%r15b
  45cef7:	jne    45cf72 <X509_get0_pubkey_bitstr@plt+0x465a2>
  45cef9:	mov    0x98(%rsp),%esi
  45cf00:	mov    %rbp,%rdi
  45cf03:	callq  412bc0 <TS_REQ_set_cert_req@plt>
  45cf08:	test   %eax,%eax
  45cf0a:	je     45cbac <X509_get0_pubkey_bitstr@plt+0x461dc>
  45cf10:	jmpq   45cbce <X509_get0_pubkey_bitstr@plt+0x461fe>
  45cf15:	lea    0x8ab(%rip),%rdi        # 45d7c7 <_fini+0x2c3>
  45cf1c:	callq  416720 <EVP_get_digestbyname@plt>
  45cf21:	test   %rax,%rax
  45cf24:	mov    %rax,0x28(%rsp)
  45cf29:	jne    45cb74 <X509_get0_pubkey_bitstr@plt+0x461a4>
  45cf2f:	xor    %r14d,%r14d
  45cf32:	xor    %r12d,%r12d
  45cf35:	xor    %r13d,%r13d
  45cf38:	movq   $0x0,0x18(%rsp)
  45cf41:	xor    %ebp,%ebp
  45cf43:	jmpq   45cbac <X509_get0_pubkey_bitstr@plt+0x461dc>
  45cf48:	mov    %rbp,%rax
  45cf4b:	movl   $0x1,0x50(%rsp)
  45cf53:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45cf58:	mov    %rbp,%rax
  45cf5b:	movl   $0x1,0x54(%rsp)
  45cf63:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45cf68:	xor    %ebp,%ebp
  45cf6a:	xor    %r12d,%r12d
  45cf6d:	jmpq   45cb18 <X509_get0_pubkey_bitstr@plt+0x46148>
  45cf72:	lea    0xb0(%rsp),%rax
  45cf7a:	mov    $0x8,%esi
  45cf7f:	mov    %rax,%rdi
  45cf82:	mov    %rax,(%rsp)
  45cf86:	callq  415360 <RAND_bytes@plt>
  45cf8b:	test   %eax,%eax
  45cf8d:	jle    45d071 <X509_get0_pubkey_bitstr@plt+0x466a1>
  45cf93:	xor    %eax,%eax
  45cf95:	mov    (%rsp),%rdx
  45cf99:	mov    %eax,%r15d
  45cf9c:	cmpb   $0x0,(%rdx,%rax,1)
  45cfa0:	jne    45cfb2 <X509_get0_pubkey_bitstr@plt+0x465e2>
  45cfa2:	add    $0x1,%rax
  45cfa6:	cmp    $0x8,%rax
  45cfaa:	jne    45cf95 <X509_get0_pubkey_bitstr@plt+0x465c5>
  45cfac:	mov    $0x8,%r15d
  45cfb2:	callq  4162e0 <ASN1_INTEGER_new@plt>
  45cfb7:	test   %rax,%rax
  45cfba:	mov    %rax,%r14
  45cfbd:	je     45d071 <X509_get0_pubkey_bitstr@plt+0x466a1>
  45cfc3:	mov    0x8(%rax),%rdi
  45cfc7:	callq  415020 <CRYPTO_free@plt>
  45cfcc:	mov    $0x8,%eax
  45cfd1:	mov    $0x9,%edi
  45cfd6:	lea    0x136c1(%rip),%rsi        # 47069e <_fini+0x1319a>
  45cfdd:	sub    %r15d,%eax
  45cfe0:	sub    %r15d,%edi
  45cfe3:	mov    $0x294,%edx
  45cfe8:	mov    %eax,(%r14)
  45cfeb:	callq  413d50 <CRYPTO_malloc@plt>
  45cff0:	test   %rax,%rax
  45cff3:	mov    %rax,0x8(%r14)
  45cff7:	je     45d074 <X509_get0_pubkey_bitstr@plt+0x466a4>
  45cff9:	movslq (%r14),%rdx
  45cffc:	movslq %r15d,%rsi
  45cfff:	add    (%rsp),%rsi
  45d003:	mov    %rax,%rdi
  45d006:	callq  414250 <memcpy@plt>
  45d00b:	mov    %r14,%rsi
  45d00e:	mov    %rbp,%rdi
  45d011:	callq  412810 <TS_REQ_set_nonce@plt>
  45d016:	test   %eax,%eax
  45d018:	je     45cbac <X509_get0_pubkey_bitstr@plt+0x461dc>
  45d01e:	jmpq   45cef9 <X509_get0_pubkey_bitstr@plt+0x46529>
  45d023:	lea    0x136b3(%rip),%rdi        # 4706dd <_fini+0x131d9>
  45d02a:	mov    $0xb,%ecx
  45d02f:	mov    %rax,%rsi
  45d032:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45d034:	jne    45d04b <X509_get0_pubkey_bitstr@plt+0x4667b>
  45d036:	mov    0x8(%rbp),%rdx
  45d03a:	sub    $0x1,%ebx
  45d03d:	lea    0x8(%rbp),%rax
  45d041:	mov    %rdx,0x18(%rsp)
  45d046:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45d04b:	lea    0x119e(%rip),%rdi        # 45e1f0 <_fini+0xcec>
  45d052:	mov    %rax,%rsi
  45d055:	mov    %r15,%rcx
  45d058:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45d05a:	jne    45d09c <X509_get0_pubkey_bitstr@plt+0x466cc>
  45d05c:	mov    0x8(%rbp),%rdx
  45d060:	sub    $0x1,%ebx
  45d063:	lea    0x8(%rbp),%rax
  45d067:	mov    %rdx,0x8(%rsp)
  45d06c:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45d071:	xor    %r14d,%r14d
  45d074:	lea    0x21dcc5(%rip),%rax        # 67ad40 <_edata+0x38>
  45d07b:	lea    0x13699(%rip),%rsi        # 47071b <_fini+0x13217>
  45d082:	mov    (%rax),%rdi
  45d085:	xor    %eax,%eax
  45d087:	callq  413c40 <BIO_printf@plt>
  45d08c:	mov    %r14,%rdi
  45d08f:	xor    %r14d,%r14d
  45d092:	callq  412a90 <ASN1_INTEGER_free@plt>
  45d097:	jmpq   45cbac <X509_get0_pubkey_bitstr@plt+0x461dc>
  45d09c:	lea    0x654f(%rip),%rdi        # 4635f2 <_fini+0x60ee>
  45d0a3:	mov    $0x7,%ecx
  45d0a8:	mov    %rax,%rsi
  45d0ab:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45d0ad:	jne    45d0fb <X509_get0_pubkey_bitstr@plt+0x4672b>
  45d0af:	mov    0x8(%rbp),%rdx
  45d0b3:	sub    $0x1,%ebx
  45d0b6:	lea    0x8(%rbp),%rax
  45d0ba:	mov    %rdx,0x58(%rsp)
  45d0bf:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45d0c4:	lea    0x21dc75(%rip),%rax        # 67ad40 <_edata+0x38>
  45d0cb:	lea    0x13661(%rip),%rsi        # 470733 <_fini+0x1322f>
  45d0d2:	xor    %ebp,%ebp
  45d0d4:	xor    %r12d,%r12d
  45d0d7:	mov    (%rax),%rdi
  45d0da:	xor    %eax,%eax
  45d0dc:	callq  413c40 <BIO_printf@plt>
  45d0e1:	jmpq   45cb18 <X509_get0_pubkey_bitstr@plt+0x46148>
  45d0e6:	movl   $0x42,(%rax)
  45d0ec:	xor    %ebp,%ebp
  45d0ee:	mov    $0x43,%eax
  45d0f3:	xor    %r12d,%r12d
  45d0f6:	jmpq   45c1c0 <X509_get0_pubkey_bitstr@plt+0x457f0>
  45d0fb:	lea    0x10cc5(%rip),%rdi        # 46ddc7 <_fini+0x108c3>
  45d102:	mov    %rax,%rsi
  45d105:	mov    %r15,%rcx
  45d108:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45d10a:	jne    45d343 <X509_get0_pubkey_bitstr@plt+0x46973>
  45d110:	mov    0x8(%rbp),%rdx
  45d114:	sub    $0x1,%ebx
  45d117:	lea    0x8(%rbp),%rax
  45d11b:	mov    %rdx,0x60(%rsp)
  45d120:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45d125:	lea    0x21dc14(%rip),%rax        # 67ad40 <_edata+0x38>
  45d12c:	mov    0x10(%rsp),%rdx
  45d131:	lea    0x135c9(%rip),%rsi        # 470701 <_fini+0x131fd>
  45d138:	mov    (%rax),%rdi
  45d13b:	xor    %eax,%eax
  45d13d:	callq  413c40 <BIO_printf@plt>
  45d142:	jmpq   45cbac <X509_get0_pubkey_bitstr@plt+0x461dc>
  45d147:	lea    0x21dbf2(%rip),%rax        # 67ad40 <_edata+0x38>
  45d14e:	mov    0x38(%rsp),%rdx
  45d153:	lea    0xa36(%rip),%rsi        # 45db90 <_fini+0x68c>
  45d15a:	mov    (%rax),%rdi
  45d15d:	xor    %eax,%eax
  45d15f:	callq  413c40 <BIO_printf@plt>
  45d164:	jmpq   45cb08 <X509_get0_pubkey_bitstr@plt+0x46138>
  45d169:	lea    0x21dbd0(%rip),%rax        # 67ad40 <_edata+0x38>
  45d170:	lea    0x135d3(%rip),%rsi        # 47074a <_fini+0x13246>
  45d177:	mov    (%rax),%rdi
  45d17a:	xor    %eax,%eax
  45d17c:	callq  413c40 <BIO_printf@plt>
  45d181:	jmpq   45cb08 <X509_get0_pubkey_bitstr@plt+0x46138>
  45d186:	mov    %r12,%rsi
  45d189:	mov    %rbp,%rdi
  45d18c:	callq  416970 <TS_RESP_set_status_info@plt>
  45d191:	test   %eax,%eax
  45d193:	je     45c859 <X509_get0_pubkey_bitstr@plt+0x45e89>
  45d199:	mov    %r14,%rdx
  45d19c:	mov    %r15,%rsi
  45d19f:	mov    %rbp,%rdi
  45d1a2:	callq  413ab0 <TS_RESP_set_tst_info@plt>
  45d1a7:	xor    %edi,%edi
  45d1a9:	callq  413150 <PKCS7_free@plt>
  45d1ae:	xor    %edi,%edi
  45d1b0:	callq  416400 <TS_TST_INFO_free@plt>
  45d1b5:	jmpq   45c873 <X509_get0_pubkey_bitstr@plt+0x45ea3>
  45d1ba:	mov    0x78(%rsp),%rdx
  45d1bf:	mov    %rbp,%rsi
  45d1c2:	mov    %rbx,%rdi
  45d1c5:	callq  4150e0 <TS_CONF_set_crypto_device@plt>
  45d1ca:	test   %eax,%eax
  45d1cc:	je     45ca6d <X509_get0_pubkey_bitstr@plt+0x4609d>
  45d1d2:	mov    0x60(%rsp),%rdx
  45d1d7:	mov    %r12,%rcx
  45d1da:	mov    %rbp,%rsi
  45d1dd:	mov    %rbx,%rdi
  45d1e0:	callq  4141b0 <TS_CONF_set_signer_cert@plt>
  45d1e5:	test   %eax,%eax
  45d1e7:	je     45ca6d <X509_get0_pubkey_bitstr@plt+0x4609d>
  45d1ed:	mov    0x68(%rsp),%rdx
  45d1f2:	mov    %r12,%rcx
  45d1f5:	mov    %rbp,%rsi
  45d1f8:	mov    %rbx,%rdi
  45d1fb:	callq  413290 <TS_CONF_set_certs@plt>
  45d200:	test   %eax,%eax
  45d202:	je     45ca6d <X509_get0_pubkey_bitstr@plt+0x4609d>
  45d208:	mov    0x58(%rsp),%rdx
  45d20d:	mov    %r12,%r8
  45d210:	mov    %r15,%rcx
  45d213:	mov    %rbp,%rsi
  45d216:	mov    %rbx,%rdi
  45d219:	callq  416730 <TS_CONF_set_signer_key@plt>
  45d21e:	test   %eax,%eax
  45d220:	je     45ca6d <X509_get0_pubkey_bitstr@plt+0x4609d>
  45d226:	mov    0x10(%rsp),%rdx
  45d22b:	mov    %r12,%rcx
  45d22e:	mov    %rbp,%rsi
  45d231:	mov    %rbx,%rdi
  45d234:	callq  414200 <TS_CONF_set_def_policy@plt>
  45d239:	test   %eax,%eax
  45d23b:	je     45ca6d <X509_get0_pubkey_bitstr@plt+0x4609d>
  45d241:	mov    %r12,%rdx
  45d244:	mov    %rbp,%rsi
  45d247:	mov    %rbx,%rdi
  45d24a:	callq  416370 <TS_CONF_set_policies@plt>
  45d24f:	test   %eax,%eax
  45d251:	je     45ca6d <X509_get0_pubkey_bitstr@plt+0x4609d>
  45d257:	mov    %r12,%rdx
  45d25a:	mov    %rbp,%rsi
  45d25d:	mov    %rbx,%rdi
  45d260:	callq  4129a0 <TS_CONF_set_digests@plt>
  45d265:	test   %eax,%eax
  45d267:	je     45ca6d <X509_get0_pubkey_bitstr@plt+0x4609d>
  45d26d:	mov    %r12,%rdx
  45d270:	mov    %rbp,%rsi
  45d273:	mov    %rbx,%rdi
  45d276:	callq  414110 <TS_CONF_set_accuracy@plt>
  45d27b:	test   %eax,%eax
  45d27d:	je     45ca6d <X509_get0_pubkey_bitstr@plt+0x4609d>
  45d283:	mov    %r12,%rdx
  45d286:	mov    %rbp,%rsi
  45d289:	mov    %rbx,%rdi
  45d28c:	callq  416390 <TS_CONF_set_clock_precision_digits@plt>
  45d291:	test   %eax,%eax
  45d293:	je     45ca6d <X509_get0_pubkey_bitstr@plt+0x4609d>
  45d299:	mov    %r12,%rdx
  45d29c:	mov    %rbp,%rsi
  45d29f:	mov    %rbx,%rdi
  45d2a2:	callq  414ba0 <TS_CONF_set_ordering@plt>
  45d2a7:	test   %eax,%eax
  45d2a9:	je     45ca6d <X509_get0_pubkey_bitstr@plt+0x4609d>
  45d2af:	mov    %r12,%rdx
  45d2b2:	mov    %rbp,%rsi
  45d2b5:	mov    %rbx,%rdi
  45d2b8:	callq  415260 <TS_CONF_set_tsa_name@plt>
  45d2bd:	test   %eax,%eax
  45d2bf:	je     45ca6d <X509_get0_pubkey_bitstr@plt+0x4609d>
  45d2c5:	mov    %r12,%rdx
  45d2c8:	mov    %rbp,%rsi
  45d2cb:	mov    %rbx,%rdi
  45d2ce:	callq  4166b0 <TS_CONF_set_ess_cert_id_chain@plt>
  45d2d3:	test   %eax,%eax
  45d2d5:	je     45ca6d <X509_get0_pubkey_bitstr@plt+0x4609d>
  45d2db:	mov    %r14,%rsi
  45d2de:	mov    %r12,%rdi
  45d2e1:	callq  416000 <TS_RESP_create_response@plt>
  45d2e6:	test   %rax,%rax
  45d2e9:	mov    %rax,%rbp
  45d2ec:	je     45ca6d <X509_get0_pubkey_bitstr@plt+0x4609d>
  45d2f2:	mov    %r12,%rdi
  45d2f5:	xor    %r13d,%r13d
  45d2f8:	callq  412860 <TS_RESP_CTX_free@plt>
  45d2fd:	mov    %r14,%rdi
  45d300:	callq  416570 <BIO_free_all@plt>
  45d305:	lea    0x21da34(%rip),%rax        # 67ad40 <_edata+0x38>
  45d30c:	lea    0x13483(%rip),%rsi        # 470796 <_fini+0x13292>
  45d313:	mov    (%rax),%rdi
  45d316:	xor    %eax,%eax
  45d318:	callq  413c40 <BIO_printf@plt>
  45d31d:	jmpq   45c884 <X509_get0_pubkey_bitstr@plt+0x45eb4>
  45d322:	xor    %r14d,%r14d
  45d325:	xor    %r12d,%r12d
  45d328:	jmpq   45cbac <X509_get0_pubkey_bitstr@plt+0x461dc>
  45d32d:	xor    %r14d,%r14d
  45d330:	xor    %r12d,%r12d
  45d333:	xor    %r13d,%r13d
  45d336:	jmpq   45cbac <X509_get0_pubkey_bitstr@plt+0x461dc>
  45d33b:	xor    %r12d,%r12d
  45d33e:	jmpq   45cef1 <X509_get0_pubkey_bitstr@plt+0x46521>
  45d343:	lea    0xb2cc(%rip),%rdi        # 468616 <_fini+0xb112>
  45d34a:	mov    $0x7,%ecx
  45d34f:	mov    %rax,%rsi
  45d352:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45d354:	jne    45d36b <X509_get0_pubkey_bitstr@plt+0x4699b>
  45d356:	mov    0x8(%rbp),%rdx
  45d35a:	sub    $0x1,%ebx
  45d35d:	lea    0x8(%rbp),%rax
  45d361:	mov    %rdx,0x68(%rsp)
  45d366:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45d36b:	lea    0xec6(%rip),%rdi        # 45e238 <_fini+0xd34>
  45d372:	mov    %rax,%rsi
  45d375:	mov    %r15,%rcx
  45d378:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45d37a:	jne    45d390 <X509_get0_pubkey_bitstr@plt+0x469c0>
  45d37c:	test   %r14d,%r14d
  45d37f:	jne    45c548 <X509_get0_pubkey_bitstr@plt+0x45b78>
  45d385:	mov    %rbp,%rax
  45d388:	mov    $0x3,%r14b
  45d38b:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45d390:	lea    0x79e(%rip),%rdi        # 45db35 <_fini+0x631>
  45d397:	mov    %rax,%rsi
  45d39a:	mov    %r15,%rcx
  45d39d:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45d39f:	jne    45d3b6 <X509_get0_pubkey_bitstr@plt+0x469e6>
  45d3a1:	mov    0x8(%rbp),%rdx
  45d3a5:	sub    $0x1,%ebx
  45d3a8:	lea    0x8(%rbp),%rax
  45d3ac:	mov    %rdx,0x38(%rsp)
  45d3b1:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45d3b6:	lea    0x780(%rip),%rdi        # 45db3d <_fini+0x639>
  45d3bd:	mov    %rax,%rsi
  45d3c0:	mov    %r15,%rcx
  45d3c3:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45d3c5:	jne    45d3dc <X509_get0_pubkey_bitstr@plt+0x46a0c>
  45d3c7:	mov    0x8(%rbp),%rdx
  45d3cb:	sub    $0x1,%ebx
  45d3ce:	lea    0x8(%rbp),%rax
  45d3d2:	mov    %rdx,0x40(%rsp)
  45d3d7:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45d3dc:	lea    0x762(%rip),%rdi        # 45db45 <_fini+0x641>
  45d3e3:	mov    $0xb,%ecx
  45d3e8:	mov    %rax,%rsi
  45d3eb:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45d3ed:	jne    45d404 <X509_get0_pubkey_bitstr@plt+0x46a34>
  45d3ef:	mov    0x8(%rbp),%rdx
  45d3f3:	sub    $0x1,%ebx
  45d3f6:	lea    0x8(%rbp),%rax
  45d3fa:	mov    %rdx,0x70(%rsp)
  45d3ff:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45d404:	lea    0x757(%rip),%rdi        # 45db62 <_fini+0x65e>
  45d40b:	mov    %rax,%rsi
  45d40e:	mov    %r15,%rcx
  45d411:	repz cmpsb %es:(%rdi),%ds:(%rsi)
  45d413:	jne    45d42a <X509_get0_pubkey_bitstr@plt+0x46a5a>
  45d415:	mov    0x8(%rbp),%rdx
  45d419:	sub    $0x1,%ebx
  45d41c:	lea    0x8(%rbp),%rax
  45d420:	mov    %rdx,0x78(%rsp)
  45d425:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45d42a:	lea    0x1(%rax),%rdi
  45d42e:	mov    %r11d,0x9c(%rsp)
  45d436:	mov    %r10,0x90(%rsp)
  45d43e:	mov    %r9,0x88(%rsp)
  45d446:	mov    %r8,0x80(%rsp)
  45d44e:	callq  416720 <EVP_get_digestbyname@plt>
  45d453:	test   %rax,%rax
  45d456:	mov    %rax,0x28(%rsp)
  45d45b:	je     45c548 <X509_get0_pubkey_bitstr@plt+0x45b78>
  45d461:	mov    %rbp,%rax
  45d464:	mov    0x80(%rsp),%r8
  45d46c:	mov    0x88(%rsp),%r9
  45d474:	mov    0x90(%rsp),%r10
  45d47c:	mov    0x9c(%rsp),%r11d
  45d484:	jmpq   45c003 <X509_get0_pubkey_bitstr@plt+0x45633>
  45d489:	nopl   (%rax)
  45d48c:	nopl   0x0(%rax)
  45d490:	push   %r15
  45d492:	mov    %edi,%r15d
  45d495:	push   %r14
  45d497:	mov    %rsi,%r14
  45d49a:	push   %r13
  45d49c:	mov    %rdx,%r13
  45d49f:	push   %r12
  45d4a1:	lea    0x218238(%rip),%r12        # 6756e0 <_fini+0x2181dc>
  45d4a8:	push   %rbp
  45d4a9:	lea    0x218238(%rip),%rbp        # 6756e8 <_fini+0x2181e4>
  45d4b0:	push   %rbx
  45d4b1:	sub    %r12,%rbp
  45d4b4:	xor    %ebx,%ebx
  45d4b6:	sar    $0x3,%rbp
  45d4ba:	sub    $0x8,%rsp
  45d4be:	callq  412750 <_init>
  45d4c3:	test   %rbp,%rbp
  45d4c6:	je     45d4e6 <X509_get0_pubkey_bitstr@plt+0x46b16>
  45d4c8:	nopl   0x0(%rax,%rax,1)
  45d4d0:	mov    %r13,%rdx
  45d4d3:	mov    %r14,%rsi
  45d4d6:	mov    %r15d,%edi
  45d4d9:	callq  *(%r12,%rbx,8)
  45d4dd:	add    $0x1,%rbx
  45d4e1:	cmp    %rbp,%rbx
  45d4e4:	jne    45d4d0 <X509_get0_pubkey_bitstr@plt+0x46b00>
  45d4e6:	add    $0x8,%rsp
  45d4ea:	pop    %rbx
  45d4eb:	pop    %rbp
  45d4ec:	pop    %r12
  45d4ee:	pop    %r13
  45d4f0:	pop    %r14
  45d4f2:	pop    %r15
  45d4f4:	retq   
  45d4f5:	data32 nopw %cs:0x0(%rax,%rax,1)
  45d500:	repz retq 
  45d502:	xchg   %ax,%ax

Disassembly of section .fini:

000000000045d504 <_fini>:
  45d504:	sub    $0x8,%rsp
  45d508:	add    $0x8,%rsp
  45d50c:	retq   
