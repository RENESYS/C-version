0000000: 2320 3120 226d 6169 6e2e 6322 0a23 2031  # 1 "main.c".# 1
0000010: 2022 3c62 7569 6c74 2d69 6e3e 220a 2320   "<built-in>".# 
0000020: 3120 223c 636f 6d6d 616e 642d 6c69 6e65  1 "<command-line
0000030: 3e22 0a23 2031 2022 2f75 7372 2f69 6e63  >".# 1 "/usr/inc
0000040: 6c75 6465 2f73 7464 632d 7072 6564 6566  lude/stdc-predef
0000050: 2e68 2220 3120 3320 340a 2320 3120 223c  .h" 1 3 4.# 1 "<
0000060: 636f 6d6d 616e 642d 6c69 6e65 3e22 2032  command-line>" 2
0000070: 0a23 2031 2022 6d61 696e 2e63 220a 2320  .# 1 "main.c".# 
0000080: 3131 2022 6d61 696e 2e63 220a 2320 3120  11 "main.c".# 1 
0000090: 2264 315f 626f 7468 2e63 2220 310a 2320  "d1_both.c" 1.# 
00000a0: 3131 3620 2264 315f 626f 7468 2e63 220a  116 "d1_both.c".
00000b0: 766f 6964 2070 6172 7453 7461 7274 2829  void partStart()
00000c0: 7b7d 0a76 6f69 6420 7061 7274 456e 6428  {}.void partEnd(
00000d0: 297b 7d0a 0a23 2031 2022 2f75 7372 2f6c  ){}..# 1 "/usr/l
00000e0: 6962 2f67 6363 2f78 3836 5f36 342d 7265  ib/gcc/x86_64-re
00000f0: 6468 6174 2d6c 696e 7578 2f34 2e38 2e33  dhat-linux/4.8.3
0000100: 2f69 6e63 6c75 6465 2f6c 696d 6974 732e  /include/limits.
0000110: 6822 2031 2033 2034 0a23 2033 3420 222f  h" 1 3 4.# 34 "/
0000120: 7573 722f 6c69 622f 6763 632f 7838 365f  usr/lib/gcc/x86_
0000130: 3634 2d72 6564 6861 742d 6c69 6e75 782f  64-redhat-linux/
0000140: 342e 382e 332f 696e 636c 7564 652f 6c69  4.8.3/include/li
0000150: 6d69 7473 2e68 2220 3320 340a 2320 3120  mits.h" 3 4.# 1 
0000160: 222f 7573 722f 6c69 622f 6763 632f 7838  "/usr/lib/gcc/x8
0000170: 365f 3634 2d72 6564 6861 742d 6c69 6e75  6_64-redhat-linu
0000180: 782f 342e 382e 332f 696e 636c 7564 652f  x/4.8.3/include/
0000190: 7379 736c 696d 6974 732e 6822 2031 2033  syslimits.h" 1 3
00001a0: 2034 0a0a 0a0a 0a0a 0a23 2031 2022 2f75   4.......# 1 "/u
00001b0: 7372 2f6c 6962 2f67 6363 2f78 3836 5f36  sr/lib/gcc/x86_6
00001c0: 342d 7265 6468 6174 2d6c 696e 7578 2f34  4-redhat-linux/4
00001d0: 2e38 2e33 2f69 6e63 6c75 6465 2f6c 696d  .8.3/include/lim
00001e0: 6974 732e 6822 2031 2033 2034 0a23 2031  its.h" 1 3 4.# 1
00001f0: 3638 2022 2f75 7372 2f6c 6962 2f67 6363  68 "/usr/lib/gcc
0000200: 2f78 3836 5f36 342d 7265 6468 6174 2d6c  /x86_64-redhat-l
0000210: 696e 7578 2f34 2e38 2e33 2f69 6e63 6c75  inux/4.8.3/inclu
0000220: 6465 2f6c 696d 6974 732e 6822 2033 2034  de/limits.h" 3 4
0000230: 0a23 2031 2022 2f75 7372 2f69 6e63 6c75  .# 1 "/usr/inclu
0000240: 6465 2f6c 696d 6974 732e 6822 2031 2033  de/limits.h" 1 3
0000250: 2034 0a23 2032 3620 222f 7573 722f 696e   4.# 26 "/usr/in
0000260: 636c 7564 652f 6c69 6d69 7473 2e68 2220  clude/limits.h" 
0000270: 3320 340a 2320 3120 222f 7573 722f 696e  3 4.# 1 "/usr/in
0000280: 636c 7564 652f 6665 6174 7572 6573 2e68  clude/features.h
0000290: 2220 3120 3320 340a 2320 3337 3520 222f  " 1 3 4.# 375 "/
00002a0: 7573 722f 696e 636c 7564 652f 6665 6174  usr/include/feat
00002b0: 7572 6573 2e68 2220 3320 340a 2320 3120  ures.h" 3 4.# 1 
00002c0: 222f 7573 722f 696e 636c 7564 652f 7379  "/usr/include/sy
00002d0: 732f 6364 6566 732e 6822 2031 2033 2034  s/cdefs.h" 1 3 4
00002e0: 0a23 2033 3932 2022 2f75 7372 2f69 6e63  .# 392 "/usr/inc
00002f0: 6c75 6465 2f73 7973 2f63 6465 6673 2e68  lude/sys/cdefs.h
0000300: 2220 3320 340a 2320 3120 222f 7573 722f  " 3 4.# 1 "/usr/
0000310: 696e 636c 7564 652f 6269 7473 2f77 6f72  include/bits/wor
0000320: 6473 697a 652e 6822 2031 2033 2034 0a23  dsize.h" 1 3 4.#
0000330: 2033 3933 2022 2f75 7372 2f69 6e63 6c75   393 "/usr/inclu
0000340: 6465 2f73 7973 2f63 6465 6673 2e68 2220  de/sys/cdefs.h" 
0000350: 3220 3320 340a 2320 3337 3620 222f 7573  2 3 4.# 376 "/us
0000360: 722f 696e 636c 7564 652f 6665 6174 7572  r/include/featur
0000370: 6573 2e68 2220 3220 3320 340a 2320 3339  es.h" 2 3 4.# 39
0000380: 3920 222f 7573 722f 696e 636c 7564 652f  9 "/usr/include/
0000390: 6665 6174 7572 6573 2e68 2220 3320 340a  features.h" 3 4.
00003a0: 2320 3120 222f 7573 722f 696e 636c 7564  # 1 "/usr/includ
00003b0: 652f 676e 752f 7374 7562 732e 6822 2031  e/gnu/stubs.h" 1
00003c0: 2033 2034 0a23 2031 3020 222f 7573 722f   3 4.# 10 "/usr/
00003d0: 696e 636c 7564 652f 676e 752f 7374 7562  include/gnu/stub
00003e0: 732e 6822 2033 2034 0a23 2031 2022 2f75  s.h" 3 4.# 1 "/u
00003f0: 7372 2f69 6e63 6c75 6465 2f67 6e75 2f73  sr/include/gnu/s
0000400: 7475 6273 2d36 342e 6822 2031 2033 2034  tubs-64.h" 1 3 4
0000410: 0a23 2031 3120 222f 7573 722f 696e 636c  .# 11 "/usr/incl
0000420: 7564 652f 676e 752f 7374 7562 732e 6822  ude/gnu/stubs.h"
0000430: 2032 2033 2034 0a23 2034 3030 2022 2f75   2 3 4.# 400 "/u
0000440: 7372 2f69 6e63 6c75 6465 2f66 6561 7475  sr/include/featu
0000450: 7265 732e 6822 2032 2033 2034 0a23 2032  res.h" 2 3 4.# 2
0000460: 3720 222f 7573 722f 696e 636c 7564 652f  7 "/usr/include/
0000470: 6c69 6d69 7473 2e68 2220 3220 3320 340a  limits.h" 2 3 4.
0000480: 2320 3134 3420 222f 7573 722f 696e 636c  # 144 "/usr/incl
0000490: 7564 652f 6c69 6d69 7473 2e68 2220 3320  ude/limits.h" 3 
00004a0: 340a 2320 3120 222f 7573 722f 696e 636c  4.# 1 "/usr/incl
00004b0: 7564 652f 6269 7473 2f70 6f73 6978 315f  ude/bits/posix1_
00004c0: 6c69 6d2e 6822 2031 2033 2034 0a23 2031  lim.h" 1 3 4.# 1
00004d0: 3630 2022 2f75 7372 2f69 6e63 6c75 6465  60 "/usr/include
00004e0: 2f62 6974 732f 706f 7369 7831 5f6c 696d  /bits/posix1_lim
00004f0: 2e68 2220 3320 340a 2320 3120 222f 7573  .h" 3 4.# 1 "/us
0000500: 722f 696e 636c 7564 652f 6269 7473 2f6c  r/include/bits/l
0000510: 6f63 616c 5f6c 696d 2e68 2220 3120 3320  ocal_lim.h" 1 3 
0000520: 340a 2320 3338 2022 2f75 7372 2f69 6e63  4.# 38 "/usr/inc
0000530: 6c75 6465 2f62 6974 732f 6c6f 6361 6c5f  lude/bits/local_
0000540: 6c69 6d2e 6822 2033 2034 0a23 2031 2022  lim.h" 3 4.# 1 "
0000550: 2f75 7372 2f69 6e63 6c75 6465 2f6c 696e  /usr/include/lin
0000560: 7578 2f6c 696d 6974 732e 6822 2031 2033  ux/limits.h" 1 3
0000570: 2034 0a23 2033 3920 222f 7573 722f 696e   4.# 39 "/usr/in
0000580: 636c 7564 652f 6269 7473 2f6c 6f63 616c  clude/bits/local
0000590: 5f6c 696d 2e68 2220 3220 3320 340a 2320  _lim.h" 2 3 4.# 
00005a0: 3136 3120 222f 7573 722f 696e 636c 7564  161 "/usr/includ
00005b0: 652f 6269 7473 2f70 6f73 6978 315f 6c69  e/bits/posix1_li
00005c0: 6d2e 6822 2032 2033 2034 0a23 2031 3435  m.h" 2 3 4.# 145
00005d0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6c   "/usr/include/l
00005e0: 696d 6974 732e 6822 2032 2033 2034 0a0a  imits.h" 2 3 4..
00005f0: 0a0a 2320 3120 222f 7573 722f 696e 636c  ..# 1 "/usr/incl
0000600: 7564 652f 6269 7473 2f70 6f73 6978 325f  ude/bits/posix2_
0000610: 6c69 6d2e 6822 2031 2033 2034 0a23 2031  lim.h" 1 3 4.# 1
0000620: 3439 2022 2f75 7372 2f69 6e63 6c75 6465  49 "/usr/include
0000630: 2f6c 696d 6974 732e 6822 2032 2033 2034  /limits.h" 2 3 4
0000640: 0a23 2031 3639 2022 2f75 7372 2f6c 6962  .# 169 "/usr/lib
0000650: 2f67 6363 2f78 3836 5f36 342d 7265 6468  /gcc/x86_64-redh
0000660: 6174 2d6c 696e 7578 2f34 2e38 2e33 2f69  at-linux/4.8.3/i
0000670: 6e63 6c75 6465 2f6c 696d 6974 732e 6822  nclude/limits.h"
0000680: 2032 2033 2034 0a23 2038 2022 2f75 7372   2 3 4.# 8 "/usr
0000690: 2f6c 6962 2f67 6363 2f78 3836 5f36 342d  /lib/gcc/x86_64-
00006a0: 7265 6468 6174 2d6c 696e 7578 2f34 2e38  redhat-linux/4.8
00006b0: 2e33 2f69 6e63 6c75 6465 2f73 7973 6c69  .3/include/sysli
00006c0: 6d69 7473 2e68 2220 3220 3320 340a 2320  mits.h" 2 3 4.# 
00006d0: 3335 2022 2f75 7372 2f6c 6962 2f67 6363  35 "/usr/lib/gcc
00006e0: 2f78 3836 5f36 342d 7265 6468 6174 2d6c  /x86_64-redhat-l
00006f0: 696e 7578 2f34 2e38 2e33 2f69 6e63 6c75  inux/4.8.3/inclu
0000700: 6465 2f6c 696d 6974 732e 6822 2032 2033  de/limits.h" 2 3
0000710: 2034 0a23 2031 3230 2022 6431 5f62 6f74   4.# 120 "d1_bot
0000720: 682e 6322 2032 0a23 2031 2022 2f75 7372  h.c" 2.# 1 "/usr
0000730: 2f69 6e63 6c75 6465 2f73 7472 696e 672e  /include/string.
0000740: 6822 2031 2033 2034 0a23 2032 3720 222f  h" 1 3 4.# 27 "/
0000750: 7573 722f 696e 636c 7564 652f 7374 7269  usr/include/stri
0000760: 6e67 2e68 2220 3320 340a 0a0a 0a0a 0a23  ng.h" 3 4......#
0000770: 2031 2022 2f75 7372 2f6c 6962 2f67 6363   1 "/usr/lib/gcc
0000780: 2f78 3836 5f36 342d 7265 6468 6174 2d6c  /x86_64-redhat-l
0000790: 696e 7578 2f34 2e38 2e33 2f69 6e63 6c75  inux/4.8.3/inclu
00007a0: 6465 2f73 7464 6465 662e 6822 2031 2033  de/stddef.h" 1 3
00007b0: 2034 0a23 2032 3132 2022 2f75 7372 2f6c   4.# 212 "/usr/l
00007c0: 6962 2f67 6363 2f78 3836 5f36 342d 7265  ib/gcc/x86_64-re
00007d0: 6468 6174 2d6c 696e 7578 2f34 2e38 2e33  dhat-linux/4.8.3
00007e0: 2f69 6e63 6c75 6465 2f73 7464 6465 662e  /include/stddef.
00007f0: 6822 2033 2034 0a74 7970 6564 6566 206c  h" 3 4.typedef l
0000800: 6f6e 6720 756e 7369 676e 6564 2069 6e74  ong unsigned int
0000810: 2073 697a 655f 743b 0a23 2033 3320 222f   size_t;.# 33 "/
0000820: 7573 722f 696e 636c 7564 652f 7374 7269  usr/include/stri
0000830: 6e67 2e68 2220 3220 3320 340a 0a0a 0a0a  ng.h" 2 3 4.....
0000840: 0a0a 0a0a 0a65 7874 6572 6e20 766f 6964  .....extern void
0000850: 202a 6d65 6d63 7079 2028 766f 6964 202a   *memcpy (void *
0000860: 5f5f 7265 7374 7269 6374 205f 5f64 6573  __restrict __des
0000870: 742c 2063 6f6e 7374 2076 6f69 6420 2a5f  t, const void *_
0000880: 5f72 6573 7472 6963 7420 5f5f 7372 632c  _restrict __src,
0000890: 0a20 2020 2020 2020 7369 7a65 5f74 205f  .       size_t _
00008a0: 5f6e 2920 5f5f 6174 7472 6962 7574 655f  _n) __attribute_
00008b0: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
00008c0: 2c20 5f5f 6c65 6166 5f5f 2929 205f 5f61  , __leaf__)) __a
00008d0: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
00008e0: 6f6e 6e75 6c6c 5f5f 2028 312c 2032 2929  onnull__ (1, 2))
00008f0: 293b 0a0a 0a65 7874 6572 6e20 766f 6964  );...extern void
0000900: 202a 6d65 6d6d 6f76 6520 2876 6f69 6420   *memmove (void 
0000910: 2a5f 5f64 6573 742c 2063 6f6e 7374 2076  *__dest, const v
0000920: 6f69 6420 2a5f 5f73 7263 2c20 7369 7a65  oid *__src, size
0000930: 5f74 205f 5f6e 290a 2020 2020 205f 5f61  _t __n).     __a
0000940: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
0000950: 6f74 6872 6f77 5f5f 202c 205f 5f6c 6561  othrow__ , __lea
0000960: 665f 5f29 2920 5f5f 6174 7472 6962 7574  f__)) __attribut
0000970: 655f 5f20 2828 5f5f 6e6f 6e6e 756c 6c5f  e__ ((__nonnull_
0000980: 5f20 2831 2c20 3229 2929 3b0a 0a0a 0a0a  _ (1, 2)));.....
0000990: 0a0a 6578 7465 726e 2076 6f69 6420 2a6d  ..extern void *m
00009a0: 656d 6363 7079 2028 766f 6964 202a 5f5f  emccpy (void *__
00009b0: 7265 7374 7269 6374 205f 5f64 6573 742c  restrict __dest,
00009c0: 2063 6f6e 7374 2076 6f69 6420 2a5f 5f72   const void *__r
00009d0: 6573 7472 6963 7420 5f5f 7372 632c 0a20  estrict __src,. 
00009e0: 2020 2020 2020 2069 6e74 205f 5f63 2c20         int __c, 
00009f0: 7369 7a65 5f74 205f 5f6e 290a 2020 2020  size_t __n).    
0000a00: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0000a10: 285f 5f6e 6f74 6872 6f77 5f5f 202c 205f  (__nothrow__ , _
0000a20: 5f6c 6561 665f 5f29 2920 5f5f 6174 7472  _leaf__)) __attr
0000a30: 6962 7574 655f 5f20 2828 5f5f 6e6f 6e6e  ibute__ ((__nonn
0000a40: 756c 6c5f 5f20 2831 2c20 3229 2929 3b0a  ull__ (1, 2)));.
0000a50: 0a0a 0a0a 0a65 7874 6572 6e20 766f 6964  .....extern void
0000a60: 202a 6d65 6d73 6574 2028 766f 6964 202a   *memset (void *
0000a70: 5f5f 732c 2069 6e74 205f 5f63 2c20 7369  __s, int __c, si
0000a80: 7a65 5f74 205f 5f6e 2920 5f5f 6174 7472  ze_t __n) __attr
0000a90: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
0000aa0: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
0000ab0: 2929 205f 5f61 7474 7269 6275 7465 5f5f  )) __attribute__
0000ac0: 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f 2028   ((__nonnull__ (
0000ad0: 3129 2929 3b0a 0a0a 6578 7465 726e 2069  1)));...extern i
0000ae0: 6e74 206d 656d 636d 7020 2863 6f6e 7374  nt memcmp (const
0000af0: 2076 6f69 6420 2a5f 5f73 312c 2063 6f6e   void *__s1, con
0000b00: 7374 2076 6f69 6420 2a5f 5f73 322c 2073  st void *__s2, s
0000b10: 697a 655f 7420 5f5f 6e29 0a20 2020 2020  ize_t __n).     
0000b20: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
0000b30: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
0000b40: 6c65 6166 5f5f 2929 205f 5f61 7474 7269  leaf__)) __attri
0000b50: 6275 7465 5f5f 2028 285f 5f70 7572 655f  bute__ ((__pure_
0000b60: 5f29 2920 5f5f 6174 7472 6962 7574 655f  _)) __attribute_
0000b70: 5f20 2828 5f5f 6e6f 6e6e 756c 6c5f 5f20  _ ((__nonnull__ 
0000b80: 2831 2c20 3229 2929 3b0a 2320 3932 2022  (1, 2)));.# 92 "
0000b90: 2f75 7372 2f69 6e63 6c75 6465 2f73 7472  /usr/include/str
0000ba0: 696e 672e 6822 2033 2034 0a65 7874 6572  ing.h" 3 4.exter
0000bb0: 6e20 766f 6964 202a 6d65 6d63 6872 2028  n void *memchr (
0000bc0: 636f 6e73 7420 766f 6964 202a 5f5f 732c  const void *__s,
0000bd0: 2069 6e74 205f 5f63 2c20 7369 7a65 5f74   int __c, size_t
0000be0: 205f 5f6e 290a 2020 2020 2020 5f5f 6174   __n).      __at
0000bf0: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
0000c00: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
0000c10: 5f5f 2929 205f 5f61 7474 7269 6275 7465  __)) __attribute
0000c20: 5f5f 2028 285f 5f70 7572 655f 5f29 2920  __ ((__pure__)) 
0000c30: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
0000c40: 5f5f 6e6f 6e6e 756c 6c5f 5f20 2831 2929  __nonnull__ (1))
0000c50: 293b 0a0a 0a23 2031 3233 2022 2f75 7372  );...# 123 "/usr
0000c60: 2f69 6e63 6c75 6465 2f73 7472 696e 672e  /include/string.
0000c70: 6822 2033 2034 0a0a 0a65 7874 6572 6e20  h" 3 4...extern 
0000c80: 6368 6172 202a 7374 7263 7079 2028 6368  char *strcpy (ch
0000c90: 6172 202a 5f5f 7265 7374 7269 6374 205f  ar *__restrict _
0000ca0: 5f64 6573 742c 2063 6f6e 7374 2063 6861  _dest, const cha
0000cb0: 7220 2a5f 5f72 6573 7472 6963 7420 5f5f  r *__restrict __
0000cc0: 7372 6329 0a20 2020 2020 5f5f 6174 7472  src).     __attr
0000cd0: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
0000ce0: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
0000cf0: 2929 205f 5f61 7474 7269 6275 7465 5f5f  )) __attribute__
0000d00: 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f 2028   ((__nonnull__ (
0000d10: 312c 2032 2929 293b 0a0a 6578 7465 726e  1, 2)));..extern
0000d20: 2063 6861 7220 2a73 7472 6e63 7079 2028   char *strncpy (
0000d30: 6368 6172 202a 5f5f 7265 7374 7269 6374  char *__restrict
0000d40: 205f 5f64 6573 742c 0a20 2020 2020 2020   __dest,.       
0000d50: 2063 6f6e 7374 2063 6861 7220 2a5f 5f72   const char *__r
0000d60: 6573 7472 6963 7420 5f5f 7372 632c 2073  estrict __src, s
0000d70: 697a 655f 7420 5f5f 6e29 0a20 2020 2020  ize_t __n).     
0000d80: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
0000d90: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
0000da0: 6c65 6166 5f5f 2929 205f 5f61 7474 7269  leaf__)) __attri
0000db0: 6275 7465 5f5f 2028 285f 5f6e 6f6e 6e75  bute__ ((__nonnu
0000dc0: 6c6c 5f5f 2028 312c 2032 2929 293b 0a0a  ll__ (1, 2)));..
0000dd0: 0a65 7874 6572 6e20 6368 6172 202a 7374  .extern char *st
0000de0: 7263 6174 2028 6368 6172 202a 5f5f 7265  rcat (char *__re
0000df0: 7374 7269 6374 205f 5f64 6573 742c 2063  strict __dest, c
0000e00: 6f6e 7374 2063 6861 7220 2a5f 5f72 6573  onst char *__res
0000e10: 7472 6963 7420 5f5f 7372 6329 0a20 2020  trict __src).   
0000e20: 2020 5f5f 6174 7472 6962 7574 655f 5f20    __attribute__ 
0000e30: 2828 5f5f 6e6f 7468 726f 775f 5f20 2c20  ((__nothrow__ , 
0000e40: 5f5f 6c65 6166 5f5f 2929 205f 5f61 7474  __leaf__)) __att
0000e50: 7269 6275 7465 5f5f 2028 285f 5f6e 6f6e  ribute__ ((__non
0000e60: 6e75 6c6c 5f5f 2028 312c 2032 2929 293b  null__ (1, 2)));
0000e70: 0a0a 6578 7465 726e 2063 6861 7220 2a73  ..extern char *s
0000e80: 7472 6e63 6174 2028 6368 6172 202a 5f5f  trncat (char *__
0000e90: 7265 7374 7269 6374 205f 5f64 6573 742c  restrict __dest,
0000ea0: 2063 6f6e 7374 2063 6861 7220 2a5f 5f72   const char *__r
0000eb0: 6573 7472 6963 7420 5f5f 7372 632c 0a20  estrict __src,. 
0000ec0: 2020 2020 2020 2073 697a 655f 7420 5f5f         size_t __
0000ed0: 6e29 205f 5f61 7474 7269 6275 7465 5f5f  n) __attribute__
0000ee0: 2028 285f 5f6e 6f74 6872 6f77 5f5f 202c   ((__nothrow__ ,
0000ef0: 205f 5f6c 6561 665f 5f29 2920 5f5f 6174   __leaf__)) __at
0000f00: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
0000f10: 6e6e 756c 6c5f 5f20 2831 2c20 3229 2929  nnull__ (1, 2)))
0000f20: 3b0a 0a0a 6578 7465 726e 2069 6e74 2073  ;...extern int s
0000f30: 7472 636d 7020 2863 6f6e 7374 2063 6861  trcmp (const cha
0000f40: 7220 2a5f 5f73 312c 2063 6f6e 7374 2063  r *__s1, const c
0000f50: 6861 7220 2a5f 5f73 3229 0a20 2020 2020  har *__s2).     
0000f60: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
0000f70: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
0000f80: 6c65 6166 5f5f 2929 205f 5f61 7474 7269  leaf__)) __attri
0000f90: 6275 7465 5f5f 2028 285f 5f70 7572 655f  bute__ ((__pure_
0000fa0: 5f29 2920 5f5f 6174 7472 6962 7574 655f  _)) __attribute_
0000fb0: 5f20 2828 5f5f 6e6f 6e6e 756c 6c5f 5f20  _ ((__nonnull__ 
0000fc0: 2831 2c20 3229 2929 3b0a 0a65 7874 6572  (1, 2)));..exter
0000fd0: 6e20 696e 7420 7374 726e 636d 7020 2863  n int strncmp (c
0000fe0: 6f6e 7374 2063 6861 7220 2a5f 5f73 312c  onst char *__s1,
0000ff0: 2063 6f6e 7374 2063 6861 7220 2a5f 5f73   const char *__s
0001000: 322c 2073 697a 655f 7420 5f5f 6e29 0a20  2, size_t __n). 
0001010: 2020 2020 5f5f 6174 7472 6962 7574 655f      __attribute_
0001020: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
0001030: 2c20 5f5f 6c65 6166 5f5f 2929 205f 5f61  , __leaf__)) __a
0001040: 7474 7269 6275 7465 5f5f 2028 285f 5f70  ttribute__ ((__p
0001050: 7572 655f 5f29 2920 5f5f 6174 7472 6962  ure__)) __attrib
0001060: 7574 655f 5f20 2828 5f5f 6e6f 6e6e 756c  ute__ ((__nonnul
0001070: 6c5f 5f20 2831 2c20 3229 2929 3b0a 0a0a  l__ (1, 2)));...
0001080: 6578 7465 726e 2069 6e74 2073 7472 636f  extern int strco
0001090: 6c6c 2028 636f 6e73 7420 6368 6172 202a  ll (const char *
00010a0: 5f5f 7331 2c20 636f 6e73 7420 6368 6172  __s1, const char
00010b0: 202a 5f5f 7332 290a 2020 2020 205f 5f61   *__s2).     __a
00010c0: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
00010d0: 6f74 6872 6f77 5f5f 202c 205f 5f6c 6561  othrow__ , __lea
00010e0: 665f 5f29 2920 5f5f 6174 7472 6962 7574  f__)) __attribut
00010f0: 655f 5f20 2828 5f5f 7075 7265 5f5f 2929  e__ ((__pure__))
0001100: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0001110: 285f 5f6e 6f6e 6e75 6c6c 5f5f 2028 312c  (__nonnull__ (1,
0001120: 2032 2929 293b 0a0a 6578 7465 726e 2073   2)));..extern s
0001130: 697a 655f 7420 7374 7278 6672 6d20 2863  ize_t strxfrm (c
0001140: 6861 7220 2a5f 5f72 6573 7472 6963 7420  har *__restrict 
0001150: 5f5f 6465 7374 2c0a 2020 2020 2020 2020  __dest,.        
0001160: 2063 6f6e 7374 2063 6861 7220 2a5f 5f72   const char *__r
0001170: 6573 7472 6963 7420 5f5f 7372 632c 2073  estrict __src, s
0001180: 697a 655f 7420 5f5f 6e29 0a20 2020 2020  ize_t __n).     
0001190: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
00011a0: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
00011b0: 6c65 6166 5f5f 2929 205f 5f61 7474 7269  leaf__)) __attri
00011c0: 6275 7465 5f5f 2028 285f 5f6e 6f6e 6e75  bute__ ((__nonnu
00011d0: 6c6c 5f5f 2028 3229 2929 3b0a 0a0a 0a0a  ll__ (2)));.....
00011e0: 0a0a 2320 3120 222f 7573 722f 696e 636c  ..# 1 "/usr/incl
00011f0: 7564 652f 786c 6f63 616c 652e 6822 2031  ude/xlocale.h" 1
0001200: 2033 2034 0a23 2032 3720 222f 7573 722f   3 4.# 27 "/usr/
0001210: 696e 636c 7564 652f 786c 6f63 616c 652e  include/xlocale.
0001220: 6822 2033 2034 0a74 7970 6564 6566 2073  h" 3 4.typedef s
0001230: 7472 7563 7420 5f5f 6c6f 6361 6c65 5f73  truct __locale_s
0001240: 7472 7563 740a 7b0a 0a20 2073 7472 7563  truct.{..  struc
0001250: 7420 5f5f 6c6f 6361 6c65 5f64 6174 6120  t __locale_data 
0001260: 2a5f 5f6c 6f63 616c 6573 5b31 335d 3b0a  *__locales[13];.
0001270: 0a0a 2020 636f 6e73 7420 756e 7369 676e  ..  const unsign
0001280: 6564 2073 686f 7274 2069 6e74 202a 5f5f  ed short int *__
0001290: 6374 7970 655f 623b 0a20 2063 6f6e 7374  ctype_b;.  const
00012a0: 2069 6e74 202a 5f5f 6374 7970 655f 746f   int *__ctype_to
00012b0: 6c6f 7765 723b 0a20 2063 6f6e 7374 2069  lower;.  const i
00012c0: 6e74 202a 5f5f 6374 7970 655f 746f 7570  nt *__ctype_toup
00012d0: 7065 723b 0a0a 0a20 2063 6f6e 7374 2063  per;...  const c
00012e0: 6861 7220 2a5f 5f6e 616d 6573 5b31 335d  har *__names[13]
00012f0: 3b0a 7d20 2a5f 5f6c 6f63 616c 655f 743b  ;.} *__locale_t;
0001300: 0a0a 0a74 7970 6564 6566 205f 5f6c 6f63  ...typedef __loc
0001310: 616c 655f 7420 6c6f 6361 6c65 5f74 3b0a  ale_t locale_t;.
0001320: 2320 3136 3020 222f 7573 722f 696e 636c  # 160 "/usr/incl
0001330: 7564 652f 7374 7269 6e67 2e68 2220 3220  ude/string.h" 2 
0001340: 3320 340a 0a0a 6578 7465 726e 2069 6e74  3 4...extern int
0001350: 2073 7472 636f 6c6c 5f6c 2028 636f 6e73   strcoll_l (cons
0001360: 7420 6368 6172 202a 5f5f 7331 2c20 636f  t char *__s1, co
0001370: 6e73 7420 6368 6172 202a 5f5f 7332 2c20  nst char *__s2, 
0001380: 5f5f 6c6f 6361 6c65 5f74 205f 5f6c 290a  __locale_t __l).
0001390: 2020 2020 205f 5f61 7474 7269 6275 7465       __attribute
00013a0: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
00013b0: 202c 205f 5f6c 6561 665f 5f29 2920 5f5f   , __leaf__)) __
00013c0: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
00013d0: 7075 7265 5f5f 2929 205f 5f61 7474 7269  pure__)) __attri
00013e0: 6275 7465 5f5f 2028 285f 5f6e 6f6e 6e75  bute__ ((__nonnu
00013f0: 6c6c 5f5f 2028 312c 2032 2c20 3329 2929  ll__ (1, 2, 3)))
0001400: 3b0a 0a65 7874 6572 6e20 7369 7a65 5f74  ;..extern size_t
0001410: 2073 7472 7866 726d 5f6c 2028 6368 6172   strxfrm_l (char
0001420: 202a 5f5f 6465 7374 2c20 636f 6e73 7420   *__dest, const 
0001430: 6368 6172 202a 5f5f 7372 632c 2073 697a  char *__src, siz
0001440: 655f 7420 5f5f 6e2c 0a20 2020 205f 5f6c  e_t __n,.    __l
0001450: 6f63 616c 655f 7420 5f5f 6c29 205f 5f61  ocale_t __l) __a
0001460: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
0001470: 6f74 6872 6f77 5f5f 202c 205f 5f6c 6561  othrow__ , __lea
0001480: 665f 5f29 2920 5f5f 6174 7472 6962 7574  f__)) __attribut
0001490: 655f 5f20 2828 5f5f 6e6f 6e6e 756c 6c5f  e__ ((__nonnull_
00014a0: 5f20 2832 2c20 3429 2929 3b0a 0a0a 0a0a  _ (2, 4)));.....
00014b0: 0a65 7874 6572 6e20 6368 6172 202a 7374  .extern char *st
00014c0: 7264 7570 2028 636f 6e73 7420 6368 6172  rdup (const char
00014d0: 202a 5f5f 7329 0a20 2020 2020 5f5f 6174   *__s).     __at
00014e0: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
00014f0: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
0001500: 5f5f 2929 205f 5f61 7474 7269 6275 7465  __)) __attribute
0001510: 5f5f 2028 285f 5f6d 616c 6c6f 635f 5f29  __ ((__malloc__)
0001520: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
0001530: 2828 5f5f 6e6f 6e6e 756c 6c5f 5f20 2831  ((__nonnull__ (1
0001540: 2929 293b 0a0a 0a0a 0a0a 0a65 7874 6572  )));.......exter
0001550: 6e20 6368 6172 202a 7374 726e 6475 7020  n char *strndup 
0001560: 2863 6f6e 7374 2063 6861 7220 2a5f 5f73  (const char *__s
0001570: 7472 696e 672c 2073 697a 655f 7420 5f5f  tring, size_t __
0001580: 6e29 0a20 2020 2020 5f5f 6174 7472 6962  n).     __attrib
0001590: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
00015a0: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
00015b0: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
00015c0: 285f 5f6d 616c 6c6f 635f 5f29 2920 5f5f  (__malloc__)) __
00015d0: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
00015e0: 6e6f 6e6e 756c 6c5f 5f20 2831 2929 293b  nonnull__ (1)));
00015f0: 0a23 2032 3037 2022 2f75 7372 2f69 6e63  .# 207 "/usr/inc
0001600: 6c75 6465 2f73 7472 696e 672e 6822 2033  lude/string.h" 3
0001610: 2034 0a0a 2320 3233 3220 222f 7573 722f   4..# 232 "/usr/
0001620: 696e 636c 7564 652f 7374 7269 6e67 2e68  include/string.h
0001630: 2220 3320 340a 6578 7465 726e 2063 6861  " 3 4.extern cha
0001640: 7220 2a73 7472 6368 7220 2863 6f6e 7374  r *strchr (const
0001650: 2063 6861 7220 2a5f 5f73 2c20 696e 7420   char *__s, int 
0001660: 5f5f 6329 0a20 2020 2020 5f5f 6174 7472  __c).     __attr
0001670: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
0001680: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
0001690: 2929 205f 5f61 7474 7269 6275 7465 5f5f  )) __attribute__
00016a0: 2028 285f 5f70 7572 655f 5f29 2920 5f5f   ((__pure__)) __
00016b0: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
00016c0: 6e6f 6e6e 756c 6c5f 5f20 2831 2929 293b  nonnull__ (1)));
00016d0: 0a23 2032 3539 2022 2f75 7372 2f69 6e63  .# 259 "/usr/inc
00016e0: 6c75 6465 2f73 7472 696e 672e 6822 2033  lude/string.h" 3
00016f0: 2034 0a65 7874 6572 6e20 6368 6172 202a   4.extern char *
0001700: 7374 7272 6368 7220 2863 6f6e 7374 2063  strrchr (const c
0001710: 6861 7220 2a5f 5f73 2c20 696e 7420 5f5f  har *__s, int __
0001720: 6329 0a20 2020 2020 5f5f 6174 7472 6962  c).     __attrib
0001730: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
0001740: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
0001750: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0001760: 285f 5f70 7572 655f 5f29 2920 5f5f 6174  (__pure__)) __at
0001770: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
0001780: 6e6e 756c 6c5f 5f20 2831 2929 293b 0a0a  nnull__ (1)));..
0001790: 0a23 2032 3738 2022 2f75 7372 2f69 6e63  .# 278 "/usr/inc
00017a0: 6c75 6465 2f73 7472 696e 672e 6822 2033  lude/string.h" 3
00017b0: 2034 0a0a 0a0a 6578 7465 726e 2073 697a   4....extern siz
00017c0: 655f 7420 7374 7263 7370 6e20 2863 6f6e  e_t strcspn (con
00017d0: 7374 2063 6861 7220 2a5f 5f73 2c20 636f  st char *__s, co
00017e0: 6e73 7420 6368 6172 202a 5f5f 7265 6a65  nst char *__reje
00017f0: 6374 290a 2020 2020 205f 5f61 7474 7269  ct).     __attri
0001800: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
0001810: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
0001820: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
0001830: 2828 5f5f 7075 7265 5f5f 2929 205f 5f61  ((__pure__)) __a
0001840: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
0001850: 6f6e 6e75 6c6c 5f5f 2028 312c 2032 2929  onnull__ (1, 2))
0001860: 293b 0a0a 0a65 7874 6572 6e20 7369 7a65  );...extern size
0001870: 5f74 2073 7472 7370 6e20 2863 6f6e 7374  _t strspn (const
0001880: 2063 6861 7220 2a5f 5f73 2c20 636f 6e73   char *__s, cons
0001890: 7420 6368 6172 202a 5f5f 6163 6365 7074  t char *__accept
00018a0: 290a 2020 2020 205f 5f61 7474 7269 6275  ).     __attribu
00018b0: 7465 5f5f 2028 285f 5f6e 6f74 6872 6f77  te__ ((__nothrow
00018c0: 5f5f 202c 205f 5f6c 6561 665f 5f29 2920  __ , __leaf__)) 
00018d0: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
00018e0: 5f5f 7075 7265 5f5f 2929 205f 5f61 7474  __pure__)) __att
00018f0: 7269 6275 7465 5f5f 2028 285f 5f6e 6f6e  ribute__ ((__non
0001900: 6e75 6c6c 5f5f 2028 312c 2032 2929 293b  null__ (1, 2)));
0001910: 0a23 2033 3131 2022 2f75 7372 2f69 6e63  .# 311 "/usr/inc
0001920: 6c75 6465 2f73 7472 696e 672e 6822 2033  lude/string.h" 3
0001930: 2034 0a65 7874 6572 6e20 6368 6172 202a   4.extern char *
0001940: 7374 7270 6272 6b20 2863 6f6e 7374 2063  strpbrk (const c
0001950: 6861 7220 2a5f 5f73 2c20 636f 6e73 7420  har *__s, const 
0001960: 6368 6172 202a 5f5f 6163 6365 7074 290a  char *__accept).
0001970: 2020 2020 205f 5f61 7474 7269 6275 7465       __attribute
0001980: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
0001990: 202c 205f 5f6c 6561 665f 5f29 2920 5f5f   , __leaf__)) __
00019a0: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
00019b0: 7075 7265 5f5f 2929 205f 5f61 7474 7269  pure__)) __attri
00019c0: 6275 7465 5f5f 2028 285f 5f6e 6f6e 6e75  bute__ ((__nonnu
00019d0: 6c6c 5f5f 2028 312c 2032 2929 293b 0a23  ll__ (1, 2)));.#
00019e0: 2033 3338 2022 2f75 7372 2f69 6e63 6c75   338 "/usr/inclu
00019f0: 6465 2f73 7472 696e 672e 6822 2033 2034  de/string.h" 3 4
0001a00: 0a65 7874 6572 6e20 6368 6172 202a 7374  .extern char *st
0001a10: 7273 7472 2028 636f 6e73 7420 6368 6172  rstr (const char
0001a20: 202a 5f5f 6861 7973 7461 636b 2c20 636f   *__haystack, co
0001a30: 6e73 7420 6368 6172 202a 5f5f 6e65 6564  nst char *__need
0001a40: 6c65 290a 2020 2020 205f 5f61 7474 7269  le).     __attri
0001a50: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
0001a60: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
0001a70: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
0001a80: 2828 5f5f 7075 7265 5f5f 2929 205f 5f61  ((__pure__)) __a
0001a90: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
0001aa0: 6f6e 6e75 6c6c 5f5f 2028 312c 2032 2929  onnull__ (1, 2))
0001ab0: 293b 0a0a 0a0a 0a65 7874 6572 6e20 6368  );.....extern ch
0001ac0: 6172 202a 7374 7274 6f6b 2028 6368 6172  ar *strtok (char
0001ad0: 202a 5f5f 7265 7374 7269 6374 205f 5f73   *__restrict __s
0001ae0: 2c20 636f 6e73 7420 6368 6172 202a 5f5f  , const char *__
0001af0: 7265 7374 7269 6374 205f 5f64 656c 696d  restrict __delim
0001b00: 290a 2020 2020 205f 5f61 7474 7269 6275  ).     __attribu
0001b10: 7465 5f5f 2028 285f 5f6e 6f74 6872 6f77  te__ ((__nothrow
0001b20: 5f5f 202c 205f 5f6c 6561 665f 5f29 2920  __ , __leaf__)) 
0001b30: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
0001b40: 5f5f 6e6f 6e6e 756c 6c5f 5f20 2832 2929  __nonnull__ (2))
0001b50: 293b 0a0a 0a0a 0a65 7874 6572 6e20 6368  );.....extern ch
0001b60: 6172 202a 5f5f 7374 7274 6f6b 5f72 2028  ar *__strtok_r (
0001b70: 6368 6172 202a 5f5f 7265 7374 7269 6374  char *__restrict
0001b80: 205f 5f73 2c0a 2020 2020 636f 6e73 7420   __s,.    const 
0001b90: 6368 6172 202a 5f5f 7265 7374 7269 6374  char *__restrict
0001ba0: 205f 5f64 656c 696d 2c0a 2020 2020 6368   __delim,.    ch
0001bb0: 6172 202a 2a5f 5f72 6573 7472 6963 7420  ar **__restrict 
0001bc0: 5f5f 7361 7665 5f70 7472 290a 2020 2020  __save_ptr).    
0001bd0: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0001be0: 285f 5f6e 6f74 6872 6f77 5f5f 202c 205f  (__nothrow__ , _
0001bf0: 5f6c 6561 665f 5f29 2920 5f5f 6174 7472  _leaf__)) __attr
0001c00: 6962 7574 655f 5f20 2828 5f5f 6e6f 6e6e  ibute__ ((__nonn
0001c10: 756c 6c5f 5f20 2832 2c20 3329 2929 3b0a  ull__ (2, 3)));.
0001c20: 0a65 7874 6572 6e20 6368 6172 202a 7374  .extern char *st
0001c30: 7274 6f6b 5f72 2028 6368 6172 202a 5f5f  rtok_r (char *__
0001c40: 7265 7374 7269 6374 205f 5f73 2c20 636f  restrict __s, co
0001c50: 6e73 7420 6368 6172 202a 5f5f 7265 7374  nst char *__rest
0001c60: 7269 6374 205f 5f64 656c 696d 2c0a 2020  rict __delim,.  
0001c70: 2020 2020 2020 2063 6861 7220 2a2a 5f5f         char **__
0001c80: 7265 7374 7269 6374 205f 5f73 6176 655f  restrict __save_
0001c90: 7074 7229 0a20 2020 2020 5f5f 6174 7472  ptr).     __attr
0001ca0: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
0001cb0: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
0001cc0: 2929 205f 5f61 7474 7269 6275 7465 5f5f  )) __attribute__
0001cd0: 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f 2028   ((__nonnull__ (
0001ce0: 322c 2033 2929 293b 0a23 2033 3933 2022  2, 3)));.# 393 "
0001cf0: 2f75 7372 2f69 6e63 6c75 6465 2f73 7472  /usr/include/str
0001d00: 696e 672e 6822 2033 2034 0a0a 0a65 7874  ing.h" 3 4...ext
0001d10: 6572 6e20 7369 7a65 5f74 2073 7472 6c65  ern size_t strle
0001d20: 6e20 2863 6f6e 7374 2063 6861 7220 2a5f  n (const char *_
0001d30: 5f73 290a 2020 2020 205f 5f61 7474 7269  _s).     __attri
0001d40: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
0001d50: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
0001d60: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
0001d70: 2828 5f5f 7075 7265 5f5f 2929 205f 5f61  ((__pure__)) __a
0001d80: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
0001d90: 6f6e 6e75 6c6c 5f5f 2028 3129 2929 3b0a  onnull__ (1)));.
0001da0: 0a0a 0a0a 0a65 7874 6572 6e20 7369 7a65  .....extern size
0001db0: 5f74 2073 7472 6e6c 656e 2028 636f 6e73  _t strnlen (cons
0001dc0: 7420 6368 6172 202a 5f5f 7374 7269 6e67  t char *__string
0001dd0: 2c20 7369 7a65 5f74 205f 5f6d 6178 6c65  , size_t __maxle
0001de0: 6e29 0a20 2020 2020 5f5f 6174 7472 6962  n).     __attrib
0001df0: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
0001e00: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
0001e10: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0001e20: 285f 5f70 7572 655f 5f29 2920 5f5f 6174  (__pure__)) __at
0001e30: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
0001e40: 6e6e 756c 6c5f 5f20 2831 2929 293b 0a0a  nnull__ (1)));..
0001e50: 0a0a 0a0a 6578 7465 726e 2063 6861 7220  ....extern char 
0001e60: 2a73 7472 6572 726f 7220 2869 6e74 205f  *strerror (int _
0001e70: 5f65 7272 6e75 6d29 205f 5f61 7474 7269  _errnum) __attri
0001e80: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
0001e90: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
0001ea0: 293b 0a0a 2320 3432 3320 222f 7573 722f  );..# 423 "/usr/
0001eb0: 696e 636c 7564 652f 7374 7269 6e67 2e68  include/string.h
0001ec0: 2220 3320 340a 6578 7465 726e 2069 6e74  " 3 4.extern int
0001ed0: 2073 7472 6572 726f 725f 7220 2869 6e74   strerror_r (int
0001ee0: 205f 5f65 7272 6e75 6d2c 2063 6861 7220   __errnum, char 
0001ef0: 2a5f 5f62 7566 2c20 7369 7a65 5f74 205f  *__buf, size_t _
0001f00: 5f62 7566 6c65 6e29 205f 5f61 736d 5f5f  _buflen) __asm__
0001f10: 2028 2222 2022 5f5f 7870 675f 7374 7265   ("" "__xpg_stre
0001f20: 7272 6f72 5f72 2229 205f 5f61 7474 7269  rror_r") __attri
0001f30: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
0001f40: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
0001f50: 290a 0a20 2020 2020 2020 2020 2020 2020  )..             
0001f60: 2020 2020 2020 2020 2020 205f 5f61 7474             __att
0001f70: 7269 6275 7465 5f5f 2028 285f 5f6e 6f6e  ribute__ ((__non
0001f80: 6e75 6c6c 5f5f 2028 3229 2929 3b0a 2320  null__ (2)));.# 
0001f90: 3434 3120 222f 7573 722f 696e 636c 7564  441 "/usr/includ
0001fa0: 652f 7374 7269 6e67 2e68 2220 3320 340a  e/string.h" 3 4.
0001fb0: 6578 7465 726e 2063 6861 7220 2a73 7472  extern char *str
0001fc0: 6572 726f 725f 6c20 2869 6e74 205f 5f65  error_l (int __e
0001fd0: 7272 6e75 6d2c 205f 5f6c 6f63 616c 655f  rrnum, __locale_
0001fe0: 7420 5f5f 6c29 205f 5f61 7474 7269 6275  t __l) __attribu
0001ff0: 7465 5f5f 2028 285f 5f6e 6f74 6872 6f77  te__ ((__nothrow
0002000: 5f5f 202c 205f 5f6c 6561 665f 5f29 293b  __ , __leaf__));
0002010: 0a0a 0a0a 0a0a 6578 7465 726e 2076 6f69  ......extern voi
0002020: 6420 5f5f 627a 6572 6f20 2876 6f69 6420  d __bzero (void 
0002030: 2a5f 5f73 2c20 7369 7a65 5f74 205f 5f6e  *__s, size_t __n
0002040: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
0002050: 2828 5f5f 6e6f 7468 726f 775f 5f20 2c20  ((__nothrow__ , 
0002060: 5f5f 6c65 6166 5f5f 2929 205f 5f61 7474  __leaf__)) __att
0002070: 7269 6275 7465 5f5f 2028 285f 5f6e 6f6e  ribute__ ((__non
0002080: 6e75 6c6c 5f5f 2028 3129 2929 3b0a 0a0a  null__ (1)));...
0002090: 0a65 7874 6572 6e20 766f 6964 2062 636f  .extern void bco
00020a0: 7079 2028 636f 6e73 7420 766f 6964 202a  py (const void *
00020b0: 5f5f 7372 632c 2076 6f69 6420 2a5f 5f64  __src, void *__d
00020c0: 6573 742c 2073 697a 655f 7420 5f5f 6e29  est, size_t __n)
00020d0: 0a20 2020 2020 5f5f 6174 7472 6962 7574  .     __attribut
00020e0: 655f 5f20 2828 5f5f 6e6f 7468 726f 775f  e__ ((__nothrow_
00020f0: 5f20 2c20 5f5f 6c65 6166 5f5f 2929 205f  _ , __leaf__)) _
0002100: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
0002110: 5f6e 6f6e 6e75 6c6c 5f5f 2028 312c 2032  _nonnull__ (1, 2
0002120: 2929 293b 0a0a 0a65 7874 6572 6e20 766f  )));...extern vo
0002130: 6964 2062 7a65 726f 2028 766f 6964 202a  id bzero (void *
0002140: 5f5f 732c 2073 697a 655f 7420 5f5f 6e29  __s, size_t __n)
0002150: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0002160: 285f 5f6e 6f74 6872 6f77 5f5f 202c 205f  (__nothrow__ , _
0002170: 5f6c 6561 665f 5f29 2920 5f5f 6174 7472  _leaf__)) __attr
0002180: 6962 7574 655f 5f20 2828 5f5f 6e6f 6e6e  ibute__ ((__nonn
0002190: 756c 6c5f 5f20 2831 2929 293b 0a0a 0a65  ull__ (1)));...e
00021a0: 7874 6572 6e20 696e 7420 6263 6d70 2028  xtern int bcmp (
00021b0: 636f 6e73 7420 766f 6964 202a 5f5f 7331  const void *__s1
00021c0: 2c20 636f 6e73 7420 766f 6964 202a 5f5f  , const void *__
00021d0: 7332 2c20 7369 7a65 5f74 205f 5f6e 290a  s2, size_t __n).
00021e0: 2020 2020 205f 5f61 7474 7269 6275 7465       __attribute
00021f0: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
0002200: 202c 205f 5f6c 6561 665f 5f29 2920 5f5f   , __leaf__)) __
0002210: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
0002220: 7075 7265 5f5f 2929 205f 5f61 7474 7269  pure__)) __attri
0002230: 6275 7465 5f5f 2028 285f 5f6e 6f6e 6e75  bute__ ((__nonnu
0002240: 6c6c 5f5f 2028 312c 2032 2929 293b 0a23  ll__ (1, 2)));.#
0002250: 2034 3835 2022 2f75 7372 2f69 6e63 6c75   485 "/usr/inclu
0002260: 6465 2f73 7472 696e 672e 6822 2033 2034  de/string.h" 3 4
0002270: 0a65 7874 6572 6e20 6368 6172 202a 696e  .extern char *in
0002280: 6465 7820 2863 6f6e 7374 2063 6861 7220  dex (const char 
0002290: 2a5f 5f73 2c20 696e 7420 5f5f 6329 0a20  *__s, int __c). 
00022a0: 2020 2020 5f5f 6174 7472 6962 7574 655f      __attribute_
00022b0: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
00022c0: 2c20 5f5f 6c65 6166 5f5f 2929 205f 5f61  , __leaf__)) __a
00022d0: 7474 7269 6275 7465 5f5f 2028 285f 5f70  ttribute__ ((__p
00022e0: 7572 655f 5f29 2920 5f5f 6174 7472 6962  ure__)) __attrib
00022f0: 7574 655f 5f20 2828 5f5f 6e6f 6e6e 756c  ute__ ((__nonnul
0002300: 6c5f 5f20 2831 2929 293b 0a23 2035 3133  l__ (1)));.# 513
0002310: 2022 2f75 7372 2f69 6e63 6c75 6465 2f73   "/usr/include/s
0002320: 7472 696e 672e 6822 2033 2034 0a65 7874  tring.h" 3 4.ext
0002330: 6572 6e20 6368 6172 202a 7269 6e64 6578  ern char *rindex
0002340: 2028 636f 6e73 7420 6368 6172 202a 5f5f   (const char *__
0002350: 732c 2069 6e74 205f 5f63 290a 2020 2020  s, int __c).    
0002360: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0002370: 285f 5f6e 6f74 6872 6f77 5f5f 202c 205f  (__nothrow__ , _
0002380: 5f6c 6561 665f 5f29 2920 5f5f 6174 7472  _leaf__)) __attr
0002390: 6962 7574 655f 5f20 2828 5f5f 7075 7265  ibute__ ((__pure
00023a0: 5f5f 2929 205f 5f61 7474 7269 6275 7465  __)) __attribute
00023b0: 5f5f 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f  __ ((__nonnull__
00023c0: 2028 3129 2929 3b0a 0a0a 0a0a 6578 7465   (1)));.....exte
00023d0: 726e 2069 6e74 2066 6673 2028 696e 7420  rn int ffs (int 
00023e0: 5f5f 6929 205f 5f61 7474 7269 6275 7465  __i) __attribute
00023f0: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
0002400: 202c 205f 5f6c 6561 665f 5f29 2920 5f5f   , __leaf__)) __
0002410: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
0002420: 636f 6e73 745f 5f29 293b 0a23 2035 3332  const__));.# 532
0002430: 2022 2f75 7372 2f69 6e63 6c75 6465 2f73   "/usr/include/s
0002440: 7472 696e 672e 6822 2033 2034 0a65 7874  tring.h" 3 4.ext
0002450: 6572 6e20 696e 7420 7374 7263 6173 6563  ern int strcasec
0002460: 6d70 2028 636f 6e73 7420 6368 6172 202a  mp (const char *
0002470: 5f5f 7331 2c20 636f 6e73 7420 6368 6172  __s1, const char
0002480: 202a 5f5f 7332 290a 2020 2020 205f 5f61   *__s2).     __a
0002490: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
00024a0: 6f74 6872 6f77 5f5f 202c 205f 5f6c 6561  othrow__ , __lea
00024b0: 665f 5f29 2920 5f5f 6174 7472 6962 7574  f__)) __attribut
00024c0: 655f 5f20 2828 5f5f 7075 7265 5f5f 2929  e__ ((__pure__))
00024d0: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
00024e0: 285f 5f6e 6f6e 6e75 6c6c 5f5f 2028 312c  (__nonnull__ (1,
00024f0: 2032 2929 293b 0a0a 0a65 7874 6572 6e20   2)));...extern 
0002500: 696e 7420 7374 726e 6361 7365 636d 7020  int strncasecmp 
0002510: 2863 6f6e 7374 2063 6861 7220 2a5f 5f73  (const char *__s
0002520: 312c 2063 6f6e 7374 2063 6861 7220 2a5f  1, const char *_
0002530: 5f73 322c 2073 697a 655f 7420 5f5f 6e29  _s2, size_t __n)
0002540: 0a20 2020 2020 5f5f 6174 7472 6962 7574  .     __attribut
0002550: 655f 5f20 2828 5f5f 6e6f 7468 726f 775f  e__ ((__nothrow_
0002560: 5f20 2c20 5f5f 6c65 6166 5f5f 2929 205f  _ , __leaf__)) _
0002570: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
0002580: 5f70 7572 655f 5f29 2920 5f5f 6174 7472  _pure__)) __attr
0002590: 6962 7574 655f 5f20 2828 5f5f 6e6f 6e6e  ibute__ ((__nonn
00025a0: 756c 6c5f 5f20 2831 2c20 3229 2929 3b0a  ull__ (1, 2)));.
00025b0: 2320 3535 3520 222f 7573 722f 696e 636c  # 555 "/usr/incl
00025c0: 7564 652f 7374 7269 6e67 2e68 2220 3320  ude/string.h" 3 
00025d0: 340a 6578 7465 726e 2063 6861 7220 2a73  4.extern char *s
00025e0: 7472 7365 7020 2863 6861 7220 2a2a 5f5f  trsep (char **__
00025f0: 7265 7374 7269 6374 205f 5f73 7472 696e  restrict __strin
0002600: 6770 2c0a 2020 2020 2020 2063 6f6e 7374  gp,.       const
0002610: 2063 6861 7220 2a5f 5f72 6573 7472 6963   char *__restric
0002620: 7420 5f5f 6465 6c69 6d29 0a20 2020 2020  t __delim).     
0002630: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
0002640: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
0002650: 6c65 6166 5f5f 2929 205f 5f61 7474 7269  leaf__)) __attri
0002660: 6275 7465 5f5f 2028 285f 5f6e 6f6e 6e75  bute__ ((__nonnu
0002670: 6c6c 5f5f 2028 312c 2032 2929 293b 0a0a  ll__ (1, 2)));..
0002680: 0a0a 0a65 7874 6572 6e20 6368 6172 202a  ...extern char *
0002690: 7374 7273 6967 6e61 6c20 2869 6e74 205f  strsignal (int _
00026a0: 5f73 6967 2920 5f5f 6174 7472 6962 7574  _sig) __attribut
00026b0: 655f 5f20 2828 5f5f 6e6f 7468 726f 775f  e__ ((__nothrow_
00026c0: 5f20 2c20 5f5f 6c65 6166 5f5f 2929 3b0a  _ , __leaf__));.
00026d0: 0a0a 6578 7465 726e 2063 6861 7220 2a5f  ..extern char *_
00026e0: 5f73 7470 6370 7920 2863 6861 7220 2a5f  _stpcpy (char *_
00026f0: 5f72 6573 7472 6963 7420 5f5f 6465 7374  _restrict __dest
0002700: 2c20 636f 6e73 7420 6368 6172 202a 5f5f  , const char *__
0002710: 7265 7374 7269 6374 205f 5f73 7263 290a  restrict __src).
0002720: 2020 2020 205f 5f61 7474 7269 6275 7465       __attribute
0002730: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
0002740: 202c 205f 5f6c 6561 665f 5f29 2920 5f5f   , __leaf__)) __
0002750: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
0002760: 6e6f 6e6e 756c 6c5f 5f20 2831 2c20 3229  nonnull__ (1, 2)
0002770: 2929 3b0a 6578 7465 726e 2063 6861 7220  ));.extern char 
0002780: 2a73 7470 6370 7920 2863 6861 7220 2a5f  *stpcpy (char *_
0002790: 5f72 6573 7472 6963 7420 5f5f 6465 7374  _restrict __dest
00027a0: 2c20 636f 6e73 7420 6368 6172 202a 5f5f  , const char *__
00027b0: 7265 7374 7269 6374 205f 5f73 7263 290a  restrict __src).
00027c0: 2020 2020 205f 5f61 7474 7269 6275 7465       __attribute
00027d0: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
00027e0: 202c 205f 5f6c 6561 665f 5f29 2920 5f5f   , __leaf__)) __
00027f0: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
0002800: 6e6f 6e6e 756c 6c5f 5f20 2831 2c20 3229  nonnull__ (1, 2)
0002810: 2929 3b0a 0a0a 0a65 7874 6572 6e20 6368  ));....extern ch
0002820: 6172 202a 5f5f 7374 706e 6370 7920 2863  ar *__stpncpy (c
0002830: 6861 7220 2a5f 5f72 6573 7472 6963 7420  har *__restrict 
0002840: 5f5f 6465 7374 2c0a 2020 2063 6f6e 7374  __dest,.   const
0002850: 2063 6861 7220 2a5f 5f72 6573 7472 6963   char *__restric
0002860: 7420 5f5f 7372 632c 2073 697a 655f 7420  t __src, size_t 
0002870: 5f5f 6e29 0a20 2020 2020 5f5f 6174 7472  __n).     __attr
0002880: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
0002890: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
00028a0: 2929 205f 5f61 7474 7269 6275 7465 5f5f  )) __attribute__
00028b0: 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f 2028   ((__nonnull__ (
00028c0: 312c 2032 2929 293b 0a65 7874 6572 6e20  1, 2)));.extern 
00028d0: 6368 6172 202a 7374 706e 6370 7920 2863  char *stpncpy (c
00028e0: 6861 7220 2a5f 5f72 6573 7472 6963 7420  har *__restrict 
00028f0: 5f5f 6465 7374 2c0a 2020 2020 2020 2020  __dest,.        
0002900: 636f 6e73 7420 6368 6172 202a 5f5f 7265  const char *__re
0002910: 7374 7269 6374 205f 5f73 7263 2c20 7369  strict __src, si
0002920: 7a65 5f74 205f 5f6e 290a 2020 2020 205f  ze_t __n).     _
0002930: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
0002940: 5f6e 6f74 6872 6f77 5f5f 202c 205f 5f6c  _nothrow__ , __l
0002950: 6561 665f 5f29 2920 5f5f 6174 7472 6962  eaf__)) __attrib
0002960: 7574 655f 5f20 2828 5f5f 6e6f 6e6e 756c  ute__ ((__nonnul
0002970: 6c5f 5f20 2831 2c20 3229 2929 3b0a 2320  l__ (1, 2)));.# 
0002980: 3634 3220 222f 7573 722f 696e 636c 7564  642 "/usr/includ
0002990: 652f 7374 7269 6e67 2e68 2220 3320 340a  e/string.h" 3 4.
00029a0: 0a23 2031 3231 2022 6431 5f62 6f74 682e  .# 121 "d1_both.
00029b0: 6322 2032 0a23 2031 2022 2f75 7372 2f69  c" 2.# 1 "/usr/i
00029c0: 6e63 6c75 6465 2f73 7464 696f 2e68 2220  nclude/stdio.h" 
00029d0: 3120 3320 340a 2320 3239 2022 2f75 7372  1 3 4.# 29 "/usr
00029e0: 2f69 6e63 6c75 6465 2f73 7464 696f 2e68  /include/stdio.h
00029f0: 2220 3320 340a 0a0a 0a0a 2320 3120 222f  " 3 4.....# 1 "/
0002a00: 7573 722f 6c69 622f 6763 632f 7838 365f  usr/lib/gcc/x86_
0002a10: 3634 2d72 6564 6861 742d 6c69 6e75 782f  64-redhat-linux/
0002a20: 342e 382e 332f 696e 636c 7564 652f 7374  4.8.3/include/st
0002a30: 6464 6566 2e68 2220 3120 3320 340a 2320  ddef.h" 1 3 4.# 
0002a40: 3334 2022 2f75 7372 2f69 6e63 6c75 6465  34 "/usr/include
0002a50: 2f73 7464 696f 2e68 2220 3220 3320 340a  /stdio.h" 2 3 4.
0002a60: 0a23 2031 2022 2f75 7372 2f69 6e63 6c75  .# 1 "/usr/inclu
0002a70: 6465 2f62 6974 732f 7479 7065 732e 6822  de/bits/types.h"
0002a80: 2031 2033 2034 0a23 2032 3720 222f 7573   1 3 4.# 27 "/us
0002a90: 722f 696e 636c 7564 652f 6269 7473 2f74  r/include/bits/t
0002aa0: 7970 6573 2e68 2220 3320 340a 2320 3120  ypes.h" 3 4.# 1 
0002ab0: 222f 7573 722f 696e 636c 7564 652f 6269  "/usr/include/bi
0002ac0: 7473 2f77 6f72 6473 697a 652e 6822 2031  ts/wordsize.h" 1
0002ad0: 2033 2034 0a23 2032 3820 222f 7573 722f   3 4.# 28 "/usr/
0002ae0: 696e 636c 7564 652f 6269 7473 2f74 7970  include/bits/typ
0002af0: 6573 2e68 2220 3220 3320 340a 0a0a 7479  es.h" 2 3 4...ty
0002b00: 7065 6465 6620 756e 7369 676e 6564 2063  pedef unsigned c
0002b10: 6861 7220 5f5f 755f 6368 6172 3b0a 7479  har __u_char;.ty
0002b20: 7065 6465 6620 756e 7369 676e 6564 2073  pedef unsigned s
0002b30: 686f 7274 2069 6e74 205f 5f75 5f73 686f  hort int __u_sho
0002b40: 7274 3b0a 7479 7065 6465 6620 756e 7369  rt;.typedef unsi
0002b50: 676e 6564 2069 6e74 205f 5f75 5f69 6e74  gned int __u_int
0002b60: 3b0a 7479 7065 6465 6620 756e 7369 676e  ;.typedef unsign
0002b70: 6564 206c 6f6e 6720 696e 7420 5f5f 755f  ed long int __u_
0002b80: 6c6f 6e67 3b0a 0a0a 7479 7065 6465 6620  long;...typedef 
0002b90: 7369 676e 6564 2063 6861 7220 5f5f 696e  signed char __in
0002ba0: 7438 5f74 3b0a 7479 7065 6465 6620 756e  t8_t;.typedef un
0002bb0: 7369 676e 6564 2063 6861 7220 5f5f 7569  signed char __ui
0002bc0: 6e74 385f 743b 0a74 7970 6564 6566 2073  nt8_t;.typedef s
0002bd0: 6967 6e65 6420 7368 6f72 7420 696e 7420  igned short int 
0002be0: 5f5f 696e 7431 365f 743b 0a74 7970 6564  __int16_t;.typed
0002bf0: 6566 2075 6e73 6967 6e65 6420 7368 6f72  ef unsigned shor
0002c00: 7420 696e 7420 5f5f 7569 6e74 3136 5f74  t int __uint16_t
0002c10: 3b0a 7479 7065 6465 6620 7369 676e 6564  ;.typedef signed
0002c20: 2069 6e74 205f 5f69 6e74 3332 5f74 3b0a   int __int32_t;.
0002c30: 7479 7065 6465 6620 756e 7369 676e 6564  typedef unsigned
0002c40: 2069 6e74 205f 5f75 696e 7433 325f 743b   int __uint32_t;
0002c50: 0a0a 7479 7065 6465 6620 7369 676e 6564  ..typedef signed
0002c60: 206c 6f6e 6720 696e 7420 5f5f 696e 7436   long int __int6
0002c70: 345f 743b 0a74 7970 6564 6566 2075 6e73  4_t;.typedef uns
0002c80: 6967 6e65 6420 6c6f 6e67 2069 6e74 205f  igned long int _
0002c90: 5f75 696e 7436 345f 743b 0a0a 0a0a 0a0a  _uint64_t;......
0002ca0: 0a0a 7479 7065 6465 6620 6c6f 6e67 2069  ..typedef long i
0002cb0: 6e74 205f 5f71 7561 645f 743b 0a74 7970  nt __quad_t;.typ
0002cc0: 6564 6566 2075 6e73 6967 6e65 6420 6c6f  edef unsigned lo
0002cd0: 6e67 2069 6e74 205f 5f75 5f71 7561 645f  ng int __u_quad_
0002ce0: 743b 0a23 2031 3330 2022 2f75 7372 2f69  t;.# 130 "/usr/i
0002cf0: 6e63 6c75 6465 2f62 6974 732f 7479 7065  nclude/bits/type
0002d00: 732e 6822 2033 2034 0a23 2031 2022 2f75  s.h" 3 4.# 1 "/u
0002d10: 7372 2f69 6e63 6c75 6465 2f62 6974 732f  sr/include/bits/
0002d20: 7479 7065 7369 7a65 732e 6822 2031 2033  typesizes.h" 1 3
0002d30: 2034 0a23 2031 3331 2022 2f75 7372 2f69   4.# 131 "/usr/i
0002d40: 6e63 6c75 6465 2f62 6974 732f 7479 7065  nclude/bits/type
0002d50: 732e 6822 2032 2033 2034 0a0a 0a74 7970  s.h" 2 3 4...typ
0002d60: 6564 6566 2075 6e73 6967 6e65 6420 6c6f  edef unsigned lo
0002d70: 6e67 2069 6e74 205f 5f64 6576 5f74 3b0a  ng int __dev_t;.
0002d80: 7479 7065 6465 6620 756e 7369 676e 6564  typedef unsigned
0002d90: 2069 6e74 205f 5f75 6964 5f74 3b0a 7479   int __uid_t;.ty
0002da0: 7065 6465 6620 756e 7369 676e 6564 2069  pedef unsigned i
0002db0: 6e74 205f 5f67 6964 5f74 3b0a 7479 7065  nt __gid_t;.type
0002dc0: 6465 6620 756e 7369 676e 6564 206c 6f6e  def unsigned lon
0002dd0: 6720 696e 7420 5f5f 696e 6f5f 743b 0a74  g int __ino_t;.t
0002de0: 7970 6564 6566 2075 6e73 6967 6e65 6420  ypedef unsigned 
0002df0: 6c6f 6e67 2069 6e74 205f 5f69 6e6f 3634  long int __ino64
0002e00: 5f74 3b0a 7479 7065 6465 6620 756e 7369  _t;.typedef unsi
0002e10: 676e 6564 2069 6e74 205f 5f6d 6f64 655f  gned int __mode_
0002e20: 743b 0a74 7970 6564 6566 2075 6e73 6967  t;.typedef unsig
0002e30: 6e65 6420 6c6f 6e67 2069 6e74 205f 5f6e  ned long int __n
0002e40: 6c69 6e6b 5f74 3b0a 7479 7065 6465 6620  link_t;.typedef 
0002e50: 6c6f 6e67 2069 6e74 205f 5f6f 6666 5f74  long int __off_t
0002e60: 3b0a 7479 7065 6465 6620 6c6f 6e67 2069  ;.typedef long i
0002e70: 6e74 205f 5f6f 6666 3634 5f74 3b0a 7479  nt __off64_t;.ty
0002e80: 7065 6465 6620 696e 7420 5f5f 7069 645f  pedef int __pid_
0002e90: 743b 0a74 7970 6564 6566 2073 7472 7563  t;.typedef struc
0002ea0: 7420 7b20 696e 7420 5f5f 7661 6c5b 325d  t { int __val[2]
0002eb0: 3b20 7d20 5f5f 6673 6964 5f74 3b0a 7479  ; } __fsid_t;.ty
0002ec0: 7065 6465 6620 6c6f 6e67 2069 6e74 205f  pedef long int _
0002ed0: 5f63 6c6f 636b 5f74 3b0a 7479 7065 6465  _clock_t;.typede
0002ee0: 6620 756e 7369 676e 6564 206c 6f6e 6720  f unsigned long 
0002ef0: 696e 7420 5f5f 726c 696d 5f74 3b0a 7479  int __rlim_t;.ty
0002f00: 7065 6465 6620 756e 7369 676e 6564 206c  pedef unsigned l
0002f10: 6f6e 6720 696e 7420 5f5f 726c 696d 3634  ong int __rlim64
0002f20: 5f74 3b0a 7479 7065 6465 6620 756e 7369  _t;.typedef unsi
0002f30: 676e 6564 2069 6e74 205f 5f69 645f 743b  gned int __id_t;
0002f40: 0a74 7970 6564 6566 206c 6f6e 6720 696e  .typedef long in
0002f50: 7420 5f5f 7469 6d65 5f74 3b0a 7479 7065  t __time_t;.type
0002f60: 6465 6620 756e 7369 676e 6564 2069 6e74  def unsigned int
0002f70: 205f 5f75 7365 636f 6e64 735f 743b 0a74   __useconds_t;.t
0002f80: 7970 6564 6566 206c 6f6e 6720 696e 7420  ypedef long int 
0002f90: 5f5f 7375 7365 636f 6e64 735f 743b 0a0a  __suseconds_t;..
0002fa0: 7479 7065 6465 6620 696e 7420 5f5f 6461  typedef int __da
0002fb0: 6464 725f 743b 0a74 7970 6564 6566 2069  ddr_t;.typedef i
0002fc0: 6e74 205f 5f6b 6579 5f74 3b0a 0a0a 7479  nt __key_t;...ty
0002fd0: 7065 6465 6620 696e 7420 5f5f 636c 6f63  pedef int __cloc
0002fe0: 6b69 645f 743b 0a0a 0a74 7970 6564 6566  kid_t;...typedef
0002ff0: 2076 6f69 6420 2a20 5f5f 7469 6d65 725f   void * __timer_
0003000: 743b 0a0a 0a74 7970 6564 6566 206c 6f6e  t;...typedef lon
0003010: 6720 696e 7420 5f5f 626c 6b73 697a 655f  g int __blksize_
0003020: 743b 0a0a 0a0a 0a74 7970 6564 6566 206c  t;.....typedef l
0003030: 6f6e 6720 696e 7420 5f5f 626c 6b63 6e74  ong int __blkcnt
0003040: 5f74 3b0a 7479 7065 6465 6620 6c6f 6e67  _t;.typedef long
0003050: 2069 6e74 205f 5f62 6c6b 636e 7436 345f   int __blkcnt64_
0003060: 743b 0a0a 0a74 7970 6564 6566 2075 6e73  t;...typedef uns
0003070: 6967 6e65 6420 6c6f 6e67 2069 6e74 205f  igned long int _
0003080: 5f66 7362 6c6b 636e 745f 743b 0a74 7970  _fsblkcnt_t;.typ
0003090: 6564 6566 2075 6e73 6967 6e65 6420 6c6f  edef unsigned lo
00030a0: 6e67 2069 6e74 205f 5f66 7362 6c6b 636e  ng int __fsblkcn
00030b0: 7436 345f 743b 0a0a 0a74 7970 6564 6566  t64_t;...typedef
00030c0: 2075 6e73 6967 6e65 6420 6c6f 6e67 2069   unsigned long i
00030d0: 6e74 205f 5f66 7366 696c 636e 745f 743b  nt __fsfilcnt_t;
00030e0: 0a74 7970 6564 6566 2075 6e73 6967 6e65  .typedef unsigne
00030f0: 6420 6c6f 6e67 2069 6e74 205f 5f66 7366  d long int __fsf
0003100: 696c 636e 7436 345f 743b 0a0a 0a74 7970  ilcnt64_t;...typ
0003110: 6564 6566 206c 6f6e 6720 696e 7420 5f5f  edef long int __
0003120: 6673 776f 7264 5f74 3b0a 0a74 7970 6564  fsword_t;..typed
0003130: 6566 206c 6f6e 6720 696e 7420 5f5f 7373  ef long int __ss
0003140: 697a 655f 743b 0a0a 0a74 7970 6564 6566  ize_t;...typedef
0003150: 206c 6f6e 6720 696e 7420 5f5f 7379 7363   long int __sysc
0003160: 616c 6c5f 736c 6f6e 675f 743b 0a0a 7479  all_slong_t;..ty
0003170: 7065 6465 6620 756e 7369 676e 6564 206c  pedef unsigned l
0003180: 6f6e 6720 696e 7420 5f5f 7379 7363 616c  ong int __syscal
0003190: 6c5f 756c 6f6e 675f 743b 0a0a 0a0a 7479  l_ulong_t;....ty
00031a0: 7065 6465 6620 5f5f 6f66 6636 345f 7420  pedef __off64_t 
00031b0: 5f5f 6c6f 6666 5f74 3b0a 7479 7065 6465  __loff_t;.typede
00031c0: 6620 5f5f 7175 6164 5f74 202a 5f5f 7161  f __quad_t *__qa
00031d0: 6464 725f 743b 0a74 7970 6564 6566 2063  ddr_t;.typedef c
00031e0: 6861 7220 2a5f 5f63 6164 6472 5f74 3b0a  har *__caddr_t;.
00031f0: 0a0a 7479 7065 6465 6620 6c6f 6e67 2069  ..typedef long i
0003200: 6e74 205f 5f69 6e74 7074 725f 743b 0a0a  nt __intptr_t;..
0003210: 0a74 7970 6564 6566 2075 6e73 6967 6e65  .typedef unsigne
0003220: 6420 696e 7420 5f5f 736f 636b 6c65 6e5f  d int __socklen_
0003230: 743b 0a23 2033 3620 222f 7573 722f 696e  t;.# 36 "/usr/in
0003240: 636c 7564 652f 7374 6469 6f2e 6822 2032  clude/stdio.h" 2
0003250: 2033 2034 0a23 2034 3420 222f 7573 722f   3 4.# 44 "/usr/
0003260: 696e 636c 7564 652f 7374 6469 6f2e 6822  include/stdio.h"
0003270: 2033 2034 0a73 7472 7563 7420 5f49 4f5f   3 4.struct _IO_
0003280: 4649 4c45 3b0a 0a0a 0a74 7970 6564 6566  FILE;....typedef
0003290: 2073 7472 7563 7420 5f49 4f5f 4649 4c45   struct _IO_FILE
00032a0: 2046 494c 453b 0a0a 0a0a 0a0a 2320 3634   FILE;......# 64
00032b0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f73   "/usr/include/s
00032c0: 7464 696f 2e68 2220 3320 340a 7479 7065  tdio.h" 3 4.type
00032d0: 6465 6620 7374 7275 6374 205f 494f 5f46  def struct _IO_F
00032e0: 494c 4520 5f5f 4649 4c45 3b0a 2320 3734  ILE __FILE;.# 74
00032f0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f73   "/usr/include/s
0003300: 7464 696f 2e68 2220 3320 340a 2320 3120  tdio.h" 3 4.# 1 
0003310: 222f 7573 722f 696e 636c 7564 652f 6c69  "/usr/include/li
0003320: 6269 6f2e 6822 2031 2033 2034 0a23 2033  bio.h" 1 3 4.# 3
0003330: 3220 222f 7573 722f 696e 636c 7564 652f  2 "/usr/include/
0003340: 6c69 6269 6f2e 6822 2033 2034 0a23 2031  libio.h" 3 4.# 1
0003350: 2022 2f75 7372 2f69 6e63 6c75 6465 2f5f   "/usr/include/_
0003360: 475f 636f 6e66 6967 2e68 2220 3120 3320  G_config.h" 1 3 
0003370: 340a 2320 3135 2022 2f75 7372 2f69 6e63  4.# 15 "/usr/inc
0003380: 6c75 6465 2f5f 475f 636f 6e66 6967 2e68  lude/_G_config.h
0003390: 2220 3320 340a 2320 3120 222f 7573 722f  " 3 4.# 1 "/usr/
00033a0: 6c69 622f 6763 632f 7838 365f 3634 2d72  lib/gcc/x86_64-r
00033b0: 6564 6861 742d 6c69 6e75 782f 342e 382e  edhat-linux/4.8.
00033c0: 332f 696e 636c 7564 652f 7374 6464 6566  3/include/stddef
00033d0: 2e68 2220 3120 3320 340a 2320 3136 2022  .h" 1 3 4.# 16 "
00033e0: 2f75 7372 2f69 6e63 6c75 6465 2f5f 475f  /usr/include/_G_
00033f0: 636f 6e66 6967 2e68 2220 3220 3320 340a  config.h" 2 3 4.
0003400: 0a0a 0a0a 2320 3120 222f 7573 722f 696e  ....# 1 "/usr/in
0003410: 636c 7564 652f 7763 6861 722e 6822 2031  clude/wchar.h" 1
0003420: 2033 2034 0a23 2038 3220 222f 7573 722f   3 4.# 82 "/usr/
0003430: 696e 636c 7564 652f 7763 6861 722e 6822  include/wchar.h"
0003440: 2033 2034 0a74 7970 6564 6566 2073 7472   3 4.typedef str
0003450: 7563 740a 7b0a 2020 696e 7420 5f5f 636f  uct.{.  int __co
0003460: 756e 743b 0a20 2075 6e69 6f6e 0a20 207b  unt;.  union.  {
0003470: 0a0a 2020 2020 756e 7369 676e 6564 2069  ..    unsigned i
0003480: 6e74 205f 5f77 6368 3b0a 0a0a 0a20 2020  nt __wch;....   
0003490: 2063 6861 7220 5f5f 7763 6862 5b34 5d3b   char __wchb[4];
00034a0: 0a20 207d 205f 5f76 616c 7565 3b0a 7d20  .  } __value;.} 
00034b0: 5f5f 6d62 7374 6174 655f 743b 0a23 2032  __mbstate_t;.# 2
00034c0: 3120 222f 7573 722f 696e 636c 7564 652f  1 "/usr/include/
00034d0: 5f47 5f63 6f6e 6669 672e 6822 2032 2033  _G_config.h" 2 3
00034e0: 2034 0a74 7970 6564 6566 2073 7472 7563   4.typedef struc
00034f0: 740a 7b0a 2020 5f5f 6f66 665f 7420 5f5f  t.{.  __off_t __
0003500: 706f 733b 0a20 205f 5f6d 6273 7461 7465  pos;.  __mbstate
0003510: 5f74 205f 5f73 7461 7465 3b0a 7d20 5f47  _t __state;.} _G
0003520: 5f66 706f 735f 743b 0a74 7970 6564 6566  _fpos_t;.typedef
0003530: 2073 7472 7563 740a 7b0a 2020 5f5f 6f66   struct.{.  __of
0003540: 6636 345f 7420 5f5f 706f 733b 0a20 205f  f64_t __pos;.  _
0003550: 5f6d 6273 7461 7465 5f74 205f 5f73 7461  _mbstate_t __sta
0003560: 7465 3b0a 7d20 5f47 5f66 706f 7336 345f  te;.} _G_fpos64_
0003570: 743b 0a23 2033 3320 222f 7573 722f 696e  t;.# 33 "/usr/in
0003580: 636c 7564 652f 6c69 6269 6f2e 6822 2032  clude/libio.h" 2
0003590: 2033 2034 0a23 2035 3020 222f 7573 722f   3 4.# 50 "/usr/
00035a0: 696e 636c 7564 652f 6c69 6269 6f2e 6822  include/libio.h"
00035b0: 2033 2034 0a23 2031 2022 2f75 7372 2f6c   3 4.# 1 "/usr/l
00035c0: 6962 2f67 6363 2f78 3836 5f36 342d 7265  ib/gcc/x86_64-re
00035d0: 6468 6174 2d6c 696e 7578 2f34 2e38 2e33  dhat-linux/4.8.3
00035e0: 2f69 6e63 6c75 6465 2f73 7464 6172 672e  /include/stdarg.
00035f0: 6822 2031 2033 2034 0a23 2034 3020 222f  h" 1 3 4.# 40 "/
0003600: 7573 722f 6c69 622f 6763 632f 7838 365f  usr/lib/gcc/x86_
0003610: 3634 2d72 6564 6861 742d 6c69 6e75 782f  64-redhat-linux/
0003620: 342e 382e 332f 696e 636c 7564 652f 7374  4.8.3/include/st
0003630: 6461 7267 2e68 2220 3320 340a 7479 7065  darg.h" 3 4.type
0003640: 6465 6620 5f5f 6275 696c 7469 6e5f 7661  def __builtin_va
0003650: 5f6c 6973 7420 5f5f 676e 7563 5f76 615f  _list __gnuc_va_
0003660: 6c69 7374 3b0a 2320 3531 2022 2f75 7372  list;.# 51 "/usr
0003670: 2f69 6e63 6c75 6465 2f6c 6962 696f 2e68  /include/libio.h
0003680: 2220 3220 3320 340a 2320 3134 3520 222f  " 2 3 4.# 145 "/
0003690: 7573 722f 696e 636c 7564 652f 6c69 6269  usr/include/libi
00036a0: 6f2e 6822 2033 2034 0a73 7472 7563 7420  o.h" 3 4.struct 
00036b0: 5f49 4f5f 6a75 6d70 5f74 3b20 7374 7275  _IO_jump_t; stru
00036c0: 6374 205f 494f 5f46 494c 453b 0a23 2031  ct _IO_FILE;.# 1
00036d0: 3535 2022 2f75 7372 2f69 6e63 6c75 6465  55 "/usr/include
00036e0: 2f6c 6962 696f 2e68 2220 3320 340a 7479  /libio.h" 3 4.ty
00036f0: 7065 6465 6620 766f 6964 205f 494f 5f6c  pedef void _IO_l
0003700: 6f63 6b5f 743b 0a0a 0a0a 0a0a 7374 7275  ock_t;......stru
0003710: 6374 205f 494f 5f6d 6172 6b65 7220 7b0a  ct _IO_marker {.
0003720: 2020 7374 7275 6374 205f 494f 5f6d 6172    struct _IO_mar
0003730: 6b65 7220 2a5f 6e65 7874 3b0a 2020 7374  ker *_next;.  st
0003740: 7275 6374 205f 494f 5f46 494c 4520 2a5f  ruct _IO_FILE *_
0003750: 7362 7566 3b0a 0a0a 0a20 2069 6e74 205f  sbuf;....  int _
0003760: 706f 733b 0a23 2031 3738 2022 2f75 7372  pos;.# 178 "/usr
0003770: 2f69 6e63 6c75 6465 2f6c 6962 696f 2e68  /include/libio.h
0003780: 2220 3320 340a 7d3b 0a0a 0a65 6e75 6d20  " 3 4.};...enum 
0003790: 5f5f 636f 6465 6376 745f 7265 7375 6c74  __codecvt_result
00037a0: 0a7b 0a20 205f 5f63 6f64 6563 7674 5f6f  .{.  __codecvt_o
00037b0: 6b2c 0a20 205f 5f63 6f64 6563 7674 5f70  k,.  __codecvt_p
00037c0: 6172 7469 616c 2c0a 2020 5f5f 636f 6465  artial,.  __code
00037d0: 6376 745f 6572 726f 722c 0a20 205f 5f63  cvt_error,.  __c
00037e0: 6f64 6563 7674 5f6e 6f63 6f6e 760a 7d3b  odecvt_noconv.};
00037f0: 0a23 2032 3436 2022 2f75 7372 2f69 6e63  .# 246 "/usr/inc
0003800: 6c75 6465 2f6c 6962 696f 2e68 2220 3320  lude/libio.h" 3 
0003810: 340a 7374 7275 6374 205f 494f 5f46 494c  4.struct _IO_FIL
0003820: 4520 7b0a 2020 696e 7420 5f66 6c61 6773  E {.  int _flags
0003830: 3b0a 0a0a 0a0a 2020 6368 6172 2a20 5f49  ;.....  char* _I
0003840: 4f5f 7265 6164 5f70 7472 3b0a 2020 6368  O_read_ptr;.  ch
0003850: 6172 2a20 5f49 4f5f 7265 6164 5f65 6e64  ar* _IO_read_end
0003860: 3b0a 2020 6368 6172 2a20 5f49 4f5f 7265  ;.  char* _IO_re
0003870: 6164 5f62 6173 653b 0a20 2063 6861 722a  ad_base;.  char*
0003880: 205f 494f 5f77 7269 7465 5f62 6173 653b   _IO_write_base;
0003890: 0a20 2063 6861 722a 205f 494f 5f77 7269  .  char* _IO_wri
00038a0: 7465 5f70 7472 3b0a 2020 6368 6172 2a20  te_ptr;.  char* 
00038b0: 5f49 4f5f 7772 6974 655f 656e 643b 0a20  _IO_write_end;. 
00038c0: 2063 6861 722a 205f 494f 5f62 7566 5f62   char* _IO_buf_b
00038d0: 6173 653b 0a20 2063 6861 722a 205f 494f  ase;.  char* _IO
00038e0: 5f62 7566 5f65 6e64 3b0a 0a20 2063 6861  _buf_end;..  cha
00038f0: 7220 2a5f 494f 5f73 6176 655f 6261 7365  r *_IO_save_base
0003900: 3b0a 2020 6368 6172 202a 5f49 4f5f 6261  ;.  char *_IO_ba
0003910: 636b 7570 5f62 6173 653b 0a20 2063 6861  ckup_base;.  cha
0003920: 7220 2a5f 494f 5f73 6176 655f 656e 643b  r *_IO_save_end;
0003930: 0a0a 2020 7374 7275 6374 205f 494f 5f6d  ..  struct _IO_m
0003940: 6172 6b65 7220 2a5f 6d61 726b 6572 733b  arker *_markers;
0003950: 0a0a 2020 7374 7275 6374 205f 494f 5f46  ..  struct _IO_F
0003960: 494c 4520 2a5f 6368 6169 6e3b 0a0a 2020  ILE *_chain;..  
0003970: 696e 7420 5f66 696c 656e 6f3b 0a0a 0a0a  int _fileno;....
0003980: 2020 696e 7420 5f66 6c61 6773 323b 0a0a    int _flags2;..
0003990: 2020 5f5f 6f66 665f 7420 5f6f 6c64 5f6f    __off_t _old_o
00039a0: 6666 7365 743b 0a0a 0a0a 2020 756e 7369  ffset;....  unsi
00039b0: 676e 6564 2073 686f 7274 205f 6375 725f  gned short _cur_
00039c0: 636f 6c75 6d6e 3b0a 2020 7369 676e 6564  column;.  signed
00039d0: 2063 6861 7220 5f76 7461 626c 655f 6f66   char _vtable_of
00039e0: 6673 6574 3b0a 2020 6368 6172 205f 7368  fset;.  char _sh
00039f0: 6f72 7462 7566 5b31 5d3b 0a0a 0a0a 2020  ortbuf[1];....  
0003a00: 5f49 4f5f 6c6f 636b 5f74 202a 5f6c 6f63  _IO_lock_t *_loc
0003a10: 6b3b 0a23 2032 3934 2022 2f75 7372 2f69  k;.# 294 "/usr/i
0003a20: 6e63 6c75 6465 2f6c 6962 696f 2e68 2220  nclude/libio.h" 
0003a30: 3320 340a 2020 5f5f 6f66 6636 345f 7420  3 4.  __off64_t 
0003a40: 5f6f 6666 7365 743b 0a23 2033 3033 2022  _offset;.# 303 "
0003a50: 2f75 7372 2f69 6e63 6c75 6465 2f6c 6962  /usr/include/lib
0003a60: 696f 2e68 2220 3320 340a 2020 766f 6964  io.h" 3 4.  void
0003a70: 202a 5f5f 7061 6431 3b0a 2020 766f 6964   *__pad1;.  void
0003a80: 202a 5f5f 7061 6432 3b0a 2020 766f 6964   *__pad2;.  void
0003a90: 202a 5f5f 7061 6433 3b0a 2020 766f 6964   *__pad3;.  void
0003aa0: 202a 5f5f 7061 6434 3b0a 2020 7369 7a65   *__pad4;.  size
0003ab0: 5f74 205f 5f70 6164 353b 0a0a 2020 696e  _t __pad5;..  in
0003ac0: 7420 5f6d 6f64 653b 0a0a 2020 6368 6172  t _mode;..  char
0003ad0: 205f 756e 7573 6564 325b 3135 202a 2073   _unused2[15 * s
0003ae0: 697a 656f 6620 2869 6e74 2920 2d20 3420  izeof (int) - 4 
0003af0: 2a20 7369 7a65 6f66 2028 766f 6964 202a  * sizeof (void *
0003b00: 2920 2d20 7369 7a65 6f66 2028 7369 7a65  ) - sizeof (size
0003b10: 5f74 295d 3b0a 0a7d 3b0a 0a0a 7479 7065  _t)];..};...type
0003b20: 6465 6620 7374 7275 6374 205f 494f 5f46  def struct _IO_F
0003b30: 494c 4520 5f49 4f5f 4649 4c45 3b0a 0a0a  ILE _IO_FILE;...
0003b40: 7374 7275 6374 205f 494f 5f46 494c 455f  struct _IO_FILE_
0003b50: 706c 7573 3b0a 0a65 7874 6572 6e20 7374  plus;..extern st
0003b60: 7275 6374 205f 494f 5f46 494c 455f 706c  ruct _IO_FILE_pl
0003b70: 7573 205f 494f 5f32 5f31 5f73 7464 696e  us _IO_2_1_stdin
0003b80: 5f3b 0a65 7874 6572 6e20 7374 7275 6374  _;.extern struct
0003b90: 205f 494f 5f46 494c 455f 706c 7573 205f   _IO_FILE_plus _
0003ba0: 494f 5f32 5f31 5f73 7464 6f75 745f 3b0a  IO_2_1_stdout_;.
0003bb0: 6578 7465 726e 2073 7472 7563 7420 5f49  extern struct _I
0003bc0: 4f5f 4649 4c45 5f70 6c75 7320 5f49 4f5f  O_FILE_plus _IO_
0003bd0: 325f 315f 7374 6465 7272 5f3b 0a23 2033  2_1_stderr_;.# 3
0003be0: 3339 2022 2f75 7372 2f69 6e63 6c75 6465  39 "/usr/include
0003bf0: 2f6c 6962 696f 2e68 2220 3320 340a 7479  /libio.h" 3 4.ty
0003c00: 7065 6465 6620 5f5f 7373 697a 655f 7420  pedef __ssize_t 
0003c10: 5f5f 696f 5f72 6561 645f 666e 2028 766f  __io_read_fn (vo
0003c20: 6964 202a 5f5f 636f 6f6b 6965 2c20 6368  id *__cookie, ch
0003c30: 6172 202a 5f5f 6275 662c 2073 697a 655f  ar *__buf, size_
0003c40: 7420 5f5f 6e62 7974 6573 293b 0a0a 0a0a  t __nbytes);....
0003c50: 0a0a 0a0a 7479 7065 6465 6620 5f5f 7373  ....typedef __ss
0003c60: 697a 655f 7420 5f5f 696f 5f77 7269 7465  ize_t __io_write
0003c70: 5f66 6e20 2876 6f69 6420 2a5f 5f63 6f6f  _fn (void *__coo
0003c80: 6b69 652c 2063 6f6e 7374 2063 6861 7220  kie, const char 
0003c90: 2a5f 5f62 7566 2c0a 2020 2020 2073 697a  *__buf,.     siz
0003ca0: 655f 7420 5f5f 6e29 3b0a 0a0a 0a0a 0a0a  e_t __n);.......
0003cb0: 0a74 7970 6564 6566 2069 6e74 205f 5f69  .typedef int __i
0003cc0: 6f5f 7365 656b 5f66 6e20 2876 6f69 6420  o_seek_fn (void 
0003cd0: 2a5f 5f63 6f6f 6b69 652c 205f 5f6f 6666  *__cookie, __off
0003ce0: 3634 5f74 202a 5f5f 706f 732c 2069 6e74  64_t *__pos, int
0003cf0: 205f 5f77 293b 0a0a 0a74 7970 6564 6566   __w);...typedef
0003d00: 2069 6e74 205f 5f69 6f5f 636c 6f73 655f   int __io_close_
0003d10: 666e 2028 766f 6964 202a 5f5f 636f 6f6b  fn (void *__cook
0003d20: 6965 293b 0a23 2033 3931 2022 2f75 7372  ie);.# 391 "/usr
0003d30: 2f69 6e63 6c75 6465 2f6c 6962 696f 2e68  /include/libio.h
0003d40: 2220 3320 340a 6578 7465 726e 2069 6e74  " 3 4.extern int
0003d50: 205f 5f75 6e64 6572 666c 6f77 2028 5f49   __underflow (_I
0003d60: 4f5f 4649 4c45 202a 293b 0a65 7874 6572  O_FILE *);.exter
0003d70: 6e20 696e 7420 5f5f 7566 6c6f 7720 285f  n int __uflow (_
0003d80: 494f 5f46 494c 4520 2a29 3b0a 6578 7465  IO_FILE *);.exte
0003d90: 726e 2069 6e74 205f 5f6f 7665 7266 6c6f  rn int __overflo
0003da0: 7720 285f 494f 5f46 494c 4520 2a2c 2069  w (_IO_FILE *, i
0003db0: 6e74 293b 0a23 2034 3335 2022 2f75 7372  nt);.# 435 "/usr
0003dc0: 2f69 6e63 6c75 6465 2f6c 6962 696f 2e68  /include/libio.h
0003dd0: 2220 3320 340a 6578 7465 726e 2069 6e74  " 3 4.extern int
0003de0: 205f 494f 5f67 6574 6320 285f 494f 5f46   _IO_getc (_IO_F
0003df0: 494c 4520 2a5f 5f66 7029 3b0a 6578 7465  ILE *__fp);.exte
0003e00: 726e 2069 6e74 205f 494f 5f70 7574 6320  rn int _IO_putc 
0003e10: 2869 6e74 205f 5f63 2c20 5f49 4f5f 4649  (int __c, _IO_FI
0003e20: 4c45 202a 5f5f 6670 293b 0a65 7874 6572  LE *__fp);.exter
0003e30: 6e20 696e 7420 5f49 4f5f 6665 6f66 2028  n int _IO_feof (
0003e40: 5f49 4f5f 4649 4c45 202a 5f5f 6670 2920  _IO_FILE *__fp) 
0003e50: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
0003e60: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
0003e70: 6c65 6166 5f5f 2929 3b0a 6578 7465 726e  leaf__));.extern
0003e80: 2069 6e74 205f 494f 5f66 6572 726f 7220   int _IO_ferror 
0003e90: 285f 494f 5f46 494c 4520 2a5f 5f66 7029  (_IO_FILE *__fp)
0003ea0: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0003eb0: 285f 5f6e 6f74 6872 6f77 5f5f 202c 205f  (__nothrow__ , _
0003ec0: 5f6c 6561 665f 5f29 293b 0a0a 6578 7465  _leaf__));..exte
0003ed0: 726e 2069 6e74 205f 494f 5f70 6565 6b63  rn int _IO_peekc
0003ee0: 5f6c 6f63 6b65 6420 285f 494f 5f46 494c  _locked (_IO_FIL
0003ef0: 4520 2a5f 5f66 7029 3b0a 0a0a 0a0a 0a65  E *__fp);......e
0003f00: 7874 6572 6e20 766f 6964 205f 494f 5f66  xtern void _IO_f
0003f10: 6c6f 636b 6669 6c65 2028 5f49 4f5f 4649  lockfile (_IO_FI
0003f20: 4c45 202a 2920 5f5f 6174 7472 6962 7574  LE *) __attribut
0003f30: 655f 5f20 2828 5f5f 6e6f 7468 726f 775f  e__ ((__nothrow_
0003f40: 5f20 2c20 5f5f 6c65 6166 5f5f 2929 3b0a  _ , __leaf__));.
0003f50: 6578 7465 726e 2076 6f69 6420 5f49 4f5f  extern void _IO_
0003f60: 6675 6e6c 6f63 6b66 696c 6520 285f 494f  funlockfile (_IO
0003f70: 5f46 494c 4520 2a29 205f 5f61 7474 7269  _FILE *) __attri
0003f80: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
0003f90: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
0003fa0: 293b 0a65 7874 6572 6e20 696e 7420 5f49  );.extern int _I
0003fb0: 4f5f 6674 7279 6c6f 636b 6669 6c65 2028  O_ftrylockfile (
0003fc0: 5f49 4f5f 4649 4c45 202a 2920 5f5f 6174  _IO_FILE *) __at
0003fd0: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
0003fe0: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
0003ff0: 5f5f 2929 3b0a 2320 3436 3520 222f 7573  __));.# 465 "/us
0004000: 722f 696e 636c 7564 652f 6c69 6269 6f2e  r/include/libio.
0004010: 6822 2033 2034 0a65 7874 6572 6e20 696e  h" 3 4.extern in
0004020: 7420 5f49 4f5f 7666 7363 616e 6620 285f  t _IO_vfscanf (_
0004030: 494f 5f46 494c 4520 2a20 5f5f 7265 7374  IO_FILE * __rest
0004040: 7269 6374 2c20 636f 6e73 7420 6368 6172  rict, const char
0004050: 202a 205f 5f72 6573 7472 6963 742c 0a20   * __restrict,. 
0004060: 2020 5f5f 676e 7563 5f76 615f 6c69 7374    __gnuc_va_list
0004070: 2c20 696e 7420 2a5f 5f72 6573 7472 6963  , int *__restric
0004080: 7429 3b0a 6578 7465 726e 2069 6e74 205f  t);.extern int _
0004090: 494f 5f76 6670 7269 6e74 6620 285f 494f  IO_vfprintf (_IO
00040a0: 5f46 494c 4520 2a5f 5f72 6573 7472 6963  _FILE *__restric
00040b0: 742c 2063 6f6e 7374 2063 6861 7220 2a5f  t, const char *_
00040c0: 5f72 6573 7472 6963 742c 0a20 2020 205f  _restrict,.    _
00040d0: 5f67 6e75 635f 7661 5f6c 6973 7429 3b0a  _gnuc_va_list);.
00040e0: 6578 7465 726e 205f 5f73 7369 7a65 5f74  extern __ssize_t
00040f0: 205f 494f 5f70 6164 6e20 285f 494f 5f46   _IO_padn (_IO_F
0004100: 494c 4520 2a2c 2069 6e74 2c20 5f5f 7373  ILE *, int, __ss
0004110: 697a 655f 7429 3b0a 6578 7465 726e 2073  ize_t);.extern s
0004120: 697a 655f 7420 5f49 4f5f 7367 6574 6e20  ize_t _IO_sgetn 
0004130: 285f 494f 5f46 494c 4520 2a2c 2076 6f69  (_IO_FILE *, voi
0004140: 6420 2a2c 2073 697a 655f 7429 3b0a 0a65  d *, size_t);..e
0004150: 7874 6572 6e20 5f5f 6f66 6636 345f 7420  xtern __off64_t 
0004160: 5f49 4f5f 7365 656b 6f66 6620 285f 494f  _IO_seekoff (_IO
0004170: 5f46 494c 4520 2a2c 205f 5f6f 6666 3634  _FILE *, __off64
0004180: 5f74 2c20 696e 742c 2069 6e74 293b 0a65  _t, int, int);.e
0004190: 7874 6572 6e20 5f5f 6f66 6636 345f 7420  xtern __off64_t 
00041a0: 5f49 4f5f 7365 656b 706f 7320 285f 494f  _IO_seekpos (_IO
00041b0: 5f46 494c 4520 2a2c 205f 5f6f 6666 3634  _FILE *, __off64
00041c0: 5f74 2c20 696e 7429 3b0a 0a65 7874 6572  _t, int);..exter
00041d0: 6e20 766f 6964 205f 494f 5f66 7265 655f  n void _IO_free_
00041e0: 6261 636b 7570 5f61 7265 6120 285f 494f  backup_area (_IO
00041f0: 5f46 494c 4520 2a29 205f 5f61 7474 7269  _FILE *) __attri
0004200: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
0004210: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
0004220: 293b 0a23 2037 3520 222f 7573 722f 696e  );.# 75 "/usr/in
0004230: 636c 7564 652f 7374 6469 6f2e 6822 2032  clude/stdio.h" 2
0004240: 2033 2034 0a0a 0a0a 0a74 7970 6564 6566   3 4.....typedef
0004250: 205f 5f67 6e75 635f 7661 5f6c 6973 7420   __gnuc_va_list 
0004260: 7661 5f6c 6973 743b 0a23 2039 3020 222f  va_list;.# 90 "/
0004270: 7573 722f 696e 636c 7564 652f 7374 6469  usr/include/stdi
0004280: 6f2e 6822 2033 2034 0a74 7970 6564 6566  o.h" 3 4.typedef
0004290: 205f 5f6f 6666 5f74 206f 6666 5f74 3b0a   __off_t off_t;.
00042a0: 2320 3130 3220 222f 7573 722f 696e 636c  # 102 "/usr/incl
00042b0: 7564 652f 7374 6469 6f2e 6822 2033 2034  ude/stdio.h" 3 4
00042c0: 0a74 7970 6564 6566 205f 5f73 7369 7a65  .typedef __ssize
00042d0: 5f74 2073 7369 7a65 5f74 3b0a 0a0a 0a0a  _t ssize_t;.....
00042e0: 0a0a 0a74 7970 6564 6566 205f 475f 6670  ...typedef _G_fp
00042f0: 6f73 5f74 2066 706f 735f 743b 0a0a 0a0a  os_t fpos_t;....
0004300: 0a23 2031 3634 2022 2f75 7372 2f69 6e63  .# 164 "/usr/inc
0004310: 6c75 6465 2f73 7464 696f 2e68 2220 3320  lude/stdio.h" 3 
0004320: 340a 2320 3120 222f 7573 722f 696e 636c  4.# 1 "/usr/incl
0004330: 7564 652f 6269 7473 2f73 7464 696f 5f6c  ude/bits/stdio_l
0004340: 696d 2e68 2220 3120 3320 340a 2320 3136  im.h" 1 3 4.# 16
0004350: 3520 222f 7573 722f 696e 636c 7564 652f  5 "/usr/include/
0004360: 7374 6469 6f2e 6822 2032 2033 2034 0a0a  stdio.h" 2 3 4..
0004370: 0a0a 6578 7465 726e 2073 7472 7563 7420  ..extern struct 
0004380: 5f49 4f5f 4649 4c45 202a 7374 6469 6e3b  _IO_FILE *stdin;
0004390: 0a65 7874 6572 6e20 7374 7275 6374 205f  .extern struct _
00043a0: 494f 5f46 494c 4520 2a73 7464 6f75 743b  IO_FILE *stdout;
00043b0: 0a65 7874 6572 6e20 7374 7275 6374 205f  .extern struct _
00043c0: 494f 5f46 494c 4520 2a73 7464 6572 723b  IO_FILE *stderr;
00043d0: 0a0a 0a0a 0a0a 0a0a 6578 7465 726e 2069  ........extern i
00043e0: 6e74 2072 656d 6f76 6520 2863 6f6e 7374  nt remove (const
00043f0: 2063 6861 7220 2a5f 5f66 696c 656e 616d   char *__filenam
0004400: 6529 205f 5f61 7474 7269 6275 7465 5f5f  e) __attribute__
0004410: 2028 285f 5f6e 6f74 6872 6f77 5f5f 202c   ((__nothrow__ ,
0004420: 205f 5f6c 6561 665f 5f29 293b 0a0a 6578   __leaf__));..ex
0004430: 7465 726e 2069 6e74 2072 656e 616d 6520  tern int rename 
0004440: 2863 6f6e 7374 2063 6861 7220 2a5f 5f6f  (const char *__o
0004450: 6c64 2c20 636f 6e73 7420 6368 6172 202a  ld, const char *
0004460: 5f5f 6e65 7729 205f 5f61 7474 7269 6275  __new) __attribu
0004470: 7465 5f5f 2028 285f 5f6e 6f74 6872 6f77  te__ ((__nothrow
0004480: 5f5f 202c 205f 5f6c 6561 665f 5f29 293b  __ , __leaf__));
0004490: 0a0a 0a0a 0a65 7874 6572 6e20 696e 7420  .....extern int 
00044a0: 7265 6e61 6d65 6174 2028 696e 7420 5f5f  renameat (int __
00044b0: 6f6c 6466 642c 2063 6f6e 7374 2063 6861  oldfd, const cha
00044c0: 7220 2a5f 5f6f 6c64 2c20 696e 7420 5f5f  r *__old, int __
00044d0: 6e65 7766 642c 0a20 2020 2020 2020 636f  newfd,.       co
00044e0: 6e73 7420 6368 6172 202a 5f5f 6e65 7729  nst char *__new)
00044f0: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0004500: 285f 5f6e 6f74 6872 6f77 5f5f 202c 205f  (__nothrow__ , _
0004510: 5f6c 6561 665f 5f29 293b 0a0a 0a0a 0a0a  _leaf__));......
0004520: 0a0a 0a65 7874 6572 6e20 4649 4c45 202a  ...extern FILE *
0004530: 746d 7066 696c 6520 2876 6f69 6429 203b  tmpfile (void) ;
0004540: 0a23 2032 3039 2022 2f75 7372 2f69 6e63  .# 209 "/usr/inc
0004550: 6c75 6465 2f73 7464 696f 2e68 2220 3320  lude/stdio.h" 3 
0004560: 340a 6578 7465 726e 2063 6861 7220 2a74  4.extern char *t
0004570: 6d70 6e61 6d20 2863 6861 7220 2a5f 5f73  mpnam (char *__s
0004580: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
0004590: 2828 5f5f 6e6f 7468 726f 775f 5f20 2c20  ((__nothrow__ , 
00045a0: 5f5f 6c65 6166 5f5f 2929 203b 0a0a 0a0a  __leaf__)) ;....
00045b0: 0a0a 6578 7465 726e 2063 6861 7220 2a74  ..extern char *t
00045c0: 6d70 6e61 6d5f 7220 2863 6861 7220 2a5f  mpnam_r (char *_
00045d0: 5f73 2920 5f5f 6174 7472 6962 7574 655f  _s) __attribute_
00045e0: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
00045f0: 2c20 5f5f 6c65 6166 5f5f 2929 203b 0a23  , __leaf__)) ;.#
0004600: 2032 3237 2022 2f75 7372 2f69 6e63 6c75   227 "/usr/inclu
0004610: 6465 2f73 7464 696f 2e68 2220 3320 340a  de/stdio.h" 3 4.
0004620: 6578 7465 726e 2063 6861 7220 2a74 656d  extern char *tem
0004630: 706e 616d 2028 636f 6e73 7420 6368 6172  pnam (const char
0004640: 202a 5f5f 6469 722c 2063 6f6e 7374 2063   *__dir, const c
0004650: 6861 7220 2a5f 5f70 6678 290a 2020 2020  har *__pfx).    
0004660: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0004670: 285f 5f6e 6f74 6872 6f77 5f5f 202c 205f  (__nothrow__ , _
0004680: 5f6c 6561 665f 5f29 2920 5f5f 6174 7472  _leaf__)) __attr
0004690: 6962 7574 655f 5f20 2828 5f5f 6d61 6c6c  ibute__ ((__mall
00046a0: 6f63 5f5f 2929 203b 0a0a 0a0a 0a0a 0a0a  oc__)) ;........
00046b0: 0a65 7874 6572 6e20 696e 7420 6663 6c6f  .extern int fclo
00046c0: 7365 2028 4649 4c45 202a 5f5f 7374 7265  se (FILE *__stre
00046d0: 616d 293b 0a0a 0a0a 0a65 7874 6572 6e20  am);.....extern 
00046e0: 696e 7420 6666 6c75 7368 2028 4649 4c45  int fflush (FILE
00046f0: 202a 5f5f 7374 7265 616d 293b 0a0a 2320   *__stream);..# 
0004700: 3235 3220 222f 7573 722f 696e 636c 7564  252 "/usr/includ
0004710: 652f 7374 6469 6f2e 6822 2033 2034 0a65  e/stdio.h" 3 4.e
0004720: 7874 6572 6e20 696e 7420 6666 6c75 7368  xtern int fflush
0004730: 5f75 6e6c 6f63 6b65 6420 2846 494c 4520  _unlocked (FILE 
0004740: 2a5f 5f73 7472 6561 6d29 3b0a 2320 3236  *__stream);.# 26
0004750: 3620 222f 7573 722f 696e 636c 7564 652f  6 "/usr/include/
0004760: 7374 6469 6f2e 6822 2033 2034 0a0a 0a0a  stdio.h" 3 4....
0004770: 0a0a 0a65 7874 6572 6e20 4649 4c45 202a  ...extern FILE *
0004780: 666f 7065 6e20 2863 6f6e 7374 2063 6861  fopen (const cha
0004790: 7220 2a5f 5f72 6573 7472 6963 7420 5f5f  r *__restrict __
00047a0: 6669 6c65 6e61 6d65 2c0a 2020 2020 2020  filename,.      
00047b0: 636f 6e73 7420 6368 6172 202a 5f5f 7265  const char *__re
00047c0: 7374 7269 6374 205f 5f6d 6f64 6573 2920  strict __modes) 
00047d0: 3b0a 0a0a 0a0a 6578 7465 726e 2046 494c  ;.....extern FIL
00047e0: 4520 2a66 7265 6f70 656e 2028 636f 6e73  E *freopen (cons
00047f0: 7420 6368 6172 202a 5f5f 7265 7374 7269  t char *__restri
0004800: 6374 205f 5f66 696c 656e 616d 652c 0a20  ct __filename,. 
0004810: 2020 2020 2020 2063 6f6e 7374 2063 6861         const cha
0004820: 7220 2a5f 5f72 6573 7472 6963 7420 5f5f  r *__restrict __
0004830: 6d6f 6465 732c 0a20 2020 2020 2020 2046  modes,.        F
0004840: 494c 4520 2a5f 5f72 6573 7472 6963 7420  ILE *__restrict 
0004850: 5f5f 7374 7265 616d 2920 3b0a 2320 3239  __stream) ;.# 29
0004860: 3520 222f 7573 722f 696e 636c 7564 652f  5 "/usr/include/
0004870: 7374 6469 6f2e 6822 2033 2034 0a0a 2320  stdio.h" 3 4..# 
0004880: 3330 3620 222f 7573 722f 696e 636c 7564  306 "/usr/includ
0004890: 652f 7374 6469 6f2e 6822 2033 2034 0a65  e/stdio.h" 3 4.e
00048a0: 7874 6572 6e20 4649 4c45 202a 6664 6f70  xtern FILE *fdop
00048b0: 656e 2028 696e 7420 5f5f 6664 2c20 636f  en (int __fd, co
00048c0: 6e73 7420 6368 6172 202a 5f5f 6d6f 6465  nst char *__mode
00048d0: 7329 205f 5f61 7474 7269 6275 7465 5f5f  s) __attribute__
00048e0: 2028 285f 5f6e 6f74 6872 6f77 5f5f 202c   ((__nothrow__ ,
00048f0: 205f 5f6c 6561 665f 5f29 2920 3b0a 2320   __leaf__)) ;.# 
0004900: 3331 3920 222f 7573 722f 696e 636c 7564  319 "/usr/includ
0004910: 652f 7374 6469 6f2e 6822 2033 2034 0a65  e/stdio.h" 3 4.e
0004920: 7874 6572 6e20 4649 4c45 202a 666d 656d  xtern FILE *fmem
0004930: 6f70 656e 2028 766f 6964 202a 5f5f 732c  open (void *__s,
0004940: 2073 697a 655f 7420 5f5f 6c65 6e2c 2063   size_t __len, c
0004950: 6f6e 7374 2063 6861 7220 2a5f 5f6d 6f64  onst char *__mod
0004960: 6573 290a 2020 5f5f 6174 7472 6962 7574  es).  __attribut
0004970: 655f 5f20 2828 5f5f 6e6f 7468 726f 775f  e__ ((__nothrow_
0004980: 5f20 2c20 5f5f 6c65 6166 5f5f 2929 203b  _ , __leaf__)) ;
0004990: 0a0a 0a0a 0a65 7874 6572 6e20 4649 4c45  .....extern FILE
00049a0: 202a 6f70 656e 5f6d 656d 7374 7265 616d   *open_memstream
00049b0: 2028 6368 6172 202a 2a5f 5f62 7566 6c6f   (char **__buflo
00049c0: 632c 2073 697a 655f 7420 2a5f 5f73 697a  c, size_t *__siz
00049d0: 656c 6f63 2920 5f5f 6174 7472 6962 7574  eloc) __attribut
00049e0: 655f 5f20 2828 5f5f 6e6f 7468 726f 775f  e__ ((__nothrow_
00049f0: 5f20 2c20 5f5f 6c65 6166 5f5f 2929 203b  _ , __leaf__)) ;
0004a00: 0a0a 0a0a 0a0a 0a65 7874 6572 6e20 766f  .......extern vo
0004a10: 6964 2073 6574 6275 6620 2846 494c 4520  id setbuf (FILE 
0004a20: 2a5f 5f72 6573 7472 6963 7420 5f5f 7374  *__restrict __st
0004a30: 7265 616d 2c20 6368 6172 202a 5f5f 7265  ream, char *__re
0004a40: 7374 7269 6374 205f 5f62 7566 2920 5f5f  strict __buf) __
0004a50: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
0004a60: 6e6f 7468 726f 775f 5f20 2c20 5f5f 6c65  nothrow__ , __le
0004a70: 6166 5f5f 2929 3b0a 0a0a 0a65 7874 6572  af__));....exter
0004a80: 6e20 696e 7420 7365 7476 6275 6620 2846  n int setvbuf (F
0004a90: 494c 4520 2a5f 5f72 6573 7472 6963 7420  ILE *__restrict 
0004aa0: 5f5f 7374 7265 616d 2c20 6368 6172 202a  __stream, char *
0004ab0: 5f5f 7265 7374 7269 6374 205f 5f62 7566  __restrict __buf
0004ac0: 2c0a 2020 2020 2020 696e 7420 5f5f 6d6f  ,.      int __mo
0004ad0: 6465 732c 2073 697a 655f 7420 5f5f 6e29  des, size_t __n)
0004ae0: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0004af0: 285f 5f6e 6f74 6872 6f77 5f5f 202c 205f  (__nothrow__ , _
0004b00: 5f6c 6561 665f 5f29 293b 0a0a 0a0a 0a0a  _leaf__));......
0004b10: 6578 7465 726e 2076 6f69 6420 7365 7462  extern void setb
0004b20: 7566 6665 7220 2846 494c 4520 2a5f 5f72  uffer (FILE *__r
0004b30: 6573 7472 6963 7420 5f5f 7374 7265 616d  estrict __stream
0004b40: 2c20 6368 6172 202a 5f5f 7265 7374 7269  , char *__restri
0004b50: 6374 205f 5f62 7566 2c0a 2020 2020 2020  ct __buf,.      
0004b60: 2020 2073 697a 655f 7420 5f5f 7369 7a65     size_t __size
0004b70: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
0004b80: 2828 5f5f 6e6f 7468 726f 775f 5f20 2c20  ((__nothrow__ , 
0004b90: 5f5f 6c65 6166 5f5f 2929 3b0a 0a0a 6578  __leaf__));...ex
0004ba0: 7465 726e 2076 6f69 6420 7365 746c 696e  tern void setlin
0004bb0: 6562 7566 2028 4649 4c45 202a 5f5f 7374  ebuf (FILE *__st
0004bc0: 7265 616d 2920 5f5f 6174 7472 6962 7574  ream) __attribut
0004bd0: 655f 5f20 2828 5f5f 6e6f 7468 726f 775f  e__ ((__nothrow_
0004be0: 5f20 2c20 5f5f 6c65 6166 5f5f 2929 3b0a  _ , __leaf__));.
0004bf0: 0a0a 0a0a 0a0a 0a0a 6578 7465 726e 2069  ........extern i
0004c00: 6e74 2066 7072 696e 7466 2028 4649 4c45  nt fprintf (FILE
0004c10: 202a 5f5f 7265 7374 7269 6374 205f 5f73   *__restrict __s
0004c20: 7472 6561 6d2c 0a20 2020 2020 2063 6f6e  tream,.      con
0004c30: 7374 2063 6861 7220 2a5f 5f72 6573 7472  st char *__restr
0004c40: 6963 7420 5f5f 666f 726d 6174 2c20 2e2e  ict __format, ..
0004c50: 2e29 3b0a 0a0a 0a0a 6578 7465 726e 2069  .);.....extern i
0004c60: 6e74 2070 7269 6e74 6620 2863 6f6e 7374  nt printf (const
0004c70: 2063 6861 7220 2a5f 5f72 6573 7472 6963   char *__restric
0004c80: 7420 5f5f 666f 726d 6174 2c20 2e2e 2e29  t __format, ...)
0004c90: 3b0a 0a65 7874 6572 6e20 696e 7420 7370  ;..extern int sp
0004ca0: 7269 6e74 6620 2863 6861 7220 2a5f 5f72  rintf (char *__r
0004cb0: 6573 7472 6963 7420 5f5f 732c 0a20 2020  estrict __s,.   
0004cc0: 2020 2063 6f6e 7374 2063 6861 7220 2a5f     const char *_
0004cd0: 5f72 6573 7472 6963 7420 5f5f 666f 726d  _restrict __form
0004ce0: 6174 2c20 2e2e 2e29 205f 5f61 7474 7269  at, ...) __attri
0004cf0: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
0004d00: 6f77 5f5f 2929 3b0a 0a0a 0a0a 0a65 7874  ow__));......ext
0004d10: 6572 6e20 696e 7420 7666 7072 696e 7466  ern int vfprintf
0004d20: 2028 4649 4c45 202a 5f5f 7265 7374 7269   (FILE *__restri
0004d30: 6374 205f 5f73 2c20 636f 6e73 7420 6368  ct __s, const ch
0004d40: 6172 202a 5f5f 7265 7374 7269 6374 205f  ar *__restrict _
0004d50: 5f66 6f72 6d61 742c 0a20 2020 2020 2020  _format,.       
0004d60: 5f5f 676e 7563 5f76 615f 6c69 7374 205f  __gnuc_va_list _
0004d70: 5f61 7267 293b 0a0a 0a0a 0a65 7874 6572  _arg);.....exter
0004d80: 6e20 696e 7420 7670 7269 6e74 6620 2863  n int vprintf (c
0004d90: 6f6e 7374 2063 6861 7220 2a5f 5f72 6573  onst char *__res
0004da0: 7472 6963 7420 5f5f 666f 726d 6174 2c20  trict __format, 
0004db0: 5f5f 676e 7563 5f76 615f 6c69 7374 205f  __gnuc_va_list _
0004dc0: 5f61 7267 293b 0a0a 6578 7465 726e 2069  _arg);..extern i
0004dd0: 6e74 2076 7370 7269 6e74 6620 2863 6861  nt vsprintf (cha
0004de0: 7220 2a5f 5f72 6573 7472 6963 7420 5f5f  r *__restrict __
0004df0: 732c 2063 6f6e 7374 2063 6861 7220 2a5f  s, const char *_
0004e00: 5f72 6573 7472 6963 7420 5f5f 666f 726d  _restrict __form
0004e10: 6174 2c0a 2020 2020 2020 205f 5f67 6e75  at,.       __gnu
0004e20: 635f 7661 5f6c 6973 7420 5f5f 6172 6729  c_va_list __arg)
0004e30: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0004e40: 285f 5f6e 6f74 6872 6f77 5f5f 2929 3b0a  (__nothrow__));.
0004e50: 0a0a 0a0a 0a65 7874 6572 6e20 696e 7420  .....extern int 
0004e60: 736e 7072 696e 7466 2028 6368 6172 202a  snprintf (char *
0004e70: 5f5f 7265 7374 7269 6374 205f 5f73 2c20  __restrict __s, 
0004e80: 7369 7a65 5f74 205f 5f6d 6178 6c65 6e2c  size_t __maxlen,
0004e90: 0a20 2020 2020 2020 636f 6e73 7420 6368  .       const ch
0004ea0: 6172 202a 5f5f 7265 7374 7269 6374 205f  ar *__restrict _
0004eb0: 5f66 6f72 6d61 742c 202e 2e2e 290a 2020  _format, ...).  
0004ec0: 2020 205f 5f61 7474 7269 6275 7465 5f5f     __attribute__
0004ed0: 2028 285f 5f6e 6f74 6872 6f77 5f5f 2929   ((__nothrow__))
0004ee0: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0004ef0: 285f 5f66 6f72 6d61 745f 5f20 285f 5f70  (__format__ (__p
0004f00: 7269 6e74 665f 5f2c 2033 2c20 3429 2929  rintf__, 3, 4)))
0004f10: 3b0a 0a65 7874 6572 6e20 696e 7420 7673  ;..extern int vs
0004f20: 6e70 7269 6e74 6620 2863 6861 7220 2a5f  nprintf (char *_
0004f30: 5f72 6573 7472 6963 7420 5f5f 732c 2073  _restrict __s, s
0004f40: 697a 655f 7420 5f5f 6d61 786c 656e 2c0a  ize_t __maxlen,.
0004f50: 2020 2020 2020 2020 636f 6e73 7420 6368          const ch
0004f60: 6172 202a 5f5f 7265 7374 7269 6374 205f  ar *__restrict _
0004f70: 5f66 6f72 6d61 742c 205f 5f67 6e75 635f  _format, __gnuc_
0004f80: 7661 5f6c 6973 7420 5f5f 6172 6729 0a20  va_list __arg). 
0004f90: 2020 2020 5f5f 6174 7472 6962 7574 655f      __attribute_
0004fa0: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f29  _ ((__nothrow__)
0004fb0: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
0004fc0: 2828 5f5f 666f 726d 6174 5f5f 2028 5f5f  ((__format__ (__
0004fd0: 7072 696e 7466 5f5f 2c20 332c 2030 2929  printf__, 3, 0))
0004fe0: 293b 0a0a 2320 3431 3220 222f 7573 722f  );..# 412 "/usr/
0004ff0: 696e 636c 7564 652f 7374 6469 6f2e 6822  include/stdio.h"
0005000: 2033 2034 0a65 7874 6572 6e20 696e 7420   3 4.extern int 
0005010: 7664 7072 696e 7466 2028 696e 7420 5f5f  vdprintf (int __
0005020: 6664 2c20 636f 6e73 7420 6368 6172 202a  fd, const char *
0005030: 5f5f 7265 7374 7269 6374 205f 5f66 6d74  __restrict __fmt
0005040: 2c0a 2020 2020 2020 205f 5f67 6e75 635f  ,.       __gnuc_
0005050: 7661 5f6c 6973 7420 5f5f 6172 6729 0a20  va_list __arg). 
0005060: 2020 2020 5f5f 6174 7472 6962 7574 655f      __attribute_
0005070: 5f20 2828 5f5f 666f 726d 6174 5f5f 2028  _ ((__format__ (
0005080: 5f5f 7072 696e 7466 5f5f 2c20 322c 2030  __printf__, 2, 0
0005090: 2929 293b 0a65 7874 6572 6e20 696e 7420  )));.extern int 
00050a0: 6470 7269 6e74 6620 2869 6e74 205f 5f66  dprintf (int __f
00050b0: 642c 2063 6f6e 7374 2063 6861 7220 2a5f  d, const char *_
00050c0: 5f72 6573 7472 6963 7420 5f5f 666d 742c  _restrict __fmt,
00050d0: 202e 2e2e 290a 2020 2020 205f 5f61 7474   ...).     __att
00050e0: 7269 6275 7465 5f5f 2028 285f 5f66 6f72  ribute__ ((__for
00050f0: 6d61 745f 5f20 285f 5f70 7269 6e74 665f  mat__ (__printf_
0005100: 5f2c 2032 2c20 3329 2929 3b0a 0a0a 0a0a  _, 2, 3)));.....
0005110: 0a0a 0a0a 6578 7465 726e 2069 6e74 2066  ....extern int f
0005120: 7363 616e 6620 2846 494c 4520 2a5f 5f72  scanf (FILE *__r
0005130: 6573 7472 6963 7420 5f5f 7374 7265 616d  estrict __stream
0005140: 2c0a 2020 2020 2063 6f6e 7374 2063 6861  ,.     const cha
0005150: 7220 2a5f 5f72 6573 7472 6963 7420 5f5f  r *__restrict __
0005160: 666f 726d 6174 2c20 2e2e 2e29 203b 0a0a  format, ...) ;..
0005170: 0a0a 0a65 7874 6572 6e20 696e 7420 7363  ...extern int sc
0005180: 616e 6620 2863 6f6e 7374 2063 6861 7220  anf (const char 
0005190: 2a5f 5f72 6573 7472 6963 7420 5f5f 666f  *__restrict __fo
00051a0: 726d 6174 2c20 2e2e 2e29 203b 0a0a 6578  rmat, ...) ;..ex
00051b0: 7465 726e 2069 6e74 2073 7363 616e 6620  tern int sscanf 
00051c0: 2863 6f6e 7374 2063 6861 7220 2a5f 5f72  (const char *__r
00051d0: 6573 7472 6963 7420 5f5f 732c 0a20 2020  estrict __s,.   
00051e0: 2020 636f 6e73 7420 6368 6172 202a 5f5f    const char *__
00051f0: 7265 7374 7269 6374 205f 5f66 6f72 6d61  restrict __forma
0005200: 742c 202e 2e2e 2920 5f5f 6174 7472 6962  t, ...) __attrib
0005210: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
0005220: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
0005230: 3b0a 2320 3434 3320 222f 7573 722f 696e  ;.# 443 "/usr/in
0005240: 636c 7564 652f 7374 6469 6f2e 6822 2033  clude/stdio.h" 3
0005250: 2034 0a65 7874 6572 6e20 696e 7420 6673   4.extern int fs
0005260: 6361 6e66 2028 4649 4c45 202a 5f5f 7265  canf (FILE *__re
0005270: 7374 7269 6374 205f 5f73 7472 6561 6d2c  strict __stream,
0005280: 2063 6f6e 7374 2063 6861 7220 2a5f 5f72   const char *__r
0005290: 6573 7472 6963 7420 5f5f 666f 726d 6174  estrict __format
00052a0: 2c20 2e2e 2e29 205f 5f61 736d 5f5f 2028  , ...) __asm__ (
00052b0: 2222 2022 5f5f 6973 6f63 3939 5f66 7363  "" "__isoc99_fsc
00052c0: 616e 6622 290a 0a20 2020 2020 2020 2020  anf")..         
00052d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00052e0: 2020 2020 2020 3b0a 6578 7465 726e 2069        ;.extern i
00052f0: 6e74 2073 6361 6e66 2028 636f 6e73 7420  nt scanf (const 
0005300: 6368 6172 202a 5f5f 7265 7374 7269 6374  char *__restrict
0005310: 205f 5f66 6f72 6d61 742c 202e 2e2e 2920   __format, ...) 
0005320: 5f5f 6173 6d5f 5f20 2822 2220 225f 5f69  __asm__ ("" "__i
0005330: 736f 6339 395f 7363 616e 6622 290a 2020  soc99_scanf").  
0005340: 2020 2020 2020 2020 2020 2020 2020 2020                  
0005350: 2020 2020 2020 2020 2020 2020 3b0a 6578              ;.ex
0005360: 7465 726e 2069 6e74 2073 7363 616e 6620  tern int sscanf 
0005370: 2863 6f6e 7374 2063 6861 7220 2a5f 5f72  (const char *__r
0005380: 6573 7472 6963 7420 5f5f 732c 2063 6f6e  estrict __s, con
0005390: 7374 2063 6861 7220 2a5f 5f72 6573 7472  st char *__restr
00053a0: 6963 7420 5f5f 666f 726d 6174 2c20 2e2e  ict __format, ..
00053b0: 2e29 205f 5f61 736d 5f5f 2028 2222 2022  .) __asm__ ("" "
00053c0: 5f5f 6973 6f63 3939 5f73 7363 616e 6622  __isoc99_sscanf"
00053d0: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
00053e0: 2828 5f5f 6e6f 7468 726f 775f 5f20 2c20  ((__nothrow__ , 
00053f0: 5f5f 6c65 6166 5f5f 2929 0a0a 2020 2020  __leaf__))..    
0005400: 2020 2020 2020 2020 2020 2020 2020 2020                  
0005410: 2020 3b0a 2320 3436 3320 222f 7573 722f    ;.# 463 "/usr/
0005420: 696e 636c 7564 652f 7374 6469 6f2e 6822  include/stdio.h"
0005430: 2033 2034 0a0a 0a0a 0a0a 0a0a 0a65 7874   3 4.........ext
0005440: 6572 6e20 696e 7420 7666 7363 616e 6620  ern int vfscanf 
0005450: 2846 494c 4520 2a5f 5f72 6573 7472 6963  (FILE *__restric
0005460: 7420 5f5f 732c 2063 6f6e 7374 2063 6861  t __s, const cha
0005470: 7220 2a5f 5f72 6573 7472 6963 7420 5f5f  r *__restrict __
0005480: 666f 726d 6174 2c0a 2020 2020 2020 5f5f  format,.      __
0005490: 676e 7563 5f76 615f 6c69 7374 205f 5f61  gnuc_va_list __a
00054a0: 7267 290a 2020 2020 205f 5f61 7474 7269  rg).     __attri
00054b0: 6275 7465 5f5f 2028 285f 5f66 6f72 6d61  bute__ ((__forma
00054c0: 745f 5f20 285f 5f73 6361 6e66 5f5f 2c20  t__ (__scanf__, 
00054d0: 322c 2030 2929 2920 3b0a 0a0a 0a0a 0a65  2, 0))) ;......e
00054e0: 7874 6572 6e20 696e 7420 7673 6361 6e66  xtern int vscanf
00054f0: 2028 636f 6e73 7420 6368 6172 202a 5f5f   (const char *__
0005500: 7265 7374 7269 6374 205f 5f66 6f72 6d61  restrict __forma
0005510: 742c 205f 5f67 6e75 635f 7661 5f6c 6973  t, __gnuc_va_lis
0005520: 7420 5f5f 6172 6729 0a20 2020 2020 5f5f  t __arg).     __
0005530: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
0005540: 666f 726d 6174 5f5f 2028 5f5f 7363 616e  format__ (__scan
0005550: 665f 5f2c 2031 2c20 3029 2929 203b 0a0a  f__, 1, 0))) ;..
0005560: 0a65 7874 6572 6e20 696e 7420 7673 7363  .extern int vssc
0005570: 616e 6620 2863 6f6e 7374 2063 6861 7220  anf (const char 
0005580: 2a5f 5f72 6573 7472 6963 7420 5f5f 732c  *__restrict __s,
0005590: 0a20 2020 2020 2063 6f6e 7374 2063 6861  .      const cha
00055a0: 7220 2a5f 5f72 6573 7472 6963 7420 5f5f  r *__restrict __
00055b0: 666f 726d 6174 2c20 5f5f 676e 7563 5f76  format, __gnuc_v
00055c0: 615f 6c69 7374 205f 5f61 7267 290a 2020  a_list __arg).  
00055d0: 2020 205f 5f61 7474 7269 6275 7465 5f5f     __attribute__
00055e0: 2028 285f 5f6e 6f74 6872 6f77 5f5f 202c   ((__nothrow__ ,
00055f0: 205f 5f6c 6561 665f 5f29 2920 5f5f 6174   __leaf__)) __at
0005600: 7472 6962 7574 655f 5f20 2828 5f5f 666f  tribute__ ((__fo
0005610: 726d 6174 5f5f 2028 5f5f 7363 616e 665f  rmat__ (__scanf_
0005620: 5f2c 2032 2c20 3029 2929 3b0a 2320 3439  _, 2, 0)));.# 49
0005630: 3420 222f 7573 722f 696e 636c 7564 652f  4 "/usr/include/
0005640: 7374 6469 6f2e 6822 2033 2034 0a65 7874  stdio.h" 3 4.ext
0005650: 6572 6e20 696e 7420 7666 7363 616e 6620  ern int vfscanf 
0005660: 2846 494c 4520 2a5f 5f72 6573 7472 6963  (FILE *__restric
0005670: 7420 5f5f 732c 2063 6f6e 7374 2063 6861  t __s, const cha
0005680: 7220 2a5f 5f72 6573 7472 6963 7420 5f5f  r *__restrict __
0005690: 666f 726d 6174 2c20 5f5f 676e 7563 5f76  format, __gnuc_v
00056a0: 615f 6c69 7374 205f 5f61 7267 2920 5f5f  a_list __arg) __
00056b0: 6173 6d5f 5f20 2822 2220 225f 5f69 736f  asm__ ("" "__iso
00056c0: 6339 395f 7666 7363 616e 6622 290a 0a0a  c99_vfscanf")...
00056d0: 0a20 2020 2020 5f5f 6174 7472 6962 7574  .     __attribut
00056e0: 655f 5f20 2828 5f5f 666f 726d 6174 5f5f  e__ ((__format__
00056f0: 2028 5f5f 7363 616e 665f 5f2c 2032 2c20   (__scanf__, 2, 
0005700: 3029 2929 203b 0a65 7874 6572 6e20 696e  0))) ;.extern in
0005710: 7420 7673 6361 6e66 2028 636f 6e73 7420  t vscanf (const 
0005720: 6368 6172 202a 5f5f 7265 7374 7269 6374  char *__restrict
0005730: 205f 5f66 6f72 6d61 742c 205f 5f67 6e75   __format, __gnu
0005740: 635f 7661 5f6c 6973 7420 5f5f 6172 6729  c_va_list __arg)
0005750: 205f 5f61 736d 5f5f 2028 2222 2022 5f5f   __asm__ ("" "__
0005760: 6973 6f63 3939 5f76 7363 616e 6622 290a  isoc99_vscanf").
0005770: 0a20 2020 2020 5f5f 6174 7472 6962 7574  .     __attribut
0005780: 655f 5f20 2828 5f5f 666f 726d 6174 5f5f  e__ ((__format__
0005790: 2028 5f5f 7363 616e 665f 5f2c 2031 2c20   (__scanf__, 1, 
00057a0: 3029 2929 203b 0a65 7874 6572 6e20 696e  0))) ;.extern in
00057b0: 7420 7673 7363 616e 6620 2863 6f6e 7374  t vsscanf (const
00057c0: 2063 6861 7220 2a5f 5f72 6573 7472 6963   char *__restric
00057d0: 7420 5f5f 732c 2063 6f6e 7374 2063 6861  t __s, const cha
00057e0: 7220 2a5f 5f72 6573 7472 6963 7420 5f5f  r *__restrict __
00057f0: 666f 726d 6174 2c20 5f5f 676e 7563 5f76  format, __gnuc_v
0005800: 615f 6c69 7374 205f 5f61 7267 2920 5f5f  a_list __arg) __
0005810: 6173 6d5f 5f20 2822 2220 225f 5f69 736f  asm__ ("" "__iso
0005820: 6339 395f 7673 7363 616e 6622 2920 5f5f  c99_vsscanf") __
0005830: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
0005840: 6e6f 7468 726f 775f 5f20 2c20 5f5f 6c65  nothrow__ , __le
0005850: 6166 5f5f 2929 0a0a 0a0a 2020 2020 205f  af__))....     _
0005860: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
0005870: 5f66 6f72 6d61 745f 5f20 285f 5f73 6361  _format__ (__sca
0005880: 6e66 5f5f 2c20 322c 2030 2929 293b 0a23  nf__, 2, 0)));.#
0005890: 2035 3232 2022 2f75 7372 2f69 6e63 6c75   522 "/usr/inclu
00058a0: 6465 2f73 7464 696f 2e68 2220 3320 340a  de/stdio.h" 3 4.
00058b0: 0a0a 0a0a 0a0a 0a0a 0a65 7874 6572 6e20  .........extern 
00058c0: 696e 7420 6667 6574 6320 2846 494c 4520  int fgetc (FILE 
00058d0: 2a5f 5f73 7472 6561 6d29 3b0a 6578 7465  *__stream);.exte
00058e0: 726e 2069 6e74 2067 6574 6320 2846 494c  rn int getc (FIL
00058f0: 4520 2a5f 5f73 7472 6561 6d29 3b0a 0a0a  E *__stream);...
0005900: 0a0a 0a65 7874 6572 6e20 696e 7420 6765  ...extern int ge
0005910: 7463 6861 7220 2876 6f69 6429 3b0a 0a23  tchar (void);..#
0005920: 2035 3530 2022 2f75 7372 2f69 6e63 6c75   550 "/usr/inclu
0005930: 6465 2f73 7464 696f 2e68 2220 3320 340a  de/stdio.h" 3 4.
0005940: 6578 7465 726e 2069 6e74 2067 6574 635f  extern int getc_
0005950: 756e 6c6f 636b 6564 2028 4649 4c45 202a  unlocked (FILE *
0005960: 5f5f 7374 7265 616d 293b 0a65 7874 6572  __stream);.exter
0005970: 6e20 696e 7420 6765 7463 6861 725f 756e  n int getchar_un
0005980: 6c6f 636b 6564 2028 766f 6964 293b 0a23  locked (void);.#
0005990: 2035 3631 2022 2f75 7372 2f69 6e63 6c75   561 "/usr/inclu
00059a0: 6465 2f73 7464 696f 2e68 2220 3320 340a  de/stdio.h" 3 4.
00059b0: 6578 7465 726e 2069 6e74 2066 6765 7463  extern int fgetc
00059c0: 5f75 6e6c 6f63 6b65 6420 2846 494c 4520  _unlocked (FILE 
00059d0: 2a5f 5f73 7472 6561 6d29 3b0a 0a0a 0a0a  *__stream);.....
00059e0: 0a0a 0a0a 0a0a 0a65 7874 6572 6e20 696e  .......extern in
00059f0: 7420 6670 7574 6320 2869 6e74 205f 5f63  t fputc (int __c
0005a00: 2c20 4649 4c45 202a 5f5f 7374 7265 616d  , FILE *__stream
0005a10: 293b 0a65 7874 6572 6e20 696e 7420 7075  );.extern int pu
0005a20: 7463 2028 696e 7420 5f5f 632c 2046 494c  tc (int __c, FIL
0005a30: 4520 2a5f 5f73 7472 6561 6d29 3b0a 0a0a  E *__stream);...
0005a40: 0a0a 0a65 7874 6572 6e20 696e 7420 7075  ...extern int pu
0005a50: 7463 6861 7220 2869 6e74 205f 5f63 293b  tchar (int __c);
0005a60: 0a0a 2320 3539 3420 222f 7573 722f 696e  ..# 594 "/usr/in
0005a70: 636c 7564 652f 7374 6469 6f2e 6822 2033  clude/stdio.h" 3
0005a80: 2034 0a65 7874 6572 6e20 696e 7420 6670   4.extern int fp
0005a90: 7574 635f 756e 6c6f 636b 6564 2028 696e  utc_unlocked (in
0005aa0: 7420 5f5f 632c 2046 494c 4520 2a5f 5f73  t __c, FILE *__s
0005ab0: 7472 6561 6d29 3b0a 0a0a 0a0a 0a0a 0a65  tream);........e
0005ac0: 7874 6572 6e20 696e 7420 7075 7463 5f75  xtern int putc_u
0005ad0: 6e6c 6f63 6b65 6420 2869 6e74 205f 5f63  nlocked (int __c
0005ae0: 2c20 4649 4c45 202a 5f5f 7374 7265 616d  , FILE *__stream
0005af0: 293b 0a65 7874 6572 6e20 696e 7420 7075  );.extern int pu
0005b00: 7463 6861 725f 756e 6c6f 636b 6564 2028  tchar_unlocked (
0005b10: 696e 7420 5f5f 6329 3b0a 0a0a 0a0a 0a0a  int __c);.......
0005b20: 6578 7465 726e 2069 6e74 2067 6574 7720  extern int getw 
0005b30: 2846 494c 4520 2a5f 5f73 7472 6561 6d29  (FILE *__stream)
0005b40: 3b0a 0a0a 6578 7465 726e 2069 6e74 2070  ;...extern int p
0005b50: 7574 7720 2869 6e74 205f 5f77 2c20 4649  utw (int __w, FI
0005b60: 4c45 202a 5f5f 7374 7265 616d 293b 0a0a  LE *__stream);..
0005b70: 0a0a 0a0a 0a0a 0a65 7874 6572 6e20 6368  .......extern ch
0005b80: 6172 202a 6667 6574 7320 2863 6861 7220  ar *fgets (char 
0005b90: 2a5f 5f72 6573 7472 6963 7420 5f5f 732c  *__restrict __s,
0005ba0: 2069 6e74 205f 5f6e 2c20 4649 4c45 202a   int __n, FILE *
0005bb0: 5f5f 7265 7374 7269 6374 205f 5f73 7472  __restrict __str
0005bc0: 6561 6d29 0a20 2020 2020 3b0a 2320 3633  eam).     ;.# 63
0005bd0: 3820 222f 7573 722f 696e 636c 7564 652f  8 "/usr/include/
0005be0: 7374 6469 6f2e 6822 2033 2034 0a65 7874  stdio.h" 3 4.ext
0005bf0: 6572 6e20 6368 6172 202a 6765 7473 2028  ern char *gets (
0005c00: 6368 6172 202a 5f5f 7329 205f 5f61 7474  char *__s) __att
0005c10: 7269 6275 7465 5f5f 2028 285f 5f64 6570  ribute__ ((__dep
0005c20: 7265 6361 7465 645f 5f29 293b 0a0a 0a23  recated__));...#
0005c30: 2036 3635 2022 2f75 7372 2f69 6e63 6c75   665 "/usr/inclu
0005c40: 6465 2f73 7464 696f 2e68 2220 3320 340a  de/stdio.h" 3 4.
0005c50: 6578 7465 726e 205f 5f73 7369 7a65 5f74  extern __ssize_t
0005c60: 205f 5f67 6574 6465 6c69 6d20 2863 6861   __getdelim (cha
0005c70: 7220 2a2a 5f5f 7265 7374 7269 6374 205f  r **__restrict _
0005c80: 5f6c 696e 6570 7472 2c0a 2020 2020 2020  _lineptr,.      
0005c90: 2020 2020 7369 7a65 5f74 202a 5f5f 7265      size_t *__re
0005ca0: 7374 7269 6374 205f 5f6e 2c20 696e 7420  strict __n, int 
0005cb0: 5f5f 6465 6c69 6d69 7465 722c 0a20 2020  __delimiter,.   
0005cc0: 2020 2020 2020 2046 494c 4520 2a5f 5f72         FILE *__r
0005cd0: 6573 7472 6963 7420 5f5f 7374 7265 616d  estrict __stream
0005ce0: 2920 3b0a 6578 7465 726e 205f 5f73 7369  ) ;.extern __ssi
0005cf0: 7a65 5f74 2067 6574 6465 6c69 6d20 2863  ze_t getdelim (c
0005d00: 6861 7220 2a2a 5f5f 7265 7374 7269 6374  har **__restrict
0005d10: 205f 5f6c 696e 6570 7472 2c0a 2020 2020   __lineptr,.    
0005d20: 2020 2020 7369 7a65 5f74 202a 5f5f 7265      size_t *__re
0005d30: 7374 7269 6374 205f 5f6e 2c20 696e 7420  strict __n, int 
0005d40: 5f5f 6465 6c69 6d69 7465 722c 0a20 2020  __delimiter,.   
0005d50: 2020 2020 2046 494c 4520 2a5f 5f72 6573       FILE *__res
0005d60: 7472 6963 7420 5f5f 7374 7265 616d 2920  trict __stream) 
0005d70: 3b0a 0a0a 0a0a 0a0a 0a65 7874 6572 6e20  ;........extern 
0005d80: 5f5f 7373 697a 655f 7420 6765 746c 696e  __ssize_t getlin
0005d90: 6520 2863 6861 7220 2a2a 5f5f 7265 7374  e (char **__rest
0005da0: 7269 6374 205f 5f6c 696e 6570 7472 2c0a  rict __lineptr,.
0005db0: 2020 2020 2020 2073 697a 655f 7420 2a5f         size_t *_
0005dc0: 5f72 6573 7472 6963 7420 5f5f 6e2c 0a20  _restrict __n,. 
0005dd0: 2020 2020 2020 4649 4c45 202a 5f5f 7265        FILE *__re
0005de0: 7374 7269 6374 205f 5f73 7472 6561 6d29  strict __stream)
0005df0: 203b 0a0a 0a0a 0a0a 0a0a 0a65 7874 6572   ;.........exter
0005e00: 6e20 696e 7420 6670 7574 7320 2863 6f6e  n int fputs (con
0005e10: 7374 2063 6861 7220 2a5f 5f72 6573 7472  st char *__restr
0005e20: 6963 7420 5f5f 732c 2046 494c 4520 2a5f  ict __s, FILE *_
0005e30: 5f72 6573 7472 6963 7420 5f5f 7374 7265  _restrict __stre
0005e40: 616d 293b 0a0a 0a0a 0a0a 6578 7465 726e  am);......extern
0005e50: 2069 6e74 2070 7574 7320 2863 6f6e 7374   int puts (const
0005e60: 2063 6861 7220 2a5f 5f73 293b 0a0a 0a0a   char *__s);....
0005e70: 0a0a 0a65 7874 6572 6e20 696e 7420 756e  ...extern int un
0005e80: 6765 7463 2028 696e 7420 5f5f 632c 2046  getc (int __c, F
0005e90: 494c 4520 2a5f 5f73 7472 6561 6d29 3b0a  ILE *__stream);.
0005ea0: 0a0a 0a0a 0a0a 6578 7465 726e 2073 697a  ......extern siz
0005eb0: 655f 7420 6672 6561 6420 2876 6f69 6420  e_t fread (void 
0005ec0: 2a5f 5f72 6573 7472 6963 7420 5f5f 7074  *__restrict __pt
0005ed0: 722c 2073 697a 655f 7420 5f5f 7369 7a65  r, size_t __size
0005ee0: 2c0a 2020 2020 2020 2073 697a 655f 7420  ,.       size_t 
0005ef0: 5f5f 6e2c 2046 494c 4520 2a5f 5f72 6573  __n, FILE *__res
0005f00: 7472 6963 7420 5f5f 7374 7265 616d 2920  trict __stream) 
0005f10: 3b0a 0a0a 0a0a 6578 7465 726e 2073 697a  ;.....extern siz
0005f20: 655f 7420 6677 7269 7465 2028 636f 6e73  e_t fwrite (cons
0005f30: 7420 766f 6964 202a 5f5f 7265 7374 7269  t void *__restri
0005f40: 6374 205f 5f70 7472 2c20 7369 7a65 5f74  ct __ptr, size_t
0005f50: 205f 5f73 697a 652c 0a20 2020 2020 2020   __size,.       
0005f60: 2073 697a 655f 7420 5f5f 6e2c 2046 494c   size_t __n, FIL
0005f70: 4520 2a5f 5f72 6573 7472 6963 7420 5f5f  E *__restrict __
0005f80: 7329 3b0a 0a23 2037 3337 2022 2f75 7372  s);..# 737 "/usr
0005f90: 2f69 6e63 6c75 6465 2f73 7464 696f 2e68  /include/stdio.h
0005fa0: 2220 3320 340a 6578 7465 726e 2073 697a  " 3 4.extern siz
0005fb0: 655f 7420 6672 6561 645f 756e 6c6f 636b  e_t fread_unlock
0005fc0: 6564 2028 766f 6964 202a 5f5f 7265 7374  ed (void *__rest
0005fd0: 7269 6374 205f 5f70 7472 2c20 7369 7a65  rict __ptr, size
0005fe0: 5f74 205f 5f73 697a 652c 0a20 2020 2020  _t __size,.     
0005ff0: 2020 2020 7369 7a65 5f74 205f 5f6e 2c20      size_t __n, 
0006000: 4649 4c45 202a 5f5f 7265 7374 7269 6374  FILE *__restrict
0006010: 205f 5f73 7472 6561 6d29 203b 0a65 7874   __stream) ;.ext
0006020: 6572 6e20 7369 7a65 5f74 2066 7772 6974  ern size_t fwrit
0006030: 655f 756e 6c6f 636b 6564 2028 636f 6e73  e_unlocked (cons
0006040: 7420 766f 6964 202a 5f5f 7265 7374 7269  t void *__restri
0006050: 6374 205f 5f70 7472 2c20 7369 7a65 5f74  ct __ptr, size_t
0006060: 205f 5f73 697a 652c 0a20 2020 2020 2020   __size,.       
0006070: 2020 2073 697a 655f 7420 5f5f 6e2c 2046     size_t __n, F
0006080: 494c 4520 2a5f 5f72 6573 7472 6963 7420  ILE *__restrict 
0006090: 5f5f 7374 7265 616d 293b 0a0a 0a0a 0a0a  __stream);......
00060a0: 0a0a 0a65 7874 6572 6e20 696e 7420 6673  ...extern int fs
00060b0: 6565 6b20 2846 494c 4520 2a5f 5f73 7472  eek (FILE *__str
00060c0: 6561 6d2c 206c 6f6e 6720 696e 7420 5f5f  eam, long int __
00060d0: 6f66 662c 2069 6e74 205f 5f77 6865 6e63  off, int __whenc
00060e0: 6529 3b0a 0a0a 0a0a 6578 7465 726e 206c  e);.....extern l
00060f0: 6f6e 6720 696e 7420 6674 656c 6c20 2846  ong int ftell (F
0006100: 494c 4520 2a5f 5f73 7472 6561 6d29 203b  ILE *__stream) ;
0006110: 0a0a 0a0a 0a65 7874 6572 6e20 766f 6964  .....extern void
0006120: 2072 6577 696e 6420 2846 494c 4520 2a5f   rewind (FILE *_
0006130: 5f73 7472 6561 6d29 3b0a 0a23 2037 3733  _stream);..# 773
0006140: 2022 2f75 7372 2f69 6e63 6c75 6465 2f73   "/usr/include/s
0006150: 7464 696f 2e68 2220 3320 340a 6578 7465  tdio.h" 3 4.exte
0006160: 726e 2069 6e74 2066 7365 656b 6f20 2846  rn int fseeko (F
0006170: 494c 4520 2a5f 5f73 7472 6561 6d2c 205f  ILE *__stream, _
0006180: 5f6f 6666 5f74 205f 5f6f 6666 2c20 696e  _off_t __off, in
0006190: 7420 5f5f 7768 656e 6365 293b 0a0a 0a0a  t __whence);....
00061a0: 0a65 7874 6572 6e20 5f5f 6f66 665f 7420  .extern __off_t 
00061b0: 6674 656c 6c6f 2028 4649 4c45 202a 5f5f  ftello (FILE *__
00061c0: 7374 7265 616d 2920 3b0a 2320 3739 3220  stream) ;.# 792 
00061d0: 222f 7573 722f 696e 636c 7564 652f 7374  "/usr/include/st
00061e0: 6469 6f2e 6822 2033 2034 0a0a 0a0a 0a0a  dio.h" 3 4......
00061f0: 0a65 7874 6572 6e20 696e 7420 6667 6574  .extern int fget
0006200: 706f 7320 2846 494c 4520 2a5f 5f72 6573  pos (FILE *__res
0006210: 7472 6963 7420 5f5f 7374 7265 616d 2c20  trict __stream, 
0006220: 6670 6f73 5f74 202a 5f5f 7265 7374 7269  fpos_t *__restri
0006230: 6374 205f 5f70 6f73 293b 0a0a 0a0a 0a65  ct __pos);.....e
0006240: 7874 6572 6e20 696e 7420 6673 6574 706f  xtern int fsetpo
0006250: 7320 2846 494c 4520 2a5f 5f73 7472 6561  s (FILE *__strea
0006260: 6d2c 2063 6f6e 7374 2066 706f 735f 7420  m, const fpos_t 
0006270: 2a5f 5f70 6f73 293b 0a23 2038 3135 2022  *__pos);.# 815 "
0006280: 2f75 7372 2f69 6e63 6c75 6465 2f73 7464  /usr/include/std
0006290: 696f 2e68 2220 3320 340a 0a23 2038 3234  io.h" 3 4..# 824
00062a0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f73   "/usr/include/s
00062b0: 7464 696f 2e68 2220 3320 340a 0a0a 6578  tdio.h" 3 4...ex
00062c0: 7465 726e 2076 6f69 6420 636c 6561 7265  tern void cleare
00062d0: 7272 2028 4649 4c45 202a 5f5f 7374 7265  rr (FILE *__stre
00062e0: 616d 2920 5f5f 6174 7472 6962 7574 655f  am) __attribute_
00062f0: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
0006300: 2c20 5f5f 6c65 6166 5f5f 2929 3b0a 0a65  , __leaf__));..e
0006310: 7874 6572 6e20 696e 7420 6665 6f66 2028  xtern int feof (
0006320: 4649 4c45 202a 5f5f 7374 7265 616d 2920  FILE *__stream) 
0006330: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
0006340: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
0006350: 6c65 6166 5f5f 2929 203b 0a0a 6578 7465  leaf__)) ;..exte
0006360: 726e 2069 6e74 2066 6572 726f 7220 2846  rn int ferror (F
0006370: 494c 4520 2a5f 5f73 7472 6561 6d29 205f  ILE *__stream) _
0006380: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
0006390: 5f6e 6f74 6872 6f77 5f5f 202c 205f 5f6c  _nothrow__ , __l
00063a0: 6561 665f 5f29 2920 3b0a 0a0a 0a0a 6578  eaf__)) ;.....ex
00063b0: 7465 726e 2076 6f69 6420 636c 6561 7265  tern void cleare
00063c0: 7272 5f75 6e6c 6f63 6b65 6420 2846 494c  rr_unlocked (FIL
00063d0: 4520 2a5f 5f73 7472 6561 6d29 205f 5f61  E *__stream) __a
00063e0: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
00063f0: 6f74 6872 6f77 5f5f 202c 205f 5f6c 6561  othrow__ , __lea
0006400: 665f 5f29 293b 0a65 7874 6572 6e20 696e  f__));.extern in
0006410: 7420 6665 6f66 5f75 6e6c 6f63 6b65 6420  t feof_unlocked 
0006420: 2846 494c 4520 2a5f 5f73 7472 6561 6d29  (FILE *__stream)
0006430: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0006440: 285f 5f6e 6f74 6872 6f77 5f5f 202c 205f  (__nothrow__ , _
0006450: 5f6c 6561 665f 5f29 2920 3b0a 6578 7465  _leaf__)) ;.exte
0006460: 726e 2069 6e74 2066 6572 726f 725f 756e  rn int ferror_un
0006470: 6c6f 636b 6564 2028 4649 4c45 202a 5f5f  locked (FILE *__
0006480: 7374 7265 616d 2920 5f5f 6174 7472 6962  stream) __attrib
0006490: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
00064a0: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
00064b0: 203b 0a0a 0a0a 0a0a 0a0a 0a65 7874 6572   ;.........exter
00064c0: 6e20 766f 6964 2070 6572 726f 7220 2863  n void perror (c
00064d0: 6f6e 7374 2063 6861 7220 2a5f 5f73 293b  onst char *__s);
00064e0: 0a0a 0a0a 0a0a 0a23 2031 2022 2f75 7372  .......# 1 "/usr
00064f0: 2f69 6e63 6c75 6465 2f62 6974 732f 7379  /include/bits/sy
0006500: 735f 6572 726c 6973 742e 6822 2031 2033  s_errlist.h" 1 3
0006510: 2034 0a23 2032 3620 222f 7573 722f 696e   4.# 26 "/usr/in
0006520: 636c 7564 652f 6269 7473 2f73 7973 5f65  clude/bits/sys_e
0006530: 7272 6c69 7374 2e68 2220 3320 340a 6578  rrlist.h" 3 4.ex
0006540: 7465 726e 2069 6e74 2073 7973 5f6e 6572  tern int sys_ner
0006550: 723b 0a65 7874 6572 6e20 636f 6e73 7420  r;.extern const 
0006560: 6368 6172 202a 636f 6e73 7420 7379 735f  char *const sys_
0006570: 6572 726c 6973 745b 5d3b 0a23 2038 3534  errlist[];.# 854
0006580: 2022 2f75 7372 2f69 6e63 6c75 6465 2f73   "/usr/include/s
0006590: 7464 696f 2e68 2220 3220 3320 340a 0a0a  tdio.h" 2 3 4...
00065a0: 0a0a 6578 7465 726e 2069 6e74 2066 696c  ..extern int fil
00065b0: 656e 6f20 2846 494c 4520 2a5f 5f73 7472  eno (FILE *__str
00065c0: 6561 6d29 205f 5f61 7474 7269 6275 7465  eam) __attribute
00065d0: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
00065e0: 202c 205f 5f6c 6561 665f 5f29 2920 3b0a   , __leaf__)) ;.
00065f0: 0a0a 0a0a 6578 7465 726e 2069 6e74 2066  ....extern int f
0006600: 696c 656e 6f5f 756e 6c6f 636b 6564 2028  ileno_unlocked (
0006610: 4649 4c45 202a 5f5f 7374 7265 616d 2920  FILE *__stream) 
0006620: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
0006630: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
0006640: 6c65 6166 5f5f 2929 203b 0a23 2038 3733  leaf__)) ;.# 873
0006650: 2022 2f75 7372 2f69 6e63 6c75 6465 2f73   "/usr/include/s
0006660: 7464 696f 2e68 2220 3320 340a 6578 7465  tdio.h" 3 4.exte
0006670: 726e 2046 494c 4520 2a70 6f70 656e 2028  rn FILE *popen (
0006680: 636f 6e73 7420 6368 6172 202a 5f5f 636f  const char *__co
0006690: 6d6d 616e 642c 2063 6f6e 7374 2063 6861  mmand, const cha
00066a0: 7220 2a5f 5f6d 6f64 6573 2920 3b0a 0a0a  r *__modes) ;...
00066b0: 0a0a 0a65 7874 6572 6e20 696e 7420 7063  ...extern int pc
00066c0: 6c6f 7365 2028 4649 4c45 202a 5f5f 7374  lose (FILE *__st
00066d0: 7265 616d 293b 0a0a 0a0a 0a0a 6578 7465  ream);......exte
00066e0: 726e 2063 6861 7220 2a63 7465 726d 6964  rn char *ctermid
00066f0: 2028 6368 6172 202a 5f5f 7329 205f 5f61   (char *__s) __a
0006700: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
0006710: 6f74 6872 6f77 5f5f 202c 205f 5f6c 6561  othrow__ , __lea
0006720: 665f 5f29 293b 0a23 2039 3133 2022 2f75  f__));.# 913 "/u
0006730: 7372 2f69 6e63 6c75 6465 2f73 7464 696f  sr/include/stdio
0006740: 2e68 2220 3320 340a 6578 7465 726e 2076  .h" 3 4.extern v
0006750: 6f69 6420 666c 6f63 6b66 696c 6520 2846  oid flockfile (F
0006760: 494c 4520 2a5f 5f73 7472 6561 6d29 205f  ILE *__stream) _
0006770: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
0006780: 5f6e 6f74 6872 6f77 5f5f 202c 205f 5f6c  _nothrow__ , __l
0006790: 6561 665f 5f29 293b 0a0a 0a0a 6578 7465  eaf__));....exte
00067a0: 726e 2069 6e74 2066 7472 796c 6f63 6b66  rn int ftrylockf
00067b0: 696c 6520 2846 494c 4520 2a5f 5f73 7472  ile (FILE *__str
00067c0: 6561 6d29 205f 5f61 7474 7269 6275 7465  eam) __attribute
00067d0: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
00067e0: 202c 205f 5f6c 6561 665f 5f29 2920 3b0a   , __leaf__)) ;.
00067f0: 0a0a 6578 7465 726e 2076 6f69 6420 6675  ..extern void fu
0006800: 6e6c 6f63 6b66 696c 6520 2846 494c 4520  nlockfile (FILE 
0006810: 2a5f 5f73 7472 6561 6d29 205f 5f61 7474  *__stream) __att
0006820: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
0006830: 6872 6f77 5f5f 202c 205f 5f6c 6561 665f  hrow__ , __leaf_
0006840: 5f29 293b 0a23 2039 3433 2022 2f75 7372  _));.# 943 "/usr
0006850: 2f69 6e63 6c75 6465 2f73 7464 696f 2e68  /include/stdio.h
0006860: 2220 3320 340a 0a23 2031 3232 2022 6431  " 3 4..# 122 "d1
0006870: 5f62 6f74 682e 6322 2032 0a23 2031 2022  _both.c" 2.# 1 "
0006880: 7373 6c5f 6c6f 636c 2e68 2220 310a 2320  ssl_locl.h" 1.# 
0006890: 3134 3520 2273 736c 5f6c 6f63 6c2e 6822  145 "ssl_locl.h"
00068a0: 0a23 2031 2022 2f75 7372 2f69 6e63 6c75  .# 1 "/usr/inclu
00068b0: 6465 2f73 7464 6c69 622e 6822 2031 2033  de/stdlib.h" 1 3
00068c0: 2034 0a23 2033 3220 222f 7573 722f 696e   4.# 32 "/usr/in
00068d0: 636c 7564 652f 7374 646c 6962 2e68 2220  clude/stdlib.h" 
00068e0: 3320 340a 2320 3120 222f 7573 722f 6c69  3 4.# 1 "/usr/li
00068f0: 622f 6763 632f 7838 365f 3634 2d72 6564  b/gcc/x86_64-red
0006900: 6861 742d 6c69 6e75 782f 342e 382e 332f  hat-linux/4.8.3/
0006910: 696e 636c 7564 652f 7374 6464 6566 2e68  include/stddef.h
0006920: 2220 3120 3320 340a 2320 3332 3420 222f  " 1 3 4.# 324 "/
0006930: 7573 722f 6c69 622f 6763 632f 7838 365f  usr/lib/gcc/x86_
0006940: 3634 2d72 6564 6861 742d 6c69 6e75 782f  64-redhat-linux/
0006950: 342e 382e 332f 696e 636c 7564 652f 7374  4.8.3/include/st
0006960: 6464 6566 2e68 2220 3320 340a 7479 7065  ddef.h" 3 4.type
0006970: 6465 6620 696e 7420 7763 6861 725f 743b  def int wchar_t;
0006980: 0a23 2033 3320 222f 7573 722f 696e 636c  .# 33 "/usr/incl
0006990: 7564 652f 7374 646c 6962 2e68 2220 3220  ude/stdlib.h" 2 
00069a0: 3320 340a 0a0a 0a0a 0a0a 0a0a 2320 3120  3 4.........# 1 
00069b0: 222f 7573 722f 696e 636c 7564 652f 6269  "/usr/include/bi
00069c0: 7473 2f77 6169 7466 6c61 6773 2e68 2220  ts/waitflags.h" 
00069d0: 3120 3320 340a 2320 3432 2022 2f75 7372  1 3 4.# 42 "/usr
00069e0: 2f69 6e63 6c75 6465 2f73 7464 6c69 622e  /include/stdlib.
00069f0: 6822 2032 2033 2034 0a23 2031 2022 2f75  h" 2 3 4.# 1 "/u
0006a00: 7372 2f69 6e63 6c75 6465 2f62 6974 732f  sr/include/bits/
0006a10: 7761 6974 7374 6174 7573 2e68 2220 3120  waitstatus.h" 1 
0006a20: 3320 340a 2320 3634 2022 2f75 7372 2f69  3 4.# 64 "/usr/i
0006a30: 6e63 6c75 6465 2f62 6974 732f 7761 6974  nclude/bits/wait
0006a40: 7374 6174 7573 2e68 2220 3320 340a 2320  status.h" 3 4.# 
0006a50: 3120 222f 7573 722f 696e 636c 7564 652f  1 "/usr/include/
0006a60: 656e 6469 616e 2e68 2220 3120 3320 340a  endian.h" 1 3 4.
0006a70: 2320 3336 2022 2f75 7372 2f69 6e63 6c75  # 36 "/usr/inclu
0006a80: 6465 2f65 6e64 6961 6e2e 6822 2033 2034  de/endian.h" 3 4
0006a90: 0a23 2031 2022 2f75 7372 2f69 6e63 6c75  .# 1 "/usr/inclu
0006aa0: 6465 2f62 6974 732f 656e 6469 616e 2e68  de/bits/endian.h
0006ab0: 2220 3120 3320 340a 2320 3337 2022 2f75  " 1 3 4.# 37 "/u
0006ac0: 7372 2f69 6e63 6c75 6465 2f65 6e64 6961  sr/include/endia
0006ad0: 6e2e 6822 2032 2033 2034 0a23 2036 3020  n.h" 2 3 4.# 60 
0006ae0: 222f 7573 722f 696e 636c 7564 652f 656e  "/usr/include/en
0006af0: 6469 616e 2e68 2220 3320 340a 2320 3120  dian.h" 3 4.# 1 
0006b00: 222f 7573 722f 696e 636c 7564 652f 6269  "/usr/include/bi
0006b10: 7473 2f62 7974 6573 7761 702e 6822 2031  ts/byteswap.h" 1
0006b20: 2033 2034 0a23 2032 3820 222f 7573 722f   3 4.# 28 "/usr/
0006b30: 696e 636c 7564 652f 6269 7473 2f62 7974  include/bits/byt
0006b40: 6573 7761 702e 6822 2033 2034 0a23 2031  eswap.h" 3 4.# 1
0006b50: 2022 2f75 7372 2f69 6e63 6c75 6465 2f62   "/usr/include/b
0006b60: 6974 732f 776f 7264 7369 7a65 2e68 2220  its/wordsize.h" 
0006b70: 3120 3320 340a 2320 3239 2022 2f75 7372  1 3 4.# 29 "/usr
0006b80: 2f69 6e63 6c75 6465 2f62 6974 732f 6279  /include/bits/by
0006b90: 7465 7377 6170 2e68 2220 3220 3320 340a  teswap.h" 2 3 4.
0006ba0: 0a0a 0a0a 0a0a 2320 3120 222f 7573 722f  ......# 1 "/usr/
0006bb0: 696e 636c 7564 652f 6269 7473 2f62 7974  include/bits/byt
0006bc0: 6573 7761 702d 3136 2e68 2220 3120 3320  eswap-16.h" 1 3 
0006bd0: 340a 2320 3336 2022 2f75 7372 2f69 6e63  4.# 36 "/usr/inc
0006be0: 6c75 6465 2f62 6974 732f 6279 7465 7377  lude/bits/bytesw
0006bf0: 6170 2e68 2220 3220 3320 340a 2320 3434  ap.h" 2 3 4.# 44
0006c00: 2022 2f75 7372 2f69 6e63 6c75 6465 2f62   "/usr/include/b
0006c10: 6974 732f 6279 7465 7377 6170 2e68 2220  its/byteswap.h" 
0006c20: 3320 340a 7374 6174 6963 205f 5f69 6e6c  3 4.static __inl
0006c30: 696e 6520 756e 7369 676e 6564 2069 6e74  ine unsigned int
0006c40: 0a5f 5f62 7377 6170 5f33 3220 2875 6e73  .__bswap_32 (uns
0006c50: 6967 6e65 6420 696e 7420 5f5f 6273 7829  igned int __bsx)
0006c60: 0a7b 0a20 2072 6574 7572 6e20 5f5f 6275  .{.  return __bu
0006c70: 696c 7469 6e5f 6273 7761 7033 3220 285f  iltin_bswap32 (_
0006c80: 5f62 7378 293b 0a7d 0a23 2031 3038 2022  _bsx);.}.# 108 "
0006c90: 2f75 7372 2f69 6e63 6c75 6465 2f62 6974  /usr/include/bit
0006ca0: 732f 6279 7465 7377 6170 2e68 2220 3320  s/byteswap.h" 3 
0006cb0: 340a 7374 6174 6963 205f 5f69 6e6c 696e  4.static __inlin
0006cc0: 6520 5f5f 7569 6e74 3634 5f74 0a5f 5f62  e __uint64_t.__b
0006cd0: 7377 6170 5f36 3420 285f 5f75 696e 7436  swap_64 (__uint6
0006ce0: 345f 7420 5f5f 6273 7829 0a7b 0a20 2072  4_t __bsx).{.  r
0006cf0: 6574 7572 6e20 5f5f 6275 696c 7469 6e5f  eturn __builtin_
0006d00: 6273 7761 7036 3420 285f 5f62 7378 293b  bswap64 (__bsx);
0006d10: 0a7d 0a23 2036 3120 222f 7573 722f 696e  .}.# 61 "/usr/in
0006d20: 636c 7564 652f 656e 6469 616e 2e68 2220  clude/endian.h" 
0006d30: 3220 3320 340a 2320 3635 2022 2f75 7372  2 3 4.# 65 "/usr
0006d40: 2f69 6e63 6c75 6465 2f62 6974 732f 7761  /include/bits/wa
0006d50: 6974 7374 6174 7573 2e68 2220 3220 3320  itstatus.h" 2 3 
0006d60: 340a 0a75 6e69 6f6e 2077 6169 740a 2020  4..union wait.  
0006d70: 7b0a 2020 2020 696e 7420 775f 7374 6174  {.    int w_stat
0006d80: 7573 3b0a 2020 2020 7374 7275 6374 0a20  us;.    struct. 
0006d90: 2020 2020 207b 0a0a 2075 6e73 6967 6e65       {.. unsigne
0006da0: 6420 696e 7420 5f5f 775f 7465 726d 7369  d int __w_termsi
0006db0: 673a 373b 0a20 756e 7369 676e 6564 2069  g:7;. unsigned i
0006dc0: 6e74 205f 5f77 5f63 6f72 6564 756d 703a  nt __w_coredump:
0006dd0: 313b 0a20 756e 7369 676e 6564 2069 6e74  1;. unsigned int
0006de0: 205f 5f77 5f72 6574 636f 6465 3a38 3b0a   __w_retcode:8;.
0006df0: 2075 6e73 6967 6e65 6420 696e 743a 3136   unsigned int:16
0006e00: 3b0a 0a0a 0a0a 0a0a 0a20 2020 2020 207d  ;........      }
0006e10: 205f 5f77 6169 745f 7465 726d 696e 6174   __wait_terminat
0006e20: 6564 3b0a 2020 2020 7374 7275 6374 0a20  ed;.    struct. 
0006e30: 2020 2020 207b 0a0a 2075 6e73 6967 6e65       {.. unsigne
0006e40: 6420 696e 7420 5f5f 775f 7374 6f70 7661  d int __w_stopva
0006e50: 6c3a 383b 0a20 756e 7369 676e 6564 2069  l:8;. unsigned i
0006e60: 6e74 205f 5f77 5f73 746f 7073 6967 3a38  nt __w_stopsig:8
0006e70: 3b0a 2075 6e73 6967 6e65 6420 696e 743a  ;. unsigned int:
0006e80: 3136 3b0a 0a0a 0a0a 0a0a 2020 2020 2020  16;.......      
0006e90: 7d20 5f5f 7761 6974 5f73 746f 7070 6564  } __wait_stopped
0006ea0: 3b0a 2020 7d3b 0a23 2034 3320 222f 7573  ;.  };.# 43 "/us
0006eb0: 722f 696e 636c 7564 652f 7374 646c 6962  r/include/stdlib
0006ec0: 2e68 2220 3220 3320 340a 2320 3637 2022  .h" 2 3 4.# 67 "
0006ed0: 2f75 7372 2f69 6e63 6c75 6465 2f73 7464  /usr/include/std
0006ee0: 6c69 622e 6822 2033 2034 0a74 7970 6564  lib.h" 3 4.typed
0006ef0: 6566 2075 6e69 6f6e 0a20 207b 0a20 2020  ef union.  {.   
0006f00: 2075 6e69 6f6e 2077 6169 7420 2a5f 5f75   union wait *__u
0006f10: 7074 723b 0a20 2020 2069 6e74 202a 5f5f  ptr;.    int *__
0006f20: 6970 7472 3b0a 2020 7d20 5f5f 5741 4954  iptr;.  } __WAIT
0006f30: 5f53 5441 5455 5320 5f5f 6174 7472 6962  _STATUS __attrib
0006f40: 7574 655f 5f20 2828 5f5f 7472 616e 7370  ute__ ((__transp
0006f50: 6172 656e 745f 756e 696f 6e5f 5f29 293b  arent_union__));
0006f60: 0a23 2039 3520 222f 7573 722f 696e 636c  .# 95 "/usr/incl
0006f70: 7564 652f 7374 646c 6962 2e68 2220 3320  ude/stdlib.h" 3 
0006f80: 340a 0a0a 7479 7065 6465 6620 7374 7275  4...typedef stru
0006f90: 6374 0a20 207b 0a20 2020 2069 6e74 2071  ct.  {.    int q
0006fa0: 756f 743b 0a20 2020 2069 6e74 2072 656d  uot;.    int rem
0006fb0: 3b0a 2020 7d20 6469 765f 743b 0a0a 0a0a  ;.  } div_t;....
0006fc0: 7479 7065 6465 6620 7374 7275 6374 0a20  typedef struct. 
0006fd0: 207b 0a20 2020 206c 6f6e 6720 696e 7420   {.    long int 
0006fe0: 7175 6f74 3b0a 2020 2020 6c6f 6e67 2069  quot;.    long i
0006ff0: 6e74 2072 656d 3b0a 2020 7d20 6c64 6976  nt rem;.  } ldiv
0007000: 5f74 3b0a 0a0a 0a0a 0a0a 0a5f 5f65 7874  _t;........__ext
0007010: 656e 7369 6f6e 5f5f 2074 7970 6564 6566  ension__ typedef
0007020: 2073 7472 7563 740a 2020 7b0a 2020 2020   struct.  {.    
0007030: 6c6f 6e67 206c 6f6e 6720 696e 7420 7175  long long int qu
0007040: 6f74 3b0a 2020 2020 6c6f 6e67 206c 6f6e  ot;.    long lon
0007050: 6720 696e 7420 7265 6d3b 0a20 207d 206c  g int rem;.  } l
0007060: 6c64 6976 5f74 3b0a 0a0a 2320 3133 3920  ldiv_t;...# 139 
0007070: 222f 7573 722f 696e 636c 7564 652f 7374  "/usr/include/st
0007080: 646c 6962 2e68 2220 3320 340a 6578 7465  dlib.h" 3 4.exte
0007090: 726e 2073 697a 655f 7420 5f5f 6374 7970  rn size_t __ctyp
00070a0: 655f 6765 745f 6d62 5f63 7572 5f6d 6178  e_get_mb_cur_max
00070b0: 2028 766f 6964 2920 5f5f 6174 7472 6962   (void) __attrib
00070c0: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
00070d0: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
00070e0: 203b 0a0a 0a0a 0a65 7874 6572 6e20 646f   ;.....extern do
00070f0: 7562 6c65 2061 746f 6620 2863 6f6e 7374  uble atof (const
0007100: 2063 6861 7220 2a5f 5f6e 7074 7229 0a20   char *__nptr). 
0007110: 2020 2020 5f5f 6174 7472 6962 7574 655f      __attribute_
0007120: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
0007130: 2c20 5f5f 6c65 6166 5f5f 2929 205f 5f61  , __leaf__)) __a
0007140: 7474 7269 6275 7465 5f5f 2028 285f 5f70  ttribute__ ((__p
0007150: 7572 655f 5f29 2920 5f5f 6174 7472 6962  ure__)) __attrib
0007160: 7574 655f 5f20 2828 5f5f 6e6f 6e6e 756c  ute__ ((__nonnul
0007170: 6c5f 5f20 2831 2929 2920 3b0a 0a65 7874  l__ (1))) ;..ext
0007180: 6572 6e20 696e 7420 6174 6f69 2028 636f  ern int atoi (co
0007190: 6e73 7420 6368 6172 202a 5f5f 6e70 7472  nst char *__nptr
00071a0: 290a 2020 2020 205f 5f61 7474 7269 6275  ).     __attribu
00071b0: 7465 5f5f 2028 285f 5f6e 6f74 6872 6f77  te__ ((__nothrow
00071c0: 5f5f 202c 205f 5f6c 6561 665f 5f29 2920  __ , __leaf__)) 
00071d0: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
00071e0: 5f5f 7075 7265 5f5f 2929 205f 5f61 7474  __pure__)) __att
00071f0: 7269 6275 7465 5f5f 2028 285f 5f6e 6f6e  ribute__ ((__non
0007200: 6e75 6c6c 5f5f 2028 3129 2929 203b 0a0a  null__ (1))) ;..
0007210: 6578 7465 726e 206c 6f6e 6720 696e 7420  extern long int 
0007220: 6174 6f6c 2028 636f 6e73 7420 6368 6172  atol (const char
0007230: 202a 5f5f 6e70 7472 290a 2020 2020 205f   *__nptr).     _
0007240: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
0007250: 5f6e 6f74 6872 6f77 5f5f 202c 205f 5f6c  _nothrow__ , __l
0007260: 6561 665f 5f29 2920 5f5f 6174 7472 6962  eaf__)) __attrib
0007270: 7574 655f 5f20 2828 5f5f 7075 7265 5f5f  ute__ ((__pure__
0007280: 2929 205f 5f61 7474 7269 6275 7465 5f5f  )) __attribute__
0007290: 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f 2028   ((__nonnull__ (
00072a0: 3129 2929 203b 0a0a 0a0a 0a0a 5f5f 6578  1))) ;......__ex
00072b0: 7465 6e73 696f 6e5f 5f20 6578 7465 726e  tension__ extern
00072c0: 206c 6f6e 6720 6c6f 6e67 2069 6e74 2061   long long int a
00072d0: 746f 6c6c 2028 636f 6e73 7420 6368 6172  toll (const char
00072e0: 202a 5f5f 6e70 7472 290a 2020 2020 205f   *__nptr).     _
00072f0: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
0007300: 5f6e 6f74 6872 6f77 5f5f 202c 205f 5f6c  _nothrow__ , __l
0007310: 6561 665f 5f29 2920 5f5f 6174 7472 6962  eaf__)) __attrib
0007320: 7574 655f 5f20 2828 5f5f 7075 7265 5f5f  ute__ ((__pure__
0007330: 2929 205f 5f61 7474 7269 6275 7465 5f5f  )) __attribute__
0007340: 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f 2028   ((__nonnull__ (
0007350: 3129 2929 203b 0a0a 0a0a 0a0a 6578 7465  1))) ;......exte
0007360: 726e 2064 6f75 626c 6520 7374 7274 6f64  rn double strtod
0007370: 2028 636f 6e73 7420 6368 6172 202a 5f5f   (const char *__
0007380: 7265 7374 7269 6374 205f 5f6e 7074 722c  restrict __nptr,
0007390: 0a20 2020 2020 2020 2063 6861 7220 2a2a  .        char **
00073a0: 5f5f 7265 7374 7269 6374 205f 5f65 6e64  __restrict __end
00073b0: 7074 7229 0a20 2020 2020 5f5f 6174 7472  ptr).     __attr
00073c0: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
00073d0: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
00073e0: 2929 205f 5f61 7474 7269 6275 7465 5f5f  )) __attribute__
00073f0: 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f 2028   ((__nonnull__ (
0007400: 3129 2929 3b0a 0a0a 0a0a 0a65 7874 6572  1)));......exter
0007410: 6e20 666c 6f61 7420 7374 7274 6f66 2028  n float strtof (
0007420: 636f 6e73 7420 6368 6172 202a 5f5f 7265  const char *__re
0007430: 7374 7269 6374 205f 5f6e 7074 722c 0a20  strict __nptr,. 
0007440: 2020 2020 2020 6368 6172 202a 2a5f 5f72        char **__r
0007450: 6573 7472 6963 7420 5f5f 656e 6470 7472  estrict __endptr
0007460: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
0007470: 2828 5f5f 6e6f 7468 726f 775f 5f20 2c20  ((__nothrow__ , 
0007480: 5f5f 6c65 6166 5f5f 2929 205f 5f61 7474  __leaf__)) __att
0007490: 7269 6275 7465 5f5f 2028 285f 5f6e 6f6e  ribute__ ((__non
00074a0: 6e75 6c6c 5f5f 2028 3129 2929 3b0a 0a65  null__ (1)));..e
00074b0: 7874 6572 6e20 6c6f 6e67 2064 6f75 626c  xtern long doubl
00074c0: 6520 7374 7274 6f6c 6420 2863 6f6e 7374  e strtold (const
00074d0: 2063 6861 7220 2a5f 5f72 6573 7472 6963   char *__restric
00074e0: 7420 5f5f 6e70 7472 2c0a 2020 2020 2020  t __nptr,.      
00074f0: 2063 6861 7220 2a2a 5f5f 7265 7374 7269   char **__restri
0007500: 6374 205f 5f65 6e64 7074 7229 0a20 2020  ct __endptr).   
0007510: 2020 5f5f 6174 7472 6962 7574 655f 5f20    __attribute__ 
0007520: 2828 5f5f 6e6f 7468 726f 775f 5f20 2c20  ((__nothrow__ , 
0007530: 5f5f 6c65 6166 5f5f 2929 205f 5f61 7474  __leaf__)) __att
0007540: 7269 6275 7465 5f5f 2028 285f 5f6e 6f6e  ribute__ ((__non
0007550: 6e75 6c6c 5f5f 2028 3129 2929 3b0a 0a0a  null__ (1)));...
0007560: 0a0a 0a65 7874 6572 6e20 6c6f 6e67 2069  ...extern long i
0007570: 6e74 2073 7472 746f 6c20 2863 6f6e 7374  nt strtol (const
0007580: 2063 6861 7220 2a5f 5f72 6573 7472 6963   char *__restric
0007590: 7420 5f5f 6e70 7472 2c0a 2020 2063 6861  t __nptr,.   cha
00075a0: 7220 2a2a 5f5f 7265 7374 7269 6374 205f  r **__restrict _
00075b0: 5f65 6e64 7074 722c 2069 6e74 205f 5f62  _endptr, int __b
00075c0: 6173 6529 0a20 2020 2020 5f5f 6174 7472  ase).     __attr
00075d0: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
00075e0: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
00075f0: 2929 205f 5f61 7474 7269 6275 7465 5f5f  )) __attribute__
0007600: 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f 2028   ((__nonnull__ (
0007610: 3129 2929 3b0a 0a65 7874 6572 6e20 756e  1)));..extern un
0007620: 7369 676e 6564 206c 6f6e 6720 696e 7420  signed long int 
0007630: 7374 7274 6f75 6c20 2863 6f6e 7374 2063  strtoul (const c
0007640: 6861 7220 2a5f 5f72 6573 7472 6963 7420  har *__restrict 
0007650: 5f5f 6e70 7472 2c0a 2020 2020 2020 6368  __nptr,.      ch
0007660: 6172 202a 2a5f 5f72 6573 7472 6963 7420  ar **__restrict 
0007670: 5f5f 656e 6470 7472 2c20 696e 7420 5f5f  __endptr, int __
0007680: 6261 7365 290a 2020 2020 205f 5f61 7474  base).     __att
0007690: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
00076a0: 6872 6f77 5f5f 202c 205f 5f6c 6561 665f  hrow__ , __leaf_
00076b0: 5f29 2920 5f5f 6174 7472 6962 7574 655f  _)) __attribute_
00076c0: 5f20 2828 5f5f 6e6f 6e6e 756c 6c5f 5f20  _ ((__nonnull__ 
00076d0: 2831 2929 293b 0a0a 0a0a 0a5f 5f65 7874  (1)));.....__ext
00076e0: 656e 7369 6f6e 5f5f 0a65 7874 6572 6e20  ension__.extern 
00076f0: 6c6f 6e67 206c 6f6e 6720 696e 7420 7374  long long int st
0007700: 7274 6f71 2028 636f 6e73 7420 6368 6172  rtoq (const char
0007710: 202a 5f5f 7265 7374 7269 6374 205f 5f6e   *__restrict __n
0007720: 7074 722c 0a20 2020 2020 2020 2063 6861  ptr,.        cha
0007730: 7220 2a2a 5f5f 7265 7374 7269 6374 205f  r **__restrict _
0007740: 5f65 6e64 7074 722c 2069 6e74 205f 5f62  _endptr, int __b
0007750: 6173 6529 0a20 2020 2020 5f5f 6174 7472  ase).     __attr
0007760: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
0007770: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
0007780: 2929 205f 5f61 7474 7269 6275 7465 5f5f  )) __attribute__
0007790: 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f 2028   ((__nonnull__ (
00077a0: 3129 2929 3b0a 0a5f 5f65 7874 656e 7369  1)));..__extensi
00077b0: 6f6e 5f5f 0a65 7874 6572 6e20 756e 7369  on__.extern unsi
00077c0: 676e 6564 206c 6f6e 6720 6c6f 6e67 2069  gned long long i
00077d0: 6e74 2073 7472 746f 7571 2028 636f 6e73  nt strtouq (cons
00077e0: 7420 6368 6172 202a 5f5f 7265 7374 7269  t char *__restri
00077f0: 6374 205f 5f6e 7074 722c 0a20 2020 2020  ct __nptr,.     
0007800: 2020 2020 2020 6368 6172 202a 2a5f 5f72        char **__r
0007810: 6573 7472 6963 7420 5f5f 656e 6470 7472  estrict __endptr
0007820: 2c20 696e 7420 5f5f 6261 7365 290a 2020  , int __base).  
0007830: 2020 205f 5f61 7474 7269 6275 7465 5f5f     __attribute__
0007840: 2028 285f 5f6e 6f74 6872 6f77 5f5f 202c   ((__nothrow__ ,
0007850: 205f 5f6c 6561 665f 5f29 2920 5f5f 6174   __leaf__)) __at
0007860: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
0007870: 6e6e 756c 6c5f 5f20 2831 2929 293b 0a0a  nnull__ (1)));..
0007880: 0a0a 0a0a 5f5f 6578 7465 6e73 696f 6e5f  ....__extension_
0007890: 5f0a 6578 7465 726e 206c 6f6e 6720 6c6f  _.extern long lo
00078a0: 6e67 2069 6e74 2073 7472 746f 6c6c 2028  ng int strtoll (
00078b0: 636f 6e73 7420 6368 6172 202a 5f5f 7265  const char *__re
00078c0: 7374 7269 6374 205f 5f6e 7074 722c 0a20  strict __nptr,. 
00078d0: 2020 2020 2020 2020 6368 6172 202a 2a5f          char **_
00078e0: 5f72 6573 7472 6963 7420 5f5f 656e 6470  _restrict __endp
00078f0: 7472 2c20 696e 7420 5f5f 6261 7365 290a  tr, int __base).
0007900: 2020 2020 205f 5f61 7474 7269 6275 7465       __attribute
0007910: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
0007920: 202c 205f 5f6c 6561 665f 5f29 2920 5f5f   , __leaf__)) __
0007930: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
0007940: 6e6f 6e6e 756c 6c5f 5f20 2831 2929 293b  nonnull__ (1)));
0007950: 0a0a 5f5f 6578 7465 6e73 696f 6e5f 5f0a  ..__extension__.
0007960: 6578 7465 726e 2075 6e73 6967 6e65 6420  extern unsigned 
0007970: 6c6f 6e67 206c 6f6e 6720 696e 7420 7374  long long int st
0007980: 7274 6f75 6c6c 2028 636f 6e73 7420 6368  rtoull (const ch
0007990: 6172 202a 5f5f 7265 7374 7269 6374 205f  ar *__restrict _
00079a0: 5f6e 7074 722c 0a20 2020 2020 6368 6172  _nptr,.     char
00079b0: 202a 2a5f 5f72 6573 7472 6963 7420 5f5f   **__restrict __
00079c0: 656e 6470 7472 2c20 696e 7420 5f5f 6261  endptr, int __ba
00079d0: 7365 290a 2020 2020 205f 5f61 7474 7269  se).     __attri
00079e0: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
00079f0: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
0007a00: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
0007a10: 2828 5f5f 6e6f 6e6e 756c 6c5f 5f20 2831  ((__nonnull__ (1
0007a20: 2929 293b 0a0a 2320 3330 3520 222f 7573  )));..# 305 "/us
0007a30: 722f 696e 636c 7564 652f 7374 646c 6962  r/include/stdlib
0007a40: 2e68 2220 3320 340a 6578 7465 726e 2063  .h" 3 4.extern c
0007a50: 6861 7220 2a6c 3634 6120 286c 6f6e 6720  har *l64a (long 
0007a60: 696e 7420 5f5f 6e29 205f 5f61 7474 7269  int __n) __attri
0007a70: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
0007a80: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
0007a90: 2920 3b0a 0a0a 6578 7465 726e 206c 6f6e  ) ;...extern lon
0007aa0: 6720 696e 7420 6136 346c 2028 636f 6e73  g int a64l (cons
0007ab0: 7420 6368 6172 202a 5f5f 7329 0a20 2020  t char *__s).   
0007ac0: 2020 5f5f 6174 7472 6962 7574 655f 5f20    __attribute__ 
0007ad0: 2828 5f5f 6e6f 7468 726f 775f 5f20 2c20  ((__nothrow__ , 
0007ae0: 5f5f 6c65 6166 5f5f 2929 205f 5f61 7474  __leaf__)) __att
0007af0: 7269 6275 7465 5f5f 2028 285f 5f70 7572  ribute__ ((__pur
0007b00: 655f 5f29 2920 5f5f 6174 7472 6962 7574  e__)) __attribut
0007b10: 655f 5f20 2828 5f5f 6e6f 6e6e 756c 6c5f  e__ ((__nonnull_
0007b20: 5f20 2831 2929 2920 3b0a 0a0a 0a0a 2320  _ (1))) ;.....# 
0007b30: 3120 222f 7573 722f 696e 636c 7564 652f  1 "/usr/include/
0007b40: 7379 732f 7479 7065 732e 6822 2031 2033  sys/types.h" 1 3
0007b50: 2034 0a23 2032 3720 222f 7573 722f 696e   4.# 27 "/usr/in
0007b60: 636c 7564 652f 7379 732f 7479 7065 732e  clude/sys/types.
0007b70: 6822 2033 2034 0a0a 0a0a 0a0a 0a74 7970  h" 3 4.......typ
0007b80: 6564 6566 205f 5f75 5f63 6861 7220 755f  edef __u_char u_
0007b90: 6368 6172 3b0a 7479 7065 6465 6620 5f5f  char;.typedef __
0007ba0: 755f 7368 6f72 7420 755f 7368 6f72 743b  u_short u_short;
0007bb0: 0a74 7970 6564 6566 205f 5f75 5f69 6e74  .typedef __u_int
0007bc0: 2075 5f69 6e74 3b0a 7479 7065 6465 6620   u_int;.typedef 
0007bd0: 5f5f 755f 6c6f 6e67 2075 5f6c 6f6e 673b  __u_long u_long;
0007be0: 0a74 7970 6564 6566 205f 5f71 7561 645f  .typedef __quad_
0007bf0: 7420 7175 6164 5f74 3b0a 7479 7065 6465  t quad_t;.typede
0007c00: 6620 5f5f 755f 7175 6164 5f74 2075 5f71  f __u_quad_t u_q
0007c10: 7561 645f 743b 0a74 7970 6564 6566 205f  uad_t;.typedef _
0007c20: 5f66 7369 645f 7420 6673 6964 5f74 3b0a  _fsid_t fsid_t;.
0007c30: 0a0a 0a0a 7479 7065 6465 6620 5f5f 6c6f  ....typedef __lo
0007c40: 6666 5f74 206c 6f66 665f 743b 0a0a 0a0a  ff_t loff_t;....
0007c50: 7479 7065 6465 6620 5f5f 696e 6f5f 7420  typedef __ino_t 
0007c60: 696e 6f5f 743b 0a23 2036 3020 222f 7573  ino_t;.# 60 "/us
0007c70: 722f 696e 636c 7564 652f 7379 732f 7479  r/include/sys/ty
0007c80: 7065 732e 6822 2033 2034 0a74 7970 6564  pes.h" 3 4.typed
0007c90: 6566 205f 5f64 6576 5f74 2064 6576 5f74  ef __dev_t dev_t
0007ca0: 3b0a 0a0a 0a0a 7479 7065 6465 6620 5f5f  ;.....typedef __
0007cb0: 6769 645f 7420 6769 645f 743b 0a0a 0a0a  gid_t gid_t;....
0007cc0: 0a74 7970 6564 6566 205f 5f6d 6f64 655f  .typedef __mode_
0007cd0: 7420 6d6f 6465 5f74 3b0a 0a0a 0a0a 7479  t mode_t;.....ty
0007ce0: 7065 6465 6620 5f5f 6e6c 696e 6b5f 7420  pedef __nlink_t 
0007cf0: 6e6c 696e 6b5f 743b 0a0a 0a0a 0a74 7970  nlink_t;.....typ
0007d00: 6564 6566 205f 5f75 6964 5f74 2075 6964  edef __uid_t uid
0007d10: 5f74 3b0a 2320 3938 2022 2f75 7372 2f69  _t;.# 98 "/usr/i
0007d20: 6e63 6c75 6465 2f73 7973 2f74 7970 6573  nclude/sys/types
0007d30: 2e68 2220 3320 340a 7479 7065 6465 6620  .h" 3 4.typedef 
0007d40: 5f5f 7069 645f 7420 7069 645f 743b 0a0a  __pid_t pid_t;..
0007d50: 0a0a 0a0a 7479 7065 6465 6620 5f5f 6964  ....typedef __id
0007d60: 5f74 2069 645f 743b 0a23 2031 3135 2022  _t id_t;.# 115 "
0007d70: 2f75 7372 2f69 6e63 6c75 6465 2f73 7973  /usr/include/sys
0007d80: 2f74 7970 6573 2e68 2220 3320 340a 7479  /types.h" 3 4.ty
0007d90: 7065 6465 6620 5f5f 6461 6464 725f 7420  pedef __daddr_t 
0007da0: 6461 6464 725f 743b 0a74 7970 6564 6566  daddr_t;.typedef
0007db0: 205f 5f63 6164 6472 5f74 2063 6164 6472   __caddr_t caddr
0007dc0: 5f74 3b0a 0a0a 0a0a 0a74 7970 6564 6566  _t;......typedef
0007dd0: 205f 5f6b 6579 5f74 206b 6579 5f74 3b0a   __key_t key_t;.
0007de0: 2320 3133 3220 222f 7573 722f 696e 636c  # 132 "/usr/incl
0007df0: 7564 652f 7379 732f 7479 7065 732e 6822  ude/sys/types.h"
0007e00: 2033 2034 0a23 2031 2022 2f75 7372 2f69   3 4.# 1 "/usr/i
0007e10: 6e63 6c75 6465 2f74 696d 652e 6822 2031  nclude/time.h" 1
0007e20: 2033 2034 0a23 2035 3720 222f 7573 722f   3 4.# 57 "/usr/
0007e30: 696e 636c 7564 652f 7469 6d65 2e68 2220  include/time.h" 
0007e40: 3320 340a 0a0a 7479 7065 6465 6620 5f5f  3 4...typedef __
0007e50: 636c 6f63 6b5f 7420 636c 6f63 6b5f 743b  clock_t clock_t;
0007e60: 0a0a 0a0a 2320 3733 2022 2f75 7372 2f69  ....# 73 "/usr/i
0007e70: 6e63 6c75 6465 2f74 696d 652e 6822 2033  nclude/time.h" 3
0007e80: 2034 0a0a 0a74 7970 6564 6566 205f 5f74   4...typedef __t
0007e90: 696d 655f 7420 7469 6d65 5f74 3b0a 0a0a  ime_t time_t;...
0007ea0: 0a23 2039 3120 222f 7573 722f 696e 636c  .# 91 "/usr/incl
0007eb0: 7564 652f 7469 6d65 2e68 2220 3320 340a  ude/time.h" 3 4.
0007ec0: 7479 7065 6465 6620 5f5f 636c 6f63 6b69  typedef __clocki
0007ed0: 645f 7420 636c 6f63 6b69 645f 743b 0a23  d_t clockid_t;.#
0007ee0: 2031 3033 2022 2f75 7372 2f69 6e63 6c75   103 "/usr/inclu
0007ef0: 6465 2f74 696d 652e 6822 2033 2034 0a74  de/time.h" 3 4.t
0007f00: 7970 6564 6566 205f 5f74 696d 6572 5f74  ypedef __timer_t
0007f10: 2074 696d 6572 5f74 3b0a 2320 3133 3320   timer_t;.# 133 
0007f20: 222f 7573 722f 696e 636c 7564 652f 7379  "/usr/include/sy
0007f30: 732f 7479 7065 732e 6822 2032 2033 2034  s/types.h" 2 3 4
0007f40: 0a23 2031 3436 2022 2f75 7372 2f69 6e63  .# 146 "/usr/inc
0007f50: 6c75 6465 2f73 7973 2f74 7970 6573 2e68  lude/sys/types.h
0007f60: 2220 3320 340a 2320 3120 222f 7573 722f  " 3 4.# 1 "/usr/
0007f70: 6c69 622f 6763 632f 7838 365f 3634 2d72  lib/gcc/x86_64-r
0007f80: 6564 6861 742d 6c69 6e75 782f 342e 382e  edhat-linux/4.8.
0007f90: 332f 696e 636c 7564 652f 7374 6464 6566  3/include/stddef
0007fa0: 2e68 2220 3120 3320 340a 2320 3134 3720  .h" 1 3 4.# 147 
0007fb0: 222f 7573 722f 696e 636c 7564 652f 7379  "/usr/include/sy
0007fc0: 732f 7479 7065 732e 6822 2032 2033 2034  s/types.h" 2 3 4
0007fd0: 0a0a 0a0a 7479 7065 6465 6620 756e 7369  ....typedef unsi
0007fe0: 676e 6564 206c 6f6e 6720 696e 7420 756c  gned long int ul
0007ff0: 6f6e 673b 0a74 7970 6564 6566 2075 6e73  ong;.typedef uns
0008000: 6967 6e65 6420 7368 6f72 7420 696e 7420  igned short int 
0008010: 7573 686f 7274 3b0a 7479 7065 6465 6620  ushort;.typedef 
0008020: 756e 7369 676e 6564 2069 6e74 2075 696e  unsigned int uin
0008030: 743b 0a23 2031 3934 2022 2f75 7372 2f69  t;.# 194 "/usr/i
0008040: 6e63 6c75 6465 2f73 7973 2f74 7970 6573  nclude/sys/types
0008050: 2e68 2220 3320 340a 7479 7065 6465 6620  .h" 3 4.typedef 
0008060: 696e 7420 696e 7438 5f74 205f 5f61 7474  int int8_t __att
0008070: 7269 6275 7465 5f5f 2028 285f 5f6d 6f64  ribute__ ((__mod
0008080: 655f 5f20 285f 5f51 495f 5f29 2929 3b0a  e__ (__QI__)));.
0008090: 7479 7065 6465 6620 696e 7420 696e 7431  typedef int int1
00080a0: 365f 7420 5f5f 6174 7472 6962 7574 655f  6_t __attribute_
00080b0: 5f20 2828 5f5f 6d6f 6465 5f5f 2028 5f5f  _ ((__mode__ (__
00080c0: 4849 5f5f 2929 293b 0a74 7970 6564 6566  HI__)));.typedef
00080d0: 2069 6e74 2069 6e74 3332 5f74 205f 5f61   int int32_t __a
00080e0: 7474 7269 6275 7465 5f5f 2028 285f 5f6d  ttribute__ ((__m
00080f0: 6f64 655f 5f20 285f 5f53 495f 5f29 2929  ode__ (__SI__)))
0008100: 3b0a 7479 7065 6465 6620 696e 7420 696e  ;.typedef int in
0008110: 7436 345f 7420 5f5f 6174 7472 6962 7574  t64_t __attribut
0008120: 655f 5f20 2828 5f5f 6d6f 6465 5f5f 2028  e__ ((__mode__ (
0008130: 5f5f 4449 5f5f 2929 293b 0a0a 0a74 7970  __DI__)));...typ
0008140: 6564 6566 2075 6e73 6967 6e65 6420 696e  edef unsigned in
0008150: 7420 755f 696e 7438 5f74 205f 5f61 7474  t u_int8_t __att
0008160: 7269 6275 7465 5f5f 2028 285f 5f6d 6f64  ribute__ ((__mod
0008170: 655f 5f20 285f 5f51 495f 5f29 2929 3b0a  e__ (__QI__)));.
0008180: 7479 7065 6465 6620 756e 7369 676e 6564  typedef unsigned
0008190: 2069 6e74 2075 5f69 6e74 3136 5f74 205f   int u_int16_t _
00081a0: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
00081b0: 5f6d 6f64 655f 5f20 285f 5f48 495f 5f29  _mode__ (__HI__)
00081c0: 2929 3b0a 7479 7065 6465 6620 756e 7369  ));.typedef unsi
00081d0: 676e 6564 2069 6e74 2075 5f69 6e74 3332  gned int u_int32
00081e0: 5f74 205f 5f61 7474 7269 6275 7465 5f5f  _t __attribute__
00081f0: 2028 285f 5f6d 6f64 655f 5f20 285f 5f53   ((__mode__ (__S
0008200: 495f 5f29 2929 3b0a 7479 7065 6465 6620  I__)));.typedef 
0008210: 756e 7369 676e 6564 2069 6e74 2075 5f69  unsigned int u_i
0008220: 6e74 3634 5f74 205f 5f61 7474 7269 6275  nt64_t __attribu
0008230: 7465 5f5f 2028 285f 5f6d 6f64 655f 5f20  te__ ((__mode__ 
0008240: 285f 5f44 495f 5f29 2929 3b0a 0a74 7970  (__DI__)));..typ
0008250: 6564 6566 2069 6e74 2072 6567 6973 7465  edef int registe
0008260: 725f 7420 5f5f 6174 7472 6962 7574 655f  r_t __attribute_
0008270: 5f20 2828 5f5f 6d6f 6465 5f5f 2028 5f5f  _ ((__mode__ (__
0008280: 776f 7264 5f5f 2929 293b 0a23 2032 3139  word__)));.# 219
0008290: 2022 2f75 7372 2f69 6e63 6c75 6465 2f73   "/usr/include/s
00082a0: 7973 2f74 7970 6573 2e68 2220 3320 340a  ys/types.h" 3 4.
00082b0: 2320 3120 222f 7573 722f 696e 636c 7564  # 1 "/usr/includ
00082c0: 652f 7379 732f 7365 6c65 6374 2e68 2220  e/sys/select.h" 
00082d0: 3120 3320 340a 2320 3330 2022 2f75 7372  1 3 4.# 30 "/usr
00082e0: 2f69 6e63 6c75 6465 2f73 7973 2f73 656c  /include/sys/sel
00082f0: 6563 742e 6822 2033 2034 0a23 2031 2022  ect.h" 3 4.# 1 "
0008300: 2f75 7372 2f69 6e63 6c75 6465 2f62 6974  /usr/include/bit
0008310: 732f 7365 6c65 6374 2e68 2220 3120 3320  s/select.h" 1 3 
0008320: 340a 2320 3232 2022 2f75 7372 2f69 6e63  4.# 22 "/usr/inc
0008330: 6c75 6465 2f62 6974 732f 7365 6c65 6374  lude/bits/select
0008340: 2e68 2220 3320 340a 2320 3120 222f 7573  .h" 3 4.# 1 "/us
0008350: 722f 696e 636c 7564 652f 6269 7473 2f77  r/include/bits/w
0008360: 6f72 6473 697a 652e 6822 2031 2033 2034  ordsize.h" 1 3 4
0008370: 0a23 2032 3320 222f 7573 722f 696e 636c  .# 23 "/usr/incl
0008380: 7564 652f 6269 7473 2f73 656c 6563 742e  ude/bits/select.
0008390: 6822 2032 2033 2034 0a23 2033 3120 222f  h" 2 3 4.# 31 "/
00083a0: 7573 722f 696e 636c 7564 652f 7379 732f  usr/include/sys/
00083b0: 7365 6c65 6374 2e68 2220 3220 3320 340a  select.h" 2 3 4.
00083c0: 0a0a 2320 3120 222f 7573 722f 696e 636c  ..# 1 "/usr/incl
00083d0: 7564 652f 6269 7473 2f73 6967 7365 742e  ude/bits/sigset.
00083e0: 6822 2031 2033 2034 0a23 2032 3320 222f  h" 1 3 4.# 23 "/
00083f0: 7573 722f 696e 636c 7564 652f 6269 7473  usr/include/bits
0008400: 2f73 6967 7365 742e 6822 2033 2034 0a74  /sigset.h" 3 4.t
0008410: 7970 6564 6566 2069 6e74 205f 5f73 6967  ypedef int __sig
0008420: 5f61 746f 6d69 635f 743b 0a0a 0a0a 0a74  _atomic_t;.....t
0008430: 7970 6564 6566 2073 7472 7563 740a 2020  ypedef struct.  
0008440: 7b0a 2020 2020 756e 7369 676e 6564 206c  {.    unsigned l
0008450: 6f6e 6720 696e 7420 5f5f 7661 6c5b 2831  ong int __val[(1
0008460: 3032 3420 2f20 2838 202a 2073 697a 656f  024 / (8 * sizeo
0008470: 6620 2875 6e73 6967 6e65 6420 6c6f 6e67  f (unsigned long
0008480: 2069 6e74 2929 295d 3b0a 2020 7d20 5f5f   int)))];.  } __
0008490: 7369 6773 6574 5f74 3b0a 2320 3334 2022  sigset_t;.# 34 "
00084a0: 2f75 7372 2f69 6e63 6c75 6465 2f73 7973  /usr/include/sys
00084b0: 2f73 656c 6563 742e 6822 2032 2033 2034  /select.h" 2 3 4
00084c0: 0a0a 0a0a 7479 7065 6465 6620 5f5f 7369  ....typedef __si
00084d0: 6773 6574 5f74 2073 6967 7365 745f 743b  gset_t sigset_t;
00084e0: 0a0a 0a0a 0a0a 2320 3120 222f 7573 722f  ......# 1 "/usr/
00084f0: 696e 636c 7564 652f 7469 6d65 2e68 2220  include/time.h" 
0008500: 3120 3320 340a 2320 3132 3020 222f 7573  1 3 4.# 120 "/us
0008510: 722f 696e 636c 7564 652f 7469 6d65 2e68  r/include/time.h
0008520: 2220 3320 340a 7374 7275 6374 2074 696d  " 3 4.struct tim
0008530: 6573 7065 630a 2020 7b0a 2020 2020 5f5f  espec.  {.    __
0008540: 7469 6d65 5f74 2074 765f 7365 633b 0a20  time_t tv_sec;. 
0008550: 2020 205f 5f73 7973 6361 6c6c 5f73 6c6f     __syscall_slo
0008560: 6e67 5f74 2074 765f 6e73 6563 3b0a 2020  ng_t tv_nsec;.  
0008570: 7d3b 0a23 2034 3420 222f 7573 722f 696e  };.# 44 "/usr/in
0008580: 636c 7564 652f 7379 732f 7365 6c65 6374  clude/sys/select
0008590: 2e68 2220 3220 3320 340a 0a23 2031 2022  .h" 2 3 4..# 1 "
00085a0: 2f75 7372 2f69 6e63 6c75 6465 2f62 6974  /usr/include/bit
00085b0: 732f 7469 6d65 2e68 2220 3120 3320 340a  s/time.h" 1 3 4.
00085c0: 2320 3330 2022 2f75 7372 2f69 6e63 6c75  # 30 "/usr/inclu
00085d0: 6465 2f62 6974 732f 7469 6d65 2e68 2220  de/bits/time.h" 
00085e0: 3320 340a 7374 7275 6374 2074 696d 6576  3 4.struct timev
00085f0: 616c 0a20 207b 0a20 2020 205f 5f74 696d  al.  {.    __tim
0008600: 655f 7420 7476 5f73 6563 3b0a 2020 2020  e_t tv_sec;.    
0008610: 5f5f 7375 7365 636f 6e64 735f 7420 7476  __suseconds_t tv
0008620: 5f75 7365 633b 0a20 207d 3b0a 2320 3436  _usec;.  };.# 46
0008630: 2022 2f75 7372 2f69 6e63 6c75 6465 2f73   "/usr/include/s
0008640: 7973 2f73 656c 6563 742e 6822 2032 2033  ys/select.h" 2 3
0008650: 2034 0a0a 0a74 7970 6564 6566 205f 5f73   4...typedef __s
0008660: 7573 6563 6f6e 6473 5f74 2073 7573 6563  useconds_t susec
0008670: 6f6e 6473 5f74 3b0a 0a0a 0a0a 0a74 7970  onds_t;......typ
0008680: 6564 6566 206c 6f6e 6720 696e 7420 5f5f  edef long int __
0008690: 6664 5f6d 6173 6b3b 0a23 2036 3420 222f  fd_mask;.# 64 "/
00086a0: 7573 722f 696e 636c 7564 652f 7379 732f  usr/include/sys/
00086b0: 7365 6c65 6374 2e68 2220 3320 340a 7479  select.h" 3 4.ty
00086c0: 7065 6465 6620 7374 7275 6374 0a20 207b  pedef struct.  {
00086d0: 0a0a 0a0a 0a0a 0a20 2020 205f 5f66 645f  .......    __fd_
00086e0: 6d61 736b 205f 5f66 6473 5f62 6974 735b  mask __fds_bits[
00086f0: 3130 3234 202f 2028 3820 2a20 2869 6e74  1024 / (8 * (int
0008700: 2920 7369 7a65 6f66 2028 5f5f 6664 5f6d  ) sizeof (__fd_m
0008710: 6173 6b29 295d 3b0a 0a0a 2020 7d20 6664  ask))];...  } fd
0008720: 5f73 6574 3b0a 0a0a 0a0a 0a0a 7479 7065  _set;.......type
0008730: 6465 6620 5f5f 6664 5f6d 6173 6b20 6664  def __fd_mask fd
0008740: 5f6d 6173 6b3b 0a23 2039 3620 222f 7573  _mask;.# 96 "/us
0008750: 722f 696e 636c 7564 652f 7379 732f 7365  r/include/sys/se
0008760: 6c65 6374 2e68 2220 3320 340a 0a23 2031  lect.h" 3 4..# 1
0008770: 3036 2022 2f75 7372 2f69 6e63 6c75 6465  06 "/usr/include
0008780: 2f73 7973 2f73 656c 6563 742e 6822 2033  /sys/select.h" 3
0008790: 2034 0a65 7874 6572 6e20 696e 7420 7365   4.extern int se
00087a0: 6c65 6374 2028 696e 7420 5f5f 6e66 6473  lect (int __nfds
00087b0: 2c20 6664 5f73 6574 202a 5f5f 7265 7374  , fd_set *__rest
00087c0: 7269 6374 205f 5f72 6561 6466 6473 2c0a  rict __readfds,.
00087d0: 2020 2020 2066 645f 7365 7420 2a5f 5f72       fd_set *__r
00087e0: 6573 7472 6963 7420 5f5f 7772 6974 6566  estrict __writef
00087f0: 6473 2c0a 2020 2020 2066 645f 7365 7420  ds,.     fd_set 
0008800: 2a5f 5f72 6573 7472 6963 7420 5f5f 6578  *__restrict __ex
0008810: 6365 7074 6664 732c 0a20 2020 2020 7374  ceptfds,.     st
0008820: 7275 6374 2074 696d 6576 616c 202a 5f5f  ruct timeval *__
0008830: 7265 7374 7269 6374 205f 5f74 696d 656f  restrict __timeo
0008840: 7574 293b 0a23 2031 3138 2022 2f75 7372  ut);.# 118 "/usr
0008850: 2f69 6e63 6c75 6465 2f73 7973 2f73 656c  /include/sys/sel
0008860: 6563 742e 6822 2033 2034 0a65 7874 6572  ect.h" 3 4.exter
0008870: 6e20 696e 7420 7073 656c 6563 7420 2869  n int pselect (i
0008880: 6e74 205f 5f6e 6664 732c 2066 645f 7365  nt __nfds, fd_se
0008890: 7420 2a5f 5f72 6573 7472 6963 7420 5f5f  t *__restrict __
00088a0: 7265 6164 6664 732c 0a20 2020 2020 2066  readfds,.      f
00088b0: 645f 7365 7420 2a5f 5f72 6573 7472 6963  d_set *__restric
00088c0: 7420 5f5f 7772 6974 6566 6473 2c0a 2020  t __writefds,.  
00088d0: 2020 2020 6664 5f73 6574 202a 5f5f 7265      fd_set *__re
00088e0: 7374 7269 6374 205f 5f65 7863 6570 7466  strict __exceptf
00088f0: 6473 2c0a 2020 2020 2020 636f 6e73 7420  ds,.      const 
0008900: 7374 7275 6374 2074 696d 6573 7065 6320  struct timespec 
0008910: 2a5f 5f72 6573 7472 6963 7420 5f5f 7469  *__restrict __ti
0008920: 6d65 6f75 742c 0a20 2020 2020 2063 6f6e  meout,.      con
0008930: 7374 205f 5f73 6967 7365 745f 7420 2a5f  st __sigset_t *_
0008940: 5f72 6573 7472 6963 7420 5f5f 7369 676d  _restrict __sigm
0008950: 6173 6b29 3b0a 2320 3133 3120 222f 7573  ask);.# 131 "/us
0008960: 722f 696e 636c 7564 652f 7379 732f 7365  r/include/sys/se
0008970: 6c65 6374 2e68 2220 3320 340a 0a23 2032  lect.h" 3 4..# 2
0008980: 3230 2022 2f75 7372 2f69 6e63 6c75 6465  20 "/usr/include
0008990: 2f73 7973 2f74 7970 6573 2e68 2220 3220  /sys/types.h" 2 
00089a0: 3320 340a 0a0a 2320 3120 222f 7573 722f  3 4...# 1 "/usr/
00089b0: 696e 636c 7564 652f 7379 732f 7379 736d  include/sys/sysm
00089c0: 6163 726f 732e 6822 2031 2033 2034 0a23  acros.h" 1 3 4.#
00089d0: 2032 3920 222f 7573 722f 696e 636c 7564   29 "/usr/includ
00089e0: 652f 7379 732f 7379 736d 6163 726f 732e  e/sys/sysmacros.
00089f0: 6822 2033 2034 0a0a 0a5f 5f65 7874 656e  h" 3 4...__exten
0008a00: 7369 6f6e 5f5f 0a65 7874 6572 6e20 756e  sion__.extern un
0008a10: 7369 676e 6564 2069 6e74 2067 6e75 5f64  signed int gnu_d
0008a20: 6576 5f6d 616a 6f72 2028 756e 7369 676e  ev_major (unsign
0008a30: 6564 206c 6f6e 6720 6c6f 6e67 2069 6e74  ed long long int
0008a40: 205f 5f64 6576 290a 2020 2020 205f 5f61   __dev).     __a
0008a50: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
0008a60: 6f74 6872 6f77 5f5f 202c 205f 5f6c 6561  othrow__ , __lea
0008a70: 665f 5f29 2920 5f5f 6174 7472 6962 7574  f__)) __attribut
0008a80: 655f 5f20 2828 5f5f 636f 6e73 745f 5f29  e__ ((__const__)
0008a90: 293b 0a5f 5f65 7874 656e 7369 6f6e 5f5f  );.__extension__
0008aa0: 0a65 7874 6572 6e20 756e 7369 676e 6564  .extern unsigned
0008ab0: 2069 6e74 2067 6e75 5f64 6576 5f6d 696e   int gnu_dev_min
0008ac0: 6f72 2028 756e 7369 676e 6564 206c 6f6e  or (unsigned lon
0008ad0: 6720 6c6f 6e67 2069 6e74 205f 5f64 6576  g long int __dev
0008ae0: 290a 2020 2020 205f 5f61 7474 7269 6275  ).     __attribu
0008af0: 7465 5f5f 2028 285f 5f6e 6f74 6872 6f77  te__ ((__nothrow
0008b00: 5f5f 202c 205f 5f6c 6561 665f 5f29 2920  __ , __leaf__)) 
0008b10: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
0008b20: 5f5f 636f 6e73 745f 5f29 293b 0a5f 5f65  __const__));.__e
0008b30: 7874 656e 7369 6f6e 5f5f 0a65 7874 6572  xtension__.exter
0008b40: 6e20 756e 7369 676e 6564 206c 6f6e 6720  n unsigned long 
0008b50: 6c6f 6e67 2069 6e74 2067 6e75 5f64 6576  long int gnu_dev
0008b60: 5f6d 616b 6564 6576 2028 756e 7369 676e  _makedev (unsign
0008b70: 6564 2069 6e74 205f 5f6d 616a 6f72 2c0a  ed int __major,.
0008b80: 2020 2020 2020 2020 2020 2020 756e 7369              unsi
0008b90: 676e 6564 2069 6e74 205f 5f6d 696e 6f72  gned int __minor
0008ba0: 290a 2020 2020 205f 5f61 7474 7269 6275  ).     __attribu
0008bb0: 7465 5f5f 2028 285f 5f6e 6f74 6872 6f77  te__ ((__nothrow
0008bc0: 5f5f 202c 205f 5f6c 6561 665f 5f29 2920  __ , __leaf__)) 
0008bd0: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
0008be0: 5f5f 636f 6e73 745f 5f29 293b 0a23 2036  __const__));.# 6
0008bf0: 3320 222f 7573 722f 696e 636c 7564 652f  3 "/usr/include/
0008c00: 7379 732f 7379 736d 6163 726f 732e 6822  sys/sysmacros.h"
0008c10: 2033 2034 0a0a 2320 3232 3320 222f 7573   3 4..# 223 "/us
0008c20: 722f 696e 636c 7564 652f 7379 732f 7479  r/include/sys/ty
0008c30: 7065 732e 6822 2032 2033 2034 0a0a 0a0a  pes.h" 2 3 4....
0008c40: 0a0a 7479 7065 6465 6620 5f5f 626c 6b73  ..typedef __blks
0008c50: 697a 655f 7420 626c 6b73 697a 655f 743b  ize_t blksize_t;
0008c60: 0a0a 0a0a 0a0a 0a74 7970 6564 6566 205f  .......typedef _
0008c70: 5f62 6c6b 636e 745f 7420 626c 6b63 6e74  _blkcnt_t blkcnt
0008c80: 5f74 3b0a 0a0a 0a74 7970 6564 6566 205f  _t;....typedef _
0008c90: 5f66 7362 6c6b 636e 745f 7420 6673 626c  _fsblkcnt_t fsbl
0008ca0: 6b63 6e74 5f74 3b0a 0a0a 0a74 7970 6564  kcnt_t;....typed
0008cb0: 6566 205f 5f66 7366 696c 636e 745f 7420  ef __fsfilcnt_t 
0008cc0: 6673 6669 6c63 6e74 5f74 3b0a 2320 3237  fsfilcnt_t;.# 27
0008cd0: 3020 222f 7573 722f 696e 636c 7564 652f  0 "/usr/include/
0008ce0: 7379 732f 7479 7065 732e 6822 2033 2034  sys/types.h" 3 4
0008cf0: 0a23 2031 2022 2f75 7372 2f69 6e63 6c75  .# 1 "/usr/inclu
0008d00: 6465 2f62 6974 732f 7074 6872 6561 6474  de/bits/pthreadt
0008d10: 7970 6573 2e68 2220 3120 3320 340a 2320  ypes.h" 1 3 4.# 
0008d20: 3231 2022 2f75 7372 2f69 6e63 6c75 6465  21 "/usr/include
0008d30: 2f62 6974 732f 7074 6872 6561 6474 7970  /bits/pthreadtyp
0008d40: 6573 2e68 2220 3320 340a 2320 3120 222f  es.h" 3 4.# 1 "/
0008d50: 7573 722f 696e 636c 7564 652f 6269 7473  usr/include/bits
0008d60: 2f77 6f72 6473 697a 652e 6822 2031 2033  /wordsize.h" 1 3
0008d70: 2034 0a23 2032 3220 222f 7573 722f 696e   4.# 22 "/usr/in
0008d80: 636c 7564 652f 6269 7473 2f70 7468 7265  clude/bits/pthre
0008d90: 6164 7479 7065 732e 6822 2032 2033 2034  adtypes.h" 2 3 4
0008da0: 0a23 2036 3020 222f 7573 722f 696e 636c  .# 60 "/usr/incl
0008db0: 7564 652f 6269 7473 2f70 7468 7265 6164  ude/bits/pthread
0008dc0: 7479 7065 732e 6822 2033 2034 0a74 7970  types.h" 3 4.typ
0008dd0: 6564 6566 2075 6e73 6967 6e65 6420 6c6f  edef unsigned lo
0008de0: 6e67 2069 6e74 2070 7468 7265 6164 5f74  ng int pthread_t
0008df0: 3b0a 0a0a 756e 696f 6e20 7074 6872 6561  ;...union pthrea
0008e00: 645f 6174 7472 5f74 0a7b 0a20 2063 6861  d_attr_t.{.  cha
0008e10: 7220 5f5f 7369 7a65 5b35 365d 3b0a 2020  r __size[56];.  
0008e20: 6c6f 6e67 2069 6e74 205f 5f61 6c69 676e  long int __align
0008e30: 3b0a 7d3b 0a0a 7479 7065 6465 6620 756e  ;.};..typedef un
0008e40: 696f 6e20 7074 6872 6561 645f 6174 7472  ion pthread_attr
0008e50: 5f74 2070 7468 7265 6164 5f61 7474 725f  _t pthread_attr_
0008e60: 743b 0a0a 0a0a 0a0a 7479 7065 6465 6620  t;......typedef 
0008e70: 7374 7275 6374 205f 5f70 7468 7265 6164  struct __pthread
0008e80: 5f69 6e74 6572 6e61 6c5f 6c69 7374 0a7b  _internal_list.{
0008e90: 0a20 2073 7472 7563 7420 5f5f 7074 6872  .  struct __pthr
0008ea0: 6561 645f 696e 7465 726e 616c 5f6c 6973  ead_internal_lis
0008eb0: 7420 2a5f 5f70 7265 763b 0a20 2073 7472  t *__prev;.  str
0008ec0: 7563 7420 5f5f 7074 6872 6561 645f 696e  uct __pthread_in
0008ed0: 7465 726e 616c 5f6c 6973 7420 2a5f 5f6e  ternal_list *__n
0008ee0: 6578 743b 0a7d 205f 5f70 7468 7265 6164  ext;.} __pthread
0008ef0: 5f6c 6973 745f 743b 0a23 2039 3020 222f  _list_t;.# 90 "/
0008f00: 7573 722f 696e 636c 7564 652f 6269 7473  usr/include/bits
0008f10: 2f70 7468 7265 6164 7479 7065 732e 6822  /pthreadtypes.h"
0008f20: 2033 2034 0a74 7970 6564 6566 2075 6e69   3 4.typedef uni
0008f30: 6f6e 0a7b 0a20 2073 7472 7563 7420 5f5f  on.{.  struct __
0008f40: 7074 6872 6561 645f 6d75 7465 785f 730a  pthread_mutex_s.
0008f50: 2020 7b0a 2020 2020 696e 7420 5f5f 6c6f    {.    int __lo
0008f60: 636b 3b0a 2020 2020 756e 7369 676e 6564  ck;.    unsigned
0008f70: 2069 6e74 205f 5f63 6f75 6e74 3b0a 2020   int __count;.  
0008f80: 2020 696e 7420 5f5f 6f77 6e65 723b 0a0a    int __owner;..
0008f90: 2020 2020 756e 7369 676e 6564 2069 6e74      unsigned int
0008fa0: 205f 5f6e 7573 6572 733b 0a0a 0a0a 2020   __nusers;....  
0008fb0: 2020 696e 7420 5f5f 6b69 6e64 3b0a 0a20    int __kind;.. 
0008fc0: 2020 2069 6e74 205f 5f73 7069 6e73 3b0a     int __spins;.
0008fd0: 2020 2020 5f5f 7074 6872 6561 645f 6c69      __pthread_li
0008fe0: 7374 5f74 205f 5f6c 6973 743b 0a23 2031  st_t __list;.# 1
0008ff0: 3135 2022 2f75 7372 2f69 6e63 6c75 6465  15 "/usr/include
0009000: 2f62 6974 732f 7074 6872 6561 6474 7970  /bits/pthreadtyp
0009010: 6573 2e68 2220 3320 340a 2020 7d20 5f5f  es.h" 3 4.  } __
0009020: 6461 7461 3b0a 2020 6368 6172 205f 5f73  data;.  char __s
0009030: 697a 655b 3430 5d3b 0a20 206c 6f6e 6720  ize[40];.  long 
0009040: 696e 7420 5f5f 616c 6967 6e3b 0a7d 2070  int __align;.} p
0009050: 7468 7265 6164 5f6d 7574 6578 5f74 3b0a  thread_mutex_t;.
0009060: 0a74 7970 6564 6566 2075 6e69 6f6e 0a7b  .typedef union.{
0009070: 0a20 2063 6861 7220 5f5f 7369 7a65 5b34  .  char __size[4
0009080: 5d3b 0a20 2069 6e74 205f 5f61 6c69 676e  ];.  int __align
0009090: 3b0a 7d20 7074 6872 6561 645f 6d75 7465  ;.} pthread_mute
00090a0: 7861 7474 725f 743b 0a0a 0a0a 0a74 7970  xattr_t;.....typ
00090b0: 6564 6566 2075 6e69 6f6e 0a7b 0a20 2073  edef union.{.  s
00090c0: 7472 7563 740a 2020 7b0a 2020 2020 696e  truct.  {.    in
00090d0: 7420 5f5f 6c6f 636b 3b0a 2020 2020 756e  t __lock;.    un
00090e0: 7369 676e 6564 2069 6e74 205f 5f66 7574  signed int __fut
00090f0: 6578 3b0a 2020 2020 5f5f 6578 7465 6e73  ex;.    __extens
0009100: 696f 6e5f 5f20 756e 7369 676e 6564 206c  ion__ unsigned l
0009110: 6f6e 6720 6c6f 6e67 2069 6e74 205f 5f74  ong long int __t
0009120: 6f74 616c 5f73 6571 3b0a 2020 2020 5f5f  otal_seq;.    __
0009130: 6578 7465 6e73 696f 6e5f 5f20 756e 7369  extension__ unsi
0009140: 676e 6564 206c 6f6e 6720 6c6f 6e67 2069  gned long long i
0009150: 6e74 205f 5f77 616b 6575 705f 7365 713b  nt __wakeup_seq;
0009160: 0a20 2020 205f 5f65 7874 656e 7369 6f6e  .    __extension
0009170: 5f5f 2075 6e73 6967 6e65 6420 6c6f 6e67  __ unsigned long
0009180: 206c 6f6e 6720 696e 7420 5f5f 776f 6b65   long int __woke
0009190: 6e5f 7365 713b 0a20 2020 2076 6f69 6420  n_seq;.    void 
00091a0: 2a5f 5f6d 7574 6578 3b0a 2020 2020 756e  *__mutex;.    un
00091b0: 7369 676e 6564 2069 6e74 205f 5f6e 7761  signed int __nwa
00091c0: 6974 6572 733b 0a20 2020 2075 6e73 6967  iters;.    unsig
00091d0: 6e65 6420 696e 7420 5f5f 6272 6f61 6463  ned int __broadc
00091e0: 6173 745f 7365 713b 0a20 207d 205f 5f64  ast_seq;.  } __d
00091f0: 6174 613b 0a20 2063 6861 7220 5f5f 7369  ata;.  char __si
0009200: 7a65 5b34 385d 3b0a 2020 5f5f 6578 7465  ze[48];.  __exte
0009210: 6e73 696f 6e5f 5f20 6c6f 6e67 206c 6f6e  nsion__ long lon
0009220: 6720 696e 7420 5f5f 616c 6967 6e3b 0a7d  g int __align;.}
0009230: 2070 7468 7265 6164 5f63 6f6e 645f 743b   pthread_cond_t;
0009240: 0a0a 7479 7065 6465 6620 756e 696f 6e0a  ..typedef union.
0009250: 7b0a 2020 6368 6172 205f 5f73 697a 655b  {.  char __size[
0009260: 345d 3b0a 2020 696e 7420 5f5f 616c 6967  4];.  int __alig
0009270: 6e3b 0a7d 2070 7468 7265 6164 5f63 6f6e  n;.} pthread_con
0009280: 6461 7474 725f 743b 0a0a 0a0a 7479 7065  dattr_t;....type
0009290: 6465 6620 756e 7369 676e 6564 2069 6e74  def unsigned int
00092a0: 2070 7468 7265 6164 5f6b 6579 5f74 3b0a   pthread_key_t;.
00092b0: 0a0a 0a74 7970 6564 6566 2069 6e74 2070  ...typedef int p
00092c0: 7468 7265 6164 5f6f 6e63 655f 743b 0a0a  thread_once_t;..
00092d0: 0a0a 0a0a 7479 7065 6465 6620 756e 696f  ....typedef unio
00092e0: 6e0a 7b0a 0a20 2073 7472 7563 740a 2020  n.{..  struct.  
00092f0: 7b0a 2020 2020 696e 7420 5f5f 6c6f 636b  {.    int __lock
0009300: 3b0a 2020 2020 756e 7369 676e 6564 2069  ;.    unsigned i
0009310: 6e74 205f 5f6e 725f 7265 6164 6572 733b  nt __nr_readers;
0009320: 0a20 2020 2075 6e73 6967 6e65 6420 696e  .    unsigned in
0009330: 7420 5f5f 7265 6164 6572 735f 7761 6b65  t __readers_wake
0009340: 7570 3b0a 2020 2020 756e 7369 676e 6564  up;.    unsigned
0009350: 2069 6e74 205f 5f77 7269 7465 725f 7761   int __writer_wa
0009360: 6b65 7570 3b0a 2020 2020 756e 7369 676e  keup;.    unsign
0009370: 6564 2069 6e74 205f 5f6e 725f 7265 6164  ed int __nr_read
0009380: 6572 735f 7175 6575 6564 3b0a 2020 2020  ers_queued;.    
0009390: 756e 7369 676e 6564 2069 6e74 205f 5f6e  unsigned int __n
00093a0: 725f 7772 6974 6572 735f 7175 6575 6564  r_writers_queued
00093b0: 3b0a 2020 2020 696e 7420 5f5f 7772 6974  ;.    int __writ
00093c0: 6572 3b0a 2020 2020 696e 7420 5f5f 7368  er;.    int __sh
00093d0: 6172 6564 3b0a 2020 2020 756e 7369 676e  ared;.    unsign
00093e0: 6564 206c 6f6e 6720 696e 7420 5f5f 7061  ed long int __pa
00093f0: 6431 3b0a 2020 2020 756e 7369 676e 6564  d1;.    unsigned
0009400: 206c 6f6e 6720 696e 7420 5f5f 7061 6432   long int __pad2
0009410: 3b0a 0a0a 2020 2020 756e 7369 676e 6564  ;...    unsigned
0009420: 2069 6e74 205f 5f66 6c61 6773 3b0a 0a20   int __flags;.. 
0009430: 207d 205f 5f64 6174 613b 0a23 2032 3032   } __data;.# 202
0009440: 2022 2f75 7372 2f69 6e63 6c75 6465 2f62   "/usr/include/b
0009450: 6974 732f 7074 6872 6561 6474 7970 6573  its/pthreadtypes
0009460: 2e68 2220 3320 340a 2020 6368 6172 205f  .h" 3 4.  char _
0009470: 5f73 697a 655b 3536 5d3b 0a20 206c 6f6e  _size[56];.  lon
0009480: 6720 696e 7420 5f5f 616c 6967 6e3b 0a7d  g int __align;.}
0009490: 2070 7468 7265 6164 5f72 776c 6f63 6b5f   pthread_rwlock_
00094a0: 743b 0a0a 7479 7065 6465 6620 756e 696f  t;..typedef unio
00094b0: 6e0a 7b0a 2020 6368 6172 205f 5f73 697a  n.{.  char __siz
00094c0: 655b 385d 3b0a 2020 6c6f 6e67 2069 6e74  e[8];.  long int
00094d0: 205f 5f61 6c69 676e 3b0a 7d20 7074 6872   __align;.} pthr
00094e0: 6561 645f 7277 6c6f 636b 6174 7472 5f74  ead_rwlockattr_t
00094f0: 3b0a 0a0a 0a0a 0a74 7970 6564 6566 2076  ;......typedef v
0009500: 6f6c 6174 696c 6520 696e 7420 7074 6872  olatile int pthr
0009510: 6561 645f 7370 696e 6c6f 636b 5f74 3b0a  ead_spinlock_t;.
0009520: 0a0a 0a0a 7479 7065 6465 6620 756e 696f  ....typedef unio
0009530: 6e0a 7b0a 2020 6368 6172 205f 5f73 697a  n.{.  char __siz
0009540: 655b 3332 5d3b 0a20 206c 6f6e 6720 696e  e[32];.  long in
0009550: 7420 5f5f 616c 6967 6e3b 0a7d 2070 7468  t __align;.} pth
0009560: 7265 6164 5f62 6172 7269 6572 5f74 3b0a  read_barrier_t;.
0009570: 0a74 7970 6564 6566 2075 6e69 6f6e 0a7b  .typedef union.{
0009580: 0a20 2063 6861 7220 5f5f 7369 7a65 5b34  .  char __size[4
0009590: 5d3b 0a20 2069 6e74 205f 5f61 6c69 676e  ];.  int __align
00095a0: 3b0a 7d20 7074 6872 6561 645f 6261 7272  ;.} pthread_barr
00095b0: 6965 7261 7474 725f 743b 0a23 2032 3731  ierattr_t;.# 271
00095c0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f73   "/usr/include/s
00095d0: 7973 2f74 7970 6573 2e68 2220 3220 3320  ys/types.h" 2 3 
00095e0: 340a 0a0a 0a23 2033 3135 2022 2f75 7372  4....# 315 "/usr
00095f0: 2f69 6e63 6c75 6465 2f73 7464 6c69 622e  /include/stdlib.
0009600: 6822 2032 2033 2034 0a0a 0a0a 0a0a 0a65  h" 2 3 4.......e
0009610: 7874 6572 6e20 6c6f 6e67 2069 6e74 2072  xtern long int r
0009620: 616e 646f 6d20 2876 6f69 6429 205f 5f61  andom (void) __a
0009630: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
0009640: 6f74 6872 6f77 5f5f 202c 205f 5f6c 6561  othrow__ , __lea
0009650: 665f 5f29 293b 0a0a 0a65 7874 6572 6e20  f__));...extern 
0009660: 766f 6964 2073 7261 6e64 6f6d 2028 756e  void srandom (un
0009670: 7369 676e 6564 2069 6e74 205f 5f73 6565  signed int __see
0009680: 6429 205f 5f61 7474 7269 6275 7465 5f5f  d) __attribute__
0009690: 2028 285f 5f6e 6f74 6872 6f77 5f5f 202c   ((__nothrow__ ,
00096a0: 205f 5f6c 6561 665f 5f29 293b 0a0a 0a0a   __leaf__));....
00096b0: 0a0a 6578 7465 726e 2063 6861 7220 2a69  ..extern char *i
00096c0: 6e69 7473 7461 7465 2028 756e 7369 676e  nitstate (unsign
00096d0: 6564 2069 6e74 205f 5f73 6565 642c 2063  ed int __seed, c
00096e0: 6861 7220 2a5f 5f73 7461 7465 6275 662c  har *__statebuf,
00096f0: 0a20 2020 7369 7a65 5f74 205f 5f73 7461  .   size_t __sta
0009700: 7465 6c65 6e29 205f 5f61 7474 7269 6275  telen) __attribu
0009710: 7465 5f5f 2028 285f 5f6e 6f74 6872 6f77  te__ ((__nothrow
0009720: 5f5f 202c 205f 5f6c 6561 665f 5f29 2920  __ , __leaf__)) 
0009730: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
0009740: 5f5f 6e6f 6e6e 756c 6c5f 5f20 2832 2929  __nonnull__ (2))
0009750: 293b 0a0a 0a0a 6578 7465 726e 2063 6861  );....extern cha
0009760: 7220 2a73 6574 7374 6174 6520 2863 6861  r *setstate (cha
0009770: 7220 2a5f 5f73 7461 7465 6275 6629 205f  r *__statebuf) _
0009780: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
0009790: 5f6e 6f74 6872 6f77 5f5f 202c 205f 5f6c  _nothrow__ , __l
00097a0: 6561 665f 5f29 2920 5f5f 6174 7472 6962  eaf__)) __attrib
00097b0: 7574 655f 5f20 2828 5f5f 6e6f 6e6e 756c  ute__ ((__nonnul
00097c0: 6c5f 5f20 2831 2929 293b 0a0a 0a0a 0a0a  l__ (1)));......
00097d0: 0a0a 7374 7275 6374 2072 616e 646f 6d5f  ..struct random_
00097e0: 6461 7461 0a20 207b 0a20 2020 2069 6e74  data.  {.    int
00097f0: 3332 5f74 202a 6670 7472 3b0a 2020 2020  32_t *fptr;.    
0009800: 696e 7433 325f 7420 2a72 7074 723b 0a20  int32_t *rptr;. 
0009810: 2020 2069 6e74 3332 5f74 202a 7374 6174     int32_t *stat
0009820: 653b 0a20 2020 2069 6e74 2072 616e 645f  e;.    int rand_
0009830: 7479 7065 3b0a 2020 2020 696e 7420 7261  type;.    int ra
0009840: 6e64 5f64 6567 3b0a 2020 2020 696e 7420  nd_deg;.    int 
0009850: 7261 6e64 5f73 6570 3b0a 2020 2020 696e  rand_sep;.    in
0009860: 7433 325f 7420 2a65 6e64 5f70 7472 3b0a  t32_t *end_ptr;.
0009870: 2020 7d3b 0a0a 6578 7465 726e 2069 6e74    };..extern int
0009880: 2072 616e 646f 6d5f 7220 2873 7472 7563   random_r (struc
0009890: 7420 7261 6e64 6f6d 5f64 6174 6120 2a5f  t random_data *_
00098a0: 5f72 6573 7472 6963 7420 5f5f 6275 662c  _restrict __buf,
00098b0: 0a20 2020 2020 2020 696e 7433 325f 7420  .       int32_t 
00098c0: 2a5f 5f72 6573 7472 6963 7420 5f5f 7265  *__restrict __re
00098d0: 7375 6c74 2920 5f5f 6174 7472 6962 7574  sult) __attribut
00098e0: 655f 5f20 2828 5f5f 6e6f 7468 726f 775f  e__ ((__nothrow_
00098f0: 5f20 2c20 5f5f 6c65 6166 5f5f 2929 205f  _ , __leaf__)) _
0009900: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
0009910: 5f6e 6f6e 6e75 6c6c 5f5f 2028 312c 2032  _nonnull__ (1, 2
0009920: 2929 293b 0a0a 6578 7465 726e 2069 6e74  )));..extern int
0009930: 2073 7261 6e64 6f6d 5f72 2028 756e 7369   srandom_r (unsi
0009940: 676e 6564 2069 6e74 205f 5f73 6565 642c  gned int __seed,
0009950: 2073 7472 7563 7420 7261 6e64 6f6d 5f64   struct random_d
0009960: 6174 6120 2a5f 5f62 7566 290a 2020 2020  ata *__buf).    
0009970: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0009980: 285f 5f6e 6f74 6872 6f77 5f5f 202c 205f  (__nothrow__ , _
0009990: 5f6c 6561 665f 5f29 2920 5f5f 6174 7472  _leaf__)) __attr
00099a0: 6962 7574 655f 5f20 2828 5f5f 6e6f 6e6e  ibute__ ((__nonn
00099b0: 756c 6c5f 5f20 2832 2929 293b 0a0a 6578  ull__ (2)));..ex
00099c0: 7465 726e 2069 6e74 2069 6e69 7473 7461  tern int initsta
00099d0: 7465 5f72 2028 756e 7369 676e 6564 2069  te_r (unsigned i
00099e0: 6e74 205f 5f73 6565 642c 2063 6861 7220  nt __seed, char 
00099f0: 2a5f 5f72 6573 7472 6963 7420 5f5f 7374  *__restrict __st
0009a00: 6174 6562 7566 2c0a 2020 2073 697a 655f  atebuf,.   size_
0009a10: 7420 5f5f 7374 6174 656c 656e 2c0a 2020  t __statelen,.  
0009a20: 2073 7472 7563 7420 7261 6e64 6f6d 5f64   struct random_d
0009a30: 6174 6120 2a5f 5f72 6573 7472 6963 7420  ata *__restrict 
0009a40: 5f5f 6275 6629 0a20 2020 2020 5f5f 6174  __buf).     __at
0009a50: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
0009a60: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
0009a70: 5f5f 2929 205f 5f61 7474 7269 6275 7465  __)) __attribute
0009a80: 5f5f 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f  __ ((__nonnull__
0009a90: 2028 322c 2034 2929 293b 0a0a 6578 7465   (2, 4)));..exte
0009aa0: 726e 2069 6e74 2073 6574 7374 6174 655f  rn int setstate_
0009ab0: 7220 2863 6861 7220 2a5f 5f72 6573 7472  r (char *__restr
0009ac0: 6963 7420 5f5f 7374 6174 6562 7566 2c0a  ict __statebuf,.
0009ad0: 2020 2020 2020 2020 2073 7472 7563 7420           struct 
0009ae0: 7261 6e64 6f6d 5f64 6174 6120 2a5f 5f72  random_data *__r
0009af0: 6573 7472 6963 7420 5f5f 6275 6629 0a20  estrict __buf). 
0009b00: 2020 2020 5f5f 6174 7472 6962 7574 655f      __attribute_
0009b10: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
0009b20: 2c20 5f5f 6c65 6166 5f5f 2929 205f 5f61  , __leaf__)) __a
0009b30: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
0009b40: 6f6e 6e75 6c6c 5f5f 2028 312c 2032 2929  onnull__ (1, 2))
0009b50: 293b 0a0a 0a0a 0a0a 0a65 7874 6572 6e20  );.......extern 
0009b60: 696e 7420 7261 6e64 2028 766f 6964 2920  int rand (void) 
0009b70: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
0009b80: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
0009b90: 6c65 6166 5f5f 2929 3b0a 0a65 7874 6572  leaf__));..exter
0009ba0: 6e20 766f 6964 2073 7261 6e64 2028 756e  n void srand (un
0009bb0: 7369 676e 6564 2069 6e74 205f 5f73 6565  signed int __see
0009bc0: 6429 205f 5f61 7474 7269 6275 7465 5f5f  d) __attribute__
0009bd0: 2028 285f 5f6e 6f74 6872 6f77 5f5f 202c   ((__nothrow__ ,
0009be0: 205f 5f6c 6561 665f 5f29 293b 0a0a 0a0a   __leaf__));....
0009bf0: 0a65 7874 6572 6e20 696e 7420 7261 6e64  .extern int rand
0009c00: 5f72 2028 756e 7369 676e 6564 2069 6e74  _r (unsigned int
0009c10: 202a 5f5f 7365 6564 2920 5f5f 6174 7472   *__seed) __attr
0009c20: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
0009c30: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
0009c40: 2929 3b0a 0a0a 0a0a 0a0a 0a65 7874 6572  ));........exter
0009c50: 6e20 646f 7562 6c65 2064 7261 6e64 3438  n double drand48
0009c60: 2028 766f 6964 2920 5f5f 6174 7472 6962   (void) __attrib
0009c70: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
0009c80: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
0009c90: 3b0a 6578 7465 726e 2064 6f75 626c 6520  ;.extern double 
0009ca0: 6572 616e 6434 3820 2875 6e73 6967 6e65  erand48 (unsigne
0009cb0: 6420 7368 6f72 7420 696e 7420 5f5f 7873  d short int __xs
0009cc0: 7562 695b 335d 2920 5f5f 6174 7472 6962  ubi[3]) __attrib
0009cd0: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
0009ce0: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
0009cf0: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0009d00: 285f 5f6e 6f6e 6e75 6c6c 5f5f 2028 3129  (__nonnull__ (1)
0009d10: 2929 3b0a 0a0a 6578 7465 726e 206c 6f6e  ));...extern lon
0009d20: 6720 696e 7420 6c72 616e 6434 3820 2876  g int lrand48 (v
0009d30: 6f69 6429 205f 5f61 7474 7269 6275 7465  oid) __attribute
0009d40: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
0009d50: 202c 205f 5f6c 6561 665f 5f29 293b 0a65   , __leaf__));.e
0009d60: 7874 6572 6e20 6c6f 6e67 2069 6e74 206e  xtern long int n
0009d70: 7261 6e64 3438 2028 756e 7369 676e 6564  rand48 (unsigned
0009d80: 2073 686f 7274 2069 6e74 205f 5f78 7375   short int __xsu
0009d90: 6269 5b33 5d29 0a20 2020 2020 5f5f 6174  bi[3]).     __at
0009da0: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
0009db0: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
0009dc0: 5f5f 2929 205f 5f61 7474 7269 6275 7465  __)) __attribute
0009dd0: 5f5f 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f  __ ((__nonnull__
0009de0: 2028 3129 2929 3b0a 0a0a 6578 7465 726e   (1)));...extern
0009df0: 206c 6f6e 6720 696e 7420 6d72 616e 6434   long int mrand4
0009e00: 3820 2876 6f69 6429 205f 5f61 7474 7269  8 (void) __attri
0009e10: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
0009e20: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
0009e30: 293b 0a65 7874 6572 6e20 6c6f 6e67 2069  );.extern long i
0009e40: 6e74 206a 7261 6e64 3438 2028 756e 7369  nt jrand48 (unsi
0009e50: 676e 6564 2073 686f 7274 2069 6e74 205f  gned short int _
0009e60: 5f78 7375 6269 5b33 5d29 0a20 2020 2020  _xsubi[3]).     
0009e70: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
0009e80: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
0009e90: 6c65 6166 5f5f 2929 205f 5f61 7474 7269  leaf__)) __attri
0009ea0: 6275 7465 5f5f 2028 285f 5f6e 6f6e 6e75  bute__ ((__nonnu
0009eb0: 6c6c 5f5f 2028 3129 2929 3b0a 0a0a 6578  ll__ (1)));...ex
0009ec0: 7465 726e 2076 6f69 6420 7372 616e 6434  tern void srand4
0009ed0: 3820 286c 6f6e 6720 696e 7420 5f5f 7365  8 (long int __se
0009ee0: 6564 7661 6c29 205f 5f61 7474 7269 6275  edval) __attribu
0009ef0: 7465 5f5f 2028 285f 5f6e 6f74 6872 6f77  te__ ((__nothrow
0009f00: 5f5f 202c 205f 5f6c 6561 665f 5f29 293b  __ , __leaf__));
0009f10: 0a65 7874 6572 6e20 756e 7369 676e 6564  .extern unsigned
0009f20: 2073 686f 7274 2069 6e74 202a 7365 6564   short int *seed
0009f30: 3438 2028 756e 7369 676e 6564 2073 686f  48 (unsigned sho
0009f40: 7274 2069 6e74 205f 5f73 6565 6431 3676  rt int __seed16v
0009f50: 5b33 5d29 0a20 2020 2020 5f5f 6174 7472  [3]).     __attr
0009f60: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
0009f70: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
0009f80: 2929 205f 5f61 7474 7269 6275 7465 5f5f  )) __attribute__
0009f90: 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f 2028   ((__nonnull__ (
0009fa0: 3129 2929 3b0a 6578 7465 726e 2076 6f69  1)));.extern voi
0009fb0: 6420 6c63 6f6e 6734 3820 2875 6e73 6967  d lcong48 (unsig
0009fc0: 6e65 6420 7368 6f72 7420 696e 7420 5f5f  ned short int __
0009fd0: 7061 7261 6d5b 375d 2920 5f5f 6174 7472  param[7]) __attr
0009fe0: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
0009ff0: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
000a000: 2929 205f 5f61 7474 7269 6275 7465 5f5f  )) __attribute__
000a010: 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f 2028   ((__nonnull__ (
000a020: 3129 2929 3b0a 0a0a 0a0a 0a73 7472 7563  1)));......struc
000a030: 7420 6472 616e 6434 385f 6461 7461 0a20  t drand48_data. 
000a040: 207b 0a20 2020 2075 6e73 6967 6e65 6420   {.    unsigned 
000a050: 7368 6f72 7420 696e 7420 5f5f 785b 335d  short int __x[3]
000a060: 3b0a 2020 2020 756e 7369 676e 6564 2073  ;.    unsigned s
000a070: 686f 7274 2069 6e74 205f 5f6f 6c64 5f78  hort int __old_x
000a080: 5b33 5d3b 0a20 2020 2075 6e73 6967 6e65  [3];.    unsigne
000a090: 6420 7368 6f72 7420 696e 7420 5f5f 633b  d short int __c;
000a0a0: 0a20 2020 2075 6e73 6967 6e65 6420 7368  .    unsigned sh
000a0b0: 6f72 7420 696e 7420 5f5f 696e 6974 3b0a  ort int __init;.
000a0c0: 2020 2020 756e 7369 676e 6564 206c 6f6e      unsigned lon
000a0d0: 6720 6c6f 6e67 2069 6e74 205f 5f61 3b0a  g long int __a;.
000a0e0: 2020 7d3b 0a0a 0a65 7874 6572 6e20 696e    };...extern in
000a0f0: 7420 6472 616e 6434 385f 7220 2873 7472  t drand48_r (str
000a100: 7563 7420 6472 616e 6434 385f 6461 7461  uct drand48_data
000a110: 202a 5f5f 7265 7374 7269 6374 205f 5f62   *__restrict __b
000a120: 7566 6665 722c 0a20 2020 2020 2020 2064  uffer,.        d
000a130: 6f75 626c 6520 2a5f 5f72 6573 7472 6963  ouble *__restric
000a140: 7420 5f5f 7265 7375 6c74 2920 5f5f 6174  t __result) __at
000a150: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
000a160: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
000a170: 5f5f 2929 205f 5f61 7474 7269 6275 7465  __)) __attribute
000a180: 5f5f 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f  __ ((__nonnull__
000a190: 2028 312c 2032 2929 293b 0a65 7874 6572   (1, 2)));.exter
000a1a0: 6e20 696e 7420 6572 616e 6434 385f 7220  n int erand48_r 
000a1b0: 2875 6e73 6967 6e65 6420 7368 6f72 7420  (unsigned short 
000a1c0: 696e 7420 5f5f 7873 7562 695b 335d 2c0a  int __xsubi[3],.
000a1d0: 2020 2020 2020 2020 7374 7275 6374 2064          struct d
000a1e0: 7261 6e64 3438 5f64 6174 6120 2a5f 5f72  rand48_data *__r
000a1f0: 6573 7472 6963 7420 5f5f 6275 6666 6572  estrict __buffer
000a200: 2c0a 2020 2020 2020 2020 646f 7562 6c65  ,.        double
000a210: 202a 5f5f 7265 7374 7269 6374 205f 5f72   *__restrict __r
000a220: 6573 756c 7429 205f 5f61 7474 7269 6275  esult) __attribu
000a230: 7465 5f5f 2028 285f 5f6e 6f74 6872 6f77  te__ ((__nothrow
000a240: 5f5f 202c 205f 5f6c 6561 665f 5f29 2920  __ , __leaf__)) 
000a250: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
000a260: 5f5f 6e6f 6e6e 756c 6c5f 5f20 2831 2c20  __nonnull__ (1, 
000a270: 3229 2929 3b0a 0a0a 6578 7465 726e 2069  2)));...extern i
000a280: 6e74 206c 7261 6e64 3438 5f72 2028 7374  nt lrand48_r (st
000a290: 7275 6374 2064 7261 6e64 3438 5f64 6174  ruct drand48_dat
000a2a0: 6120 2a5f 5f72 6573 7472 6963 7420 5f5f  a *__restrict __
000a2b0: 6275 6666 6572 2c0a 2020 2020 2020 2020  buffer,.        
000a2c0: 6c6f 6e67 2069 6e74 202a 5f5f 7265 7374  long int *__rest
000a2d0: 7269 6374 205f 5f72 6573 756c 7429 0a20  rict __result). 
000a2e0: 2020 2020 5f5f 6174 7472 6962 7574 655f      __attribute_
000a2f0: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
000a300: 2c20 5f5f 6c65 6166 5f5f 2929 205f 5f61  , __leaf__)) __a
000a310: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
000a320: 6f6e 6e75 6c6c 5f5f 2028 312c 2032 2929  onnull__ (1, 2))
000a330: 293b 0a65 7874 6572 6e20 696e 7420 6e72  );.extern int nr
000a340: 616e 6434 385f 7220 2875 6e73 6967 6e65  and48_r (unsigne
000a350: 6420 7368 6f72 7420 696e 7420 5f5f 7873  d short int __xs
000a360: 7562 695b 335d 2c0a 2020 2020 2020 2020  ubi[3],.        
000a370: 7374 7275 6374 2064 7261 6e64 3438 5f64  struct drand48_d
000a380: 6174 6120 2a5f 5f72 6573 7472 6963 7420  ata *__restrict 
000a390: 5f5f 6275 6666 6572 2c0a 2020 2020 2020  __buffer,.      
000a3a0: 2020 6c6f 6e67 2069 6e74 202a 5f5f 7265    long int *__re
000a3b0: 7374 7269 6374 205f 5f72 6573 756c 7429  strict __result)
000a3c0: 0a20 2020 2020 5f5f 6174 7472 6962 7574  .     __attribut
000a3d0: 655f 5f20 2828 5f5f 6e6f 7468 726f 775f  e__ ((__nothrow_
000a3e0: 5f20 2c20 5f5f 6c65 6166 5f5f 2929 205f  _ , __leaf__)) _
000a3f0: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
000a400: 5f6e 6f6e 6e75 6c6c 5f5f 2028 312c 2032  _nonnull__ (1, 2
000a410: 2929 293b 0a0a 0a65 7874 6572 6e20 696e  )));...extern in
000a420: 7420 6d72 616e 6434 385f 7220 2873 7472  t mrand48_r (str
000a430: 7563 7420 6472 616e 6434 385f 6461 7461  uct drand48_data
000a440: 202a 5f5f 7265 7374 7269 6374 205f 5f62   *__restrict __b
000a450: 7566 6665 722c 0a20 2020 2020 2020 206c  uffer,.        l
000a460: 6f6e 6720 696e 7420 2a5f 5f72 6573 7472  ong int *__restr
000a470: 6963 7420 5f5f 7265 7375 6c74 290a 2020  ict __result).  
000a480: 2020 205f 5f61 7474 7269 6275 7465 5f5f     __attribute__
000a490: 2028 285f 5f6e 6f74 6872 6f77 5f5f 202c   ((__nothrow__ ,
000a4a0: 205f 5f6c 6561 665f 5f29 2920 5f5f 6174   __leaf__)) __at
000a4b0: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
000a4c0: 6e6e 756c 6c5f 5f20 2831 2c20 3229 2929  nnull__ (1, 2)))
000a4d0: 3b0a 6578 7465 726e 2069 6e74 206a 7261  ;.extern int jra
000a4e0: 6e64 3438 5f72 2028 756e 7369 676e 6564  nd48_r (unsigned
000a4f0: 2073 686f 7274 2069 6e74 205f 5f78 7375   short int __xsu
000a500: 6269 5b33 5d2c 0a20 2020 2020 2020 2073  bi[3],.        s
000a510: 7472 7563 7420 6472 616e 6434 385f 6461  truct drand48_da
000a520: 7461 202a 5f5f 7265 7374 7269 6374 205f  ta *__restrict _
000a530: 5f62 7566 6665 722c 0a20 2020 2020 2020  _buffer,.       
000a540: 206c 6f6e 6720 696e 7420 2a5f 5f72 6573   long int *__res
000a550: 7472 6963 7420 5f5f 7265 7375 6c74 290a  trict __result).
000a560: 2020 2020 205f 5f61 7474 7269 6275 7465       __attribute
000a570: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
000a580: 202c 205f 5f6c 6561 665f 5f29 2920 5f5f   , __leaf__)) __
000a590: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
000a5a0: 6e6f 6e6e 756c 6c5f 5f20 2831 2c20 3229  nonnull__ (1, 2)
000a5b0: 2929 3b0a 0a0a 6578 7465 726e 2069 6e74  ));...extern int
000a5c0: 2073 7261 6e64 3438 5f72 2028 6c6f 6e67   srand48_r (long
000a5d0: 2069 6e74 205f 5f73 6565 6476 616c 2c20   int __seedval, 
000a5e0: 7374 7275 6374 2064 7261 6e64 3438 5f64  struct drand48_d
000a5f0: 6174 6120 2a5f 5f62 7566 6665 7229 0a20  ata *__buffer). 
000a600: 2020 2020 5f5f 6174 7472 6962 7574 655f      __attribute_
000a610: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
000a620: 2c20 5f5f 6c65 6166 5f5f 2929 205f 5f61  , __leaf__)) __a
000a630: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
000a640: 6f6e 6e75 6c6c 5f5f 2028 3229 2929 3b0a  onnull__ (2)));.
000a650: 0a65 7874 6572 6e20 696e 7420 7365 6564  .extern int seed
000a660: 3438 5f72 2028 756e 7369 676e 6564 2073  48_r (unsigned s
000a670: 686f 7274 2069 6e74 205f 5f73 6565 6431  hort int __seed1
000a680: 3676 5b33 5d2c 0a20 2020 2020 2020 7374  6v[3],.       st
000a690: 7275 6374 2064 7261 6e64 3438 5f64 6174  ruct drand48_dat
000a6a0: 6120 2a5f 5f62 7566 6665 7229 205f 5f61  a *__buffer) __a
000a6b0: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
000a6c0: 6f74 6872 6f77 5f5f 202c 205f 5f6c 6561  othrow__ , __lea
000a6d0: 665f 5f29 2920 5f5f 6174 7472 6962 7574  f__)) __attribut
000a6e0: 655f 5f20 2828 5f5f 6e6f 6e6e 756c 6c5f  e__ ((__nonnull_
000a6f0: 5f20 2831 2c20 3229 2929 3b0a 0a65 7874  _ (1, 2)));..ext
000a700: 6572 6e20 696e 7420 6c63 6f6e 6734 385f  ern int lcong48_
000a710: 7220 2875 6e73 6967 6e65 6420 7368 6f72  r (unsigned shor
000a720: 7420 696e 7420 5f5f 7061 7261 6d5b 375d  t int __param[7]
000a730: 2c0a 2020 2020 2020 2020 7374 7275 6374  ,.        struct
000a740: 2064 7261 6e64 3438 5f64 6174 6120 2a5f   drand48_data *_
000a750: 5f62 7566 6665 7229 0a20 2020 2020 5f5f  _buffer).     __
000a760: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
000a770: 6e6f 7468 726f 775f 5f20 2c20 5f5f 6c65  nothrow__ , __le
000a780: 6166 5f5f 2929 205f 5f61 7474 7269 6275  af__)) __attribu
000a790: 7465 5f5f 2028 285f 5f6e 6f6e 6e75 6c6c  te__ ((__nonnull
000a7a0: 5f5f 2028 312c 2032 2929 293b 0a0a 0a0a  __ (1, 2)));....
000a7b0: 0a0a 0a0a 0a0a 6578 7465 726e 2076 6f69  ......extern voi
000a7c0: 6420 2a6d 616c 6c6f 6320 2873 697a 655f  d *malloc (size_
000a7d0: 7420 5f5f 7369 7a65 2920 5f5f 6174 7472  t __size) __attr
000a7e0: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
000a7f0: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
000a800: 2929 205f 5f61 7474 7269 6275 7465 5f5f  )) __attribute__
000a810: 2028 285f 5f6d 616c 6c6f 635f 5f29 2920   ((__malloc__)) 
000a820: 3b0a 0a65 7874 6572 6e20 766f 6964 202a  ;..extern void *
000a830: 6361 6c6c 6f63 2028 7369 7a65 5f74 205f  calloc (size_t _
000a840: 5f6e 6d65 6d62 2c20 7369 7a65 5f74 205f  _nmemb, size_t _
000a850: 5f73 697a 6529 0a20 2020 2020 5f5f 6174  _size).     __at
000a860: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
000a870: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
000a880: 5f5f 2929 205f 5f61 7474 7269 6275 7465  __)) __attribute
000a890: 5f5f 2028 285f 5f6d 616c 6c6f 635f 5f29  __ ((__malloc__)
000a8a0: 2920 3b0a 0a0a 0a0a 0a0a 0a0a 0a0a 6578  ) ;...........ex
000a8b0: 7465 726e 2076 6f69 6420 2a72 6561 6c6c  tern void *reall
000a8c0: 6f63 2028 766f 6964 202a 5f5f 7074 722c  oc (void *__ptr,
000a8d0: 2073 697a 655f 7420 5f5f 7369 7a65 290a   size_t __size).
000a8e0: 2020 2020 205f 5f61 7474 7269 6275 7465       __attribute
000a8f0: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
000a900: 202c 205f 5f6c 6561 665f 5f29 2920 5f5f   , __leaf__)) __
000a910: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
000a920: 7761 726e 5f75 6e75 7365 645f 7265 7375  warn_unused_resu
000a930: 6c74 5f5f 2929 3b0a 0a65 7874 6572 6e20  lt__));..extern 
000a940: 766f 6964 2066 7265 6520 2876 6f69 6420  void free (void 
000a950: 2a5f 5f70 7472 2920 5f5f 6174 7472 6962  *__ptr) __attrib
000a960: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
000a970: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
000a980: 3b0a 0a0a 0a0a 6578 7465 726e 2076 6f69  ;.....extern voi
000a990: 6420 6366 7265 6520 2876 6f69 6420 2a5f  d cfree (void *_
000a9a0: 5f70 7472 2920 5f5f 6174 7472 6962 7574  _ptr) __attribut
000a9b0: 655f 5f20 2828 5f5f 6e6f 7468 726f 775f  e__ ((__nothrow_
000a9c0: 5f20 2c20 5f5f 6c65 6166 5f5f 2929 3b0a  _ , __leaf__));.
000a9d0: 0a0a 0a23 2031 2022 2f75 7372 2f69 6e63  ...# 1 "/usr/inc
000a9e0: 6c75 6465 2f61 6c6c 6f63 612e 6822 2031  lude/alloca.h" 1
000a9f0: 2033 2034 0a23 2032 3420 222f 7573 722f   3 4.# 24 "/usr/
000aa00: 696e 636c 7564 652f 616c 6c6f 6361 2e68  include/alloca.h
000aa10: 2220 3320 340a 2320 3120 222f 7573 722f  " 3 4.# 1 "/usr/
000aa20: 6c69 622f 6763 632f 7838 365f 3634 2d72  lib/gcc/x86_64-r
000aa30: 6564 6861 742d 6c69 6e75 782f 342e 382e  edhat-linux/4.8.
000aa40: 332f 696e 636c 7564 652f 7374 6464 6566  3/include/stddef
000aa50: 2e68 2220 3120 3320 340a 2320 3235 2022  .h" 1 3 4.# 25 "
000aa60: 2f75 7372 2f69 6e63 6c75 6465 2f61 6c6c  /usr/include/all
000aa70: 6f63 612e 6822 2032 2033 2034 0a0a 0a0a  oca.h" 2 3 4....
000aa80: 0a0a 0a0a 6578 7465 726e 2076 6f69 6420  ....extern void 
000aa90: 2a61 6c6c 6f63 6120 2873 697a 655f 7420  *alloca (size_t 
000aaa0: 5f5f 7369 7a65 2920 5f5f 6174 7472 6962  __size) __attrib
000aab0: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
000aac0: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
000aad0: 3b0a 0a0a 0a0a 0a0a 2320 3439 3220 222f  ;.......# 492 "/
000aae0: 7573 722f 696e 636c 7564 652f 7374 646c  usr/include/stdl
000aaf0: 6962 2e68 2220 3220 3320 340a 0a0a 0a0a  ib.h" 2 3 4.....
000ab00: 0a65 7874 6572 6e20 766f 6964 202a 7661  .extern void *va
000ab10: 6c6c 6f63 2028 7369 7a65 5f74 205f 5f73  lloc (size_t __s
000ab20: 697a 6529 205f 5f61 7474 7269 6275 7465  ize) __attribute
000ab30: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
000ab40: 202c 205f 5f6c 6561 665f 5f29 2920 5f5f   , __leaf__)) __
000ab50: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
000ab60: 6d61 6c6c 6f63 5f5f 2929 203b 0a0a 0a0a  malloc__)) ;....
000ab70: 0a65 7874 6572 6e20 696e 7420 706f 7369  .extern int posi
000ab80: 785f 6d65 6d61 6c69 676e 2028 766f 6964  x_memalign (void
000ab90: 202a 2a5f 5f6d 656d 7074 722c 2073 697a   **__memptr, siz
000aba0: 655f 7420 5f5f 616c 6967 6e6d 656e 742c  e_t __alignment,
000abb0: 2073 697a 655f 7420 5f5f 7369 7a65 290a   size_t __size).
000abc0: 2020 2020 205f 5f61 7474 7269 6275 7465       __attribute
000abd0: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
000abe0: 202c 205f 5f6c 6561 665f 5f29 2920 5f5f   , __leaf__)) __
000abf0: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
000ac00: 6e6f 6e6e 756c 6c5f 5f20 2831 2929 2920  nonnull__ (1))) 
000ac10: 3b0a 2320 3531 3220 222f 7573 722f 696e  ;.# 512 "/usr/in
000ac20: 636c 7564 652f 7374 646c 6962 2e68 2220  clude/stdlib.h" 
000ac30: 3320 340a 0a0a 6578 7465 726e 2076 6f69  3 4...extern voi
000ac40: 6420 6162 6f72 7420 2876 6f69 6429 205f  d abort (void) _
000ac50: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
000ac60: 5f6e 6f74 6872 6f77 5f5f 202c 205f 5f6c  _nothrow__ , __l
000ac70: 6561 665f 5f29 2920 5f5f 6174 7472 6962  eaf__)) __attrib
000ac80: 7574 655f 5f20 2828 5f5f 6e6f 7265 7475  ute__ ((__noretu
000ac90: 726e 5f5f 2929 3b0a 0a0a 0a65 7874 6572  rn__));....exter
000aca0: 6e20 696e 7420 6174 6578 6974 2028 766f  n int atexit (vo
000acb0: 6964 2028 2a5f 5f66 756e 6329 2028 766f  id (*__func) (vo
000acc0: 6964 2929 205f 5f61 7474 7269 6275 7465  id)) __attribute
000acd0: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
000ace0: 202c 205f 5f6c 6561 665f 5f29 2920 5f5f   , __leaf__)) __
000acf0: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
000ad00: 6e6f 6e6e 756c 6c5f 5f20 2831 2929 293b  nonnull__ (1)));
000ad10: 0a23 2035 3239 2022 2f75 7372 2f69 6e63  .# 529 "/usr/inc
000ad20: 6c75 6465 2f73 7464 6c69 622e 6822 2033  lude/stdlib.h" 3
000ad30: 2034 0a0a 0a0a 0a0a 6578 7465 726e 2069   4......extern i
000ad40: 6e74 206f 6e5f 6578 6974 2028 766f 6964  nt on_exit (void
000ad50: 2028 2a5f 5f66 756e 6329 2028 696e 7420   (*__func) (int 
000ad60: 5f5f 7374 6174 7573 2c20 766f 6964 202a  __status, void *
000ad70: 5f5f 6172 6729 2c20 766f 6964 202a 5f5f  __arg), void *__
000ad80: 6172 6729 0a20 2020 2020 5f5f 6174 7472  arg).     __attr
000ad90: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
000ada0: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
000adb0: 2929 205f 5f61 7474 7269 6275 7465 5f5f  )) __attribute__
000adc0: 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f 2028   ((__nonnull__ (
000add0: 3129 2929 3b0a 0a0a 0a0a 0a0a 6578 7465  1)));.......exte
000ade0: 726e 2076 6f69 6420 6578 6974 2028 696e  rn void exit (in
000adf0: 7420 5f5f 7374 6174 7573 2920 5f5f 6174  t __status) __at
000ae00: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
000ae10: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
000ae20: 5f5f 2929 205f 5f61 7474 7269 6275 7465  __)) __attribute
000ae30: 5f5f 2028 285f 5f6e 6f72 6574 7572 6e5f  __ ((__noreturn_
000ae40: 5f29 293b 0a0a 0a0a 0a0a 0a0a 0a0a 0a0a  _));............
000ae50: 0a0a 6578 7465 726e 2076 6f69 6420 5f45  ..extern void _E
000ae60: 7869 7420 2869 6e74 205f 5f73 7461 7475  xit (int __statu
000ae70: 7329 205f 5f61 7474 7269 6275 7465 5f5f  s) __attribute__
000ae80: 2028 285f 5f6e 6f74 6872 6f77 5f5f 202c   ((__nothrow__ ,
000ae90: 205f 5f6c 6561 665f 5f29 2920 5f5f 6174   __leaf__)) __at
000aea0: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
000aeb0: 7265 7475 726e 5f5f 2929 3b0a 0a0a 0a0a  return__));.....
000aec0: 0a0a 6578 7465 726e 2063 6861 7220 2a67  ..extern char *g
000aed0: 6574 656e 7620 2863 6f6e 7374 2063 6861  etenv (const cha
000aee0: 7220 2a5f 5f6e 616d 6529 205f 5f61 7474  r *__name) __att
000aef0: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
000af00: 6872 6f77 5f5f 202c 205f 5f6c 6561 665f  hrow__ , __leaf_
000af10: 5f29 2920 5f5f 6174 7472 6962 7574 655f  _)) __attribute_
000af20: 5f20 2828 5f5f 6e6f 6e6e 756c 6c5f 5f20  _ ((__nonnull__ 
000af30: 2831 2929 2920 3b0a 0a23 2035 3737 2022  (1))) ;..# 577 "
000af40: 2f75 7372 2f69 6e63 6c75 6465 2f73 7464  /usr/include/std
000af50: 6c69 622e 6822 2033 2034 0a65 7874 6572  lib.h" 3 4.exter
000af60: 6e20 696e 7420 7075 7465 6e76 2028 6368  n int putenv (ch
000af70: 6172 202a 5f5f 7374 7269 6e67 2920 5f5f  ar *__string) __
000af80: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
000af90: 6e6f 7468 726f 775f 5f20 2c20 5f5f 6c65  nothrow__ , __le
000afa0: 6166 5f5f 2929 205f 5f61 7474 7269 6275  af__)) __attribu
000afb0: 7465 5f5f 2028 285f 5f6e 6f6e 6e75 6c6c  te__ ((__nonnull
000afc0: 5f5f 2028 3129 2929 3b0a 0a0a 0a0a 0a65  __ (1)));......e
000afd0: 7874 6572 6e20 696e 7420 7365 7465 6e76  xtern int setenv
000afe0: 2028 636f 6e73 7420 6368 6172 202a 5f5f   (const char *__
000aff0: 6e61 6d65 2c20 636f 6e73 7420 6368 6172  name, const char
000b000: 202a 5f5f 7661 6c75 652c 2069 6e74 205f   *__value, int _
000b010: 5f72 6570 6c61 6365 290a 2020 2020 205f  _replace).     _
000b020: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
000b030: 5f6e 6f74 6872 6f77 5f5f 202c 205f 5f6c  _nothrow__ , __l
000b040: 6561 665f 5f29 2920 5f5f 6174 7472 6962  eaf__)) __attrib
000b050: 7574 655f 5f20 2828 5f5f 6e6f 6e6e 756c  ute__ ((__nonnul
000b060: 6c5f 5f20 2832 2929 293b 0a0a 0a65 7874  l__ (2)));...ext
000b070: 6572 6e20 696e 7420 756e 7365 7465 6e76  ern int unsetenv
000b080: 2028 636f 6e73 7420 6368 6172 202a 5f5f   (const char *__
000b090: 6e61 6d65 2920 5f5f 6174 7472 6962 7574  name) __attribut
000b0a0: 655f 5f20 2828 5f5f 6e6f 7468 726f 775f  e__ ((__nothrow_
000b0b0: 5f20 2c20 5f5f 6c65 6166 5f5f 2929 205f  _ , __leaf__)) _
000b0c0: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
000b0d0: 5f6e 6f6e 6e75 6c6c 5f5f 2028 3129 2929  _nonnull__ (1)))
000b0e0: 3b0a 0a0a 0a0a 0a0a 6578 7465 726e 2069  ;.......extern i
000b0f0: 6e74 2063 6c65 6172 656e 7620 2876 6f69  nt clearenv (voi
000b100: 6429 205f 5f61 7474 7269 6275 7465 5f5f  d) __attribute__
000b110: 2028 285f 5f6e 6f74 6872 6f77 5f5f 202c   ((__nothrow__ ,
000b120: 205f 5f6c 6561 665f 5f29 293b 0a23 2036   __leaf__));.# 6
000b130: 3035 2022 2f75 7372 2f69 6e63 6c75 6465  05 "/usr/include
000b140: 2f73 7464 6c69 622e 6822 2033 2034 0a65  /stdlib.h" 3 4.e
000b150: 7874 6572 6e20 6368 6172 202a 6d6b 7465  xtern char *mkte
000b160: 6d70 2028 6368 6172 202a 5f5f 7465 6d70  mp (char *__temp
000b170: 6c61 7465 2920 5f5f 6174 7472 6962 7574  late) __attribut
000b180: 655f 5f20 2828 5f5f 6e6f 7468 726f 775f  e__ ((__nothrow_
000b190: 5f20 2c20 5f5f 6c65 6166 5f5f 2929 205f  _ , __leaf__)) _
000b1a0: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
000b1b0: 5f6e 6f6e 6e75 6c6c 5f5f 2028 3129 2929  _nonnull__ (1)))
000b1c0: 3b0a 2320 3631 3920 222f 7573 722f 696e  ;.# 619 "/usr/in
000b1d0: 636c 7564 652f 7374 646c 6962 2e68 2220  clude/stdlib.h" 
000b1e0: 3320 340a 6578 7465 726e 2069 6e74 206d  3 4.extern int m
000b1f0: 6b73 7465 6d70 2028 6368 6172 202a 5f5f  kstemp (char *__
000b200: 7465 6d70 6c61 7465 2920 5f5f 6174 7472  template) __attr
000b210: 6962 7574 655f 5f20 2828 5f5f 6e6f 6e6e  ibute__ ((__nonn
000b220: 756c 6c5f 5f20 2831 2929 2920 3b0a 2320  ull__ (1))) ;.# 
000b230: 3634 3120 222f 7573 722f 696e 636c 7564  641 "/usr/includ
000b240: 652f 7374 646c 6962 2e68 2220 3320 340a  e/stdlib.h" 3 4.
000b250: 6578 7465 726e 2069 6e74 206d 6b73 7465  extern int mkste
000b260: 6d70 7320 2863 6861 7220 2a5f 5f74 656d  mps (char *__tem
000b270: 706c 6174 652c 2069 6e74 205f 5f73 7566  plate, int __suf
000b280: 6669 786c 656e 2920 5f5f 6174 7472 6962  fixlen) __attrib
000b290: 7574 655f 5f20 2828 5f5f 6e6f 6e6e 756c  ute__ ((__nonnul
000b2a0: 6c5f 5f20 2831 2929 2920 3b0a 2320 3636  l__ (1))) ;.# 66
000b2b0: 3220 222f 7573 722f 696e 636c 7564 652f  2 "/usr/include/
000b2c0: 7374 646c 6962 2e68 2220 3320 340a 6578  stdlib.h" 3 4.ex
000b2d0: 7465 726e 2063 6861 7220 2a6d 6b64 7465  tern char *mkdte
000b2e0: 6d70 2028 6368 6172 202a 5f5f 7465 6d70  mp (char *__temp
000b2f0: 6c61 7465 2920 5f5f 6174 7472 6962 7574  late) __attribut
000b300: 655f 5f20 2828 5f5f 6e6f 7468 726f 775f  e__ ((__nothrow_
000b310: 5f20 2c20 5f5f 6c65 6166 5f5f 2929 205f  _ , __leaf__)) _
000b320: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
000b330: 5f6e 6f6e 6e75 6c6c 5f5f 2028 3129 2929  _nonnull__ (1)))
000b340: 203b 0a23 2037 3131 2022 2f75 7372 2f69   ;.# 711 "/usr/i
000b350: 6e63 6c75 6465 2f73 7464 6c69 622e 6822  nclude/stdlib.h"
000b360: 2033 2034 0a0a 0a0a 0a0a 6578 7465 726e   3 4......extern
000b370: 2069 6e74 2073 7973 7465 6d20 2863 6f6e   int system (con
000b380: 7374 2063 6861 7220 2a5f 5f63 6f6d 6d61  st char *__comma
000b390: 6e64 2920 3b0a 0a23 2037 3333 2022 2f75  nd) ;..# 733 "/u
000b3a0: 7372 2f69 6e63 6c75 6465 2f73 7464 6c69  sr/include/stdli
000b3b0: 622e 6822 2033 2034 0a65 7874 6572 6e20  b.h" 3 4.extern 
000b3c0: 6368 6172 202a 7265 616c 7061 7468 2028  char *realpath (
000b3d0: 636f 6e73 7420 6368 6172 202a 5f5f 7265  const char *__re
000b3e0: 7374 7269 6374 205f 5f6e 616d 652c 0a20  strict __name,. 
000b3f0: 2020 2020 2020 2020 6368 6172 202a 5f5f          char *__
000b400: 7265 7374 7269 6374 205f 5f72 6573 6f6c  restrict __resol
000b410: 7665 6429 205f 5f61 7474 7269 6275 7465  ved) __attribute
000b420: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
000b430: 202c 205f 5f6c 6561 665f 5f29 2920 3b0a   , __leaf__)) ;.
000b440: 0a0a 0a0a 0a0a 7479 7065 6465 6620 696e  ......typedef in
000b450: 7420 282a 5f5f 636f 6d70 6172 5f66 6e5f  t (*__compar_fn_
000b460: 7429 2028 636f 6e73 7420 766f 6964 202a  t) (const void *
000b470: 2c20 636f 6e73 7420 766f 6964 202a 293b  , const void *);
000b480: 0a23 2037 3531 2022 2f75 7372 2f69 6e63  .# 751 "/usr/inc
000b490: 6c75 6465 2f73 7464 6c69 622e 6822 2033  lude/stdlib.h" 3
000b4a0: 2034 0a0a 0a0a 6578 7465 726e 2076 6f69   4....extern voi
000b4b0: 6420 2a62 7365 6172 6368 2028 636f 6e73  d *bsearch (cons
000b4c0: 7420 766f 6964 202a 5f5f 6b65 792c 2063  t void *__key, c
000b4d0: 6f6e 7374 2076 6f69 6420 2a5f 5f62 6173  onst void *__bas
000b4e0: 652c 0a20 2020 2020 2020 2073 697a 655f  e,.        size_
000b4f0: 7420 5f5f 6e6d 656d 622c 2073 697a 655f  t __nmemb, size_
000b500: 7420 5f5f 7369 7a65 2c20 5f5f 636f 6d70  t __size, __comp
000b510: 6172 5f66 6e5f 7420 5f5f 636f 6d70 6172  ar_fn_t __compar
000b520: 290a 2020 2020 205f 5f61 7474 7269 6275  ).     __attribu
000b530: 7465 5f5f 2028 285f 5f6e 6f6e 6e75 6c6c  te__ ((__nonnull
000b540: 5f5f 2028 312c 2032 2c20 3529 2929 203b  __ (1, 2, 5))) ;
000b550: 0a0a 0a0a 6578 7465 726e 2076 6f69 6420  ....extern void 
000b560: 7173 6f72 7420 2876 6f69 6420 2a5f 5f62  qsort (void *__b
000b570: 6173 652c 2073 697a 655f 7420 5f5f 6e6d  ase, size_t __nm
000b580: 656d 622c 2073 697a 655f 7420 5f5f 7369  emb, size_t __si
000b590: 7a65 2c0a 2020 2020 205f 5f63 6f6d 7061  ze,.     __compa
000b5a0: 725f 666e 5f74 205f 5f63 6f6d 7061 7229  r_fn_t __compar)
000b5b0: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
000b5c0: 285f 5f6e 6f6e 6e75 6c6c 5f5f 2028 312c  (__nonnull__ (1,
000b5d0: 2034 2929 293b 0a23 2037 3730 2022 2f75   4)));.# 770 "/u
000b5e0: 7372 2f69 6e63 6c75 6465 2f73 7464 6c69  sr/include/stdli
000b5f0: 622e 6822 2033 2034 0a65 7874 6572 6e20  b.h" 3 4.extern 
000b600: 696e 7420 6162 7320 2869 6e74 205f 5f78  int abs (int __x
000b610: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
000b620: 2828 5f5f 6e6f 7468 726f 775f 5f20 2c20  ((__nothrow__ , 
000b630: 5f5f 6c65 6166 5f5f 2929 205f 5f61 7474  __leaf__)) __att
000b640: 7269 6275 7465 5f5f 2028 285f 5f63 6f6e  ribute__ ((__con
000b650: 7374 5f5f 2929 203b 0a65 7874 6572 6e20  st__)) ;.extern 
000b660: 6c6f 6e67 2069 6e74 206c 6162 7320 286c  long int labs (l
000b670: 6f6e 6720 696e 7420 5f5f 7829 205f 5f61  ong int __x) __a
000b680: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
000b690: 6f74 6872 6f77 5f5f 202c 205f 5f6c 6561  othrow__ , __lea
000b6a0: 665f 5f29 2920 5f5f 6174 7472 6962 7574  f__)) __attribut
000b6b0: 655f 5f20 2828 5f5f 636f 6e73 745f 5f29  e__ ((__const__)
000b6c0: 2920 3b0a 0a0a 0a5f 5f65 7874 656e 7369  ) ;....__extensi
000b6d0: 6f6e 5f5f 2065 7874 6572 6e20 6c6f 6e67  on__ extern long
000b6e0: 206c 6f6e 6720 696e 7420 6c6c 6162 7320   long int llabs 
000b6f0: 286c 6f6e 6720 6c6f 6e67 2069 6e74 205f  (long long int _
000b700: 5f78 290a 2020 2020 205f 5f61 7474 7269  _x).     __attri
000b710: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
000b720: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
000b730: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
000b740: 2828 5f5f 636f 6e73 745f 5f29 2920 3b0a  ((__const__)) ;.
000b750: 0a0a 0a0a 0a0a 0a65 7874 6572 6e20 6469  .......extern di
000b760: 765f 7420 6469 7620 2869 6e74 205f 5f6e  v_t div (int __n
000b770: 756d 6572 2c20 696e 7420 5f5f 6465 6e6f  umer, int __deno
000b780: 6d29 0a20 2020 2020 5f5f 6174 7472 6962  m).     __attrib
000b790: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
000b7a0: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
000b7b0: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
000b7c0: 285f 5f63 6f6e 7374 5f5f 2929 203b 0a65  (__const__)) ;.e
000b7d0: 7874 6572 6e20 6c64 6976 5f74 206c 6469  xtern ldiv_t ldi
000b7e0: 7620 286c 6f6e 6720 696e 7420 5f5f 6e75  v (long int __nu
000b7f0: 6d65 722c 206c 6f6e 6720 696e 7420 5f5f  mer, long int __
000b800: 6465 6e6f 6d29 0a20 2020 2020 5f5f 6174  denom).     __at
000b810: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
000b820: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
000b830: 5f5f 2929 205f 5f61 7474 7269 6275 7465  __)) __attribute
000b840: 5f5f 2028 285f 5f63 6f6e 7374 5f5f 2929  __ ((__const__))
000b850: 203b 0a0a 0a0a 0a5f 5f65 7874 656e 7369   ;.....__extensi
000b860: 6f6e 5f5f 2065 7874 6572 6e20 6c6c 6469  on__ extern lldi
000b870: 765f 7420 6c6c 6469 7620 286c 6f6e 6720  v_t lldiv (long 
000b880: 6c6f 6e67 2069 6e74 205f 5f6e 756d 6572  long int __numer
000b890: 2c0a 2020 2020 2020 2020 6c6f 6e67 206c  ,.        long l
000b8a0: 6f6e 6720 696e 7420 5f5f 6465 6e6f 6d29  ong int __denom)
000b8b0: 0a20 2020 2020 5f5f 6174 7472 6962 7574  .     __attribut
000b8c0: 655f 5f20 2828 5f5f 6e6f 7468 726f 775f  e__ ((__nothrow_
000b8d0: 5f20 2c20 5f5f 6c65 6166 5f5f 2929 205f  _ , __leaf__)) _
000b8e0: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
000b8f0: 5f63 6f6e 7374 5f5f 2929 203b 0a0a 2320  _const__)) ;..# 
000b900: 3830 3720 222f 7573 722f 696e 636c 7564  807 "/usr/includ
000b910: 652f 7374 646c 6962 2e68 2220 3320 340a  e/stdlib.h" 3 4.
000b920: 6578 7465 726e 2063 6861 7220 2a65 6376  extern char *ecv
000b930: 7420 2864 6f75 626c 6520 5f5f 7661 6c75  t (double __valu
000b940: 652c 2069 6e74 205f 5f6e 6469 6769 742c  e, int __ndigit,
000b950: 2069 6e74 202a 5f5f 7265 7374 7269 6374   int *__restrict
000b960: 205f 5f64 6563 7074 2c0a 2020 2020 2069   __decpt,.     i
000b970: 6e74 202a 5f5f 7265 7374 7269 6374 205f  nt *__restrict _
000b980: 5f73 6967 6e29 205f 5f61 7474 7269 6275  _sign) __attribu
000b990: 7465 5f5f 2028 285f 5f6e 6f74 6872 6f77  te__ ((__nothrow
000b9a0: 5f5f 202c 205f 5f6c 6561 665f 5f29 2920  __ , __leaf__)) 
000b9b0: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
000b9c0: 5f5f 6e6f 6e6e 756c 6c5f 5f20 2833 2c20  __nonnull__ (3, 
000b9d0: 3429 2929 203b 0a0a 0a0a 0a65 7874 6572  4))) ;.....exter
000b9e0: 6e20 6368 6172 202a 6663 7674 2028 646f  n char *fcvt (do
000b9f0: 7562 6c65 205f 5f76 616c 7565 2c20 696e  uble __value, in
000ba00: 7420 5f5f 6e64 6967 6974 2c20 696e 7420  t __ndigit, int 
000ba10: 2a5f 5f72 6573 7472 6963 7420 5f5f 6465  *__restrict __de
000ba20: 6370 742c 0a20 2020 2020 696e 7420 2a5f  cpt,.     int *_
000ba30: 5f72 6573 7472 6963 7420 5f5f 7369 676e  _restrict __sign
000ba40: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
000ba50: 2828 5f5f 6e6f 7468 726f 775f 5f20 2c20  ((__nothrow__ , 
000ba60: 5f5f 6c65 6166 5f5f 2929 205f 5f61 7474  __leaf__)) __att
000ba70: 7269 6275 7465 5f5f 2028 285f 5f6e 6f6e  ribute__ ((__non
000ba80: 6e75 6c6c 5f5f 2028 332c 2034 2929 2920  null__ (3, 4))) 
000ba90: 3b0a 0a0a 0a0a 6578 7465 726e 2063 6861  ;.....extern cha
000baa0: 7220 2a67 6376 7420 2864 6f75 626c 6520  r *gcvt (double 
000bab0: 5f5f 7661 6c75 652c 2069 6e74 205f 5f6e  __value, int __n
000bac0: 6469 6769 742c 2063 6861 7220 2a5f 5f62  digit, char *__b
000bad0: 7566 290a 2020 2020 205f 5f61 7474 7269  uf).     __attri
000bae0: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
000baf0: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
000bb00: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
000bb10: 2828 5f5f 6e6f 6e6e 756c 6c5f 5f20 2833  ((__nonnull__ (3
000bb20: 2929 2920 3b0a 0a0a 0a0a 6578 7465 726e  ))) ;.....extern
000bb30: 2063 6861 7220 2a71 6563 7674 2028 6c6f   char *qecvt (lo
000bb40: 6e67 2064 6f75 626c 6520 5f5f 7661 6c75  ng double __valu
000bb50: 652c 2069 6e74 205f 5f6e 6469 6769 742c  e, int __ndigit,
000bb60: 0a20 2020 2020 2069 6e74 202a 5f5f 7265  .      int *__re
000bb70: 7374 7269 6374 205f 5f64 6563 7074 2c20  strict __decpt, 
000bb80: 696e 7420 2a5f 5f72 6573 7472 6963 7420  int *__restrict 
000bb90: 5f5f 7369 676e 290a 2020 2020 205f 5f61  __sign).     __a
000bba0: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
000bbb0: 6f74 6872 6f77 5f5f 202c 205f 5f6c 6561  othrow__ , __lea
000bbc0: 665f 5f29 2920 5f5f 6174 7472 6962 7574  f__)) __attribut
000bbd0: 655f 5f20 2828 5f5f 6e6f 6e6e 756c 6c5f  e__ ((__nonnull_
000bbe0: 5f20 2833 2c20 3429 2929 203b 0a65 7874  _ (3, 4))) ;.ext
000bbf0: 6572 6e20 6368 6172 202a 7166 6376 7420  ern char *qfcvt 
000bc00: 286c 6f6e 6720 646f 7562 6c65 205f 5f76  (long double __v
000bc10: 616c 7565 2c20 696e 7420 5f5f 6e64 6967  alue, int __ndig
000bc20: 6974 2c0a 2020 2020 2020 696e 7420 2a5f  it,.      int *_
000bc30: 5f72 6573 7472 6963 7420 5f5f 6465 6370  _restrict __decp
000bc40: 742c 2069 6e74 202a 5f5f 7265 7374 7269  t, int *__restri
000bc50: 6374 205f 5f73 6967 6e29 0a20 2020 2020  ct __sign).     
000bc60: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
000bc70: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
000bc80: 6c65 6166 5f5f 2929 205f 5f61 7474 7269  leaf__)) __attri
000bc90: 6275 7465 5f5f 2028 285f 5f6e 6f6e 6e75  bute__ ((__nonnu
000bca0: 6c6c 5f5f 2028 332c 2034 2929 2920 3b0a  ll__ (3, 4))) ;.
000bcb0: 6578 7465 726e 2063 6861 7220 2a71 6763  extern char *qgc
000bcc0: 7674 2028 6c6f 6e67 2064 6f75 626c 6520  vt (long double 
000bcd0: 5f5f 7661 6c75 652c 2069 6e74 205f 5f6e  __value, int __n
000bce0: 6469 6769 742c 2063 6861 7220 2a5f 5f62  digit, char *__b
000bcf0: 7566 290a 2020 2020 205f 5f61 7474 7269  uf).     __attri
000bd00: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
000bd10: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
000bd20: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
000bd30: 2828 5f5f 6e6f 6e6e 756c 6c5f 5f20 2833  ((__nonnull__ (3
000bd40: 2929 2920 3b0a 0a0a 0a0a 6578 7465 726e  ))) ;.....extern
000bd50: 2069 6e74 2065 6376 745f 7220 2864 6f75   int ecvt_r (dou
000bd60: 626c 6520 5f5f 7661 6c75 652c 2069 6e74  ble __value, int
000bd70: 205f 5f6e 6469 6769 742c 2069 6e74 202a   __ndigit, int *
000bd80: 5f5f 7265 7374 7269 6374 205f 5f64 6563  __restrict __dec
000bd90: 7074 2c0a 2020 2020 2069 6e74 202a 5f5f  pt,.     int *__
000bda0: 7265 7374 7269 6374 205f 5f73 6967 6e2c  restrict __sign,
000bdb0: 2063 6861 7220 2a5f 5f72 6573 7472 6963   char *__restric
000bdc0: 7420 5f5f 6275 662c 0a20 2020 2020 7369  t __buf,.     si
000bdd0: 7a65 5f74 205f 5f6c 656e 2920 5f5f 6174  ze_t __len) __at
000bde0: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
000bdf0: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
000be00: 5f5f 2929 205f 5f61 7474 7269 6275 7465  __)) __attribute
000be10: 5f5f 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f  __ ((__nonnull__
000be20: 2028 332c 2034 2c20 3529 2929 3b0a 6578   (3, 4, 5)));.ex
000be30: 7465 726e 2069 6e74 2066 6376 745f 7220  tern int fcvt_r 
000be40: 2864 6f75 626c 6520 5f5f 7661 6c75 652c  (double __value,
000be50: 2069 6e74 205f 5f6e 6469 6769 742c 2069   int __ndigit, i
000be60: 6e74 202a 5f5f 7265 7374 7269 6374 205f  nt *__restrict _
000be70: 5f64 6563 7074 2c0a 2020 2020 2069 6e74  _decpt,.     int
000be80: 202a 5f5f 7265 7374 7269 6374 205f 5f73   *__restrict __s
000be90: 6967 6e2c 2063 6861 7220 2a5f 5f72 6573  ign, char *__res
000bea0: 7472 6963 7420 5f5f 6275 662c 0a20 2020  trict __buf,.   
000beb0: 2020 7369 7a65 5f74 205f 5f6c 656e 2920    size_t __len) 
000bec0: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
000bed0: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
000bee0: 6c65 6166 5f5f 2929 205f 5f61 7474 7269  leaf__)) __attri
000bef0: 6275 7465 5f5f 2028 285f 5f6e 6f6e 6e75  bute__ ((__nonnu
000bf00: 6c6c 5f5f 2028 332c 2034 2c20 3529 2929  ll__ (3, 4, 5)))
000bf10: 3b0a 0a65 7874 6572 6e20 696e 7420 7165  ;..extern int qe
000bf20: 6376 745f 7220 286c 6f6e 6720 646f 7562  cvt_r (long doub
000bf30: 6c65 205f 5f76 616c 7565 2c20 696e 7420  le __value, int 
000bf40: 5f5f 6e64 6967 6974 2c0a 2020 2020 2020  __ndigit,.      
000bf50: 696e 7420 2a5f 5f72 6573 7472 6963 7420  int *__restrict 
000bf60: 5f5f 6465 6370 742c 2069 6e74 202a 5f5f  __decpt, int *__
000bf70: 7265 7374 7269 6374 205f 5f73 6967 6e2c  restrict __sign,
000bf80: 0a20 2020 2020 2063 6861 7220 2a5f 5f72  .      char *__r
000bf90: 6573 7472 6963 7420 5f5f 6275 662c 2073  estrict __buf, s
000bfa0: 697a 655f 7420 5f5f 6c65 6e29 0a20 2020  ize_t __len).   
000bfb0: 2020 5f5f 6174 7472 6962 7574 655f 5f20    __attribute__ 
000bfc0: 2828 5f5f 6e6f 7468 726f 775f 5f20 2c20  ((__nothrow__ , 
000bfd0: 5f5f 6c65 6166 5f5f 2929 205f 5f61 7474  __leaf__)) __att
000bfe0: 7269 6275 7465 5f5f 2028 285f 5f6e 6f6e  ribute__ ((__non
000bff0: 6e75 6c6c 5f5f 2028 332c 2034 2c20 3529  null__ (3, 4, 5)
000c000: 2929 3b0a 6578 7465 726e 2069 6e74 2071  ));.extern int q
000c010: 6663 7674 5f72 2028 6c6f 6e67 2064 6f75  fcvt_r (long dou
000c020: 626c 6520 5f5f 7661 6c75 652c 2069 6e74  ble __value, int
000c030: 205f 5f6e 6469 6769 742c 0a20 2020 2020   __ndigit,.     
000c040: 2069 6e74 202a 5f5f 7265 7374 7269 6374   int *__restrict
000c050: 205f 5f64 6563 7074 2c20 696e 7420 2a5f   __decpt, int *_
000c060: 5f72 6573 7472 6963 7420 5f5f 7369 676e  _restrict __sign
000c070: 2c0a 2020 2020 2020 6368 6172 202a 5f5f  ,.      char *__
000c080: 7265 7374 7269 6374 205f 5f62 7566 2c20  restrict __buf, 
000c090: 7369 7a65 5f74 205f 5f6c 656e 290a 2020  size_t __len).  
000c0a0: 2020 205f 5f61 7474 7269 6275 7465 5f5f     __attribute__
000c0b0: 2028 285f 5f6e 6f74 6872 6f77 5f5f 202c   ((__nothrow__ ,
000c0c0: 205f 5f6c 6561 665f 5f29 2920 5f5f 6174   __leaf__)) __at
000c0d0: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
000c0e0: 6e6e 756c 6c5f 5f20 2833 2c20 342c 2035  nnull__ (3, 4, 5
000c0f0: 2929 293b 0a0a 0a0a 0a0a 0a0a 6578 7465  )));........exte
000c100: 726e 2069 6e74 206d 626c 656e 2028 636f  rn int mblen (co
000c110: 6e73 7420 6368 6172 202a 5f5f 732c 2073  nst char *__s, s
000c120: 697a 655f 7420 5f5f 6e29 205f 5f61 7474  ize_t __n) __att
000c130: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
000c140: 6872 6f77 5f5f 202c 205f 5f6c 6561 665f  hrow__ , __leaf_
000c150: 5f29 2920 3b0a 0a0a 6578 7465 726e 2069  _)) ;...extern i
000c160: 6e74 206d 6274 6f77 6320 2877 6368 6172  nt mbtowc (wchar
000c170: 5f74 202a 5f5f 7265 7374 7269 6374 205f  _t *__restrict _
000c180: 5f70 7763 2c0a 2020 2020 2063 6f6e 7374  _pwc,.     const
000c190: 2063 6861 7220 2a5f 5f72 6573 7472 6963   char *__restric
000c1a0: 7420 5f5f 732c 2073 697a 655f 7420 5f5f  t __s, size_t __
000c1b0: 6e29 205f 5f61 7474 7269 6275 7465 5f5f  n) __attribute__
000c1c0: 2028 285f 5f6e 6f74 6872 6f77 5f5f 202c   ((__nothrow__ ,
000c1d0: 205f 5f6c 6561 665f 5f29 2920 3b0a 0a0a   __leaf__)) ;...
000c1e0: 6578 7465 726e 2069 6e74 2077 6374 6f6d  extern int wctom
000c1f0: 6220 2863 6861 7220 2a5f 5f73 2c20 7763  b (char *__s, wc
000c200: 6861 725f 7420 5f5f 7763 6861 7229 205f  har_t __wchar) _
000c210: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
000c220: 5f6e 6f74 6872 6f77 5f5f 202c 205f 5f6c  _nothrow__ , __l
000c230: 6561 665f 5f29 2920 3b0a 0a0a 0a65 7874  eaf__)) ;....ext
000c240: 6572 6e20 7369 7a65 5f74 206d 6273 746f  ern size_t mbsto
000c250: 7763 7320 2877 6368 6172 5f74 202a 5f5f  wcs (wchar_t *__
000c260: 7265 7374 7269 6374 205f 5f70 7763 732c  restrict __pwcs,
000c270: 0a20 2020 636f 6e73 7420 6368 6172 202a  .   const char *
000c280: 5f5f 7265 7374 7269 6374 205f 5f73 2c20  __restrict __s, 
000c290: 7369 7a65 5f74 205f 5f6e 2920 5f5f 6174  size_t __n) __at
000c2a0: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
000c2b0: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
000c2c0: 5f5f 2929 3b0a 0a65 7874 6572 6e20 7369  __));..extern si
000c2d0: 7a65 5f74 2077 6373 746f 6d62 7320 2863  ze_t wcstombs (c
000c2e0: 6861 7220 2a5f 5f72 6573 7472 6963 7420  har *__restrict 
000c2f0: 5f5f 732c 0a20 2020 636f 6e73 7420 7763  __s,.   const wc
000c300: 6861 725f 7420 2a5f 5f72 6573 7472 6963  har_t *__restric
000c310: 7420 5f5f 7077 6373 2c20 7369 7a65 5f74  t __pwcs, size_t
000c320: 205f 5f6e 290a 2020 2020 205f 5f61 7474   __n).     __att
000c330: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
000c340: 6872 6f77 5f5f 202c 205f 5f6c 6561 665f  hrow__ , __leaf_
000c350: 5f29 293b 0a0a 0a0a 0a0a 0a0a 0a65 7874  _));.........ext
000c360: 6572 6e20 696e 7420 7270 6d61 7463 6820  ern int rpmatch 
000c370: 2863 6f6e 7374 2063 6861 7220 2a5f 5f72  (const char *__r
000c380: 6573 706f 6e73 6529 205f 5f61 7474 7269  esponse) __attri
000c390: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
000c3a0: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
000c3b0: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
000c3c0: 2828 5f5f 6e6f 6e6e 756c 6c5f 5f20 2831  ((__nonnull__ (1
000c3d0: 2929 2920 3b0a 2320 3839 3520 222f 7573  ))) ;.# 895 "/us
000c3e0: 722f 696e 636c 7564 652f 7374 646c 6962  r/include/stdlib
000c3f0: 2e68 2220 3320 340a 6578 7465 726e 2069  .h" 3 4.extern i
000c400: 6e74 2067 6574 7375 626f 7074 2028 6368  nt getsubopt (ch
000c410: 6172 202a 2a5f 5f72 6573 7472 6963 7420  ar **__restrict 
000c420: 5f5f 6f70 7469 6f6e 702c 0a20 2020 2020  __optionp,.     
000c430: 2020 2063 6861 7220 2a63 6f6e 7374 202a     char *const *
000c440: 5f5f 7265 7374 7269 6374 205f 5f74 6f6b  __restrict __tok
000c450: 656e 732c 0a20 2020 2020 2020 2063 6861  ens,.        cha
000c460: 7220 2a2a 5f5f 7265 7374 7269 6374 205f  r **__restrict _
000c470: 5f76 616c 7565 7029 0a20 2020 2020 5f5f  _valuep).     __
000c480: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
000c490: 6e6f 7468 726f 775f 5f20 2c20 5f5f 6c65  nothrow__ , __le
000c4a0: 6166 5f5f 2929 205f 5f61 7474 7269 6275  af__)) __attribu
000c4b0: 7465 5f5f 2028 285f 5f6e 6f6e 6e75 6c6c  te__ ((__nonnull
000c4c0: 5f5f 2028 312c 2032 2c20 3329 2929 203b  __ (1, 2, 3))) ;
000c4d0: 0a23 2039 3437 2022 2f75 7372 2f69 6e63  .# 947 "/usr/inc
000c4e0: 6c75 6465 2f73 7464 6c69 622e 6822 2033  lude/stdlib.h" 3
000c4f0: 2034 0a65 7874 6572 6e20 696e 7420 6765   4.extern int ge
000c500: 746c 6f61 6461 7667 2028 646f 7562 6c65  tloadavg (double
000c510: 205f 5f6c 6f61 6461 7667 5b5d 2c20 696e   __loadavg[], in
000c520: 7420 5f5f 6e65 6c65 6d29 0a20 2020 2020  t __nelem).     
000c530: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
000c540: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
000c550: 6c65 6166 5f5f 2929 205f 5f61 7474 7269  leaf__)) __attri
000c560: 6275 7465 5f5f 2028 285f 5f6e 6f6e 6e75  bute__ ((__nonnu
000c570: 6c6c 5f5f 2028 3129 2929 3b0a 0a0a 2320  ll__ (1)));...# 
000c580: 3120 222f 7573 722f 696e 636c 7564 652f  1 "/usr/include/
000c590: 6269 7473 2f73 7464 6c69 622d 666c 6f61  bits/stdlib-floa
000c5a0: 742e 6822 2031 2033 2034 0a23 2039 3532  t.h" 1 3 4.# 952
000c5b0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f73   "/usr/include/s
000c5c0: 7464 6c69 622e 6822 2032 2033 2034 0a23  tdlib.h" 2 3 4.#
000c5d0: 2039 3634 2022 2f75 7372 2f69 6e63 6c75   964 "/usr/inclu
000c5e0: 6465 2f73 7464 6c69 622e 6822 2033 2034  de/stdlib.h" 3 4
000c5f0: 0a0a 2320 3134 3620 2273 736c 5f6c 6f63  ..# 146 "ssl_loc
000c600: 6c2e 6822 2032 0a23 2031 2022 2f75 7372  l.h" 2.# 1 "/usr
000c610: 2f69 6e63 6c75 6465 2f74 696d 652e 6822  /include/time.h"
000c620: 2031 2033 2034 0a23 2032 3920 222f 7573   1 3 4.# 29 "/us
000c630: 722f 696e 636c 7564 652f 7469 6d65 2e68  r/include/time.h
000c640: 2220 3320 340a 0a0a 0a0a 0a0a 0a0a 2320  " 3 4.........# 
000c650: 3120 222f 7573 722f 6c69 622f 6763 632f  1 "/usr/lib/gcc/
000c660: 7838 365f 3634 2d72 6564 6861 742d 6c69  x86_64-redhat-li
000c670: 6e75 782f 342e 382e 332f 696e 636c 7564  nux/4.8.3/includ
000c680: 652f 7374 6464 6566 2e68 2220 3120 3320  e/stddef.h" 1 3 
000c690: 340a 2320 3338 2022 2f75 7372 2f69 6e63  4.# 38 "/usr/inc
000c6a0: 6c75 6465 2f74 696d 652e 6822 2032 2033  lude/time.h" 2 3
000c6b0: 2034 0a0a 0a0a 2320 3120 222f 7573 722f   4....# 1 "/usr/
000c6c0: 696e 636c 7564 652f 6269 7473 2f74 696d  include/bits/tim
000c6d0: 652e 6822 2031 2033 2034 0a23 2034 3220  e.h" 1 3 4.# 42 
000c6e0: 222f 7573 722f 696e 636c 7564 652f 7469  "/usr/include/ti
000c6f0: 6d65 2e68 2220 3220 3320 340a 2320 3133  me.h" 2 3 4.# 13
000c700: 3120 222f 7573 722f 696e 636c 7564 652f  1 "/usr/include/
000c710: 7469 6d65 2e68 2220 3320 340a 0a0a 7374  time.h" 3 4...st
000c720: 7275 6374 2074 6d0a 7b0a 2020 696e 7420  ruct tm.{.  int 
000c730: 746d 5f73 6563 3b0a 2020 696e 7420 746d  tm_sec;.  int tm
000c740: 5f6d 696e 3b0a 2020 696e 7420 746d 5f68  _min;.  int tm_h
000c750: 6f75 723b 0a20 2069 6e74 2074 6d5f 6d64  our;.  int tm_md
000c760: 6179 3b0a 2020 696e 7420 746d 5f6d 6f6e  ay;.  int tm_mon
000c770: 3b0a 2020 696e 7420 746d 5f79 6561 723b  ;.  int tm_year;
000c780: 0a20 2069 6e74 2074 6d5f 7764 6179 3b0a  .  int tm_wday;.
000c790: 2020 696e 7420 746d 5f79 6461 793b 0a20    int tm_yday;. 
000c7a0: 2069 6e74 2074 6d5f 6973 6473 743b 0a0a   int tm_isdst;..
000c7b0: 0a20 206c 6f6e 6720 696e 7420 746d 5f67  .  long int tm_g
000c7c0: 6d74 6f66 663b 0a20 2063 6f6e 7374 2063  mtoff;.  const c
000c7d0: 6861 7220 2a74 6d5f 7a6f 6e65 3b0a 0a0a  har *tm_zone;...
000c7e0: 0a0a 7d3b 0a0a 0a0a 0a0a 0a0a 0a73 7472  ..};.........str
000c7f0: 7563 7420 6974 696d 6572 7370 6563 0a20  uct itimerspec. 
000c800: 207b 0a20 2020 2073 7472 7563 7420 7469   {.    struct ti
000c810: 6d65 7370 6563 2069 745f 696e 7465 7276  mespec it_interv
000c820: 616c 3b0a 2020 2020 7374 7275 6374 2074  al;.    struct t
000c830: 696d 6573 7065 6320 6974 5f76 616c 7565  imespec it_value
000c840: 3b0a 2020 7d3b 0a0a 0a73 7472 7563 7420  ;.  };...struct 
000c850: 7369 6765 7665 6e74 3b0a 2320 3138 3620  sigevent;.# 186 
000c860: 222f 7573 722f 696e 636c 7564 652f 7469  "/usr/include/ti
000c870: 6d65 2e68 2220 3320 340a 0a0a 0a65 7874  me.h" 3 4....ext
000c880: 6572 6e20 636c 6f63 6b5f 7420 636c 6f63  ern clock_t cloc
000c890: 6b20 2876 6f69 6429 205f 5f61 7474 7269  k (void) __attri
000c8a0: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
000c8b0: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
000c8c0: 293b 0a0a 0a65 7874 6572 6e20 7469 6d65  );...extern time
000c8d0: 5f74 2074 696d 6520 2874 696d 655f 7420  _t time (time_t 
000c8e0: 2a5f 5f74 696d 6572 2920 5f5f 6174 7472  *__timer) __attr
000c8f0: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
000c900: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
000c910: 2929 3b0a 0a0a 6578 7465 726e 2064 6f75  ));...extern dou
000c920: 626c 6520 6469 6666 7469 6d65 2028 7469  ble difftime (ti
000c930: 6d65 5f74 205f 5f74 696d 6531 2c20 7469  me_t __time1, ti
000c940: 6d65 5f74 205f 5f74 696d 6530 290a 2020  me_t __time0).  
000c950: 2020 205f 5f61 7474 7269 6275 7465 5f5f     __attribute__
000c960: 2028 285f 5f6e 6f74 6872 6f77 5f5f 202c   ((__nothrow__ ,
000c970: 205f 5f6c 6561 665f 5f29 2920 5f5f 6174   __leaf__)) __at
000c980: 7472 6962 7574 655f 5f20 2828 5f5f 636f  tribute__ ((__co
000c990: 6e73 745f 5f29 293b 0a0a 0a65 7874 6572  nst__));...exter
000c9a0: 6e20 7469 6d65 5f74 206d 6b74 696d 6520  n time_t mktime 
000c9b0: 2873 7472 7563 7420 746d 202a 5f5f 7470  (struct tm *__tp
000c9c0: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
000c9d0: 2828 5f5f 6e6f 7468 726f 775f 5f20 2c20  ((__nothrow__ , 
000c9e0: 5f5f 6c65 6166 5f5f 2929 3b0a 0a0a 0a0a  __leaf__));.....
000c9f0: 0a65 7874 6572 6e20 7369 7a65 5f74 2073  .extern size_t s
000ca00: 7472 6674 696d 6520 2863 6861 7220 2a5f  trftime (char *_
000ca10: 5f72 6573 7472 6963 7420 5f5f 732c 2073  _restrict __s, s
000ca20: 697a 655f 7420 5f5f 6d61 7873 697a 652c  ize_t __maxsize,
000ca30: 0a20 2020 636f 6e73 7420 6368 6172 202a  .   const char *
000ca40: 5f5f 7265 7374 7269 6374 205f 5f66 6f72  __restrict __for
000ca50: 6d61 742c 0a20 2020 636f 6e73 7420 7374  mat,.   const st
000ca60: 7275 6374 2074 6d20 2a5f 5f72 6573 7472  ruct tm *__restr
000ca70: 6963 7420 5f5f 7470 2920 5f5f 6174 7472  ict __tp) __attr
000ca80: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
000ca90: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
000caa0: 2929 3b0a 0a23 2032 3233 2022 2f75 7372  ));..# 223 "/usr
000cab0: 2f69 6e63 6c75 6465 2f74 696d 652e 6822  /include/time.h"
000cac0: 2033 2034 0a65 7874 6572 6e20 7369 7a65   3 4.extern size
000cad0: 5f74 2073 7472 6674 696d 655f 6c20 2863  _t strftime_l (c
000cae0: 6861 7220 2a5f 5f72 6573 7472 6963 7420  har *__restrict 
000caf0: 5f5f 732c 2073 697a 655f 7420 5f5f 6d61  __s, size_t __ma
000cb00: 7873 697a 652c 0a20 2020 2020 636f 6e73  xsize,.     cons
000cb10: 7420 6368 6172 202a 5f5f 7265 7374 7269  t char *__restri
000cb20: 6374 205f 5f66 6f72 6d61 742c 0a20 2020  ct __format,.   
000cb30: 2020 636f 6e73 7420 7374 7275 6374 2074    const struct t
000cb40: 6d20 2a5f 5f72 6573 7472 6963 7420 5f5f  m *__restrict __
000cb50: 7470 2c0a 2020 2020 205f 5f6c 6f63 616c  tp,.     __local
000cb60: 655f 7420 5f5f 6c6f 6329 205f 5f61 7474  e_t __loc) __att
000cb70: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
000cb80: 6872 6f77 5f5f 202c 205f 5f6c 6561 665f  hrow__ , __leaf_
000cb90: 5f29 293b 0a23 2032 3336 2022 2f75 7372  _));.# 236 "/usr
000cba0: 2f69 6e63 6c75 6465 2f74 696d 652e 6822  /include/time.h"
000cbb0: 2033 2034 0a0a 0a0a 6578 7465 726e 2073   3 4....extern s
000cbc0: 7472 7563 7420 746d 202a 676d 7469 6d65  truct tm *gmtime
000cbd0: 2028 636f 6e73 7420 7469 6d65 5f74 202a   (const time_t *
000cbe0: 5f5f 7469 6d65 7229 205f 5f61 7474 7269  __timer) __attri
000cbf0: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
000cc00: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
000cc10: 293b 0a0a 0a0a 6578 7465 726e 2073 7472  );....extern str
000cc20: 7563 7420 746d 202a 6c6f 6361 6c74 696d  uct tm *localtim
000cc30: 6520 2863 6f6e 7374 2074 696d 655f 7420  e (const time_t 
000cc40: 2a5f 5f74 696d 6572 2920 5f5f 6174 7472  *__timer) __attr
000cc50: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
000cc60: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
000cc70: 2929 3b0a 0a0a 0a0a 0a65 7874 6572 6e20  ));......extern 
000cc80: 7374 7275 6374 2074 6d20 2a67 6d74 696d  struct tm *gmtim
000cc90: 655f 7220 2863 6f6e 7374 2074 696d 655f  e_r (const time_
000cca0: 7420 2a5f 5f72 6573 7472 6963 7420 5f5f  t *__restrict __
000ccb0: 7469 6d65 722c 0a20 2020 2020 2020 7374  timer,.       st
000ccc0: 7275 6374 2074 6d20 2a5f 5f72 6573 7472  ruct tm *__restr
000ccd0: 6963 7420 5f5f 7470 2920 5f5f 6174 7472  ict __tp) __attr
000cce0: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
000ccf0: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
000cd00: 2929 3b0a 0a0a 0a65 7874 6572 6e20 7374  ));....extern st
000cd10: 7275 6374 2074 6d20 2a6c 6f63 616c 7469  ruct tm *localti
000cd20: 6d65 5f72 2028 636f 6e73 7420 7469 6d65  me_r (const time
000cd30: 5f74 202a 5f5f 7265 7374 7269 6374 205f  _t *__restrict _
000cd40: 5f74 696d 6572 2c0a 2020 2020 2020 2020  _timer,.        
000cd50: 2020 7374 7275 6374 2074 6d20 2a5f 5f72    struct tm *__r
000cd60: 6573 7472 6963 7420 5f5f 7470 2920 5f5f  estrict __tp) __
000cd70: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
000cd80: 6e6f 7468 726f 775f 5f20 2c20 5f5f 6c65  nothrow__ , __le
000cd90: 6166 5f5f 2929 3b0a 0a0a 0a0a 0a65 7874  af__));......ext
000cda0: 6572 6e20 6368 6172 202a 6173 6374 696d  ern char *asctim
000cdb0: 6520 2863 6f6e 7374 2073 7472 7563 7420  e (const struct 
000cdc0: 746d 202a 5f5f 7470 2920 5f5f 6174 7472  tm *__tp) __attr
000cdd0: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
000cde0: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
000cdf0: 2929 3b0a 0a0a 6578 7465 726e 2063 6861  ));...extern cha
000ce00: 7220 2a63 7469 6d65 2028 636f 6e73 7420  r *ctime (const 
000ce10: 7469 6d65 5f74 202a 5f5f 7469 6d65 7229  time_t *__timer)
000ce20: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
000ce30: 285f 5f6e 6f74 6872 6f77 5f5f 202c 205f  (__nothrow__ , _
000ce40: 5f6c 6561 665f 5f29 293b 0a0a 0a0a 0a0a  _leaf__));......
000ce50: 0a0a 6578 7465 726e 2063 6861 7220 2a61  ..extern char *a
000ce60: 7363 7469 6d65 5f72 2028 636f 6e73 7420  sctime_r (const 
000ce70: 7374 7275 6374 2074 6d20 2a5f 5f72 6573  struct tm *__res
000ce80: 7472 6963 7420 5f5f 7470 2c0a 2020 2063  trict __tp,.   c
000ce90: 6861 7220 2a5f 5f72 6573 7472 6963 7420  har *__restrict 
000cea0: 5f5f 6275 6629 205f 5f61 7474 7269 6275  __buf) __attribu
000ceb0: 7465 5f5f 2028 285f 5f6e 6f74 6872 6f77  te__ ((__nothrow
000cec0: 5f5f 202c 205f 5f6c 6561 665f 5f29 293b  __ , __leaf__));
000ced0: 0a0a 0a65 7874 6572 6e20 6368 6172 202a  ...extern char *
000cee0: 6374 696d 655f 7220 2863 6f6e 7374 2074  ctime_r (const t
000cef0: 696d 655f 7420 2a5f 5f72 6573 7472 6963  ime_t *__restric
000cf00: 7420 5f5f 7469 6d65 722c 0a20 2020 2020  t __timer,.     
000cf10: 2020 2063 6861 7220 2a5f 5f72 6573 7472     char *__restr
000cf20: 6963 7420 5f5f 6275 6629 205f 5f61 7474  ict __buf) __att
000cf30: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
000cf40: 6872 6f77 5f5f 202c 205f 5f6c 6561 665f  hrow__ , __leaf_
000cf50: 5f29 293b 0a0a 0a0a 0a65 7874 6572 6e20  _));.....extern 
000cf60: 6368 6172 202a 5f5f 747a 6e61 6d65 5b32  char *__tzname[2
000cf70: 5d3b 0a65 7874 6572 6e20 696e 7420 5f5f  ];.extern int __
000cf80: 6461 796c 6967 6874 3b0a 6578 7465 726e  daylight;.extern
000cf90: 206c 6f6e 6720 696e 7420 5f5f 7469 6d65   long int __time
000cfa0: 7a6f 6e65 3b0a 0a0a 0a0a 6578 7465 726e  zone;.....extern
000cfb0: 2063 6861 7220 2a74 7a6e 616d 655b 325d   char *tzname[2]
000cfc0: 3b0a 0a0a 0a65 7874 6572 6e20 766f 6964  ;....extern void
000cfd0: 2074 7a73 6574 2028 766f 6964 2920 5f5f   tzset (void) __
000cfe0: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
000cff0: 6e6f 7468 726f 775f 5f20 2c20 5f5f 6c65  nothrow__ , __le
000d000: 6166 5f5f 2929 3b0a 0a0a 0a65 7874 6572  af__));....exter
000d010: 6e20 696e 7420 6461 796c 6967 6874 3b0a  n int daylight;.
000d020: 6578 7465 726e 206c 6f6e 6720 696e 7420  extern long int 
000d030: 7469 6d65 7a6f 6e65 3b0a 0a0a 0a0a 0a65  timezone;......e
000d040: 7874 6572 6e20 696e 7420 7374 696d 6520  xtern int stime 
000d050: 2863 6f6e 7374 2074 696d 655f 7420 2a5f  (const time_t *_
000d060: 5f77 6865 6e29 205f 5f61 7474 7269 6275  _when) __attribu
000d070: 7465 5f5f 2028 285f 5f6e 6f74 6872 6f77  te__ ((__nothrow
000d080: 5f5f 202c 205f 5f6c 6561 665f 5f29 293b  __ , __leaf__));
000d090: 0a23 2033 3139 2022 2f75 7372 2f69 6e63  .# 319 "/usr/inc
000d0a0: 6c75 6465 2f74 696d 652e 6822 2033 2034  lude/time.h" 3 4
000d0b0: 0a65 7874 6572 6e20 7469 6d65 5f74 2074  .extern time_t t
000d0c0: 696d 6567 6d20 2873 7472 7563 7420 746d  imegm (struct tm
000d0d0: 202a 5f5f 7470 2920 5f5f 6174 7472 6962   *__tp) __attrib
000d0e0: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
000d0f0: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
000d100: 3b0a 0a0a 6578 7465 726e 2074 696d 655f  ;...extern time_
000d110: 7420 7469 6d65 6c6f 6361 6c20 2873 7472  t timelocal (str
000d120: 7563 7420 746d 202a 5f5f 7470 2920 5f5f  uct tm *__tp) __
000d130: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
000d140: 6e6f 7468 726f 775f 5f20 2c20 5f5f 6c65  nothrow__ , __le
000d150: 6166 5f5f 2929 3b0a 0a0a 6578 7465 726e  af__));...extern
000d160: 2069 6e74 2064 7973 697a 6520 2869 6e74   int dysize (int
000d170: 205f 5f79 6561 7229 205f 5f61 7474 7269   __year) __attri
000d180: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
000d190: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
000d1a0: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
000d1b0: 2828 5f5f 636f 6e73 745f 5f29 293b 0a23  ((__const__));.#
000d1c0: 2033 3334 2022 2f75 7372 2f69 6e63 6c75   334 "/usr/inclu
000d1d0: 6465 2f74 696d 652e 6822 2033 2034 0a65  de/time.h" 3 4.e
000d1e0: 7874 6572 6e20 696e 7420 6e61 6e6f 736c  xtern int nanosl
000d1f0: 6565 7020 2863 6f6e 7374 2073 7472 7563  eep (const struc
000d200: 7420 7469 6d65 7370 6563 202a 5f5f 7265  t timespec *__re
000d210: 7175 6573 7465 645f 7469 6d65 2c0a 2020  quested_time,.  
000d220: 2020 2020 2020 7374 7275 6374 2074 696d        struct tim
000d230: 6573 7065 6320 2a5f 5f72 656d 6169 6e69  espec *__remaini
000d240: 6e67 293b 0a0a 0a0a 6578 7465 726e 2069  ng);....extern i
000d250: 6e74 2063 6c6f 636b 5f67 6574 7265 7320  nt clock_getres 
000d260: 2863 6c6f 636b 6964 5f74 205f 5f63 6c6f  (clockid_t __clo
000d270: 636b 5f69 642c 2073 7472 7563 7420 7469  ck_id, struct ti
000d280: 6d65 7370 6563 202a 5f5f 7265 7329 205f  mespec *__res) _
000d290: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
000d2a0: 5f6e 6f74 6872 6f77 5f5f 202c 205f 5f6c  _nothrow__ , __l
000d2b0: 6561 665f 5f29 293b 0a0a 0a65 7874 6572  eaf__));...exter
000d2c0: 6e20 696e 7420 636c 6f63 6b5f 6765 7474  n int clock_gett
000d2d0: 696d 6520 2863 6c6f 636b 6964 5f74 205f  ime (clockid_t _
000d2e0: 5f63 6c6f 636b 5f69 642c 2073 7472 7563  _clock_id, struc
000d2f0: 7420 7469 6d65 7370 6563 202a 5f5f 7470  t timespec *__tp
000d300: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
000d310: 2828 5f5f 6e6f 7468 726f 775f 5f20 2c20  ((__nothrow__ , 
000d320: 5f5f 6c65 6166 5f5f 2929 3b0a 0a0a 6578  __leaf__));...ex
000d330: 7465 726e 2069 6e74 2063 6c6f 636b 5f73  tern int clock_s
000d340: 6574 7469 6d65 2028 636c 6f63 6b69 645f  ettime (clockid_
000d350: 7420 5f5f 636c 6f63 6b5f 6964 2c20 636f  t __clock_id, co
000d360: 6e73 7420 7374 7275 6374 2074 696d 6573  nst struct times
000d370: 7065 6320 2a5f 5f74 7029 0a20 2020 2020  pec *__tp).     
000d380: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
000d390: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
000d3a0: 6c65 6166 5f5f 2929 3b0a 0a0a 0a0a 0a0a  leaf__));.......
000d3b0: 6578 7465 726e 2069 6e74 2063 6c6f 636b  extern int clock
000d3c0: 5f6e 616e 6f73 6c65 6570 2028 636c 6f63  _nanosleep (cloc
000d3d0: 6b69 645f 7420 5f5f 636c 6f63 6b5f 6964  kid_t __clock_id
000d3e0: 2c20 696e 7420 5f5f 666c 6167 732c 0a20  , int __flags,. 
000d3f0: 2020 2020 2020 636f 6e73 7420 7374 7275        const stru
000d400: 6374 2074 696d 6573 7065 6320 2a5f 5f72  ct timespec *__r
000d410: 6571 2c0a 2020 2020 2020 2073 7472 7563  eq,.       struc
000d420: 7420 7469 6d65 7370 6563 202a 5f5f 7265  t timespec *__re
000d430: 6d29 3b0a 0a0a 6578 7465 726e 2069 6e74  m);...extern int
000d440: 2063 6c6f 636b 5f67 6574 6370 7563 6c6f   clock_getcpuclo
000d450: 636b 6964 2028 7069 645f 7420 5f5f 7069  ckid (pid_t __pi
000d460: 642c 2063 6c6f 636b 6964 5f74 202a 5f5f  d, clockid_t *__
000d470: 636c 6f63 6b5f 6964 2920 5f5f 6174 7472  clock_id) __attr
000d480: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
000d490: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
000d4a0: 2929 3b0a 0a0a 0a0a 6578 7465 726e 2069  ));.....extern i
000d4b0: 6e74 2074 696d 6572 5f63 7265 6174 6520  nt timer_create 
000d4c0: 2863 6c6f 636b 6964 5f74 205f 5f63 6c6f  (clockid_t __clo
000d4d0: 636b 5f69 642c 0a20 2020 2073 7472 7563  ck_id,.    struc
000d4e0: 7420 7369 6765 7665 6e74 202a 5f5f 7265  t sigevent *__re
000d4f0: 7374 7269 6374 205f 5f65 7670 2c0a 2020  strict __evp,.  
000d500: 2020 7469 6d65 725f 7420 2a5f 5f72 6573    timer_t *__res
000d510: 7472 6963 7420 5f5f 7469 6d65 7269 6429  trict __timerid)
000d520: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
000d530: 285f 5f6e 6f74 6872 6f77 5f5f 202c 205f  (__nothrow__ , _
000d540: 5f6c 6561 665f 5f29 293b 0a0a 0a65 7874  _leaf__));...ext
000d550: 6572 6e20 696e 7420 7469 6d65 725f 6465  ern int timer_de
000d560: 6c65 7465 2028 7469 6d65 725f 7420 5f5f  lete (timer_t __
000d570: 7469 6d65 7269 6429 205f 5f61 7474 7269  timerid) __attri
000d580: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
000d590: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
000d5a0: 293b 0a0a 0a65 7874 6572 6e20 696e 7420  );...extern int 
000d5b0: 7469 6d65 725f 7365 7474 696d 6520 2874  timer_settime (t
000d5c0: 696d 6572 5f74 205f 5f74 696d 6572 6964  imer_t __timerid
000d5d0: 2c20 696e 7420 5f5f 666c 6167 732c 0a20  , int __flags,. 
000d5e0: 2020 2020 636f 6e73 7420 7374 7275 6374      const struct
000d5f0: 2069 7469 6d65 7273 7065 6320 2a5f 5f72   itimerspec *__r
000d600: 6573 7472 6963 7420 5f5f 7661 6c75 652c  estrict __value,
000d610: 0a20 2020 2020 7374 7275 6374 2069 7469  .     struct iti
000d620: 6d65 7273 7065 6320 2a5f 5f72 6573 7472  merspec *__restr
000d630: 6963 7420 5f5f 6f76 616c 7565 2920 5f5f  ict __ovalue) __
000d640: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
000d650: 6e6f 7468 726f 775f 5f20 2c20 5f5f 6c65  nothrow__ , __le
000d660: 6166 5f5f 2929 3b0a 0a0a 6578 7465 726e  af__));...extern
000d670: 2069 6e74 2074 696d 6572 5f67 6574 7469   int timer_getti
000d680: 6d65 2028 7469 6d65 725f 7420 5f5f 7469  me (timer_t __ti
000d690: 6d65 7269 642c 2073 7472 7563 7420 6974  merid, struct it
000d6a0: 696d 6572 7370 6563 202a 5f5f 7661 6c75  imerspec *__valu
000d6b0: 6529 0a20 2020 2020 5f5f 6174 7472 6962  e).     __attrib
000d6c0: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
000d6d0: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
000d6e0: 3b0a 0a0a 6578 7465 726e 2069 6e74 2074  ;...extern int t
000d6f0: 696d 6572 5f67 6574 6f76 6572 7275 6e20  imer_getoverrun 
000d700: 2874 696d 6572 5f74 205f 5f74 696d 6572  (timer_t __timer
000d710: 6964 2920 5f5f 6174 7472 6962 7574 655f  id) __attribute_
000d720: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
000d730: 2c20 5f5f 6c65 6166 5f5f 2929 3b0a 2320  , __leaf__));.# 
000d740: 3433 3020 222f 7573 722f 696e 636c 7564  430 "/usr/includ
000d750: 652f 7469 6d65 2e68 2220 3320 340a 0a23  e/time.h" 3 4..#
000d760: 2031 3437 2022 7373 6c5f 6c6f 636c 2e68   147 "ssl_locl.h
000d770: 2220 320a 0a23 2031 2022 2f75 7372 2f69  " 2..# 1 "/usr/i
000d780: 6e63 6c75 6465 2f65 7272 6e6f 2e68 2220  nclude/errno.h" 
000d790: 3120 3320 340a 2320 3331 2022 2f75 7372  1 3 4.# 31 "/usr
000d7a0: 2f69 6e63 6c75 6465 2f65 7272 6e6f 2e68  /include/errno.h
000d7b0: 2220 3320 340a 0a0a 0a0a 2320 3120 222f  " 3 4.....# 1 "/
000d7c0: 7573 722f 696e 636c 7564 652f 6269 7473  usr/include/bits
000d7d0: 2f65 7272 6e6f 2e68 2220 3120 3320 340a  /errno.h" 1 3 4.
000d7e0: 2320 3234 2022 2f75 7372 2f69 6e63 6c75  # 24 "/usr/inclu
000d7f0: 6465 2f62 6974 732f 6572 726e 6f2e 6822  de/bits/errno.h"
000d800: 2033 2034 0a23 2031 2022 2f75 7372 2f69   3 4.# 1 "/usr/i
000d810: 6e63 6c75 6465 2f6c 696e 7578 2f65 7272  nclude/linux/err
000d820: 6e6f 2e68 2220 3120 3320 340a 2320 3120  no.h" 1 3 4.# 1 
000d830: 222f 7573 722f 696e 636c 7564 652f 6173  "/usr/include/as
000d840: 6d2f 6572 726e 6f2e 6822 2031 2033 2034  m/errno.h" 1 3 4
000d850: 0a23 2031 2022 2f75 7372 2f69 6e63 6c75  .# 1 "/usr/inclu
000d860: 6465 2f61 736d 2d67 656e 6572 6963 2f65  de/asm-generic/e
000d870: 7272 6e6f 2e68 2220 3120 3320 340a 0a0a  rrno.h" 1 3 4...
000d880: 0a23 2031 2022 2f75 7372 2f69 6e63 6c75  .# 1 "/usr/inclu
000d890: 6465 2f61 736d 2d67 656e 6572 6963 2f65  de/asm-generic/e
000d8a0: 7272 6e6f 2d62 6173 652e 6822 2031 2033  rrno-base.h" 1 3
000d8b0: 2034 0a23 2035 2022 2f75 7372 2f69 6e63   4.# 5 "/usr/inc
000d8c0: 6c75 6465 2f61 736d 2d67 656e 6572 6963  lude/asm-generic
000d8d0: 2f65 7272 6e6f 2e68 2220 3220 3320 340a  /errno.h" 2 3 4.
000d8e0: 2320 3120 222f 7573 722f 696e 636c 7564  # 1 "/usr/includ
000d8f0: 652f 6173 6d2f 6572 726e 6f2e 6822 2032  e/asm/errno.h" 2
000d900: 2033 2034 0a23 2031 2022 2f75 7372 2f69   3 4.# 1 "/usr/i
000d910: 6e63 6c75 6465 2f6c 696e 7578 2f65 7272  nclude/linux/err
000d920: 6e6f 2e68 2220 3220 3320 340a 2320 3235  no.h" 2 3 4.# 25
000d930: 2022 2f75 7372 2f69 6e63 6c75 6465 2f62   "/usr/include/b
000d940: 6974 732f 6572 726e 6f2e 6822 2032 2033  its/errno.h" 2 3
000d950: 2034 0a23 2035 3020 222f 7573 722f 696e   4.# 50 "/usr/in
000d960: 636c 7564 652f 6269 7473 2f65 7272 6e6f  clude/bits/errno
000d970: 2e68 2220 3320 340a 6578 7465 726e 2069  .h" 3 4.extern i
000d980: 6e74 202a 5f5f 6572 726e 6f5f 6c6f 6361  nt *__errno_loca
000d990: 7469 6f6e 2028 766f 6964 2920 5f5f 6174  tion (void) __at
000d9a0: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
000d9b0: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
000d9c0: 5f5f 2929 205f 5f61 7474 7269 6275 7465  __)) __attribute
000d9d0: 5f5f 2028 285f 5f63 6f6e 7374 5f5f 2929  __ ((__const__))
000d9e0: 3b0a 2320 3336 2022 2f75 7372 2f69 6e63  ;.# 36 "/usr/inc
000d9f0: 6c75 6465 2f65 7272 6e6f 2e68 2220 3220  lude/errno.h" 2 
000da00: 3320 340a 2320 3538 2022 2f75 7372 2f69  3 4.# 58 "/usr/i
000da10: 6e63 6c75 6465 2f65 7272 6e6f 2e68 2220  nclude/errno.h" 
000da20: 3320 340a 0a23 2031 3439 2022 7373 6c5f  3 4..# 149 "ssl_
000da30: 6c6f 636c 2e68 2220 320a 0a23 2031 2022  locl.h" 2..# 1 "
000da40: 655f 6f73 2e68 2220 310a 2320 3632 2022  e_os.h" 1.# 62 "
000da50: 655f 6f73 2e68 220a 2320 3120 222f 7573  e_os.h".# 1 "/us
000da60: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
000da70: 6c2f 6f70 656e 7373 6c63 6f6e 662e 6822  l/opensslconf.h"
000da80: 2031 2033 2034 0a23 2033 3420 222f 7573   1 3 4.# 34 "/us
000da90: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
000daa0: 6c2f 6f70 656e 7373 6c63 6f6e 662e 6822  l/opensslconf.h"
000dab0: 2033 2034 0a23 2031 2022 2f75 7372 2f69   3 4.# 1 "/usr/i
000dac0: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f6f  nclude/openssl/o
000dad0: 7065 6e73 736c 636f 6e66 2d78 3836 5f36  pensslconf-x86_6
000dae0: 342e 6822 2031 2033 2034 0a23 2033 3520  4.h" 1 3 4.# 35 
000daf0: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
000db00: 656e 7373 6c2f 6f70 656e 7373 6c63 6f6e  enssl/opensslcon
000db10: 662e 6822 2032 2033 2034 0a23 2036 3320  f.h" 2 3 4.# 63 
000db20: 2265 5f6f 732e 6822 2032 0a0a 2320 3120  "e_os.h" 2..# 1 
000db30: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
000db40: 656e 7373 6c2f 655f 6f73 322e 6822 2031  enssl/e_os2.h" 1
000db50: 2033 2034 0a23 2035 3620 222f 7573 722f   3 4.# 56 "/usr/
000db60: 696e 636c 7564 652f 6f70 656e 7373 6c2f  include/openssl/
000db70: 655f 6f73 322e 6822 2033 2034 0a23 2031  e_os2.h" 3 4.# 1
000db80: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
000db90: 7065 6e73 736c 2f6f 7065 6e73 736c 636f  penssl/opensslco
000dba0: 6e66 2e68 2220 3120 3320 340a 2320 3334  nf.h" 1 3 4.# 34
000dbb0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
000dbc0: 7065 6e73 736c 2f6f 7065 6e73 736c 636f  penssl/opensslco
000dbd0: 6e66 2e68 2220 3320 340a 2320 3120 222f  nf.h" 3 4.# 1 "/
000dbe0: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
000dbf0: 7373 6c2f 6f70 656e 7373 6c63 6f6e 662d  ssl/opensslconf-
000dc00: 7838 365f 3634 2e68 2220 3120 3320 340a  x86_64.h" 1 3 4.
000dc10: 2320 3335 2022 2f75 7372 2f69 6e63 6c75  # 35 "/usr/inclu
000dc20: 6465 2f6f 7065 6e73 736c 2f6f 7065 6e73  de/openssl/opens
000dc30: 736c 636f 6e66 2e68 2220 3220 3320 340a  slconf.h" 2 3 4.
000dc40: 2320 3537 2022 2f75 7372 2f69 6e63 6c75  # 57 "/usr/inclu
000dc50: 6465 2f6f 7065 6e73 736c 2f65 5f6f 7332  de/openssl/e_os2
000dc60: 2e68 2220 3220 3320 340a 2320 3635 2022  .h" 2 3 4.# 65 "
000dc70: 655f 6f73 2e68 2220 320a 2320 3431 3520  e_os.h" 2.# 415 
000dc80: 2265 5f6f 732e 6822 0a23 2031 2022 2f75  "e_os.h".# 1 "/u
000dc90: 7372 2f69 6e63 6c75 6465 2f75 6e69 7374  sr/include/unist
000dca0: 642e 6822 2031 2033 2034 0a23 2032 3720  d.h" 1 3 4.# 27 
000dcb0: 222f 7573 722f 696e 636c 7564 652f 756e  "/usr/include/un
000dcc0: 6973 7464 2e68 2220 3320 340a 0a23 2032  istd.h" 3 4..# 2
000dcd0: 3032 2022 2f75 7372 2f69 6e63 6c75 6465  02 "/usr/include
000dce0: 2f75 6e69 7374 642e 6822 2033 2034 0a23  /unistd.h" 3 4.#
000dcf0: 2031 2022 2f75 7372 2f69 6e63 6c75 6465   1 "/usr/include
000dd00: 2f62 6974 732f 706f 7369 785f 6f70 742e  /bits/posix_opt.
000dd10: 6822 2031 2033 2034 0a23 2032 3033 2022  h" 1 3 4.# 203 "
000dd20: 2f75 7372 2f69 6e63 6c75 6465 2f75 6e69  /usr/include/uni
000dd30: 7374 642e 6822 2032 2033 2034 0a0a 0a0a  std.h" 2 3 4....
000dd40: 2320 3120 222f 7573 722f 696e 636c 7564  # 1 "/usr/includ
000dd50: 652f 6269 7473 2f65 6e76 6972 6f6e 6d65  e/bits/environme
000dd60: 6e74 732e 6822 2031 2033 2034 0a23 2032  nts.h" 1 3 4.# 2
000dd70: 3220 222f 7573 722f 696e 636c 7564 652f  2 "/usr/include/
000dd80: 6269 7473 2f65 6e76 6972 6f6e 6d65 6e74  bits/environment
000dd90: 732e 6822 2033 2034 0a23 2031 2022 2f75  s.h" 3 4.# 1 "/u
000dda0: 7372 2f69 6e63 6c75 6465 2f62 6974 732f  sr/include/bits/
000ddb0: 776f 7264 7369 7a65 2e68 2220 3120 3320  wordsize.h" 1 3 
000ddc0: 340a 2320 3233 2022 2f75 7372 2f69 6e63  4.# 23 "/usr/inc
000ddd0: 6c75 6465 2f62 6974 732f 656e 7669 726f  lude/bits/enviro
000dde0: 6e6d 656e 7473 2e68 2220 3220 3320 340a  nments.h" 2 3 4.
000ddf0: 2320 3230 3720 222f 7573 722f 696e 636c  # 207 "/usr/incl
000de00: 7564 652f 756e 6973 7464 2e68 2220 3220  ude/unistd.h" 2 
000de10: 3320 340a 2320 3232 3620 222f 7573 722f  3 4.# 226 "/usr/
000de20: 696e 636c 7564 652f 756e 6973 7464 2e68  include/unistd.h
000de30: 2220 3320 340a 2320 3120 222f 7573 722f  " 3 4.# 1 "/usr/
000de40: 6c69 622f 6763 632f 7838 365f 3634 2d72  lib/gcc/x86_64-r
000de50: 6564 6861 742d 6c69 6e75 782f 342e 382e  edhat-linux/4.8.
000de60: 332f 696e 636c 7564 652f 7374 6464 6566  3/include/stddef
000de70: 2e68 2220 3120 3320 340a 2320 3232 3720  .h" 1 3 4.# 227 
000de80: 222f 7573 722f 696e 636c 7564 652f 756e  "/usr/include/un
000de90: 6973 7464 2e68 2220 3220 3320 340a 2320  istd.h" 2 3 4.# 
000dea0: 3235 3520 222f 7573 722f 696e 636c 7564  255 "/usr/includ
000deb0: 652f 756e 6973 7464 2e68 2220 3320 340a  e/unistd.h" 3 4.
000dec0: 7479 7065 6465 6620 5f5f 7573 6563 6f6e  typedef __usecon
000ded0: 6473 5f74 2075 7365 636f 6e64 735f 743b  ds_t useconds_t;
000dee0: 0a23 2032 3637 2022 2f75 7372 2f69 6e63  .# 267 "/usr/inc
000def0: 6c75 6465 2f75 6e69 7374 642e 6822 2033  lude/unistd.h" 3
000df00: 2034 0a74 7970 6564 6566 205f 5f69 6e74   4.typedef __int
000df10: 7074 725f 7420 696e 7470 7472 5f74 3b0a  ptr_t intptr_t;.
000df20: 0a0a 0a0a 0a0a 7479 7065 6465 6620 5f5f  ......typedef __
000df30: 736f 636b 6c65 6e5f 7420 736f 636b 6c65  socklen_t sockle
000df40: 6e5f 743b 0a23 2032 3837 2022 2f75 7372  n_t;.# 287 "/usr
000df50: 2f69 6e63 6c75 6465 2f75 6e69 7374 642e  /include/unistd.
000df60: 6822 2033 2034 0a65 7874 6572 6e20 696e  h" 3 4.extern in
000df70: 7420 6163 6365 7373 2028 636f 6e73 7420  t access (const 
000df80: 6368 6172 202a 5f5f 6e61 6d65 2c20 696e  char *__name, in
000df90: 7420 5f5f 7479 7065 2920 5f5f 6174 7472  t __type) __attr
000dfa0: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
000dfb0: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
000dfc0: 2929 205f 5f61 7474 7269 6275 7465 5f5f  )) __attribute__
000dfd0: 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f 2028   ((__nonnull__ (
000dfe0: 3129 2929 3b0a 2320 3330 3420 222f 7573  1)));.# 304 "/us
000dff0: 722f 696e 636c 7564 652f 756e 6973 7464  r/include/unistd
000e000: 2e68 2220 3320 340a 6578 7465 726e 2069  .h" 3 4.extern i
000e010: 6e74 2066 6163 6365 7373 6174 2028 696e  nt faccessat (in
000e020: 7420 5f5f 6664 2c20 636f 6e73 7420 6368  t __fd, const ch
000e030: 6172 202a 5f5f 6669 6c65 2c20 696e 7420  ar *__file, int 
000e040: 5f5f 7479 7065 2c20 696e 7420 5f5f 666c  __type, int __fl
000e050: 6167 290a 2020 2020 205f 5f61 7474 7269  ag).     __attri
000e060: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
000e070: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
000e080: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
000e090: 2828 5f5f 6e6f 6e6e 756c 6c5f 5f20 2832  ((__nonnull__ (2
000e0a0: 2929 2920 3b0a 2320 3333 3420 222f 7573  ))) ;.# 334 "/us
000e0b0: 722f 696e 636c 7564 652f 756e 6973 7464  r/include/unistd
000e0c0: 2e68 2220 3320 340a 6578 7465 726e 205f  .h" 3 4.extern _
000e0d0: 5f6f 6666 5f74 206c 7365 656b 2028 696e  _off_t lseek (in
000e0e0: 7420 5f5f 6664 2c20 5f5f 6f66 665f 7420  t __fd, __off_t 
000e0f0: 5f5f 6f66 6673 6574 2c20 696e 7420 5f5f  __offset, int __
000e100: 7768 656e 6365 2920 5f5f 6174 7472 6962  whence) __attrib
000e110: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
000e120: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
000e130: 3b0a 2320 3335 3320 222f 7573 722f 696e  ;.# 353 "/usr/in
000e140: 636c 7564 652f 756e 6973 7464 2e68 2220  clude/unistd.h" 
000e150: 3320 340a 6578 7465 726e 2069 6e74 2063  3 4.extern int c
000e160: 6c6f 7365 2028 696e 7420 5f5f 6664 293b  lose (int __fd);
000e170: 0a0a 0a0a 0a0a 0a65 7874 6572 6e20 7373  .......extern ss
000e180: 697a 655f 7420 7265 6164 2028 696e 7420  ize_t read (int 
000e190: 5f5f 6664 2c20 766f 6964 202a 5f5f 6275  __fd, void *__bu
000e1a0: 662c 2073 697a 655f 7420 5f5f 6e62 7974  f, size_t __nbyt
000e1b0: 6573 2920 3b0a 0a0a 0a0a 0a65 7874 6572  es) ;......exter
000e1c0: 6e20 7373 697a 655f 7420 7772 6974 6520  n ssize_t write 
000e1d0: 2869 6e74 205f 5f66 642c 2063 6f6e 7374  (int __fd, const
000e1e0: 2076 6f69 6420 2a5f 5f62 7566 2c20 7369   void *__buf, si
000e1f0: 7a65 5f74 205f 5f6e 2920 3b0a 2320 3337  ze_t __n) ;.# 37
000e200: 3620 222f 7573 722f 696e 636c 7564 652f  6 "/usr/include/
000e210: 756e 6973 7464 2e68 2220 3320 340a 6578  unistd.h" 3 4.ex
000e220: 7465 726e 2073 7369 7a65 5f74 2070 7265  tern ssize_t pre
000e230: 6164 2028 696e 7420 5f5f 6664 2c20 766f  ad (int __fd, vo
000e240: 6964 202a 5f5f 6275 662c 2073 697a 655f  id *__buf, size_
000e250: 7420 5f5f 6e62 7974 6573 2c0a 2020 2020  t __nbytes,.    
000e260: 2020 2020 5f5f 6f66 665f 7420 5f5f 6f66      __off_t __of
000e270: 6673 6574 2920 3b0a 0a0a 0a0a 0a0a 6578  fset) ;.......ex
000e280: 7465 726e 2073 7369 7a65 5f74 2070 7772  tern ssize_t pwr
000e290: 6974 6520 2869 6e74 205f 5f66 642c 2063  ite (int __fd, c
000e2a0: 6f6e 7374 2076 6f69 6420 2a5f 5f62 7566  onst void *__buf
000e2b0: 2c20 7369 7a65 5f74 205f 5f6e 2c0a 2020  , size_t __n,.  
000e2c0: 2020 2020 2020 205f 5f6f 6666 5f74 205f         __off_t _
000e2d0: 5f6f 6666 7365 7429 203b 0a23 2034 3137  _offset) ;.# 417
000e2e0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f75   "/usr/include/u
000e2f0: 6e69 7374 642e 6822 2033 2034 0a65 7874  nistd.h" 3 4.ext
000e300: 6572 6e20 696e 7420 7069 7065 2028 696e  ern int pipe (in
000e310: 7420 5f5f 7069 7065 6465 735b 325d 2920  t __pipedes[2]) 
000e320: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
000e330: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
000e340: 6c65 6166 5f5f 2929 203b 0a23 2034 3332  leaf__)) ;.# 432
000e350: 2022 2f75 7372 2f69 6e63 6c75 6465 2f75   "/usr/include/u
000e360: 6e69 7374 642e 6822 2033 2034 0a65 7874  nistd.h" 3 4.ext
000e370: 6572 6e20 756e 7369 676e 6564 2069 6e74  ern unsigned int
000e380: 2061 6c61 726d 2028 756e 7369 676e 6564   alarm (unsigned
000e390: 2069 6e74 205f 5f73 6563 6f6e 6473 2920   int __seconds) 
000e3a0: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
000e3b0: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
000e3c0: 6c65 6166 5f5f 2929 3b0a 2320 3434 3420  leaf__));.# 444 
000e3d0: 222f 7573 722f 696e 636c 7564 652f 756e  "/usr/include/un
000e3e0: 6973 7464 2e68 2220 3320 340a 6578 7465  istd.h" 3 4.exte
000e3f0: 726e 2075 6e73 6967 6e65 6420 696e 7420  rn unsigned int 
000e400: 736c 6565 7020 2875 6e73 6967 6e65 6420  sleep (unsigned 
000e410: 696e 7420 5f5f 7365 636f 6e64 7329 3b0a  int __seconds);.
000e420: 0a0a 0a0a 0a0a 0a65 7874 6572 6e20 5f5f  .......extern __
000e430: 7573 6563 6f6e 6473 5f74 2075 616c 6172  useconds_t ualar
000e440: 6d20 285f 5f75 7365 636f 6e64 735f 7420  m (__useconds_t 
000e450: 5f5f 7661 6c75 652c 205f 5f75 7365 636f  __value, __useco
000e460: 6e64 735f 7420 5f5f 696e 7465 7276 616c  nds_t __interval
000e470: 290a 2020 2020 205f 5f61 7474 7269 6275  ).     __attribu
000e480: 7465 5f5f 2028 285f 5f6e 6f74 6872 6f77  te__ ((__nothrow
000e490: 5f5f 202c 205f 5f6c 6561 665f 5f29 293b  __ , __leaf__));
000e4a0: 0a0a 0a0a 0a0a 0a65 7874 6572 6e20 696e  .......extern in
000e4b0: 7420 7573 6c65 6570 2028 5f5f 7573 6563  t usleep (__usec
000e4c0: 6f6e 6473 5f74 205f 5f75 7365 636f 6e64  onds_t __usecond
000e4d0: 7329 3b0a 2320 3436 3920 222f 7573 722f  s);.# 469 "/usr/
000e4e0: 696e 636c 7564 652f 756e 6973 7464 2e68  include/unistd.h
000e4f0: 2220 3320 340a 6578 7465 726e 2069 6e74  " 3 4.extern int
000e500: 2070 6175 7365 2028 766f 6964 293b 0a0a   pause (void);..
000e510: 0a0a 6578 7465 726e 2069 6e74 2063 686f  ..extern int cho
000e520: 776e 2028 636f 6e73 7420 6368 6172 202a  wn (const char *
000e530: 5f5f 6669 6c65 2c20 5f5f 7569 645f 7420  __file, __uid_t 
000e540: 5f5f 6f77 6e65 722c 205f 5f67 6964 5f74  __owner, __gid_t
000e550: 205f 5f67 726f 7570 290a 2020 2020 205f   __group).     _
000e560: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
000e570: 5f6e 6f74 6872 6f77 5f5f 202c 205f 5f6c  _nothrow__ , __l
000e580: 6561 665f 5f29 2920 5f5f 6174 7472 6962  eaf__)) __attrib
000e590: 7574 655f 5f20 2828 5f5f 6e6f 6e6e 756c  ute__ ((__nonnul
000e5a0: 6c5f 5f20 2831 2929 2920 3b0a 0a0a 0a65  l__ (1))) ;....e
000e5b0: 7874 6572 6e20 696e 7420 6663 686f 776e  xtern int fchown
000e5c0: 2028 696e 7420 5f5f 6664 2c20 5f5f 7569   (int __fd, __ui
000e5d0: 645f 7420 5f5f 6f77 6e65 722c 205f 5f67  d_t __owner, __g
000e5e0: 6964 5f74 205f 5f67 726f 7570 2920 5f5f  id_t __group) __
000e5f0: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
000e600: 6e6f 7468 726f 775f 5f20 2c20 5f5f 6c65  nothrow__ , __le
000e610: 6166 5f5f 2929 203b 0a0a 0a0a 0a65 7874  af__)) ;.....ext
000e620: 6572 6e20 696e 7420 6c63 686f 776e 2028  ern int lchown (
000e630: 636f 6e73 7420 6368 6172 202a 5f5f 6669  const char *__fi
000e640: 6c65 2c20 5f5f 7569 645f 7420 5f5f 6f77  le, __uid_t __ow
000e650: 6e65 722c 205f 5f67 6964 5f74 205f 5f67  ner, __gid_t __g
000e660: 726f 7570 290a 2020 2020 205f 5f61 7474  roup).     __att
000e670: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
000e680: 6872 6f77 5f5f 202c 205f 5f6c 6561 665f  hrow__ , __leaf_
000e690: 5f29 2920 5f5f 6174 7472 6962 7574 655f  _)) __attribute_
000e6a0: 5f20 2828 5f5f 6e6f 6e6e 756c 6c5f 5f20  _ ((__nonnull__ 
000e6b0: 2831 2929 2920 3b0a 0a0a 0a0a 0a0a 6578  (1))) ;.......ex
000e6c0: 7465 726e 2069 6e74 2066 6368 6f77 6e61  tern int fchowna
000e6d0: 7420 2869 6e74 205f 5f66 642c 2063 6f6e  t (int __fd, con
000e6e0: 7374 2063 6861 7220 2a5f 5f66 696c 652c  st char *__file,
000e6f0: 205f 5f75 6964 5f74 205f 5f6f 776e 6572   __uid_t __owner
000e700: 2c0a 2020 2020 2020 205f 5f67 6964 5f74  ,.       __gid_t
000e710: 205f 5f67 726f 7570 2c20 696e 7420 5f5f   __group, int __
000e720: 666c 6167 290a 2020 2020 205f 5f61 7474  flag).     __att
000e730: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
000e740: 6872 6f77 5f5f 202c 205f 5f6c 6561 665f  hrow__ , __leaf_
000e750: 5f29 2920 5f5f 6174 7472 6962 7574 655f  _)) __attribute_
000e760: 5f20 2828 5f5f 6e6f 6e6e 756c 6c5f 5f20  _ ((__nonnull__ 
000e770: 2832 2929 2920 3b0a 0a0a 0a65 7874 6572  (2))) ;....exter
000e780: 6e20 696e 7420 6368 6469 7220 2863 6f6e  n int chdir (con
000e790: 7374 2063 6861 7220 2a5f 5f70 6174 6829  st char *__path)
000e7a0: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
000e7b0: 285f 5f6e 6f74 6872 6f77 5f5f 202c 205f  (__nothrow__ , _
000e7c0: 5f6c 6561 665f 5f29 2920 5f5f 6174 7472  _leaf__)) __attr
000e7d0: 6962 7574 655f 5f20 2828 5f5f 6e6f 6e6e  ibute__ ((__nonn
000e7e0: 756c 6c5f 5f20 2831 2929 2920 3b0a 0a0a  ull__ (1))) ;...
000e7f0: 0a65 7874 6572 6e20 696e 7420 6663 6864  .extern int fchd
000e800: 6972 2028 696e 7420 5f5f 6664 2920 5f5f  ir (int __fd) __
000e810: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
000e820: 6e6f 7468 726f 775f 5f20 2c20 5f5f 6c65  nothrow__ , __le
000e830: 6166 5f5f 2929 203b 0a23 2035 3131 2022  af__)) ;.# 511 "
000e840: 2f75 7372 2f69 6e63 6c75 6465 2f75 6e69  /usr/include/uni
000e850: 7374 642e 6822 2033 2034 0a65 7874 6572  std.h" 3 4.exter
000e860: 6e20 6368 6172 202a 6765 7463 7764 2028  n char *getcwd (
000e870: 6368 6172 202a 5f5f 6275 662c 2073 697a  char *__buf, siz
000e880: 655f 7420 5f5f 7369 7a65 2920 5f5f 6174  e_t __size) __at
000e890: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
000e8a0: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
000e8b0: 5f5f 2929 203b 0a23 2035 3235 2022 2f75  __)) ;.# 525 "/u
000e8c0: 7372 2f69 6e63 6c75 6465 2f75 6e69 7374  sr/include/unist
000e8d0: 642e 6822 2033 2034 0a65 7874 6572 6e20  d.h" 3 4.extern 
000e8e0: 6368 6172 202a 6765 7477 6420 2863 6861  char *getwd (cha
000e8f0: 7220 2a5f 5f62 7566 290a 2020 2020 205f  r *__buf).     _
000e900: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
000e910: 5f6e 6f74 6872 6f77 5f5f 202c 205f 5f6c  _nothrow__ , __l
000e920: 6561 665f 5f29 2920 5f5f 6174 7472 6962  eaf__)) __attrib
000e930: 7574 655f 5f20 2828 5f5f 6e6f 6e6e 756c  ute__ ((__nonnul
000e940: 6c5f 5f20 2831 2929 2920 5f5f 6174 7472  l__ (1))) __attr
000e950: 6962 7574 655f 5f20 2828 5f5f 6465 7072  ibute__ ((__depr
000e960: 6563 6174 6564 5f5f 2929 203b 0a0a 0a0a  ecated__)) ;....
000e970: 0a65 7874 6572 6e20 696e 7420 6475 7020  .extern int dup 
000e980: 2869 6e74 205f 5f66 6429 205f 5f61 7474  (int __fd) __att
000e990: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
000e9a0: 6872 6f77 5f5f 202c 205f 5f6c 6561 665f  hrow__ , __leaf_
000e9b0: 5f29 2920 3b0a 0a0a 6578 7465 726e 2069  _)) ;...extern i
000e9c0: 6e74 2064 7570 3220 2869 6e74 205f 5f66  nt dup2 (int __f
000e9d0: 642c 2069 6e74 205f 5f66 6432 2920 5f5f  d, int __fd2) __
000e9e0: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
000e9f0: 6e6f 7468 726f 775f 5f20 2c20 5f5f 6c65  nothrow__ , __le
000ea00: 6166 5f5f 2929 3b0a 2320 3534 3320 222f  af__));.# 543 "/
000ea10: 7573 722f 696e 636c 7564 652f 756e 6973  usr/include/unis
000ea20: 7464 2e68 2220 3320 340a 6578 7465 726e  td.h" 3 4.extern
000ea30: 2063 6861 7220 2a2a 5f5f 656e 7669 726f   char **__enviro
000ea40: 6e3b 0a0a 0a0a 0a0a 0a0a 6578 7465 726e  n;........extern
000ea50: 2069 6e74 2065 7865 6376 6520 2863 6f6e   int execve (con
000ea60: 7374 2063 6861 7220 2a5f 5f70 6174 682c  st char *__path,
000ea70: 2063 6861 7220 2a63 6f6e 7374 205f 5f61   char *const __a
000ea80: 7267 765b 5d2c 0a20 2020 2020 6368 6172  rgv[],.     char
000ea90: 202a 636f 6e73 7420 5f5f 656e 7670 5b5d   *const __envp[]
000eaa0: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
000eab0: 2828 5f5f 6e6f 7468 726f 775f 5f20 2c20  ((__nothrow__ , 
000eac0: 5f5f 6c65 6166 5f5f 2929 205f 5f61 7474  __leaf__)) __att
000ead0: 7269 6275 7465 5f5f 2028 285f 5f6e 6f6e  ribute__ ((__non
000eae0: 6e75 6c6c 5f5f 2028 312c 2032 2929 293b  null__ (1, 2)));
000eaf0: 0a0a 0a0a 0a65 7874 6572 6e20 696e 7420  .....extern int 
000eb00: 6665 7865 6376 6520 2869 6e74 205f 5f66  fexecve (int __f
000eb10: 642c 2063 6861 7220 2a63 6f6e 7374 205f  d, char *const _
000eb20: 5f61 7267 765b 5d2c 2063 6861 7220 2a63  _argv[], char *c
000eb30: 6f6e 7374 205f 5f65 6e76 705b 5d29 0a20  onst __envp[]). 
000eb40: 2020 2020 5f5f 6174 7472 6962 7574 655f      __attribute_
000eb50: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
000eb60: 2c20 5f5f 6c65 6166 5f5f 2929 205f 5f61  , __leaf__)) __a
000eb70: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
000eb80: 6f6e 6e75 6c6c 5f5f 2028 3229 2929 3b0a  onnull__ (2)));.
000eb90: 0a0a 0a0a 6578 7465 726e 2069 6e74 2065  ....extern int e
000eba0: 7865 6376 2028 636f 6e73 7420 6368 6172  xecv (const char
000ebb0: 202a 5f5f 7061 7468 2c20 6368 6172 202a   *__path, char *
000ebc0: 636f 6e73 7420 5f5f 6172 6776 5b5d 290a  const __argv[]).
000ebd0: 2020 2020 205f 5f61 7474 7269 6275 7465       __attribute
000ebe0: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
000ebf0: 202c 205f 5f6c 6561 665f 5f29 2920 5f5f   , __leaf__)) __
000ec00: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
000ec10: 6e6f 6e6e 756c 6c5f 5f20 2831 2c20 3229  nonnull__ (1, 2)
000ec20: 2929 3b0a 0a0a 0a65 7874 6572 6e20 696e  ));....extern in
000ec30: 7420 6578 6563 6c65 2028 636f 6e73 7420  t execle (const 
000ec40: 6368 6172 202a 5f5f 7061 7468 2c20 636f  char *__path, co
000ec50: 6e73 7420 6368 6172 202a 5f5f 6172 672c  nst char *__arg,
000ec60: 202e 2e2e 290a 2020 2020 205f 5f61 7474   ...).     __att
000ec70: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
000ec80: 6872 6f77 5f5f 202c 205f 5f6c 6561 665f  hrow__ , __leaf_
000ec90: 5f29 2920 5f5f 6174 7472 6962 7574 655f  _)) __attribute_
000eca0: 5f20 2828 5f5f 6e6f 6e6e 756c 6c5f 5f20  _ ((__nonnull__ 
000ecb0: 2831 2c20 3229 2929 3b0a 0a0a 0a65 7874  (1, 2)));....ext
000ecc0: 6572 6e20 696e 7420 6578 6563 6c20 2863  ern int execl (c
000ecd0: 6f6e 7374 2063 6861 7220 2a5f 5f70 6174  onst char *__pat
000ece0: 682c 2063 6f6e 7374 2063 6861 7220 2a5f  h, const char *_
000ecf0: 5f61 7267 2c20 2e2e 2e29 0a20 2020 2020  _arg, ...).     
000ed00: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
000ed10: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
000ed20: 6c65 6166 5f5f 2929 205f 5f61 7474 7269  leaf__)) __attri
000ed30: 6275 7465 5f5f 2028 285f 5f6e 6f6e 6e75  bute__ ((__nonnu
000ed40: 6c6c 5f5f 2028 312c 2032 2929 293b 0a0a  ll__ (1, 2)));..
000ed50: 0a0a 6578 7465 726e 2069 6e74 2065 7865  ..extern int exe
000ed60: 6376 7020 2863 6f6e 7374 2063 6861 7220  cvp (const char 
000ed70: 2a5f 5f66 696c 652c 2063 6861 7220 2a63  *__file, char *c
000ed80: 6f6e 7374 205f 5f61 7267 765b 5d29 0a20  onst __argv[]). 
000ed90: 2020 2020 5f5f 6174 7472 6962 7574 655f      __attribute_
000eda0: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
000edb0: 2c20 5f5f 6c65 6166 5f5f 2929 205f 5f61  , __leaf__)) __a
000edc0: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
000edd0: 6f6e 6e75 6c6c 5f5f 2028 312c 2032 2929  onnull__ (1, 2))
000ede0: 293b 0a0a 0a0a 0a65 7874 6572 6e20 696e  );.....extern in
000edf0: 7420 6578 6563 6c70 2028 636f 6e73 7420  t execlp (const 
000ee00: 6368 6172 202a 5f5f 6669 6c65 2c20 636f  char *__file, co
000ee10: 6e73 7420 6368 6172 202a 5f5f 6172 672c  nst char *__arg,
000ee20: 202e 2e2e 290a 2020 2020 205f 5f61 7474   ...).     __att
000ee30: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
000ee40: 6872 6f77 5f5f 202c 205f 5f6c 6561 665f  hrow__ , __leaf_
000ee50: 5f29 2920 5f5f 6174 7472 6962 7574 655f  _)) __attribute_
000ee60: 5f20 2828 5f5f 6e6f 6e6e 756c 6c5f 5f20  _ ((__nonnull__ 
000ee70: 2831 2c20 3229 2929 3b0a 2320 3539 3820  (1, 2)));.# 598 
000ee80: 222f 7573 722f 696e 636c 7564 652f 756e  "/usr/include/un
000ee90: 6973 7464 2e68 2220 3320 340a 6578 7465  istd.h" 3 4.exte
000eea0: 726e 2069 6e74 206e 6963 6520 2869 6e74  rn int nice (int
000eeb0: 205f 5f69 6e63 2920 5f5f 6174 7472 6962   __inc) __attrib
000eec0: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
000eed0: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
000eee0: 203b 0a0a 0a0a 0a65 7874 6572 6e20 766f   ;.....extern vo
000eef0: 6964 205f 6578 6974 2028 696e 7420 5f5f  id _exit (int __
000ef00: 7374 6174 7573 2920 5f5f 6174 7472 6962  status) __attrib
000ef10: 7574 655f 5f20 2828 5f5f 6e6f 7265 7475  ute__ ((__noretu
000ef20: 726e 5f5f 2929 3b0a 0a0a 0a0a 0a23 2031  rn__));......# 1
000ef30: 2022 2f75 7372 2f69 6e63 6c75 6465 2f62   "/usr/include/b
000ef40: 6974 732f 636f 6e66 6e61 6d65 2e68 2220  its/confname.h" 
000ef50: 3120 3320 340a 2320 3235 2022 2f75 7372  1 3 4.# 25 "/usr
000ef60: 2f69 6e63 6c75 6465 2f62 6974 732f 636f  /include/bits/co
000ef70: 6e66 6e61 6d65 2e68 2220 3320 340a 656e  nfname.h" 3 4.en
000ef80: 756d 0a20 207b 0a20 2020 205f 5043 5f4c  um.  {.    _PC_L
000ef90: 494e 4b5f 4d41 582c 0a0a 2020 2020 5f50  INK_MAX,..    _P
000efa0: 435f 4d41 585f 4341 4e4f 4e2c 0a0a 2020  C_MAX_CANON,..  
000efb0: 2020 5f50 435f 4d41 585f 494e 5055 542c    _PC_MAX_INPUT,
000efc0: 0a0a 2020 2020 5f50 435f 4e41 4d45 5f4d  ..    _PC_NAME_M
000efd0: 4158 2c0a 0a20 2020 205f 5043 5f50 4154  AX,..    _PC_PAT
000efe0: 485f 4d41 582c 0a0a 2020 2020 5f50 435f  H_MAX,..    _PC_
000eff0: 5049 5045 5f42 5546 2c0a 0a20 2020 205f  PIPE_BUF,..    _
000f000: 5043 5f43 484f 574e 5f52 4553 5452 4943  PC_CHOWN_RESTRIC
000f010: 5445 442c 0a0a 2020 2020 5f50 435f 4e4f  TED,..    _PC_NO
000f020: 5f54 5255 4e43 2c0a 0a20 2020 205f 5043  _TRUNC,..    _PC
000f030: 5f56 4449 5341 424c 452c 0a0a 2020 2020  _VDISABLE,..    
000f040: 5f50 435f 5359 4e43 5f49 4f2c 0a0a 2020  _PC_SYNC_IO,..  
000f050: 2020 5f50 435f 4153 594e 435f 494f 2c0a    _PC_ASYNC_IO,.
000f060: 0a20 2020 205f 5043 5f50 5249 4f5f 494f  .    _PC_PRIO_IO
000f070: 2c0a 0a20 2020 205f 5043 5f53 4f43 4b5f  ,..    _PC_SOCK_
000f080: 4d41 5842 5546 2c0a 0a20 2020 205f 5043  MAXBUF,..    _PC
000f090: 5f46 494c 4553 495a 4542 4954 532c 0a0a  _FILESIZEBITS,..
000f0a0: 2020 2020 5f50 435f 5245 435f 494e 4352      _PC_REC_INCR
000f0b0: 5f58 4645 525f 5349 5a45 2c0a 0a20 2020  _XFER_SIZE,..   
000f0c0: 205f 5043 5f52 4543 5f4d 4158 5f58 4645   _PC_REC_MAX_XFE
000f0d0: 525f 5349 5a45 2c0a 0a20 2020 205f 5043  R_SIZE,..    _PC
000f0e0: 5f52 4543 5f4d 494e 5f58 4645 525f 5349  _REC_MIN_XFER_SI
000f0f0: 5a45 2c0a 0a20 2020 205f 5043 5f52 4543  ZE,..    _PC_REC
000f100: 5f58 4645 525f 414c 4947 4e2c 0a0a 2020  _XFER_ALIGN,..  
000f110: 2020 5f50 435f 414c 4c4f 435f 5349 5a45    _PC_ALLOC_SIZE
000f120: 5f4d 494e 2c0a 0a20 2020 205f 5043 5f53  _MIN,..    _PC_S
000f130: 594d 4c49 4e4b 5f4d 4158 2c0a 0a20 2020  YMLINK_MAX,..   
000f140: 205f 5043 5f32 5f53 594d 4c49 4e4b 530a   _PC_2_SYMLINKS.
000f150: 0a20 207d 3b0a 0a0a 656e 756d 0a20 207b  .  };...enum.  {
000f160: 0a20 2020 205f 5343 5f41 5247 5f4d 4158  .    _SC_ARG_MAX
000f170: 2c0a 0a20 2020 205f 5343 5f43 4849 4c44  ,..    _SC_CHILD
000f180: 5f4d 4158 2c0a 0a20 2020 205f 5343 5f43  _MAX,..    _SC_C
000f190: 4c4b 5f54 434b 2c0a 0a20 2020 205f 5343  LK_TCK,..    _SC
000f1a0: 5f4e 4752 4f55 5053 5f4d 4158 2c0a 0a20  _NGROUPS_MAX,.. 
000f1b0: 2020 205f 5343 5f4f 5045 4e5f 4d41 582c     _SC_OPEN_MAX,
000f1c0: 0a0a 2020 2020 5f53 435f 5354 5245 414d  ..    _SC_STREAM
000f1d0: 5f4d 4158 2c0a 0a20 2020 205f 5343 5f54  _MAX,..    _SC_T
000f1e0: 5a4e 414d 455f 4d41 582c 0a0a 2020 2020  ZNAME_MAX,..    
000f1f0: 5f53 435f 4a4f 425f 434f 4e54 524f 4c2c  _SC_JOB_CONTROL,
000f200: 0a0a 2020 2020 5f53 435f 5341 5645 445f  ..    _SC_SAVED_
000f210: 4944 532c 0a0a 2020 2020 5f53 435f 5245  IDS,..    _SC_RE
000f220: 414c 5449 4d45 5f53 4947 4e41 4c53 2c0a  ALTIME_SIGNALS,.
000f230: 0a20 2020 205f 5343 5f50 5249 4f52 4954  .    _SC_PRIORIT
000f240: 595f 5343 4845 4455 4c49 4e47 2c0a 0a20  Y_SCHEDULING,.. 
000f250: 2020 205f 5343 5f54 494d 4552 532c 0a0a     _SC_TIMERS,..
000f260: 2020 2020 5f53 435f 4153 594e 4348 524f      _SC_ASYNCHRO
000f270: 4e4f 5553 5f49 4f2c 0a0a 2020 2020 5f53  NOUS_IO,..    _S
000f280: 435f 5052 494f 5249 5449 5a45 445f 494f  C_PRIORITIZED_IO
000f290: 2c0a 0a20 2020 205f 5343 5f53 594e 4348  ,..    _SC_SYNCH
000f2a0: 524f 4e49 5a45 445f 494f 2c0a 0a20 2020  RONIZED_IO,..   
000f2b0: 205f 5343 5f46 5359 4e43 2c0a 0a20 2020   _SC_FSYNC,..   
000f2c0: 205f 5343 5f4d 4150 5045 445f 4649 4c45   _SC_MAPPED_FILE
000f2d0: 532c 0a0a 2020 2020 5f53 435f 4d45 4d4c  S,..    _SC_MEML
000f2e0: 4f43 4b2c 0a0a 2020 2020 5f53 435f 4d45  OCK,..    _SC_ME
000f2f0: 4d4c 4f43 4b5f 5241 4e47 452c 0a0a 2020  MLOCK_RANGE,..  
000f300: 2020 5f53 435f 4d45 4d4f 5259 5f50 524f    _SC_MEMORY_PRO
000f310: 5445 4354 494f 4e2c 0a0a 2020 2020 5f53  TECTION,..    _S
000f320: 435f 4d45 5353 4147 455f 5041 5353 494e  C_MESSAGE_PASSIN
000f330: 472c 0a0a 2020 2020 5f53 435f 5345 4d41  G,..    _SC_SEMA
000f340: 5048 4f52 4553 2c0a 0a20 2020 205f 5343  PHORES,..    _SC
000f350: 5f53 4841 5245 445f 4d45 4d4f 5259 5f4f  _SHARED_MEMORY_O
000f360: 424a 4543 5453 2c0a 0a20 2020 205f 5343  BJECTS,..    _SC
000f370: 5f41 494f 5f4c 4953 5449 4f5f 4d41 582c  _AIO_LISTIO_MAX,
000f380: 0a0a 2020 2020 5f53 435f 4149 4f5f 4d41  ..    _SC_AIO_MA
000f390: 582c 0a0a 2020 2020 5f53 435f 4149 4f5f  X,..    _SC_AIO_
000f3a0: 5052 494f 5f44 454c 5441 5f4d 4158 2c0a  PRIO_DELTA_MAX,.
000f3b0: 0a20 2020 205f 5343 5f44 454c 4159 5449  .    _SC_DELAYTI
000f3c0: 4d45 525f 4d41 582c 0a0a 2020 2020 5f53  MER_MAX,..    _S
000f3d0: 435f 4d51 5f4f 5045 4e5f 4d41 582c 0a0a  C_MQ_OPEN_MAX,..
000f3e0: 2020 2020 5f53 435f 4d51 5f50 5249 4f5f      _SC_MQ_PRIO_
000f3f0: 4d41 582c 0a0a 2020 2020 5f53 435f 5645  MAX,..    _SC_VE
000f400: 5253 494f 4e2c 0a0a 2020 2020 5f53 435f  RSION,..    _SC_
000f410: 5041 4745 5349 5a45 2c0a 0a0a 2020 2020  PAGESIZE,...    
000f420: 5f53 435f 5254 5349 475f 4d41 582c 0a0a  _SC_RTSIG_MAX,..
000f430: 2020 2020 5f53 435f 5345 4d5f 4e53 454d      _SC_SEM_NSEM
000f440: 535f 4d41 582c 0a0a 2020 2020 5f53 435f  S_MAX,..    _SC_
000f450: 5345 4d5f 5641 4c55 455f 4d41 582c 0a0a  SEM_VALUE_MAX,..
000f460: 2020 2020 5f53 435f 5349 4751 5545 5545      _SC_SIGQUEUE
000f470: 5f4d 4158 2c0a 0a20 2020 205f 5343 5f54  _MAX,..    _SC_T
000f480: 494d 4552 5f4d 4158 2c0a 0a0a 0a0a 2020  IMER_MAX,.....  
000f490: 2020 5f53 435f 4243 5f42 4153 455f 4d41    _SC_BC_BASE_MA
000f4a0: 582c 0a0a 2020 2020 5f53 435f 4243 5f44  X,..    _SC_BC_D
000f4b0: 494d 5f4d 4158 2c0a 0a20 2020 205f 5343  IM_MAX,..    _SC
000f4c0: 5f42 435f 5343 414c 455f 4d41 582c 0a0a  _BC_SCALE_MAX,..
000f4d0: 2020 2020 5f53 435f 4243 5f53 5452 494e      _SC_BC_STRIN
000f4e0: 475f 4d41 582c 0a0a 2020 2020 5f53 435f  G_MAX,..    _SC_
000f4f0: 434f 4c4c 5f57 4549 4748 5453 5f4d 4158  COLL_WEIGHTS_MAX
000f500: 2c0a 0a20 2020 205f 5343 5f45 5155 4956  ,..    _SC_EQUIV
000f510: 5f43 4c41 5353 5f4d 4158 2c0a 0a20 2020  _CLASS_MAX,..   
000f520: 205f 5343 5f45 5850 525f 4e45 5354 5f4d   _SC_EXPR_NEST_M
000f530: 4158 2c0a 0a20 2020 205f 5343 5f4c 494e  AX,..    _SC_LIN
000f540: 455f 4d41 582c 0a0a 2020 2020 5f53 435f  E_MAX,..    _SC_
000f550: 5245 5f44 5550 5f4d 4158 2c0a 0a20 2020  RE_DUP_MAX,..   
000f560: 205f 5343 5f43 4841 5243 4c41 5353 5f4e   _SC_CHARCLASS_N
000f570: 414d 455f 4d41 582c 0a0a 0a20 2020 205f  AME_MAX,...    _
000f580: 5343 5f32 5f56 4552 5349 4f4e 2c0a 0a20  SC_2_VERSION,.. 
000f590: 2020 205f 5343 5f32 5f43 5f42 494e 442c     _SC_2_C_BIND,
000f5a0: 0a0a 2020 2020 5f53 435f 325f 435f 4445  ..    _SC_2_C_DE
000f5b0: 562c 0a0a 2020 2020 5f53 435f 325f 464f  V,..    _SC_2_FO
000f5c0: 5254 5f44 4556 2c0a 0a20 2020 205f 5343  RT_DEV,..    _SC
000f5d0: 5f32 5f46 4f52 545f 5255 4e2c 0a0a 2020  _2_FORT_RUN,..  
000f5e0: 2020 5f53 435f 325f 5357 5f44 4556 2c0a    _SC_2_SW_DEV,.
000f5f0: 0a20 2020 205f 5343 5f32 5f4c 4f43 414c  .    _SC_2_LOCAL
000f600: 4544 4546 2c0a 0a0a 2020 2020 5f53 435f  EDEF,...    _SC_
000f610: 5049 492c 0a0a 2020 2020 5f53 435f 5049  PII,..    _SC_PI
000f620: 495f 5854 492c 0a0a 2020 2020 5f53 435f  I_XTI,..    _SC_
000f630: 5049 495f 534f 434b 4554 2c0a 0a20 2020  PII_SOCKET,..   
000f640: 205f 5343 5f50 4949 5f49 4e54 4552 4e45   _SC_PII_INTERNE
000f650: 542c 0a0a 2020 2020 5f53 435f 5049 495f  T,..    _SC_PII_
000f660: 4f53 492c 0a0a 2020 2020 5f53 435f 504f  OSI,..    _SC_PO
000f670: 4c4c 2c0a 0a20 2020 205f 5343 5f53 454c  LL,..    _SC_SEL
000f680: 4543 542c 0a0a 2020 2020 5f53 435f 5549  ECT,..    _SC_UI
000f690: 4f5f 4d41 5849 4f56 2c0a 0a20 2020 205f  O_MAXIOV,..    _
000f6a0: 5343 5f49 4f56 5f4d 4158 203d 205f 5343  SC_IOV_MAX = _SC
000f6b0: 5f55 494f 5f4d 4158 494f 562c 0a0a 2020  _UIO_MAXIOV,..  
000f6c0: 2020 5f53 435f 5049 495f 494e 5445 524e    _SC_PII_INTERN
000f6d0: 4554 5f53 5452 4541 4d2c 0a0a 2020 2020  ET_STREAM,..    
000f6e0: 5f53 435f 5049 495f 494e 5445 524e 4554  _SC_PII_INTERNET
000f6f0: 5f44 4752 414d 2c0a 0a20 2020 205f 5343  _DGRAM,..    _SC
000f700: 5f50 4949 5f4f 5349 5f43 4f54 532c 0a0a  _PII_OSI_COTS,..
000f710: 2020 2020 5f53 435f 5049 495f 4f53 495f      _SC_PII_OSI_
000f720: 434c 5453 2c0a 0a20 2020 205f 5343 5f50  CLTS,..    _SC_P
000f730: 4949 5f4f 5349 5f4d 2c0a 0a20 2020 205f  II_OSI_M,..    _
000f740: 5343 5f54 5f49 4f56 5f4d 4158 2c0a 0a0a  SC_T_IOV_MAX,...
000f750: 0a20 2020 205f 5343 5f54 4852 4541 4453  .    _SC_THREADS
000f760: 2c0a 0a20 2020 205f 5343 5f54 4852 4541  ,..    _SC_THREA
000f770: 445f 5341 4645 5f46 554e 4354 494f 4e53  D_SAFE_FUNCTIONS
000f780: 2c0a 0a20 2020 205f 5343 5f47 4554 4752  ,..    _SC_GETGR
000f790: 5f52 5f53 495a 455f 4d41 582c 0a0a 2020  _R_SIZE_MAX,..  
000f7a0: 2020 5f53 435f 4745 5450 575f 525f 5349    _SC_GETPW_R_SI
000f7b0: 5a45 5f4d 4158 2c0a 0a20 2020 205f 5343  ZE_MAX,..    _SC
000f7c0: 5f4c 4f47 494e 5f4e 414d 455f 4d41 582c  _LOGIN_NAME_MAX,
000f7d0: 0a0a 2020 2020 5f53 435f 5454 595f 4e41  ..    _SC_TTY_NA
000f7e0: 4d45 5f4d 4158 2c0a 0a20 2020 205f 5343  ME_MAX,..    _SC
000f7f0: 5f54 4852 4541 445f 4445 5354 5255 4354  _THREAD_DESTRUCT
000f800: 4f52 5f49 5445 5241 5449 4f4e 532c 0a0a  OR_ITERATIONS,..
000f810: 2020 2020 5f53 435f 5448 5245 4144 5f4b      _SC_THREAD_K
000f820: 4559 535f 4d41 582c 0a0a 2020 2020 5f53  EYS_MAX,..    _S
000f830: 435f 5448 5245 4144 5f53 5441 434b 5f4d  C_THREAD_STACK_M
000f840: 494e 2c0a 0a20 2020 205f 5343 5f54 4852  IN,..    _SC_THR
000f850: 4541 445f 5448 5245 4144 535f 4d41 582c  EAD_THREADS_MAX,
000f860: 0a0a 2020 2020 5f53 435f 5448 5245 4144  ..    _SC_THREAD
000f870: 5f41 5454 525f 5354 4143 4b41 4444 522c  _ATTR_STACKADDR,
000f880: 0a0a 2020 2020 5f53 435f 5448 5245 4144  ..    _SC_THREAD
000f890: 5f41 5454 525f 5354 4143 4b53 495a 452c  _ATTR_STACKSIZE,
000f8a0: 0a0a 2020 2020 5f53 435f 5448 5245 4144  ..    _SC_THREAD
000f8b0: 5f50 5249 4f52 4954 595f 5343 4845 4455  _PRIORITY_SCHEDU
000f8c0: 4c49 4e47 2c0a 0a20 2020 205f 5343 5f54  LING,..    _SC_T
000f8d0: 4852 4541 445f 5052 494f 5f49 4e48 4552  HREAD_PRIO_INHER
000f8e0: 4954 2c0a 0a20 2020 205f 5343 5f54 4852  IT,..    _SC_THR
000f8f0: 4541 445f 5052 494f 5f50 524f 5445 4354  EAD_PRIO_PROTECT
000f900: 2c0a 0a20 2020 205f 5343 5f54 4852 4541  ,..    _SC_THREA
000f910: 445f 5052 4f43 4553 535f 5348 4152 4544  D_PROCESS_SHARED
000f920: 2c0a 0a0a 2020 2020 5f53 435f 4e50 524f  ,...    _SC_NPRO
000f930: 4345 5353 4f52 535f 434f 4e46 2c0a 0a20  CESSORS_CONF,.. 
000f940: 2020 205f 5343 5f4e 5052 4f43 4553 534f     _SC_NPROCESSO
000f950: 5253 5f4f 4e4c 4e2c 0a0a 2020 2020 5f53  RS_ONLN,..    _S
000f960: 435f 5048 5953 5f50 4147 4553 2c0a 0a20  C_PHYS_PAGES,.. 
000f970: 2020 205f 5343 5f41 5650 4859 535f 5041     _SC_AVPHYS_PA
000f980: 4745 532c 0a0a 2020 2020 5f53 435f 4154  GES,..    _SC_AT
000f990: 4558 4954 5f4d 4158 2c0a 0a20 2020 205f  EXIT_MAX,..    _
000f9a0: 5343 5f50 4153 535f 4d41 582c 0a0a 0a20  SC_PASS_MAX,... 
000f9b0: 2020 205f 5343 5f58 4f50 454e 5f56 4552     _SC_XOPEN_VER
000f9c0: 5349 4f4e 2c0a 0a20 2020 205f 5343 5f58  SION,..    _SC_X
000f9d0: 4f50 454e 5f58 4355 5f56 4552 5349 4f4e  OPEN_XCU_VERSION
000f9e0: 2c0a 0a20 2020 205f 5343 5f58 4f50 454e  ,..    _SC_XOPEN
000f9f0: 5f55 4e49 582c 0a0a 2020 2020 5f53 435f  _UNIX,..    _SC_
000fa00: 584f 5045 4e5f 4352 5950 542c 0a0a 2020  XOPEN_CRYPT,..  
000fa10: 2020 5f53 435f 584f 5045 4e5f 454e 485f    _SC_XOPEN_ENH_
000fa20: 4931 384e 2c0a 0a20 2020 205f 5343 5f58  I18N,..    _SC_X
000fa30: 4f50 454e 5f53 484d 2c0a 0a0a 2020 2020  OPEN_SHM,...    
000fa40: 5f53 435f 325f 4348 4152 5f54 4552 4d2c  _SC_2_CHAR_TERM,
000fa50: 0a0a 2020 2020 5f53 435f 325f 435f 5645  ..    _SC_2_C_VE
000fa60: 5253 494f 4e2c 0a0a 2020 2020 5f53 435f  RSION,..    _SC_
000fa70: 325f 5550 452c 0a0a 0a20 2020 205f 5343  2_UPE,...    _SC
000fa80: 5f58 4f50 454e 5f58 5047 322c 0a0a 2020  _XOPEN_XPG2,..  
000fa90: 2020 5f53 435f 584f 5045 4e5f 5850 4733    _SC_XOPEN_XPG3
000faa0: 2c0a 0a20 2020 205f 5343 5f58 4f50 454e  ,..    _SC_XOPEN
000fab0: 5f58 5047 342c 0a0a 0a20 2020 205f 5343  _XPG4,...    _SC
000fac0: 5f43 4841 525f 4249 542c 0a0a 2020 2020  _CHAR_BIT,..    
000fad0: 5f53 435f 4348 4152 5f4d 4158 2c0a 0a20  _SC_CHAR_MAX,.. 
000fae0: 2020 205f 5343 5f43 4841 525f 4d49 4e2c     _SC_CHAR_MIN,
000faf0: 0a0a 2020 2020 5f53 435f 494e 545f 4d41  ..    _SC_INT_MA
000fb00: 582c 0a0a 2020 2020 5f53 435f 494e 545f  X,..    _SC_INT_
000fb10: 4d49 4e2c 0a0a 2020 2020 5f53 435f 4c4f  MIN,..    _SC_LO
000fb20: 4e47 5f42 4954 2c0a 0a20 2020 205f 5343  NG_BIT,..    _SC
000fb30: 5f57 4f52 445f 4249 542c 0a0a 2020 2020  _WORD_BIT,..    
000fb40: 5f53 435f 4d42 5f4c 454e 5f4d 4158 2c0a  _SC_MB_LEN_MAX,.
000fb50: 0a20 2020 205f 5343 5f4e 5a45 524f 2c0a  .    _SC_NZERO,.
000fb60: 0a20 2020 205f 5343 5f53 5349 5a45 5f4d  .    _SC_SSIZE_M
000fb70: 4158 2c0a 0a20 2020 205f 5343 5f53 4348  AX,..    _SC_SCH
000fb80: 4152 5f4d 4158 2c0a 0a20 2020 205f 5343  AR_MAX,..    _SC
000fb90: 5f53 4348 4152 5f4d 494e 2c0a 0a20 2020  _SCHAR_MIN,..   
000fba0: 205f 5343 5f53 4852 545f 4d41 582c 0a0a   _SC_SHRT_MAX,..
000fbb0: 2020 2020 5f53 435f 5348 5254 5f4d 494e      _SC_SHRT_MIN
000fbc0: 2c0a 0a20 2020 205f 5343 5f55 4348 4152  ,..    _SC_UCHAR
000fbd0: 5f4d 4158 2c0a 0a20 2020 205f 5343 5f55  _MAX,..    _SC_U
000fbe0: 494e 545f 4d41 582c 0a0a 2020 2020 5f53  INT_MAX,..    _S
000fbf0: 435f 554c 4f4e 475f 4d41 582c 0a0a 2020  C_ULONG_MAX,..  
000fc00: 2020 5f53 435f 5553 4852 545f 4d41 582c    _SC_USHRT_MAX,
000fc10: 0a0a 0a20 2020 205f 5343 5f4e 4c5f 4152  ...    _SC_NL_AR
000fc20: 474d 4158 2c0a 0a20 2020 205f 5343 5f4e  GMAX,..    _SC_N
000fc30: 4c5f 4c41 4e47 4d41 582c 0a0a 2020 2020  L_LANGMAX,..    
000fc40: 5f53 435f 4e4c 5f4d 5347 4d41 582c 0a0a  _SC_NL_MSGMAX,..
000fc50: 2020 2020 5f53 435f 4e4c 5f4e 4d41 582c      _SC_NL_NMAX,
000fc60: 0a0a 2020 2020 5f53 435f 4e4c 5f53 4554  ..    _SC_NL_SET
000fc70: 4d41 582c 0a0a 2020 2020 5f53 435f 4e4c  MAX,..    _SC_NL
000fc80: 5f54 4558 544d 4158 2c0a 0a0a 2020 2020  _TEXTMAX,...    
000fc90: 5f53 435f 5842 5335 5f49 4c50 3332 5f4f  _SC_XBS5_ILP32_O
000fca0: 4646 3332 2c0a 0a20 2020 205f 5343 5f58  FF32,..    _SC_X
000fcb0: 4253 355f 494c 5033 325f 4f46 4642 4947  BS5_ILP32_OFFBIG
000fcc0: 2c0a 0a20 2020 205f 5343 5f58 4253 355f  ,..    _SC_XBS5_
000fcd0: 4c50 3634 5f4f 4646 3634 2c0a 0a20 2020  LP64_OFF64,..   
000fce0: 205f 5343 5f58 4253 355f 4c50 4249 475f   _SC_XBS5_LPBIG_
000fcf0: 4f46 4642 4947 2c0a 0a0a 2020 2020 5f53  OFFBIG,...    _S
000fd00: 435f 584f 5045 4e5f 4c45 4741 4359 2c0a  C_XOPEN_LEGACY,.
000fd10: 0a20 2020 205f 5343 5f58 4f50 454e 5f52  .    _SC_XOPEN_R
000fd20: 4541 4c54 494d 452c 0a0a 2020 2020 5f53  EALTIME,..    _S
000fd30: 435f 584f 5045 4e5f 5245 414c 5449 4d45  C_XOPEN_REALTIME
000fd40: 5f54 4852 4541 4453 2c0a 0a0a 2020 2020  _THREADS,...    
000fd50: 5f53 435f 4144 5649 534f 5259 5f49 4e46  _SC_ADVISORY_INF
000fd60: 4f2c 0a0a 2020 2020 5f53 435f 4241 5252  O,..    _SC_BARR
000fd70: 4945 5253 2c0a 0a20 2020 205f 5343 5f42  IERS,..    _SC_B
000fd80: 4153 452c 0a0a 2020 2020 5f53 435f 435f  ASE,..    _SC_C_
000fd90: 4c41 4e47 5f53 5550 504f 5254 2c0a 0a20  LANG_SUPPORT,.. 
000fda0: 2020 205f 5343 5f43 5f4c 414e 475f 5355     _SC_C_LANG_SU
000fdb0: 5050 4f52 545f 522c 0a0a 2020 2020 5f53  PPORT_R,..    _S
000fdc0: 435f 434c 4f43 4b5f 5345 4c45 4354 494f  C_CLOCK_SELECTIO
000fdd0: 4e2c 0a0a 2020 2020 5f53 435f 4350 5554  N,..    _SC_CPUT
000fde0: 494d 452c 0a0a 2020 2020 5f53 435f 5448  IME,..    _SC_TH
000fdf0: 5245 4144 5f43 5055 5449 4d45 2c0a 0a20  READ_CPUTIME,.. 
000fe00: 2020 205f 5343 5f44 4556 4943 455f 494f     _SC_DEVICE_IO
000fe10: 2c0a 0a20 2020 205f 5343 5f44 4556 4943  ,..    _SC_DEVIC
000fe20: 455f 5350 4543 4946 4943 2c0a 0a20 2020  E_SPECIFIC,..   
000fe30: 205f 5343 5f44 4556 4943 455f 5350 4543   _SC_DEVICE_SPEC
000fe40: 4946 4943 5f52 2c0a 0a20 2020 205f 5343  IFIC_R,..    _SC
000fe50: 5f46 445f 4d47 4d54 2c0a 0a20 2020 205f  _FD_MGMT,..    _
000fe60: 5343 5f46 4946 4f2c 0a0a 2020 2020 5f53  SC_FIFO,..    _S
000fe70: 435f 5049 5045 2c0a 0a20 2020 205f 5343  C_PIPE,..    _SC
000fe80: 5f46 494c 455f 4154 5452 4942 5554 4553  _FILE_ATTRIBUTES
000fe90: 2c0a 0a20 2020 205f 5343 5f46 494c 455f  ,..    _SC_FILE_
000fea0: 4c4f 434b 494e 472c 0a0a 2020 2020 5f53  LOCKING,..    _S
000feb0: 435f 4649 4c45 5f53 5953 5445 4d2c 0a0a  C_FILE_SYSTEM,..
000fec0: 2020 2020 5f53 435f 4d4f 4e4f 544f 4e49      _SC_MONOTONI
000fed0: 435f 434c 4f43 4b2c 0a0a 2020 2020 5f53  C_CLOCK,..    _S
000fee0: 435f 4d55 4c54 495f 5052 4f43 4553 532c  C_MULTI_PROCESS,
000fef0: 0a0a 2020 2020 5f53 435f 5349 4e47 4c45  ..    _SC_SINGLE
000ff00: 5f50 524f 4345 5353 2c0a 0a20 2020 205f  _PROCESS,..    _
000ff10: 5343 5f4e 4554 574f 524b 494e 472c 0a0a  SC_NETWORKING,..
000ff20: 2020 2020 5f53 435f 5245 4144 4552 5f57      _SC_READER_W
000ff30: 5249 5445 525f 4c4f 434b 532c 0a0a 2020  RITER_LOCKS,..  
000ff40: 2020 5f53 435f 5350 494e 5f4c 4f43 4b53    _SC_SPIN_LOCKS
000ff50: 2c0a 0a20 2020 205f 5343 5f52 4547 4558  ,..    _SC_REGEX
000ff60: 502c 0a0a 2020 2020 5f53 435f 5245 4745  P,..    _SC_REGE
000ff70: 585f 5645 5253 494f 4e2c 0a0a 2020 2020  X_VERSION,..    
000ff80: 5f53 435f 5348 454c 4c2c 0a0a 2020 2020  _SC_SHELL,..    
000ff90: 5f53 435f 5349 474e 414c 532c 0a0a 2020  _SC_SIGNALS,..  
000ffa0: 2020 5f53 435f 5350 4157 4e2c 0a0a 2020    _SC_SPAWN,..  
000ffb0: 2020 5f53 435f 5350 4f52 4144 4943 5f53    _SC_SPORADIC_S
000ffc0: 4552 5645 522c 0a0a 2020 2020 5f53 435f  ERVER,..    _SC_
000ffd0: 5448 5245 4144 5f53 504f 5241 4449 435f  THREAD_SPORADIC_
000ffe0: 5345 5256 4552 2c0a 0a20 2020 205f 5343  SERVER,..    _SC
000fff0: 5f53 5953 5445 4d5f 4441 5441 4241 5345  _SYSTEM_DATABASE
0010000: 2c0a 0a20 2020 205f 5343 5f53 5953 5445  ,..    _SC_SYSTE
0010010: 4d5f 4441 5441 4241 5345 5f52 2c0a 0a20  M_DATABASE_R,.. 
0010020: 2020 205f 5343 5f54 494d 454f 5554 532c     _SC_TIMEOUTS,
0010030: 0a0a 2020 2020 5f53 435f 5459 5045 445f  ..    _SC_TYPED_
0010040: 4d45 4d4f 5259 5f4f 424a 4543 5453 2c0a  MEMORY_OBJECTS,.
0010050: 0a20 2020 205f 5343 5f55 5345 525f 4752  .    _SC_USER_GR
0010060: 4f55 5053 2c0a 0a20 2020 205f 5343 5f55  OUPS,..    _SC_U
0010070: 5345 525f 4752 4f55 5053 5f52 2c0a 0a20  SER_GROUPS_R,.. 
0010080: 2020 205f 5343 5f32 5f50 4253 2c0a 0a20     _SC_2_PBS,.. 
0010090: 2020 205f 5343 5f32 5f50 4253 5f41 4343     _SC_2_PBS_ACC
00100a0: 4f55 4e54 494e 472c 0a0a 2020 2020 5f53  OUNTING,..    _S
00100b0: 435f 325f 5042 535f 4c4f 4341 5445 2c0a  C_2_PBS_LOCATE,.
00100c0: 0a20 2020 205f 5343 5f32 5f50 4253 5f4d  .    _SC_2_PBS_M
00100d0: 4553 5341 4745 2c0a 0a20 2020 205f 5343  ESSAGE,..    _SC
00100e0: 5f32 5f50 4253 5f54 5241 434b 2c0a 0a20  _2_PBS_TRACK,.. 
00100f0: 2020 205f 5343 5f53 594d 4c4f 4f50 5f4d     _SC_SYMLOOP_M
0010100: 4158 2c0a 0a20 2020 205f 5343 5f53 5452  AX,..    _SC_STR
0010110: 4541 4d53 2c0a 0a20 2020 205f 5343 5f32  EAMS,..    _SC_2
0010120: 5f50 4253 5f43 4845 434b 504f 494e 542c  _PBS_CHECKPOINT,
0010130: 0a0a 0a20 2020 205f 5343 5f56 365f 494c  ...    _SC_V6_IL
0010140: 5033 325f 4f46 4633 322c 0a0a 2020 2020  P32_OFF32,..    
0010150: 5f53 435f 5636 5f49 4c50 3332 5f4f 4646  _SC_V6_ILP32_OFF
0010160: 4249 472c 0a0a 2020 2020 5f53 435f 5636  BIG,..    _SC_V6
0010170: 5f4c 5036 345f 4f46 4636 342c 0a0a 2020  _LP64_OFF64,..  
0010180: 2020 5f53 435f 5636 5f4c 5042 4947 5f4f    _SC_V6_LPBIG_O
0010190: 4646 4249 472c 0a0a 0a20 2020 205f 5343  FFBIG,...    _SC
00101a0: 5f48 4f53 545f 4e41 4d45 5f4d 4158 2c0a  _HOST_NAME_MAX,.
00101b0: 0a20 2020 205f 5343 5f54 5241 4345 2c0a  .    _SC_TRACE,.
00101c0: 0a20 2020 205f 5343 5f54 5241 4345 5f45  .    _SC_TRACE_E
00101d0: 5645 4e54 5f46 494c 5445 522c 0a0a 2020  VENT_FILTER,..  
00101e0: 2020 5f53 435f 5452 4143 455f 494e 4845    _SC_TRACE_INHE
00101f0: 5249 542c 0a0a 2020 2020 5f53 435f 5452  RIT,..    _SC_TR
0010200: 4143 455f 4c4f 472c 0a0a 0a20 2020 205f  ACE_LOG,...    _
0010210: 5343 5f4c 4556 454c 315f 4943 4143 4845  SC_LEVEL1_ICACHE
0010220: 5f53 495a 452c 0a0a 2020 2020 5f53 435f  _SIZE,..    _SC_
0010230: 4c45 5645 4c31 5f49 4341 4348 455f 4153  LEVEL1_ICACHE_AS
0010240: 534f 432c 0a0a 2020 2020 5f53 435f 4c45  SOC,..    _SC_LE
0010250: 5645 4c31 5f49 4341 4348 455f 4c49 4e45  VEL1_ICACHE_LINE
0010260: 5349 5a45 2c0a 0a20 2020 205f 5343 5f4c  SIZE,..    _SC_L
0010270: 4556 454c 315f 4443 4143 4845 5f53 495a  EVEL1_DCACHE_SIZ
0010280: 452c 0a0a 2020 2020 5f53 435f 4c45 5645  E,..    _SC_LEVE
0010290: 4c31 5f44 4341 4348 455f 4153 534f 432c  L1_DCACHE_ASSOC,
00102a0: 0a0a 2020 2020 5f53 435f 4c45 5645 4c31  ..    _SC_LEVEL1
00102b0: 5f44 4341 4348 455f 4c49 4e45 5349 5a45  _DCACHE_LINESIZE
00102c0: 2c0a 0a20 2020 205f 5343 5f4c 4556 454c  ,..    _SC_LEVEL
00102d0: 325f 4341 4348 455f 5349 5a45 2c0a 0a20  2_CACHE_SIZE,.. 
00102e0: 2020 205f 5343 5f4c 4556 454c 325f 4341     _SC_LEVEL2_CA
00102f0: 4348 455f 4153 534f 432c 0a0a 2020 2020  CHE_ASSOC,..    
0010300: 5f53 435f 4c45 5645 4c32 5f43 4143 4845  _SC_LEVEL2_CACHE
0010310: 5f4c 494e 4553 495a 452c 0a0a 2020 2020  _LINESIZE,..    
0010320: 5f53 435f 4c45 5645 4c33 5f43 4143 4845  _SC_LEVEL3_CACHE
0010330: 5f53 495a 452c 0a0a 2020 2020 5f53 435f  _SIZE,..    _SC_
0010340: 4c45 5645 4c33 5f43 4143 4845 5f41 5353  LEVEL3_CACHE_ASS
0010350: 4f43 2c0a 0a20 2020 205f 5343 5f4c 4556  OC,..    _SC_LEV
0010360: 454c 335f 4341 4348 455f 4c49 4e45 5349  EL3_CACHE_LINESI
0010370: 5a45 2c0a 0a20 2020 205f 5343 5f4c 4556  ZE,..    _SC_LEV
0010380: 454c 345f 4341 4348 455f 5349 5a45 2c0a  EL4_CACHE_SIZE,.
0010390: 0a20 2020 205f 5343 5f4c 4556 454c 345f  .    _SC_LEVEL4_
00103a0: 4341 4348 455f 4153 534f 432c 0a0a 2020  CACHE_ASSOC,..  
00103b0: 2020 5f53 435f 4c45 5645 4c34 5f43 4143    _SC_LEVEL4_CAC
00103c0: 4845 5f4c 494e 4553 495a 452c 0a0a 0a0a  HE_LINESIZE,....
00103d0: 2020 2020 5f53 435f 4950 5636 203d 205f      _SC_IPV6 = _
00103e0: 5343 5f4c 4556 454c 315f 4943 4143 4845  SC_LEVEL1_ICACHE
00103f0: 5f53 495a 4520 2b20 3530 2c0a 0a20 2020  _SIZE + 50,..   
0010400: 205f 5343 5f52 4157 5f53 4f43 4b45 5453   _SC_RAW_SOCKETS
0010410: 2c0a 0a0a 2020 2020 5f53 435f 5637 5f49  ,...    _SC_V7_I
0010420: 4c50 3332 5f4f 4646 3332 2c0a 0a20 2020  LP32_OFF32,..   
0010430: 205f 5343 5f56 375f 494c 5033 325f 4f46   _SC_V7_ILP32_OF
0010440: 4642 4947 2c0a 0a20 2020 205f 5343 5f56  FBIG,..    _SC_V
0010450: 375f 4c50 3634 5f4f 4646 3634 2c0a 0a20  7_LP64_OFF64,.. 
0010460: 2020 205f 5343 5f56 375f 4c50 4249 475f     _SC_V7_LPBIG_
0010470: 4f46 4642 4947 2c0a 0a0a 2020 2020 5f53  OFFBIG,...    _S
0010480: 435f 5353 5f52 4550 4c5f 4d41 582c 0a0a  C_SS_REPL_MAX,..
0010490: 0a20 2020 205f 5343 5f54 5241 4345 5f45  .    _SC_TRACE_E
00104a0: 5645 4e54 5f4e 414d 455f 4d41 582c 0a0a  VENT_NAME_MAX,..
00104b0: 2020 2020 5f53 435f 5452 4143 455f 4e41      _SC_TRACE_NA
00104c0: 4d45 5f4d 4158 2c0a 0a20 2020 205f 5343  ME_MAX,..    _SC
00104d0: 5f54 5241 4345 5f53 5953 5f4d 4158 2c0a  _TRACE_SYS_MAX,.
00104e0: 0a20 2020 205f 5343 5f54 5241 4345 5f55  .    _SC_TRACE_U
00104f0: 5345 525f 4556 454e 545f 4d41 582c 0a0a  SER_EVENT_MAX,..
0010500: 0a20 2020 205f 5343 5f58 4f50 454e 5f53  .    _SC_XOPEN_S
0010510: 5452 4541 4d53 2c0a 0a0a 2020 2020 5f53  TREAMS,...    _S
0010520: 435f 5448 5245 4144 5f52 4f42 5553 545f  C_THREAD_ROBUST_
0010530: 5052 494f 5f49 4e48 4552 4954 2c0a 0a20  PRIO_INHERIT,.. 
0010540: 2020 205f 5343 5f54 4852 4541 445f 524f     _SC_THREAD_RO
0010550: 4255 5354 5f50 5249 4f5f 5052 4f54 4543  BUST_PRIO_PROTEC
0010560: 540a 0a20 207d 3b0a 0a0a 656e 756d 0a20  T..  };...enum. 
0010570: 207b 0a20 2020 205f 4353 5f50 4154 482c   {.    _CS_PATH,
0010580: 0a0a 0a20 2020 205f 4353 5f56 365f 5749  ...    _CS_V6_WI
0010590: 4454 485f 5245 5354 5249 4354 4544 5f45  DTH_RESTRICTED_E
00105a0: 4e56 532c 0a0a 0a0a 2020 2020 5f43 535f  NVS,....    _CS_
00105b0: 474e 555f 4c49 4243 5f56 4552 5349 4f4e  GNU_LIBC_VERSION
00105c0: 2c0a 0a20 2020 205f 4353 5f47 4e55 5f4c  ,..    _CS_GNU_L
00105d0: 4942 5054 4852 4541 445f 5645 5253 494f  IBPTHREAD_VERSIO
00105e0: 4e2c 0a0a 0a20 2020 205f 4353 5f56 355f  N,...    _CS_V5_
00105f0: 5749 4454 485f 5245 5354 5249 4354 4544  WIDTH_RESTRICTED
0010600: 5f45 4e56 532c 0a0a 0a0a 2020 2020 5f43  _ENVS,....    _C
0010610: 535f 5637 5f57 4944 5448 5f52 4553 5452  S_V7_WIDTH_RESTR
0010620: 4943 5445 445f 454e 5653 2c0a 0a0a 0a20  ICTED_ENVS,.... 
0010630: 2020 205f 4353 5f4c 4653 5f43 464c 4147     _CS_LFS_CFLAG
0010640: 5320 3d20 3130 3030 2c0a 0a20 2020 205f  S = 1000,..    _
0010650: 4353 5f4c 4653 5f4c 4446 4c41 4753 2c0a  CS_LFS_LDFLAGS,.
0010660: 0a20 2020 205f 4353 5f4c 4653 5f4c 4942  .    _CS_LFS_LIB
0010670: 532c 0a0a 2020 2020 5f43 535f 4c46 535f  S,..    _CS_LFS_
0010680: 4c49 4e54 464c 4147 532c 0a0a 2020 2020  LINTFLAGS,..    
0010690: 5f43 535f 4c46 5336 345f 4346 4c41 4753  _CS_LFS64_CFLAGS
00106a0: 2c0a 0a20 2020 205f 4353 5f4c 4653 3634  ,..    _CS_LFS64
00106b0: 5f4c 4446 4c41 4753 2c0a 0a20 2020 205f  _LDFLAGS,..    _
00106c0: 4353 5f4c 4653 3634 5f4c 4942 532c 0a0a  CS_LFS64_LIBS,..
00106d0: 2020 2020 5f43 535f 4c46 5336 345f 4c49      _CS_LFS64_LI
00106e0: 4e54 464c 4147 532c 0a0a 0a20 2020 205f  NTFLAGS,...    _
00106f0: 4353 5f58 4253 355f 494c 5033 325f 4f46  CS_XBS5_ILP32_OF
0010700: 4633 325f 4346 4c41 4753 203d 2031 3130  F32_CFLAGS = 110
0010710: 302c 0a0a 2020 2020 5f43 535f 5842 5335  0,..    _CS_XBS5
0010720: 5f49 4c50 3332 5f4f 4646 3332 5f4c 4446  _ILP32_OFF32_LDF
0010730: 4c41 4753 2c0a 0a20 2020 205f 4353 5f58  LAGS,..    _CS_X
0010740: 4253 355f 494c 5033 325f 4f46 4633 325f  BS5_ILP32_OFF32_
0010750: 4c49 4253 2c0a 0a20 2020 205f 4353 5f58  LIBS,..    _CS_X
0010760: 4253 355f 494c 5033 325f 4f46 4633 325f  BS5_ILP32_OFF32_
0010770: 4c49 4e54 464c 4147 532c 0a0a 2020 2020  LINTFLAGS,..    
0010780: 5f43 535f 5842 5335 5f49 4c50 3332 5f4f  _CS_XBS5_ILP32_O
0010790: 4646 4249 475f 4346 4c41 4753 2c0a 0a20  FFBIG_CFLAGS,.. 
00107a0: 2020 205f 4353 5f58 4253 355f 494c 5033     _CS_XBS5_ILP3
00107b0: 325f 4f46 4642 4947 5f4c 4446 4c41 4753  2_OFFBIG_LDFLAGS
00107c0: 2c0a 0a20 2020 205f 4353 5f58 4253 355f  ,..    _CS_XBS5_
00107d0: 494c 5033 325f 4f46 4642 4947 5f4c 4942  ILP32_OFFBIG_LIB
00107e0: 532c 0a0a 2020 2020 5f43 535f 5842 5335  S,..    _CS_XBS5
00107f0: 5f49 4c50 3332 5f4f 4646 4249 475f 4c49  _ILP32_OFFBIG_LI
0010800: 4e54 464c 4147 532c 0a0a 2020 2020 5f43  NTFLAGS,..    _C
0010810: 535f 5842 5335 5f4c 5036 345f 4f46 4636  S_XBS5_LP64_OFF6
0010820: 345f 4346 4c41 4753 2c0a 0a20 2020 205f  4_CFLAGS,..    _
0010830: 4353 5f58 4253 355f 4c50 3634 5f4f 4646  CS_XBS5_LP64_OFF
0010840: 3634 5f4c 4446 4c41 4753 2c0a 0a20 2020  64_LDFLAGS,..   
0010850: 205f 4353 5f58 4253 355f 4c50 3634 5f4f   _CS_XBS5_LP64_O
0010860: 4646 3634 5f4c 4942 532c 0a0a 2020 2020  FF64_LIBS,..    
0010870: 5f43 535f 5842 5335 5f4c 5036 345f 4f46  _CS_XBS5_LP64_OF
0010880: 4636 345f 4c49 4e54 464c 4147 532c 0a0a  F64_LINTFLAGS,..
0010890: 2020 2020 5f43 535f 5842 5335 5f4c 5042      _CS_XBS5_LPB
00108a0: 4947 5f4f 4646 4249 475f 4346 4c41 4753  IG_OFFBIG_CFLAGS
00108b0: 2c0a 0a20 2020 205f 4353 5f58 4253 355f  ,..    _CS_XBS5_
00108c0: 4c50 4249 475f 4f46 4642 4947 5f4c 4446  LPBIG_OFFBIG_LDF
00108d0: 4c41 4753 2c0a 0a20 2020 205f 4353 5f58  LAGS,..    _CS_X
00108e0: 4253 355f 4c50 4249 475f 4f46 4642 4947  BS5_LPBIG_OFFBIG
00108f0: 5f4c 4942 532c 0a0a 2020 2020 5f43 535f  _LIBS,..    _CS_
0010900: 5842 5335 5f4c 5042 4947 5f4f 4646 4249  XBS5_LPBIG_OFFBI
0010910: 475f 4c49 4e54 464c 4147 532c 0a0a 0a20  G_LINTFLAGS,... 
0010920: 2020 205f 4353 5f50 4f53 4958 5f56 365f     _CS_POSIX_V6_
0010930: 494c 5033 325f 4f46 4633 325f 4346 4c41  ILP32_OFF32_CFLA
0010940: 4753 2c0a 0a20 2020 205f 4353 5f50 4f53  GS,..    _CS_POS
0010950: 4958 5f56 365f 494c 5033 325f 4f46 4633  IX_V6_ILP32_OFF3
0010960: 325f 4c44 464c 4147 532c 0a0a 2020 2020  2_LDFLAGS,..    
0010970: 5f43 535f 504f 5349 585f 5636 5f49 4c50  _CS_POSIX_V6_ILP
0010980: 3332 5f4f 4646 3332 5f4c 4942 532c 0a0a  32_OFF32_LIBS,..
0010990: 2020 2020 5f43 535f 504f 5349 585f 5636      _CS_POSIX_V6
00109a0: 5f49 4c50 3332 5f4f 4646 3332 5f4c 494e  _ILP32_OFF32_LIN
00109b0: 5446 4c41 4753 2c0a 0a20 2020 205f 4353  TFLAGS,..    _CS
00109c0: 5f50 4f53 4958 5f56 365f 494c 5033 325f  _POSIX_V6_ILP32_
00109d0: 4f46 4642 4947 5f43 464c 4147 532c 0a0a  OFFBIG_CFLAGS,..
00109e0: 2020 2020 5f43 535f 504f 5349 585f 5636      _CS_POSIX_V6
00109f0: 5f49 4c50 3332 5f4f 4646 4249 475f 4c44  _ILP32_OFFBIG_LD
0010a00: 464c 4147 532c 0a0a 2020 2020 5f43 535f  FLAGS,..    _CS_
0010a10: 504f 5349 585f 5636 5f49 4c50 3332 5f4f  POSIX_V6_ILP32_O
0010a20: 4646 4249 475f 4c49 4253 2c0a 0a20 2020  FFBIG_LIBS,..   
0010a30: 205f 4353 5f50 4f53 4958 5f56 365f 494c   _CS_POSIX_V6_IL
0010a40: 5033 325f 4f46 4642 4947 5f4c 494e 5446  P32_OFFBIG_LINTF
0010a50: 4c41 4753 2c0a 0a20 2020 205f 4353 5f50  LAGS,..    _CS_P
0010a60: 4f53 4958 5f56 365f 4c50 3634 5f4f 4646  OSIX_V6_LP64_OFF
0010a70: 3634 5f43 464c 4147 532c 0a0a 2020 2020  64_CFLAGS,..    
0010a80: 5f43 535f 504f 5349 585f 5636 5f4c 5036  _CS_POSIX_V6_LP6
0010a90: 345f 4f46 4636 345f 4c44 464c 4147 532c  4_OFF64_LDFLAGS,
0010aa0: 0a0a 2020 2020 5f43 535f 504f 5349 585f  ..    _CS_POSIX_
0010ab0: 5636 5f4c 5036 345f 4f46 4636 345f 4c49  V6_LP64_OFF64_LI
0010ac0: 4253 2c0a 0a20 2020 205f 4353 5f50 4f53  BS,..    _CS_POS
0010ad0: 4958 5f56 365f 4c50 3634 5f4f 4646 3634  IX_V6_LP64_OFF64
0010ae0: 5f4c 494e 5446 4c41 4753 2c0a 0a20 2020  _LINTFLAGS,..   
0010af0: 205f 4353 5f50 4f53 4958 5f56 365f 4c50   _CS_POSIX_V6_LP
0010b00: 4249 475f 4f46 4642 4947 5f43 464c 4147  BIG_OFFBIG_CFLAG
0010b10: 532c 0a0a 2020 2020 5f43 535f 504f 5349  S,..    _CS_POSI
0010b20: 585f 5636 5f4c 5042 4947 5f4f 4646 4249  X_V6_LPBIG_OFFBI
0010b30: 475f 4c44 464c 4147 532c 0a0a 2020 2020  G_LDFLAGS,..    
0010b40: 5f43 535f 504f 5349 585f 5636 5f4c 5042  _CS_POSIX_V6_LPB
0010b50: 4947 5f4f 4646 4249 475f 4c49 4253 2c0a  IG_OFFBIG_LIBS,.
0010b60: 0a20 2020 205f 4353 5f50 4f53 4958 5f56  .    _CS_POSIX_V
0010b70: 365f 4c50 4249 475f 4f46 4642 4947 5f4c  6_LPBIG_OFFBIG_L
0010b80: 494e 5446 4c41 4753 2c0a 0a0a 2020 2020  INTFLAGS,...    
0010b90: 5f43 535f 504f 5349 585f 5637 5f49 4c50  _CS_POSIX_V7_ILP
0010ba0: 3332 5f4f 4646 3332 5f43 464c 4147 532c  32_OFF32_CFLAGS,
0010bb0: 0a0a 2020 2020 5f43 535f 504f 5349 585f  ..    _CS_POSIX_
0010bc0: 5637 5f49 4c50 3332 5f4f 4646 3332 5f4c  V7_ILP32_OFF32_L
0010bd0: 4446 4c41 4753 2c0a 0a20 2020 205f 4353  DFLAGS,..    _CS
0010be0: 5f50 4f53 4958 5f56 375f 494c 5033 325f  _POSIX_V7_ILP32_
0010bf0: 4f46 4633 325f 4c49 4253 2c0a 0a20 2020  OFF32_LIBS,..   
0010c00: 205f 4353 5f50 4f53 4958 5f56 375f 494c   _CS_POSIX_V7_IL
0010c10: 5033 325f 4f46 4633 325f 4c49 4e54 464c  P32_OFF32_LINTFL
0010c20: 4147 532c 0a0a 2020 2020 5f43 535f 504f  AGS,..    _CS_PO
0010c30: 5349 585f 5637 5f49 4c50 3332 5f4f 4646  SIX_V7_ILP32_OFF
0010c40: 4249 475f 4346 4c41 4753 2c0a 0a20 2020  BIG_CFLAGS,..   
0010c50: 205f 4353 5f50 4f53 4958 5f56 375f 494c   _CS_POSIX_V7_IL
0010c60: 5033 325f 4f46 4642 4947 5f4c 4446 4c41  P32_OFFBIG_LDFLA
0010c70: 4753 2c0a 0a20 2020 205f 4353 5f50 4f53  GS,..    _CS_POS
0010c80: 4958 5f56 375f 494c 5033 325f 4f46 4642  IX_V7_ILP32_OFFB
0010c90: 4947 5f4c 4942 532c 0a0a 2020 2020 5f43  IG_LIBS,..    _C
0010ca0: 535f 504f 5349 585f 5637 5f49 4c50 3332  S_POSIX_V7_ILP32
0010cb0: 5f4f 4646 4249 475f 4c49 4e54 464c 4147  _OFFBIG_LINTFLAG
0010cc0: 532c 0a0a 2020 2020 5f43 535f 504f 5349  S,..    _CS_POSI
0010cd0: 585f 5637 5f4c 5036 345f 4f46 4636 345f  X_V7_LP64_OFF64_
0010ce0: 4346 4c41 4753 2c0a 0a20 2020 205f 4353  CFLAGS,..    _CS
0010cf0: 5f50 4f53 4958 5f56 375f 4c50 3634 5f4f  _POSIX_V7_LP64_O
0010d00: 4646 3634 5f4c 4446 4c41 4753 2c0a 0a20  FF64_LDFLAGS,.. 
0010d10: 2020 205f 4353 5f50 4f53 4958 5f56 375f     _CS_POSIX_V7_
0010d20: 4c50 3634 5f4f 4646 3634 5f4c 4942 532c  LP64_OFF64_LIBS,
0010d30: 0a0a 2020 2020 5f43 535f 504f 5349 585f  ..    _CS_POSIX_
0010d40: 5637 5f4c 5036 345f 4f46 4636 345f 4c49  V7_LP64_OFF64_LI
0010d50: 4e54 464c 4147 532c 0a0a 2020 2020 5f43  NTFLAGS,..    _C
0010d60: 535f 504f 5349 585f 5637 5f4c 5042 4947  S_POSIX_V7_LPBIG
0010d70: 5f4f 4646 4249 475f 4346 4c41 4753 2c0a  _OFFBIG_CFLAGS,.
0010d80: 0a20 2020 205f 4353 5f50 4f53 4958 5f56  .    _CS_POSIX_V
0010d90: 375f 4c50 4249 475f 4f46 4642 4947 5f4c  7_LPBIG_OFFBIG_L
0010da0: 4446 4c41 4753 2c0a 0a20 2020 205f 4353  DFLAGS,..    _CS
0010db0: 5f50 4f53 4958 5f56 375f 4c50 4249 475f  _POSIX_V7_LPBIG_
0010dc0: 4f46 4642 4947 5f4c 4942 532c 0a0a 2020  OFFBIG_LIBS,..  
0010dd0: 2020 5f43 535f 504f 5349 585f 5637 5f4c    _CS_POSIX_V7_L
0010de0: 5042 4947 5f4f 4646 4249 475f 4c49 4e54  PBIG_OFFBIG_LINT
0010df0: 464c 4147 532c 0a0a 0a20 2020 205f 4353  FLAGS,...    _CS
0010e00: 5f56 365f 454e 562c 0a0a 2020 2020 5f43  _V6_ENV,..    _C
0010e10: 535f 5637 5f45 4e56 0a0a 2020 7d3b 0a23  S_V7_ENV..  };.#
0010e20: 2036 3130 2022 2f75 7372 2f69 6e63 6c75   610 "/usr/inclu
0010e30: 6465 2f75 6e69 7374 642e 6822 2032 2033  de/unistd.h" 2 3
0010e40: 2034 0a0a 0a65 7874 6572 6e20 6c6f 6e67   4...extern long
0010e50: 2069 6e74 2070 6174 6863 6f6e 6620 2863   int pathconf (c
0010e60: 6f6e 7374 2063 6861 7220 2a5f 5f70 6174  onst char *__pat
0010e70: 682c 2069 6e74 205f 5f6e 616d 6529 0a20  h, int __name). 
0010e80: 2020 2020 5f5f 6174 7472 6962 7574 655f      __attribute_
0010e90: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
0010ea0: 2c20 5f5f 6c65 6166 5f5f 2929 205f 5f61  , __leaf__)) __a
0010eb0: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
0010ec0: 6f6e 6e75 6c6c 5f5f 2028 3129 2929 3b0a  onnull__ (1)));.
0010ed0: 0a0a 6578 7465 726e 206c 6f6e 6720 696e  ..extern long in
0010ee0: 7420 6670 6174 6863 6f6e 6620 2869 6e74  t fpathconf (int
0010ef0: 205f 5f66 642c 2069 6e74 205f 5f6e 616d   __fd, int __nam
0010f00: 6529 205f 5f61 7474 7269 6275 7465 5f5f  e) __attribute__
0010f10: 2028 285f 5f6e 6f74 6872 6f77 5f5f 202c   ((__nothrow__ ,
0010f20: 205f 5f6c 6561 665f 5f29 293b 0a0a 0a65   __leaf__));...e
0010f30: 7874 6572 6e20 6c6f 6e67 2069 6e74 2073  xtern long int s
0010f40: 7973 636f 6e66 2028 696e 7420 5f5f 6e61  ysconf (int __na
0010f50: 6d65 2920 5f5f 6174 7472 6962 7574 655f  me) __attribute_
0010f60: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
0010f70: 2c20 5f5f 6c65 6166 5f5f 2929 3b0a 0a0a  , __leaf__));...
0010f80: 0a65 7874 6572 6e20 7369 7a65 5f74 2063  .extern size_t c
0010f90: 6f6e 6673 7472 2028 696e 7420 5f5f 6e61  onfstr (int __na
0010fa0: 6d65 2c20 6368 6172 202a 5f5f 6275 662c  me, char *__buf,
0010fb0: 2073 697a 655f 7420 5f5f 6c65 6e29 205f   size_t __len) _
0010fc0: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
0010fd0: 5f6e 6f74 6872 6f77 5f5f 202c 205f 5f6c  _nothrow__ , __l
0010fe0: 6561 665f 5f29 293b 0a0a 0a0a 0a65 7874  eaf__));.....ext
0010ff0: 6572 6e20 5f5f 7069 645f 7420 6765 7470  ern __pid_t getp
0011000: 6964 2028 766f 6964 2920 5f5f 6174 7472  id (void) __attr
0011010: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
0011020: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
0011030: 2929 3b0a 0a0a 6578 7465 726e 205f 5f70  ));...extern __p
0011040: 6964 5f74 2067 6574 7070 6964 2028 766f  id_t getppid (vo
0011050: 6964 2920 5f5f 6174 7472 6962 7574 655f  id) __attribute_
0011060: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
0011070: 2c20 5f5f 6c65 6166 5f5f 2929 3b0a 0a0a  , __leaf__));...
0011080: 0a0a 6578 7465 726e 205f 5f70 6964 5f74  ..extern __pid_t
0011090: 2067 6574 7067 7270 2028 766f 6964 2920   getpgrp (void) 
00110a0: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
00110b0: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
00110c0: 6c65 6166 5f5f 2929 3b0a 2320 3634 3620  leaf__));.# 646 
00110d0: 222f 7573 722f 696e 636c 7564 652f 756e  "/usr/include/un
00110e0: 6973 7464 2e68 2220 3320 340a 6578 7465  istd.h" 3 4.exte
00110f0: 726e 205f 5f70 6964 5f74 205f 5f67 6574  rn __pid_t __get
0011100: 7067 6964 2028 5f5f 7069 645f 7420 5f5f  pgid (__pid_t __
0011110: 7069 6429 205f 5f61 7474 7269 6275 7465  pid) __attribute
0011120: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
0011130: 202c 205f 5f6c 6561 665f 5f29 293b 0a0a   , __leaf__));..
0011140: 6578 7465 726e 205f 5f70 6964 5f74 2067  extern __pid_t g
0011150: 6574 7067 6964 2028 5f5f 7069 645f 7420  etpgid (__pid_t 
0011160: 5f5f 7069 6429 205f 5f61 7474 7269 6275  __pid) __attribu
0011170: 7465 5f5f 2028 285f 5f6e 6f74 6872 6f77  te__ ((__nothrow
0011180: 5f5f 202c 205f 5f6c 6561 665f 5f29 293b  __ , __leaf__));
0011190: 0a0a 0a0a 0a0a 0a65 7874 6572 6e20 696e  .......extern in
00111a0: 7420 7365 7470 6769 6420 285f 5f70 6964  t setpgid (__pid
00111b0: 5f74 205f 5f70 6964 2c20 5f5f 7069 645f  _t __pid, __pid_
00111c0: 7420 5f5f 7067 6964 2920 5f5f 6174 7472  t __pgid) __attr
00111d0: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
00111e0: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
00111f0: 2929 3b0a 2320 3637 3220 222f 7573 722f  ));.# 672 "/usr/
0011200: 696e 636c 7564 652f 756e 6973 7464 2e68  include/unistd.h
0011210: 2220 3320 340a 6578 7465 726e 2069 6e74  " 3 4.extern int
0011220: 2073 6574 7067 7270 2028 766f 6964 2920   setpgrp (void) 
0011230: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
0011240: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
0011250: 6c65 6166 5f5f 2929 3b0a 2320 3638 3920  leaf__));.# 689 
0011260: 222f 7573 722f 696e 636c 7564 652f 756e  "/usr/include/un
0011270: 6973 7464 2e68 2220 3320 340a 6578 7465  istd.h" 3 4.exte
0011280: 726e 205f 5f70 6964 5f74 2073 6574 7369  rn __pid_t setsi
0011290: 6420 2876 6f69 6429 205f 5f61 7474 7269  d (void) __attri
00112a0: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
00112b0: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
00112c0: 293b 0a0a 0a0a 6578 7465 726e 205f 5f70  );....extern __p
00112d0: 6964 5f74 2067 6574 7369 6420 285f 5f70  id_t getsid (__p
00112e0: 6964 5f74 205f 5f70 6964 2920 5f5f 6174  id_t __pid) __at
00112f0: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
0011300: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
0011310: 5f5f 2929 3b0a 0a0a 0a65 7874 6572 6e20  __));....extern 
0011320: 5f5f 7569 645f 7420 6765 7475 6964 2028  __uid_t getuid (
0011330: 766f 6964 2920 5f5f 6174 7472 6962 7574  void) __attribut
0011340: 655f 5f20 2828 5f5f 6e6f 7468 726f 775f  e__ ((__nothrow_
0011350: 5f20 2c20 5f5f 6c65 6166 5f5f 2929 3b0a  _ , __leaf__));.
0011360: 0a0a 6578 7465 726e 205f 5f75 6964 5f74  ..extern __uid_t
0011370: 2067 6574 6575 6964 2028 766f 6964 2920   geteuid (void) 
0011380: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
0011390: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
00113a0: 6c65 6166 5f5f 2929 3b0a 0a0a 6578 7465  leaf__));...exte
00113b0: 726e 205f 5f67 6964 5f74 2067 6574 6769  rn __gid_t getgi
00113c0: 6420 2876 6f69 6429 205f 5f61 7474 7269  d (void) __attri
00113d0: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
00113e0: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
00113f0: 293b 0a0a 0a65 7874 6572 6e20 5f5f 6769  );...extern __gi
0011400: 645f 7420 6765 7465 6769 6420 2876 6f69  d_t getegid (voi
0011410: 6429 205f 5f61 7474 7269 6275 7465 5f5f  d) __attribute__
0011420: 2028 285f 5f6e 6f74 6872 6f77 5f5f 202c   ((__nothrow__ ,
0011430: 205f 5f6c 6561 665f 5f29 293b 0a0a 0a0a   __leaf__));....
0011440: 0a65 7874 6572 6e20 696e 7420 6765 7467  .extern int getg
0011450: 726f 7570 7320 2869 6e74 205f 5f73 697a  roups (int __siz
0011460: 652c 205f 5f67 6964 5f74 205f 5f6c 6973  e, __gid_t __lis
0011470: 745b 5d29 205f 5f61 7474 7269 6275 7465  t[]) __attribute
0011480: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
0011490: 202c 205f 5f6c 6561 665f 5f29 2920 3b0a   , __leaf__)) ;.
00114a0: 2320 3732 3220 222f 7573 722f 696e 636c  # 722 "/usr/incl
00114b0: 7564 652f 756e 6973 7464 2e68 2220 3320  ude/unistd.h" 3 
00114c0: 340a 6578 7465 726e 2069 6e74 2073 6574  4.extern int set
00114d0: 7569 6420 285f 5f75 6964 5f74 205f 5f75  uid (__uid_t __u
00114e0: 6964 2920 5f5f 6174 7472 6962 7574 655f  id) __attribute_
00114f0: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
0011500: 2c20 5f5f 6c65 6166 5f5f 2929 203b 0a0a  , __leaf__)) ;..
0011510: 0a0a 0a65 7874 6572 6e20 696e 7420 7365  ...extern int se
0011520: 7472 6575 6964 2028 5f5f 7569 645f 7420  treuid (__uid_t 
0011530: 5f5f 7275 6964 2c20 5f5f 7569 645f 7420  __ruid, __uid_t 
0011540: 5f5f 6575 6964 2920 5f5f 6174 7472 6962  __euid) __attrib
0011550: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
0011560: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
0011570: 203b 0a0a 0a0a 0a65 7874 6572 6e20 696e   ;.....extern in
0011580: 7420 7365 7465 7569 6420 285f 5f75 6964  t seteuid (__uid
0011590: 5f74 205f 5f75 6964 2920 5f5f 6174 7472  _t __uid) __attr
00115a0: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
00115b0: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
00115c0: 2929 203b 0a0a 0a0a 0a0a 0a65 7874 6572  )) ;.......exter
00115d0: 6e20 696e 7420 7365 7467 6964 2028 5f5f  n int setgid (__
00115e0: 6769 645f 7420 5f5f 6769 6429 205f 5f61  gid_t __gid) __a
00115f0: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
0011600: 6f74 6872 6f77 5f5f 202c 205f 5f6c 6561  othrow__ , __lea
0011610: 665f 5f29 2920 3b0a 0a0a 0a0a 6578 7465  f__)) ;.....exte
0011620: 726e 2069 6e74 2073 6574 7265 6769 6420  rn int setregid 
0011630: 285f 5f67 6964 5f74 205f 5f72 6769 642c  (__gid_t __rgid,
0011640: 205f 5f67 6964 5f74 205f 5f65 6769 6429   __gid_t __egid)
0011650: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0011660: 285f 5f6e 6f74 6872 6f77 5f5f 202c 205f  (__nothrow__ , _
0011670: 5f6c 6561 665f 5f29 2920 3b0a 0a0a 0a0a  _leaf__)) ;.....
0011680: 6578 7465 726e 2069 6e74 2073 6574 6567  extern int seteg
0011690: 6964 2028 5f5f 6769 645f 7420 5f5f 6769  id (__gid_t __gi
00116a0: 6429 205f 5f61 7474 7269 6275 7465 5f5f  d) __attribute__
00116b0: 2028 285f 5f6e 6f74 6872 6f77 5f5f 202c   ((__nothrow__ ,
00116c0: 205f 5f6c 6561 665f 5f29 2920 3b0a 2320   __leaf__)) ;.# 
00116d0: 3737 3820 222f 7573 722f 696e 636c 7564  778 "/usr/includ
00116e0: 652f 756e 6973 7464 2e68 2220 3320 340a  e/unistd.h" 3 4.
00116f0: 6578 7465 726e 205f 5f70 6964 5f74 2066  extern __pid_t f
0011700: 6f72 6b20 2876 6f69 6429 205f 5f61 7474  ork (void) __att
0011710: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
0011720: 6872 6f77 5f5f 2929 3b0a 0a0a 0a0a 0a0a  hrow__));.......
0011730: 0a65 7874 6572 6e20 5f5f 7069 645f 7420  .extern __pid_t 
0011740: 7666 6f72 6b20 2876 6f69 6429 205f 5f61  vfork (void) __a
0011750: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
0011760: 6f74 6872 6f77 5f5f 202c 205f 5f6c 6561  othrow__ , __lea
0011770: 665f 5f29 293b 0a0a 0a0a 0a0a 6578 7465  f__));......exte
0011780: 726e 2063 6861 7220 2a74 7479 6e61 6d65  rn char *ttyname
0011790: 2028 696e 7420 5f5f 6664 2920 5f5f 6174   (int __fd) __at
00117a0: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
00117b0: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
00117c0: 5f5f 2929 3b0a 0a0a 0a65 7874 6572 6e20  __));....extern 
00117d0: 696e 7420 7474 796e 616d 655f 7220 2869  int ttyname_r (i
00117e0: 6e74 205f 5f66 642c 2063 6861 7220 2a5f  nt __fd, char *_
00117f0: 5f62 7566 2c20 7369 7a65 5f74 205f 5f62  _buf, size_t __b
0011800: 7566 6c65 6e29 0a20 2020 2020 5f5f 6174  uflen).     __at
0011810: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
0011820: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
0011830: 5f5f 2929 205f 5f61 7474 7269 6275 7465  __)) __attribute
0011840: 5f5f 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f  __ ((__nonnull__
0011850: 2028 3229 2929 203b 0a0a 0a0a 6578 7465   (2))) ;....exte
0011860: 726e 2069 6e74 2069 7361 7474 7920 2869  rn int isatty (i
0011870: 6e74 205f 5f66 6429 205f 5f61 7474 7269  nt __fd) __attri
0011880: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
0011890: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
00118a0: 293b 0a0a 0a0a 0a0a 6578 7465 726e 2069  );......extern i
00118b0: 6e74 2074 7479 736c 6f74 2028 766f 6964  nt ttyslot (void
00118c0: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
00118d0: 2828 5f5f 6e6f 7468 726f 775f 5f20 2c20  ((__nothrow__ , 
00118e0: 5f5f 6c65 6166 5f5f 2929 3b0a 0a0a 0a0a  __leaf__));.....
00118f0: 6578 7465 726e 2069 6e74 206c 696e 6b20  extern int link 
0011900: 2863 6f6e 7374 2063 6861 7220 2a5f 5f66  (const char *__f
0011910: 726f 6d2c 2063 6f6e 7374 2063 6861 7220  rom, const char 
0011920: 2a5f 5f74 6f29 0a20 2020 2020 5f5f 6174  *__to).     __at
0011930: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
0011940: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
0011950: 5f5f 2929 205f 5f61 7474 7269 6275 7465  __)) __attribute
0011960: 5f5f 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f  __ ((__nonnull__
0011970: 2028 312c 2032 2929 2920 3b0a 0a0a 0a0a   (1, 2))) ;.....
0011980: 6578 7465 726e 2069 6e74 206c 696e 6b61  extern int linka
0011990: 7420 2869 6e74 205f 5f66 726f 6d66 642c  t (int __fromfd,
00119a0: 2063 6f6e 7374 2063 6861 7220 2a5f 5f66   const char *__f
00119b0: 726f 6d2c 2069 6e74 205f 5f74 6f66 642c  rom, int __tofd,
00119c0: 0a20 2020 2020 636f 6e73 7420 6368 6172  .     const char
00119d0: 202a 5f5f 746f 2c20 696e 7420 5f5f 666c   *__to, int __fl
00119e0: 6167 7329 0a20 2020 2020 5f5f 6174 7472  ags).     __attr
00119f0: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
0011a00: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
0011a10: 2929 205f 5f61 7474 7269 6275 7465 5f5f  )) __attribute__
0011a20: 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f 2028   ((__nonnull__ (
0011a30: 322c 2034 2929 2920 3b0a 0a0a 0a0a 6578  2, 4))) ;.....ex
0011a40: 7465 726e 2069 6e74 2073 796d 6c69 6e6b  tern int symlink
0011a50: 2028 636f 6e73 7420 6368 6172 202a 5f5f   (const char *__
0011a60: 6672 6f6d 2c20 636f 6e73 7420 6368 6172  from, const char
0011a70: 202a 5f5f 746f 290a 2020 2020 205f 5f61   *__to).     __a
0011a80: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
0011a90: 6f74 6872 6f77 5f5f 202c 205f 5f6c 6561  othrow__ , __lea
0011aa0: 665f 5f29 2920 5f5f 6174 7472 6962 7574  f__)) __attribut
0011ab0: 655f 5f20 2828 5f5f 6e6f 6e6e 756c 6c5f  e__ ((__nonnull_
0011ac0: 5f20 2831 2c20 3229 2929 203b 0a0a 0a0a  _ (1, 2))) ;....
0011ad0: 0a65 7874 6572 6e20 7373 697a 655f 7420  .extern ssize_t 
0011ae0: 7265 6164 6c69 6e6b 2028 636f 6e73 7420  readlink (const 
0011af0: 6368 6172 202a 5f5f 7265 7374 7269 6374  char *__restrict
0011b00: 205f 5f70 6174 682c 0a20 2020 2063 6861   __path,.    cha
0011b10: 7220 2a5f 5f72 6573 7472 6963 7420 5f5f  r *__restrict __
0011b20: 6275 662c 2073 697a 655f 7420 5f5f 6c65  buf, size_t __le
0011b30: 6e29 0a20 2020 2020 5f5f 6174 7472 6962  n).     __attrib
0011b40: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
0011b50: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
0011b60: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0011b70: 285f 5f6e 6f6e 6e75 6c6c 5f5f 2028 312c  (__nonnull__ (1,
0011b80: 2032 2929 2920 3b0a 0a0a 0a0a 6578 7465   2))) ;.....exte
0011b90: 726e 2069 6e74 2073 796d 6c69 6e6b 6174  rn int symlinkat
0011ba0: 2028 636f 6e73 7420 6368 6172 202a 5f5f   (const char *__
0011bb0: 6672 6f6d 2c20 696e 7420 5f5f 746f 6664  from, int __tofd
0011bc0: 2c0a 2020 2020 2020 2020 636f 6e73 7420  ,.        const 
0011bd0: 6368 6172 202a 5f5f 746f 2920 5f5f 6174  char *__to) __at
0011be0: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
0011bf0: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
0011c00: 5f5f 2929 205f 5f61 7474 7269 6275 7465  __)) __attribute
0011c10: 5f5f 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f  __ ((__nonnull__
0011c20: 2028 312c 2033 2929 2920 3b0a 0a0a 6578   (1, 3))) ;...ex
0011c30: 7465 726e 2073 7369 7a65 5f74 2072 6561  tern ssize_t rea
0011c40: 646c 696e 6b61 7420 2869 6e74 205f 5f66  dlinkat (int __f
0011c50: 642c 2063 6f6e 7374 2063 6861 7220 2a5f  d, const char *_
0011c60: 5f72 6573 7472 6963 7420 5f5f 7061 7468  _restrict __path
0011c70: 2c0a 2020 2020 2020 6368 6172 202a 5f5f  ,.      char *__
0011c80: 7265 7374 7269 6374 205f 5f62 7566 2c20  restrict __buf, 
0011c90: 7369 7a65 5f74 205f 5f6c 656e 290a 2020  size_t __len).  
0011ca0: 2020 205f 5f61 7474 7269 6275 7465 5f5f     __attribute__
0011cb0: 2028 285f 5f6e 6f74 6872 6f77 5f5f 202c   ((__nothrow__ ,
0011cc0: 205f 5f6c 6561 665f 5f29 2920 5f5f 6174   __leaf__)) __at
0011cd0: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
0011ce0: 6e6e 756c 6c5f 5f20 2832 2c20 3329 2929  nnull__ (2, 3)))
0011cf0: 203b 0a0a 0a0a 6578 7465 726e 2069 6e74   ;....extern int
0011d00: 2075 6e6c 696e 6b20 2863 6f6e 7374 2063   unlink (const c
0011d10: 6861 7220 2a5f 5f6e 616d 6529 205f 5f61  har *__name) __a
0011d20: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
0011d30: 6f74 6872 6f77 5f5f 202c 205f 5f6c 6561  othrow__ , __lea
0011d40: 665f 5f29 2920 5f5f 6174 7472 6962 7574  f__)) __attribut
0011d50: 655f 5f20 2828 5f5f 6e6f 6e6e 756c 6c5f  e__ ((__nonnull_
0011d60: 5f20 2831 2929 293b 0a0a 0a0a 6578 7465  _ (1)));....exte
0011d70: 726e 2069 6e74 2075 6e6c 696e 6b61 7420  rn int unlinkat 
0011d80: 2869 6e74 205f 5f66 642c 2063 6f6e 7374  (int __fd, const
0011d90: 2063 6861 7220 2a5f 5f6e 616d 652c 2069   char *__name, i
0011da0: 6e74 205f 5f66 6c61 6729 0a20 2020 2020  nt __flag).     
0011db0: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
0011dc0: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
0011dd0: 6c65 6166 5f5f 2929 205f 5f61 7474 7269  leaf__)) __attri
0011de0: 6275 7465 5f5f 2028 285f 5f6e 6f6e 6e75  bute__ ((__nonnu
0011df0: 6c6c 5f5f 2028 3229 2929 3b0a 0a0a 0a65  ll__ (2)));....e
0011e00: 7874 6572 6e20 696e 7420 726d 6469 7220  xtern int rmdir 
0011e10: 2863 6f6e 7374 2063 6861 7220 2a5f 5f70  (const char *__p
0011e20: 6174 6829 205f 5f61 7474 7269 6275 7465  ath) __attribute
0011e30: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
0011e40: 202c 205f 5f6c 6561 665f 5f29 2920 5f5f   , __leaf__)) __
0011e50: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
0011e60: 6e6f 6e6e 756c 6c5f 5f20 2831 2929 293b  nonnull__ (1)));
0011e70: 0a0a 0a0a 6578 7465 726e 205f 5f70 6964  ....extern __pid
0011e80: 5f74 2074 6367 6574 7067 7270 2028 696e  _t tcgetpgrp (in
0011e90: 7420 5f5f 6664 2920 5f5f 6174 7472 6962  t __fd) __attrib
0011ea0: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
0011eb0: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
0011ec0: 3b0a 0a0a 6578 7465 726e 2069 6e74 2074  ;...extern int t
0011ed0: 6373 6574 7067 7270 2028 696e 7420 5f5f  csetpgrp (int __
0011ee0: 6664 2c20 5f5f 7069 645f 7420 5f5f 7067  fd, __pid_t __pg
0011ef0: 7270 5f69 6429 205f 5f61 7474 7269 6275  rp_id) __attribu
0011f00: 7465 5f5f 2028 285f 5f6e 6f74 6872 6f77  te__ ((__nothrow
0011f10: 5f5f 202c 205f 5f6c 6561 665f 5f29 293b  __ , __leaf__));
0011f20: 0a0a 0a0a 0a0a 0a65 7874 6572 6e20 6368  .......extern ch
0011f30: 6172 202a 6765 746c 6f67 696e 2028 766f  ar *getlogin (vo
0011f40: 6964 293b 0a0a 0a0a 0a0a 0a0a 6578 7465  id);........exte
0011f50: 726e 2069 6e74 2067 6574 6c6f 6769 6e5f  rn int getlogin_
0011f60: 7220 2863 6861 7220 2a5f 5f6e 616d 652c  r (char *__name,
0011f70: 2073 697a 655f 7420 5f5f 6e61 6d65 5f6c   size_t __name_l
0011f80: 656e 2920 5f5f 6174 7472 6962 7574 655f  en) __attribute_
0011f90: 5f20 2828 5f5f 6e6f 6e6e 756c 6c5f 5f20  _ ((__nonnull__ 
0011fa0: 2831 2929 293b 0a0a 0a0a 0a65 7874 6572  (1)));.....exter
0011fb0: 6e20 696e 7420 7365 746c 6f67 696e 2028  n int setlogin (
0011fc0: 636f 6e73 7420 6368 6172 202a 5f5f 6e61  const char *__na
0011fd0: 6d65 2920 5f5f 6174 7472 6962 7574 655f  me) __attribute_
0011fe0: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
0011ff0: 2c20 5f5f 6c65 6166 5f5f 2929 205f 5f61  , __leaf__)) __a
0012000: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
0012010: 6f6e 6e75 6c6c 5f5f 2028 3129 2929 3b0a  onnull__ (1)));.
0012020: 2320 3839 3320 222f 7573 722f 696e 636c  # 893 "/usr/incl
0012030: 7564 652f 756e 6973 7464 2e68 2220 3320  ude/unistd.h" 3 
0012040: 340a 2320 3120 222f 7573 722f 696e 636c  4.# 1 "/usr/incl
0012050: 7564 652f 6765 746f 7074 2e68 2220 3120  ude/getopt.h" 1 
0012060: 3320 340a 2320 3538 2022 2f75 7372 2f69  3 4.# 58 "/usr/i
0012070: 6e63 6c75 6465 2f67 6574 6f70 742e 6822  nclude/getopt.h"
0012080: 2033 2034 0a65 7874 6572 6e20 6368 6172   3 4.extern char
0012090: 202a 6f70 7461 7267 3b0a 2320 3732 2022   *optarg;.# 72 "
00120a0: 2f75 7372 2f69 6e63 6c75 6465 2f67 6574  /usr/include/get
00120b0: 6f70 742e 6822 2033 2034 0a65 7874 6572  opt.h" 3 4.exter
00120c0: 6e20 696e 7420 6f70 7469 6e64 3b0a 0a0a  n int optind;...
00120d0: 0a0a 6578 7465 726e 2069 6e74 206f 7074  ..extern int opt
00120e0: 6572 723b 0a0a 0a0a 6578 7465 726e 2069  err;....extern i
00120f0: 6e74 206f 7074 6f70 743b 0a23 2031 3531  nt optopt;.# 151
0012100: 2022 2f75 7372 2f69 6e63 6c75 6465 2f67   "/usr/include/g
0012110: 6574 6f70 742e 6822 2033 2034 0a65 7874  etopt.h" 3 4.ext
0012120: 6572 6e20 696e 7420 6765 746f 7074 2028  ern int getopt (
0012130: 696e 7420 5f5f 5f61 7267 632c 2063 6861  int ___argc, cha
0012140: 7220 2a63 6f6e 7374 202a 5f5f 5f61 7267  r *const *___arg
0012150: 762c 2063 6f6e 7374 2063 6861 7220 2a5f  v, const char *_
0012160: 5f73 686f 7274 6f70 7473 290a 2020 2020  _shortopts).    
0012170: 2020 205f 5f61 7474 7269 6275 7465 5f5f     __attribute__
0012180: 2028 285f 5f6e 6f74 6872 6f77 5f5f 202c   ((__nothrow__ ,
0012190: 205f 5f6c 6561 665f 5f29 293b 0a23 2038   __leaf__));.# 8
00121a0: 3934 2022 2f75 7372 2f69 6e63 6c75 6465  94 "/usr/include
00121b0: 2f75 6e69 7374 642e 6822 2032 2033 2034  /unistd.h" 2 3 4
00121c0: 0a0a 0a0a 0a0a 0a0a 6578 7465 726e 2069  ........extern i
00121d0: 6e74 2067 6574 686f 7374 6e61 6d65 2028  nt gethostname (
00121e0: 6368 6172 202a 5f5f 6e61 6d65 2c20 7369  char *__name, si
00121f0: 7a65 5f74 205f 5f6c 656e 2920 5f5f 6174  ze_t __len) __at
0012200: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
0012210: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
0012220: 5f5f 2929 205f 5f61 7474 7269 6275 7465  __)) __attribute
0012230: 5f5f 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f  __ ((__nonnull__
0012240: 2028 3129 2929 3b0a 0a0a 0a0a 0a0a 6578   (1)));.......ex
0012250: 7465 726e 2069 6e74 2073 6574 686f 7374  tern int sethost
0012260: 6e61 6d65 2028 636f 6e73 7420 6368 6172  name (const char
0012270: 202a 5f5f 6e61 6d65 2c20 7369 7a65 5f74   *__name, size_t
0012280: 205f 5f6c 656e 290a 2020 2020 205f 5f61   __len).     __a
0012290: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
00122a0: 6f74 6872 6f77 5f5f 202c 205f 5f6c 6561  othrow__ , __lea
00122b0: 665f 5f29 2920 5f5f 6174 7472 6962 7574  f__)) __attribut
00122c0: 655f 5f20 2828 5f5f 6e6f 6e6e 756c 6c5f  e__ ((__nonnull_
00122d0: 5f20 2831 2929 2920 3b0a 0a0a 0a65 7874  _ (1))) ;....ext
00122e0: 6572 6e20 696e 7420 7365 7468 6f73 7469  ern int sethosti
00122f0: 6420 286c 6f6e 6720 696e 7420 5f5f 6964  d (long int __id
0012300: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
0012310: 2828 5f5f 6e6f 7468 726f 775f 5f20 2c20  ((__nothrow__ , 
0012320: 5f5f 6c65 6166 5f5f 2929 203b 0a0a 0a0a  __leaf__)) ;....
0012330: 0a0a 6578 7465 726e 2069 6e74 2067 6574  ..extern int get
0012340: 646f 6d61 696e 6e61 6d65 2028 6368 6172  domainname (char
0012350: 202a 5f5f 6e61 6d65 2c20 7369 7a65 5f74   *__name, size_t
0012360: 205f 5f6c 656e 290a 2020 2020 205f 5f61   __len).     __a
0012370: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
0012380: 6f74 6872 6f77 5f5f 202c 205f 5f6c 6561  othrow__ , __lea
0012390: 665f 5f29 2920 5f5f 6174 7472 6962 7574  f__)) __attribut
00123a0: 655f 5f20 2828 5f5f 6e6f 6e6e 756c 6c5f  e__ ((__nonnull_
00123b0: 5f20 2831 2929 2920 3b0a 6578 7465 726e  _ (1))) ;.extern
00123c0: 2069 6e74 2073 6574 646f 6d61 696e 6e61   int setdomainna
00123d0: 6d65 2028 636f 6e73 7420 6368 6172 202a  me (const char *
00123e0: 5f5f 6e61 6d65 2c20 7369 7a65 5f74 205f  __name, size_t _
00123f0: 5f6c 656e 290a 2020 2020 205f 5f61 7474  _len).     __att
0012400: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
0012410: 6872 6f77 5f5f 202c 205f 5f6c 6561 665f  hrow__ , __leaf_
0012420: 5f29 2920 5f5f 6174 7472 6962 7574 655f  _)) __attribute_
0012430: 5f20 2828 5f5f 6e6f 6e6e 756c 6c5f 5f20  _ ((__nonnull__ 
0012440: 2831 2929 2920 3b0a 0a0a 0a0a 0a65 7874  (1))) ;......ext
0012450: 6572 6e20 696e 7420 7668 616e 6775 7020  ern int vhangup 
0012460: 2876 6f69 6429 205f 5f61 7474 7269 6275  (void) __attribu
0012470: 7465 5f5f 2028 285f 5f6e 6f74 6872 6f77  te__ ((__nothrow
0012480: 5f5f 202c 205f 5f6c 6561 665f 5f29 293b  __ , __leaf__));
0012490: 0a0a 0a65 7874 6572 6e20 696e 7420 7265  ...extern int re
00124a0: 766f 6b65 2028 636f 6e73 7420 6368 6172  voke (const char
00124b0: 202a 5f5f 6669 6c65 2920 5f5f 6174 7472   *__file) __attr
00124c0: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
00124d0: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
00124e0: 2929 205f 5f61 7474 7269 6275 7465 5f5f  )) __attribute__
00124f0: 2028 285f 5f6e 6f6e 6e75 6c6c 5f5f 2028   ((__nonnull__ (
0012500: 3129 2929 203b 0a0a 0a0a 0a0a 0a0a 6578  1))) ;........ex
0012510: 7465 726e 2069 6e74 2070 726f 6669 6c20  tern int profil 
0012520: 2875 6e73 6967 6e65 6420 7368 6f72 7420  (unsigned short 
0012530: 696e 7420 2a5f 5f73 616d 706c 655f 6275  int *__sample_bu
0012540: 6666 6572 2c20 7369 7a65 5f74 205f 5f73  ffer, size_t __s
0012550: 697a 652c 0a20 2020 2020 7369 7a65 5f74  ize,.     size_t
0012560: 205f 5f6f 6666 7365 742c 2075 6e73 6967   __offset, unsig
0012570: 6e65 6420 696e 7420 5f5f 7363 616c 6529  ned int __scale)
0012580: 0a20 2020 2020 5f5f 6174 7472 6962 7574  .     __attribut
0012590: 655f 5f20 2828 5f5f 6e6f 7468 726f 775f  e__ ((__nothrow_
00125a0: 5f20 2c20 5f5f 6c65 6166 5f5f 2929 205f  _ , __leaf__)) _
00125b0: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
00125c0: 5f6e 6f6e 6e75 6c6c 5f5f 2028 3129 2929  _nonnull__ (1)))
00125d0: 3b0a 0a0a 0a0a 0a65 7874 6572 6e20 696e  ;......extern in
00125e0: 7420 6163 6374 2028 636f 6e73 7420 6368  t acct (const ch
00125f0: 6172 202a 5f5f 6e61 6d65 2920 5f5f 6174  ar *__name) __at
0012600: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
0012610: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
0012620: 5f5f 2929 3b0a 0a0a 0a65 7874 6572 6e20  __));....extern 
0012630: 6368 6172 202a 6765 7475 7365 7273 6865  char *getusershe
0012640: 6c6c 2028 766f 6964 2920 5f5f 6174 7472  ll (void) __attr
0012650: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
0012660: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
0012670: 2929 3b0a 6578 7465 726e 2076 6f69 6420  ));.extern void 
0012680: 656e 6475 7365 7273 6865 6c6c 2028 766f  endusershell (vo
0012690: 6964 2920 5f5f 6174 7472 6962 7574 655f  id) __attribute_
00126a0: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
00126b0: 2c20 5f5f 6c65 6166 5f5f 2929 3b0a 6578  , __leaf__));.ex
00126c0: 7465 726e 2076 6f69 6420 7365 7475 7365  tern void setuse
00126d0: 7273 6865 6c6c 2028 766f 6964 2920 5f5f  rshell (void) __
00126e0: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
00126f0: 6e6f 7468 726f 775f 5f20 2c20 5f5f 6c65  nothrow__ , __le
0012700: 6166 5f5f 2929 3b0a 0a0a 0a0a 0a65 7874  af__));......ext
0012710: 6572 6e20 696e 7420 6461 656d 6f6e 2028  ern int daemon (
0012720: 696e 7420 5f5f 6e6f 6368 6469 722c 2069  int __nochdir, i
0012730: 6e74 205f 5f6e 6f63 6c6f 7365 2920 5f5f  nt __noclose) __
0012740: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
0012750: 6e6f 7468 726f 775f 5f20 2c20 5f5f 6c65  nothrow__ , __le
0012760: 6166 5f5f 2929 203b 0a0a 0a0a 0a0a 0a65  af__)) ;.......e
0012770: 7874 6572 6e20 696e 7420 6368 726f 6f74  xtern int chroot
0012780: 2028 636f 6e73 7420 6368 6172 202a 5f5f   (const char *__
0012790: 7061 7468 2920 5f5f 6174 7472 6962 7574  path) __attribut
00127a0: 655f 5f20 2828 5f5f 6e6f 7468 726f 775f  e__ ((__nothrow_
00127b0: 5f20 2c20 5f5f 6c65 6166 5f5f 2929 205f  _ , __leaf__)) _
00127c0: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
00127d0: 5f6e 6f6e 6e75 6c6c 5f5f 2028 3129 2929  _nonnull__ (1)))
00127e0: 203b 0a0a 0a0a 6578 7465 726e 2063 6861   ;....extern cha
00127f0: 7220 2a67 6574 7061 7373 2028 636f 6e73  r *getpass (cons
0012800: 7420 6368 6172 202a 5f5f 7072 6f6d 7074  t char *__prompt
0012810: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
0012820: 2828 5f5f 6e6f 6e6e 756c 6c5f 5f20 2831  ((__nonnull__ (1
0012830: 2929 293b 0a0a 0a0a 0a0a 0a0a 6578 7465  )));........exte
0012840: 726e 2069 6e74 2066 7379 6e63 2028 696e  rn int fsync (in
0012850: 7420 5f5f 6664 293b 0a23 2039 3931 2022  t __fd);.# 991 "
0012860: 2f75 7372 2f69 6e63 6c75 6465 2f75 6e69  /usr/include/uni
0012870: 7374 642e 6822 2033 2034 0a65 7874 6572  std.h" 3 4.exter
0012880: 6e20 6c6f 6e67 2069 6e74 2067 6574 686f  n long int getho
0012890: 7374 6964 2028 766f 6964 293b 0a0a 0a65  stid (void);...e
00128a0: 7874 6572 6e20 766f 6964 2073 796e 6320  xtern void sync 
00128b0: 2876 6f69 6429 205f 5f61 7474 7269 6275  (void) __attribu
00128c0: 7465 5f5f 2028 285f 5f6e 6f74 6872 6f77  te__ ((__nothrow
00128d0: 5f5f 202c 205f 5f6c 6561 665f 5f29 293b  __ , __leaf__));
00128e0: 0a0a 0a0a 0a0a 6578 7465 726e 2069 6e74  ......extern int
00128f0: 2067 6574 7061 6765 7369 7a65 2028 766f   getpagesize (vo
0012900: 6964 2920 5f5f 6174 7472 6962 7574 655f  id) __attribute_
0012910: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
0012920: 2c20 5f5f 6c65 6166 5f5f 2929 205f 5f61  , __leaf__)) __a
0012930: 7474 7269 6275 7465 5f5f 2028 285f 5f63  ttribute__ ((__c
0012940: 6f6e 7374 5f5f 2929 3b0a 0a0a 0a0a 6578  onst__));.....ex
0012950: 7465 726e 2069 6e74 2067 6574 6474 6162  tern int getdtab
0012960: 6c65 7369 7a65 2028 766f 6964 2920 5f5f  lesize (void) __
0012970: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
0012980: 6e6f 7468 726f 775f 5f20 2c20 5f5f 6c65  nothrow__ , __le
0012990: 6166 5f5f 2929 3b0a 2320 3130 3135 2022  af__));.# 1015 "
00129a0: 2f75 7372 2f69 6e63 6c75 6465 2f75 6e69  /usr/include/uni
00129b0: 7374 642e 6822 2033 2034 0a65 7874 6572  std.h" 3 4.exter
00129c0: 6e20 696e 7420 7472 756e 6361 7465 2028  n int truncate (
00129d0: 636f 6e73 7420 6368 6172 202a 5f5f 6669  const char *__fi
00129e0: 6c65 2c20 5f5f 6f66 665f 7420 5f5f 6c65  le, __off_t __le
00129f0: 6e67 7468 290a 2020 2020 205f 5f61 7474  ngth).     __att
0012a00: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
0012a10: 6872 6f77 5f5f 202c 205f 5f6c 6561 665f  hrow__ , __leaf_
0012a20: 5f29 2920 5f5f 6174 7472 6962 7574 655f  _)) __attribute_
0012a30: 5f20 2828 5f5f 6e6f 6e6e 756c 6c5f 5f20  _ ((__nonnull__ 
0012a40: 2831 2929 2920 3b0a 2320 3130 3338 2022  (1))) ;.# 1038 "
0012a50: 2f75 7372 2f69 6e63 6c75 6465 2f75 6e69  /usr/include/uni
0012a60: 7374 642e 6822 2033 2034 0a65 7874 6572  std.h" 3 4.exter
0012a70: 6e20 696e 7420 6674 7275 6e63 6174 6520  n int ftruncate 
0012a80: 2869 6e74 205f 5f66 642c 205f 5f6f 6666  (int __fd, __off
0012a90: 5f74 205f 5f6c 656e 6774 6829 205f 5f61  _t __length) __a
0012aa0: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
0012ab0: 6f74 6872 6f77 5f5f 202c 205f 5f6c 6561  othrow__ , __lea
0012ac0: 665f 5f29 2920 3b0a 2320 3130 3539 2022  f__)) ;.# 1059 "
0012ad0: 2f75 7372 2f69 6e63 6c75 6465 2f75 6e69  /usr/include/uni
0012ae0: 7374 642e 6822 2033 2034 0a65 7874 6572  std.h" 3 4.exter
0012af0: 6e20 696e 7420 6272 6b20 2876 6f69 6420  n int brk (void 
0012b00: 2a5f 5f61 6464 7229 205f 5f61 7474 7269  *__addr) __attri
0012b10: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
0012b20: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
0012b30: 2920 3b0a 0a0a 0a0a 0a65 7874 6572 6e20  ) ;......extern 
0012b40: 766f 6964 202a 7362 726b 2028 696e 7470  void *sbrk (intp
0012b50: 7472 5f74 205f 5f64 656c 7461 2920 5f5f  tr_t __delta) __
0012b60: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
0012b70: 6e6f 7468 726f 775f 5f20 2c20 5f5f 6c65  nothrow__ , __le
0012b80: 6166 5f5f 2929 3b0a 2320 3130 3830 2022  af__));.# 1080 "
0012b90: 2f75 7372 2f69 6e63 6c75 6465 2f75 6e69  /usr/include/uni
0012ba0: 7374 642e 6822 2033 2034 0a65 7874 6572  std.h" 3 4.exter
0012bb0: 6e20 6c6f 6e67 2069 6e74 2073 7973 6361  n long int sysca
0012bc0: 6c6c 2028 6c6f 6e67 2069 6e74 205f 5f73  ll (long int __s
0012bd0: 7973 6e6f 2c20 2e2e 2e29 205f 5f61 7474  ysno, ...) __att
0012be0: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
0012bf0: 6872 6f77 5f5f 202c 205f 5f6c 6561 665f  hrow__ , __leaf_
0012c00: 5f29 293b 0a23 2031 3130 3320 222f 7573  _));.# 1103 "/us
0012c10: 722f 696e 636c 7564 652f 756e 6973 7464  r/include/unistd
0012c20: 2e68 2220 3320 340a 6578 7465 726e 2069  .h" 3 4.extern i
0012c30: 6e74 206c 6f63 6b66 2028 696e 7420 5f5f  nt lockf (int __
0012c40: 6664 2c20 696e 7420 5f5f 636d 642c 205f  fd, int __cmd, _
0012c50: 5f6f 6666 5f74 205f 5f6c 656e 2920 3b0a  _off_t __len) ;.
0012c60: 2320 3131 3334 2022 2f75 7372 2f69 6e63  # 1134 "/usr/inc
0012c70: 6c75 6465 2f75 6e69 7374 642e 6822 2033  lude/unistd.h" 3
0012c80: 2034 0a65 7874 6572 6e20 696e 7420 6664   4.extern int fd
0012c90: 6174 6173 796e 6320 2869 6e74 205f 5f66  atasync (int __f
0012ca0: 696c 6465 7329 3b0a 2320 3131 3732 2022  ildes);.# 1172 "
0012cb0: 2f75 7372 2f69 6e63 6c75 6465 2f75 6e69  /usr/include/uni
0012cc0: 7374 642e 6822 2033 2034 0a0a 2320 3431  std.h" 3 4..# 41
0012cd0: 3620 2265 5f6f 732e 6822 2032 0a23 2031  6 "e_os.h" 2.# 1
0012ce0: 3531 2022 7373 6c5f 6c6f 636c 2e68 2220  51 "ssl_locl.h" 
0012cf0: 320a 0a23 2031 2022 2f75 7372 2f69 6e63  2..# 1 "/usr/inc
0012d00: 6c75 6465 2f6f 7065 6e73 736c 2f62 7566  lude/openssl/buf
0012d10: 6665 722e 6822 2031 2033 2034 0a23 2036  fer.h" 1 3 4.# 6
0012d20: 3220 222f 7573 722f 696e 636c 7564 652f  2 "/usr/include/
0012d30: 6f70 656e 7373 6c2f 6275 6666 6572 2e68  openssl/buffer.h
0012d40: 2220 3320 340a 2320 3120 222f 7573 722f  " 3 4.# 1 "/usr/
0012d50: 696e 636c 7564 652f 6f70 656e 7373 6c2f  include/openssl/
0012d60: 6f73 736c 5f74 7970 2e68 2220 3120 3320  ossl_typ.h" 1 3 
0012d70: 340a 2320 3538 2022 2f75 7372 2f69 6e63  4.# 58 "/usr/inc
0012d80: 6c75 6465 2f6f 7065 6e73 736c 2f6f 7373  lude/openssl/oss
0012d90: 6c5f 7479 702e 6822 2033 2034 0a23 2031  l_typ.h" 3 4.# 1
0012da0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
0012db0: 7065 6e73 736c 2f65 5f6f 7332 2e68 2220  penssl/e_os2.h" 
0012dc0: 3120 3320 340a 2320 3536 2022 2f75 7372  1 3 4.# 56 "/usr
0012dd0: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
0012de0: 2f65 5f6f 7332 2e68 2220 3320 340a 2320  /e_os2.h" 3 4.# 
0012df0: 3120 222f 7573 722f 696e 636c 7564 652f  1 "/usr/include/
0012e00: 6f70 656e 7373 6c2f 6f70 656e 7373 6c63  openssl/opensslc
0012e10: 6f6e 662e 6822 2031 2033 2034 0a23 2033  onf.h" 1 3 4.# 3
0012e20: 3420 222f 7573 722f 696e 636c 7564 652f  4 "/usr/include/
0012e30: 6f70 656e 7373 6c2f 6f70 656e 7373 6c63  openssl/opensslc
0012e40: 6f6e 662e 6822 2033 2034 0a23 2031 2022  onf.h" 3 4.# 1 "
0012e50: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
0012e60: 6e73 736c 2f6f 7065 6e73 736c 636f 6e66  nssl/opensslconf
0012e70: 2d78 3836 5f36 342e 6822 2031 2033 2034  -x86_64.h" 1 3 4
0012e80: 0a23 2033 3520 222f 7573 722f 696e 636c  .# 35 "/usr/incl
0012e90: 7564 652f 6f70 656e 7373 6c2f 6f70 656e  ude/openssl/open
0012ea0: 7373 6c63 6f6e 662e 6822 2032 2033 2034  sslconf.h" 2 3 4
0012eb0: 0a23 2035 3720 222f 7573 722f 696e 636c  .# 57 "/usr/incl
0012ec0: 7564 652f 6f70 656e 7373 6c2f 655f 6f73  ude/openssl/e_os
0012ed0: 322e 6822 2032 2033 2034 0a23 2035 3920  2.h" 2 3 4.# 59 
0012ee0: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
0012ef0: 656e 7373 6c2f 6f73 736c 5f74 7970 2e68  enssl/ossl_typ.h
0012f00: 2220 3220 3320 340a 2320 3739 2022 2f75  " 2 3 4.# 79 "/u
0012f10: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
0012f20: 736c 2f6f 7373 6c5f 7479 702e 6822 2033  sl/ossl_typ.h" 3
0012f30: 2034 0a74 7970 6564 6566 2073 7472 7563   4.typedef struc
0012f40: 7420 6173 6e31 5f73 7472 696e 675f 7374  t asn1_string_st
0012f50: 2041 534e 315f 494e 5445 4745 523b 0a74   ASN1_INTEGER;.t
0012f60: 7970 6564 6566 2073 7472 7563 7420 6173  ypedef struct as
0012f70: 6e31 5f73 7472 696e 675f 7374 2041 534e  n1_string_st ASN
0012f80: 315f 454e 554d 4552 4154 4544 3b0a 7479  1_ENUMERATED;.ty
0012f90: 7065 6465 6620 7374 7275 6374 2061 736e  pedef struct asn
0012fa0: 315f 7374 7269 6e67 5f73 7420 4153 4e31  1_string_st ASN1
0012fb0: 5f42 4954 5f53 5452 494e 473b 0a74 7970  _BIT_STRING;.typ
0012fc0: 6564 6566 2073 7472 7563 7420 6173 6e31  edef struct asn1
0012fd0: 5f73 7472 696e 675f 7374 2041 534e 315f  _string_st ASN1_
0012fe0: 4f43 5445 545f 5354 5249 4e47 3b0a 7479  OCTET_STRING;.ty
0012ff0: 7065 6465 6620 7374 7275 6374 2061 736e  pedef struct asn
0013000: 315f 7374 7269 6e67 5f73 7420 4153 4e31  1_string_st ASN1
0013010: 5f50 5249 4e54 4142 4c45 5354 5249 4e47  _PRINTABLESTRING
0013020: 3b0a 7479 7065 6465 6620 7374 7275 6374  ;.typedef struct
0013030: 2061 736e 315f 7374 7269 6e67 5f73 7420   asn1_string_st 
0013040: 4153 4e31 5f54 3631 5354 5249 4e47 3b0a  ASN1_T61STRING;.
0013050: 7479 7065 6465 6620 7374 7275 6374 2061  typedef struct a
0013060: 736e 315f 7374 7269 6e67 5f73 7420 4153  sn1_string_st AS
0013070: 4e31 5f49 4135 5354 5249 4e47 3b0a 7479  N1_IA5STRING;.ty
0013080: 7065 6465 6620 7374 7275 6374 2061 736e  pedef struct asn
0013090: 315f 7374 7269 6e67 5f73 7420 4153 4e31  1_string_st ASN1
00130a0: 5f47 454e 4552 414c 5354 5249 4e47 3b0a  _GENERALSTRING;.
00130b0: 7479 7065 6465 6620 7374 7275 6374 2061  typedef struct a
00130c0: 736e 315f 7374 7269 6e67 5f73 7420 4153  sn1_string_st AS
00130d0: 4e31 5f55 4e49 5645 5253 414c 5354 5249  N1_UNIVERSALSTRI
00130e0: 4e47 3b0a 7479 7065 6465 6620 7374 7275  NG;.typedef stru
00130f0: 6374 2061 736e 315f 7374 7269 6e67 5f73  ct asn1_string_s
0013100: 7420 4153 4e31 5f42 4d50 5354 5249 4e47  t ASN1_BMPSTRING
0013110: 3b0a 7479 7065 6465 6620 7374 7275 6374  ;.typedef struct
0013120: 2061 736e 315f 7374 7269 6e67 5f73 7420   asn1_string_st 
0013130: 4153 4e31 5f55 5443 5449 4d45 3b0a 7479  ASN1_UTCTIME;.ty
0013140: 7065 6465 6620 7374 7275 6374 2061 736e  pedef struct asn
0013150: 315f 7374 7269 6e67 5f73 7420 4153 4e31  1_string_st ASN1
0013160: 5f54 494d 453b 0a74 7970 6564 6566 2073  _TIME;.typedef s
0013170: 7472 7563 7420 6173 6e31 5f73 7472 696e  truct asn1_strin
0013180: 675f 7374 2041 534e 315f 4745 4e45 5241  g_st ASN1_GENERA
0013190: 4c49 5a45 4454 494d 453b 0a74 7970 6564  LIZEDTIME;.typed
00131a0: 6566 2073 7472 7563 7420 6173 6e31 5f73  ef struct asn1_s
00131b0: 7472 696e 675f 7374 2041 534e 315f 5649  tring_st ASN1_VI
00131c0: 5349 424c 4553 5452 494e 473b 0a74 7970  SIBLESTRING;.typ
00131d0: 6564 6566 2073 7472 7563 7420 6173 6e31  edef struct asn1
00131e0: 5f73 7472 696e 675f 7374 2041 534e 315f  _string_st ASN1_
00131f0: 5554 4638 5354 5249 4e47 3b0a 7479 7065  UTF8STRING;.type
0013200: 6465 6620 7374 7275 6374 2061 736e 315f  def struct asn1_
0013210: 7374 7269 6e67 5f73 7420 4153 4e31 5f53  string_st ASN1_S
0013220: 5452 494e 473b 0a74 7970 6564 6566 2069  TRING;.typedef i
0013230: 6e74 2041 534e 315f 424f 4f4c 4541 4e3b  nt ASN1_BOOLEAN;
0013240: 0a74 7970 6564 6566 2069 6e74 2041 534e  .typedef int ASN
0013250: 315f 4e55 4c4c 3b0a 0a0a 7479 7065 6465  1_NULL;...typede
0013260: 6620 7374 7275 6374 2041 534e 315f 4954  f struct ASN1_IT
0013270: 454d 5f73 7420 4153 4e31 5f49 5445 4d3b  EM_st ASN1_ITEM;
0013280: 0a74 7970 6564 6566 2073 7472 7563 7420  .typedef struct 
0013290: 6173 6e31 5f70 6374 785f 7374 2041 534e  asn1_pctx_st ASN
00132a0: 315f 5043 5458 3b0a 2320 3131 3420 222f  1_PCTX;.# 114 "/
00132b0: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
00132c0: 7373 6c2f 6f73 736c 5f74 7970 2e68 2220  ssl/ossl_typ.h" 
00132d0: 3320 340a 7479 7065 6465 6620 7374 7275  3 4.typedef stru
00132e0: 6374 2062 6967 6e75 6d5f 7374 2042 4947  ct bignum_st BIG
00132f0: 4e55 4d3b 0a74 7970 6564 6566 2073 7472  NUM;.typedef str
0013300: 7563 7420 6269 676e 756d 5f63 7478 2042  uct bignum_ctx B
0013310: 4e5f 4354 583b 0a74 7970 6564 6566 2073  N_CTX;.typedef s
0013320: 7472 7563 7420 626e 5f62 6c69 6e64 696e  truct bn_blindin
0013330: 675f 7374 2042 4e5f 424c 494e 4449 4e47  g_st BN_BLINDING
0013340: 3b0a 7479 7065 6465 6620 7374 7275 6374  ;.typedef struct
0013350: 2062 6e5f 6d6f 6e74 5f63 7478 5f73 7420   bn_mont_ctx_st 
0013360: 424e 5f4d 4f4e 545f 4354 583b 0a74 7970  BN_MONT_CTX;.typ
0013370: 6564 6566 2073 7472 7563 7420 626e 5f72  edef struct bn_r
0013380: 6563 705f 6374 785f 7374 2042 4e5f 5245  ecp_ctx_st BN_RE
0013390: 4350 5f43 5458 3b0a 7479 7065 6465 6620  CP_CTX;.typedef 
00133a0: 7374 7275 6374 2062 6e5f 6765 6e63 625f  struct bn_gencb_
00133b0: 7374 2042 4e5f 4745 4e43 423b 0a0a 7479  st BN_GENCB;..ty
00133c0: 7065 6465 6620 7374 7275 6374 2062 7566  pedef struct buf
00133d0: 5f6d 656d 5f73 7420 4255 465f 4d45 4d3b  _mem_st BUF_MEM;
00133e0: 0a0a 7479 7065 6465 6620 7374 7275 6374  ..typedef struct
00133f0: 2065 7670 5f63 6970 6865 725f 7374 2045   evp_cipher_st E
0013400: 5650 5f43 4950 4845 523b 0a74 7970 6564  VP_CIPHER;.typed
0013410: 6566 2073 7472 7563 7420 6576 705f 6369  ef struct evp_ci
0013420: 7068 6572 5f63 7478 5f73 7420 4556 505f  pher_ctx_st EVP_
0013430: 4349 5048 4552 5f43 5458 3b0a 7479 7065  CIPHER_CTX;.type
0013440: 6465 6620 7374 7275 6374 2065 6e76 5f6d  def struct env_m
0013450: 645f 7374 2045 5650 5f4d 443b 0a74 7970  d_st EVP_MD;.typ
0013460: 6564 6566 2073 7472 7563 7420 656e 765f  edef struct env_
0013470: 6d64 5f63 7478 5f73 7420 4556 505f 4d44  md_ctx_st EVP_MD
0013480: 5f43 5458 3b0a 7479 7065 6465 6620 7374  _CTX;.typedef st
0013490: 7275 6374 2065 7670 5f70 6b65 795f 7374  ruct evp_pkey_st
00134a0: 2045 5650 5f50 4b45 593b 0a0a 7479 7065   EVP_PKEY;..type
00134b0: 6465 6620 7374 7275 6374 2065 7670 5f70  def struct evp_p
00134c0: 6b65 795f 6173 6e31 5f6d 6574 686f 645f  key_asn1_method_
00134d0: 7374 2045 5650 5f50 4b45 595f 4153 4e31  st EVP_PKEY_ASN1
00134e0: 5f4d 4554 484f 443b 0a0a 7479 7065 6465  _METHOD;..typede
00134f0: 6620 7374 7275 6374 2065 7670 5f70 6b65  f struct evp_pke
0013500: 795f 6d65 7468 6f64 5f73 7420 4556 505f  y_method_st EVP_
0013510: 504b 4559 5f4d 4554 484f 443b 0a74 7970  PKEY_METHOD;.typ
0013520: 6564 6566 2073 7472 7563 7420 6576 705f  edef struct evp_
0013530: 706b 6579 5f63 7478 5f73 7420 4556 505f  pkey_ctx_st EVP_
0013540: 504b 4559 5f43 5458 3b0a 0a74 7970 6564  PKEY_CTX;..typed
0013550: 6566 2073 7472 7563 7420 6468 5f73 7420  ef struct dh_st 
0013560: 4448 3b0a 7479 7065 6465 6620 7374 7275  DH;.typedef stru
0013570: 6374 2064 685f 6d65 7468 6f64 2044 485f  ct dh_method DH_
0013580: 4d45 5448 4f44 3b0a 0a74 7970 6564 6566  METHOD;..typedef
0013590: 2073 7472 7563 7420 6473 615f 7374 2044   struct dsa_st D
00135a0: 5341 3b0a 7479 7065 6465 6620 7374 7275  SA;.typedef stru
00135b0: 6374 2064 7361 5f6d 6574 686f 6420 4453  ct dsa_method DS
00135c0: 415f 4d45 5448 4f44 3b0a 0a74 7970 6564  A_METHOD;..typed
00135d0: 6566 2073 7472 7563 7420 7273 615f 7374  ef struct rsa_st
00135e0: 2052 5341 3b0a 7479 7065 6465 6620 7374   RSA;.typedef st
00135f0: 7275 6374 2072 7361 5f6d 6574 685f 7374  ruct rsa_meth_st
0013600: 2052 5341 5f4d 4554 484f 443b 0a0a 7479   RSA_METHOD;..ty
0013610: 7065 6465 6620 7374 7275 6374 2072 616e  pedef struct ran
0013620: 645f 6d65 7468 5f73 7420 5241 4e44 5f4d  d_meth_st RAND_M
0013630: 4554 484f 443b 0a0a 7479 7065 6465 6620  ETHOD;..typedef 
0013640: 7374 7275 6374 2065 6364 685f 6d65 7468  struct ecdh_meth
0013650: 6f64 2045 4344 485f 4d45 5448 4f44 3b0a  od ECDH_METHOD;.
0013660: 7479 7065 6465 6620 7374 7275 6374 2065  typedef struct e
0013670: 6364 7361 5f6d 6574 686f 6420 4543 4453  cdsa_method ECDS
0013680: 415f 4d45 5448 4f44 3b0a 0a74 7970 6564  A_METHOD;..typed
0013690: 6566 2073 7472 7563 7420 7835 3039 5f73  ef struct x509_s
00136a0: 7420 5835 3039 3b0a 7479 7065 6465 6620  t X509;.typedef 
00136b0: 7374 7275 6374 2058 3530 395f 616c 676f  struct X509_algo
00136c0: 725f 7374 2058 3530 395f 414c 474f 523b  r_st X509_ALGOR;
00136d0: 0a74 7970 6564 6566 2073 7472 7563 7420  .typedef struct 
00136e0: 5835 3039 5f63 726c 5f73 7420 5835 3039  X509_crl_st X509
00136f0: 5f43 524c 3b0a 7479 7065 6465 6620 7374  _CRL;.typedef st
0013700: 7275 6374 2078 3530 395f 6372 6c5f 6d65  ruct x509_crl_me
0013710: 7468 6f64 5f73 7420 5835 3039 5f43 524c  thod_st X509_CRL
0013720: 5f4d 4554 484f 443b 0a74 7970 6564 6566  _METHOD;.typedef
0013730: 2073 7472 7563 7420 7835 3039 5f72 6576   struct x509_rev
0013740: 6f6b 6564 5f73 7420 5835 3039 5f52 4556  oked_st X509_REV
0013750: 4f4b 4544 3b0a 7479 7065 6465 6620 7374  OKED;.typedef st
0013760: 7275 6374 2058 3530 395f 6e61 6d65 5f73  ruct X509_name_s
0013770: 7420 5835 3039 5f4e 414d 453b 0a74 7970  t X509_NAME;.typ
0013780: 6564 6566 2073 7472 7563 7420 5835 3039  edef struct X509
0013790: 5f70 7562 6b65 795f 7374 2058 3530 395f  _pubkey_st X509_
00137a0: 5055 424b 4559 3b0a 7479 7065 6465 6620  PUBKEY;.typedef 
00137b0: 7374 7275 6374 2078 3530 395f 7374 6f72  struct x509_stor
00137c0: 655f 7374 2058 3530 395f 5354 4f52 453b  e_st X509_STORE;
00137d0: 0a74 7970 6564 6566 2073 7472 7563 7420  .typedef struct 
00137e0: 7835 3039 5f73 746f 7265 5f63 7478 5f73  x509_store_ctx_s
00137f0: 7420 5835 3039 5f53 544f 5245 5f43 5458  t X509_STORE_CTX
0013800: 3b0a 0a74 7970 6564 6566 2073 7472 7563  ;..typedef struc
0013810: 7420 706b 6373 385f 7072 6976 5f6b 6579  t pkcs8_priv_key
0013820: 5f69 6e66 6f5f 7374 2050 4b43 5338 5f50  _info_st PKCS8_P
0013830: 5249 565f 4b45 595f 494e 464f 3b0a 0a74  RIV_KEY_INFO;..t
0013840: 7970 6564 6566 2073 7472 7563 7420 7633  ypedef struct v3
0013850: 5f65 7874 5f63 7478 2058 3530 3956 335f  _ext_ctx X509V3_
0013860: 4354 583b 0a74 7970 6564 6566 2073 7472  CTX;.typedef str
0013870: 7563 7420 636f 6e66 5f73 7420 434f 4e46  uct conf_st CONF
0013880: 3b0a 0a74 7970 6564 6566 2073 7472 7563  ;..typedef struc
0013890: 7420 7374 6f72 655f 7374 2053 544f 5245  t store_st STORE
00138a0: 3b0a 7479 7065 6465 6620 7374 7275 6374  ;.typedef struct
00138b0: 2073 746f 7265 5f6d 6574 686f 645f 7374   store_method_st
00138c0: 2053 544f 5245 5f4d 4554 484f 443b 0a0a   STORE_METHOD;..
00138d0: 7479 7065 6465 6620 7374 7275 6374 2075  typedef struct u
00138e0: 695f 7374 2055 493b 0a74 7970 6564 6566  i_st UI;.typedef
00138f0: 2073 7472 7563 7420 7569 5f6d 6574 686f   struct ui_metho
0013900: 645f 7374 2055 495f 4d45 5448 4f44 3b0a  d_st UI_METHOD;.
0013910: 0a74 7970 6564 6566 2073 7472 7563 7420  .typedef struct 
0013920: 7374 5f45 5252 5f46 4e53 2045 5252 5f46  st_ERR_FNS ERR_F
0013930: 4e53 3b0a 0a74 7970 6564 6566 2073 7472  NS;..typedef str
0013940: 7563 7420 656e 6769 6e65 5f73 7420 454e  uct engine_st EN
0013950: 4749 4e45 3b0a 7479 7065 6465 6620 7374  GINE;.typedef st
0013960: 7275 6374 2073 736c 5f73 7420 5353 4c3b  ruct ssl_st SSL;
0013970: 0a74 7970 6564 6566 2073 7472 7563 7420  .typedef struct 
0013980: 7373 6c5f 6374 785f 7374 2053 534c 5f43  ssl_ctx_st SSL_C
0013990: 5458 3b0a 0a74 7970 6564 6566 2073 7472  TX;..typedef str
00139a0: 7563 7420 5835 3039 5f50 4f4c 4943 595f  uct X509_POLICY_
00139b0: 4e4f 4445 5f73 7420 5835 3039 5f50 4f4c  NODE_st X509_POL
00139c0: 4943 595f 4e4f 4445 3b0a 7479 7065 6465  ICY_NODE;.typede
00139d0: 6620 7374 7275 6374 2058 3530 395f 504f  f struct X509_PO
00139e0: 4c49 4359 5f4c 4556 454c 5f73 7420 5835  LICY_LEVEL_st X5
00139f0: 3039 5f50 4f4c 4943 595f 4c45 5645 4c3b  09_POLICY_LEVEL;
0013a00: 0a74 7970 6564 6566 2073 7472 7563 7420  .typedef struct 
0013a10: 5835 3039 5f50 4f4c 4943 595f 5452 4545  X509_POLICY_TREE
0013a20: 5f73 7420 5835 3039 5f50 4f4c 4943 595f  _st X509_POLICY_
0013a30: 5452 4545 3b0a 7479 7065 6465 6620 7374  TREE;.typedef st
0013a40: 7275 6374 2058 3530 395f 504f 4c49 4359  ruct X509_POLICY
0013a50: 5f43 4143 4845 5f73 7420 5835 3039 5f50  _CACHE_st X509_P
0013a60: 4f4c 4943 595f 4341 4348 453b 0a0a 7479  OLICY_CACHE;..ty
0013a70: 7065 6465 6620 7374 7275 6374 2041 5554  pedef struct AUT
0013a80: 484f 5249 5459 5f4b 4559 4944 5f73 7420  HORITY_KEYID_st 
0013a90: 4155 5448 4f52 4954 595f 4b45 5949 443b  AUTHORITY_KEYID;
0013aa0: 0a74 7970 6564 6566 2073 7472 7563 7420  .typedef struct 
0013ab0: 4449 5354 5f50 4f49 4e54 5f73 7420 4449  DIST_POINT_st DI
0013ac0: 5354 5f50 4f49 4e54 3b0a 7479 7065 6465  ST_POINT;.typede
0013ad0: 6620 7374 7275 6374 2049 5353 5549 4e47  f struct ISSUING
0013ae0: 5f44 4953 545f 504f 494e 545f 7374 2049  _DIST_POINT_st I
0013af0: 5353 5549 4e47 5f44 4953 545f 504f 494e  SSUING_DIST_POIN
0013b00: 543b 0a74 7970 6564 6566 2073 7472 7563  T;.typedef struc
0013b10: 7420 4e41 4d45 5f43 4f4e 5354 5241 494e  t NAME_CONSTRAIN
0013b20: 5453 5f73 7420 4e41 4d45 5f43 4f4e 5354  TS_st NAME_CONST
0013b30: 5241 494e 5453 3b0a 0a0a 0a0a 0a74 7970  RAINTS;......typ
0013b40: 6564 6566 2073 7472 7563 7420 6372 7970  edef struct cryp
0013b50: 746f 5f65 785f 6461 7461 5f73 7420 4352  to_ex_data_st CR
0013b60: 5950 544f 5f45 585f 4441 5441 3b0a 0a74  YPTO_EX_DATA;..t
0013b70: 7970 6564 6566 2069 6e74 2043 5259 5054  ypedef int CRYPT
0013b80: 4f5f 4558 5f6e 6577 2876 6f69 6420 2a70  O_EX_new(void *p
0013b90: 6172 656e 742c 2076 6f69 6420 2a70 7472  arent, void *ptr
0013ba0: 2c20 4352 5950 544f 5f45 585f 4441 5441  , CRYPTO_EX_DATA
0013bb0: 202a 6164 2c0a 2020 2020 2069 6e74 2069   *ad,.     int i
0013bc0: 6478 2c20 6c6f 6e67 2061 7267 6c2c 2076  dx, long argl, v
0013bd0: 6f69 6420 2a61 7267 7029 3b0a 7479 7065  oid *argp);.type
0013be0: 6465 6620 766f 6964 2043 5259 5054 4f5f  def void CRYPTO_
0013bf0: 4558 5f66 7265 6528 766f 6964 202a 7061  EX_free(void *pa
0013c00: 7265 6e74 2c20 766f 6964 202a 7074 722c  rent, void *ptr,
0013c10: 2043 5259 5054 4f5f 4558 5f44 4154 4120   CRYPTO_EX_DATA 
0013c20: 2a61 642c 0a20 2020 2020 696e 7420 6964  *ad,.     int id
0013c30: 782c 206c 6f6e 6720 6172 676c 2c20 766f  x, long argl, vo
0013c40: 6964 202a 6172 6770 293b 0a74 7970 6564  id *argp);.typed
0013c50: 6566 2069 6e74 2043 5259 5054 4f5f 4558  ef int CRYPTO_EX
0013c60: 5f64 7570 2843 5259 5054 4f5f 4558 5f44  _dup(CRYPTO_EX_D
0013c70: 4154 4120 2a74 6f2c 2043 5259 5054 4f5f  ATA *to, CRYPTO_
0013c80: 4558 5f44 4154 4120 2a66 726f 6d2c 2076  EX_DATA *from, v
0013c90: 6f69 6420 2a66 726f 6d5f 642c 0a20 2020  oid *from_d,.   
0013ca0: 2020 696e 7420 6964 782c 206c 6f6e 6720    int idx, long 
0013cb0: 6172 676c 2c20 766f 6964 202a 6172 6770  argl, void *argp
0013cc0: 293b 0a0a 7479 7065 6465 6620 7374 7275  );..typedef stru
0013cd0: 6374 206f 6373 705f 7265 715f 6374 785f  ct ocsp_req_ctx_
0013ce0: 7374 204f 4353 505f 5245 515f 4354 583b  st OCSP_REQ_CTX;
0013cf0: 0a74 7970 6564 6566 2073 7472 7563 7420  .typedef struct 
0013d00: 6f63 7370 5f72 6573 706f 6e73 655f 7374  ocsp_response_st
0013d10: 204f 4353 505f 5245 5350 4f4e 5345 3b0a   OCSP_RESPONSE;.
0013d20: 7479 7065 6465 6620 7374 7275 6374 206f  typedef struct o
0013d30: 6373 705f 7265 7370 6f6e 6465 725f 6964  csp_responder_id
0013d40: 5f73 7420 4f43 5350 5f52 4553 5049 443b  _st OCSP_RESPID;
0013d50: 0a23 2036 3320 222f 7573 722f 696e 636c  .# 63 "/usr/incl
0013d60: 7564 652f 6f70 656e 7373 6c2f 6275 6666  ude/openssl/buff
0013d70: 6572 2e68 2220 3220 3320 340a 0a0a 0a0a  er.h" 2 3 4.....
0013d80: 0a23 2031 2022 2f75 7372 2f6c 6962 2f67  .# 1 "/usr/lib/g
0013d90: 6363 2f78 3836 5f36 342d 7265 6468 6174  cc/x86_64-redhat
0013da0: 2d6c 696e 7578 2f34 2e38 2e33 2f69 6e63  -linux/4.8.3/inc
0013db0: 6c75 6465 2f73 7464 6465 662e 6822 2031  lude/stddef.h" 1
0013dc0: 2033 2034 0a23 2031 3437 2022 2f75 7372   3 4.# 147 "/usr
0013dd0: 2f6c 6962 2f67 6363 2f78 3836 5f36 342d  /lib/gcc/x86_64-
0013de0: 7265 6468 6174 2d6c 696e 7578 2f34 2e38  redhat-linux/4.8
0013df0: 2e33 2f69 6e63 6c75 6465 2f73 7464 6465  .3/include/stdde
0013e00: 662e 6822 2033 2034 0a74 7970 6564 6566  f.h" 3 4.typedef
0013e10: 206c 6f6e 6720 696e 7420 7074 7264 6966   long int ptrdif
0013e20: 665f 743b 0a23 2036 3920 222f 7573 722f  f_t;.# 69 "/usr/
0013e30: 696e 636c 7564 652f 6f70 656e 7373 6c2f  include/openssl/
0013e40: 6275 6666 6572 2e68 2220 3220 3320 340a  buffer.h" 2 3 4.
0013e50: 2320 3737 2022 2f75 7372 2f69 6e63 6c75  # 77 "/usr/inclu
0013e60: 6465 2f6f 7065 6e73 736c 2f62 7566 6665  de/openssl/buffe
0013e70: 722e 6822 2033 2034 0a73 7472 7563 7420  r.h" 3 4.struct 
0013e80: 6275 665f 6d65 6d5f 7374 0a20 7b0a 2073  buf_mem_st. {. s
0013e90: 697a 655f 7420 6c65 6e67 7468 3b0a 2063  ize_t length;. c
0013ea0: 6861 7220 2a64 6174 613b 0a20 7369 7a65  har *data;. size
0013eb0: 5f74 206d 6178 3b0a 207d 3b0a 0a42 5546  _t max;. };..BUF
0013ec0: 5f4d 454d 202a 4255 465f 4d45 4d5f 6e65  _MEM *BUF_MEM_ne
0013ed0: 7728 766f 6964 293b 0a76 6f69 6420 4255  w(void);.void BU
0013ee0: 465f 4d45 4d5f 6672 6565 2842 5546 5f4d  F_MEM_free(BUF_M
0013ef0: 454d 202a 6129 3b0a 696e 7420 4255 465f  EM *a);.int BUF_
0013f00: 4d45 4d5f 6772 6f77 2842 5546 5f4d 454d  MEM_grow(BUF_MEM
0013f10: 202a 7374 722c 2073 697a 655f 7420 6c65   *str, size_t le
0013f20: 6e29 3b0a 696e 7420 4255 465f 4d45 4d5f  n);.int BUF_MEM_
0013f30: 6772 6f77 5f63 6c65 616e 2842 5546 5f4d  grow_clean(BUF_M
0013f40: 454d 202a 7374 722c 2073 697a 655f 7420  EM *str, size_t 
0013f50: 6c65 6e29 3b0a 6368 6172 202a 2042 5546  len);.char * BUF
0013f60: 5f73 7472 6475 7028 636f 6e73 7420 6368  _strdup(const ch
0013f70: 6172 202a 7374 7229 3b0a 6368 6172 202a  ar *str);.char *
0013f80: 2042 5546 5f73 7472 6e64 7570 2863 6f6e   BUF_strndup(con
0013f90: 7374 2063 6861 7220 2a73 7472 2c20 7369  st char *str, si
0013fa0: 7a65 5f74 2073 697a 293b 0a76 6f69 6420  ze_t siz);.void 
0013fb0: 2a20 4255 465f 6d65 6d64 7570 2863 6f6e  * BUF_memdup(con
0013fc0: 7374 2076 6f69 6420 2a64 6174 612c 2073  st void *data, s
0013fd0: 697a 655f 7420 7369 7a29 3b0a 766f 6964  ize_t siz);.void
0013fe0: 2042 5546 5f72 6576 6572 7365 2875 6e73   BUF_reverse(uns
0013ff0: 6967 6e65 6420 6368 6172 202a 6f75 742c  igned char *out,
0014000: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
0014010: 696e 2c20 7369 7a65 5f74 2073 697a 293b  in, size_t siz);
0014020: 0a0a 0a73 697a 655f 7420 4255 465f 7374  ...size_t BUF_st
0014030: 726c 6370 7928 6368 6172 202a 6473 742c  rlcpy(char *dst,
0014040: 636f 6e73 7420 6368 6172 202a 7372 632c  const char *src,
0014050: 7369 7a65 5f74 2073 697a 293b 0a73 697a  size_t siz);.siz
0014060: 655f 7420 4255 465f 7374 726c 6361 7428  e_t BUF_strlcat(
0014070: 6368 6172 202a 6473 742c 636f 6e73 7420  char *dst,const 
0014080: 6368 6172 202a 7372 632c 7369 7a65 5f74  char *src,size_t
0014090: 2073 697a 293b 0a0a 0a0a 0a0a 0a76 6f69   siz);.......voi
00140a0: 6420 4552 525f 6c6f 6164 5f42 5546 5f73  d ERR_load_BUF_s
00140b0: 7472 696e 6773 2876 6f69 6429 3b0a 2320  trings(void);.# 
00140c0: 3135 3320 2273 736c 5f6c 6f63 6c2e 6822  153 "ssl_locl.h"
00140d0: 2032 0a0a 2320 3120 222f 7573 722f 696e   2..# 1 "/usr/in
00140e0: 636c 7564 652f 6f70 656e 7373 6c2f 636f  clude/openssl/co
00140f0: 6d70 2e68 2220 3120 3320 340a 0a0a 0a0a  mp.h" 1 3 4.....
0014100: 2320 3120 222f 7573 722f 696e 636c 7564  # 1 "/usr/includ
0014110: 652f 6f70 656e 7373 6c2f 6372 7970 746f  e/openssl/crypto
0014120: 2e68 2220 3120 3320 340a 2320 3132 3220  .h" 1 3 4.# 122 
0014130: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
0014140: 656e 7373 6c2f 6372 7970 746f 2e68 2220  enssl/crypto.h" 
0014150: 3320 340a 2320 3120 222f 7573 722f 696e  3 4.# 1 "/usr/in
0014160: 636c 7564 652f 6f70 656e 7373 6c2f 655f  clude/openssl/e_
0014170: 6f73 322e 6822 2031 2033 2034 0a23 2035  os2.h" 1 3 4.# 5
0014180: 3620 222f 7573 722f 696e 636c 7564 652f  6 "/usr/include/
0014190: 6f70 656e 7373 6c2f 655f 6f73 322e 6822  openssl/e_os2.h"
00141a0: 2033 2034 0a23 2031 2022 2f75 7372 2f69   3 4.# 1 "/usr/i
00141b0: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f6f  nclude/openssl/o
00141c0: 7065 6e73 736c 636f 6e66 2e68 2220 3120  pensslconf.h" 1 
00141d0: 3320 340a 2320 3334 2022 2f75 7372 2f69  3 4.# 34 "/usr/i
00141e0: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f6f  nclude/openssl/o
00141f0: 7065 6e73 736c 636f 6e66 2e68 2220 3320  pensslconf.h" 3 
0014200: 340a 2320 3120 222f 7573 722f 696e 636c  4.# 1 "/usr/incl
0014210: 7564 652f 6f70 656e 7373 6c2f 6f70 656e  ude/openssl/open
0014220: 7373 6c63 6f6e 662d 7838 365f 3634 2e68  sslconf-x86_64.h
0014230: 2220 3120 3320 340a 2320 3335 2022 2f75  " 1 3 4.# 35 "/u
0014240: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
0014250: 736c 2f6f 7065 6e73 736c 636f 6e66 2e68  sl/opensslconf.h
0014260: 2220 3220 3320 340a 2320 3537 2022 2f75  " 2 3 4.# 57 "/u
0014270: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
0014280: 736c 2f65 5f6f 7332 2e68 2220 3220 3320  sl/e_os2.h" 2 3 
0014290: 340a 2320 3132 3320 222f 7573 722f 696e  4.# 123 "/usr/in
00142a0: 636c 7564 652f 6f70 656e 7373 6c2f 6372  clude/openssl/cr
00142b0: 7970 746f 2e68 2220 3220 3320 340a 0a0a  ypto.h" 2 3 4...
00142c0: 0a0a 0a23 2031 2022 2f75 7372 2f69 6e63  ...# 1 "/usr/inc
00142d0: 6c75 6465 2f6f 7065 6e73 736c 2f73 7461  lude/openssl/sta
00142e0: 636b 2e68 2220 3120 3320 340a 2320 3636  ck.h" 1 3 4.# 66
00142f0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
0014300: 7065 6e73 736c 2f73 7461 636b 2e68 2220  penssl/stack.h" 
0014310: 3320 340a 7479 7065 6465 6620 7374 7275  3 4.typedef stru
0014320: 6374 2073 7461 636b 5f73 740a 207b 0a20  ct stack_st. {. 
0014330: 696e 7420 6e75 6d3b 0a20 6368 6172 202a  int num;. char *
0014340: 2a64 6174 613b 0a20 696e 7420 736f 7274  *data;. int sort
0014350: 6564 3b0a 0a20 696e 7420 6e75 6d5f 616c  ed;.. int num_al
0014360: 6c6f 633b 0a20 696e 7420 282a 636f 6d70  loc;. int (*comp
0014370: 2928 636f 6e73 7420 766f 6964 202a 2c20  )(const void *, 
0014380: 636f 6e73 7420 766f 6964 202a 293b 0a20  const void *);. 
0014390: 7d20 5f53 5441 434b 3b0a 0a0a 0a0a 696e  } _STACK;.....in
00143a0: 7420 736b 5f6e 756d 2863 6f6e 7374 205f  t sk_num(const _
00143b0: 5354 4143 4b20 2a29 3b0a 766f 6964 202a  STACK *);.void *
00143c0: 736b 5f76 616c 7565 2863 6f6e 7374 205f  sk_value(const _
00143d0: 5354 4143 4b20 2a2c 2069 6e74 293b 0a0a  STACK *, int);..
00143e0: 766f 6964 202a 736b 5f73 6574 285f 5354  void *sk_set(_ST
00143f0: 4143 4b20 2a2c 2069 6e74 2c20 766f 6964  ACK *, int, void
0014400: 202a 293b 0a0a 5f53 5441 434b 202a 736b   *);.._STACK *sk
0014410: 5f6e 6577 2869 6e74 2028 2a63 6d70 2928  _new(int (*cmp)(
0014420: 636f 6e73 7420 766f 6964 202a 2c20 636f  const void *, co
0014430: 6e73 7420 766f 6964 202a 2929 3b0a 5f53  nst void *));._S
0014440: 5441 434b 202a 736b 5f6e 6577 5f6e 756c  TACK *sk_new_nul
0014450: 6c28 766f 6964 293b 0a76 6f69 6420 736b  l(void);.void sk
0014460: 5f66 7265 6528 5f53 5441 434b 202a 293b  _free(_STACK *);
0014470: 0a76 6f69 6420 736b 5f70 6f70 5f66 7265  .void sk_pop_fre
0014480: 6528 5f53 5441 434b 202a 7374 2c20 766f  e(_STACK *st, vo
0014490: 6964 2028 2a66 756e 6329 2876 6f69 6420  id (*func)(void 
00144a0: 2a29 293b 0a69 6e74 2073 6b5f 696e 7365  *));.int sk_inse
00144b0: 7274 285f 5354 4143 4b20 2a73 6b2c 2076  rt(_STACK *sk, v
00144c0: 6f69 6420 2a64 6174 612c 2069 6e74 2077  oid *data, int w
00144d0: 6865 7265 293b 0a76 6f69 6420 2a73 6b5f  here);.void *sk_
00144e0: 6465 6c65 7465 285f 5354 4143 4b20 2a73  delete(_STACK *s
00144f0: 742c 2069 6e74 206c 6f63 293b 0a76 6f69  t, int loc);.voi
0014500: 6420 2a73 6b5f 6465 6c65 7465 5f70 7472  d *sk_delete_ptr
0014510: 285f 5354 4143 4b20 2a73 742c 2076 6f69  (_STACK *st, voi
0014520: 6420 2a70 293b 0a69 6e74 2073 6b5f 6669  d *p);.int sk_fi
0014530: 6e64 285f 5354 4143 4b20 2a73 742c 2076  nd(_STACK *st, v
0014540: 6f69 6420 2a64 6174 6129 3b0a 696e 7420  oid *data);.int 
0014550: 736b 5f66 696e 645f 6578 285f 5354 4143  sk_find_ex(_STAC
0014560: 4b20 2a73 742c 2076 6f69 6420 2a64 6174  K *st, void *dat
0014570: 6129 3b0a 696e 7420 736b 5f70 7573 6828  a);.int sk_push(
0014580: 5f53 5441 434b 202a 7374 2c20 766f 6964  _STACK *st, void
0014590: 202a 6461 7461 293b 0a69 6e74 2073 6b5f   *data);.int sk_
00145a0: 756e 7368 6966 7428 5f53 5441 434b 202a  unshift(_STACK *
00145b0: 7374 2c20 766f 6964 202a 6461 7461 293b  st, void *data);
00145c0: 0a76 6f69 6420 2a73 6b5f 7368 6966 7428  .void *sk_shift(
00145d0: 5f53 5441 434b 202a 7374 293b 0a76 6f69  _STACK *st);.voi
00145e0: 6420 2a73 6b5f 706f 7028 5f53 5441 434b  d *sk_pop(_STACK
00145f0: 202a 7374 293b 0a76 6f69 6420 736b 5f7a   *st);.void sk_z
0014600: 6572 6f28 5f53 5441 434b 202a 7374 293b  ero(_STACK *st);
0014610: 0a69 6e74 2028 2a73 6b5f 7365 745f 636d  .int (*sk_set_cm
0014620: 705f 6675 6e63 285f 5354 4143 4b20 2a73  p_func(_STACK *s
0014630: 6b2c 2069 6e74 2028 2a63 2928 636f 6e73  k, int (*c)(cons
0014640: 7420 766f 6964 202a 2c20 636f 6e73 7420  t void *, const 
0014650: 766f 6964 202a 2929 290a 2028 636f 6e73  void *))). (cons
0014660: 7420 766f 6964 202a 2c20 636f 6e73 7420  t void *, const 
0014670: 766f 6964 202a 293b 0a5f 5354 4143 4b20  void *);._STACK 
0014680: 2a73 6b5f 6475 7028 5f53 5441 434b 202a  *sk_dup(_STACK *
0014690: 7374 293b 0a76 6f69 6420 736b 5f73 6f72  st);.void sk_sor
00146a0: 7428 5f53 5441 434b 202a 7374 293b 0a69  t(_STACK *st);.i
00146b0: 6e74 2073 6b5f 6973 5f73 6f72 7465 6428  nt sk_is_sorted(
00146c0: 636f 6e73 7420 5f53 5441 434b 202a 7374  const _STACK *st
00146d0: 293b 0a23 2031 3239 2022 2f75 7372 2f69  );.# 129 "/usr/i
00146e0: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f63  nclude/openssl/c
00146f0: 7279 7074 6f2e 6822 2032 2033 2034 0a23  rypto.h" 2 3 4.#
0014700: 2031 2022 2f75 7372 2f69 6e63 6c75 6465   1 "/usr/include
0014710: 2f6f 7065 6e73 736c 2f73 6166 6573 7461  /openssl/safesta
0014720: 636b 2e68 2220 3120 3320 340a 2320 3131  ck.h" 1 3 4.# 11
0014730: 3320 222f 7573 722f 696e 636c 7564 652f  3 "/usr/include/
0014740: 6f70 656e 7373 6c2f 7361 6665 7374 6163  openssl/safestac
0014750: 6b2e 6822 2033 2034 0a74 7970 6564 6566  k.h" 3 4.typedef
0014760: 2063 6861 7220 2a4f 5045 4e53 534c 5f53   char *OPENSSL_S
0014770: 5452 494e 473b 0a0a 7479 7065 6465 6620  TRING;..typedef 
0014780: 636f 6e73 7420 6368 6172 202a 4f50 454e  const char *OPEN
0014790: 5353 4c5f 4353 5452 494e 473b 0a23 2031  SSL_CSTRING;.# 1
00147a0: 3235 2022 2f75 7372 2f69 6e63 6c75 6465  25 "/usr/include
00147b0: 2f6f 7065 6e73 736c 2f73 6166 6573 7461  /openssl/safesta
00147c0: 636b 2e68 2220 3320 340a 7374 7275 6374  ck.h" 3 4.struct
00147d0: 2073 7461 636b 5f73 745f 4f50 454e 5353   stack_st_OPENSS
00147e0: 4c5f 5354 5249 4e47 207b 205f 5354 4143  L_STRING { _STAC
00147f0: 4b20 7374 6163 6b3b 207d 3b0a 0a0a 0a0a  K stack; };.....
0014800: 0a74 7970 6564 6566 2076 6f69 6420 2a4f  .typedef void *O
0014810: 5045 4e53 534c 5f42 4c4f 434b 3b0a 7374  PENSSL_BLOCK;.st
0014820: 7275 6374 2073 7461 636b 5f73 745f 4f50  ruct stack_st_OP
0014830: 454e 5353 4c5f 424c 4f43 4b20 7b20 5f53  ENSSL_BLOCK { _S
0014840: 5441 434b 2073 7461 636b 3b20 7d3b 0a23  TACK stack; };.#
0014850: 2031 3330 2022 2f75 7372 2f69 6e63 6c75   130 "/usr/inclu
0014860: 6465 2f6f 7065 6e73 736c 2f63 7279 7074  de/openssl/crypt
0014870: 6f2e 6822 2032 2033 2034 0a23 2031 2022  o.h" 2 3 4.# 1 "
0014880: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
0014890: 6e73 736c 2f6f 7065 6e73 736c 762e 6822  nssl/opensslv.h"
00148a0: 2031 2033 2034 0a23 2031 3331 2022 2f75   1 3 4.# 131 "/u
00148b0: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
00148c0: 736c 2f63 7279 7074 6f2e 6822 2032 2033  sl/crypto.h" 2 3
00148d0: 2034 0a23 2031 3339 2022 2f75 7372 2f69   4.# 139 "/usr/i
00148e0: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f63  nclude/openssl/c
00148f0: 7279 7074 6f2e 6822 2033 2034 0a23 2031  rypto.h" 3 4.# 1
0014900: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
0014910: 7065 6e73 736c 2f73 796d 6861 636b 732e  penssl/symhacks.
0014920: 6822 2031 2033 2034 0a23 2035 3820 222f  h" 1 3 4.# 58 "/
0014930: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
0014940: 7373 6c2f 7379 6d68 6163 6b73 2e68 2220  ssl/symhacks.h" 
0014950: 3320 340a 2320 3120 222f 7573 722f 696e  3 4.# 1 "/usr/in
0014960: 636c 7564 652f 6f70 656e 7373 6c2f 655f  clude/openssl/e_
0014970: 6f73 322e 6822 2031 2033 2034 0a23 2035  os2.h" 1 3 4.# 5
0014980: 3620 222f 7573 722f 696e 636c 7564 652f  6 "/usr/include/
0014990: 6f70 656e 7373 6c2f 655f 6f73 322e 6822  openssl/e_os2.h"
00149a0: 2033 2034 0a23 2031 2022 2f75 7372 2f69   3 4.# 1 "/usr/i
00149b0: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f6f  nclude/openssl/o
00149c0: 7065 6e73 736c 636f 6e66 2e68 2220 3120  pensslconf.h" 1 
00149d0: 3320 340a 2320 3334 2022 2f75 7372 2f69  3 4.# 34 "/usr/i
00149e0: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f6f  nclude/openssl/o
00149f0: 7065 6e73 736c 636f 6e66 2e68 2220 3320  pensslconf.h" 3 
0014a00: 340a 2320 3120 222f 7573 722f 696e 636c  4.# 1 "/usr/incl
0014a10: 7564 652f 6f70 656e 7373 6c2f 6f70 656e  ude/openssl/open
0014a20: 7373 6c63 6f6e 662d 7838 365f 3634 2e68  sslconf-x86_64.h
0014a30: 2220 3120 3320 340a 2320 3335 2022 2f75  " 1 3 4.# 35 "/u
0014a40: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
0014a50: 736c 2f6f 7065 6e73 736c 636f 6e66 2e68  sl/opensslconf.h
0014a60: 2220 3220 3320 340a 2320 3537 2022 2f75  " 2 3 4.# 57 "/u
0014a70: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
0014a80: 736c 2f65 5f6f 7332 2e68 2220 3220 3320  sl/e_os2.h" 2 3 
0014a90: 340a 2320 3539 2022 2f75 7372 2f69 6e63  4.# 59 "/usr/inc
0014aa0: 6c75 6465 2f6f 7065 6e73 736c 2f73 796d  lude/openssl/sym
0014ab0: 6861 636b 732e 6822 2032 2033 2034 0a23  hacks.h" 2 3 4.#
0014ac0: 2031 3430 2022 2f75 7372 2f69 6e63 6c75   140 "/usr/inclu
0014ad0: 6465 2f6f 7065 6e73 736c 2f63 7279 7074  de/openssl/crypt
0014ae0: 6f2e 6822 2032 2033 2034 0a23 2031 3731  o.h" 2 3 4.# 171
0014af0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
0014b00: 7065 6e73 736c 2f63 7279 7074 6f2e 6822  penssl/crypto.h"
0014b10: 2033 2034 0a74 7970 6564 6566 2073 7472   3 4.typedef str
0014b20: 7563 7420 6f70 656e 7373 6c5f 6974 656d  uct openssl_item
0014b30: 5f73 740a 207b 0a20 696e 7420 636f 6465  _st. {. int code
0014b40: 3b0a 2076 6f69 6420 2a76 616c 7565 3b0a  ;. void *value;.
0014b50: 2073 697a 655f 7420 7661 6c75 655f 7369   size_t value_si
0014b60: 7a65 3b0a 2073 697a 655f 7420 2a76 616c  ze;. size_t *val
0014b70: 7565 5f6c 656e 6774 683b 0a20 7d20 4f50  ue_length;. } OP
0014b80: 454e 5353 4c5f 4954 454d 3b0a 2320 3235  ENSSL_ITEM;.# 25
0014b90: 3620 222f 7573 722f 696e 636c 7564 652f  6 "/usr/include/
0014ba0: 6f70 656e 7373 6c2f 6372 7970 746f 2e68  openssl/crypto.h
0014bb0: 2220 3320 340a 7479 7065 6465 6620 7374  " 3 4.typedef st
0014bc0: 7275 6374 0a20 7b0a 2069 6e74 2072 6566  ruct. {. int ref
0014bd0: 6572 656e 6365 733b 0a20 7374 7275 6374  erences;. struct
0014be0: 2043 5259 5054 4f5f 6479 6e6c 6f63 6b5f   CRYPTO_dynlock_
0014bf0: 7661 6c75 6520 2a64 6174 613b 0a20 7d20  value *data;. } 
0014c00: 4352 5950 544f 5f64 796e 6c6f 636b 3b0a  CRYPTO_dynlock;.
0014c10: 2320 3238 3320 222f 7573 722f 696e 636c  # 283 "/usr/incl
0014c20: 7564 652f 6f70 656e 7373 6c2f 6372 7970  ude/openssl/cryp
0014c30: 746f 2e68 2220 3320 340a 7479 7065 6465  to.h" 3 4.typede
0014c40: 6620 7374 7275 6374 2062 696f 5f73 7420  f struct bio_st 
0014c50: 4249 4f5f 6475 6d6d 793b 0a0a 7374 7275  BIO_dummy;..stru
0014c60: 6374 2063 7279 7074 6f5f 6578 5f64 6174  ct crypto_ex_dat
0014c70: 615f 7374 0a20 7b0a 2073 7472 7563 7420  a_st. {. struct 
0014c80: 7374 6163 6b5f 7374 5f76 6f69 6420 2a73  stack_st_void *s
0014c90: 6b3b 0a20 696e 7420 6475 6d6d 793b 0a20  k;. int dummy;. 
0014ca0: 7d3b 0a73 7472 7563 7420 7374 6163 6b5f  };.struct stack_
0014cb0: 7374 5f76 6f69 6420 7b20 5f53 5441 434b  st_void { _STACK
0014cc0: 2073 7461 636b 3b20 7d3b 0a0a 0a0a 0a74   stack; };.....t
0014cd0: 7970 6564 6566 2073 7472 7563 7420 6372  ypedef struct cr
0014ce0: 7970 746f 5f65 785f 6461 7461 5f66 756e  ypto_ex_data_fun
0014cf0: 635f 7374 0a20 7b0a 206c 6f6e 6720 6172  c_st. {. long ar
0014d00: 676c 3b0a 2076 6f69 6420 2a61 7267 703b  gl;. void *argp;
0014d10: 0a20 4352 5950 544f 5f45 585f 6e65 7720  . CRYPTO_EX_new 
0014d20: 2a6e 6577 5f66 756e 633b 0a20 4352 5950  *new_func;. CRYP
0014d30: 544f 5f45 585f 6672 6565 202a 6672 6565  TO_EX_free *free
0014d40: 5f66 756e 633b 0a20 4352 5950 544f 5f45  _func;. CRYPTO_E
0014d50: 585f 6475 7020 2a64 7570 5f66 756e 633b  X_dup *dup_func;
0014d60: 0a20 7d20 4352 5950 544f 5f45 585f 4441  . } CRYPTO_EX_DA
0014d70: 5441 5f46 554e 4353 3b0a 0a73 7472 7563  TA_FUNCS;..struc
0014d80: 7420 7374 6163 6b5f 7374 5f43 5259 5054  t stack_st_CRYPT
0014d90: 4f5f 4558 5f44 4154 415f 4655 4e43 5320  O_EX_DATA_FUNCS 
0014da0: 7b20 5f53 5441 434b 2073 7461 636b 3b20  { _STACK stack; 
0014db0: 7d3b 0a23 2033 3536 2022 2f75 7372 2f69  };.# 356 "/usr/i
0014dc0: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f63  nclude/openssl/c
0014dd0: 7279 7074 6f2e 6822 2033 2034 0a69 6e74  rypto.h" 3 4.int
0014de0: 2043 5259 5054 4f5f 6d65 6d5f 6374 726c   CRYPTO_mem_ctrl
0014df0: 2869 6e74 206d 6f64 6529 3b0a 696e 7420  (int mode);.int 
0014e00: 4352 5950 544f 5f69 735f 6d65 6d5f 6368  CRYPTO_is_mem_ch
0014e10: 6563 6b5f 6f6e 2876 6f69 6429 3b0a 2320  eck_on(void);.# 
0014e20: 3338 3420 222f 7573 722f 696e 636c 7564  384 "/usr/includ
0014e30: 652f 6f70 656e 7373 6c2f 6372 7970 746f  e/openssl/crypto
0014e40: 2e68 2220 3320 340a 636f 6e73 7420 6368  .h" 3 4.const ch
0014e50: 6172 202a 5353 4c65 6179 5f76 6572 7369  ar *SSLeay_versi
0014e60: 6f6e 2869 6e74 2074 7970 6529 3b0a 756e  on(int type);.un
0014e70: 7369 676e 6564 206c 6f6e 6720 5353 4c65  signed long SSLe
0014e80: 6179 2876 6f69 6429 3b0a 0a69 6e74 204f  ay(void);..int O
0014e90: 5045 4e53 534c 5f69 7373 6574 7567 6964  PENSSL_issetugid
0014ea0: 2876 6f69 6429 3b0a 0a0a 7479 7065 6465  (void);...typede
0014eb0: 6620 7374 7275 6374 2073 745f 4352 5950  f struct st_CRYP
0014ec0: 544f 5f45 585f 4441 5441 5f49 4d50 4c20  TO_EX_DATA_IMPL 
0014ed0: 4352 5950 544f 5f45 585f 4441 5441 5f49  CRYPTO_EX_DATA_I
0014ee0: 4d50 4c3b 0a0a 636f 6e73 7420 4352 5950  MPL;..const CRYP
0014ef0: 544f 5f45 585f 4441 5441 5f49 4d50 4c20  TO_EX_DATA_IMPL 
0014f00: 2a43 5259 5054 4f5f 6765 745f 6578 5f64  *CRYPTO_get_ex_d
0014f10: 6174 615f 696d 706c 656d 656e 7461 7469  ata_implementati
0014f20: 6f6e 2876 6f69 6429 3b0a 0a69 6e74 2043  on(void);..int C
0014f30: 5259 5054 4f5f 7365 745f 6578 5f64 6174  RYPTO_set_ex_dat
0014f40: 615f 696d 706c 656d 656e 7461 7469 6f6e  a_implementation
0014f50: 2863 6f6e 7374 2043 5259 5054 4f5f 4558  (const CRYPTO_EX
0014f60: 5f44 4154 415f 494d 504c 202a 6929 3b0a  _DATA_IMPL *i);.
0014f70: 0a69 6e74 2043 5259 5054 4f5f 6578 5f64  .int CRYPTO_ex_d
0014f80: 6174 615f 6e65 775f 636c 6173 7328 766f  ata_new_class(vo
0014f90: 6964 293b 0a0a 696e 7420 4352 5950 544f  id);..int CRYPTO
0014fa0: 5f67 6574 5f65 785f 6e65 775f 696e 6465  _get_ex_new_inde
0014fb0: 7828 696e 7420 636c 6173 735f 696e 6465  x(int class_inde
0014fc0: 782c 206c 6f6e 6720 6172 676c 2c20 766f  x, long argl, vo
0014fd0: 6964 202a 6172 6770 2c0a 2020 4352 5950  id *argp,.  CRYP
0014fe0: 544f 5f45 585f 6e65 7720 2a6e 6577 5f66  TO_EX_new *new_f
0014ff0: 756e 632c 2043 5259 5054 4f5f 4558 5f64  unc, CRYPTO_EX_d
0015000: 7570 202a 6475 705f 6675 6e63 2c0a 2020  up *dup_func,.  
0015010: 4352 5950 544f 5f45 585f 6672 6565 202a  CRYPTO_EX_free *
0015020: 6672 6565 5f66 756e 6329 3b0a 0a0a 696e  free_func);...in
0015030: 7420 4352 5950 544f 5f6e 6577 5f65 785f  t CRYPTO_new_ex_
0015040: 6461 7461 2869 6e74 2063 6c61 7373 5f69  data(int class_i
0015050: 6e64 6578 2c20 766f 6964 202a 6f62 6a2c  ndex, void *obj,
0015060: 2043 5259 5054 4f5f 4558 5f44 4154 4120   CRYPTO_EX_DATA 
0015070: 2a61 6429 3b0a 696e 7420 4352 5950 544f  *ad);.int CRYPTO
0015080: 5f64 7570 5f65 785f 6461 7461 2869 6e74  _dup_ex_data(int
0015090: 2063 6c61 7373 5f69 6e64 6578 2c20 4352   class_index, CR
00150a0: 5950 544f 5f45 585f 4441 5441 202a 746f  YPTO_EX_DATA *to
00150b0: 2c0a 2020 4352 5950 544f 5f45 585f 4441  ,.  CRYPTO_EX_DA
00150c0: 5441 202a 6672 6f6d 293b 0a76 6f69 6420  TA *from);.void 
00150d0: 4352 5950 544f 5f66 7265 655f 6578 5f64  CRYPTO_free_ex_d
00150e0: 6174 6128 696e 7420 636c 6173 735f 696e  ata(int class_in
00150f0: 6465 782c 2076 6f69 6420 2a6f 626a 2c20  dex, void *obj, 
0015100: 4352 5950 544f 5f45 585f 4441 5441 202a  CRYPTO_EX_DATA *
0015110: 6164 293b 0a0a 0a69 6e74 2043 5259 5054  ad);...int CRYPT
0015120: 4f5f 7365 745f 6578 5f64 6174 6128 4352  O_set_ex_data(CR
0015130: 5950 544f 5f45 585f 4441 5441 202a 6164  YPTO_EX_DATA *ad
0015140: 2c20 696e 7420 6964 782c 2076 6f69 6420  , int idx, void 
0015150: 2a76 616c 293b 0a76 6f69 6420 2a43 5259  *val);.void *CRY
0015160: 5054 4f5f 6765 745f 6578 5f64 6174 6128  PTO_get_ex_data(
0015170: 636f 6e73 7420 4352 5950 544f 5f45 585f  const CRYPTO_EX_
0015180: 4441 5441 202a 6164 2c69 6e74 2069 6478  DATA *ad,int idx
0015190: 293b 0a0a 0a76 6f69 6420 4352 5950 544f  );...void CRYPTO
00151a0: 5f63 6c65 616e 7570 5f61 6c6c 5f65 785f  _cleanup_all_ex_
00151b0: 6461 7461 2876 6f69 6429 3b0a 0a69 6e74  data(void);..int
00151c0: 2043 5259 5054 4f5f 6765 745f 6e65 775f   CRYPTO_get_new_
00151d0: 6c6f 636b 6964 2863 6861 7220 2a6e 616d  lockid(char *nam
00151e0: 6529 3b0a 0a69 6e74 2043 5259 5054 4f5f  e);..int CRYPTO_
00151f0: 6e75 6d5f 6c6f 636b 7328 766f 6964 293b  num_locks(void);
0015200: 0a76 6f69 6420 4352 5950 544f 5f6c 6f63  .void CRYPTO_loc
0015210: 6b28 696e 7420 6d6f 6465 2c20 696e 7420  k(int mode, int 
0015220: 7479 7065 2c63 6f6e 7374 2063 6861 7220  type,const char 
0015230: 2a66 696c 652c 696e 7420 6c69 6e65 293b  *file,int line);
0015240: 0a76 6f69 6420 4352 5950 544f 5f73 6574  .void CRYPTO_set
0015250: 5f6c 6f63 6b69 6e67 5f63 616c 6c62 6163  _locking_callbac
0015260: 6b28 766f 6964 2028 2a66 756e 6329 2869  k(void (*func)(i
0015270: 6e74 206d 6f64 652c 696e 7420 7479 7065  nt mode,int type
0015280: 2c0a 2020 2020 2020 2020 2020 2063 6f6e  ,.           con
0015290: 7374 2063 6861 7220 2a66 696c 652c 696e  st char *file,in
00152a0: 7420 6c69 6e65 2929 3b0a 766f 6964 2028  t line));.void (
00152b0: 2a43 5259 5054 4f5f 6765 745f 6c6f 636b  *CRYPTO_get_lock
00152c0: 696e 675f 6361 6c6c 6261 636b 2876 6f69  ing_callback(voi
00152d0: 6429 2928 696e 7420 6d6f 6465 2c69 6e74  d))(int mode,int
00152e0: 2074 7970 652c 636f 6e73 7420 6368 6172   type,const char
00152f0: 202a 6669 6c65 2c0a 2020 696e 7420 6c69   *file,.  int li
0015300: 6e65 293b 0a76 6f69 6420 4352 5950 544f  ne);.void CRYPTO
0015310: 5f73 6574 5f61 6464 5f6c 6f63 6b5f 6361  _set_add_lock_ca
0015320: 6c6c 6261 636b 2869 6e74 2028 2a66 756e  llback(int (*fun
0015330: 6329 2869 6e74 202a 6e75 6d2c 696e 7420  c)(int *num,int 
0015340: 6d6f 756e 742c 696e 7420 7479 7065 2c0a  mount,int type,.
0015350: 2020 2020 2020 2020 2020 2063 6f6e 7374             const
0015360: 2063 6861 7220 2a66 696c 652c 2069 6e74   char *file, int
0015370: 206c 696e 6529 293b 0a69 6e74 2028 2a43   line));.int (*C
0015380: 5259 5054 4f5f 6765 745f 6164 645f 6c6f  RYPTO_get_add_lo
0015390: 636b 5f63 616c 6c62 6163 6b28 766f 6964  ck_callback(void
00153a0: 2929 2869 6e74 202a 6e75 6d2c 696e 7420  ))(int *num,int 
00153b0: 6d6f 756e 742c 696e 7420 7479 7065 2c0a  mount,int type,.
00153c0: 2020 2020 2020 2063 6f6e 7374 2063 6861         const cha
00153d0: 7220 2a66 696c 652c 696e 7420 6c69 6e65  r *file,int line
00153e0: 293b 0a0a 0a74 7970 6564 6566 2073 7472  );...typedef str
00153f0: 7563 7420 6372 7970 746f 5f74 6872 6561  uct crypto_threa
0015400: 6469 645f 7374 0a20 7b0a 2076 6f69 6420  did_st. {. void 
0015410: 2a70 7472 3b0a 2075 6e73 6967 6e65 6420  *ptr;. unsigned 
0015420: 6c6f 6e67 2076 616c 3b0a 207d 2043 5259  long val;. } CRY
0015430: 5054 4f5f 5448 5245 4144 4944 3b0a 0a76  PTO_THREADID;..v
0015440: 6f69 6420 4352 5950 544f 5f54 4852 4541  oid CRYPTO_THREA
0015450: 4449 445f 7365 745f 6e75 6d65 7269 6328  DID_set_numeric(
0015460: 4352 5950 544f 5f54 4852 4541 4449 4420  CRYPTO_THREADID 
0015470: 2a69 642c 2075 6e73 6967 6e65 6420 6c6f  *id, unsigned lo
0015480: 6e67 2076 616c 293b 0a76 6f69 6420 4352  ng val);.void CR
0015490: 5950 544f 5f54 4852 4541 4449 445f 7365  YPTO_THREADID_se
00154a0: 745f 706f 696e 7465 7228 4352 5950 544f  t_pointer(CRYPTO
00154b0: 5f54 4852 4541 4449 4420 2a69 642c 2076  _THREADID *id, v
00154c0: 6f69 6420 2a70 7472 293b 0a69 6e74 2043  oid *ptr);.int C
00154d0: 5259 5054 4f5f 5448 5245 4144 4944 5f73  RYPTO_THREADID_s
00154e0: 6574 5f63 616c 6c62 6163 6b28 766f 6964  et_callback(void
00154f0: 2028 2a74 6872 6561 6469 645f 6675 6e63   (*threadid_func
0015500: 2928 4352 5950 544f 5f54 4852 4541 4449  )(CRYPTO_THREADI
0015510: 4420 2a29 293b 0a76 6f69 6420 282a 4352  D *));.void (*CR
0015520: 5950 544f 5f54 4852 4541 4449 445f 6765  YPTO_THREADID_ge
0015530: 745f 6361 6c6c 6261 636b 2876 6f69 6429  t_callback(void)
0015540: 2928 4352 5950 544f 5f54 4852 4541 4449  )(CRYPTO_THREADI
0015550: 4420 2a29 3b0a 766f 6964 2043 5259 5054  D *);.void CRYPT
0015560: 4f5f 5448 5245 4144 4944 5f63 7572 7265  O_THREADID_curre
0015570: 6e74 2843 5259 5054 4f5f 5448 5245 4144  nt(CRYPTO_THREAD
0015580: 4944 202a 6964 293b 0a69 6e74 2043 5259  ID *id);.int CRY
0015590: 5054 4f5f 5448 5245 4144 4944 5f63 6d70  PTO_THREADID_cmp
00155a0: 2863 6f6e 7374 2043 5259 5054 4f5f 5448  (const CRYPTO_TH
00155b0: 5245 4144 4944 202a 612c 2063 6f6e 7374  READID *a, const
00155c0: 2043 5259 5054 4f5f 5448 5245 4144 4944   CRYPTO_THREADID
00155d0: 202a 6229 3b0a 766f 6964 2043 5259 5054   *b);.void CRYPT
00155e0: 4f5f 5448 5245 4144 4944 5f63 7079 2843  O_THREADID_cpy(C
00155f0: 5259 5054 4f5f 5448 5245 4144 4944 202a  RYPTO_THREADID *
0015600: 6465 7374 2c20 636f 6e73 7420 4352 5950  dest, const CRYP
0015610: 544f 5f54 4852 4541 4449 4420 2a73 7263  TO_THREADID *src
0015620: 293b 0a75 6e73 6967 6e65 6420 6c6f 6e67  );.unsigned long
0015630: 2043 5259 5054 4f5f 5448 5245 4144 4944   CRYPTO_THREADID
0015640: 5f68 6173 6828 636f 6e73 7420 4352 5950  _hash(const CRYP
0015650: 544f 5f54 4852 4541 4449 4420 2a69 6429  TO_THREADID *id)
0015660: 3b0a 0a76 6f69 6420 4352 5950 544f 5f73  ;..void CRYPTO_s
0015670: 6574 5f69 645f 6361 6c6c 6261 636b 2875  et_id_callback(u
0015680: 6e73 6967 6e65 6420 6c6f 6e67 2028 2a66  nsigned long (*f
0015690: 756e 6329 2876 6f69 6429 293b 0a75 6e73  unc)(void));.uns
00156a0: 6967 6e65 6420 6c6f 6e67 2028 2a43 5259  igned long (*CRY
00156b0: 5054 4f5f 6765 745f 6964 5f63 616c 6c62  PTO_get_id_callb
00156c0: 6163 6b28 766f 6964 2929 2876 6f69 6429  ack(void))(void)
00156d0: 3b0a 756e 7369 676e 6564 206c 6f6e 6720  ;.unsigned long 
00156e0: 4352 5950 544f 5f74 6872 6561 645f 6964  CRYPTO_thread_id
00156f0: 2876 6f69 6429 3b0a 0a0a 636f 6e73 7420  (void);...const 
0015700: 6368 6172 202a 4352 5950 544f 5f67 6574  char *CRYPTO_get
0015710: 5f6c 6f63 6b5f 6e61 6d65 2869 6e74 2074  _lock_name(int t
0015720: 7970 6529 3b0a 696e 7420 4352 5950 544f  ype);.int CRYPTO
0015730: 5f61 6464 5f6c 6f63 6b28 696e 7420 2a70  _add_lock(int *p
0015740: 6f69 6e74 6572 2c69 6e74 2061 6d6f 756e  ointer,int amoun
0015750: 742c 696e 7420 7479 7065 2c20 636f 6e73  t,int type, cons
0015760: 7420 6368 6172 202a 6669 6c65 2c0a 2020  t char *file,.  
0015770: 2020 2020 696e 7420 6c69 6e65 293b 0a0a      int line);..
0015780: 696e 7420 4352 5950 544f 5f67 6574 5f6e  int CRYPTO_get_n
0015790: 6577 5f64 796e 6c6f 636b 6964 2876 6f69  ew_dynlockid(voi
00157a0: 6429 3b0a 766f 6964 2043 5259 5054 4f5f  d);.void CRYPTO_
00157b0: 6465 7374 726f 795f 6479 6e6c 6f63 6b69  destroy_dynlocki
00157c0: 6428 696e 7420 6929 3b0a 7374 7275 6374  d(int i);.struct
00157d0: 2043 5259 5054 4f5f 6479 6e6c 6f63 6b5f   CRYPTO_dynlock_
00157e0: 7661 6c75 6520 2a43 5259 5054 4f5f 6765  value *CRYPTO_ge
00157f0: 745f 6479 6e6c 6f63 6b5f 7661 6c75 6528  t_dynlock_value(
0015800: 696e 7420 6929 3b0a 766f 6964 2043 5259  int i);.void CRY
0015810: 5054 4f5f 7365 745f 6479 6e6c 6f63 6b5f  PTO_set_dynlock_
0015820: 6372 6561 7465 5f63 616c 6c62 6163 6b28  create_callback(
0015830: 7374 7275 6374 2043 5259 5054 4f5f 6479  struct CRYPTO_dy
0015840: 6e6c 6f63 6b5f 7661 6c75 6520 2a28 2a64  nlock_value *(*d
0015850: 796e 5f63 7265 6174 655f 6675 6e63 7469  yn_create_functi
0015860: 6f6e 2928 636f 6e73 7420 6368 6172 202a  on)(const char *
0015870: 6669 6c65 2c20 696e 7420 6c69 6e65 2929  file, int line))
0015880: 3b0a 766f 6964 2043 5259 5054 4f5f 7365  ;.void CRYPTO_se
0015890: 745f 6479 6e6c 6f63 6b5f 6c6f 636b 5f63  t_dynlock_lock_c
00158a0: 616c 6c62 6163 6b28 766f 6964 2028 2a64  allback(void (*d
00158b0: 796e 5f6c 6f63 6b5f 6675 6e63 7469 6f6e  yn_lock_function
00158c0: 2928 696e 7420 6d6f 6465 2c20 7374 7275  )(int mode, stru
00158d0: 6374 2043 5259 5054 4f5f 6479 6e6c 6f63  ct CRYPTO_dynloc
00158e0: 6b5f 7661 6c75 6520 2a6c 2c20 636f 6e73  k_value *l, cons
00158f0: 7420 6368 6172 202a 6669 6c65 2c20 696e  t char *file, in
0015900: 7420 6c69 6e65 2929 3b0a 766f 6964 2043  t line));.void C
0015910: 5259 5054 4f5f 7365 745f 6479 6e6c 6f63  RYPTO_set_dynloc
0015920: 6b5f 6465 7374 726f 795f 6361 6c6c 6261  k_destroy_callba
0015930: 636b 2876 6f69 6420 282a 6479 6e5f 6465  ck(void (*dyn_de
0015940: 7374 726f 795f 6675 6e63 7469 6f6e 2928  stroy_function)(
0015950: 7374 7275 6374 2043 5259 5054 4f5f 6479  struct CRYPTO_dy
0015960: 6e6c 6f63 6b5f 7661 6c75 6520 2a6c 2c20  nlock_value *l, 
0015970: 636f 6e73 7420 6368 6172 202a 6669 6c65  const char *file
0015980: 2c20 696e 7420 6c69 6e65 2929 3b0a 7374  , int line));.st
0015990: 7275 6374 2043 5259 5054 4f5f 6479 6e6c  ruct CRYPTO_dynl
00159a0: 6f63 6b5f 7661 6c75 6520 2a28 2a43 5259  ock_value *(*CRY
00159b0: 5054 4f5f 6765 745f 6479 6e6c 6f63 6b5f  PTO_get_dynlock_
00159c0: 6372 6561 7465 5f63 616c 6c62 6163 6b28  create_callback(
00159d0: 766f 6964 2929 2863 6f6e 7374 2063 6861  void))(const cha
00159e0: 7220 2a66 696c 652c 696e 7420 6c69 6e65  r *file,int line
00159f0: 293b 0a76 6f69 6420 282a 4352 5950 544f  );.void (*CRYPTO
0015a00: 5f67 6574 5f64 796e 6c6f 636b 5f6c 6f63  _get_dynlock_loc
0015a10: 6b5f 6361 6c6c 6261 636b 2876 6f69 6429  k_callback(void)
0015a20: 2928 696e 7420 6d6f 6465 2c20 7374 7275  )(int mode, stru
0015a30: 6374 2043 5259 5054 4f5f 6479 6e6c 6f63  ct CRYPTO_dynloc
0015a40: 6b5f 7661 6c75 6520 2a6c 2c20 636f 6e73  k_value *l, cons
0015a50: 7420 6368 6172 202a 6669 6c65 2c69 6e74  t char *file,int
0015a60: 206c 696e 6529 3b0a 766f 6964 2028 2a43   line);.void (*C
0015a70: 5259 5054 4f5f 6765 745f 6479 6e6c 6f63  RYPTO_get_dynloc
0015a80: 6b5f 6465 7374 726f 795f 6361 6c6c 6261  k_destroy_callba
0015a90: 636b 2876 6f69 6429 2928 7374 7275 6374  ck(void))(struct
0015aa0: 2043 5259 5054 4f5f 6479 6e6c 6f63 6b5f   CRYPTO_dynlock_
0015ab0: 7661 6c75 6520 2a6c 2c20 636f 6e73 7420  value *l, const 
0015ac0: 6368 6172 202a 6669 6c65 2c69 6e74 206c  char *file,int l
0015ad0: 696e 6529 3b0a 0a0a 0a69 6e74 2043 5259  ine);....int CRY
0015ae0: 5054 4f5f 7365 745f 6d65 6d5f 6675 6e63  PTO_set_mem_func
0015af0: 7469 6f6e 7328 766f 6964 202a 282a 6d29  tions(void *(*m)
0015b00: 2873 697a 655f 7429 2c76 6f69 6420 2a28  (size_t),void *(
0015b10: 2a72 2928 766f 6964 202a 2c73 697a 655f  *r)(void *,size_
0015b20: 7429 2c20 766f 6964 2028 2a66 2928 766f  t), void (*f)(vo
0015b30: 6964 202a 2929 3b0a 696e 7420 4352 5950  id *));.int CRYP
0015b40: 544f 5f73 6574 5f6c 6f63 6b65 645f 6d65  TO_set_locked_me
0015b50: 6d5f 6675 6e63 7469 6f6e 7328 766f 6964  m_functions(void
0015b60: 202a 282a 6d29 2873 697a 655f 7429 2c20   *(*m)(size_t), 
0015b70: 766f 6964 2028 2a66 7265 655f 6675 6e63  void (*free_func
0015b80: 2928 766f 6964 202a 2929 3b0a 696e 7420  )(void *));.int 
0015b90: 4352 5950 544f 5f73 6574 5f6d 656d 5f65  CRYPTO_set_mem_e
0015ba0: 785f 6675 6e63 7469 6f6e 7328 766f 6964  x_functions(void
0015bb0: 202a 282a 6d29 2873 697a 655f 742c 636f   *(*m)(size_t,co
0015bc0: 6e73 7420 6368 6172 202a 2c69 6e74 292c  nst char *,int),
0015bd0: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
0015be0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0015bf0: 2076 6f69 6420 2a28 2a72 2928 766f 6964   void *(*r)(void
0015c00: 202a 2c73 697a 655f 742c 636f 6e73 7420   *,size_t,const 
0015c10: 6368 6172 202a 2c69 6e74 292c 0a20 2020  char *,int),.   
0015c20: 2020 2020 2020 2020 2020 2020 2020 2020                  
0015c30: 2020 2020 2020 2020 2020 2020 2076 6f69               voi
0015c40: 6420 282a 6629 2876 6f69 6420 2a29 293b  d (*f)(void *));
0015c50: 0a69 6e74 2043 5259 5054 4f5f 7365 745f  .int CRYPTO_set_
0015c60: 6c6f 636b 6564 5f6d 656d 5f65 785f 6675  locked_mem_ex_fu
0015c70: 6e63 7469 6f6e 7328 766f 6964 202a 282a  nctions(void *(*
0015c80: 6d29 2873 697a 655f 742c 636f 6e73 7420  m)(size_t,const 
0015c90: 6368 6172 202a 2c69 6e74 292c 0a20 2020  char *,int),.   
0015ca0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0015cb0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0015cc0: 2020 2020 766f 6964 2028 2a66 7265 655f      void (*free_
0015cd0: 6675 6e63 2928 766f 6964 202a 2929 3b0a  func)(void *));.
0015ce0: 696e 7420 4352 5950 544f 5f73 6574 5f6d  int CRYPTO_set_m
0015cf0: 656d 5f64 6562 7567 5f66 756e 6374 696f  em_debug_functio
0015d00: 6e73 2876 6f69 6420 282a 6d29 2876 6f69  ns(void (*m)(voi
0015d10: 6420 2a2c 696e 742c 636f 6e73 7420 6368  d *,int,const ch
0015d20: 6172 202a 2c69 6e74 2c69 6e74 292c 0a20  ar *,int,int),. 
0015d30: 2020 2020 2020 766f 6964 2028 2a72 2928        void (*r)(
0015d40: 766f 6964 202a 2c76 6f69 6420 2a2c 696e  void *,void *,in
0015d50: 742c 636f 6e73 7420 6368 6172 202a 2c69  t,const char *,i
0015d60: 6e74 2c69 6e74 292c 0a20 2020 2020 2020  nt,int),.       
0015d70: 766f 6964 2028 2a66 2928 766f 6964 202a  void (*f)(void *
0015d80: 2c69 6e74 292c 0a20 2020 2020 2020 766f  ,int),.       vo
0015d90: 6964 2028 2a73 6f29 286c 6f6e 6729 2c0a  id (*so)(long),.
0015da0: 2020 2020 2020 206c 6f6e 6720 282a 676f         long (*go
0015db0: 2928 766f 6964 2929 3b0a 766f 6964 2043  )(void));.void C
0015dc0: 5259 5054 4f5f 6765 745f 6d65 6d5f 6675  RYPTO_get_mem_fu
0015dd0: 6e63 7469 6f6e 7328 766f 6964 202a 282a  nctions(void *(*
0015de0: 2a6d 2928 7369 7a65 5f74 292c 766f 6964  *m)(size_t),void
0015df0: 202a 282a 2a72 2928 766f 6964 202a 2c20   *(**r)(void *, 
0015e00: 7369 7a65 5f74 292c 2076 6f69 6420 282a  size_t), void (*
0015e10: 2a66 2928 766f 6964 202a 2929 3b0a 766f  *f)(void *));.vo
0015e20: 6964 2043 5259 5054 4f5f 6765 745f 6c6f  id CRYPTO_get_lo
0015e30: 636b 6564 5f6d 656d 5f66 756e 6374 696f  cked_mem_functio
0015e40: 6e73 2876 6f69 6420 2a28 2a2a 6d29 2873  ns(void *(**m)(s
0015e50: 697a 655f 7429 2c20 766f 6964 2028 2a2a  ize_t), void (**
0015e60: 6629 2876 6f69 6420 2a29 293b 0a76 6f69  f)(void *));.voi
0015e70: 6420 4352 5950 544f 5f67 6574 5f6d 656d  d CRYPTO_get_mem
0015e80: 5f65 785f 6675 6e63 7469 6f6e 7328 766f  _ex_functions(vo
0015e90: 6964 202a 282a 2a6d 2928 7369 7a65 5f74  id *(**m)(size_t
0015ea0: 2c63 6f6e 7374 2063 6861 7220 2a2c 696e  ,const char *,in
0015eb0: 7429 2c0a 2020 2020 2020 2020 2020 2020  t),.            
0015ec0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0015ed0: 2020 2020 2076 6f69 6420 2a28 2a2a 7229       void *(**r)
0015ee0: 2876 6f69 6420 2a2c 2073 697a 655f 742c  (void *, size_t,
0015ef0: 636f 6e73 7420 6368 6172 202a 2c69 6e74  const char *,int
0015f00: 292c 0a20 2020 2020 2020 2020 2020 2020  ),.             
0015f10: 2020 2020 2020 2020 2020 2020 2020 2020                  
0015f20: 2020 2020 766f 6964 2028 2a2a 6629 2876      void (**f)(v
0015f30: 6f69 6420 2a29 293b 0a76 6f69 6420 4352  oid *));.void CR
0015f40: 5950 544f 5f67 6574 5f6c 6f63 6b65 645f  YPTO_get_locked_
0015f50: 6d65 6d5f 6578 5f66 756e 6374 696f 6e73  mem_ex_functions
0015f60: 2876 6f69 6420 2a28 2a2a 6d29 2873 697a  (void *(**m)(siz
0015f70: 655f 742c 636f 6e73 7420 6368 6172 202a  e_t,const char *
0015f80: 2c69 6e74 292c 0a20 2020 2020 2020 2020  ,int),.         
0015f90: 2020 2020 2020 2020 2020 2020 2020 2020                  
0015fa0: 2020 2020 2020 2020 2020 2020 2020 2076                 v
0015fb0: 6f69 6420 282a 2a66 2928 766f 6964 202a  oid (**f)(void *
0015fc0: 2929 3b0a 766f 6964 2043 5259 5054 4f5f  ));.void CRYPTO_
0015fd0: 6765 745f 6d65 6d5f 6465 6275 675f 6675  get_mem_debug_fu
0015fe0: 6e63 7469 6f6e 7328 766f 6964 2028 2a2a  nctions(void (**
0015ff0: 6d29 2876 6f69 6420 2a2c 696e 742c 636f  m)(void *,int,co
0016000: 6e73 7420 6368 6172 202a 2c69 6e74 2c69  nst char *,int,i
0016010: 6e74 292c 0a20 2020 2020 2020 2076 6f69  nt),.        voi
0016020: 6420 282a 2a72 2928 766f 6964 202a 2c76  d (**r)(void *,v
0016030: 6f69 6420 2a2c 696e 742c 636f 6e73 7420  oid *,int,const 
0016040: 6368 6172 202a 2c69 6e74 2c69 6e74 292c  char *,int,int),
0016050: 0a20 2020 2020 2020 2076 6f69 6420 282a  .        void (*
0016060: 2a66 2928 766f 6964 202a 2c69 6e74 292c  *f)(void *,int),
0016070: 0a20 2020 2020 2020 2076 6f69 6420 282a  .        void (*
0016080: 2a73 6f29 286c 6f6e 6729 2c0a 2020 2020  *so)(long),.    
0016090: 2020 2020 6c6f 6e67 2028 2a2a 676f 2928      long (**go)(
00160a0: 766f 6964 2929 3b0a 0a76 6f69 6420 2a43  void));..void *C
00160b0: 5259 5054 4f5f 6d61 6c6c 6f63 5f6c 6f63  RYPTO_malloc_loc
00160c0: 6b65 6428 696e 7420 6e75 6d2c 2063 6f6e  ked(int num, con
00160d0: 7374 2063 6861 7220 2a66 696c 652c 2069  st char *file, i
00160e0: 6e74 206c 696e 6529 3b0a 766f 6964 2043  nt line);.void C
00160f0: 5259 5054 4f5f 6672 6565 5f6c 6f63 6b65  RYPTO_free_locke
0016100: 6428 766f 6964 202a 7074 7229 3b0a 766f  d(void *ptr);.vo
0016110: 6964 202a 4352 5950 544f 5f6d 616c 6c6f  id *CRYPTO_mallo
0016120: 6328 696e 7420 6e75 6d2c 2063 6f6e 7374  c(int num, const
0016130: 2063 6861 7220 2a66 696c 652c 2069 6e74   char *file, int
0016140: 206c 696e 6529 3b0a 6368 6172 202a 4352   line);.char *CR
0016150: 5950 544f 5f73 7472 6475 7028 636f 6e73  YPTO_strdup(cons
0016160: 7420 6368 6172 202a 7374 722c 2063 6f6e  t char *str, con
0016170: 7374 2063 6861 7220 2a66 696c 652c 2069  st char *file, i
0016180: 6e74 206c 696e 6529 3b0a 766f 6964 2043  nt line);.void C
0016190: 5259 5054 4f5f 6672 6565 2876 6f69 6420  RYPTO_free(void 
00161a0: 2a70 7472 293b 0a76 6f69 6420 2a43 5259  *ptr);.void *CRY
00161b0: 5054 4f5f 7265 616c 6c6f 6328 766f 6964  PTO_realloc(void
00161c0: 202a 6164 6472 2c69 6e74 206e 756d 2c20   *addr,int num, 
00161d0: 636f 6e73 7420 6368 6172 202a 6669 6c65  const char *file
00161e0: 2c20 696e 7420 6c69 6e65 293b 0a76 6f69  , int line);.voi
00161f0: 6420 2a43 5259 5054 4f5f 7265 616c 6c6f  d *CRYPTO_reallo
0016200: 635f 636c 6561 6e28 766f 6964 202a 6164  c_clean(void *ad
0016210: 6472 2c69 6e74 206f 6c64 5f6e 756d 2c69  dr,int old_num,i
0016220: 6e74 206e 756d 2c63 6f6e 7374 2063 6861  nt num,const cha
0016230: 7220 2a66 696c 652c 0a20 2020 2020 2069  r *file,.      i
0016240: 6e74 206c 696e 6529 3b0a 766f 6964 202a  nt line);.void *
0016250: 4352 5950 544f 5f72 656d 616c 6c6f 6328  CRYPTO_remalloc(
0016260: 766f 6964 202a 6164 6472 2c69 6e74 206e  void *addr,int n
0016270: 756d 2c20 636f 6e73 7420 6368 6172 202a  um, const char *
0016280: 6669 6c65 2c20 696e 7420 6c69 6e65 293b  file, int line);
0016290: 0a0a 766f 6964 204f 5045 4e53 534c 5f63  ..void OPENSSL_c
00162a0: 6c65 616e 7365 2876 6f69 6420 2a70 7472  leanse(void *ptr
00162b0: 2c20 7369 7a65 5f74 206c 656e 293b 0a0a  , size_t len);..
00162c0: 766f 6964 2043 5259 5054 4f5f 7365 745f  void CRYPTO_set_
00162d0: 6d65 6d5f 6465 6275 675f 6f70 7469 6f6e  mem_debug_option
00162e0: 7328 6c6f 6e67 2062 6974 7329 3b0a 6c6f  s(long bits);.lo
00162f0: 6e67 2043 5259 5054 4f5f 6765 745f 6d65  ng CRYPTO_get_me
0016300: 6d5f 6465 6275 675f 6f70 7469 6f6e 7328  m_debug_options(
0016310: 766f 6964 293b 0a0a 0a0a 696e 7420 4352  void);....int CR
0016320: 5950 544f 5f70 7573 685f 696e 666f 5f28  YPTO_push_info_(
0016330: 636f 6e73 7420 6368 6172 202a 696e 666f  const char *info
0016340: 2c20 636f 6e73 7420 6368 6172 202a 6669  , const char *fi
0016350: 6c65 2c20 696e 7420 6c69 6e65 293b 0a69  le, int line);.i
0016360: 6e74 2043 5259 5054 4f5f 706f 705f 696e  nt CRYPTO_pop_in
0016370: 666f 2876 6f69 6429 3b0a 696e 7420 4352  fo(void);.int CR
0016380: 5950 544f 5f72 656d 6f76 655f 616c 6c5f  YPTO_remove_all_
0016390: 696e 666f 2876 6f69 6429 3b0a 2320 3531  info(void);.# 51
00163a0: 3920 222f 7573 722f 696e 636c 7564 652f  9 "/usr/include/
00163b0: 6f70 656e 7373 6c2f 6372 7970 746f 2e68  openssl/crypto.h
00163c0: 2220 3320 340a 766f 6964 2043 5259 5054  " 3 4.void CRYPT
00163d0: 4f5f 6462 675f 6d61 6c6c 6f63 2876 6f69  O_dbg_malloc(voi
00163e0: 6420 2a61 6464 722c 696e 7420 6e75 6d2c  d *addr,int num,
00163f0: 636f 6e73 7420 6368 6172 202a 6669 6c65  const char *file
0016400: 2c69 6e74 206c 696e 652c 696e 7420 6265  ,int line,int be
0016410: 666f 7265 5f70 293b 0a76 6f69 6420 4352  fore_p);.void CR
0016420: 5950 544f 5f64 6267 5f72 6561 6c6c 6f63  YPTO_dbg_realloc
0016430: 2876 6f69 6420 2a61 6464 7231 2c76 6f69  (void *addr1,voi
0016440: 6420 2a61 6464 7232 2c69 6e74 206e 756d  d *addr2,int num
0016450: 2c63 6f6e 7374 2063 6861 7220 2a66 696c  ,const char *fil
0016460: 652c 696e 7420 6c69 6e65 2c69 6e74 2062  e,int line,int b
0016470: 6566 6f72 655f 7029 3b0a 766f 6964 2043  efore_p);.void C
0016480: 5259 5054 4f5f 6462 675f 6672 6565 2876  RYPTO_dbg_free(v
0016490: 6f69 6420 2a61 6464 722c 696e 7420 6265  oid *addr,int be
00164a0: 666f 7265 5f70 293b 0a23 2035 3330 2022  fore_p);.# 530 "
00164b0: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
00164c0: 6e73 736c 2f63 7279 7074 6f2e 6822 2033  nssl/crypto.h" 3
00164d0: 2034 0a76 6f69 6420 4352 5950 544f 5f64   4.void CRYPTO_d
00164e0: 6267 5f73 6574 5f6f 7074 696f 6e73 286c  bg_set_options(l
00164f0: 6f6e 6720 6269 7473 293b 0a6c 6f6e 6720  ong bits);.long 
0016500: 4352 5950 544f 5f64 6267 5f67 6574 5f6f  CRYPTO_dbg_get_o
0016510: 7074 696f 6e73 2876 6f69 6429 3b0a 0a0a  ptions(void);...
0016520: 0a76 6f69 6420 4352 5950 544f 5f6d 656d  .void CRYPTO_mem
0016530: 5f6c 6561 6b73 5f66 7028 4649 4c45 202a  _leaks_fp(FILE *
0016540: 293b 0a0a 766f 6964 2043 5259 5054 4f5f  );..void CRYPTO_
0016550: 6d65 6d5f 6c65 616b 7328 7374 7275 6374  mem_leaks(struct
0016560: 2062 696f 5f73 7420 2a62 696f 293b 0a0a   bio_st *bio);..
0016570: 7479 7065 6465 6620 766f 6964 202a 4352  typedef void *CR
0016580: 5950 544f 5f4d 454d 5f4c 4541 4b5f 4342  YPTO_MEM_LEAK_CB
0016590: 2875 6e73 6967 6e65 6420 6c6f 6e67 2c20  (unsigned long, 
00165a0: 636f 6e73 7420 6368 6172 202a 2c20 696e  const char *, in
00165b0: 742c 2069 6e74 2c20 766f 6964 202a 293b  t, int, void *);
00165c0: 0a76 6f69 6420 4352 5950 544f 5f6d 656d  .void CRYPTO_mem
00165d0: 5f6c 6561 6b73 5f63 6228 4352 5950 544f  _leaks_cb(CRYPTO
00165e0: 5f4d 454d 5f4c 4541 4b5f 4342 202a 6362  _MEM_LEAK_CB *cb
00165f0: 293b 0a0a 0a76 6f69 6420 4f70 656e 5353  );...void OpenSS
0016600: 4c44 6965 2863 6f6e 7374 2063 6861 7220  LDie(const char 
0016610: 2a66 696c 652c 696e 7420 6c69 6e65 2c63  *file,int line,c
0016620: 6f6e 7374 2063 6861 7220 2a61 7373 6572  onst char *asser
0016630: 7469 6f6e 293b 0a0a 0a75 6e73 6967 6e65  tion);...unsigne
0016640: 6420 6c6f 6e67 202a 4f50 454e 5353 4c5f  d long *OPENSSL_
0016650: 6961 3332 6361 705f 6c6f 6328 766f 6964  ia32cap_loc(void
0016660: 293b 0a0a 696e 7420 4f50 454e 5353 4c5f  );..int OPENSSL_
0016670: 6973 7365 7276 6963 6528 766f 6964 293b  isservice(void);
0016680: 0a0a 696e 7420 4649 5053 5f6d 6f64 6528  ..int FIPS_mode(
0016690: 766f 6964 293b 0a69 6e74 2046 4950 535f  void);.int FIPS_
00166a0: 6d6f 6465 5f73 6574 2869 6e74 2072 293b  mode_set(int r);
00166b0: 0a0a 766f 6964 204f 5045 4e53 534c 5f69  ..void OPENSSL_i
00166c0: 6e69 7428 766f 6964 293b 0a23 2035 3735  nit(void);.# 575
00166d0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
00166e0: 7065 6e73 736c 2f63 7279 7074 6f2e 6822  penssl/crypto.h"
00166f0: 2033 2034 0a76 6f69 6420 4649 5053 5f73   3 4.void FIPS_s
0016700: 656c 6674 6573 745f 6368 6563 6b28 766f  elftest_check(vo
0016710: 6964 293b 0a23 2035 3837 2022 2f75 7372  id);.# 587 "/usr
0016720: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
0016730: 2f63 7279 7074 6f2e 6822 2033 2034 0a69  /crypto.h" 3 4.i
0016740: 6e74 2043 5259 5054 4f5f 6d65 6d63 6d70  nt CRYPTO_memcmp
0016750: 2863 6f6e 7374 2076 6f69 6420 2a61 2c20  (const void *a, 
0016760: 636f 6e73 7420 766f 6964 202a 622c 2073  const void *b, s
0016770: 697a 655f 7420 6c65 6e29 3b0a 0a0a 0a0a  ize_t len);.....
0016780: 0a76 6f69 6420 4552 525f 6c6f 6164 5f43  .void ERR_load_C
0016790: 5259 5054 4f5f 7374 7269 6e67 7328 766f  RYPTO_strings(vo
00167a0: 6964 293b 0a0a 0a76 6f69 6420 4f50 454e  id);...void OPEN
00167b0: 5353 4c5f 696e 6974 5f6c 6962 7261 7279  SSL_init_library
00167c0: 2876 6f69 6429 3b0a 2320 3620 222f 7573  (void);.# 6 "/us
00167d0: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
00167e0: 6c2f 636f 6d70 2e68 2220 3220 3320 340a  l/comp.h" 2 3 4.
00167f0: 0a0a 0a0a 0a74 7970 6564 6566 2073 7472  .....typedef str
0016800: 7563 7420 636f 6d70 5f63 7478 5f73 7420  uct comp_ctx_st 
0016810: 434f 4d50 5f43 5458 3b0a 0a74 7970 6564  COMP_CTX;..typed
0016820: 6566 2073 7472 7563 7420 636f 6d70 5f6d  ef struct comp_m
0016830: 6574 686f 645f 7374 0a20 7b0a 2069 6e74  ethod_st. {. int
0016840: 2074 7970 653b 0a20 636f 6e73 7420 6368   type;. const ch
0016850: 6172 202a 6e61 6d65 3b0a 2069 6e74 2028  ar *name;. int (
0016860: 2a69 6e69 7429 2843 4f4d 505f 4354 5820  *init)(COMP_CTX 
0016870: 2a63 7478 293b 0a20 766f 6964 2028 2a66  *ctx);. void (*f
0016880: 696e 6973 6829 2843 4f4d 505f 4354 5820  inish)(COMP_CTX 
0016890: 2a63 7478 293b 0a20 696e 7420 282a 636f  *ctx);. int (*co
00168a0: 6d70 7265 7373 2928 434f 4d50 5f43 5458  mpress)(COMP_CTX
00168b0: 202a 6374 782c 0a20 2020 756e 7369 676e   *ctx,.   unsign
00168c0: 6564 2063 6861 7220 2a6f 7574 2c20 756e  ed char *out, un
00168d0: 7369 676e 6564 2069 6e74 206f 6c65 6e2c  signed int olen,
00168e0: 0a20 2020 756e 7369 676e 6564 2063 6861  .   unsigned cha
00168f0: 7220 2a69 6e2c 2075 6e73 6967 6e65 6420  r *in, unsigned 
0016900: 696e 7420 696c 656e 293b 0a20 696e 7420  int ilen);. int 
0016910: 282a 6578 7061 6e64 2928 434f 4d50 5f43  (*expand)(COMP_C
0016920: 5458 202a 6374 782c 0a20 2020 2020 2020  TX *ctx,.       
0016930: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
0016940: 6f75 742c 2075 6e73 6967 6e65 6420 696e  out, unsigned in
0016950: 7420 6f6c 656e 2c0a 2020 2020 2020 2020  t olen,.        
0016960: 756e 7369 676e 6564 2063 6861 7220 2a69  unsigned char *i
0016970: 6e2c 2075 6e73 6967 6e65 6420 696e 7420  n, unsigned int 
0016980: 696c 656e 293b 0a0a 206c 6f6e 6720 282a  ilen);.. long (*
0016990: 6374 726c 2928 766f 6964 293b 0a20 6c6f  ctrl)(void);. lo
00169a0: 6e67 2028 2a63 616c 6c62 6163 6b5f 6374  ng (*callback_ct
00169b0: 726c 2928 766f 6964 293b 0a20 7d20 434f  rl)(void);. } CO
00169c0: 4d50 5f4d 4554 484f 443b 0a0a 7374 7275  MP_METHOD;..stru
00169d0: 6374 2063 6f6d 705f 6374 785f 7374 0a20  ct comp_ctx_st. 
00169e0: 7b0a 2043 4f4d 505f 4d45 5448 4f44 202a  {. COMP_METHOD *
00169f0: 6d65 7468 3b0a 2075 6e73 6967 6e65 6420  meth;. unsigned 
0016a00: 6c6f 6e67 2063 6f6d 7072 6573 735f 696e  long compress_in
0016a10: 3b0a 2075 6e73 6967 6e65 6420 6c6f 6e67  ;. unsigned long
0016a20: 2063 6f6d 7072 6573 735f 6f75 743b 0a20   compress_out;. 
0016a30: 756e 7369 676e 6564 206c 6f6e 6720 6578  unsigned long ex
0016a40: 7061 6e64 5f69 6e3b 0a20 756e 7369 676e  pand_in;. unsign
0016a50: 6564 206c 6f6e 6720 6578 7061 6e64 5f6f  ed long expand_o
0016a60: 7574 3b0a 0a20 4352 5950 544f 5f45 585f  ut;.. CRYPTO_EX_
0016a70: 4441 5441 2065 785f 6461 7461 3b0a 207d  DATA ex_data;. }
0016a80: 3b0a 0a0a 434f 4d50 5f43 5458 202a 434f  ;...COMP_CTX *CO
0016a90: 4d50 5f43 5458 5f6e 6577 2843 4f4d 505f  MP_CTX_new(COMP_
0016aa0: 4d45 5448 4f44 202a 6d65 7468 293b 0a76  METHOD *meth);.v
0016ab0: 6f69 6420 434f 4d50 5f43 5458 5f66 7265  oid COMP_CTX_fre
0016ac0: 6528 434f 4d50 5f43 5458 202a 6374 7829  e(COMP_CTX *ctx)
0016ad0: 3b0a 696e 7420 434f 4d50 5f63 6f6d 7072  ;.int COMP_compr
0016ae0: 6573 735f 626c 6f63 6b28 434f 4d50 5f43  ess_block(COMP_C
0016af0: 5458 202a 6374 782c 2075 6e73 6967 6e65  TX *ctx, unsigne
0016b00: 6420 6368 6172 202a 6f75 742c 2069 6e74  d char *out, int
0016b10: 206f 6c65 6e2c 0a20 756e 7369 676e 6564   olen,. unsigned
0016b20: 2063 6861 7220 2a69 6e2c 2069 6e74 2069   char *in, int i
0016b30: 6c65 6e29 3b0a 696e 7420 434f 4d50 5f65  len);.int COMP_e
0016b40: 7870 616e 645f 626c 6f63 6b28 434f 4d50  xpand_block(COMP
0016b50: 5f43 5458 202a 6374 782c 2075 6e73 6967  _CTX *ctx, unsig
0016b60: 6e65 6420 6368 6172 202a 6f75 742c 2069  ned char *out, i
0016b70: 6e74 206f 6c65 6e2c 0a20 756e 7369 676e  nt olen,. unsign
0016b80: 6564 2063 6861 7220 2a69 6e2c 2069 6e74  ed char *in, int
0016b90: 2069 6c65 6e29 3b0a 434f 4d50 5f4d 4554   ilen);.COMP_MET
0016ba0: 484f 4420 2a43 4f4d 505f 726c 6528 766f  HOD *COMP_rle(vo
0016bb0: 6964 2029 3b0a 434f 4d50 5f4d 4554 484f  id );.COMP_METHO
0016bc0: 4420 2a43 4f4d 505f 7a6c 6962 2876 6f69  D *COMP_zlib(voi
0016bd0: 6420 293b 0a76 6f69 6420 434f 4d50 5f7a  d );.void COMP_z
0016be0: 6c69 625f 636c 6561 6e75 7028 766f 6964  lib_cleanup(void
0016bf0: 293b 0a23 2036 3220 222f 7573 722f 696e  );.# 62 "/usr/in
0016c00: 636c 7564 652f 6f70 656e 7373 6c2f 636f  clude/openssl/co
0016c10: 6d70 2e68 2220 3320 340a 766f 6964 2045  mp.h" 3 4.void E
0016c20: 5252 5f6c 6f61 645f 434f 4d50 5f73 7472  RR_load_COMP_str
0016c30: 696e 6773 2876 6f69 6429 3b0a 2320 3135  ings(void);.# 15
0016c40: 3520 2273 736c 5f6c 6f63 6c2e 6822 2032  5 "ssl_locl.h" 2
0016c50: 0a0a 2320 3120 222f 7573 722f 696e 636c  ..# 1 "/usr/incl
0016c60: 7564 652f 6f70 656e 7373 6c2f 6269 6f2e  ude/openssl/bio.
0016c70: 6822 2031 2033 2034 0a23 2036 3220 222f  h" 1 3 4.# 62 "/
0016c80: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
0016c90: 7373 6c2f 6269 6f2e 6822 2033 2034 0a23  ssl/bio.h" 3 4.#
0016ca0: 2031 2022 2f75 7372 2f69 6e63 6c75 6465   1 "/usr/include
0016cb0: 2f6f 7065 6e73 736c 2f65 5f6f 7332 2e68  /openssl/e_os2.h
0016cc0: 2220 3120 3320 340a 2320 3536 2022 2f75  " 1 3 4.# 56 "/u
0016cd0: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
0016ce0: 736c 2f65 5f6f 7332 2e68 2220 3320 340a  sl/e_os2.h" 3 4.
0016cf0: 2320 3120 222f 7573 722f 696e 636c 7564  # 1 "/usr/includ
0016d00: 652f 6f70 656e 7373 6c2f 6f70 656e 7373  e/openssl/openss
0016d10: 6c63 6f6e 662e 6822 2031 2033 2034 0a23  lconf.h" 1 3 4.#
0016d20: 2033 3420 222f 7573 722f 696e 636c 7564   34 "/usr/includ
0016d30: 652f 6f70 656e 7373 6c2f 6f70 656e 7373  e/openssl/openss
0016d40: 6c63 6f6e 662e 6822 2033 2034 0a23 2031  lconf.h" 3 4.# 1
0016d50: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
0016d60: 7065 6e73 736c 2f6f 7065 6e73 736c 636f  penssl/opensslco
0016d70: 6e66 2d78 3836 5f36 342e 6822 2031 2033  nf-x86_64.h" 1 3
0016d80: 2034 0a23 2033 3520 222f 7573 722f 696e   4.# 35 "/usr/in
0016d90: 636c 7564 652f 6f70 656e 7373 6c2f 6f70  clude/openssl/op
0016da0: 656e 7373 6c63 6f6e 662e 6822 2032 2033  ensslconf.h" 2 3
0016db0: 2034 0a23 2035 3720 222f 7573 722f 696e   4.# 57 "/usr/in
0016dc0: 636c 7564 652f 6f70 656e 7373 6c2f 655f  clude/openssl/e_
0016dd0: 6f73 322e 6822 2032 2033 2034 0a23 2036  os2.h" 2 3 4.# 6
0016de0: 3320 222f 7573 722f 696e 636c 7564 652f  3 "/usr/include/
0016df0: 6f70 656e 7373 6c2f 6269 6f2e 6822 2032  openssl/bio.h" 2
0016e00: 2033 2034 0a0a 0a0a 0a23 2031 2022 2f75   3 4.....# 1 "/u
0016e10: 7372 2f6c 6962 2f67 6363 2f78 3836 5f36  sr/lib/gcc/x86_6
0016e20: 342d 7265 6468 6174 2d6c 696e 7578 2f34  4-redhat-linux/4
0016e30: 2e38 2e33 2f69 6e63 6c75 6465 2f73 7464  .8.3/include/std
0016e40: 6172 672e 6822 2031 2033 2034 0a23 2036  arg.h" 1 3 4.# 6
0016e50: 3820 222f 7573 722f 696e 636c 7564 652f  8 "/usr/include/
0016e60: 6f70 656e 7373 6c2f 6269 6f2e 6822 2032  openssl/bio.h" 2
0016e70: 2033 2034 0a23 2032 3331 2022 2f75 7372   3 4.# 231 "/usr
0016e80: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
0016e90: 2f62 696f 2e68 2220 3320 340a 7479 7065  /bio.h" 3 4.type
0016ea0: 6465 6620 7374 7275 6374 2062 696f 5f73  def struct bio_s
0016eb0: 7420 4249 4f3b 0a0a 766f 6964 2042 494f  t BIO;..void BIO
0016ec0: 5f73 6574 5f66 6c61 6773 2842 494f 202a  _set_flags(BIO *
0016ed0: 622c 2069 6e74 2066 6c61 6773 293b 0a69  b, int flags);.i
0016ee0: 6e74 2042 494f 5f74 6573 745f 666c 6167  nt BIO_test_flag
0016ef0: 7328 636f 6e73 7420 4249 4f20 2a62 2c20  s(const BIO *b, 
0016f00: 696e 7420 666c 6167 7329 3b0a 766f 6964  int flags);.void
0016f10: 2042 494f 5f63 6c65 6172 5f66 6c61 6773   BIO_clear_flags
0016f20: 2842 494f 202a 622c 2069 6e74 2066 6c61  (BIO *b, int fla
0016f30: 6773 293b 0a23 2032 3835 2022 2f75 7372  gs);.# 285 "/usr
0016f40: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
0016f50: 2f62 696f 2e68 2220 3320 340a 6c6f 6e67  /bio.h" 3 4.long
0016f60: 2028 2a42 494f 5f67 6574 5f63 616c 6c62   (*BIO_get_callb
0016f70: 6163 6b28 636f 6e73 7420 4249 4f20 2a62  ack(const BIO *b
0016f80: 2929 2028 7374 7275 6374 2062 696f 5f73  )) (struct bio_s
0016f90: 7420 2a2c 696e 742c 636f 6e73 7420 6368  t *,int,const ch
0016fa0: 6172 202a 2c69 6e74 2c20 6c6f 6e67 2c6c  ar *,int, long,l
0016fb0: 6f6e 6729 3b0a 766f 6964 2042 494f 5f73  ong);.void BIO_s
0016fc0: 6574 5f63 616c 6c62 6163 6b28 4249 4f20  et_callback(BIO 
0016fd0: 2a62 2c0a 206c 6f6e 6720 282a 6361 6c6c  *b,. long (*call
0016fe0: 6261 636b 2928 7374 7275 6374 2062 696f  back)(struct bio
0016ff0: 5f73 7420 2a2c 696e 742c 636f 6e73 7420  _st *,int,const 
0017000: 6368 6172 202a 2c69 6e74 2c20 6c6f 6e67  char *,int, long
0017010: 2c6c 6f6e 6729 293b 0a63 6861 7220 2a42  ,long));.char *B
0017020: 494f 5f67 6574 5f63 616c 6c62 6163 6b5f  IO_get_callback_
0017030: 6172 6728 636f 6e73 7420 4249 4f20 2a62  arg(const BIO *b
0017040: 293b 0a76 6f69 6420 4249 4f5f 7365 745f  );.void BIO_set_
0017050: 6361 6c6c 6261 636b 5f61 7267 2842 494f  callback_arg(BIO
0017060: 202a 622c 2063 6861 7220 2a61 7267 293b   *b, char *arg);
0017070: 0a0a 636f 6e73 7420 6368 6172 202a 2042  ..const char * B
0017080: 494f 5f6d 6574 686f 645f 6e61 6d65 2863  IO_method_name(c
0017090: 6f6e 7374 2042 494f 202a 6229 3b0a 696e  onst BIO *b);.in
00170a0: 7420 4249 4f5f 6d65 7468 6f64 5f74 7970  t BIO_method_typ
00170b0: 6528 636f 6e73 7420 4249 4f20 2a62 293b  e(const BIO *b);
00170c0: 0a0a 7479 7065 6465 6620 766f 6964 2062  ..typedef void b
00170d0: 696f 5f69 6e66 6f5f 6362 2873 7472 7563  io_info_cb(struc
00170e0: 7420 6269 6f5f 7374 202a 2c20 696e 742c  t bio_st *, int,
00170f0: 2063 6f6e 7374 2063 6861 7220 2a2c 2069   const char *, i
0017100: 6e74 2c20 6c6f 6e67 2c20 6c6f 6e67 293b  nt, long, long);
0017110: 0a0a 7479 7065 6465 6620 7374 7275 6374  ..typedef struct
0017120: 2062 696f 5f6d 6574 686f 645f 7374 0a20   bio_method_st. 
0017130: 7b0a 2069 6e74 2074 7970 653b 0a20 636f  {. int type;. co
0017140: 6e73 7420 6368 6172 202a 6e61 6d65 3b0a  nst char *name;.
0017150: 2069 6e74 2028 2a62 7772 6974 6529 2842   int (*bwrite)(B
0017160: 494f 202a 2c20 636f 6e73 7420 6368 6172  IO *, const char
0017170: 202a 2c20 696e 7429 3b0a 2069 6e74 2028   *, int);. int (
0017180: 2a62 7265 6164 2928 4249 4f20 2a2c 2063  *bread)(BIO *, c
0017190: 6861 7220 2a2c 2069 6e74 293b 0a20 696e  har *, int);. in
00171a0: 7420 282a 6270 7574 7329 2842 494f 202a  t (*bputs)(BIO *
00171b0: 2c20 636f 6e73 7420 6368 6172 202a 293b  , const char *);
00171c0: 0a20 696e 7420 282a 6267 6574 7329 2842  . int (*bgets)(B
00171d0: 494f 202a 2c20 6368 6172 202a 2c20 696e  IO *, char *, in
00171e0: 7429 3b0a 206c 6f6e 6720 282a 6374 726c  t);. long (*ctrl
00171f0: 2928 4249 4f20 2a2c 2069 6e74 2c20 6c6f  )(BIO *, int, lo
0017200: 6e67 2c20 766f 6964 202a 293b 0a20 696e  ng, void *);. in
0017210: 7420 282a 6372 6561 7465 2928 4249 4f20  t (*create)(BIO 
0017220: 2a29 3b0a 2069 6e74 2028 2a64 6573 7472  *);. int (*destr
0017230: 6f79 2928 4249 4f20 2a29 3b0a 2020 2020  oy)(BIO *);.    
0017240: 2020 2020 6c6f 6e67 2028 2a63 616c 6c62      long (*callb
0017250: 6163 6b5f 6374 726c 2928 4249 4f20 2a2c  ack_ctrl)(BIO *,
0017260: 2069 6e74 2c20 6269 6f5f 696e 666f 5f63   int, bio_info_c
0017270: 6220 2a29 3b0a 207d 2042 494f 5f4d 4554  b *);. } BIO_MET
0017280: 484f 443b 0a0a 7374 7275 6374 2062 696f  HOD;..struct bio
0017290: 5f73 740a 207b 0a20 4249 4f5f 4d45 5448  _st. {. BIO_METH
00172a0: 4f44 202a 6d65 7468 6f64 3b0a 0a20 6c6f  OD *method;.. lo
00172b0: 6e67 2028 2a63 616c 6c62 6163 6b29 2873  ng (*callback)(s
00172c0: 7472 7563 7420 6269 6f5f 7374 202a 2c69  truct bio_st *,i
00172d0: 6e74 2c63 6f6e 7374 2063 6861 7220 2a2c  nt,const char *,
00172e0: 696e 742c 206c 6f6e 672c 6c6f 6e67 293b  int, long,long);
00172f0: 0a20 6368 6172 202a 6362 5f61 7267 3b0a  . char *cb_arg;.
0017300: 0a20 696e 7420 696e 6974 3b0a 2069 6e74  . int init;. int
0017310: 2073 6875 7464 6f77 6e3b 0a20 696e 7420   shutdown;. int 
0017320: 666c 6167 733b 0a20 696e 7420 7265 7472  flags;. int retr
0017330: 795f 7265 6173 6f6e 3b0a 2069 6e74 206e  y_reason;. int n
0017340: 756d 3b0a 2076 6f69 6420 2a70 7472 3b0a  um;. void *ptr;.
0017350: 2073 7472 7563 7420 6269 6f5f 7374 202a   struct bio_st *
0017360: 6e65 7874 5f62 696f 3b0a 2073 7472 7563  next_bio;. struc
0017370: 7420 6269 6f5f 7374 202a 7072 6576 5f62  t bio_st *prev_b
0017380: 696f 3b0a 2069 6e74 2072 6566 6572 656e  io;. int referen
0017390: 6365 733b 0a20 756e 7369 676e 6564 206c  ces;. unsigned l
00173a0: 6f6e 6720 6e75 6d5f 7265 6164 3b0a 2075  ong num_read;. u
00173b0: 6e73 6967 6e65 6420 6c6f 6e67 206e 756d  nsigned long num
00173c0: 5f77 7269 7465 3b0a 0a20 4352 5950 544f  _write;.. CRYPTO
00173d0: 5f45 585f 4441 5441 2065 785f 6461 7461  _EX_DATA ex_data
00173e0: 3b0a 207d 3b0a 0a73 7472 7563 7420 7374  ;. };..struct st
00173f0: 6163 6b5f 7374 5f42 494f 207b 205f 5354  ack_st_BIO { _ST
0017400: 4143 4b20 7374 6163 6b3b 207d 3b0a 0a74  ACK stack; };..t
0017410: 7970 6564 6566 2073 7472 7563 7420 6269  ypedef struct bi
0017420: 6f5f 665f 6275 6666 6572 5f63 7478 5f73  o_f_buffer_ctx_s
0017430: 7472 7563 740a 207b 0a23 2033 3436 2022  truct. {.# 346 "
0017440: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
0017450: 6e73 736c 2f62 696f 2e68 2220 3320 340a  nssl/bio.h" 3 4.
0017460: 2069 6e74 2069 6275 665f 7369 7a65 3b0a   int ibuf_size;.
0017470: 2069 6e74 206f 6275 665f 7369 7a65 3b0a   int obuf_size;.
0017480: 0a20 6368 6172 202a 6962 7566 3b0a 2069  . char *ibuf;. i
0017490: 6e74 2069 6275 665f 6c65 6e3b 0a20 696e  nt ibuf_len;. in
00174a0: 7420 6962 7566 5f6f 6666 3b0a 0a20 6368  t ibuf_off;.. ch
00174b0: 6172 202a 6f62 7566 3b0a 2069 6e74 206f  ar *obuf;. int o
00174c0: 6275 665f 6c65 6e3b 0a20 696e 7420 6f62  buf_len;. int ob
00174d0: 7566 5f6f 6666 3b0a 207d 2042 494f 5f46  uf_off;. } BIO_F
00174e0: 5f42 5546 4645 525f 4354 583b 0a0a 0a74  _BUFFER_CTX;...t
00174f0: 7970 6564 6566 2069 6e74 2061 736e 315f  ypedef int asn1_
0017500: 7073 5f66 756e 6328 4249 4f20 2a62 2c20  ps_func(BIO *b, 
0017510: 756e 7369 676e 6564 2063 6861 7220 2a2a  unsigned char **
0017520: 7062 7566 2c20 696e 7420 2a70 6c65 6e2c  pbuf, int *plen,
0017530: 2076 6f69 6420 2a70 6172 6729 3b0a 2320   void *parg);.# 
0017540: 3537 3420 222f 7573 722f 696e 636c 7564  574 "/usr/includ
0017550: 652f 6f70 656e 7373 6c2f 6269 6f2e 6822  e/openssl/bio.h"
0017560: 2033 2034 0a73 697a 655f 7420 4249 4f5f   3 4.size_t BIO_
0017570: 6374 726c 5f70 656e 6469 6e67 2842 494f  ctrl_pending(BIO
0017580: 202a 6229 3b0a 7369 7a65 5f74 2042 494f   *b);.size_t BIO
0017590: 5f63 7472 6c5f 7770 656e 6469 6e67 2842  _ctrl_wpending(B
00175a0: 494f 202a 6229 3b0a 2320 3539 3320 222f  IO *b);.# 593 "/
00175b0: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
00175c0: 7373 6c2f 6269 6f2e 6822 2033 2034 0a73  ssl/bio.h" 3 4.s
00175d0: 697a 655f 7420 4249 4f5f 6374 726c 5f67  ize_t BIO_ctrl_g
00175e0: 6574 5f77 7269 7465 5f67 7561 7261 6e74  et_write_guarant
00175f0: 6565 2842 494f 202a 6229 3b0a 7369 7a65  ee(BIO *b);.size
0017600: 5f74 2042 494f 5f63 7472 6c5f 6765 745f  _t BIO_ctrl_get_
0017610: 7265 6164 5f72 6571 7565 7374 2842 494f  read_request(BIO
0017620: 202a 6229 3b0a 696e 7420 4249 4f5f 6374   *b);.int BIO_ct
0017630: 726c 5f72 6573 6574 5f72 6561 645f 7265  rl_reset_read_re
0017640: 7175 6573 7428 4249 4f20 2a62 293b 0a23  quest(BIO *b);.#
0017650: 2036 3134 2022 2f75 7372 2f69 6e63 6c75   614 "/usr/inclu
0017660: 6465 2f6f 7065 6e73 736c 2f62 696f 2e68  de/openssl/bio.h
0017670: 2220 3320 340a 696e 7420 4249 4f5f 7365  " 3 4.int BIO_se
0017680: 745f 6578 5f64 6174 6128 4249 4f20 2a62  t_ex_data(BIO *b
0017690: 696f 2c69 6e74 2069 6478 2c76 6f69 6420  io,int idx,void 
00176a0: 2a64 6174 6129 3b0a 766f 6964 202a 4249  *data);.void *BI
00176b0: 4f5f 6765 745f 6578 5f64 6174 6128 4249  O_get_ex_data(BI
00176c0: 4f20 2a62 696f 2c69 6e74 2069 6478 293b  O *bio,int idx);
00176d0: 0a69 6e74 2042 494f 5f67 6574 5f65 785f  .int BIO_get_ex_
00176e0: 6e65 775f 696e 6465 7828 6c6f 6e67 2061  new_index(long a
00176f0: 7267 6c2c 2076 6f69 6420 2a61 7267 702c  rgl, void *argp,
0017700: 2043 5259 5054 4f5f 4558 5f6e 6577 202a   CRYPTO_EX_new *
0017710: 6e65 775f 6675 6e63 2c0a 2043 5259 5054  new_func,. CRYPT
0017720: 4f5f 4558 5f64 7570 202a 6475 705f 6675  O_EX_dup *dup_fu
0017730: 6e63 2c20 4352 5950 544f 5f45 585f 6672  nc, CRYPTO_EX_fr
0017740: 6565 202a 6672 6565 5f66 756e 6329 3b0a  ee *free_func);.
0017750: 756e 7369 676e 6564 206c 6f6e 6720 4249  unsigned long BI
0017760: 4f5f 6e75 6d62 6572 5f72 6561 6428 4249  O_number_read(BI
0017770: 4f20 2a62 696f 293b 0a75 6e73 6967 6e65  O *bio);.unsigne
0017780: 6420 6c6f 6e67 2042 494f 5f6e 756d 6265  d long BIO_numbe
0017790: 725f 7772 6974 7465 6e28 4249 4f20 2a62  r_written(BIO *b
00177a0: 696f 293b 0a0a 0a69 6e74 2042 494f 5f61  io);...int BIO_a
00177b0: 736e 315f 7365 745f 7072 6566 6978 2842  sn1_set_prefix(B
00177c0: 494f 202a 622c 2061 736e 315f 7073 5f66  IO *b, asn1_ps_f
00177d0: 756e 6320 2a70 7265 6669 782c 0a20 2020  unc *prefix,.   
00177e0: 2020 6173 6e31 5f70 735f 6675 6e63 202a    asn1_ps_func *
00177f0: 7072 6566 6978 5f66 7265 6529 3b0a 696e  prefix_free);.in
0017800: 7420 4249 4f5f 6173 6e31 5f67 6574 5f70  t BIO_asn1_get_p
0017810: 7265 6669 7828 4249 4f20 2a62 2c20 6173  refix(BIO *b, as
0017820: 6e31 5f70 735f 6675 6e63 202a 2a70 7072  n1_ps_func **ppr
0017830: 6566 6978 2c0a 2020 2020 2061 736e 315f  efix,.     asn1_
0017840: 7073 5f66 756e 6320 2a2a 7070 7265 6669  ps_func **pprefi
0017850: 785f 6672 6565 293b 0a69 6e74 2042 494f  x_free);.int BIO
0017860: 5f61 736e 315f 7365 745f 7375 6666 6978  _asn1_set_suffix
0017870: 2842 494f 202a 622c 2061 736e 315f 7073  (BIO *b, asn1_ps
0017880: 5f66 756e 6320 2a73 7566 6669 782c 0a20  _func *suffix,. 
0017890: 2020 2020 6173 6e31 5f70 735f 6675 6e63      asn1_ps_func
00178a0: 202a 7375 6666 6978 5f66 7265 6529 3b0a   *suffix_free);.
00178b0: 696e 7420 4249 4f5f 6173 6e31 5f67 6574  int BIO_asn1_get
00178c0: 5f73 7566 6669 7828 4249 4f20 2a62 2c20  _suffix(BIO *b, 
00178d0: 6173 6e31 5f70 735f 6675 6e63 202a 2a70  asn1_ps_func **p
00178e0: 7375 6666 6978 2c0a 2020 2020 2061 736e  suffix,.     asn
00178f0: 315f 7073 5f66 756e 6320 2a2a 7073 7566  1_ps_func **psuf
0017900: 6669 785f 6672 6565 293b 0a0a 0a42 494f  fix_free);...BIO
0017910: 5f4d 4554 484f 4420 2a42 494f 5f73 5f66  _METHOD *BIO_s_f
0017920: 696c 6528 766f 6964 2029 3b0a 4249 4f20  ile(void );.BIO 
0017930: 2a42 494f 5f6e 6577 5f66 696c 6528 636f  *BIO_new_file(co
0017940: 6e73 7420 6368 6172 202a 6669 6c65 6e61  nst char *filena
0017950: 6d65 2c20 636f 6e73 7420 6368 6172 202a  me, const char *
0017960: 6d6f 6465 293b 0a42 494f 202a 4249 4f5f  mode);.BIO *BIO_
0017970: 6e65 775f 6670 2846 494c 4520 2a73 7472  new_fp(FILE *str
0017980: 6561 6d2c 2069 6e74 2063 6c6f 7365 5f66  eam, int close_f
0017990: 6c61 6729 3b0a 0a0a 4249 4f20 2a20 4249  lag);...BIO * BI
00179a0: 4f5f 6e65 7728 4249 4f5f 4d45 5448 4f44  O_new(BIO_METHOD
00179b0: 202a 7479 7065 293b 0a69 6e74 2042 494f   *type);.int BIO
00179c0: 5f73 6574 2842 494f 202a 612c 4249 4f5f  _set(BIO *a,BIO_
00179d0: 4d45 5448 4f44 202a 7479 7065 293b 0a69  METHOD *type);.i
00179e0: 6e74 2042 494f 5f66 7265 6528 4249 4f20  nt BIO_free(BIO 
00179f0: 2a61 293b 0a76 6f69 6420 4249 4f5f 7666  *a);.void BIO_vf
0017a00: 7265 6528 4249 4f20 2a61 293b 0a69 6e74  ree(BIO *a);.int
0017a10: 2042 494f 5f72 6561 6428 4249 4f20 2a62   BIO_read(BIO *b
0017a20: 2c20 766f 6964 202a 6461 7461 2c20 696e  , void *data, in
0017a30: 7420 6c65 6e29 3b0a 696e 7420 4249 4f5f  t len);.int BIO_
0017a40: 6765 7473 2842 494f 202a 6270 2c63 6861  gets(BIO *bp,cha
0017a50: 7220 2a62 7566 2c20 696e 7420 7369 7a65  r *buf, int size
0017a60: 293b 0a69 6e74 2042 494f 5f77 7269 7465  );.int BIO_write
0017a70: 2842 494f 202a 622c 2063 6f6e 7374 2076  (BIO *b, const v
0017a80: 6f69 6420 2a64 6174 612c 2069 6e74 206c  oid *data, int l
0017a90: 656e 293b 0a69 6e74 2042 494f 5f70 7574  en);.int BIO_put
0017aa0: 7328 4249 4f20 2a62 702c 636f 6e73 7420  s(BIO *bp,const 
0017ab0: 6368 6172 202a 6275 6629 3b0a 696e 7420  char *buf);.int 
0017ac0: 4249 4f5f 696e 6465 6e74 2842 494f 202a  BIO_indent(BIO *
0017ad0: 622c 696e 7420 696e 6465 6e74 2c69 6e74  b,int indent,int
0017ae0: 206d 6178 293b 0a6c 6f6e 6720 4249 4f5f   max);.long BIO_
0017af0: 6374 726c 2842 494f 202a 6270 2c69 6e74  ctrl(BIO *bp,int
0017b00: 2063 6d64 2c6c 6f6e 6720 6c61 7267 2c76   cmd,long larg,v
0017b10: 6f69 6420 2a70 6172 6729 3b0a 6c6f 6e67  oid *parg);.long
0017b20: 2042 494f 5f63 616c 6c62 6163 6b5f 6374   BIO_callback_ct
0017b30: 726c 2842 494f 202a 622c 2069 6e74 2063  rl(BIO *b, int c
0017b40: 6d64 2c20 766f 6964 2028 2a66 7029 2873  md, void (*fp)(s
0017b50: 7472 7563 7420 6269 6f5f 7374 202a 2c20  truct bio_st *, 
0017b60: 696e 742c 2063 6f6e 7374 2063 6861 7220  int, const char 
0017b70: 2a2c 2069 6e74 2c20 6c6f 6e67 2c20 6c6f  *, int, long, lo
0017b80: 6e67 2929 3b0a 6368 6172 202a 2042 494f  ng));.char * BIO
0017b90: 5f70 7472 5f63 7472 6c28 4249 4f20 2a62  _ptr_ctrl(BIO *b
0017ba0: 702c 696e 7420 636d 642c 6c6f 6e67 206c  p,int cmd,long l
0017bb0: 6172 6729 3b0a 6c6f 6e67 2042 494f 5f69  arg);.long BIO_i
0017bc0: 6e74 5f63 7472 6c28 4249 4f20 2a62 702c  nt_ctrl(BIO *bp,
0017bd0: 696e 7420 636d 642c 6c6f 6e67 206c 6172  int cmd,long lar
0017be0: 672c 696e 7420 6961 7267 293b 0a42 494f  g,int iarg);.BIO
0017bf0: 202a 2042 494f 5f70 7573 6828 4249 4f20   * BIO_push(BIO 
0017c00: 2a62 2c42 494f 202a 6170 7065 6e64 293b  *b,BIO *append);
0017c10: 0a42 494f 202a 2042 494f 5f70 6f70 2842  .BIO * BIO_pop(B
0017c20: 494f 202a 6229 3b0a 766f 6964 2042 494f  IO *b);.void BIO
0017c30: 5f66 7265 655f 616c 6c28 4249 4f20 2a61  _free_all(BIO *a
0017c40: 293b 0a42 494f 202a 2042 494f 5f66 696e  );.BIO * BIO_fin
0017c50: 645f 7479 7065 2842 494f 202a 622c 696e  d_type(BIO *b,in
0017c60: 7420 6269 6f5f 7479 7065 293b 0a42 494f  t bio_type);.BIO
0017c70: 202a 2042 494f 5f6e 6578 7428 4249 4f20   * BIO_next(BIO 
0017c80: 2a62 293b 0a42 494f 202a 2042 494f 5f67  *b);.BIO * BIO_g
0017c90: 6574 5f72 6574 7279 5f42 494f 2842 494f  et_retry_BIO(BIO
0017ca0: 202a 6269 6f2c 2069 6e74 202a 7265 6173   *bio, int *reas
0017cb0: 6f6e 293b 0a69 6e74 2042 494f 5f67 6574  on);.int BIO_get
0017cc0: 5f72 6574 7279 5f72 6561 736f 6e28 4249  _retry_reason(BI
0017cd0: 4f20 2a62 696f 293b 0a42 494f 202a 2042  O *bio);.BIO * B
0017ce0: 494f 5f64 7570 5f63 6861 696e 2842 494f  IO_dup_chain(BIO
0017cf0: 202a 696e 293b 0a0a 696e 7420 4249 4f5f   *in);..int BIO_
0017d00: 6e72 6561 6430 2842 494f 202a 6269 6f2c  nread0(BIO *bio,
0017d10: 2063 6861 7220 2a2a 6275 6629 3b0a 696e   char **buf);.in
0017d20: 7420 4249 4f5f 6e72 6561 6428 4249 4f20  t BIO_nread(BIO 
0017d30: 2a62 696f 2c20 6368 6172 202a 2a62 7566  *bio, char **buf
0017d40: 2c20 696e 7420 6e75 6d29 3b0a 696e 7420  , int num);.int 
0017d50: 4249 4f5f 6e77 7269 7465 3028 4249 4f20  BIO_nwrite0(BIO 
0017d60: 2a62 696f 2c20 6368 6172 202a 2a62 7566  *bio, char **buf
0017d70: 293b 0a69 6e74 2042 494f 5f6e 7772 6974  );.int BIO_nwrit
0017d80: 6528 4249 4f20 2a62 696f 2c20 6368 6172  e(BIO *bio, char
0017d90: 202a 2a62 7566 2c20 696e 7420 6e75 6d29   **buf, int num)
0017da0: 3b0a 0a6c 6f6e 6720 4249 4f5f 6465 6275  ;..long BIO_debu
0017db0: 675f 6361 6c6c 6261 636b 2842 494f 202a  g_callback(BIO *
0017dc0: 6269 6f2c 696e 7420 636d 642c 636f 6e73  bio,int cmd,cons
0017dd0: 7420 6368 6172 202a 6172 6770 2c69 6e74  t char *argp,int
0017de0: 2061 7267 692c 0a20 6c6f 6e67 2061 7267   argi,. long arg
0017df0: 6c2c 6c6f 6e67 2072 6574 293b 0a0a 4249  l,long ret);..BI
0017e00: 4f5f 4d45 5448 4f44 202a 4249 4f5f 735f  O_METHOD *BIO_s_
0017e10: 6d65 6d28 766f 6964 293b 0a42 494f 202a  mem(void);.BIO *
0017e20: 4249 4f5f 6e65 775f 6d65 6d5f 6275 6628  BIO_new_mem_buf(
0017e30: 766f 6964 202a 6275 662c 2069 6e74 206c  void *buf, int l
0017e40: 656e 293b 0a42 494f 5f4d 4554 484f 4420  en);.BIO_METHOD 
0017e50: 2a42 494f 5f73 5f73 6f63 6b65 7428 766f  *BIO_s_socket(vo
0017e60: 6964 293b 0a42 494f 5f4d 4554 484f 4420  id);.BIO_METHOD 
0017e70: 2a42 494f 5f73 5f63 6f6e 6e65 6374 2876  *BIO_s_connect(v
0017e80: 6f69 6429 3b0a 4249 4f5f 4d45 5448 4f44  oid);.BIO_METHOD
0017e90: 202a 4249 4f5f 735f 6163 6365 7074 2876   *BIO_s_accept(v
0017ea0: 6f69 6429 3b0a 4249 4f5f 4d45 5448 4f44  oid);.BIO_METHOD
0017eb0: 202a 4249 4f5f 735f 6664 2876 6f69 6429   *BIO_s_fd(void)
0017ec0: 3b0a 0a42 494f 5f4d 4554 484f 4420 2a42  ;..BIO_METHOD *B
0017ed0: 494f 5f73 5f6c 6f67 2876 6f69 6429 3b0a  IO_s_log(void);.
0017ee0: 0a42 494f 5f4d 4554 484f 4420 2a42 494f  .BIO_METHOD *BIO
0017ef0: 5f73 5f62 696f 2876 6f69 6429 3b0a 4249  _s_bio(void);.BI
0017f00: 4f5f 4d45 5448 4f44 202a 4249 4f5f 735f  O_METHOD *BIO_s_
0017f10: 6e75 6c6c 2876 6f69 6429 3b0a 4249 4f5f  null(void);.BIO_
0017f20: 4d45 5448 4f44 202a 4249 4f5f 665f 6e75  METHOD *BIO_f_nu
0017f30: 6c6c 2876 6f69 6429 3b0a 4249 4f5f 4d45  ll(void);.BIO_ME
0017f40: 5448 4f44 202a 4249 4f5f 665f 6275 6666  THOD *BIO_f_buff
0017f50: 6572 2876 6f69 6429 3b0a 0a0a 0a42 494f  er(void);....BIO
0017f60: 5f4d 4554 484f 4420 2a42 494f 5f66 5f6e  _METHOD *BIO_f_n
0017f70: 6269 6f5f 7465 7374 2876 6f69 6429 3b0a  bio_test(void);.
0017f80: 0a42 494f 5f4d 4554 484f 4420 2a42 494f  .BIO_METHOD *BIO
0017f90: 5f73 5f64 6174 6167 7261 6d28 766f 6964  _s_datagram(void
0017fa0: 293b 0a0a 0a0a 0a0a 0a0a 696e 7420 4249  );........int BI
0017fb0: 4f5f 736f 636b 5f73 686f 756c 645f 7265  O_sock_should_re
0017fc0: 7472 7928 696e 7420 6929 3b0a 696e 7420  try(int i);.int 
0017fd0: 4249 4f5f 736f 636b 5f6e 6f6e 5f66 6174  BIO_sock_non_fat
0017fe0: 616c 5f65 7272 6f72 2869 6e74 2065 7272  al_error(int err
0017ff0: 6f72 293b 0a69 6e74 2042 494f 5f64 6772  or);.int BIO_dgr
0018000: 616d 5f6e 6f6e 5f66 6174 616c 5f65 7272  am_non_fatal_err
0018010: 6f72 2869 6e74 2065 7272 6f72 293b 0a0a  or(int error);..
0018020: 696e 7420 4249 4f5f 6664 5f73 686f 756c  int BIO_fd_shoul
0018030: 645f 7265 7472 7928 696e 7420 6929 3b0a  d_retry(int i);.
0018040: 696e 7420 4249 4f5f 6664 5f6e 6f6e 5f66  int BIO_fd_non_f
0018050: 6174 616c 5f65 7272 6f72 2869 6e74 2065  atal_error(int e
0018060: 7272 6f72 293b 0a69 6e74 2042 494f 5f64  rror);.int BIO_d
0018070: 756d 705f 6362 2869 6e74 2028 2a63 6229  ump_cb(int (*cb)
0018080: 2863 6f6e 7374 2076 6f69 6420 2a64 6174  (const void *dat
0018090: 612c 2073 697a 655f 7420 6c65 6e2c 2076  a, size_t len, v
00180a0: 6f69 6420 2a75 292c 0a20 2076 6f69 6420  oid *u),.  void 
00180b0: 2a75 2c20 636f 6e73 7420 6368 6172 202a  *u, const char *
00180c0: 732c 2069 6e74 206c 656e 293b 0a69 6e74  s, int len);.int
00180d0: 2042 494f 5f64 756d 705f 696e 6465 6e74   BIO_dump_indent
00180e0: 5f63 6228 696e 7420 282a 6362 2928 636f  _cb(int (*cb)(co
00180f0: 6e73 7420 766f 6964 202a 6461 7461 2c20  nst void *data, 
0018100: 7369 7a65 5f74 206c 656e 2c20 766f 6964  size_t len, void
0018110: 202a 7529 2c0a 2020 2020 2020 2020 2076   *u),.         v
0018120: 6f69 6420 2a75 2c20 636f 6e73 7420 6368  oid *u, const ch
0018130: 6172 202a 732c 2069 6e74 206c 656e 2c20  ar *s, int len, 
0018140: 696e 7420 696e 6465 6e74 293b 0a69 6e74  int indent);.int
0018150: 2042 494f 5f64 756d 7028 4249 4f20 2a62   BIO_dump(BIO *b
0018160: 2c63 6f6e 7374 2063 6861 7220 2a62 7974  ,const char *byt
0018170: 6573 2c69 6e74 206c 656e 293b 0a69 6e74  es,int len);.int
0018180: 2042 494f 5f64 756d 705f 696e 6465 6e74   BIO_dump_indent
0018190: 2842 494f 202a 622c 636f 6e73 7420 6368  (BIO *b,const ch
00181a0: 6172 202a 6279 7465 732c 696e 7420 6c65  ar *bytes,int le
00181b0: 6e2c 696e 7420 696e 6465 6e74 293b 0a0a  n,int indent);..
00181c0: 696e 7420 4249 4f5f 6475 6d70 5f66 7028  int BIO_dump_fp(
00181d0: 4649 4c45 202a 6670 2c20 636f 6e73 7420  FILE *fp, const 
00181e0: 6368 6172 202a 732c 2069 6e74 206c 656e  char *s, int len
00181f0: 293b 0a69 6e74 2042 494f 5f64 756d 705f  );.int BIO_dump_
0018200: 696e 6465 6e74 5f66 7028 4649 4c45 202a  indent_fp(FILE *
0018210: 6670 2c20 636f 6e73 7420 6368 6172 202a  fp, const char *
0018220: 732c 2069 6e74 206c 656e 2c20 696e 7420  s, int len, int 
0018230: 696e 6465 6e74 293b 0a0a 7374 7275 6374  indent);..struct
0018240: 2068 6f73 7465 6e74 202a 4249 4f5f 6765   hostent *BIO_ge
0018250: 7468 6f73 7462 796e 616d 6528 636f 6e73  thostbyname(cons
0018260: 7420 6368 6172 202a 6e61 6d65 293b 0a23  t char *name);.#
0018270: 2037 3138 2022 2f75 7372 2f69 6e63 6c75   718 "/usr/inclu
0018280: 6465 2f6f 7065 6e73 736c 2f62 696f 2e68  de/openssl/bio.h
0018290: 2220 3320 340a 696e 7420 4249 4f5f 736f  " 3 4.int BIO_so
00182a0: 636b 5f65 7272 6f72 2869 6e74 2073 6f63  ck_error(int soc
00182b0: 6b29 3b0a 696e 7420 4249 4f5f 736f 636b  k);.int BIO_sock
00182c0: 6574 5f69 6f63 746c 2869 6e74 2066 642c  et_ioctl(int fd,
00182d0: 206c 6f6e 6720 7479 7065 2c20 766f 6964   long type, void
00182e0: 202a 6172 6729 3b0a 696e 7420 4249 4f5f   *arg);.int BIO_
00182f0: 736f 636b 6574 5f6e 6269 6f28 696e 7420  socket_nbio(int 
0018300: 6664 2c69 6e74 206d 6f64 6529 3b0a 696e  fd,int mode);.in
0018310: 7420 4249 4f5f 6765 745f 706f 7274 2863  t BIO_get_port(c
0018320: 6f6e 7374 2063 6861 7220 2a73 7472 2c20  onst char *str, 
0018330: 756e 7369 676e 6564 2073 686f 7274 202a  unsigned short *
0018340: 706f 7274 5f70 7472 293b 0a69 6e74 2042  port_ptr);.int B
0018350: 494f 5f67 6574 5f68 6f73 745f 6970 2863  IO_get_host_ip(c
0018360: 6f6e 7374 2063 6861 7220 2a73 7472 2c20  onst char *str, 
0018370: 756e 7369 676e 6564 2063 6861 7220 2a69  unsigned char *i
0018380: 7029 3b0a 696e 7420 4249 4f5f 6765 745f  p);.int BIO_get_
0018390: 6163 6365 7074 5f73 6f63 6b65 7428 6368  accept_socket(ch
00183a0: 6172 202a 686f 7374 5f70 6f72 742c 696e  ar *host_port,in
00183b0: 7420 6d6f 6465 293b 0a69 6e74 2042 494f  t mode);.int BIO
00183c0: 5f61 6363 6570 7428 696e 7420 736f 636b  _accept(int sock
00183d0: 2c63 6861 7220 2a2a 6970 5f70 6f72 7429  ,char **ip_port)
00183e0: 3b0a 696e 7420 4249 4f5f 736f 636b 5f69  ;.int BIO_sock_i
00183f0: 6e69 7428 766f 6964 2029 3b0a 766f 6964  nit(void );.void
0018400: 2042 494f 5f73 6f63 6b5f 636c 6561 6e75   BIO_sock_cleanu
0018410: 7028 766f 6964 293b 0a69 6e74 2042 494f  p(void);.int BIO
0018420: 5f73 6574 5f74 6370 5f6e 6465 6c61 7928  _set_tcp_ndelay(
0018430: 696e 7420 736f 636b 2c69 6e74 2074 7572  int sock,int tur
0018440: 6e5f 6f6e 293b 0a0a 4249 4f20 2a42 494f  n_on);..BIO *BIO
0018450: 5f6e 6577 5f73 6f63 6b65 7428 696e 7420  _new_socket(int 
0018460: 736f 636b 2c20 696e 7420 636c 6f73 655f  sock, int close_
0018470: 666c 6167 293b 0a42 494f 202a 4249 4f5f  flag);.BIO *BIO_
0018480: 6e65 775f 6467 7261 6d28 696e 7420 6664  new_dgram(int fd
0018490: 2c20 696e 7420 636c 6f73 655f 666c 6167  , int close_flag
00184a0: 293b 0a23 2037 3430 2022 2f75 7372 2f69  );.# 740 "/usr/i
00184b0: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f62  nclude/openssl/b
00184c0: 696f 2e68 2220 3320 340a 4249 4f20 2a42  io.h" 3 4.BIO *B
00184d0: 494f 5f6e 6577 5f66 6428 696e 7420 6664  IO_new_fd(int fd
00184e0: 2c20 696e 7420 636c 6f73 655f 666c 6167  , int close_flag
00184f0: 293b 0a42 494f 202a 4249 4f5f 6e65 775f  );.BIO *BIO_new_
0018500: 636f 6e6e 6563 7428 6368 6172 202a 686f  connect(char *ho
0018510: 7374 5f70 6f72 7429 3b0a 4249 4f20 2a42  st_port);.BIO *B
0018520: 494f 5f6e 6577 5f61 6363 6570 7428 6368  IO_new_accept(ch
0018530: 6172 202a 686f 7374 5f70 6f72 7429 3b0a  ar *host_port);.
0018540: 0a69 6e74 2042 494f 5f6e 6577 5f62 696f  .int BIO_new_bio
0018550: 5f70 6169 7228 4249 4f20 2a2a 6269 6f31  _pair(BIO **bio1
0018560: 2c20 7369 7a65 5f74 2077 7269 7465 6275  , size_t writebu
0018570: 6631 2c0a 2042 494f 202a 2a62 696f 322c  f1,. BIO **bio2,
0018580: 2073 697a 655f 7420 7772 6974 6562 7566   size_t writebuf
0018590: 3229 3b0a 0a0a 0a0a 0a76 6f69 6420 4249  2);......void BI
00185a0: 4f5f 636f 7079 5f6e 6578 745f 7265 7472  O_copy_next_retr
00185b0: 7928 4249 4f20 2a62 293b 0a23 2037 3630  y(BIO *b);.# 760
00185c0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
00185d0: 7065 6e73 736c 2f62 696f 2e68 2220 3320  penssl/bio.h" 3 
00185e0: 340a 696e 7420 4249 4f5f 7072 696e 7466  4.int BIO_printf
00185f0: 2842 494f 202a 6269 6f2c 2063 6f6e 7374  (BIO *bio, const
0018600: 2063 6861 7220 2a66 6f72 6d61 742c 202e   char *format, .
0018610: 2e2e 290a 205f 5f61 7474 7269 6275 7465  ..). __attribute
0018620: 5f5f 2828 5f5f 666f 726d 6174 5f5f 285f  __((__format__(_
0018630: 5f70 7269 6e74 665f 5f2c 322c 3329 2929  _printf__,2,3)))
0018640: 3b0a 696e 7420 4249 4f5f 7670 7269 6e74  ;.int BIO_vprint
0018650: 6628 4249 4f20 2a62 696f 2c20 636f 6e73  f(BIO *bio, cons
0018660: 7420 6368 6172 202a 666f 726d 6174 2c20  t char *format, 
0018670: 7661 5f6c 6973 7420 6172 6773 290a 205f  va_list args). _
0018680: 5f61 7474 7269 6275 7465 5f5f 2828 5f5f  _attribute__((__
0018690: 666f 726d 6174 5f5f 285f 5f70 7269 6e74  format__(__print
00186a0: 665f 5f2c 322c 3029 2929 3b0a 696e 7420  f__,2,0)));.int 
00186b0: 4249 4f5f 736e 7072 696e 7466 2863 6861  BIO_snprintf(cha
00186c0: 7220 2a62 7566 2c20 7369 7a65 5f74 206e  r *buf, size_t n
00186d0: 2c20 636f 6e73 7420 6368 6172 202a 666f  , const char *fo
00186e0: 726d 6174 2c20 2e2e 2e29 0a20 5f5f 6174  rmat, ...). __at
00186f0: 7472 6962 7574 655f 5f28 285f 5f66 6f72  tribute__((__for
0018700: 6d61 745f 5f28 5f5f 7072 696e 7466 5f5f  mat__(__printf__
0018710: 2c33 2c34 2929 293b 0a69 6e74 2042 494f  ,3,4)));.int BIO
0018720: 5f76 736e 7072 696e 7466 2863 6861 7220  _vsnprintf(char 
0018730: 2a62 7566 2c20 7369 7a65 5f74 206e 2c20  *buf, size_t n, 
0018740: 636f 6e73 7420 6368 6172 202a 666f 726d  const char *form
0018750: 6174 2c20 7661 5f6c 6973 7420 6172 6773  at, va_list args
0018760: 290a 205f 5f61 7474 7269 6275 7465 5f5f  ). __attribute__
0018770: 2828 5f5f 666f 726d 6174 5f5f 285f 5f70  ((__format__(__p
0018780: 7269 6e74 665f 5f2c 332c 3029 2929 3b0a  rintf__,3,0)));.
0018790: 0a0a 0a0a 0a0a 766f 6964 2045 5252 5f6c  ......void ERR_l
00187a0: 6f61 645f 4249 4f5f 7374 7269 6e67 7328  oad_BIO_strings(
00187b0: 766f 6964 293b 0a23 2031 3537 2022 7373  void);.# 157 "ss
00187c0: 6c5f 6c6f 636c 2e68 2220 320a 0a0a 2320  l_locl.h" 2...# 
00187d0: 3120 222f 7573 722f 696e 636c 7564 652f  1 "/usr/include/
00187e0: 6f70 656e 7373 6c2f 7273 612e 6822 2031  openssl/rsa.h" 1
00187f0: 2033 2034 0a23 2036 3220 222f 7573 722f   3 4.# 62 "/usr/
0018800: 696e 636c 7564 652f 6f70 656e 7373 6c2f  include/openssl/
0018810: 7273 612e 6822 2033 2034 0a23 2031 2022  rsa.h" 3 4.# 1 "
0018820: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
0018830: 6e73 736c 2f61 736e 312e 6822 2031 2033  nssl/asn1.h" 1 3
0018840: 2034 0a23 2036 3320 222f 7573 722f 696e   4.# 63 "/usr/in
0018850: 636c 7564 652f 6f70 656e 7373 6c2f 6173  clude/openssl/as
0018860: 6e31 2e68 2220 3320 340a 2320 3120 222f  n1.h" 3 4.# 1 "/
0018870: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
0018880: 7373 6c2f 655f 6f73 322e 6822 2031 2033  ssl/e_os2.h" 1 3
0018890: 2034 0a23 2035 3620 222f 7573 722f 696e   4.# 56 "/usr/in
00188a0: 636c 7564 652f 6f70 656e 7373 6c2f 655f  clude/openssl/e_
00188b0: 6f73 322e 6822 2033 2034 0a23 2031 2022  os2.h" 3 4.# 1 "
00188c0: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
00188d0: 6e73 736c 2f6f 7065 6e73 736c 636f 6e66  nssl/opensslconf
00188e0: 2e68 2220 3120 3320 340a 2320 3334 2022  .h" 1 3 4.# 34 "
00188f0: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
0018900: 6e73 736c 2f6f 7065 6e73 736c 636f 6e66  nssl/opensslconf
0018910: 2e68 2220 3320 340a 2320 3120 222f 7573  .h" 3 4.# 1 "/us
0018920: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
0018930: 6c2f 6f70 656e 7373 6c63 6f6e 662d 7838  l/opensslconf-x8
0018940: 365f 3634 2e68 2220 3120 3320 340a 2320  6_64.h" 1 3 4.# 
0018950: 3335 2022 2f75 7372 2f69 6e63 6c75 6465  35 "/usr/include
0018960: 2f6f 7065 6e73 736c 2f6f 7065 6e73 736c  /openssl/openssl
0018970: 636f 6e66 2e68 2220 3220 3320 340a 2320  conf.h" 2 3 4.# 
0018980: 3537 2022 2f75 7372 2f69 6e63 6c75 6465  57 "/usr/include
0018990: 2f6f 7065 6e73 736c 2f65 5f6f 7332 2e68  /openssl/e_os2.h
00189a0: 2220 3220 3320 340a 2320 3634 2022 2f75  " 2 3 4.# 64 "/u
00189b0: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
00189c0: 736c 2f61 736e 312e 6822 2032 2033 2034  sl/asn1.h" 2 3 4
00189d0: 0a23 2037 3420 222f 7573 722f 696e 636c  .# 74 "/usr/incl
00189e0: 7564 652f 6f70 656e 7373 6c2f 6173 6e31  ude/openssl/asn1
00189f0: 2e68 2220 3320 340a 2320 3120 222f 7573  .h" 3 4.# 1 "/us
0018a00: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
0018a10: 6c2f 626e 2e68 2220 3120 3320 340a 2320  l/bn.h" 1 3 4.# 
0018a20: 3132 3820 222f 7573 722f 696e 636c 7564  128 "/usr/includ
0018a30: 652f 6f70 656e 7373 6c2f 626e 2e68 2220  e/openssl/bn.h" 
0018a40: 3320 340a 2320 3120 222f 7573 722f 696e  3 4.# 1 "/usr/in
0018a50: 636c 7564 652f 6f70 656e 7373 6c2f 655f  clude/openssl/e_
0018a60: 6f73 322e 6822 2031 2033 2034 0a23 2035  os2.h" 1 3 4.# 5
0018a70: 3620 222f 7573 722f 696e 636c 7564 652f  6 "/usr/include/
0018a80: 6f70 656e 7373 6c2f 655f 6f73 322e 6822  openssl/e_os2.h"
0018a90: 2033 2034 0a23 2031 2022 2f75 7372 2f69   3 4.# 1 "/usr/i
0018aa0: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f6f  nclude/openssl/o
0018ab0: 7065 6e73 736c 636f 6e66 2e68 2220 3120  pensslconf.h" 1 
0018ac0: 3320 340a 2320 3334 2022 2f75 7372 2f69  3 4.# 34 "/usr/i
0018ad0: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f6f  nclude/openssl/o
0018ae0: 7065 6e73 736c 636f 6e66 2e68 2220 3320  pensslconf.h" 3 
0018af0: 340a 2320 3120 222f 7573 722f 696e 636c  4.# 1 "/usr/incl
0018b00: 7564 652f 6f70 656e 7373 6c2f 6f70 656e  ude/openssl/open
0018b10: 7373 6c63 6f6e 662d 7838 365f 3634 2e68  sslconf-x86_64.h
0018b20: 2220 3120 3320 340a 2320 3335 2022 2f75  " 1 3 4.# 35 "/u
0018b30: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
0018b40: 736c 2f6f 7065 6e73 736c 636f 6e66 2e68  sl/opensslconf.h
0018b50: 2220 3220 3320 340a 2320 3537 2022 2f75  " 2 3 4.# 57 "/u
0018b60: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
0018b70: 736c 2f65 5f6f 7332 2e68 2220 3220 3320  sl/e_os2.h" 2 3 
0018b80: 340a 2320 3132 3920 222f 7573 722f 696e  4.# 129 "/usr/in
0018b90: 636c 7564 652f 6f70 656e 7373 6c2f 626e  clude/openssl/bn
0018ba0: 2e68 2220 3220 3320 340a 2320 3331 3820  .h" 2 3 4.# 318 
0018bb0: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
0018bc0: 656e 7373 6c2f 626e 2e68 2220 3320 340a  enssl/bn.h" 3 4.
0018bd0: 7374 7275 6374 2062 6967 6e75 6d5f 7374  struct bignum_st
0018be0: 0a20 7b0a 2075 6e73 6967 6e65 6420 6c6f  . {. unsigned lo
0018bf0: 6e67 202a 643b 0a20 696e 7420 746f 703b  ng *d;. int top;
0018c00: 0a0a 2069 6e74 2064 6d61 783b 0a20 696e  .. int dmax;. in
0018c10: 7420 6e65 673b 0a20 696e 7420 666c 6167  t neg;. int flag
0018c20: 733b 0a20 7d3b 0a0a 0a73 7472 7563 7420  s;. };...struct 
0018c30: 626e 5f6d 6f6e 745f 6374 785f 7374 0a20  bn_mont_ctx_st. 
0018c40: 7b0a 2069 6e74 2072 693b 0a20 4249 474e  {. int ri;. BIGN
0018c50: 554d 2052 523b 0a20 4249 474e 554d 204e  UM RR;. BIGNUM N
0018c60: 3b0a 2042 4947 4e55 4d20 4e69 3b0a 0a20  ;. BIGNUM Ni;.. 
0018c70: 756e 7369 676e 6564 206c 6f6e 6720 6e30  unsigned long n0
0018c80: 5b32 5d3b 0a0a 2069 6e74 2066 6c61 6773  [2];.. int flags
0018c90: 3b0a 207d 3b0a 0a0a 0a0a 7374 7275 6374  ;. };.....struct
0018ca0: 2062 6e5f 7265 6370 5f63 7478 5f73 740a   bn_recp_ctx_st.
0018cb0: 207b 0a20 4249 474e 554d 204e 3b0a 2042   {. BIGNUM N;. B
0018cc0: 4947 4e55 4d20 4e72 3b0a 2069 6e74 206e  IGNUM Nr;. int n
0018cd0: 756d 5f62 6974 733b 0a20 696e 7420 7368  um_bits;. int sh
0018ce0: 6966 743b 0a20 696e 7420 666c 6167 733b  ift;. int flags;
0018cf0: 0a20 7d3b 0a0a 0a73 7472 7563 7420 626e  . };...struct bn
0018d00: 5f67 656e 6362 5f73 740a 207b 0a20 756e  _gencb_st. {. un
0018d10: 7369 676e 6564 2069 6e74 2076 6572 3b0a  signed int ver;.
0018d20: 2076 6f69 6420 2a61 7267 3b0a 2075 6e69   void *arg;. uni
0018d30: 6f6e 0a20 207b 0a0a 2020 766f 6964 2028  on.  {..  void (
0018d40: 2a63 625f 3129 2869 6e74 2c20 696e 742c  *cb_1)(int, int,
0018d50: 2076 6f69 6420 2a29 3b0a 0a20 2069 6e74   void *);..  int
0018d60: 2028 2a63 625f 3229 2869 6e74 2c20 696e   (*cb_2)(int, in
0018d70: 742c 2042 4e5f 4745 4e43 4220 2a29 3b0a  t, BN_GENCB *);.
0018d80: 2020 7d20 6362 3b0a 207d 3b0a 0a69 6e74    } cb;. };..int
0018d90: 2042 4e5f 4745 4e43 425f 6361 6c6c 2842   BN_GENCB_call(B
0018da0: 4e5f 4745 4e43 4220 2a63 622c 2069 6e74  N_GENCB *cb, int
0018db0: 2061 2c20 696e 7420 6229 3b0a 2320 3432   a, int b);.# 42
0018dc0: 3520 222f 7573 722f 696e 636c 7564 652f  5 "/usr/include/
0018dd0: 6f70 656e 7373 6c2f 626e 2e68 2220 3320  openssl/bn.h" 3 
0018de0: 340a 636f 6e73 7420 4249 474e 554d 202a  4.const BIGNUM *
0018df0: 424e 5f76 616c 7565 5f6f 6e65 2876 6f69  BN_value_one(voi
0018e00: 6429 3b0a 6368 6172 202a 2042 4e5f 6f70  d);.char * BN_op
0018e10: 7469 6f6e 7328 766f 6964 293b 0a42 4e5f  tions(void);.BN_
0018e20: 4354 5820 2a42 4e5f 4354 585f 6e65 7728  CTX *BN_CTX_new(
0018e30: 766f 6964 293b 0a0a 766f 6964 2042 4e5f  void);..void BN_
0018e40: 4354 585f 696e 6974 2842 4e5f 4354 5820  CTX_init(BN_CTX 
0018e50: 2a63 293b 0a0a 766f 6964 2042 4e5f 4354  *c);..void BN_CT
0018e60: 585f 6672 6565 2842 4e5f 4354 5820 2a63  X_free(BN_CTX *c
0018e70: 293b 0a76 6f69 6420 424e 5f43 5458 5f73  );.void BN_CTX_s
0018e80: 7461 7274 2842 4e5f 4354 5820 2a63 7478  tart(BN_CTX *ctx
0018e90: 293b 0a42 4947 4e55 4d20 2a42 4e5f 4354  );.BIGNUM *BN_CT
0018ea0: 585f 6765 7428 424e 5f43 5458 202a 6374  X_get(BN_CTX *ct
0018eb0: 7829 3b0a 766f 6964 2042 4e5f 4354 585f  x);.void BN_CTX_
0018ec0: 656e 6428 424e 5f43 5458 202a 6374 7829  end(BN_CTX *ctx)
0018ed0: 3b0a 696e 7420 424e 5f72 616e 6428 4249  ;.int BN_rand(BI
0018ee0: 474e 554d 202a 726e 642c 2069 6e74 2062  GNUM *rnd, int b
0018ef0: 6974 732c 2069 6e74 2074 6f70 2c69 6e74  its, int top,int
0018f00: 2062 6f74 746f 6d29 3b0a 696e 7420 424e   bottom);.int BN
0018f10: 5f70 7365 7564 6f5f 7261 6e64 2842 4947  _pseudo_rand(BIG
0018f20: 4e55 4d20 2a72 6e64 2c20 696e 7420 6269  NUM *rnd, int bi
0018f30: 7473 2c20 696e 7420 746f 702c 696e 7420  ts, int top,int 
0018f40: 626f 7474 6f6d 293b 0a69 6e74 2042 4e5f  bottom);.int BN_
0018f50: 7261 6e64 5f72 616e 6765 2842 4947 4e55  rand_range(BIGNU
0018f60: 4d20 2a72 6e64 2c20 636f 6e73 7420 4249  M *rnd, const BI
0018f70: 474e 554d 202a 7261 6e67 6529 3b0a 696e  GNUM *range);.in
0018f80: 7420 424e 5f70 7365 7564 6f5f 7261 6e64  t BN_pseudo_rand
0018f90: 5f72 616e 6765 2842 4947 4e55 4d20 2a72  _range(BIGNUM *r
0018fa0: 6e64 2c20 636f 6e73 7420 4249 474e 554d  nd, const BIGNUM
0018fb0: 202a 7261 6e67 6529 3b0a 696e 7420 424e   *range);.int BN
0018fc0: 5f6e 756d 5f62 6974 7328 636f 6e73 7420  _num_bits(const 
0018fd0: 4249 474e 554d 202a 6129 3b0a 696e 7420  BIGNUM *a);.int 
0018fe0: 424e 5f6e 756d 5f62 6974 735f 776f 7264  BN_num_bits_word
0018ff0: 2875 6e73 6967 6e65 6420 6c6f 6e67 293b  (unsigned long);
0019000: 0a42 4947 4e55 4d20 2a42 4e5f 6e65 7728  .BIGNUM *BN_new(
0019010: 766f 6964 293b 0a76 6f69 6420 424e 5f69  void);.void BN_i
0019020: 6e69 7428 4249 474e 554d 202a 293b 0a76  nit(BIGNUM *);.v
0019030: 6f69 6420 424e 5f63 6c65 6172 5f66 7265  oid BN_clear_fre
0019040: 6528 4249 474e 554d 202a 6129 3b0a 4249  e(BIGNUM *a);.BI
0019050: 474e 554d 202a 424e 5f63 6f70 7928 4249  GNUM *BN_copy(BI
0019060: 474e 554d 202a 612c 2063 6f6e 7374 2042  GNUM *a, const B
0019070: 4947 4e55 4d20 2a62 293b 0a76 6f69 6420  IGNUM *b);.void 
0019080: 424e 5f73 7761 7028 4249 474e 554d 202a  BN_swap(BIGNUM *
0019090: 612c 2042 4947 4e55 4d20 2a62 293b 0a42  a, BIGNUM *b);.B
00190a0: 4947 4e55 4d20 2a42 4e5f 6269 6e32 626e  IGNUM *BN_bin2bn
00190b0: 2863 6f6e 7374 2075 6e73 6967 6e65 6420  (const unsigned 
00190c0: 6368 6172 202a 732c 696e 7420 6c65 6e2c  char *s,int len,
00190d0: 4249 474e 554d 202a 7265 7429 3b0a 696e  BIGNUM *ret);.in
00190e0: 7420 424e 5f62 6e32 6269 6e28 636f 6e73  t BN_bn2bin(cons
00190f0: 7420 4249 474e 554d 202a 612c 2075 6e73  t BIGNUM *a, uns
0019100: 6967 6e65 6420 6368 6172 202a 746f 293b  igned char *to);
0019110: 0a42 4947 4e55 4d20 2a42 4e5f 6d70 6932  .BIGNUM *BN_mpi2
0019120: 626e 2863 6f6e 7374 2075 6e73 6967 6e65  bn(const unsigne
0019130: 6420 6368 6172 202a 732c 696e 7420 6c65  d char *s,int le
0019140: 6e2c 4249 474e 554d 202a 7265 7429 3b0a  n,BIGNUM *ret);.
0019150: 696e 7420 424e 5f62 6e32 6d70 6928 636f  int BN_bn2mpi(co
0019160: 6e73 7420 4249 474e 554d 202a 612c 2075  nst BIGNUM *a, u
0019170: 6e73 6967 6e65 6420 6368 6172 202a 746f  nsigned char *to
0019180: 293b 0a69 6e74 2042 4e5f 7375 6228 4249  );.int BN_sub(BI
0019190: 474e 554d 202a 722c 2063 6f6e 7374 2042  GNUM *r, const B
00191a0: 4947 4e55 4d20 2a61 2c20 636f 6e73 7420  IGNUM *a, const 
00191b0: 4249 474e 554d 202a 6229 3b0a 696e 7420  BIGNUM *b);.int 
00191c0: 424e 5f75 7375 6228 4249 474e 554d 202a  BN_usub(BIGNUM *
00191d0: 722c 2063 6f6e 7374 2042 4947 4e55 4d20  r, const BIGNUM 
00191e0: 2a61 2c20 636f 6e73 7420 4249 474e 554d  *a, const BIGNUM
00191f0: 202a 6229 3b0a 696e 7420 424e 5f75 6164   *b);.int BN_uad
0019200: 6428 4249 474e 554d 202a 722c 2063 6f6e  d(BIGNUM *r, con
0019210: 7374 2042 4947 4e55 4d20 2a61 2c20 636f  st BIGNUM *a, co
0019220: 6e73 7420 4249 474e 554d 202a 6229 3b0a  nst BIGNUM *b);.
0019230: 696e 7420 424e 5f61 6464 2842 4947 4e55  int BN_add(BIGNU
0019240: 4d20 2a72 2c20 636f 6e73 7420 4249 474e  M *r, const BIGN
0019250: 554d 202a 612c 2063 6f6e 7374 2042 4947  UM *a, const BIG
0019260: 4e55 4d20 2a62 293b 0a69 6e74 2042 4e5f  NUM *b);.int BN_
0019270: 6d75 6c28 4249 474e 554d 202a 722c 2063  mul(BIGNUM *r, c
0019280: 6f6e 7374 2042 4947 4e55 4d20 2a61 2c20  onst BIGNUM *a, 
0019290: 636f 6e73 7420 4249 474e 554d 202a 622c  const BIGNUM *b,
00192a0: 2042 4e5f 4354 5820 2a63 7478 293b 0a69   BN_CTX *ctx);.i
00192b0: 6e74 2042 4e5f 7371 7228 4249 474e 554d  nt BN_sqr(BIGNUM
00192c0: 202a 722c 2063 6f6e 7374 2042 4947 4e55   *r, const BIGNU
00192d0: 4d20 2a61 2c42 4e5f 4354 5820 2a63 7478  M *a,BN_CTX *ctx
00192e0: 293b 0a0a 0a0a 0a76 6f69 6420 424e 5f73  );.....void BN_s
00192f0: 6574 5f6e 6567 6174 6976 6528 4249 474e  et_negative(BIGN
0019300: 554d 202a 622c 2069 6e74 206e 293b 0a0a  UM *b, int n);..
0019310: 0a0a 0a0a 0a69 6e74 2042 4e5f 6469 7628  .....int BN_div(
0019320: 4249 474e 554d 202a 6476 2c20 4249 474e  BIGNUM *dv, BIGN
0019330: 554d 202a 7265 6d2c 2063 6f6e 7374 2042  UM *rem, const B
0019340: 4947 4e55 4d20 2a6d 2c20 636f 6e73 7420  IGNUM *m, const 
0019350: 4249 474e 554d 202a 642c 0a20 424e 5f43  BIGNUM *d,. BN_C
0019360: 5458 202a 6374 7829 3b0a 0a69 6e74 2042  TX *ctx);..int B
0019370: 4e5f 6e6e 6d6f 6428 4249 474e 554d 202a  N_nnmod(BIGNUM *
0019380: 722c 2063 6f6e 7374 2042 4947 4e55 4d20  r, const BIGNUM 
0019390: 2a6d 2c20 636f 6e73 7420 4249 474e 554d  *m, const BIGNUM
00193a0: 202a 642c 2042 4e5f 4354 5820 2a63 7478   *d, BN_CTX *ctx
00193b0: 293b 0a69 6e74 2042 4e5f 6d6f 645f 6164  );.int BN_mod_ad
00193c0: 6428 4249 474e 554d 202a 722c 2063 6f6e  d(BIGNUM *r, con
00193d0: 7374 2042 4947 4e55 4d20 2a61 2c20 636f  st BIGNUM *a, co
00193e0: 6e73 7420 4249 474e 554d 202a 622c 2063  nst BIGNUM *b, c
00193f0: 6f6e 7374 2042 4947 4e55 4d20 2a6d 2c20  onst BIGNUM *m, 
0019400: 424e 5f43 5458 202a 6374 7829 3b0a 696e  BN_CTX *ctx);.in
0019410: 7420 424e 5f6d 6f64 5f61 6464 5f71 7569  t BN_mod_add_qui
0019420: 636b 2842 4947 4e55 4d20 2a72 2c20 636f  ck(BIGNUM *r, co
0019430: 6e73 7420 4249 474e 554d 202a 612c 2063  nst BIGNUM *a, c
0019440: 6f6e 7374 2042 4947 4e55 4d20 2a62 2c20  onst BIGNUM *b, 
0019450: 636f 6e73 7420 4249 474e 554d 202a 6d29  const BIGNUM *m)
0019460: 3b0a 696e 7420 424e 5f6d 6f64 5f73 7562  ;.int BN_mod_sub
0019470: 2842 4947 4e55 4d20 2a72 2c20 636f 6e73  (BIGNUM *r, cons
0019480: 7420 4249 474e 554d 202a 612c 2063 6f6e  t BIGNUM *a, con
0019490: 7374 2042 4947 4e55 4d20 2a62 2c20 636f  st BIGNUM *b, co
00194a0: 6e73 7420 4249 474e 554d 202a 6d2c 2042  nst BIGNUM *m, B
00194b0: 4e5f 4354 5820 2a63 7478 293b 0a69 6e74  N_CTX *ctx);.int
00194c0: 2042 4e5f 6d6f 645f 7375 625f 7175 6963   BN_mod_sub_quic
00194d0: 6b28 4249 474e 554d 202a 722c 2063 6f6e  k(BIGNUM *r, con
00194e0: 7374 2042 4947 4e55 4d20 2a61 2c20 636f  st BIGNUM *a, co
00194f0: 6e73 7420 4249 474e 554d 202a 622c 2063  nst BIGNUM *b, c
0019500: 6f6e 7374 2042 4947 4e55 4d20 2a6d 293b  onst BIGNUM *m);
0019510: 0a69 6e74 2042 4e5f 6d6f 645f 6d75 6c28  .int BN_mod_mul(
0019520: 4249 474e 554d 202a 722c 2063 6f6e 7374  BIGNUM *r, const
0019530: 2042 4947 4e55 4d20 2a61 2c20 636f 6e73   BIGNUM *a, cons
0019540: 7420 4249 474e 554d 202a 622c 0a20 636f  t BIGNUM *b,. co
0019550: 6e73 7420 4249 474e 554d 202a 6d2c 2042  nst BIGNUM *m, B
0019560: 4e5f 4354 5820 2a63 7478 293b 0a69 6e74  N_CTX *ctx);.int
0019570: 2042 4e5f 6d6f 645f 7371 7228 4249 474e   BN_mod_sqr(BIGN
0019580: 554d 202a 722c 2063 6f6e 7374 2042 4947  UM *r, const BIG
0019590: 4e55 4d20 2a61 2c20 636f 6e73 7420 4249  NUM *a, const BI
00195a0: 474e 554d 202a 6d2c 2042 4e5f 4354 5820  GNUM *m, BN_CTX 
00195b0: 2a63 7478 293b 0a69 6e74 2042 4e5f 6d6f  *ctx);.int BN_mo
00195c0: 645f 6c73 6869 6674 3128 4249 474e 554d  d_lshift1(BIGNUM
00195d0: 202a 722c 2063 6f6e 7374 2042 4947 4e55   *r, const BIGNU
00195e0: 4d20 2a61 2c20 636f 6e73 7420 4249 474e  M *a, const BIGN
00195f0: 554d 202a 6d2c 2042 4e5f 4354 5820 2a63  UM *m, BN_CTX *c
0019600: 7478 293b 0a69 6e74 2042 4e5f 6d6f 645f  tx);.int BN_mod_
0019610: 6c73 6869 6674 315f 7175 6963 6b28 4249  lshift1_quick(BI
0019620: 474e 554d 202a 722c 2063 6f6e 7374 2042  GNUM *r, const B
0019630: 4947 4e55 4d20 2a61 2c20 636f 6e73 7420  IGNUM *a, const 
0019640: 4249 474e 554d 202a 6d29 3b0a 696e 7420  BIGNUM *m);.int 
0019650: 424e 5f6d 6f64 5f6c 7368 6966 7428 4249  BN_mod_lshift(BI
0019660: 474e 554d 202a 722c 2063 6f6e 7374 2042  GNUM *r, const B
0019670: 4947 4e55 4d20 2a61 2c20 696e 7420 6e2c  IGNUM *a, int n,
0019680: 2063 6f6e 7374 2042 4947 4e55 4d20 2a6d   const BIGNUM *m
0019690: 2c20 424e 5f43 5458 202a 6374 7829 3b0a  , BN_CTX *ctx);.
00196a0: 696e 7420 424e 5f6d 6f64 5f6c 7368 6966  int BN_mod_lshif
00196b0: 745f 7175 6963 6b28 4249 474e 554d 202a  t_quick(BIGNUM *
00196c0: 722c 2063 6f6e 7374 2042 4947 4e55 4d20  r, const BIGNUM 
00196d0: 2a61 2c20 696e 7420 6e2c 2063 6f6e 7374  *a, int n, const
00196e0: 2042 4947 4e55 4d20 2a6d 293b 0a0a 756e   BIGNUM *m);..un
00196f0: 7369 676e 6564 206c 6f6e 6720 424e 5f6d  signed long BN_m
0019700: 6f64 5f77 6f72 6428 636f 6e73 7420 4249  od_word(const BI
0019710: 474e 554d 202a 612c 2075 6e73 6967 6e65  GNUM *a, unsigne
0019720: 6420 6c6f 6e67 2077 293b 0a75 6e73 6967  d long w);.unsig
0019730: 6e65 6420 6c6f 6e67 2042 4e5f 6469 765f  ned long BN_div_
0019740: 776f 7264 2842 4947 4e55 4d20 2a61 2c20  word(BIGNUM *a, 
0019750: 756e 7369 676e 6564 206c 6f6e 6720 7729  unsigned long w)
0019760: 3b0a 696e 7420 424e 5f6d 756c 5f77 6f72  ;.int BN_mul_wor
0019770: 6428 4249 474e 554d 202a 612c 2075 6e73  d(BIGNUM *a, uns
0019780: 6967 6e65 6420 6c6f 6e67 2077 293b 0a69  igned long w);.i
0019790: 6e74 2042 4e5f 6164 645f 776f 7264 2842  nt BN_add_word(B
00197a0: 4947 4e55 4d20 2a61 2c20 756e 7369 676e  IGNUM *a, unsign
00197b0: 6564 206c 6f6e 6720 7729 3b0a 696e 7420  ed long w);.int 
00197c0: 424e 5f73 7562 5f77 6f72 6428 4249 474e  BN_sub_word(BIGN
00197d0: 554d 202a 612c 2075 6e73 6967 6e65 6420  UM *a, unsigned 
00197e0: 6c6f 6e67 2077 293b 0a69 6e74 2042 4e5f  long w);.int BN_
00197f0: 7365 745f 776f 7264 2842 4947 4e55 4d20  set_word(BIGNUM 
0019800: 2a61 2c20 756e 7369 676e 6564 206c 6f6e  *a, unsigned lon
0019810: 6720 7729 3b0a 756e 7369 676e 6564 206c  g w);.unsigned l
0019820: 6f6e 6720 424e 5f67 6574 5f77 6f72 6428  ong BN_get_word(
0019830: 636f 6e73 7420 4249 474e 554d 202a 6129  const BIGNUM *a)
0019840: 3b0a 0a69 6e74 2042 4e5f 636d 7028 636f  ;..int BN_cmp(co
0019850: 6e73 7420 4249 474e 554d 202a 612c 2063  nst BIGNUM *a, c
0019860: 6f6e 7374 2042 4947 4e55 4d20 2a62 293b  onst BIGNUM *b);
0019870: 0a76 6f69 6420 424e 5f66 7265 6528 4249  .void BN_free(BI
0019880: 474e 554d 202a 6129 3b0a 696e 7420 424e  GNUM *a);.int BN
0019890: 5f69 735f 6269 745f 7365 7428 636f 6e73  _is_bit_set(cons
00198a0: 7420 4249 474e 554d 202a 612c 2069 6e74  t BIGNUM *a, int
00198b0: 206e 293b 0a69 6e74 2042 4e5f 6c73 6869   n);.int BN_lshi
00198c0: 6674 2842 4947 4e55 4d20 2a72 2c20 636f  ft(BIGNUM *r, co
00198d0: 6e73 7420 4249 474e 554d 202a 612c 2069  nst BIGNUM *a, i
00198e0: 6e74 206e 293b 0a69 6e74 2042 4e5f 6c73  nt n);.int BN_ls
00198f0: 6869 6674 3128 4249 474e 554d 202a 722c  hift1(BIGNUM *r,
0019900: 2063 6f6e 7374 2042 4947 4e55 4d20 2a61   const BIGNUM *a
0019910: 293b 0a69 6e74 2042 4e5f 6578 7028 4249  );.int BN_exp(BI
0019920: 474e 554d 202a 722c 2063 6f6e 7374 2042  GNUM *r, const B
0019930: 4947 4e55 4d20 2a61 2c20 636f 6e73 7420  IGNUM *a, const 
0019940: 4249 474e 554d 202a 702c 424e 5f43 5458  BIGNUM *p,BN_CTX
0019950: 202a 6374 7829 3b0a 0a69 6e74 2042 4e5f   *ctx);..int BN_
0019960: 6d6f 645f 6578 7028 4249 474e 554d 202a  mod_exp(BIGNUM *
0019970: 722c 2063 6f6e 7374 2042 4947 4e55 4d20  r, const BIGNUM 
0019980: 2a61 2c20 636f 6e73 7420 4249 474e 554d  *a, const BIGNUM
0019990: 202a 702c 0a20 636f 6e73 7420 4249 474e   *p,. const BIGN
00199a0: 554d 202a 6d2c 424e 5f43 5458 202a 6374  UM *m,BN_CTX *ct
00199b0: 7829 3b0a 696e 7420 424e 5f6d 6f64 5f65  x);.int BN_mod_e
00199c0: 7870 5f6d 6f6e 7428 4249 474e 554d 202a  xp_mont(BIGNUM *
00199d0: 722c 2063 6f6e 7374 2042 4947 4e55 4d20  r, const BIGNUM 
00199e0: 2a61 2c20 636f 6e73 7420 4249 474e 554d  *a, const BIGNUM
00199f0: 202a 702c 0a20 636f 6e73 7420 4249 474e   *p,. const BIGN
0019a00: 554d 202a 6d2c 2042 4e5f 4354 5820 2a63  UM *m, BN_CTX *c
0019a10: 7478 2c20 424e 5f4d 4f4e 545f 4354 5820  tx, BN_MONT_CTX 
0019a20: 2a6d 5f63 7478 293b 0a69 6e74 2042 4e5f  *m_ctx);.int BN_
0019a30: 6d6f 645f 6578 705f 6d6f 6e74 5f63 6f6e  mod_exp_mont_con
0019a40: 7374 7469 6d65 2842 4947 4e55 4d20 2a72  sttime(BIGNUM *r
0019a50: 722c 2063 6f6e 7374 2042 4947 4e55 4d20  r, const BIGNUM 
0019a60: 2a61 2c20 636f 6e73 7420 4249 474e 554d  *a, const BIGNUM
0019a70: 202a 702c 0a20 636f 6e73 7420 4249 474e   *p,. const BIGN
0019a80: 554d 202a 6d2c 2042 4e5f 4354 5820 2a63  UM *m, BN_CTX *c
0019a90: 7478 2c20 424e 5f4d 4f4e 545f 4354 5820  tx, BN_MONT_CTX 
0019aa0: 2a69 6e5f 6d6f 6e74 293b 0a69 6e74 2042  *in_mont);.int B
0019ab0: 4e5f 6d6f 645f 6578 705f 6d6f 6e74 5f77  N_mod_exp_mont_w
0019ac0: 6f72 6428 4249 474e 554d 202a 722c 2075  ord(BIGNUM *r, u
0019ad0: 6e73 6967 6e65 6420 6c6f 6e67 2061 2c20  nsigned long a, 
0019ae0: 636f 6e73 7420 4249 474e 554d 202a 702c  const BIGNUM *p,
0019af0: 0a20 636f 6e73 7420 4249 474e 554d 202a  . const BIGNUM *
0019b00: 6d2c 2042 4e5f 4354 5820 2a63 7478 2c20  m, BN_CTX *ctx, 
0019b10: 424e 5f4d 4f4e 545f 4354 5820 2a6d 5f63  BN_MONT_CTX *m_c
0019b20: 7478 293b 0a69 6e74 2042 4e5f 6d6f 645f  tx);.int BN_mod_
0019b30: 6578 7032 5f6d 6f6e 7428 4249 474e 554d  exp2_mont(BIGNUM
0019b40: 202a 722c 2063 6f6e 7374 2042 4947 4e55   *r, const BIGNU
0019b50: 4d20 2a61 312c 2063 6f6e 7374 2042 4947  M *a1, const BIG
0019b60: 4e55 4d20 2a70 312c 0a20 636f 6e73 7420  NUM *p1,. const 
0019b70: 4249 474e 554d 202a 6132 2c20 636f 6e73  BIGNUM *a2, cons
0019b80: 7420 4249 474e 554d 202a 7032 2c63 6f6e  t BIGNUM *p2,con
0019b90: 7374 2042 4947 4e55 4d20 2a6d 2c0a 2042  st BIGNUM *m,. B
0019ba0: 4e5f 4354 5820 2a63 7478 2c42 4e5f 4d4f  N_CTX *ctx,BN_MO
0019bb0: 4e54 5f43 5458 202a 6d5f 6374 7829 3b0a  NT_CTX *m_ctx);.
0019bc0: 696e 7420 424e 5f6d 6f64 5f65 7870 5f73  int BN_mod_exp_s
0019bd0: 696d 706c 6528 4249 474e 554d 202a 722c  imple(BIGNUM *r,
0019be0: 2063 6f6e 7374 2042 4947 4e55 4d20 2a61   const BIGNUM *a
0019bf0: 2c20 636f 6e73 7420 4249 474e 554d 202a  , const BIGNUM *
0019c00: 702c 0a20 636f 6e73 7420 4249 474e 554d  p,. const BIGNUM
0019c10: 202a 6d2c 424e 5f43 5458 202a 6374 7829   *m,BN_CTX *ctx)
0019c20: 3b0a 0a69 6e74 2042 4e5f 6d61 736b 5f62  ;..int BN_mask_b
0019c30: 6974 7328 4249 474e 554d 202a 612c 696e  its(BIGNUM *a,in
0019c40: 7420 6e29 3b0a 0a69 6e74 2042 4e5f 7072  t n);..int BN_pr
0019c50: 696e 745f 6670 2846 494c 4520 2a66 702c  int_fp(FILE *fp,
0019c60: 2063 6f6e 7374 2042 4947 4e55 4d20 2a61   const BIGNUM *a
0019c70: 293b 0a0a 0a69 6e74 2042 4e5f 7072 696e  );...int BN_prin
0019c80: 7428 4249 4f20 2a66 702c 2063 6f6e 7374  t(BIO *fp, const
0019c90: 2042 4947 4e55 4d20 2a61 293b 0a0a 0a0a   BIGNUM *a);....
0019ca0: 696e 7420 424e 5f72 6563 6970 726f 6361  int BN_reciproca
0019cb0: 6c28 4249 474e 554d 202a 722c 2063 6f6e  l(BIGNUM *r, con
0019cc0: 7374 2042 4947 4e55 4d20 2a6d 2c20 696e  st BIGNUM *m, in
0019cd0: 7420 6c65 6e2c 2042 4e5f 4354 5820 2a63  t len, BN_CTX *c
0019ce0: 7478 293b 0a69 6e74 2042 4e5f 7273 6869  tx);.int BN_rshi
0019cf0: 6674 2842 4947 4e55 4d20 2a72 2c20 636f  ft(BIGNUM *r, co
0019d00: 6e73 7420 4249 474e 554d 202a 612c 2069  nst BIGNUM *a, i
0019d10: 6e74 206e 293b 0a69 6e74 2042 4e5f 7273  nt n);.int BN_rs
0019d20: 6869 6674 3128 4249 474e 554d 202a 722c  hift1(BIGNUM *r,
0019d30: 2063 6f6e 7374 2042 4947 4e55 4d20 2a61   const BIGNUM *a
0019d40: 293b 0a76 6f69 6420 424e 5f63 6c65 6172  );.void BN_clear
0019d50: 2842 4947 4e55 4d20 2a61 293b 0a42 4947  (BIGNUM *a);.BIG
0019d60: 4e55 4d20 2a42 4e5f 6475 7028 636f 6e73  NUM *BN_dup(cons
0019d70: 7420 4249 474e 554d 202a 6129 3b0a 696e  t BIGNUM *a);.in
0019d80: 7420 424e 5f75 636d 7028 636f 6e73 7420  t BN_ucmp(const 
0019d90: 4249 474e 554d 202a 612c 2063 6f6e 7374  BIGNUM *a, const
0019da0: 2042 4947 4e55 4d20 2a62 293b 0a69 6e74   BIGNUM *b);.int
0019db0: 2042 4e5f 7365 745f 6269 7428 4249 474e   BN_set_bit(BIGN
0019dc0: 554d 202a 612c 2069 6e74 206e 293b 0a69  UM *a, int n);.i
0019dd0: 6e74 2042 4e5f 636c 6561 725f 6269 7428  nt BN_clear_bit(
0019de0: 4249 474e 554d 202a 612c 2069 6e74 206e  BIGNUM *a, int n
0019df0: 293b 0a63 6861 7220 2a20 424e 5f62 6e32  );.char * BN_bn2
0019e00: 6865 7828 636f 6e73 7420 4249 474e 554d  hex(const BIGNUM
0019e10: 202a 6129 3b0a 6368 6172 202a 2042 4e5f   *a);.char * BN_
0019e20: 626e 3264 6563 2863 6f6e 7374 2042 4947  bn2dec(const BIG
0019e30: 4e55 4d20 2a61 293b 0a69 6e74 2042 4e5f  NUM *a);.int BN_
0019e40: 6865 7832 626e 2842 4947 4e55 4d20 2a2a  hex2bn(BIGNUM **
0019e50: 612c 2063 6f6e 7374 2063 6861 7220 2a73  a, const char *s
0019e60: 7472 293b 0a69 6e74 2042 4e5f 6465 6332  tr);.int BN_dec2
0019e70: 626e 2842 4947 4e55 4d20 2a2a 612c 2063  bn(BIGNUM **a, c
0019e80: 6f6e 7374 2063 6861 7220 2a73 7472 293b  onst char *str);
0019e90: 0a69 6e74 2042 4e5f 6173 6332 626e 2842  .int BN_asc2bn(B
0019ea0: 4947 4e55 4d20 2a2a 612c 2063 6f6e 7374  IGNUM **a, const
0019eb0: 2063 6861 7220 2a73 7472 293b 0a69 6e74   char *str);.int
0019ec0: 2042 4e5f 6763 6428 4249 474e 554d 202a   BN_gcd(BIGNUM *
0019ed0: 722c 636f 6e73 7420 4249 474e 554d 202a  r,const BIGNUM *
0019ee0: 612c 636f 6e73 7420 4249 474e 554d 202a  a,const BIGNUM *
0019ef0: 622c 424e 5f43 5458 202a 6374 7829 3b0a  b,BN_CTX *ctx);.
0019f00: 696e 7420 424e 5f6b 726f 6e65 636b 6572  int BN_kronecker
0019f10: 2863 6f6e 7374 2042 4947 4e55 4d20 2a61  (const BIGNUM *a
0019f20: 2c63 6f6e 7374 2042 4947 4e55 4d20 2a62  ,const BIGNUM *b
0019f30: 2c42 4e5f 4354 5820 2a63 7478 293b 0a42  ,BN_CTX *ctx);.B
0019f40: 4947 4e55 4d20 2a42 4e5f 6d6f 645f 696e  IGNUM *BN_mod_in
0019f50: 7665 7273 6528 4249 474e 554d 202a 7265  verse(BIGNUM *re
0019f60: 742c 0a20 636f 6e73 7420 4249 474e 554d  t,. const BIGNUM
0019f70: 202a 612c 2063 6f6e 7374 2042 4947 4e55   *a, const BIGNU
0019f80: 4d20 2a6e 2c42 4e5f 4354 5820 2a63 7478  M *n,BN_CTX *ctx
0019f90: 293b 0a42 4947 4e55 4d20 2a42 4e5f 6d6f  );.BIGNUM *BN_mo
0019fa0: 645f 7371 7274 2842 4947 4e55 4d20 2a72  d_sqrt(BIGNUM *r
0019fb0: 6574 2c0a 2063 6f6e 7374 2042 4947 4e55  et,. const BIGNU
0019fc0: 4d20 2a61 2c20 636f 6e73 7420 4249 474e  M *a, const BIGN
0019fd0: 554d 202a 6e2c 424e 5f43 5458 202a 6374  UM *n,BN_CTX *ct
0019fe0: 7829 3b0a 0a0a 0a42 4947 4e55 4d20 2a42  x);....BIGNUM *B
0019ff0: 4e5f 6765 6e65 7261 7465 5f70 7269 6d65  N_generate_prime
001a000: 2842 4947 4e55 4d20 2a72 6574 2c69 6e74  (BIGNUM *ret,int
001a010: 2062 6974 732c 696e 7420 7361 6665 2c0a   bits,int safe,.
001a020: 2063 6f6e 7374 2042 4947 4e55 4d20 2a61   const BIGNUM *a
001a030: 6464 2c20 636f 6e73 7420 4249 474e 554d  dd, const BIGNUM
001a040: 202a 7265 6d2c 0a20 766f 6964 2028 2a63   *rem,. void (*c
001a050: 616c 6c62 6163 6b29 2869 6e74 2c69 6e74  allback)(int,int
001a060: 2c76 6f69 6420 2a29 2c76 6f69 6420 2a63  ,void *),void *c
001a070: 625f 6172 6729 3b0a 696e 7420 424e 5f69  b_arg);.int BN_i
001a080: 735f 7072 696d 6528 636f 6e73 7420 4249  s_prime(const BI
001a090: 474e 554d 202a 702c 696e 7420 6e63 6865  GNUM *p,int nche
001a0a0: 636b 732c 0a20 766f 6964 2028 2a63 616c  cks,. void (*cal
001a0b0: 6c62 6163 6b29 2869 6e74 2c69 6e74 2c76  lback)(int,int,v
001a0c0: 6f69 6420 2a29 2c0a 2042 4e5f 4354 5820  oid *),. BN_CTX 
001a0d0: 2a63 7478 2c76 6f69 6420 2a63 625f 6172  *ctx,void *cb_ar
001a0e0: 6729 3b0a 696e 7420 424e 5f69 735f 7072  g);.int BN_is_pr
001a0f0: 696d 655f 6661 7374 7465 7374 2863 6f6e  ime_fasttest(con
001a100: 7374 2042 4947 4e55 4d20 2a70 2c69 6e74  st BIGNUM *p,int
001a110: 206e 6368 6563 6b73 2c0a 2076 6f69 6420   nchecks,. void 
001a120: 282a 6361 6c6c 6261 636b 2928 696e 742c  (*callback)(int,
001a130: 696e 742c 766f 6964 202a 292c 424e 5f43  int,void *),BN_C
001a140: 5458 202a 6374 782c 766f 6964 202a 6362  TX *ctx,void *cb
001a150: 5f61 7267 2c0a 2069 6e74 2064 6f5f 7472  _arg,. int do_tr
001a160: 6961 6c5f 6469 7669 7369 6f6e 293b 0a0a  ial_division);..
001a170: 0a0a 696e 7420 424e 5f67 656e 6572 6174  ..int BN_generat
001a180: 655f 7072 696d 655f 6578 2842 4947 4e55  e_prime_ex(BIGNU
001a190: 4d20 2a72 6574 2c69 6e74 2062 6974 732c  M *ret,int bits,
001a1a0: 696e 7420 7361 6665 2c20 636f 6e73 7420  int safe, const 
001a1b0: 4249 474e 554d 202a 6164 642c 0a20 2063  BIGNUM *add,.  c
001a1c0: 6f6e 7374 2042 4947 4e55 4d20 2a72 656d  onst BIGNUM *rem
001a1d0: 2c20 424e 5f47 454e 4342 202a 6362 293b  , BN_GENCB *cb);
001a1e0: 0a69 6e74 2042 4e5f 6973 5f70 7269 6d65  .int BN_is_prime
001a1f0: 5f65 7828 636f 6e73 7420 4249 474e 554d  _ex(const BIGNUM
001a200: 202a 702c 696e 7420 6e63 6865 636b 732c   *p,int nchecks,
001a210: 2042 4e5f 4354 5820 2a63 7478 2c20 424e   BN_CTX *ctx, BN
001a220: 5f47 454e 4342 202a 6362 293b 0a69 6e74  _GENCB *cb);.int
001a230: 2042 4e5f 6973 5f70 7269 6d65 5f66 6173   BN_is_prime_fas
001a240: 7474 6573 745f 6578 2863 6f6e 7374 2042  ttest_ex(const B
001a250: 4947 4e55 4d20 2a70 2c69 6e74 206e 6368  IGNUM *p,int nch
001a260: 6563 6b73 2c20 424e 5f43 5458 202a 6374  ecks, BN_CTX *ct
001a270: 782c 0a20 2069 6e74 2064 6f5f 7472 6961  x,.  int do_tria
001a280: 6c5f 6469 7669 7369 6f6e 2c20 424e 5f47  l_division, BN_G
001a290: 454e 4342 202a 6362 293b 0a0a 696e 7420  ENCB *cb);..int 
001a2a0: 424e 5f58 3933 315f 6765 6e65 7261 7465  BN_X931_generate
001a2b0: 5f58 7071 2842 4947 4e55 4d20 2a58 702c  _Xpq(BIGNUM *Xp,
001a2c0: 2042 4947 4e55 4d20 2a58 712c 2069 6e74   BIGNUM *Xq, int
001a2d0: 206e 6269 7473 2c20 424e 5f43 5458 202a   nbits, BN_CTX *
001a2e0: 6374 7829 3b0a 0a69 6e74 2042 4e5f 5839  ctx);..int BN_X9
001a2f0: 3331 5f64 6572 6976 655f 7072 696d 655f  31_derive_prime_
001a300: 6578 2842 4947 4e55 4d20 2a70 2c20 4249  ex(BIGNUM *p, BI
001a310: 474e 554d 202a 7031 2c20 4249 474e 554d  GNUM *p1, BIGNUM
001a320: 202a 7032 2c0a 2020 2063 6f6e 7374 2042   *p2,.   const B
001a330: 4947 4e55 4d20 2a58 702c 2063 6f6e 7374  IGNUM *Xp, const
001a340: 2042 4947 4e55 4d20 2a58 7031 2c20 636f   BIGNUM *Xp1, co
001a350: 6e73 7420 4249 474e 554d 202a 5870 322c  nst BIGNUM *Xp2,
001a360: 0a20 2020 636f 6e73 7420 4249 474e 554d  .   const BIGNUM
001a370: 202a 652c 2042 4e5f 4354 5820 2a63 7478   *e, BN_CTX *ctx
001a380: 2c20 424e 5f47 454e 4342 202a 6362 293b  , BN_GENCB *cb);
001a390: 0a69 6e74 2042 4e5f 5839 3331 5f67 656e  .int BN_X931_gen
001a3a0: 6572 6174 655f 7072 696d 655f 6578 2842  erate_prime_ex(B
001a3b0: 4947 4e55 4d20 2a70 2c20 4249 474e 554d  IGNUM *p, BIGNUM
001a3c0: 202a 7031 2c20 4249 474e 554d 202a 7032   *p1, BIGNUM *p2
001a3d0: 2c0a 2020 2042 4947 4e55 4d20 2a58 7031  ,.   BIGNUM *Xp1
001a3e0: 2c20 4249 474e 554d 202a 5870 322c 0a20  , BIGNUM *Xp2,. 
001a3f0: 2020 636f 6e73 7420 4249 474e 554d 202a    const BIGNUM *
001a400: 5870 2c0a 2020 2063 6f6e 7374 2042 4947  Xp,.   const BIG
001a410: 4e55 4d20 2a65 2c20 424e 5f43 5458 202a  NUM *e, BN_CTX *
001a420: 6374 782c 0a20 2020 424e 5f47 454e 4342  ctx,.   BN_GENCB
001a430: 202a 6362 293b 0a0a 424e 5f4d 4f4e 545f   *cb);..BN_MONT_
001a440: 4354 5820 2a42 4e5f 4d4f 4e54 5f43 5458  CTX *BN_MONT_CTX
001a450: 5f6e 6577 2876 6f69 6420 293b 0a76 6f69  _new(void );.voi
001a460: 6420 424e 5f4d 4f4e 545f 4354 585f 696e  d BN_MONT_CTX_in
001a470: 6974 2842 4e5f 4d4f 4e54 5f43 5458 202a  it(BN_MONT_CTX *
001a480: 6374 7829 3b0a 696e 7420 424e 5f6d 6f64  ctx);.int BN_mod
001a490: 5f6d 756c 5f6d 6f6e 7467 6f6d 6572 7928  _mul_montgomery(
001a4a0: 4249 474e 554d 202a 722c 636f 6e73 7420  BIGNUM *r,const 
001a4b0: 4249 474e 554d 202a 612c 636f 6e73 7420  BIGNUM *a,const 
001a4c0: 4249 474e 554d 202a 622c 0a20 424e 5f4d  BIGNUM *b,. BN_M
001a4d0: 4f4e 545f 4354 5820 2a6d 6f6e 742c 2042  ONT_CTX *mont, B
001a4e0: 4e5f 4354 5820 2a63 7478 293b 0a0a 0a69  N_CTX *ctx);...i
001a4f0: 6e74 2042 4e5f 6672 6f6d 5f6d 6f6e 7467  nt BN_from_montg
001a500: 6f6d 6572 7928 4249 474e 554d 202a 722c  omery(BIGNUM *r,
001a510: 636f 6e73 7420 4249 474e 554d 202a 612c  const BIGNUM *a,
001a520: 0a20 424e 5f4d 4f4e 545f 4354 5820 2a6d  . BN_MONT_CTX *m
001a530: 6f6e 742c 2042 4e5f 4354 5820 2a63 7478  ont, BN_CTX *ctx
001a540: 293b 0a76 6f69 6420 424e 5f4d 4f4e 545f  );.void BN_MONT_
001a550: 4354 585f 6672 6565 2842 4e5f 4d4f 4e54  CTX_free(BN_MONT
001a560: 5f43 5458 202a 6d6f 6e74 293b 0a69 6e74  _CTX *mont);.int
001a570: 2042 4e5f 4d4f 4e54 5f43 5458 5f73 6574   BN_MONT_CTX_set
001a580: 2842 4e5f 4d4f 4e54 5f43 5458 202a 6d6f  (BN_MONT_CTX *mo
001a590: 6e74 2c63 6f6e 7374 2042 4947 4e55 4d20  nt,const BIGNUM 
001a5a0: 2a6d 6f64 2c42 4e5f 4354 5820 2a63 7478  *mod,BN_CTX *ctx
001a5b0: 293b 0a42 4e5f 4d4f 4e54 5f43 5458 202a  );.BN_MONT_CTX *
001a5c0: 424e 5f4d 4f4e 545f 4354 585f 636f 7079  BN_MONT_CTX_copy
001a5d0: 2842 4e5f 4d4f 4e54 5f43 5458 202a 746f  (BN_MONT_CTX *to
001a5e0: 2c42 4e5f 4d4f 4e54 5f43 5458 202a 6672  ,BN_MONT_CTX *fr
001a5f0: 6f6d 293b 0a42 4e5f 4d4f 4e54 5f43 5458  om);.BN_MONT_CTX
001a600: 202a 424e 5f4d 4f4e 545f 4354 585f 7365   *BN_MONT_CTX_se
001a610: 745f 6c6f 636b 6564 2842 4e5f 4d4f 4e54  t_locked(BN_MONT
001a620: 5f43 5458 202a 2a70 6d6f 6e74 2c20 696e  _CTX **pmont, in
001a630: 7420 6c6f 636b 2c0a 2020 2020 2063 6f6e  t lock,.     con
001a640: 7374 2042 4947 4e55 4d20 2a6d 6f64 2c20  st BIGNUM *mod, 
001a650: 424e 5f43 5458 202a 6374 7829 3b0a 0a0a  BN_CTX *ctx);...
001a660: 0a0a 0a42 4e5f 424c 494e 4449 4e47 202a  ...BN_BLINDING *
001a670: 424e 5f42 4c49 4e44 494e 475f 6e65 7728  BN_BLINDING_new(
001a680: 636f 6e73 7420 4249 474e 554d 202a 412c  const BIGNUM *A,
001a690: 2063 6f6e 7374 2042 4947 4e55 4d20 2a41   const BIGNUM *A
001a6a0: 692c 2042 4947 4e55 4d20 2a6d 6f64 293b  i, BIGNUM *mod);
001a6b0: 0a76 6f69 6420 424e 5f42 4c49 4e44 494e  .void BN_BLINDIN
001a6c0: 475f 6672 6565 2842 4e5f 424c 494e 4449  G_free(BN_BLINDI
001a6d0: 4e47 202a 6229 3b0a 696e 7420 424e 5f42  NG *b);.int BN_B
001a6e0: 4c49 4e44 494e 475f 7570 6461 7465 2842  LINDING_update(B
001a6f0: 4e5f 424c 494e 4449 4e47 202a 622c 424e  N_BLINDING *b,BN
001a700: 5f43 5458 202a 6374 7829 3b0a 696e 7420  _CTX *ctx);.int 
001a710: 424e 5f42 4c49 4e44 494e 475f 636f 6e76  BN_BLINDING_conv
001a720: 6572 7428 4249 474e 554d 202a 6e2c 2042  ert(BIGNUM *n, B
001a730: 4e5f 424c 494e 4449 4e47 202a 622c 2042  N_BLINDING *b, B
001a740: 4e5f 4354 5820 2a63 7478 293b 0a69 6e74  N_CTX *ctx);.int
001a750: 2042 4e5f 424c 494e 4449 4e47 5f69 6e76   BN_BLINDING_inv
001a760: 6572 7428 4249 474e 554d 202a 6e2c 2042  ert(BIGNUM *n, B
001a770: 4e5f 424c 494e 4449 4e47 202a 622c 2042  N_BLINDING *b, B
001a780: 4e5f 4354 5820 2a63 7478 293b 0a69 6e74  N_CTX *ctx);.int
001a790: 2042 4e5f 424c 494e 4449 4e47 5f63 6f6e   BN_BLINDING_con
001a7a0: 7665 7274 5f65 7828 4249 474e 554d 202a  vert_ex(BIGNUM *
001a7b0: 6e2c 2042 4947 4e55 4d20 2a72 2c20 424e  n, BIGNUM *r, BN
001a7c0: 5f42 4c49 4e44 494e 4720 2a62 2c20 424e  _BLINDING *b, BN
001a7d0: 5f43 5458 202a 293b 0a69 6e74 2042 4e5f  _CTX *);.int BN_
001a7e0: 424c 494e 4449 4e47 5f69 6e76 6572 745f  BLINDING_invert_
001a7f0: 6578 2842 4947 4e55 4d20 2a6e 2c20 636f  ex(BIGNUM *n, co
001a800: 6e73 7420 4249 474e 554d 202a 722c 2042  nst BIGNUM *r, B
001a810: 4e5f 424c 494e 4449 4e47 202a 622c 2042  N_BLINDING *b, B
001a820: 4e5f 4354 5820 2a29 3b0a 0a75 6e73 6967  N_CTX *);..unsig
001a830: 6e65 6420 6c6f 6e67 2042 4e5f 424c 494e  ned long BN_BLIN
001a840: 4449 4e47 5f67 6574 5f74 6872 6561 645f  DING_get_thread_
001a850: 6964 2863 6f6e 7374 2042 4e5f 424c 494e  id(const BN_BLIN
001a860: 4449 4e47 202a 293b 0a76 6f69 6420 424e  DING *);.void BN
001a870: 5f42 4c49 4e44 494e 475f 7365 745f 7468  _BLINDING_set_th
001a880: 7265 6164 5f69 6428 424e 5f42 4c49 4e44  read_id(BN_BLIND
001a890: 494e 4720 2a2c 2075 6e73 6967 6e65 6420  ING *, unsigned 
001a8a0: 6c6f 6e67 293b 0a0a 4352 5950 544f 5f54  long);..CRYPTO_T
001a8b0: 4852 4541 4449 4420 2a42 4e5f 424c 494e  HREADID *BN_BLIN
001a8c0: 4449 4e47 5f74 6872 6561 645f 6964 2842  DING_thread_id(B
001a8d0: 4e5f 424c 494e 4449 4e47 202a 293b 0a75  N_BLINDING *);.u
001a8e0: 6e73 6967 6e65 6420 6c6f 6e67 2042 4e5f  nsigned long BN_
001a8f0: 424c 494e 4449 4e47 5f67 6574 5f66 6c61  BLINDING_get_fla
001a900: 6773 2863 6f6e 7374 2042 4e5f 424c 494e  gs(const BN_BLIN
001a910: 4449 4e47 202a 293b 0a76 6f69 6420 424e  DING *);.void BN
001a920: 5f42 4c49 4e44 494e 475f 7365 745f 666c  _BLINDING_set_fl
001a930: 6167 7328 424e 5f42 4c49 4e44 494e 4720  ags(BN_BLINDING 
001a940: 2a2c 2075 6e73 6967 6e65 6420 6c6f 6e67  *, unsigned long
001a950: 293b 0a42 4e5f 424c 494e 4449 4e47 202a  );.BN_BLINDING *
001a960: 424e 5f42 4c49 4e44 494e 475f 6372 6561  BN_BLINDING_crea
001a970: 7465 5f70 6172 616d 2842 4e5f 424c 494e  te_param(BN_BLIN
001a980: 4449 4e47 202a 622c 0a20 636f 6e73 7420  DING *b,. const 
001a990: 4249 474e 554d 202a 652c 2042 4947 4e55  BIGNUM *e, BIGNU
001a9a0: 4d20 2a6d 2c20 424e 5f43 5458 202a 6374  M *m, BN_CTX *ct
001a9b0: 782c 0a20 696e 7420 282a 626e 5f6d 6f64  x,. int (*bn_mod
001a9c0: 5f65 7870 2928 4249 474e 554d 202a 722c  _exp)(BIGNUM *r,
001a9d0: 2063 6f6e 7374 2042 4947 4e55 4d20 2a61   const BIGNUM *a
001a9e0: 2c20 636f 6e73 7420 4249 474e 554d 202a  , const BIGNUM *
001a9f0: 702c 0a20 2020 2020 636f 6e73 7420 4249  p,.     const BI
001aa00: 474e 554d 202a 6d2c 2042 4e5f 4354 5820  GNUM *m, BN_CTX 
001aa10: 2a63 7478 2c20 424e 5f4d 4f4e 545f 4354  *ctx, BN_MONT_CT
001aa20: 5820 2a6d 5f63 7478 292c 0a20 424e 5f4d  X *m_ctx),. BN_M
001aa30: 4f4e 545f 4354 5820 2a6d 5f63 7478 293b  ONT_CTX *m_ctx);
001aa40: 0a0a 0a76 6f69 6420 424e 5f73 6574 5f70  ...void BN_set_p
001aa50: 6172 616d 7328 696e 7420 6d75 6c2c 696e  arams(int mul,in
001aa60: 7420 6869 6768 2c69 6e74 206c 6f77 2c69  t high,int low,i
001aa70: 6e74 206d 6f6e 7429 3b0a 696e 7420 424e  nt mont);.int BN
001aa80: 5f67 6574 5f70 6172 616d 7328 696e 7420  _get_params(int 
001aa90: 7768 6963 6829 3b0a 0a0a 766f 6964 2042  which);...void B
001aaa0: 4e5f 5245 4350 5f43 5458 5f69 6e69 7428  N_RECP_CTX_init(
001aab0: 424e 5f52 4543 505f 4354 5820 2a72 6563  BN_RECP_CTX *rec
001aac0: 7029 3b0a 424e 5f52 4543 505f 4354 5820  p);.BN_RECP_CTX 
001aad0: 2a42 4e5f 5245 4350 5f43 5458 5f6e 6577  *BN_RECP_CTX_new
001aae0: 2876 6f69 6429 3b0a 766f 6964 2042 4e5f  (void);.void BN_
001aaf0: 5245 4350 5f43 5458 5f66 7265 6528 424e  RECP_CTX_free(BN
001ab00: 5f52 4543 505f 4354 5820 2a72 6563 7029  _RECP_CTX *recp)
001ab10: 3b0a 696e 7420 424e 5f52 4543 505f 4354  ;.int BN_RECP_CT
001ab20: 585f 7365 7428 424e 5f52 4543 505f 4354  X_set(BN_RECP_CT
001ab30: 5820 2a72 6563 702c 636f 6e73 7420 4249  X *recp,const BI
001ab40: 474e 554d 202a 7264 6976 2c42 4e5f 4354  GNUM *rdiv,BN_CT
001ab50: 5820 2a63 7478 293b 0a69 6e74 2042 4e5f  X *ctx);.int BN_
001ab60: 6d6f 645f 6d75 6c5f 7265 6369 7072 6f63  mod_mul_reciproc
001ab70: 616c 2842 4947 4e55 4d20 2a72 2c20 636f  al(BIGNUM *r, co
001ab80: 6e73 7420 4249 474e 554d 202a 782c 2063  nst BIGNUM *x, c
001ab90: 6f6e 7374 2042 4947 4e55 4d20 2a79 2c0a  onst BIGNUM *y,.
001aba0: 2042 4e5f 5245 4350 5f43 5458 202a 7265   BN_RECP_CTX *re
001abb0: 6370 2c42 4e5f 4354 5820 2a63 7478 293b  cp,BN_CTX *ctx);
001abc0: 0a69 6e74 2042 4e5f 6d6f 645f 6578 705f  .int BN_mod_exp_
001abd0: 7265 6370 2842 4947 4e55 4d20 2a72 2c20  recp(BIGNUM *r, 
001abe0: 636f 6e73 7420 4249 474e 554d 202a 612c  const BIGNUM *a,
001abf0: 2063 6f6e 7374 2042 4947 4e55 4d20 2a70   const BIGNUM *p
001ac00: 2c0a 2063 6f6e 7374 2042 4947 4e55 4d20  ,. const BIGNUM 
001ac10: 2a6d 2c20 424e 5f43 5458 202a 6374 7829  *m, BN_CTX *ctx)
001ac20: 3b0a 696e 7420 424e 5f64 6976 5f72 6563  ;.int BN_div_rec
001ac30: 7028 4249 474e 554d 202a 6476 2c20 4249  p(BIGNUM *dv, BI
001ac40: 474e 554d 202a 7265 6d2c 2063 6f6e 7374  GNUM *rem, const
001ac50: 2042 4947 4e55 4d20 2a6d 2c0a 2042 4e5f   BIGNUM *m,. BN_
001ac60: 5245 4350 5f43 5458 202a 7265 6370 2c20  RECP_CTX *recp, 
001ac70: 424e 5f43 5458 202a 6374 7829 3b0a 0a0a  BN_CTX *ctx);...
001ac80: 0a0a 696e 7420 424e 5f6e 6973 745f 6d6f  ..int BN_nist_mo
001ac90: 645f 3139 3228 4249 474e 554d 202a 722c  d_192(BIGNUM *r,
001aca0: 2063 6f6e 7374 2042 4947 4e55 4d20 2a61   const BIGNUM *a
001acb0: 2c20 636f 6e73 7420 4249 474e 554d 202a  , const BIGNUM *
001acc0: 702c 2042 4e5f 4354 5820 2a63 7478 293b  p, BN_CTX *ctx);
001acd0: 0a69 6e74 2042 4e5f 6e69 7374 5f6d 6f64  .int BN_nist_mod
001ace0: 5f32 3234 2842 4947 4e55 4d20 2a72 2c20  _224(BIGNUM *r, 
001acf0: 636f 6e73 7420 4249 474e 554d 202a 612c  const BIGNUM *a,
001ad00: 2063 6f6e 7374 2042 4947 4e55 4d20 2a70   const BIGNUM *p
001ad10: 2c20 424e 5f43 5458 202a 6374 7829 3b0a  , BN_CTX *ctx);.
001ad20: 696e 7420 424e 5f6e 6973 745f 6d6f 645f  int BN_nist_mod_
001ad30: 3235 3628 4249 474e 554d 202a 722c 2063  256(BIGNUM *r, c
001ad40: 6f6e 7374 2042 4947 4e55 4d20 2a61 2c20  onst BIGNUM *a, 
001ad50: 636f 6e73 7420 4249 474e 554d 202a 702c  const BIGNUM *p,
001ad60: 2042 4e5f 4354 5820 2a63 7478 293b 0a69   BN_CTX *ctx);.i
001ad70: 6e74 2042 4e5f 6e69 7374 5f6d 6f64 5f33  nt BN_nist_mod_3
001ad80: 3834 2842 4947 4e55 4d20 2a72 2c20 636f  84(BIGNUM *r, co
001ad90: 6e73 7420 4249 474e 554d 202a 612c 2063  nst BIGNUM *a, c
001ada0: 6f6e 7374 2042 4947 4e55 4d20 2a70 2c20  onst BIGNUM *p, 
001adb0: 424e 5f43 5458 202a 6374 7829 3b0a 696e  BN_CTX *ctx);.in
001adc0: 7420 424e 5f6e 6973 745f 6d6f 645f 3532  t BN_nist_mod_52
001add0: 3128 4249 474e 554d 202a 722c 2063 6f6e  1(BIGNUM *r, con
001ade0: 7374 2042 4947 4e55 4d20 2a61 2c20 636f  st BIGNUM *a, co
001adf0: 6e73 7420 4249 474e 554d 202a 702c 2042  nst BIGNUM *p, B
001ae00: 4e5f 4354 5820 2a63 7478 293b 0a0a 636f  N_CTX *ctx);..co
001ae10: 6e73 7420 4249 474e 554d 202a 424e 5f67  nst BIGNUM *BN_g
001ae20: 6574 305f 6e69 7374 5f70 7269 6d65 5f31  et0_nist_prime_1
001ae30: 3932 2876 6f69 6429 3b0a 636f 6e73 7420  92(void);.const 
001ae40: 4249 474e 554d 202a 424e 5f67 6574 305f  BIGNUM *BN_get0_
001ae50: 6e69 7374 5f70 7269 6d65 5f32 3234 2876  nist_prime_224(v
001ae60: 6f69 6429 3b0a 636f 6e73 7420 4249 474e  oid);.const BIGN
001ae70: 554d 202a 424e 5f67 6574 305f 6e69 7374  UM *BN_get0_nist
001ae80: 5f70 7269 6d65 5f32 3536 2876 6f69 6429  _prime_256(void)
001ae90: 3b0a 636f 6e73 7420 4249 474e 554d 202a  ;.const BIGNUM *
001aea0: 424e 5f67 6574 305f 6e69 7374 5f70 7269  BN_get0_nist_pri
001aeb0: 6d65 5f33 3834 2876 6f69 6429 3b0a 636f  me_384(void);.co
001aec0: 6e73 7420 4249 474e 554d 202a 424e 5f67  nst BIGNUM *BN_g
001aed0: 6574 305f 6e69 7374 5f70 7269 6d65 5f35  et0_nist_prime_5
001aee0: 3231 2876 6f69 6429 3b0a 0a0a 0a0a 0a0a  21(void);.......
001aef0: 4249 474e 554d 202a 626e 5f65 7870 616e  BIGNUM *bn_expan
001af00: 6432 2842 4947 4e55 4d20 2a61 2c20 696e  d2(BIGNUM *a, in
001af10: 7420 776f 7264 7329 3b0a 0a42 4947 4e55  t words);..BIGNU
001af20: 4d20 2a62 6e5f 6475 705f 6578 7061 6e64  M *bn_dup_expand
001af30: 2863 6f6e 7374 2042 4947 4e55 4d20 2a61  (const BIGNUM *a
001af40: 2c20 696e 7420 776f 7264 7329 3b0a 2320  , int words);.# 
001af50: 3734 3420 222f 7573 722f 696e 636c 7564  744 "/usr/includ
001af60: 652f 6f70 656e 7373 6c2f 626e 2e68 2220  e/openssl/bn.h" 
001af70: 3320 340a 756e 7369 676e 6564 206c 6f6e  3 4.unsigned lon
001af80: 6720 626e 5f6d 756c 5f61 6464 5f77 6f72  g bn_mul_add_wor
001af90: 6473 2875 6e73 6967 6e65 6420 6c6f 6e67  ds(unsigned long
001afa0: 202a 7270 2c20 636f 6e73 7420 756e 7369   *rp, const unsi
001afb0: 676e 6564 206c 6f6e 6720 2a61 702c 2069  gned long *ap, i
001afc0: 6e74 206e 756d 2c20 756e 7369 676e 6564  nt num, unsigned
001afd0: 206c 6f6e 6720 7729 3b0a 756e 7369 676e   long w);.unsign
001afe0: 6564 206c 6f6e 6720 626e 5f6d 756c 5f77  ed long bn_mul_w
001aff0: 6f72 6473 2875 6e73 6967 6e65 6420 6c6f  ords(unsigned lo
001b000: 6e67 202a 7270 2c20 636f 6e73 7420 756e  ng *rp, const un
001b010: 7369 676e 6564 206c 6f6e 6720 2a61 702c  signed long *ap,
001b020: 2069 6e74 206e 756d 2c20 756e 7369 676e   int num, unsign
001b030: 6564 206c 6f6e 6720 7729 3b0a 766f 6964  ed long w);.void
001b040: 2062 6e5f 7371 725f 776f 7264 7328 756e   bn_sqr_words(un
001b050: 7369 676e 6564 206c 6f6e 6720 2a72 702c  signed long *rp,
001b060: 2063 6f6e 7374 2075 6e73 6967 6e65 6420   const unsigned 
001b070: 6c6f 6e67 202a 6170 2c20 696e 7420 6e75  long *ap, int nu
001b080: 6d29 3b0a 756e 7369 676e 6564 206c 6f6e  m);.unsigned lon
001b090: 6720 626e 5f64 6976 5f77 6f72 6473 2875  g bn_div_words(u
001b0a0: 6e73 6967 6e65 6420 6c6f 6e67 2068 2c20  nsigned long h, 
001b0b0: 756e 7369 676e 6564 206c 6f6e 6720 6c2c  unsigned long l,
001b0c0: 2075 6e73 6967 6e65 6420 6c6f 6e67 2064   unsigned long d
001b0d0: 293b 0a75 6e73 6967 6e65 6420 6c6f 6e67  );.unsigned long
001b0e0: 2062 6e5f 6164 645f 776f 7264 7328 756e   bn_add_words(un
001b0f0: 7369 676e 6564 206c 6f6e 6720 2a72 702c  signed long *rp,
001b100: 2063 6f6e 7374 2075 6e73 6967 6e65 6420   const unsigned 
001b110: 6c6f 6e67 202a 6170 2c20 636f 6e73 7420  long *ap, const 
001b120: 756e 7369 676e 6564 206c 6f6e 6720 2a62  unsigned long *b
001b130: 702c 696e 7420 6e75 6d29 3b0a 756e 7369  p,int num);.unsi
001b140: 676e 6564 206c 6f6e 6720 626e 5f73 7562  gned long bn_sub
001b150: 5f77 6f72 6473 2875 6e73 6967 6e65 6420  _words(unsigned 
001b160: 6c6f 6e67 202a 7270 2c20 636f 6e73 7420  long *rp, const 
001b170: 756e 7369 676e 6564 206c 6f6e 6720 2a61  unsigned long *a
001b180: 702c 2063 6f6e 7374 2075 6e73 6967 6e65  p, const unsigne
001b190: 6420 6c6f 6e67 202a 6270 2c69 6e74 206e  d long *bp,int n
001b1a0: 756d 293b 0a0a 0a42 4947 4e55 4d20 2a67  um);...BIGNUM *g
001b1b0: 6574 5f72 6663 3234 3039 5f70 7269 6d65  et_rfc2409_prime
001b1c0: 5f37 3638 2842 4947 4e55 4d20 2a62 6e29  _768(BIGNUM *bn)
001b1d0: 3b0a 4249 474e 554d 202a 6765 745f 7266  ;.BIGNUM *get_rf
001b1e0: 6332 3430 395f 7072 696d 655f 3130 3234  c2409_prime_1024
001b1f0: 2842 4947 4e55 4d20 2a62 6e29 3b0a 0a0a  (BIGNUM *bn);...
001b200: 4249 474e 554d 202a 6765 745f 7266 6333  BIGNUM *get_rfc3
001b210: 3532 365f 7072 696d 655f 3135 3336 2842  526_prime_1536(B
001b220: 4947 4e55 4d20 2a62 6e29 3b0a 4249 474e  IGNUM *bn);.BIGN
001b230: 554d 202a 6765 745f 7266 6333 3532 365f  UM *get_rfc3526_
001b240: 7072 696d 655f 3230 3438 2842 4947 4e55  prime_2048(BIGNU
001b250: 4d20 2a62 6e29 3b0a 4249 474e 554d 202a  M *bn);.BIGNUM *
001b260: 6765 745f 7266 6333 3532 365f 7072 696d  get_rfc3526_prim
001b270: 655f 3330 3732 2842 4947 4e55 4d20 2a62  e_3072(BIGNUM *b
001b280: 6e29 3b0a 4249 474e 554d 202a 6765 745f  n);.BIGNUM *get_
001b290: 7266 6333 3532 365f 7072 696d 655f 3430  rfc3526_prime_40
001b2a0: 3936 2842 4947 4e55 4d20 2a62 6e29 3b0a  96(BIGNUM *bn);.
001b2b0: 4249 474e 554d 202a 6765 745f 7266 6333  BIGNUM *get_rfc3
001b2c0: 3532 365f 7072 696d 655f 3631 3434 2842  526_prime_6144(B
001b2d0: 4947 4e55 4d20 2a62 6e29 3b0a 4249 474e  IGNUM *bn);.BIGN
001b2e0: 554d 202a 6765 745f 7266 6333 3532 365f  UM *get_rfc3526_
001b2f0: 7072 696d 655f 3831 3932 2842 4947 4e55  prime_8192(BIGNU
001b300: 4d20 2a62 6e29 3b0a 0a69 6e74 2042 4e5f  M *bn);..int BN_
001b310: 626e 7465 7374 5f72 616e 6428 4249 474e  bntest_rand(BIGN
001b320: 554d 202a 726e 642c 2069 6e74 2062 6974  UM *rnd, int bit
001b330: 732c 2069 6e74 2074 6f70 2c69 6e74 2062  s, int top,int b
001b340: 6f74 746f 6d29 3b0a 0a0a 0a0a 0a76 6f69  ottom);......voi
001b350: 6420 4552 525f 6c6f 6164 5f42 4e5f 7374  d ERR_load_BN_st
001b360: 7269 6e67 7328 766f 6964 293b 0a23 2037  rings(void);.# 7
001b370: 3520 222f 7573 722f 696e 636c 7564 652f  5 "/usr/include/
001b380: 6f70 656e 7373 6c2f 6173 6e31 2e68 2220  openssl/asn1.h" 
001b390: 3220 3320 340a 2320 3136 3520 222f 7573  2 3 4.# 165 "/us
001b3a0: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
001b3b0: 6c2f 6173 6e31 2e68 2220 3320 340a 7374  l/asn1.h" 3 4.st
001b3c0: 7275 6374 2058 3530 395f 616c 676f 725f  ruct X509_algor_
001b3d0: 7374 3b0a 7374 7275 6374 2073 7461 636b  st;.struct stack
001b3e0: 5f73 745f 5835 3039 5f41 4c47 4f52 207b  _st_X509_ALGOR {
001b3f0: 205f 5354 4143 4b20 7374 6163 6b3b 207d   _STACK stack; }
001b400: 3b0a 2320 3137 3520 222f 7573 722f 696e  ;.# 175 "/usr/in
001b410: 636c 7564 652f 6f70 656e 7373 6c2f 6173  clude/openssl/as
001b420: 6e31 2e68 2220 3320 340a 7479 7065 6465  n1.h" 3 4.typede
001b430: 6620 7374 7275 6374 2061 736e 315f 6374  f struct asn1_ct
001b440: 785f 7374 0a20 7b0a 2075 6e73 6967 6e65  x_st. {. unsigne
001b450: 6420 6368 6172 202a 703b 0a20 696e 7420  d char *p;. int 
001b460: 656f 733b 0a20 696e 7420 6572 726f 723b  eos;. int error;
001b470: 0a20 696e 7420 696e 663b 0a20 696e 7420  . int inf;. int 
001b480: 7461 673b 0a20 696e 7420 7863 6c61 7373  tag;. int xclass
001b490: 3b0a 206c 6f6e 6720 736c 656e 3b0a 2075  ;. long slen;. u
001b4a0: 6e73 6967 6e65 6420 6368 6172 202a 6d61  nsigned char *ma
001b4b0: 783b 0a20 756e 7369 676e 6564 2063 6861  x;. unsigned cha
001b4c0: 7220 2a71 3b0a 2075 6e73 6967 6e65 6420  r *q;. unsigned 
001b4d0: 6368 6172 202a 2a70 703b 0a20 696e 7420  char **pp;. int 
001b4e0: 6c69 6e65 3b0a 207d 2041 534e 315f 4354  line;. } ASN1_CT
001b4f0: 583b 0a0a 7479 7065 6465 6620 7374 7275  X;..typedef stru
001b500: 6374 2061 736e 315f 636f 6e73 745f 6374  ct asn1_const_ct
001b510: 785f 7374 0a20 7b0a 2063 6f6e 7374 2075  x_st. {. const u
001b520: 6e73 6967 6e65 6420 6368 6172 202a 703b  nsigned char *p;
001b530: 0a20 696e 7420 656f 733b 0a20 696e 7420  . int eos;. int 
001b540: 6572 726f 723b 0a20 696e 7420 696e 663b  error;. int inf;
001b550: 0a20 696e 7420 7461 673b 0a20 696e 7420  . int tag;. int 
001b560: 7863 6c61 7373 3b0a 206c 6f6e 6720 736c  xclass;. long sl
001b570: 656e 3b0a 2063 6f6e 7374 2075 6e73 6967  en;. const unsig
001b580: 6e65 6420 6368 6172 202a 6d61 783b 0a20  ned char *max;. 
001b590: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
001b5a0: 6861 7220 2a71 3b0a 2063 6f6e 7374 2075  har *q;. const u
001b5b0: 6e73 6967 6e65 6420 6368 6172 202a 2a70  nsigned char **p
001b5c0: 703b 0a20 696e 7420 6c69 6e65 3b0a 207d  p;. int line;. }
001b5d0: 2041 534e 315f 636f 6e73 745f 4354 583b   ASN1_const_CTX;
001b5e0: 0a0a 0a0a 0a0a 0a0a 7479 7065 6465 6620  ........typedef 
001b5f0: 7374 7275 6374 2061 736e 315f 6f62 6a65  struct asn1_obje
001b600: 6374 5f73 740a 207b 0a20 636f 6e73 7420  ct_st. {. const 
001b610: 6368 6172 202a 736e 2c2a 6c6e 3b0a 2069  char *sn,*ln;. i
001b620: 6e74 206e 6964 3b0a 2069 6e74 206c 656e  nt nid;. int len
001b630: 6774 683b 0a20 636f 6e73 7420 756e 7369  gth;. const unsi
001b640: 676e 6564 2063 6861 7220 2a64 6174 613b  gned char *data;
001b650: 0a20 696e 7420 666c 6167 733b 0a20 7d20  . int flags;. } 
001b660: 4153 4e31 5f4f 424a 4543 543b 0a23 2032  ASN1_OBJECT;.# 2
001b670: 3338 2022 2f75 7372 2f69 6e63 6c75 6465  38 "/usr/include
001b680: 2f6f 7065 6e73 736c 2f61 736e 312e 6822  /openssl/asn1.h"
001b690: 2033 2034 0a73 7472 7563 7420 6173 6e31   3 4.struct asn1
001b6a0: 5f73 7472 696e 675f 7374 0a20 7b0a 2069  _string_st. {. i
001b6b0: 6e74 206c 656e 6774 683b 0a20 696e 7420  nt length;. int 
001b6c0: 7479 7065 3b0a 2075 6e73 6967 6e65 6420  type;. unsigned 
001b6d0: 6368 6172 202a 6461 7461 3b0a 0a0a 0a0a  char *data;.....
001b6e0: 206c 6f6e 6720 666c 6167 733b 0a20 7d3b   long flags;. };
001b6f0: 0a0a 0a0a 0a0a 0a74 7970 6564 6566 2073  .......typedef s
001b700: 7472 7563 7420 4153 4e31 5f45 4e43 4f44  truct ASN1_ENCOD
001b710: 494e 475f 7374 0a20 7b0a 2075 6e73 6967  ING_st. {. unsig
001b720: 6e65 6420 6368 6172 202a 656e 633b 0a20  ned char *enc;. 
001b730: 6c6f 6e67 206c 656e 3b0a 2069 6e74 206d  long len;. int m
001b740: 6f64 6966 6965 643b 0a20 7d20 4153 4e31  odified;. } ASN1
001b750: 5f45 4e43 4f44 494e 473b 0a23 2032 3731  _ENCODING;.# 271
001b760: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
001b770: 7065 6e73 736c 2f61 736e 312e 6822 2033  penssl/asn1.h" 3
001b780: 2034 0a74 7970 6564 6566 2073 7472 7563   4.typedef struc
001b790: 7420 6173 6e31 5f73 7472 696e 675f 7461  t asn1_string_ta
001b7a0: 626c 655f 7374 207b 0a20 696e 7420 6e69  ble_st {. int ni
001b7b0: 643b 0a20 6c6f 6e67 206d 696e 7369 7a65  d;. long minsize
001b7c0: 3b0a 206c 6f6e 6720 6d61 7873 697a 653b  ;. long maxsize;
001b7d0: 0a20 756e 7369 676e 6564 206c 6f6e 6720  . unsigned long 
001b7e0: 6d61 736b 3b0a 2075 6e73 6967 6e65 6420  mask;. unsigned 
001b7f0: 6c6f 6e67 2066 6c61 6773 3b0a 7d20 4153  long flags;.} AS
001b800: 4e31 5f53 5452 494e 475f 5441 424c 453b  N1_STRING_TABLE;
001b810: 0a0a 7374 7275 6374 2073 7461 636b 5f73  ..struct stack_s
001b820: 745f 4153 4e31 5f53 5452 494e 475f 5441  t_ASN1_STRING_TA
001b830: 424c 4520 7b20 5f53 5441 434b 2073 7461  BLE { _STACK sta
001b840: 636b 3b20 7d3b 0a23 2032 3935 2022 2f75  ck; };.# 295 "/u
001b850: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
001b860: 736c 2f61 736e 312e 6822 2033 2034 0a74  sl/asn1.h" 3 4.t
001b870: 7970 6564 6566 2073 7472 7563 7420 4153  ypedef struct AS
001b880: 4e31 5f54 454d 504c 4154 455f 7374 2041  N1_TEMPLATE_st A
001b890: 534e 315f 5445 4d50 4c41 5445 3b0a 7479  SN1_TEMPLATE;.ty
001b8a0: 7065 6465 6620 7374 7275 6374 2041 534e  pedef struct ASN
001b8b0: 315f 544c 435f 7374 2041 534e 315f 544c  1_TLC_st ASN1_TL
001b8c0: 433b 0a0a 7479 7065 6465 6620 7374 7275  C;..typedef stru
001b8d0: 6374 2041 534e 315f 5641 4c55 455f 7374  ct ASN1_VALUE_st
001b8e0: 2041 534e 315f 5641 4c55 453b 0a23 2033   ASN1_VALUE;.# 3
001b8f0: 3632 2022 2f75 7372 2f69 6e63 6c75 6465  62 "/usr/include
001b900: 2f6f 7065 6e73 736c 2f61 736e 312e 6822  /openssl/asn1.h"
001b910: 2033 2034 0a74 7970 6564 6566 2076 6f69   3 4.typedef voi
001b920: 6420 2a64 3269 5f6f 665f 766f 6964 2876  d *d2i_of_void(v
001b930: 6f69 6420 2a2a 2c63 6f6e 7374 2075 6e73  oid **,const uns
001b940: 6967 6e65 6420 6368 6172 202a 2a2c 6c6f  igned char **,lo
001b950: 6e67 293b 2074 7970 6564 6566 2069 6e74  ng); typedef int
001b960: 2069 3264 5f6f 665f 766f 6964 2876 6f69   i2d_of_void(voi
001b970: 6420 2a2c 756e 7369 676e 6564 2063 6861  d *,unsigned cha
001b980: 7220 2a2a 293b 0a23 2034 3032 2022 2f75  r **);.# 402 "/u
001b990: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
001b9a0: 736c 2f61 736e 312e 6822 2033 2034 0a74  sl/asn1.h" 3 4.t
001b9b0: 7970 6564 6566 2063 6f6e 7374 2041 534e  ypedef const ASN
001b9c0: 315f 4954 454d 2041 534e 315f 4954 454d  1_ITEM ASN1_ITEM
001b9d0: 5f45 5850 3b0a 2320 3531 3620 222f 7573  _EXP;.# 516 "/us
001b9e0: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
001b9f0: 6c2f 6173 6e31 2e68 2220 3320 340a 7374  l/asn1.h" 3 4.st
001ba00: 7275 6374 2073 7461 636b 5f73 745f 4153  ruct stack_st_AS
001ba10: 4e31 5f49 4e54 4547 4552 207b 205f 5354  N1_INTEGER { _ST
001ba20: 4143 4b20 7374 6163 6b3b 207d 3b0a 0a0a  ACK stack; };...
001ba30: 7374 7275 6374 2073 7461 636b 5f73 745f  struct stack_st_
001ba40: 4153 4e31 5f47 454e 4552 414c 5354 5249  ASN1_GENERALSTRI
001ba50: 4e47 207b 205f 5354 4143 4b20 7374 6163  NG { _STACK stac
001ba60: 6b3b 207d 3b0a 0a74 7970 6564 6566 2073  k; };..typedef s
001ba70: 7472 7563 7420 6173 6e31 5f74 7970 655f  truct asn1_type_
001ba80: 7374 0a20 7b0a 2069 6e74 2074 7970 653b  st. {. int type;
001ba90: 0a20 756e 696f 6e20 7b0a 2020 6368 6172  . union {.  char
001baa0: 202a 7074 723b 0a20 2041 534e 315f 424f   *ptr;.  ASN1_BO
001bab0: 4f4c 4541 4e20 626f 6f6c 6561 6e3b 0a20  OLEAN boolean;. 
001bac0: 2041 534e 315f 5354 5249 4e47 202a 2061   ASN1_STRING * a
001bad0: 736e 315f 7374 7269 6e67 3b0a 2020 4153  sn1_string;.  AS
001bae0: 4e31 5f4f 424a 4543 5420 2a20 6f62 6a65  N1_OBJECT * obje
001baf0: 6374 3b0a 2020 4153 4e31 5f49 4e54 4547  ct;.  ASN1_INTEG
001bb00: 4552 202a 2069 6e74 6567 6572 3b0a 2020  ER * integer;.  
001bb10: 4153 4e31 5f45 4e55 4d45 5241 5445 4420  ASN1_ENUMERATED 
001bb20: 2a20 656e 756d 6572 6174 6564 3b0a 2020  * enumerated;.  
001bb30: 4153 4e31 5f42 4954 5f53 5452 494e 4720  ASN1_BIT_STRING 
001bb40: 2a20 6269 745f 7374 7269 6e67 3b0a 2020  * bit_string;.  
001bb50: 4153 4e31 5f4f 4354 4554 5f53 5452 494e  ASN1_OCTET_STRIN
001bb60: 4720 2a20 6f63 7465 745f 7374 7269 6e67  G * octet_string
001bb70: 3b0a 2020 4153 4e31 5f50 5249 4e54 4142  ;.  ASN1_PRINTAB
001bb80: 4c45 5354 5249 4e47 202a 2070 7269 6e74  LESTRING * print
001bb90: 6162 6c65 7374 7269 6e67 3b0a 2020 4153  ablestring;.  AS
001bba0: 4e31 5f54 3631 5354 5249 4e47 202a 2074  N1_T61STRING * t
001bbb0: 3631 7374 7269 6e67 3b0a 2020 4153 4e31  61string;.  ASN1
001bbc0: 5f49 4135 5354 5249 4e47 202a 2069 6135  _IA5STRING * ia5
001bbd0: 7374 7269 6e67 3b0a 2020 4153 4e31 5f47  string;.  ASN1_G
001bbe0: 454e 4552 414c 5354 5249 4e47 202a 2067  ENERALSTRING * g
001bbf0: 656e 6572 616c 7374 7269 6e67 3b0a 2020  eneralstring;.  
001bc00: 4153 4e31 5f42 4d50 5354 5249 4e47 202a  ASN1_BMPSTRING *
001bc10: 2062 6d70 7374 7269 6e67 3b0a 2020 4153   bmpstring;.  AS
001bc20: 4e31 5f55 4e49 5645 5253 414c 5354 5249  N1_UNIVERSALSTRI
001bc30: 4e47 202a 2075 6e69 7665 7273 616c 7374  NG * universalst
001bc40: 7269 6e67 3b0a 2020 4153 4e31 5f55 5443  ring;.  ASN1_UTC
001bc50: 5449 4d45 202a 2075 7463 7469 6d65 3b0a  TIME * utctime;.
001bc60: 2020 4153 4e31 5f47 454e 4552 414c 495a    ASN1_GENERALIZ
001bc70: 4544 5449 4d45 202a 2067 656e 6572 616c  EDTIME * general
001bc80: 697a 6564 7469 6d65 3b0a 2020 4153 4e31  izedtime;.  ASN1
001bc90: 5f56 4953 4942 4c45 5354 5249 4e47 202a  _VISIBLESTRING *
001bca0: 2076 6973 6962 6c65 7374 7269 6e67 3b0a   visiblestring;.
001bcb0: 2020 4153 4e31 5f55 5446 3853 5452 494e    ASN1_UTF8STRIN
001bcc0: 4720 2a20 7574 6638 7374 7269 6e67 3b0a  G * utf8string;.
001bcd0: 0a0a 2020 4153 4e31 5f53 5452 494e 4720  ..  ASN1_STRING 
001bce0: 2a20 7365 743b 0a20 2041 534e 315f 5354  * set;.  ASN1_ST
001bcf0: 5249 4e47 202a 2073 6571 7565 6e63 653b  RING * sequence;
001bd00: 0a20 2041 534e 315f 5641 4c55 4520 2a20  .  ASN1_VALUE * 
001bd10: 6173 6e31 5f76 616c 7565 3b0a 2020 7d20  asn1_value;.  } 
001bd20: 7661 6c75 653b 0a20 7d20 4153 4e31 5f54  value;. } ASN1_T
001bd30: 5950 453b 0a0a 7374 7275 6374 2073 7461  YPE;..struct sta
001bd40: 636b 5f73 745f 4153 4e31 5f54 5950 4520  ck_st_ASN1_TYPE 
001bd50: 7b20 5f53 5441 434b 2073 7461 636b 3b20  { _STACK stack; 
001bd60: 7d3b 0a0a 0a74 7970 6564 6566 2073 7472  };...typedef str
001bd70: 7563 7420 7374 6163 6b5f 7374 5f41 534e  uct stack_st_ASN
001bd80: 315f 5459 5045 2041 534e 315f 5345 5155  1_TYPE ASN1_SEQU
001bd90: 454e 4345 5f41 4e59 3b0a 0a41 534e 315f  ENCE_ANY;..ASN1_
001bda0: 5345 5155 454e 4345 5f41 4e59 202a 6432  SEQUENCE_ANY *d2
001bdb0: 695f 4153 4e31 5f53 4551 5545 4e43 455f  i_ASN1_SEQUENCE_
001bdc0: 414e 5928 4153 4e31 5f53 4551 5545 4e43  ANY(ASN1_SEQUENC
001bdd0: 455f 414e 5920 2a2a 612c 2063 6f6e 7374  E_ANY **a, const
001bde0: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
001bdf0: 2a69 6e2c 206c 6f6e 6720 6c65 6e29 3b20  *in, long len); 
001be00: 696e 7420 6932 645f 4153 4e31 5f53 4551  int i2d_ASN1_SEQ
001be10: 5545 4e43 455f 414e 5928 636f 6e73 7420  UENCE_ANY(const 
001be20: 4153 4e31 5f53 4551 5545 4e43 455f 414e  ASN1_SEQUENCE_AN
001be30: 5920 2a61 2c20 756e 7369 676e 6564 2063  Y *a, unsigned c
001be40: 6861 7220 2a2a 6f75 7429 3b20 6578 7465  har **out); exte
001be50: 726e 2063 6f6e 7374 2041 534e 315f 4954  rn const ASN1_IT
001be60: 454d 2041 534e 315f 5345 5155 454e 4345  EM ASN1_SEQUENCE
001be70: 5f41 4e59 5f69 743b 0a41 534e 315f 5345  _ANY_it;.ASN1_SE
001be80: 5155 454e 4345 5f41 4e59 202a 6432 695f  QUENCE_ANY *d2i_
001be90: 4153 4e31 5f53 4554 5f41 4e59 2841 534e  ASN1_SET_ANY(ASN
001bea0: 315f 5345 5155 454e 4345 5f41 4e59 202a  1_SEQUENCE_ANY *
001beb0: 2a61 2c20 636f 6e73 7420 756e 7369 676e  *a, const unsign
001bec0: 6564 2063 6861 7220 2a2a 696e 2c20 6c6f  ed char **in, lo
001bed0: 6e67 206c 656e 293b 2069 6e74 2069 3264  ng len); int i2d
001bee0: 5f41 534e 315f 5345 545f 414e 5928 636f  _ASN1_SET_ANY(co
001bef0: 6e73 7420 4153 4e31 5f53 4551 5545 4e43  nst ASN1_SEQUENC
001bf00: 455f 414e 5920 2a61 2c20 756e 7369 676e  E_ANY *a, unsign
001bf10: 6564 2063 6861 7220 2a2a 6f75 7429 3b20  ed char **out); 
001bf20: 6578 7465 726e 2063 6f6e 7374 2041 534e  extern const ASN
001bf30: 315f 4954 454d 2041 534e 315f 5345 545f  1_ITEM ASN1_SET_
001bf40: 414e 595f 6974 3b0a 0a74 7970 6564 6566  ANY_it;..typedef
001bf50: 2073 7472 7563 7420 4e45 5453 4341 5045   struct NETSCAPE
001bf60: 5f58 3530 395f 7374 0a20 7b0a 2041 534e  _X509_st. {. ASN
001bf70: 315f 4f43 5445 545f 5354 5249 4e47 202a  1_OCTET_STRING *
001bf80: 6865 6164 6572 3b0a 2058 3530 3920 2a63  header;. X509 *c
001bf90: 6572 743b 0a20 7d20 4e45 5453 4341 5045  ert;. } NETSCAPE
001bfa0: 5f58 3530 393b 0a0a 0a74 7970 6564 6566  _X509;...typedef
001bfb0: 2073 7472 7563 7420 4249 545f 5354 5249   struct BIT_STRI
001bfc0: 4e47 5f42 4954 4e41 4d45 5f73 7420 7b0a  NG_BITNAME_st {.
001bfd0: 2069 6e74 2062 6974 6e75 6d3b 0a20 636f   int bitnum;. co
001bfe0: 6e73 7420 6368 6172 202a 6c6e 616d 653b  nst char *lname;
001bff0: 0a20 636f 6e73 7420 6368 6172 202a 736e  . const char *sn
001c000: 616d 653b 0a7d 2042 4954 5f53 5452 494e  ame;.} BIT_STRIN
001c010: 475f 4249 544e 414d 453b 0a23 2037 3734  G_BITNAME;.# 774
001c020: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
001c030: 7065 6e73 736c 2f61 736e 312e 6822 2033  penssl/asn1.h" 3
001c040: 2034 0a41 534e 315f 5459 5045 202a 4153   4.ASN1_TYPE *AS
001c050: 4e31 5f54 5950 455f 6e65 7728 766f 6964  N1_TYPE_new(void
001c060: 293b 2076 6f69 6420 4153 4e31 5f54 5950  ); void ASN1_TYP
001c070: 455f 6672 6565 2841 534e 315f 5459 5045  E_free(ASN1_TYPE
001c080: 202a 6129 3b20 4153 4e31 5f54 5950 4520   *a); ASN1_TYPE 
001c090: 2a64 3269 5f41 534e 315f 5459 5045 2841  *d2i_ASN1_TYPE(A
001c0a0: 534e 315f 5459 5045 202a 2a61 2c20 636f  SN1_TYPE **a, co
001c0b0: 6e73 7420 756e 7369 676e 6564 2063 6861  nst unsigned cha
001c0c0: 7220 2a2a 696e 2c20 6c6f 6e67 206c 656e  r **in, long len
001c0d0: 293b 2069 6e74 2069 3264 5f41 534e 315f  ); int i2d_ASN1_
001c0e0: 5459 5045 2841 534e 315f 5459 5045 202a  TYPE(ASN1_TYPE *
001c0f0: 612c 2075 6e73 6967 6e65 6420 6368 6172  a, unsigned char
001c100: 202a 2a6f 7574 293b 2065 7874 6572 6e20   **out); extern 
001c110: 636f 6e73 7420 4153 4e31 5f49 5445 4d20  const ASN1_ITEM 
001c120: 4153 4e31 5f41 4e59 5f69 743b 0a0a 696e  ASN1_ANY_it;..in
001c130: 7420 4153 4e31 5f54 5950 455f 6765 7428  t ASN1_TYPE_get(
001c140: 4153 4e31 5f54 5950 4520 2a61 293b 0a76  ASN1_TYPE *a);.v
001c150: 6f69 6420 4153 4e31 5f54 5950 455f 7365  oid ASN1_TYPE_se
001c160: 7428 4153 4e31 5f54 5950 4520 2a61 2c20  t(ASN1_TYPE *a, 
001c170: 696e 7420 7479 7065 2c20 766f 6964 202a  int type, void *
001c180: 7661 6c75 6529 3b0a 696e 7420 4153 4e31  value);.int ASN1
001c190: 5f54 5950 455f 7365 7431 2841 534e 315f  _TYPE_set1(ASN1_
001c1a0: 5459 5045 202a 612c 2069 6e74 2074 7970  TYPE *a, int typ
001c1b0: 652c 2063 6f6e 7374 2076 6f69 6420 2a76  e, const void *v
001c1c0: 616c 7565 293b 0a69 6e74 2041 534e 315f  alue);.int ASN1_
001c1d0: 5459 5045 5f63 6d70 2863 6f6e 7374 2041  TYPE_cmp(const A
001c1e0: 534e 315f 5459 5045 202a 612c 2063 6f6e  SN1_TYPE *a, con
001c1f0: 7374 2041 534e 315f 5459 5045 202a 6229  st ASN1_TYPE *b)
001c200: 3b0a 0a41 534e 315f 4f42 4a45 4354 202a  ;..ASN1_OBJECT *
001c210: 2041 534e 315f 4f42 4a45 4354 5f6e 6577   ASN1_OBJECT_new
001c220: 2876 6f69 6420 293b 0a76 6f69 6420 4153  (void );.void AS
001c230: 4e31 5f4f 424a 4543 545f 6672 6565 2841  N1_OBJECT_free(A
001c240: 534e 315f 4f42 4a45 4354 202a 6129 3b0a  SN1_OBJECT *a);.
001c250: 696e 7420 6932 645f 4153 4e31 5f4f 424a  int i2d_ASN1_OBJ
001c260: 4543 5428 4153 4e31 5f4f 424a 4543 5420  ECT(ASN1_OBJECT 
001c270: 2a61 2c75 6e73 6967 6e65 6420 6368 6172  *a,unsigned char
001c280: 202a 2a70 7029 3b0a 4153 4e31 5f4f 424a   **pp);.ASN1_OBJ
001c290: 4543 5420 2a20 6332 695f 4153 4e31 5f4f  ECT * c2i_ASN1_O
001c2a0: 424a 4543 5428 4153 4e31 5f4f 424a 4543  BJECT(ASN1_OBJEC
001c2b0: 5420 2a2a 612c 636f 6e73 7420 756e 7369  T **a,const unsi
001c2c0: 676e 6564 2063 6861 7220 2a2a 7070 2c0a  gned char **pp,.
001c2d0: 2020 206c 6f6e 6720 6c65 6e67 7468 293b     long length);
001c2e0: 0a41 534e 315f 4f42 4a45 4354 202a 2064  .ASN1_OBJECT * d
001c2f0: 3269 5f41 534e 315f 4f42 4a45 4354 2841  2i_ASN1_OBJECT(A
001c300: 534e 315f 4f42 4a45 4354 202a 2a61 2c63  SN1_OBJECT **a,c
001c310: 6f6e 7374 2075 6e73 6967 6e65 6420 6368  onst unsigned ch
001c320: 6172 202a 2a70 702c 0a20 2020 6c6f 6e67  ar **pp,.   long
001c330: 206c 656e 6774 6829 3b0a 0a65 7874 6572   length);..exter
001c340: 6e20 636f 6e73 7420 4153 4e31 5f49 5445  n const ASN1_ITE
001c350: 4d20 4153 4e31 5f4f 424a 4543 545f 6974  M ASN1_OBJECT_it
001c360: 3b0a 0a73 7472 7563 7420 7374 6163 6b5f  ;..struct stack_
001c370: 7374 5f41 534e 315f 4f42 4a45 4354 207b  st_ASN1_OBJECT {
001c380: 205f 5354 4143 4b20 7374 6163 6b3b 207d   _STACK stack; }
001c390: 3b0a 0a0a 4153 4e31 5f53 5452 494e 4720  ;...ASN1_STRING 
001c3a0: 2a20 4153 4e31 5f53 5452 494e 475f 6e65  * ASN1_STRING_ne
001c3b0: 7728 766f 6964 293b 0a76 6f69 6420 4153  w(void);.void AS
001c3c0: 4e31 5f53 5452 494e 475f 6672 6565 2841  N1_STRING_free(A
001c3d0: 534e 315f 5354 5249 4e47 202a 6129 3b0a  SN1_STRING *a);.
001c3e0: 696e 7420 4153 4e31 5f53 5452 494e 475f  int ASN1_STRING_
001c3f0: 636f 7079 2841 534e 315f 5354 5249 4e47  copy(ASN1_STRING
001c400: 202a 6473 742c 2063 6f6e 7374 2041 534e   *dst, const ASN
001c410: 315f 5354 5249 4e47 202a 7374 7229 3b0a  1_STRING *str);.
001c420: 4153 4e31 5f53 5452 494e 4720 2a20 4153  ASN1_STRING * AS
001c430: 4e31 5f53 5452 494e 475f 6475 7028 636f  N1_STRING_dup(co
001c440: 6e73 7420 4153 4e31 5f53 5452 494e 4720  nst ASN1_STRING 
001c450: 2a61 293b 0a41 534e 315f 5354 5249 4e47  *a);.ASN1_STRING
001c460: 202a 2041 534e 315f 5354 5249 4e47 5f74   * ASN1_STRING_t
001c470: 7970 655f 6e65 7728 696e 7420 7479 7065  ype_new(int type
001c480: 2029 3b0a 696e 7420 4153 4e31 5f53 5452   );.int ASN1_STR
001c490: 494e 475f 636d 7028 636f 6e73 7420 4153  ING_cmp(const AS
001c4a0: 4e31 5f53 5452 494e 4720 2a61 2c20 636f  N1_STRING *a, co
001c4b0: 6e73 7420 4153 4e31 5f53 5452 494e 4720  nst ASN1_STRING 
001c4c0: 2a62 293b 0a0a 0a69 6e74 2041 534e 315f  *b);...int ASN1_
001c4d0: 5354 5249 4e47 5f73 6574 2841 534e 315f  STRING_set(ASN1_
001c4e0: 5354 5249 4e47 202a 7374 722c 2063 6f6e  STRING *str, con
001c4f0: 7374 2076 6f69 6420 2a64 6174 612c 2069  st void *data, i
001c500: 6e74 206c 656e 293b 0a76 6f69 6420 4153  nt len);.void AS
001c510: 4e31 5f53 5452 494e 475f 7365 7430 2841  N1_STRING_set0(A
001c520: 534e 315f 5354 5249 4e47 202a 7374 722c  SN1_STRING *str,
001c530: 2076 6f69 6420 2a64 6174 612c 2069 6e74   void *data, int
001c540: 206c 656e 293b 0a69 6e74 2041 534e 315f   len);.int ASN1_
001c550: 5354 5249 4e47 5f6c 656e 6774 6828 636f  STRING_length(co
001c560: 6e73 7420 4153 4e31 5f53 5452 494e 4720  nst ASN1_STRING 
001c570: 2a78 293b 0a76 6f69 6420 4153 4e31 5f53  *x);.void ASN1_S
001c580: 5452 494e 475f 6c65 6e67 7468 5f73 6574  TRING_length_set
001c590: 2841 534e 315f 5354 5249 4e47 202a 782c  (ASN1_STRING *x,
001c5a0: 2069 6e74 206e 293b 0a69 6e74 2041 534e   int n);.int ASN
001c5b0: 315f 5354 5249 4e47 5f74 7970 6528 4153  1_STRING_type(AS
001c5c0: 4e31 5f53 5452 494e 4720 2a78 293b 0a75  N1_STRING *x);.u
001c5d0: 6e73 6967 6e65 6420 6368 6172 202a 2041  nsigned char * A
001c5e0: 534e 315f 5354 5249 4e47 5f64 6174 6128  SN1_STRING_data(
001c5f0: 4153 4e31 5f53 5452 494e 4720 2a78 293b  ASN1_STRING *x);
001c600: 0a0a 4153 4e31 5f42 4954 5f53 5452 494e  ..ASN1_BIT_STRIN
001c610: 4720 2a41 534e 315f 4249 545f 5354 5249  G *ASN1_BIT_STRI
001c620: 4e47 5f6e 6577 2876 6f69 6429 3b20 766f  NG_new(void); vo
001c630: 6964 2041 534e 315f 4249 545f 5354 5249  id ASN1_BIT_STRI
001c640: 4e47 5f66 7265 6528 4153 4e31 5f42 4954  NG_free(ASN1_BIT
001c650: 5f53 5452 494e 4720 2a61 293b 2041 534e  _STRING *a); ASN
001c660: 315f 4249 545f 5354 5249 4e47 202a 6432  1_BIT_STRING *d2
001c670: 695f 4153 4e31 5f42 4954 5f53 5452 494e  i_ASN1_BIT_STRIN
001c680: 4728 4153 4e31 5f42 4954 5f53 5452 494e  G(ASN1_BIT_STRIN
001c690: 4720 2a2a 612c 2063 6f6e 7374 2075 6e73  G **a, const uns
001c6a0: 6967 6e65 6420 6368 6172 202a 2a69 6e2c  igned char **in,
001c6b0: 206c 6f6e 6720 6c65 6e29 3b20 696e 7420   long len); int 
001c6c0: 6932 645f 4153 4e31 5f42 4954 5f53 5452  i2d_ASN1_BIT_STR
001c6d0: 494e 4728 4153 4e31 5f42 4954 5f53 5452  ING(ASN1_BIT_STR
001c6e0: 494e 4720 2a61 2c20 756e 7369 676e 6564  ING *a, unsigned
001c6f0: 2063 6861 7220 2a2a 6f75 7429 3b20 6578   char **out); ex
001c700: 7465 726e 2063 6f6e 7374 2041 534e 315f  tern const ASN1_
001c710: 4954 454d 2041 534e 315f 4249 545f 5354  ITEM ASN1_BIT_ST
001c720: 5249 4e47 5f69 743b 0a69 6e74 2069 3263  RING_it;.int i2c
001c730: 5f41 534e 315f 4249 545f 5354 5249 4e47  _ASN1_BIT_STRING
001c740: 2841 534e 315f 4249 545f 5354 5249 4e47  (ASN1_BIT_STRING
001c750: 202a 612c 756e 7369 676e 6564 2063 6861   *a,unsigned cha
001c760: 7220 2a2a 7070 293b 0a41 534e 315f 4249  r **pp);.ASN1_BI
001c770: 545f 5354 5249 4e47 202a 6332 695f 4153  T_STRING *c2i_AS
001c780: 4e31 5f42 4954 5f53 5452 494e 4728 4153  N1_BIT_STRING(AS
001c790: 4e31 5f42 4954 5f53 5452 494e 4720 2a2a  N1_BIT_STRING **
001c7a0: 612c 636f 6e73 7420 756e 7369 676e 6564  a,const unsigned
001c7b0: 2063 6861 7220 2a2a 7070 2c0a 2020 206c   char **pp,.   l
001c7c0: 6f6e 6720 6c65 6e67 7468 293b 0a69 6e74  ong length);.int
001c7d0: 2041 534e 315f 4249 545f 5354 5249 4e47   ASN1_BIT_STRING
001c7e0: 5f73 6574 2841 534e 315f 4249 545f 5354  _set(ASN1_BIT_ST
001c7f0: 5249 4e47 202a 612c 2075 6e73 6967 6e65  RING *a, unsigne
001c800: 6420 6368 6172 202a 642c 0a20 2020 696e  d char *d,.   in
001c810: 7420 6c65 6e67 7468 2029 3b0a 696e 7420  t length );.int 
001c820: 4153 4e31 5f42 4954 5f53 5452 494e 475f  ASN1_BIT_STRING_
001c830: 7365 745f 6269 7428 4153 4e31 5f42 4954  set_bit(ASN1_BIT
001c840: 5f53 5452 494e 4720 2a61 2c20 696e 7420  _STRING *a, int 
001c850: 6e2c 2069 6e74 2076 616c 7565 293b 0a69  n, int value);.i
001c860: 6e74 2041 534e 315f 4249 545f 5354 5249  nt ASN1_BIT_STRI
001c870: 4e47 5f67 6574 5f62 6974 2841 534e 315f  NG_get_bit(ASN1_
001c880: 4249 545f 5354 5249 4e47 202a 612c 2069  BIT_STRING *a, i
001c890: 6e74 206e 293b 0a69 6e74 2041 534e 315f  nt n);.int ASN1_
001c8a0: 4249 545f 5354 5249 4e47 5f63 6865 636b  BIT_STRING_check
001c8b0: 2841 534e 315f 4249 545f 5354 5249 4e47  (ASN1_BIT_STRING
001c8c0: 202a 612c 0a20 2020 2020 2020 2020 2020   *a,.           
001c8d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
001c8e0: 2020 2020 2020 2020 2020 756e 7369 676e            unsign
001c8f0: 6564 2063 6861 7220 2a66 6c61 6773 2c20  ed char *flags, 
001c900: 696e 7420 666c 6167 735f 6c65 6e29 3b0a  int flags_len);.
001c910: 0a0a 696e 7420 4153 4e31 5f42 4954 5f53  ..int ASN1_BIT_S
001c920: 5452 494e 475f 6e61 6d65 5f70 7269 6e74  TRING_name_print
001c930: 2842 494f 202a 6f75 742c 2041 534e 315f  (BIO *out, ASN1_
001c940: 4249 545f 5354 5249 4e47 202a 6273 2c0a  BIT_STRING *bs,.
001c950: 2020 2020 4249 545f 5354 5249 4e47 5f42      BIT_STRING_B
001c960: 4954 4e41 4d45 202a 7462 6c2c 2069 6e74  ITNAME *tbl, int
001c970: 2069 6e64 656e 7429 3b0a 0a69 6e74 2041   indent);..int A
001c980: 534e 315f 4249 545f 5354 5249 4e47 5f6e  SN1_BIT_STRING_n
001c990: 756d 5f61 7363 2863 6861 7220 2a6e 616d  um_asc(char *nam
001c9a0: 652c 2042 4954 5f53 5452 494e 475f 4249  e, BIT_STRING_BI
001c9b0: 544e 414d 4520 2a74 626c 293b 0a69 6e74  TNAME *tbl);.int
001c9c0: 2041 534e 315f 4249 545f 5354 5249 4e47   ASN1_BIT_STRING
001c9d0: 5f73 6574 5f61 7363 2841 534e 315f 4249  _set_asc(ASN1_BI
001c9e0: 545f 5354 5249 4e47 202a 6273 2c20 6368  T_STRING *bs, ch
001c9f0: 6172 202a 6e61 6d65 2c20 696e 7420 7661  ar *name, int va
001ca00: 6c75 652c 0a20 2020 2042 4954 5f53 5452  lue,.    BIT_STR
001ca10: 494e 475f 4249 544e 414d 4520 2a74 626c  ING_BITNAME *tbl
001ca20: 293b 0a0a 696e 7420 6932 645f 4153 4e31  );..int i2d_ASN1
001ca30: 5f42 4f4f 4c45 414e 2869 6e74 2061 2c75  _BOOLEAN(int a,u
001ca40: 6e73 6967 6e65 6420 6368 6172 202a 2a70  nsigned char **p
001ca50: 7029 3b0a 696e 7420 6432 695f 4153 4e31  p);.int d2i_ASN1
001ca60: 5f42 4f4f 4c45 414e 2869 6e74 202a 612c  _BOOLEAN(int *a,
001ca70: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
001ca80: 6861 7220 2a2a 7070 2c6c 6f6e 6720 6c65  har **pp,long le
001ca90: 6e67 7468 293b 0a0a 4153 4e31 5f49 4e54  ngth);..ASN1_INT
001caa0: 4547 4552 202a 4153 4e31 5f49 4e54 4547  EGER *ASN1_INTEG
001cab0: 4552 5f6e 6577 2876 6f69 6429 3b20 766f  ER_new(void); vo
001cac0: 6964 2041 534e 315f 494e 5445 4745 525f  id ASN1_INTEGER_
001cad0: 6672 6565 2841 534e 315f 494e 5445 4745  free(ASN1_INTEGE
001cae0: 5220 2a61 293b 2041 534e 315f 494e 5445  R *a); ASN1_INTE
001caf0: 4745 5220 2a64 3269 5f41 534e 315f 494e  GER *d2i_ASN1_IN
001cb00: 5445 4745 5228 4153 4e31 5f49 4e54 4547  TEGER(ASN1_INTEG
001cb10: 4552 202a 2a61 2c20 636f 6e73 7420 756e  ER **a, const un
001cb20: 7369 676e 6564 2063 6861 7220 2a2a 696e  signed char **in
001cb30: 2c20 6c6f 6e67 206c 656e 293b 2069 6e74  , long len); int
001cb40: 2069 3264 5f41 534e 315f 494e 5445 4745   i2d_ASN1_INTEGE
001cb50: 5228 4153 4e31 5f49 4e54 4547 4552 202a  R(ASN1_INTEGER *
001cb60: 612c 2075 6e73 6967 6e65 6420 6368 6172  a, unsigned char
001cb70: 202a 2a6f 7574 293b 2065 7874 6572 6e20   **out); extern 
001cb80: 636f 6e73 7420 4153 4e31 5f49 5445 4d20  const ASN1_ITEM 
001cb90: 4153 4e31 5f49 4e54 4547 4552 5f69 743b  ASN1_INTEGER_it;
001cba0: 0a69 6e74 2069 3263 5f41 534e 315f 494e  .int i2c_ASN1_IN
001cbb0: 5445 4745 5228 4153 4e31 5f49 4e54 4547  TEGER(ASN1_INTEG
001cbc0: 4552 202a 612c 756e 7369 676e 6564 2063  ER *a,unsigned c
001cbd0: 6861 7220 2a2a 7070 293b 0a41 534e 315f  har **pp);.ASN1_
001cbe0: 494e 5445 4745 5220 2a63 3269 5f41 534e  INTEGER *c2i_ASN
001cbf0: 315f 494e 5445 4745 5228 4153 4e31 5f49  1_INTEGER(ASN1_I
001cc00: 4e54 4547 4552 202a 2a61 2c63 6f6e 7374  NTEGER **a,const
001cc10: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
001cc20: 2a70 702c 0a20 2020 6c6f 6e67 206c 656e  *pp,.   long len
001cc30: 6774 6829 3b0a 4153 4e31 5f49 4e54 4547  gth);.ASN1_INTEG
001cc40: 4552 202a 6432 695f 4153 4e31 5f55 494e  ER *d2i_ASN1_UIN
001cc50: 5445 4745 5228 4153 4e31 5f49 4e54 4547  TEGER(ASN1_INTEG
001cc60: 4552 202a 2a61 2c63 6f6e 7374 2075 6e73  ER **a,const uns
001cc70: 6967 6e65 6420 6368 6172 202a 2a70 702c  igned char **pp,
001cc80: 0a20 2020 6c6f 6e67 206c 656e 6774 6829  .   long length)
001cc90: 3b0a 4153 4e31 5f49 4e54 4547 4552 202a  ;.ASN1_INTEGER *
001cca0: 2041 534e 315f 494e 5445 4745 525f 6475   ASN1_INTEGER_du
001ccb0: 7028 636f 6e73 7420 4153 4e31 5f49 4e54  p(const ASN1_INT
001ccc0: 4547 4552 202a 7829 3b0a 696e 7420 4153  EGER *x);.int AS
001ccd0: 4e31 5f49 4e54 4547 4552 5f63 6d70 2863  N1_INTEGER_cmp(c
001cce0: 6f6e 7374 2041 534e 315f 494e 5445 4745  onst ASN1_INTEGE
001ccf0: 5220 2a78 2c20 636f 6e73 7420 4153 4e31  R *x, const ASN1
001cd00: 5f49 4e54 4547 4552 202a 7929 3b0a 0a41  _INTEGER *y);..A
001cd10: 534e 315f 454e 554d 4552 4154 4544 202a  SN1_ENUMERATED *
001cd20: 4153 4e31 5f45 4e55 4d45 5241 5445 445f  ASN1_ENUMERATED_
001cd30: 6e65 7728 766f 6964 293b 2076 6f69 6420  new(void); void 
001cd40: 4153 4e31 5f45 4e55 4d45 5241 5445 445f  ASN1_ENUMERATED_
001cd50: 6672 6565 2841 534e 315f 454e 554d 4552  free(ASN1_ENUMER
001cd60: 4154 4544 202a 6129 3b20 4153 4e31 5f45  ATED *a); ASN1_E
001cd70: 4e55 4d45 5241 5445 4420 2a64 3269 5f41  NUMERATED *d2i_A
001cd80: 534e 315f 454e 554d 4552 4154 4544 2841  SN1_ENUMERATED(A
001cd90: 534e 315f 454e 554d 4552 4154 4544 202a  SN1_ENUMERATED *
001cda0: 2a61 2c20 636f 6e73 7420 756e 7369 676e  *a, const unsign
001cdb0: 6564 2063 6861 7220 2a2a 696e 2c20 6c6f  ed char **in, lo
001cdc0: 6e67 206c 656e 293b 2069 6e74 2069 3264  ng len); int i2d
001cdd0: 5f41 534e 315f 454e 554d 4552 4154 4544  _ASN1_ENUMERATED
001cde0: 2841 534e 315f 454e 554d 4552 4154 4544  (ASN1_ENUMERATED
001cdf0: 202a 612c 2075 6e73 6967 6e65 6420 6368   *a, unsigned ch
001ce00: 6172 202a 2a6f 7574 293b 2065 7874 6572  ar **out); exter
001ce10: 6e20 636f 6e73 7420 4153 4e31 5f49 5445  n const ASN1_ITE
001ce20: 4d20 4153 4e31 5f45 4e55 4d45 5241 5445  M ASN1_ENUMERATE
001ce30: 445f 6974 3b0a 0a69 6e74 2041 534e 315f  D_it;..int ASN1_
001ce40: 5554 4354 494d 455f 6368 6563 6b28 4153  UTCTIME_check(AS
001ce50: 4e31 5f55 5443 5449 4d45 202a 6129 3b0a  N1_UTCTIME *a);.
001ce60: 4153 4e31 5f55 5443 5449 4d45 202a 4153  ASN1_UTCTIME *AS
001ce70: 4e31 5f55 5443 5449 4d45 5f73 6574 2841  N1_UTCTIME_set(A
001ce80: 534e 315f 5554 4354 494d 4520 2a73 2c74  SN1_UTCTIME *s,t
001ce90: 696d 655f 7420 7429 3b0a 4153 4e31 5f55  ime_t t);.ASN1_U
001cea0: 5443 5449 4d45 202a 4153 4e31 5f55 5443  TCTIME *ASN1_UTC
001ceb0: 5449 4d45 5f61 646a 2841 534e 315f 5554  TIME_adj(ASN1_UT
001cec0: 4354 494d 4520 2a73 2c20 7469 6d65 5f74  CTIME *s, time_t
001ced0: 2074 2c0a 2020 2020 696e 7420 6f66 6673   t,.    int offs
001cee0: 6574 5f64 6179 2c20 6c6f 6e67 206f 6666  et_day, long off
001cef0: 7365 745f 7365 6329 3b0a 696e 7420 4153  set_sec);.int AS
001cf00: 4e31 5f55 5443 5449 4d45 5f73 6574 5f73  N1_UTCTIME_set_s
001cf10: 7472 696e 6728 4153 4e31 5f55 5443 5449  tring(ASN1_UTCTI
001cf20: 4d45 202a 732c 2063 6f6e 7374 2063 6861  ME *s, const cha
001cf30: 7220 2a73 7472 293b 0a69 6e74 2041 534e  r *str);.int ASN
001cf40: 315f 5554 4354 494d 455f 636d 705f 7469  1_UTCTIME_cmp_ti
001cf50: 6d65 5f74 2863 6f6e 7374 2041 534e 315f  me_t(const ASN1_
001cf60: 5554 4354 494d 4520 2a73 2c20 7469 6d65  UTCTIME *s, time
001cf70: 5f74 2074 293b 0a0a 0a0a 0a69 6e74 2041  _t t);.....int A
001cf80: 534e 315f 4745 4e45 5241 4c49 5a45 4454  SN1_GENERALIZEDT
001cf90: 494d 455f 6368 6563 6b28 4153 4e31 5f47  IME_check(ASN1_G
001cfa0: 454e 4552 414c 495a 4544 5449 4d45 202a  ENERALIZEDTIME *
001cfb0: 6129 3b0a 4153 4e31 5f47 454e 4552 414c  a);.ASN1_GENERAL
001cfc0: 495a 4544 5449 4d45 202a 4153 4e31 5f47  IZEDTIME *ASN1_G
001cfd0: 454e 4552 414c 495a 4544 5449 4d45 5f73  ENERALIZEDTIME_s
001cfe0: 6574 2841 534e 315f 4745 4e45 5241 4c49  et(ASN1_GENERALI
001cff0: 5a45 4454 494d 4520 2a73 2c74 696d 655f  ZEDTIME *s,time_
001d000: 7420 7429 3b0a 4153 4e31 5f47 454e 4552  t t);.ASN1_GENER
001d010: 414c 495a 4544 5449 4d45 202a 4153 4e31  ALIZEDTIME *ASN1
001d020: 5f47 454e 4552 414c 495a 4544 5449 4d45  _GENERALIZEDTIME
001d030: 5f61 646a 2841 534e 315f 4745 4e45 5241  _adj(ASN1_GENERA
001d040: 4c49 5a45 4454 494d 4520 2a73 2c0a 2020  LIZEDTIME *s,.  
001d050: 2020 2020 7469 6d65 5f74 2074 2c20 696e      time_t t, in
001d060: 7420 6f66 6673 6574 5f64 6179 2c20 6c6f  t offset_day, lo
001d070: 6e67 206f 6666 7365 745f 7365 6329 3b0a  ng offset_sec);.
001d080: 696e 7420 4153 4e31 5f47 454e 4552 414c  int ASN1_GENERAL
001d090: 495a 4544 5449 4d45 5f73 6574 5f73 7472  IZEDTIME_set_str
001d0a0: 696e 6728 4153 4e31 5f47 454e 4552 414c  ing(ASN1_GENERAL
001d0b0: 495a 4544 5449 4d45 202a 732c 2063 6f6e  IZEDTIME *s, con
001d0c0: 7374 2063 6861 7220 2a73 7472 293b 0a0a  st char *str);..
001d0d0: 4153 4e31 5f4f 4354 4554 5f53 5452 494e  ASN1_OCTET_STRIN
001d0e0: 4720 2a41 534e 315f 4f43 5445 545f 5354  G *ASN1_OCTET_ST
001d0f0: 5249 4e47 5f6e 6577 2876 6f69 6429 3b20  RING_new(void); 
001d100: 766f 6964 2041 534e 315f 4f43 5445 545f  void ASN1_OCTET_
001d110: 5354 5249 4e47 5f66 7265 6528 4153 4e31  STRING_free(ASN1
001d120: 5f4f 4354 4554 5f53 5452 494e 4720 2a61  _OCTET_STRING *a
001d130: 293b 2041 534e 315f 4f43 5445 545f 5354  ); ASN1_OCTET_ST
001d140: 5249 4e47 202a 6432 695f 4153 4e31 5f4f  RING *d2i_ASN1_O
001d150: 4354 4554 5f53 5452 494e 4728 4153 4e31  CTET_STRING(ASN1
001d160: 5f4f 4354 4554 5f53 5452 494e 4720 2a2a  _OCTET_STRING **
001d170: 612c 2063 6f6e 7374 2075 6e73 6967 6e65  a, const unsigne
001d180: 6420 6368 6172 202a 2a69 6e2c 206c 6f6e  d char **in, lon
001d190: 6720 6c65 6e29 3b20 696e 7420 6932 645f  g len); int i2d_
001d1a0: 4153 4e31 5f4f 4354 4554 5f53 5452 494e  ASN1_OCTET_STRIN
001d1b0: 4728 4153 4e31 5f4f 4354 4554 5f53 5452  G(ASN1_OCTET_STR
001d1c0: 494e 4720 2a61 2c20 756e 7369 676e 6564  ING *a, unsigned
001d1d0: 2063 6861 7220 2a2a 6f75 7429 3b20 6578   char **out); ex
001d1e0: 7465 726e 2063 6f6e 7374 2041 534e 315f  tern const ASN1_
001d1f0: 4954 454d 2041 534e 315f 4f43 5445 545f  ITEM ASN1_OCTET_
001d200: 5354 5249 4e47 5f69 743b 0a41 534e 315f  STRING_it;.ASN1_
001d210: 4f43 5445 545f 5354 5249 4e47 202a 2041  OCTET_STRING * A
001d220: 534e 315f 4f43 5445 545f 5354 5249 4e47  SN1_OCTET_STRING
001d230: 5f64 7570 2863 6f6e 7374 2041 534e 315f  _dup(const ASN1_
001d240: 4f43 5445 545f 5354 5249 4e47 202a 6129  OCTET_STRING *a)
001d250: 3b0a 696e 7420 4153 4e31 5f4f 4354 4554  ;.int ASN1_OCTET
001d260: 5f53 5452 494e 475f 636d 7028 636f 6e73  _STRING_cmp(cons
001d270: 7420 4153 4e31 5f4f 4354 4554 5f53 5452  t ASN1_OCTET_STR
001d280: 494e 4720 2a61 2c20 636f 6e73 7420 4153  ING *a, const AS
001d290: 4e31 5f4f 4354 4554 5f53 5452 494e 4720  N1_OCTET_STRING 
001d2a0: 2a62 293b 0a69 6e74 2041 534e 315f 4f43  *b);.int ASN1_OC
001d2b0: 5445 545f 5354 5249 4e47 5f73 6574 2841  TET_STRING_set(A
001d2c0: 534e 315f 4f43 5445 545f 5354 5249 4e47  SN1_OCTET_STRING
001d2d0: 202a 7374 722c 2063 6f6e 7374 2075 6e73   *str, const uns
001d2e0: 6967 6e65 6420 6368 6172 202a 6461 7461  igned char *data
001d2f0: 2c20 696e 7420 6c65 6e29 3b0a 0a41 534e  , int len);..ASN
001d300: 315f 5649 5349 424c 4553 5452 494e 4720  1_VISIBLESTRING 
001d310: 2a41 534e 315f 5649 5349 424c 4553 5452  *ASN1_VISIBLESTR
001d320: 494e 475f 6e65 7728 766f 6964 293b 2076  ING_new(void); v
001d330: 6f69 6420 4153 4e31 5f56 4953 4942 4c45  oid ASN1_VISIBLE
001d340: 5354 5249 4e47 5f66 7265 6528 4153 4e31  STRING_free(ASN1
001d350: 5f56 4953 4942 4c45 5354 5249 4e47 202a  _VISIBLESTRING *
001d360: 6129 3b20 4153 4e31 5f56 4953 4942 4c45  a); ASN1_VISIBLE
001d370: 5354 5249 4e47 202a 6432 695f 4153 4e31  STRING *d2i_ASN1
001d380: 5f56 4953 4942 4c45 5354 5249 4e47 2841  _VISIBLESTRING(A
001d390: 534e 315f 5649 5349 424c 4553 5452 494e  SN1_VISIBLESTRIN
001d3a0: 4720 2a2a 612c 2063 6f6e 7374 2075 6e73  G **a, const uns
001d3b0: 6967 6e65 6420 6368 6172 202a 2a69 6e2c  igned char **in,
001d3c0: 206c 6f6e 6720 6c65 6e29 3b20 696e 7420   long len); int 
001d3d0: 6932 645f 4153 4e31 5f56 4953 4942 4c45  i2d_ASN1_VISIBLE
001d3e0: 5354 5249 4e47 2841 534e 315f 5649 5349  STRING(ASN1_VISI
001d3f0: 424c 4553 5452 494e 4720 2a61 2c20 756e  BLESTRING *a, un
001d400: 7369 676e 6564 2063 6861 7220 2a2a 6f75  signed char **ou
001d410: 7429 3b20 6578 7465 726e 2063 6f6e 7374  t); extern const
001d420: 2041 534e 315f 4954 454d 2041 534e 315f   ASN1_ITEM ASN1_
001d430: 5649 5349 424c 4553 5452 494e 475f 6974  VISIBLESTRING_it
001d440: 3b0a 4153 4e31 5f55 4e49 5645 5253 414c  ;.ASN1_UNIVERSAL
001d450: 5354 5249 4e47 202a 4153 4e31 5f55 4e49  STRING *ASN1_UNI
001d460: 5645 5253 414c 5354 5249 4e47 5f6e 6577  VERSALSTRING_new
001d470: 2876 6f69 6429 3b20 766f 6964 2041 534e  (void); void ASN
001d480: 315f 554e 4956 4552 5341 4c53 5452 494e  1_UNIVERSALSTRIN
001d490: 475f 6672 6565 2841 534e 315f 554e 4956  G_free(ASN1_UNIV
001d4a0: 4552 5341 4c53 5452 494e 4720 2a61 293b  ERSALSTRING *a);
001d4b0: 2041 534e 315f 554e 4956 4552 5341 4c53   ASN1_UNIVERSALS
001d4c0: 5452 494e 4720 2a64 3269 5f41 534e 315f  TRING *d2i_ASN1_
001d4d0: 554e 4956 4552 5341 4c53 5452 494e 4728  UNIVERSALSTRING(
001d4e0: 4153 4e31 5f55 4e49 5645 5253 414c 5354  ASN1_UNIVERSALST
001d4f0: 5249 4e47 202a 2a61 2c20 636f 6e73 7420  RING **a, const 
001d500: 756e 7369 676e 6564 2063 6861 7220 2a2a  unsigned char **
001d510: 696e 2c20 6c6f 6e67 206c 656e 293b 2069  in, long len); i
001d520: 6e74 2069 3264 5f41 534e 315f 554e 4956  nt i2d_ASN1_UNIV
001d530: 4552 5341 4c53 5452 494e 4728 4153 4e31  ERSALSTRING(ASN1
001d540: 5f55 4e49 5645 5253 414c 5354 5249 4e47  _UNIVERSALSTRING
001d550: 202a 612c 2075 6e73 6967 6e65 6420 6368   *a, unsigned ch
001d560: 6172 202a 2a6f 7574 293b 2065 7874 6572  ar **out); exter
001d570: 6e20 636f 6e73 7420 4153 4e31 5f49 5445  n const ASN1_ITE
001d580: 4d20 4153 4e31 5f55 4e49 5645 5253 414c  M ASN1_UNIVERSAL
001d590: 5354 5249 4e47 5f69 743b 0a41 534e 315f  STRING_it;.ASN1_
001d5a0: 5554 4638 5354 5249 4e47 202a 4153 4e31  UTF8STRING *ASN1
001d5b0: 5f55 5446 3853 5452 494e 475f 6e65 7728  _UTF8STRING_new(
001d5c0: 766f 6964 293b 2076 6f69 6420 4153 4e31  void); void ASN1
001d5d0: 5f55 5446 3853 5452 494e 475f 6672 6565  _UTF8STRING_free
001d5e0: 2841 534e 315f 5554 4638 5354 5249 4e47  (ASN1_UTF8STRING
001d5f0: 202a 6129 3b20 4153 4e31 5f55 5446 3853   *a); ASN1_UTF8S
001d600: 5452 494e 4720 2a64 3269 5f41 534e 315f  TRING *d2i_ASN1_
001d610: 5554 4638 5354 5249 4e47 2841 534e 315f  UTF8STRING(ASN1_
001d620: 5554 4638 5354 5249 4e47 202a 2a61 2c20  UTF8STRING **a, 
001d630: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
001d640: 6861 7220 2a2a 696e 2c20 6c6f 6e67 206c  har **in, long l
001d650: 656e 293b 2069 6e74 2069 3264 5f41 534e  en); int i2d_ASN
001d660: 315f 5554 4638 5354 5249 4e47 2841 534e  1_UTF8STRING(ASN
001d670: 315f 5554 4638 5354 5249 4e47 202a 612c  1_UTF8STRING *a,
001d680: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
001d690: 2a6f 7574 293b 2065 7874 6572 6e20 636f  *out); extern co
001d6a0: 6e73 7420 4153 4e31 5f49 5445 4d20 4153  nst ASN1_ITEM AS
001d6b0: 4e31 5f55 5446 3853 5452 494e 475f 6974  N1_UTF8STRING_it
001d6c0: 3b0a 4153 4e31 5f4e 554c 4c20 2a41 534e  ;.ASN1_NULL *ASN
001d6d0: 315f 4e55 4c4c 5f6e 6577 2876 6f69 6429  1_NULL_new(void)
001d6e0: 3b20 766f 6964 2041 534e 315f 4e55 4c4c  ; void ASN1_NULL
001d6f0: 5f66 7265 6528 4153 4e31 5f4e 554c 4c20  _free(ASN1_NULL 
001d700: 2a61 293b 2041 534e 315f 4e55 4c4c 202a  *a); ASN1_NULL *
001d710: 6432 695f 4153 4e31 5f4e 554c 4c28 4153  d2i_ASN1_NULL(AS
001d720: 4e31 5f4e 554c 4c20 2a2a 612c 2063 6f6e  N1_NULL **a, con
001d730: 7374 2075 6e73 6967 6e65 6420 6368 6172  st unsigned char
001d740: 202a 2a69 6e2c 206c 6f6e 6720 6c65 6e29   **in, long len)
001d750: 3b20 696e 7420 6932 645f 4153 4e31 5f4e  ; int i2d_ASN1_N
001d760: 554c 4c28 4153 4e31 5f4e 554c 4c20 2a61  ULL(ASN1_NULL *a
001d770: 2c20 756e 7369 676e 6564 2063 6861 7220  , unsigned char 
001d780: 2a2a 6f75 7429 3b20 6578 7465 726e 2063  **out); extern c
001d790: 6f6e 7374 2041 534e 315f 4954 454d 2041  onst ASN1_ITEM A
001d7a0: 534e 315f 4e55 4c4c 5f69 743b 0a41 534e  SN1_NULL_it;.ASN
001d7b0: 315f 424d 5053 5452 494e 4720 2a41 534e  1_BMPSTRING *ASN
001d7c0: 315f 424d 5053 5452 494e 475f 6e65 7728  1_BMPSTRING_new(
001d7d0: 766f 6964 293b 2076 6f69 6420 4153 4e31  void); void ASN1
001d7e0: 5f42 4d50 5354 5249 4e47 5f66 7265 6528  _BMPSTRING_free(
001d7f0: 4153 4e31 5f42 4d50 5354 5249 4e47 202a  ASN1_BMPSTRING *
001d800: 6129 3b20 4153 4e31 5f42 4d50 5354 5249  a); ASN1_BMPSTRI
001d810: 4e47 202a 6432 695f 4153 4e31 5f42 4d50  NG *d2i_ASN1_BMP
001d820: 5354 5249 4e47 2841 534e 315f 424d 5053  STRING(ASN1_BMPS
001d830: 5452 494e 4720 2a2a 612c 2063 6f6e 7374  TRING **a, const
001d840: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
001d850: 2a69 6e2c 206c 6f6e 6720 6c65 6e29 3b20  *in, long len); 
001d860: 696e 7420 6932 645f 4153 4e31 5f42 4d50  int i2d_ASN1_BMP
001d870: 5354 5249 4e47 2841 534e 315f 424d 5053  STRING(ASN1_BMPS
001d880: 5452 494e 4720 2a61 2c20 756e 7369 676e  TRING *a, unsign
001d890: 6564 2063 6861 7220 2a2a 6f75 7429 3b20  ed char **out); 
001d8a0: 6578 7465 726e 2063 6f6e 7374 2041 534e  extern const ASN
001d8b0: 315f 4954 454d 2041 534e 315f 424d 5053  1_ITEM ASN1_BMPS
001d8c0: 5452 494e 475f 6974 3b0a 0a69 6e74 2055  TRING_it;..int U
001d8d0: 5446 385f 6765 7463 2863 6f6e 7374 2075  TF8_getc(const u
001d8e0: 6e73 6967 6e65 6420 6368 6172 202a 7374  nsigned char *st
001d8f0: 722c 2069 6e74 206c 656e 2c20 756e 7369  r, int len, unsi
001d900: 676e 6564 206c 6f6e 6720 2a76 616c 293b  gned long *val);
001d910: 0a69 6e74 2055 5446 385f 7075 7463 2875  .int UTF8_putc(u
001d920: 6e73 6967 6e65 6420 6368 6172 202a 7374  nsigned char *st
001d930: 722c 2069 6e74 206c 656e 2c20 756e 7369  r, int len, unsi
001d940: 676e 6564 206c 6f6e 6720 7661 6c75 6529  gned long value)
001d950: 3b0a 0a41 534e 315f 5354 5249 4e47 202a  ;..ASN1_STRING *
001d960: 4153 4e31 5f50 5249 4e54 4142 4c45 5f6e  ASN1_PRINTABLE_n
001d970: 6577 2876 6f69 6429 3b20 766f 6964 2041  ew(void); void A
001d980: 534e 315f 5052 494e 5441 424c 455f 6672  SN1_PRINTABLE_fr
001d990: 6565 2841 534e 315f 5354 5249 4e47 202a  ee(ASN1_STRING *
001d9a0: 6129 3b20 4153 4e31 5f53 5452 494e 4720  a); ASN1_STRING 
001d9b0: 2a64 3269 5f41 534e 315f 5052 494e 5441  *d2i_ASN1_PRINTA
001d9c0: 424c 4528 4153 4e31 5f53 5452 494e 4720  BLE(ASN1_STRING 
001d9d0: 2a2a 612c 2063 6f6e 7374 2075 6e73 6967  **a, const unsig
001d9e0: 6e65 6420 6368 6172 202a 2a69 6e2c 206c  ned char **in, l
001d9f0: 6f6e 6720 6c65 6e29 3b20 696e 7420 6932  ong len); int i2
001da00: 645f 4153 4e31 5f50 5249 4e54 4142 4c45  d_ASN1_PRINTABLE
001da10: 2841 534e 315f 5354 5249 4e47 202a 612c  (ASN1_STRING *a,
001da20: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
001da30: 2a6f 7574 293b 2065 7874 6572 6e20 636f  *out); extern co
001da40: 6e73 7420 4153 4e31 5f49 5445 4d20 4153  nst ASN1_ITEM AS
001da50: 4e31 5f50 5249 4e54 4142 4c45 5f69 743b  N1_PRINTABLE_it;
001da60: 0a0a 4153 4e31 5f53 5452 494e 4720 2a44  ..ASN1_STRING *D
001da70: 4952 4543 544f 5259 5354 5249 4e47 5f6e  IRECTORYSTRING_n
001da80: 6577 2876 6f69 6429 3b20 766f 6964 2044  ew(void); void D
001da90: 4952 4543 544f 5259 5354 5249 4e47 5f66  IRECTORYSTRING_f
001daa0: 7265 6528 4153 4e31 5f53 5452 494e 4720  ree(ASN1_STRING 
001dab0: 2a61 293b 2041 534e 315f 5354 5249 4e47  *a); ASN1_STRING
001dac0: 202a 6432 695f 4449 5245 4354 4f52 5953   *d2i_DIRECTORYS
001dad0: 5452 494e 4728 4153 4e31 5f53 5452 494e  TRING(ASN1_STRIN
001dae0: 4720 2a2a 612c 2063 6f6e 7374 2075 6e73  G **a, const uns
001daf0: 6967 6e65 6420 6368 6172 202a 2a69 6e2c  igned char **in,
001db00: 206c 6f6e 6720 6c65 6e29 3b20 696e 7420   long len); int 
001db10: 6932 645f 4449 5245 4354 4f52 5953 5452  i2d_DIRECTORYSTR
001db20: 494e 4728 4153 4e31 5f53 5452 494e 4720  ING(ASN1_STRING 
001db30: 2a61 2c20 756e 7369 676e 6564 2063 6861  *a, unsigned cha
001db40: 7220 2a2a 6f75 7429 3b20 6578 7465 726e  r **out); extern
001db50: 2063 6f6e 7374 2041 534e 315f 4954 454d   const ASN1_ITEM
001db60: 2044 4952 4543 544f 5259 5354 5249 4e47   DIRECTORYSTRING
001db70: 5f69 743b 0a41 534e 315f 5354 5249 4e47  _it;.ASN1_STRING
001db80: 202a 4449 5350 4c41 5954 4558 545f 6e65   *DISPLAYTEXT_ne
001db90: 7728 766f 6964 293b 2076 6f69 6420 4449  w(void); void DI
001dba0: 5350 4c41 5954 4558 545f 6672 6565 2841  SPLAYTEXT_free(A
001dbb0: 534e 315f 5354 5249 4e47 202a 6129 3b20  SN1_STRING *a); 
001dbc0: 4153 4e31 5f53 5452 494e 4720 2a64 3269  ASN1_STRING *d2i
001dbd0: 5f44 4953 504c 4159 5445 5854 2841 534e  _DISPLAYTEXT(ASN
001dbe0: 315f 5354 5249 4e47 202a 2a61 2c20 636f  1_STRING **a, co
001dbf0: 6e73 7420 756e 7369 676e 6564 2063 6861  nst unsigned cha
001dc00: 7220 2a2a 696e 2c20 6c6f 6e67 206c 656e  r **in, long len
001dc10: 293b 2069 6e74 2069 3264 5f44 4953 504c  ); int i2d_DISPL
001dc20: 4159 5445 5854 2841 534e 315f 5354 5249  AYTEXT(ASN1_STRI
001dc30: 4e47 202a 612c 2075 6e73 6967 6e65 6420  NG *a, unsigned 
001dc40: 6368 6172 202a 2a6f 7574 293b 2065 7874  char **out); ext
001dc50: 6572 6e20 636f 6e73 7420 4153 4e31 5f49  ern const ASN1_I
001dc60: 5445 4d20 4449 5350 4c41 5954 4558 545f  TEM DISPLAYTEXT_
001dc70: 6974 3b0a 4153 4e31 5f50 5249 4e54 4142  it;.ASN1_PRINTAB
001dc80: 4c45 5354 5249 4e47 202a 4153 4e31 5f50  LESTRING *ASN1_P
001dc90: 5249 4e54 4142 4c45 5354 5249 4e47 5f6e  RINTABLESTRING_n
001dca0: 6577 2876 6f69 6429 3b20 766f 6964 2041  ew(void); void A
001dcb0: 534e 315f 5052 494e 5441 424c 4553 5452  SN1_PRINTABLESTR
001dcc0: 494e 475f 6672 6565 2841 534e 315f 5052  ING_free(ASN1_PR
001dcd0: 494e 5441 424c 4553 5452 494e 4720 2a61  INTABLESTRING *a
001dce0: 293b 2041 534e 315f 5052 494e 5441 424c  ); ASN1_PRINTABL
001dcf0: 4553 5452 494e 4720 2a64 3269 5f41 534e  ESTRING *d2i_ASN
001dd00: 315f 5052 494e 5441 424c 4553 5452 494e  1_PRINTABLESTRIN
001dd10: 4728 4153 4e31 5f50 5249 4e54 4142 4c45  G(ASN1_PRINTABLE
001dd20: 5354 5249 4e47 202a 2a61 2c20 636f 6e73  STRING **a, cons
001dd30: 7420 756e 7369 676e 6564 2063 6861 7220  t unsigned char 
001dd40: 2a2a 696e 2c20 6c6f 6e67 206c 656e 293b  **in, long len);
001dd50: 2069 6e74 2069 3264 5f41 534e 315f 5052   int i2d_ASN1_PR
001dd60: 494e 5441 424c 4553 5452 494e 4728 4153  INTABLESTRING(AS
001dd70: 4e31 5f50 5249 4e54 4142 4c45 5354 5249  N1_PRINTABLESTRI
001dd80: 4e47 202a 612c 2075 6e73 6967 6e65 6420  NG *a, unsigned 
001dd90: 6368 6172 202a 2a6f 7574 293b 2065 7874  char **out); ext
001dda0: 6572 6e20 636f 6e73 7420 4153 4e31 5f49  ern const ASN1_I
001ddb0: 5445 4d20 4153 4e31 5f50 5249 4e54 4142  TEM ASN1_PRINTAB
001ddc0: 4c45 5354 5249 4e47 5f69 743b 0a41 534e  LESTRING_it;.ASN
001ddd0: 315f 5436 3153 5452 494e 4720 2a41 534e  1_T61STRING *ASN
001dde0: 315f 5436 3153 5452 494e 475f 6e65 7728  1_T61STRING_new(
001ddf0: 766f 6964 293b 2076 6f69 6420 4153 4e31  void); void ASN1
001de00: 5f54 3631 5354 5249 4e47 5f66 7265 6528  _T61STRING_free(
001de10: 4153 4e31 5f54 3631 5354 5249 4e47 202a  ASN1_T61STRING *
001de20: 6129 3b20 4153 4e31 5f54 3631 5354 5249  a); ASN1_T61STRI
001de30: 4e47 202a 6432 695f 4153 4e31 5f54 3631  NG *d2i_ASN1_T61
001de40: 5354 5249 4e47 2841 534e 315f 5436 3153  STRING(ASN1_T61S
001de50: 5452 494e 4720 2a2a 612c 2063 6f6e 7374  TRING **a, const
001de60: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
001de70: 2a69 6e2c 206c 6f6e 6720 6c65 6e29 3b20  *in, long len); 
001de80: 696e 7420 6932 645f 4153 4e31 5f54 3631  int i2d_ASN1_T61
001de90: 5354 5249 4e47 2841 534e 315f 5436 3153  STRING(ASN1_T61S
001dea0: 5452 494e 4720 2a61 2c20 756e 7369 676e  TRING *a, unsign
001deb0: 6564 2063 6861 7220 2a2a 6f75 7429 3b20  ed char **out); 
001dec0: 6578 7465 726e 2063 6f6e 7374 2041 534e  extern const ASN
001ded0: 315f 4954 454d 2041 534e 315f 5436 3153  1_ITEM ASN1_T61S
001dee0: 5452 494e 475f 6974 3b0a 4153 4e31 5f49  TRING_it;.ASN1_I
001def0: 4135 5354 5249 4e47 202a 4153 4e31 5f49  A5STRING *ASN1_I
001df00: 4135 5354 5249 4e47 5f6e 6577 2876 6f69  A5STRING_new(voi
001df10: 6429 3b20 766f 6964 2041 534e 315f 4941  d); void ASN1_IA
001df20: 3553 5452 494e 475f 6672 6565 2841 534e  5STRING_free(ASN
001df30: 315f 4941 3553 5452 494e 4720 2a61 293b  1_IA5STRING *a);
001df40: 2041 534e 315f 4941 3553 5452 494e 4720   ASN1_IA5STRING 
001df50: 2a64 3269 5f41 534e 315f 4941 3553 5452  *d2i_ASN1_IA5STR
001df60: 494e 4728 4153 4e31 5f49 4135 5354 5249  ING(ASN1_IA5STRI
001df70: 4e47 202a 2a61 2c20 636f 6e73 7420 756e  NG **a, const un
001df80: 7369 676e 6564 2063 6861 7220 2a2a 696e  signed char **in
001df90: 2c20 6c6f 6e67 206c 656e 293b 2069 6e74  , long len); int
001dfa0: 2069 3264 5f41 534e 315f 4941 3553 5452   i2d_ASN1_IA5STR
001dfb0: 494e 4728 4153 4e31 5f49 4135 5354 5249  ING(ASN1_IA5STRI
001dfc0: 4e47 202a 612c 2075 6e73 6967 6e65 6420  NG *a, unsigned 
001dfd0: 6368 6172 202a 2a6f 7574 293b 2065 7874  char **out); ext
001dfe0: 6572 6e20 636f 6e73 7420 4153 4e31 5f49  ern const ASN1_I
001dff0: 5445 4d20 4153 4e31 5f49 4135 5354 5249  TEM ASN1_IA5STRI
001e000: 4e47 5f69 743b 0a41 534e 315f 4745 4e45  NG_it;.ASN1_GENE
001e010: 5241 4c53 5452 494e 4720 2a41 534e 315f  RALSTRING *ASN1_
001e020: 4745 4e45 5241 4c53 5452 494e 475f 6e65  GENERALSTRING_ne
001e030: 7728 766f 6964 293b 2076 6f69 6420 4153  w(void); void AS
001e040: 4e31 5f47 454e 4552 414c 5354 5249 4e47  N1_GENERALSTRING
001e050: 5f66 7265 6528 4153 4e31 5f47 454e 4552  _free(ASN1_GENER
001e060: 414c 5354 5249 4e47 202a 6129 3b20 4153  ALSTRING *a); AS
001e070: 4e31 5f47 454e 4552 414c 5354 5249 4e47  N1_GENERALSTRING
001e080: 202a 6432 695f 4153 4e31 5f47 454e 4552   *d2i_ASN1_GENER
001e090: 414c 5354 5249 4e47 2841 534e 315f 4745  ALSTRING(ASN1_GE
001e0a0: 4e45 5241 4c53 5452 494e 4720 2a2a 612c  NERALSTRING **a,
001e0b0: 2063 6f6e 7374 2075 6e73 6967 6e65 6420   const unsigned 
001e0c0: 6368 6172 202a 2a69 6e2c 206c 6f6e 6720  char **in, long 
001e0d0: 6c65 6e29 3b20 696e 7420 6932 645f 4153  len); int i2d_AS
001e0e0: 4e31 5f47 454e 4552 414c 5354 5249 4e47  N1_GENERALSTRING
001e0f0: 2841 534e 315f 4745 4e45 5241 4c53 5452  (ASN1_GENERALSTR
001e100: 494e 4720 2a61 2c20 756e 7369 676e 6564  ING *a, unsigned
001e110: 2063 6861 7220 2a2a 6f75 7429 3b20 6578   char **out); ex
001e120: 7465 726e 2063 6f6e 7374 2041 534e 315f  tern const ASN1_
001e130: 4954 454d 2041 534e 315f 4745 4e45 5241  ITEM ASN1_GENERA
001e140: 4c53 5452 494e 475f 6974 3b0a 4153 4e31  LSTRING_it;.ASN1
001e150: 5f55 5443 5449 4d45 202a 4153 4e31 5f55  _UTCTIME *ASN1_U
001e160: 5443 5449 4d45 5f6e 6577 2876 6f69 6429  TCTIME_new(void)
001e170: 3b20 766f 6964 2041 534e 315f 5554 4354  ; void ASN1_UTCT
001e180: 494d 455f 6672 6565 2841 534e 315f 5554  IME_free(ASN1_UT
001e190: 4354 494d 4520 2a61 293b 2041 534e 315f  CTIME *a); ASN1_
001e1a0: 5554 4354 494d 4520 2a64 3269 5f41 534e  UTCTIME *d2i_ASN
001e1b0: 315f 5554 4354 494d 4528 4153 4e31 5f55  1_UTCTIME(ASN1_U
001e1c0: 5443 5449 4d45 202a 2a61 2c20 636f 6e73  TCTIME **a, cons
001e1d0: 7420 756e 7369 676e 6564 2063 6861 7220  t unsigned char 
001e1e0: 2a2a 696e 2c20 6c6f 6e67 206c 656e 293b  **in, long len);
001e1f0: 2069 6e74 2069 3264 5f41 534e 315f 5554   int i2d_ASN1_UT
001e200: 4354 494d 4528 4153 4e31 5f55 5443 5449  CTIME(ASN1_UTCTI
001e210: 4d45 202a 612c 2075 6e73 6967 6e65 6420  ME *a, unsigned 
001e220: 6368 6172 202a 2a6f 7574 293b 2065 7874  char **out); ext
001e230: 6572 6e20 636f 6e73 7420 4153 4e31 5f49  ern const ASN1_I
001e240: 5445 4d20 4153 4e31 5f55 5443 5449 4d45  TEM ASN1_UTCTIME
001e250: 5f69 743b 0a41 534e 315f 4745 4e45 5241  _it;.ASN1_GENERA
001e260: 4c49 5a45 4454 494d 4520 2a41 534e 315f  LIZEDTIME *ASN1_
001e270: 4745 4e45 5241 4c49 5a45 4454 494d 455f  GENERALIZEDTIME_
001e280: 6e65 7728 766f 6964 293b 2076 6f69 6420  new(void); void 
001e290: 4153 4e31 5f47 454e 4552 414c 495a 4544  ASN1_GENERALIZED
001e2a0: 5449 4d45 5f66 7265 6528 4153 4e31 5f47  TIME_free(ASN1_G
001e2b0: 454e 4552 414c 495a 4544 5449 4d45 202a  ENERALIZEDTIME *
001e2c0: 6129 3b20 4153 4e31 5f47 454e 4552 414c  a); ASN1_GENERAL
001e2d0: 495a 4544 5449 4d45 202a 6432 695f 4153  IZEDTIME *d2i_AS
001e2e0: 4e31 5f47 454e 4552 414c 495a 4544 5449  N1_GENERALIZEDTI
001e2f0: 4d45 2841 534e 315f 4745 4e45 5241 4c49  ME(ASN1_GENERALI
001e300: 5a45 4454 494d 4520 2a2a 612c 2063 6f6e  ZEDTIME **a, con
001e310: 7374 2075 6e73 6967 6e65 6420 6368 6172  st unsigned char
001e320: 202a 2a69 6e2c 206c 6f6e 6720 6c65 6e29   **in, long len)
001e330: 3b20 696e 7420 6932 645f 4153 4e31 5f47  ; int i2d_ASN1_G
001e340: 454e 4552 414c 495a 4544 5449 4d45 2841  ENERALIZEDTIME(A
001e350: 534e 315f 4745 4e45 5241 4c49 5a45 4454  SN1_GENERALIZEDT
001e360: 494d 4520 2a61 2c20 756e 7369 676e 6564  IME *a, unsigned
001e370: 2063 6861 7220 2a2a 6f75 7429 3b20 6578   char **out); ex
001e380: 7465 726e 2063 6f6e 7374 2041 534e 315f  tern const ASN1_
001e390: 4954 454d 2041 534e 315f 4745 4e45 5241  ITEM ASN1_GENERA
001e3a0: 4c49 5a45 4454 494d 455f 6974 3b0a 4153  LIZEDTIME_it;.AS
001e3b0: 4e31 5f54 494d 4520 2a41 534e 315f 5449  N1_TIME *ASN1_TI
001e3c0: 4d45 5f6e 6577 2876 6f69 6429 3b20 766f  ME_new(void); vo
001e3d0: 6964 2041 534e 315f 5449 4d45 5f66 7265  id ASN1_TIME_fre
001e3e0: 6528 4153 4e31 5f54 494d 4520 2a61 293b  e(ASN1_TIME *a);
001e3f0: 2041 534e 315f 5449 4d45 202a 6432 695f   ASN1_TIME *d2i_
001e400: 4153 4e31 5f54 494d 4528 4153 4e31 5f54  ASN1_TIME(ASN1_T
001e410: 494d 4520 2a2a 612c 2063 6f6e 7374 2075  IME **a, const u
001e420: 6e73 6967 6e65 6420 6368 6172 202a 2a69  nsigned char **i
001e430: 6e2c 206c 6f6e 6720 6c65 6e29 3b20 696e  n, long len); in
001e440: 7420 6932 645f 4153 4e31 5f54 494d 4528  t i2d_ASN1_TIME(
001e450: 4153 4e31 5f54 494d 4520 2a61 2c20 756e  ASN1_TIME *a, un
001e460: 7369 676e 6564 2063 6861 7220 2a2a 6f75  signed char **ou
001e470: 7429 3b20 6578 7465 726e 2063 6f6e 7374  t); extern const
001e480: 2041 534e 315f 4954 454d 2041 534e 315f   ASN1_ITEM ASN1_
001e490: 5449 4d45 5f69 743b 0a0a 6578 7465 726e  TIME_it;..extern
001e4a0: 2063 6f6e 7374 2041 534e 315f 4954 454d   const ASN1_ITEM
001e4b0: 2041 534e 315f 4f43 5445 545f 5354 5249   ASN1_OCTET_STRI
001e4c0: 4e47 5f4e 4445 465f 6974 3b0a 0a41 534e  NG_NDEF_it;..ASN
001e4d0: 315f 5449 4d45 202a 4153 4e31 5f54 494d  1_TIME *ASN1_TIM
001e4e0: 455f 7365 7428 4153 4e31 5f54 494d 4520  E_set(ASN1_TIME 
001e4f0: 2a73 2c74 696d 655f 7420 7429 3b0a 4153  *s,time_t t);.AS
001e500: 4e31 5f54 494d 4520 2a41 534e 315f 5449  N1_TIME *ASN1_TI
001e510: 4d45 5f61 646a 2841 534e 315f 5449 4d45  ME_adj(ASN1_TIME
001e520: 202a 732c 7469 6d65 5f74 2074 2c0a 2020   *s,time_t t,.  
001e530: 2020 696e 7420 6f66 6673 6574 5f64 6179    int offset_day
001e540: 2c20 6c6f 6e67 206f 6666 7365 745f 7365  , long offset_se
001e550: 6329 3b0a 696e 7420 4153 4e31 5f54 494d  c);.int ASN1_TIM
001e560: 455f 6368 6563 6b28 4153 4e31 5f54 494d  E_check(ASN1_TIM
001e570: 4520 2a74 293b 0a41 534e 315f 4745 4e45  E *t);.ASN1_GENE
001e580: 5241 4c49 5a45 4454 494d 4520 2a41 534e  RALIZEDTIME *ASN
001e590: 315f 5449 4d45 5f74 6f5f 6765 6e65 7261  1_TIME_to_genera
001e5a0: 6c69 7a65 6474 696d 6528 4153 4e31 5f54  lizedtime(ASN1_T
001e5b0: 494d 4520 2a74 2c20 4153 4e31 5f47 454e  IME *t, ASN1_GEN
001e5c0: 4552 414c 495a 4544 5449 4d45 202a 2a6f  ERALIZEDTIME **o
001e5d0: 7574 293b 0a69 6e74 2041 534e 315f 5449  ut);.int ASN1_TI
001e5e0: 4d45 5f73 6574 5f73 7472 696e 6728 4153  ME_set_string(AS
001e5f0: 4e31 5f54 494d 4520 2a73 2c20 636f 6e73  N1_TIME *s, cons
001e600: 7420 6368 6172 202a 7374 7229 3b0a 0a69  t char *str);..i
001e610: 6e74 2069 3264 5f41 534e 315f 5345 5428  nt i2d_ASN1_SET(
001e620: 7374 7275 6374 2073 7461 636b 5f73 745f  struct stack_st_
001e630: 4f50 454e 5353 4c5f 424c 4f43 4b20 2a61  OPENSSL_BLOCK *a
001e640: 2c20 756e 7369 676e 6564 2063 6861 7220  , unsigned char 
001e650: 2a2a 7070 2c0a 2020 2069 3264 5f6f 665f  **pp,.   i2d_of_
001e660: 766f 6964 202a 6932 642c 2069 6e74 2065  void *i2d, int e
001e670: 785f 7461 672c 2069 6e74 2065 785f 636c  x_tag, int ex_cl
001e680: 6173 732c 0a20 2020 696e 7420 6973 5f73  ass,.   int is_s
001e690: 6574 293b 0a73 7472 7563 7420 7374 6163  et);.struct stac
001e6a0: 6b5f 7374 5f4f 5045 4e53 534c 5f42 4c4f  k_st_OPENSSL_BLO
001e6b0: 434b 202a 6432 695f 4153 4e31 5f53 4554  CK *d2i_ASN1_SET
001e6c0: 2873 7472 7563 7420 7374 6163 6b5f 7374  (struct stack_st
001e6d0: 5f4f 5045 4e53 534c 5f42 4c4f 434b 202a  _OPENSSL_BLOCK *
001e6e0: 2a61 2c0a 2020 2020 2020 2020 2063 6f6e  *a,.         con
001e6f0: 7374 2075 6e73 6967 6e65 6420 6368 6172  st unsigned char
001e700: 202a 2a70 702c 0a20 2020 2020 2020 2020   **pp,.         
001e710: 6c6f 6e67 206c 656e 6774 682c 2064 3269  long length, d2i
001e720: 5f6f 665f 766f 6964 202a 6432 692c 0a20  _of_void *d2i,. 
001e730: 2020 2020 2020 2020 766f 6964 2028 2a66          void (*f
001e740: 7265 655f 6675 6e63 2928 4f50 454e 5353  ree_func)(OPENSS
001e750: 4c5f 424c 4f43 4b29 2c20 696e 7420 6578  L_BLOCK), int ex
001e760: 5f74 6167 2c0a 2020 2020 2020 2020 2069  _tag,.         i
001e770: 6e74 2065 785f 636c 6173 7329 3b0a 0a0a  nt ex_class);...
001e780: 696e 7420 6932 615f 4153 4e31 5f49 4e54  int i2a_ASN1_INT
001e790: 4547 4552 2842 494f 202a 6270 2c20 4153  EGER(BIO *bp, AS
001e7a0: 4e31 5f49 4e54 4547 4552 202a 6129 3b0a  N1_INTEGER *a);.
001e7b0: 696e 7420 6132 695f 4153 4e31 5f49 4e54  int a2i_ASN1_INT
001e7c0: 4547 4552 2842 494f 202a 6270 2c41 534e  EGER(BIO *bp,ASN
001e7d0: 315f 494e 5445 4745 5220 2a62 732c 6368  1_INTEGER *bs,ch
001e7e0: 6172 202a 6275 662c 696e 7420 7369 7a65  ar *buf,int size
001e7f0: 293b 0a69 6e74 2069 3261 5f41 534e 315f  );.int i2a_ASN1_
001e800: 454e 554d 4552 4154 4544 2842 494f 202a  ENUMERATED(BIO *
001e810: 6270 2c20 4153 4e31 5f45 4e55 4d45 5241  bp, ASN1_ENUMERA
001e820: 5445 4420 2a61 293b 0a69 6e74 2061 3269  TED *a);.int a2i
001e830: 5f41 534e 315f 454e 554d 4552 4154 4544  _ASN1_ENUMERATED
001e840: 2842 494f 202a 6270 2c41 534e 315f 454e  (BIO *bp,ASN1_EN
001e850: 554d 4552 4154 4544 202a 6273 2c63 6861  UMERATED *bs,cha
001e860: 7220 2a62 7566 2c69 6e74 2073 697a 6529  r *buf,int size)
001e870: 3b0a 696e 7420 6932 615f 4153 4e31 5f4f  ;.int i2a_ASN1_O
001e880: 424a 4543 5428 4249 4f20 2a62 702c 4153  BJECT(BIO *bp,AS
001e890: 4e31 5f4f 424a 4543 5420 2a61 293b 0a69  N1_OBJECT *a);.i
001e8a0: 6e74 2061 3269 5f41 534e 315f 5354 5249  nt a2i_ASN1_STRI
001e8b0: 4e47 2842 494f 202a 6270 2c41 534e 315f  NG(BIO *bp,ASN1_
001e8c0: 5354 5249 4e47 202a 6273 2c63 6861 7220  STRING *bs,char 
001e8d0: 2a62 7566 2c69 6e74 2073 697a 6529 3b0a  *buf,int size);.
001e8e0: 696e 7420 6932 615f 4153 4e31 5f53 5452  int i2a_ASN1_STR
001e8f0: 494e 4728 4249 4f20 2a62 702c 2041 534e  ING(BIO *bp, ASN
001e900: 315f 5354 5249 4e47 202a 612c 2069 6e74  1_STRING *a, int
001e910: 2074 7970 6529 3b0a 0a69 6e74 2069 3274   type);..int i2t
001e920: 5f41 534e 315f 4f42 4a45 4354 2863 6861  _ASN1_OBJECT(cha
001e930: 7220 2a62 7566 2c69 6e74 2062 7566 5f6c  r *buf,int buf_l
001e940: 656e 2c41 534e 315f 4f42 4a45 4354 202a  en,ASN1_OBJECT *
001e950: 6129 3b0a 0a69 6e74 2061 3264 5f41 534e  a);..int a2d_ASN
001e960: 315f 4f42 4a45 4354 2875 6e73 6967 6e65  1_OBJECT(unsigne
001e970: 6420 6368 6172 202a 6f75 742c 696e 7420  d char *out,int 
001e980: 6f6c 656e 2c20 636f 6e73 7420 6368 6172  olen, const char
001e990: 202a 6275 662c 2069 6e74 206e 756d 293b   *buf, int num);
001e9a0: 0a41 534e 315f 4f42 4a45 4354 202a 4153  .ASN1_OBJECT *AS
001e9b0: 4e31 5f4f 424a 4543 545f 6372 6561 7465  N1_OBJECT_create
001e9c0: 2869 6e74 206e 6964 2c20 756e 7369 676e  (int nid, unsign
001e9d0: 6564 2063 6861 7220 2a64 6174 612c 696e  ed char *data,in
001e9e0: 7420 6c65 6e2c 0a20 636f 6e73 7420 6368  t len,. const ch
001e9f0: 6172 202a 736e 2c20 636f 6e73 7420 6368  ar *sn, const ch
001ea00: 6172 202a 6c6e 293b 0a0a 696e 7420 4153  ar *ln);..int AS
001ea10: 4e31 5f49 4e54 4547 4552 5f73 6574 2841  N1_INTEGER_set(A
001ea20: 534e 315f 494e 5445 4745 5220 2a61 2c20  SN1_INTEGER *a, 
001ea30: 6c6f 6e67 2076 293b 0a6c 6f6e 6720 4153  long v);.long AS
001ea40: 4e31 5f49 4e54 4547 4552 5f67 6574 2863  N1_INTEGER_get(c
001ea50: 6f6e 7374 2041 534e 315f 494e 5445 4745  onst ASN1_INTEGE
001ea60: 5220 2a61 293b 0a41 534e 315f 494e 5445  R *a);.ASN1_INTE
001ea70: 4745 5220 2a42 4e5f 746f 5f41 534e 315f  GER *BN_to_ASN1_
001ea80: 494e 5445 4745 5228 636f 6e73 7420 4249  INTEGER(const BI
001ea90: 474e 554d 202a 626e 2c20 4153 4e31 5f49  GNUM *bn, ASN1_I
001eaa0: 4e54 4547 4552 202a 6169 293b 0a42 4947  NTEGER *ai);.BIG
001eab0: 4e55 4d20 2a41 534e 315f 494e 5445 4745  NUM *ASN1_INTEGE
001eac0: 525f 746f 5f42 4e28 636f 6e73 7420 4153  R_to_BN(const AS
001ead0: 4e31 5f49 4e54 4547 4552 202a 6169 2c42  N1_INTEGER *ai,B
001eae0: 4947 4e55 4d20 2a62 6e29 3b0a 0a69 6e74  IGNUM *bn);..int
001eaf0: 2041 534e 315f 454e 554d 4552 4154 4544   ASN1_ENUMERATED
001eb00: 5f73 6574 2841 534e 315f 454e 554d 4552  _set(ASN1_ENUMER
001eb10: 4154 4544 202a 612c 206c 6f6e 6720 7629  ATED *a, long v)
001eb20: 3b0a 6c6f 6e67 2041 534e 315f 454e 554d  ;.long ASN1_ENUM
001eb30: 4552 4154 4544 5f67 6574 2841 534e 315f  ERATED_get(ASN1_
001eb40: 454e 554d 4552 4154 4544 202a 6129 3b0a  ENUMERATED *a);.
001eb50: 4153 4e31 5f45 4e55 4d45 5241 5445 4420  ASN1_ENUMERATED 
001eb60: 2a42 4e5f 746f 5f41 534e 315f 454e 554d  *BN_to_ASN1_ENUM
001eb70: 4552 4154 4544 2842 4947 4e55 4d20 2a62  ERATED(BIGNUM *b
001eb80: 6e2c 2041 534e 315f 454e 554d 4552 4154  n, ASN1_ENUMERAT
001eb90: 4544 202a 6169 293b 0a42 4947 4e55 4d20  ED *ai);.BIGNUM 
001eba0: 2a41 534e 315f 454e 554d 4552 4154 4544  *ASN1_ENUMERATED
001ebb0: 5f74 6f5f 424e 2841 534e 315f 454e 554d  _to_BN(ASN1_ENUM
001ebc0: 4552 4154 4544 202a 6169 2c42 4947 4e55  ERATED *ai,BIGNU
001ebd0: 4d20 2a62 6e29 3b0a 0a0a 0a69 6e74 2041  M *bn);....int A
001ebe0: 534e 315f 5052 494e 5441 424c 455f 7479  SN1_PRINTABLE_ty
001ebf0: 7065 2863 6f6e 7374 2075 6e73 6967 6e65  pe(const unsigne
001ec00: 6420 6368 6172 202a 732c 2069 6e74 206d  d char *s, int m
001ec10: 6178 293b 0a0a 696e 7420 6932 645f 4153  ax);..int i2d_AS
001ec20: 4e31 5f62 7974 6573 2841 534e 315f 5354  N1_bytes(ASN1_ST
001ec30: 5249 4e47 202a 612c 2075 6e73 6967 6e65  RING *a, unsigne
001ec40: 6420 6368 6172 202a 2a70 702c 2069 6e74  d char **pp, int
001ec50: 2074 6167 2c20 696e 7420 7863 6c61 7373   tag, int xclass
001ec60: 293b 0a41 534e 315f 5354 5249 4e47 202a  );.ASN1_STRING *
001ec70: 6432 695f 4153 4e31 5f62 7974 6573 2841  d2i_ASN1_bytes(A
001ec80: 534e 315f 5354 5249 4e47 202a 2a61 2c20  SN1_STRING **a, 
001ec90: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
001eca0: 6861 7220 2a2a 7070 2c0a 206c 6f6e 6720  har **pp,. long 
001ecb0: 6c65 6e67 7468 2c20 696e 7420 5074 6167  length, int Ptag
001ecc0: 2c20 696e 7420 5063 6c61 7373 293b 0a75  , int Pclass);.u
001ecd0: 6e73 6967 6e65 6420 6c6f 6e67 2041 534e  nsigned long ASN
001ece0: 315f 7461 6732 6269 7428 696e 7420 7461  1_tag2bit(int ta
001ecf0: 6729 3b0a 0a41 534e 315f 5354 5249 4e47  g);..ASN1_STRING
001ed00: 202a 6432 695f 4153 4e31 5f74 7970 655f   *d2i_ASN1_type_
001ed10: 6279 7465 7328 4153 4e31 5f53 5452 494e  bytes(ASN1_STRIN
001ed20: 4720 2a2a 612c 636f 6e73 7420 756e 7369  G **a,const unsi
001ed30: 676e 6564 2063 6861 7220 2a2a 7070 2c0a  gned char **pp,.
001ed40: 2020 6c6f 6e67 206c 656e 6774 682c 696e    long length,in
001ed50: 7420 7479 7065 293b 0a0a 0a69 6e74 2061  t type);...int a
001ed60: 736e 315f 4669 6e69 7368 2841 534e 315f  sn1_Finish(ASN1_
001ed70: 4354 5820 2a63 293b 0a69 6e74 2061 736e  CTX *c);.int asn
001ed80: 315f 636f 6e73 745f 4669 6e69 7368 2841  1_const_Finish(A
001ed90: 534e 315f 636f 6e73 745f 4354 5820 2a63  SN1_const_CTX *c
001eda0: 293b 0a0a 0a69 6e74 2041 534e 315f 6765  );...int ASN1_ge
001edb0: 745f 6f62 6a65 6374 2863 6f6e 7374 2075  t_object(const u
001edc0: 6e73 6967 6e65 6420 6368 6172 202a 2a70  nsigned char **p
001edd0: 702c 206c 6f6e 6720 2a70 6c65 6e67 7468  p, long *plength
001ede0: 2c20 696e 7420 2a70 7461 672c 0a20 696e  , int *ptag,. in
001edf0: 7420 2a70 636c 6173 732c 206c 6f6e 6720  t *pclass, long 
001ee00: 6f6d 6178 293b 0a69 6e74 2041 534e 315f  omax);.int ASN1_
001ee10: 6368 6563 6b5f 696e 6669 6e69 7465 5f65  check_infinite_e
001ee20: 6e64 2875 6e73 6967 6e65 6420 6368 6172  nd(unsigned char
001ee30: 202a 2a70 2c6c 6f6e 6720 6c65 6e29 3b0a   **p,long len);.
001ee40: 696e 7420 4153 4e31 5f63 6f6e 7374 5f63  int ASN1_const_c
001ee50: 6865 636b 5f69 6e66 696e 6974 655f 656e  heck_infinite_en
001ee60: 6428 636f 6e73 7420 756e 7369 676e 6564  d(const unsigned
001ee70: 2063 6861 7220 2a2a 702c 6c6f 6e67 206c   char **p,long l
001ee80: 656e 293b 0a76 6f69 6420 4153 4e31 5f70  en);.void ASN1_p
001ee90: 7574 5f6f 626a 6563 7428 756e 7369 676e  ut_object(unsign
001eea0: 6564 2063 6861 7220 2a2a 7070 2c20 696e  ed char **pp, in
001eeb0: 7420 636f 6e73 7472 7563 7465 642c 2069  t constructed, i
001eec0: 6e74 206c 656e 6774 682c 0a20 696e 7420  nt length,. int 
001eed0: 7461 672c 2069 6e74 2078 636c 6173 7329  tag, int xclass)
001eee0: 3b0a 696e 7420 4153 4e31 5f70 7574 5f65  ;.int ASN1_put_e
001eef0: 6f63 2875 6e73 6967 6e65 6420 6368 6172  oc(unsigned char
001ef00: 202a 2a70 7029 3b0a 696e 7420 4153 4e31   **pp);.int ASN1
001ef10: 5f6f 626a 6563 745f 7369 7a65 2869 6e74  _object_size(int
001ef20: 2063 6f6e 7374 7275 6374 6564 2c20 696e   constructed, in
001ef30: 7420 6c65 6e67 7468 2c20 696e 7420 7461  t length, int ta
001ef40: 6729 3b0a 0a0a 766f 6964 202a 4153 4e31  g);...void *ASN1
001ef50: 5f64 7570 2869 3264 5f6f 665f 766f 6964  _dup(i2d_of_void
001ef60: 202a 6932 642c 2064 3269 5f6f 665f 766f   *i2d, d2i_of_vo
001ef70: 6964 202a 6432 692c 2076 6f69 6420 2a78  id *d2i, void *x
001ef80: 293b 0a23 2039 3636 2022 2f75 7372 2f69  );.# 966 "/usr/i
001ef90: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f61  nclude/openssl/a
001efa0: 736e 312e 6822 2033 2034 0a76 6f69 6420  sn1.h" 3 4.void 
001efb0: 2a41 534e 315f 6974 656d 5f64 7570 2863  *ASN1_item_dup(c
001efc0: 6f6e 7374 2041 534e 315f 4954 454d 202a  onst ASN1_ITEM *
001efd0: 6974 2c20 766f 6964 202a 7829 3b0a 2320  it, void *x);.# 
001efe0: 3937 3520 222f 7573 722f 696e 636c 7564  975 "/usr/includ
001eff0: 652f 6f70 656e 7373 6c2f 6173 6e31 2e68  e/openssl/asn1.h
001f000: 2220 3320 340a 766f 6964 202a 4153 4e31  " 3 4.void *ASN1
001f010: 5f64 3269 5f66 7028 766f 6964 202a 282a  _d2i_fp(void *(*
001f020: 786e 6577 2928 766f 6964 292c 2064 3269  xnew)(void), d2i
001f030: 5f6f 665f 766f 6964 202a 6432 692c 2046  _of_void *d2i, F
001f040: 494c 4520 2a69 6e2c 2076 6f69 6420 2a2a  ILE *in, void **
001f050: 7829 3b0a 0a0a 0a0a 0a0a 0a76 6f69 6420  x);........void 
001f060: 2a41 534e 315f 6974 656d 5f64 3269 5f66  *ASN1_item_d2i_f
001f070: 7028 636f 6e73 7420 4153 4e31 5f49 5445  p(const ASN1_ITE
001f080: 4d20 2a69 742c 2046 494c 4520 2a69 6e2c  M *it, FILE *in,
001f090: 2076 6f69 6420 2a78 293b 0a69 6e74 2041   void *x);.int A
001f0a0: 534e 315f 6932 645f 6670 2869 3264 5f6f  SN1_i2d_fp(i2d_o
001f0b0: 665f 766f 6964 202a 6932 642c 4649 4c45  f_void *i2d,FILE
001f0c0: 202a 6f75 742c 766f 6964 202a 7829 3b0a   *out,void *x);.
001f0d0: 2320 3939 3620 222f 7573 722f 696e 636c  # 996 "/usr/incl
001f0e0: 7564 652f 6f70 656e 7373 6c2f 6173 6e31  ude/openssl/asn1
001f0f0: 2e68 2220 3320 340a 696e 7420 4153 4e31  .h" 3 4.int ASN1
001f100: 5f69 7465 6d5f 6932 645f 6670 2863 6f6e  _item_i2d_fp(con
001f110: 7374 2041 534e 315f 4954 454d 202a 6974  st ASN1_ITEM *it
001f120: 2c20 4649 4c45 202a 6f75 742c 2076 6f69  , FILE *out, voi
001f130: 6420 2a78 293b 0a69 6e74 2041 534e 315f  d *x);.int ASN1_
001f140: 5354 5249 4e47 5f70 7269 6e74 5f65 785f  STRING_print_ex_
001f150: 6670 2846 494c 4520 2a66 702c 2041 534e  fp(FILE *fp, ASN
001f160: 315f 5354 5249 4e47 202a 7374 722c 2075  1_STRING *str, u
001f170: 6e73 6967 6e65 6420 6c6f 6e67 2066 6c61  nsigned long fla
001f180: 6773 293b 0a0a 0a69 6e74 2041 534e 315f  gs);...int ASN1_
001f190: 5354 5249 4e47 5f74 6f5f 5554 4638 2875  STRING_to_UTF8(u
001f1a0: 6e73 6967 6e65 6420 6368 6172 202a 2a6f  nsigned char **o
001f1b0: 7574 2c20 4153 4e31 5f53 5452 494e 4720  ut, ASN1_STRING 
001f1c0: 2a69 6e29 3b0a 0a0a 766f 6964 202a 4153  *in);...void *AS
001f1d0: 4e31 5f64 3269 5f62 696f 2876 6f69 6420  N1_d2i_bio(void 
001f1e0: 2a28 2a78 6e65 7729 2876 6f69 6429 2c20  *(*xnew)(void), 
001f1f0: 6432 695f 6f66 5f76 6f69 6420 2a64 3269  d2i_of_void *d2i
001f200: 2c20 4249 4f20 2a69 6e2c 2076 6f69 6420  , BIO *in, void 
001f210: 2a2a 7829 3b0a 0a0a 0a0a 0a0a 0a76 6f69  **x);........voi
001f220: 6420 2a41 534e 315f 6974 656d 5f64 3269  d *ASN1_item_d2i
001f230: 5f62 696f 2863 6f6e 7374 2041 534e 315f  _bio(const ASN1_
001f240: 4954 454d 202a 6974 2c20 4249 4f20 2a69  ITEM *it, BIO *i
001f250: 6e2c 2076 6f69 6420 2a78 293b 0a69 6e74  n, void *x);.int
001f260: 2041 534e 315f 6932 645f 6269 6f28 6932   ASN1_i2d_bio(i2
001f270: 645f 6f66 5f76 6f69 6420 2a69 3264 2c42  d_of_void *i2d,B
001f280: 494f 202a 6f75 742c 2075 6e73 6967 6e65  IO *out, unsigne
001f290: 6420 6368 6172 202a 7829 3b0a 2320 3130  d char *x);.# 10
001f2a0: 3234 2022 2f75 7372 2f69 6e63 6c75 6465  24 "/usr/include
001f2b0: 2f6f 7065 6e73 736c 2f61 736e 312e 6822  /openssl/asn1.h"
001f2c0: 2033 2034 0a69 6e74 2041 534e 315f 6974   3 4.int ASN1_it
001f2d0: 656d 5f69 3264 5f62 696f 2863 6f6e 7374  em_i2d_bio(const
001f2e0: 2041 534e 315f 4954 454d 202a 6974 2c20   ASN1_ITEM *it, 
001f2f0: 4249 4f20 2a6f 7574 2c20 766f 6964 202a  BIO *out, void *
001f300: 7829 3b0a 696e 7420 4153 4e31 5f55 5443  x);.int ASN1_UTC
001f310: 5449 4d45 5f70 7269 6e74 2842 494f 202a  TIME_print(BIO *
001f320: 6670 2c20 636f 6e73 7420 4153 4e31 5f55  fp, const ASN1_U
001f330: 5443 5449 4d45 202a 6129 3b0a 696e 7420  TCTIME *a);.int 
001f340: 4153 4e31 5f47 454e 4552 414c 495a 4544  ASN1_GENERALIZED
001f350: 5449 4d45 5f70 7269 6e74 2842 494f 202a  TIME_print(BIO *
001f360: 6670 2c20 636f 6e73 7420 4153 4e31 5f47  fp, const ASN1_G
001f370: 454e 4552 414c 495a 4544 5449 4d45 202a  ENERALIZEDTIME *
001f380: 6129 3b0a 696e 7420 4153 4e31 5f54 494d  a);.int ASN1_TIM
001f390: 455f 7072 696e 7428 4249 4f20 2a66 702c  E_print(BIO *fp,
001f3a0: 2063 6f6e 7374 2041 534e 315f 5449 4d45   const ASN1_TIME
001f3b0: 202a 6129 3b0a 696e 7420 4153 4e31 5f53   *a);.int ASN1_S
001f3c0: 5452 494e 475f 7072 696e 7428 4249 4f20  TRING_print(BIO 
001f3d0: 2a62 702c 2063 6f6e 7374 2041 534e 315f  *bp, const ASN1_
001f3e0: 5354 5249 4e47 202a 7629 3b0a 696e 7420  STRING *v);.int 
001f3f0: 4153 4e31 5f53 5452 494e 475f 7072 696e  ASN1_STRING_prin
001f400: 745f 6578 2842 494f 202a 6f75 742c 2041  t_ex(BIO *out, A
001f410: 534e 315f 5354 5249 4e47 202a 7374 722c  SN1_STRING *str,
001f420: 2075 6e73 6967 6e65 6420 6c6f 6e67 2066   unsigned long f
001f430: 6c61 6773 293b 0a69 6e74 2041 534e 315f  lags);.int ASN1_
001f440: 626e 5f70 7269 6e74 2842 494f 202a 6270  bn_print(BIO *bp
001f450: 2c20 636f 6e73 7420 6368 6172 202a 6e75  , const char *nu
001f460: 6d62 6572 2c20 636f 6e73 7420 4249 474e  mber, const BIGN
001f470: 554d 202a 6e75 6d2c 0a20 2020 2075 6e73  UM *num,.    uns
001f480: 6967 6e65 6420 6368 6172 202a 6275 662c  igned char *buf,
001f490: 2069 6e74 206f 6666 293b 0a69 6e74 2041   int off);.int A
001f4a0: 534e 315f 7061 7273 6528 4249 4f20 2a62  SN1_parse(BIO *b
001f4b0: 702c 636f 6e73 7420 756e 7369 676e 6564  p,const unsigned
001f4c0: 2063 6861 7220 2a70 702c 6c6f 6e67 206c   char *pp,long l
001f4d0: 656e 2c69 6e74 2069 6e64 656e 7429 3b0a  en,int indent);.
001f4e0: 696e 7420 4153 4e31 5f70 6172 7365 5f64  int ASN1_parse_d
001f4f0: 756d 7028 4249 4f20 2a62 702c 636f 6e73  ump(BIO *bp,cons
001f500: 7420 756e 7369 676e 6564 2063 6861 7220  t unsigned char 
001f510: 2a70 702c 6c6f 6e67 206c 656e 2c69 6e74  *pp,long len,int
001f520: 2069 6e64 656e 742c 696e 7420 6475 6d70   indent,int dump
001f530: 293b 0a0a 636f 6e73 7420 6368 6172 202a  );..const char *
001f540: 4153 4e31 5f74 6167 3273 7472 2869 6e74  ASN1_tag2str(int
001f550: 2074 6167 293b 0a0a 0a0a 4e45 5453 4341   tag);....NETSCA
001f560: 5045 5f58 3530 3920 2a4e 4554 5343 4150  PE_X509 *NETSCAP
001f570: 455f 5835 3039 5f6e 6577 2876 6f69 6429  E_X509_new(void)
001f580: 3b20 766f 6964 204e 4554 5343 4150 455f  ; void NETSCAPE_
001f590: 5835 3039 5f66 7265 6528 4e45 5453 4341  X509_free(NETSCA
001f5a0: 5045 5f58 3530 3920 2a61 293b 204e 4554  PE_X509 *a); NET
001f5b0: 5343 4150 455f 5835 3039 202a 6432 695f  SCAPE_X509 *d2i_
001f5c0: 4e45 5453 4341 5045 5f58 3530 3928 4e45  NETSCAPE_X509(NE
001f5d0: 5453 4341 5045 5f58 3530 3920 2a2a 612c  TSCAPE_X509 **a,
001f5e0: 2063 6f6e 7374 2075 6e73 6967 6e65 6420   const unsigned 
001f5f0: 6368 6172 202a 2a69 6e2c 206c 6f6e 6720  char **in, long 
001f600: 6c65 6e29 3b20 696e 7420 6932 645f 4e45  len); int i2d_NE
001f610: 5453 4341 5045 5f58 3530 3928 4e45 5453  TSCAPE_X509(NETS
001f620: 4341 5045 5f58 3530 3920 2a61 2c20 756e  CAPE_X509 *a, un
001f630: 7369 676e 6564 2063 6861 7220 2a2a 6f75  signed char **ou
001f640: 7429 3b20 6578 7465 726e 2063 6f6e 7374  t); extern const
001f650: 2041 534e 315f 4954 454d 204e 4554 5343   ASN1_ITEM NETSC
001f660: 4150 455f 5835 3039 5f69 743b 0a0a 696e  APE_X509_it;..in
001f670: 7420 4153 4e31 5f55 4e49 5645 5253 414c  t ASN1_UNIVERSAL
001f680: 5354 5249 4e47 5f74 6f5f 7374 7269 6e67  STRING_to_string
001f690: 2841 534e 315f 554e 4956 4552 5341 4c53  (ASN1_UNIVERSALS
001f6a0: 5452 494e 4720 2a73 293b 0a0a 696e 7420  TRING *s);..int 
001f6b0: 4153 4e31 5f54 5950 455f 7365 745f 6f63  ASN1_TYPE_set_oc
001f6c0: 7465 7473 7472 696e 6728 4153 4e31 5f54  tetstring(ASN1_T
001f6d0: 5950 4520 2a61 2c0a 2075 6e73 6967 6e65  YPE *a,. unsigne
001f6e0: 6420 6368 6172 202a 6461 7461 2c20 696e  d char *data, in
001f6f0: 7420 6c65 6e29 3b0a 696e 7420 4153 4e31  t len);.int ASN1
001f700: 5f54 5950 455f 6765 745f 6f63 7465 7473  _TYPE_get_octets
001f710: 7472 696e 6728 4153 4e31 5f54 5950 4520  tring(ASN1_TYPE 
001f720: 2a61 2c0a 2075 6e73 6967 6e65 6420 6368  *a,. unsigned ch
001f730: 6172 202a 6461 7461 2c20 696e 7420 6d61  ar *data, int ma
001f740: 785f 6c65 6e29 3b0a 696e 7420 4153 4e31  x_len);.int ASN1
001f750: 5f54 5950 455f 7365 745f 696e 745f 6f63  _TYPE_set_int_oc
001f760: 7465 7473 7472 696e 6728 4153 4e31 5f54  tetstring(ASN1_T
001f770: 5950 4520 2a61 2c20 6c6f 6e67 206e 756d  YPE *a, long num
001f780: 2c0a 2075 6e73 6967 6e65 6420 6368 6172  ,. unsigned char
001f790: 202a 6461 7461 2c20 696e 7420 6c65 6e29   *data, int len)
001f7a0: 3b0a 696e 7420 4153 4e31 5f54 5950 455f  ;.int ASN1_TYPE_
001f7b0: 6765 745f 696e 745f 6f63 7465 7473 7472  get_int_octetstr
001f7c0: 696e 6728 4153 4e31 5f54 5950 4520 2a61  ing(ASN1_TYPE *a
001f7d0: 2c6c 6f6e 6720 2a6e 756d 2c0a 2075 6e73  ,long *num,. uns
001f7e0: 6967 6e65 6420 6368 6172 202a 6461 7461  igned char *data
001f7f0: 2c20 696e 7420 6d61 785f 6c65 6e29 3b0a  , int max_len);.
001f800: 0a73 7472 7563 7420 7374 6163 6b5f 7374  .struct stack_st
001f810: 5f4f 5045 4e53 534c 5f42 4c4f 434b 202a  _OPENSSL_BLOCK *
001f820: 4153 4e31 5f73 6571 5f75 6e70 6163 6b28  ASN1_seq_unpack(
001f830: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
001f840: 6861 7220 2a62 7566 2c20 696e 7420 6c65  har *buf, int le
001f850: 6e2c 0a20 2020 2020 6432 695f 6f66 5f76  n,.     d2i_of_v
001f860: 6f69 6420 2a64 3269 2c20 766f 6964 2028  oid *d2i, void (
001f870: 2a66 7265 655f 6675 6e63 2928 4f50 454e  *free_func)(OPEN
001f880: 5353 4c5f 424c 4f43 4b29 293b 0a75 6e73  SSL_BLOCK));.uns
001f890: 6967 6e65 6420 6368 6172 202a 4153 4e31  igned char *ASN1
001f8a0: 5f73 6571 5f70 6163 6b28 7374 7275 6374  _seq_pack(struct
001f8b0: 2073 7461 636b 5f73 745f 4f50 454e 5353   stack_st_OPENSS
001f8c0: 4c5f 424c 4f43 4b20 2a73 6166 6573 2c20  L_BLOCK *safes, 
001f8d0: 6932 645f 6f66 5f76 6f69 6420 2a69 3264  i2d_of_void *i2d
001f8e0: 2c0a 2020 2020 2020 2020 756e 7369 676e  ,.        unsign
001f8f0: 6564 2063 6861 7220 2a2a 6275 662c 2069  ed char **buf, i
001f900: 6e74 202a 6c65 6e20 293b 0a76 6f69 6420  nt *len );.void 
001f910: 2a41 534e 315f 756e 7061 636b 5f73 7472  *ASN1_unpack_str
001f920: 696e 6728 4153 4e31 5f53 5452 494e 4720  ing(ASN1_STRING 
001f930: 2a6f 6374 2c20 6432 695f 6f66 5f76 6f69  *oct, d2i_of_voi
001f940: 6420 2a64 3269 293b 0a76 6f69 6420 2a41  d *d2i);.void *A
001f950: 534e 315f 6974 656d 5f75 6e70 6163 6b28  SN1_item_unpack(
001f960: 4153 4e31 5f53 5452 494e 4720 2a6f 6374  ASN1_STRING *oct
001f970: 2c20 636f 6e73 7420 4153 4e31 5f49 5445  , const ASN1_ITE
001f980: 4d20 2a69 7429 3b0a 4153 4e31 5f53 5452  M *it);.ASN1_STR
001f990: 494e 4720 2a41 534e 315f 7061 636b 5f73  ING *ASN1_pack_s
001f9a0: 7472 696e 6728 766f 6964 202a 6f62 6a2c  tring(void *obj,
001f9b0: 2069 3264 5f6f 665f 766f 6964 202a 6932   i2d_of_void *i2
001f9c0: 642c 0a20 2020 2020 2020 2020 4153 4e31  d,.         ASN1
001f9d0: 5f4f 4354 4554 5f53 5452 494e 4720 2a2a  _OCTET_STRING **
001f9e0: 6f63 7429 3b0a 0a0a 0a0a 0a0a 4153 4e31  oct);.......ASN1
001f9f0: 5f53 5452 494e 4720 2a41 534e 315f 6974  _STRING *ASN1_it
001fa00: 656d 5f70 6163 6b28 766f 6964 202a 6f62  em_pack(void *ob
001fa10: 6a2c 2063 6f6e 7374 2041 534e 315f 4954  j, const ASN1_IT
001fa20: 454d 202a 6974 2c20 4153 4e31 5f4f 4354  EM *it, ASN1_OCT
001fa30: 4554 5f53 5452 494e 4720 2a2a 6f63 7429  ET_STRING **oct)
001fa40: 3b0a 0a76 6f69 6420 4153 4e31 5f53 5452  ;..void ASN1_STR
001fa50: 494e 475f 7365 745f 6465 6661 756c 745f  ING_set_default_
001fa60: 6d61 736b 2875 6e73 6967 6e65 6420 6c6f  mask(unsigned lo
001fa70: 6e67 206d 6173 6b29 3b0a 696e 7420 4153  ng mask);.int AS
001fa80: 4e31 5f53 5452 494e 475f 7365 745f 6465  N1_STRING_set_de
001fa90: 6661 756c 745f 6d61 736b 5f61 7363 2863  fault_mask_asc(c
001faa0: 6f6e 7374 2063 6861 7220 2a70 293b 0a75  onst char *p);.u
001fab0: 6e73 6967 6e65 6420 6c6f 6e67 2041 534e  nsigned long ASN
001fac0: 315f 5354 5249 4e47 5f67 6574 5f64 6566  1_STRING_get_def
001fad0: 6175 6c74 5f6d 6173 6b28 766f 6964 293b  ault_mask(void);
001fae0: 0a69 6e74 2041 534e 315f 6d62 7374 7269  .int ASN1_mbstri
001faf0: 6e67 5f63 6f70 7928 4153 4e31 5f53 5452  ng_copy(ASN1_STR
001fb00: 494e 4720 2a2a 6f75 742c 2063 6f6e 7374  ING **out, const
001fb10: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
001fb20: 696e 2c20 696e 7420 6c65 6e2c 0a20 2020  in, int len,.   
001fb30: 2020 696e 7420 696e 666f 726d 2c20 756e    int inform, un
001fb40: 7369 676e 6564 206c 6f6e 6720 6d61 736b  signed long mask
001fb50: 293b 0a69 6e74 2041 534e 315f 6d62 7374  );.int ASN1_mbst
001fb60: 7269 6e67 5f6e 636f 7079 2841 534e 315f  ring_ncopy(ASN1_
001fb70: 5354 5249 4e47 202a 2a6f 7574 2c20 636f  STRING **out, co
001fb80: 6e73 7420 756e 7369 676e 6564 2063 6861  nst unsigned cha
001fb90: 7220 2a69 6e2c 2069 6e74 206c 656e 2c0a  r *in, int len,.
001fba0: 2020 2020 2069 6e74 2069 6e66 6f72 6d2c       int inform,
001fbb0: 2075 6e73 6967 6e65 6420 6c6f 6e67 206d   unsigned long m
001fbc0: 6173 6b2c 0a20 2020 2020 6c6f 6e67 206d  ask,.     long m
001fbd0: 696e 7369 7a65 2c20 6c6f 6e67 206d 6178  insize, long max
001fbe0: 7369 7a65 293b 0a0a 4153 4e31 5f53 5452  size);..ASN1_STR
001fbf0: 494e 4720 2a41 534e 315f 5354 5249 4e47  ING *ASN1_STRING
001fc00: 5f73 6574 5f62 795f 4e49 4428 4153 4e31  _set_by_NID(ASN1
001fc10: 5f53 5452 494e 4720 2a2a 6f75 742c 0a20  _STRING **out,. 
001fc20: 2063 6f6e 7374 2075 6e73 6967 6e65 6420   const unsigned 
001fc30: 6368 6172 202a 696e 2c20 696e 7420 696e  char *in, int in
001fc40: 6c65 6e2c 2069 6e74 2069 6e66 6f72 6d2c  len, int inform,
001fc50: 2069 6e74 206e 6964 293b 0a41 534e 315f   int nid);.ASN1_
001fc60: 5354 5249 4e47 5f54 4142 4c45 202a 4153  STRING_TABLE *AS
001fc70: 4e31 5f53 5452 494e 475f 5441 424c 455f  N1_STRING_TABLE_
001fc80: 6765 7428 696e 7420 6e69 6429 3b0a 696e  get(int nid);.in
001fc90: 7420 4153 4e31 5f53 5452 494e 475f 5441  t ASN1_STRING_TA
001fca0: 424c 455f 6164 6428 696e 742c 206c 6f6e  BLE_add(int, lon
001fcb0: 672c 206c 6f6e 672c 2075 6e73 6967 6e65  g, long, unsigne
001fcc0: 6420 6c6f 6e67 2c20 756e 7369 676e 6564  d long, unsigned
001fcd0: 206c 6f6e 6729 3b0a 766f 6964 2041 534e   long);.void ASN
001fce0: 315f 5354 5249 4e47 5f54 4142 4c45 5f63  1_STRING_TABLE_c
001fcf0: 6c65 616e 7570 2876 6f69 6429 3b0a 0a0a  leanup(void);...
001fd00: 0a0a 4153 4e31 5f56 414c 5545 202a 4153  ..ASN1_VALUE *AS
001fd10: 4e31 5f69 7465 6d5f 6e65 7728 636f 6e73  N1_item_new(cons
001fd20: 7420 4153 4e31 5f49 5445 4d20 2a69 7429  t ASN1_ITEM *it)
001fd30: 3b0a 766f 6964 2041 534e 315f 6974 656d  ;.void ASN1_item
001fd40: 5f66 7265 6528 4153 4e31 5f56 414c 5545  _free(ASN1_VALUE
001fd50: 202a 7661 6c2c 2063 6f6e 7374 2041 534e   *val, const ASN
001fd60: 315f 4954 454d 202a 6974 293b 0a41 534e  1_ITEM *it);.ASN
001fd70: 315f 5641 4c55 4520 2a20 4153 4e31 5f69  1_VALUE * ASN1_i
001fd80: 7465 6d5f 6432 6928 4153 4e31 5f56 414c  tem_d2i(ASN1_VAL
001fd90: 5545 202a 2a76 616c 2c20 636f 6e73 7420  UE **val, const 
001fda0: 756e 7369 676e 6564 2063 6861 7220 2a2a  unsigned char **
001fdb0: 696e 2c20 6c6f 6e67 206c 656e 2c20 636f  in, long len, co
001fdc0: 6e73 7420 4153 4e31 5f49 5445 4d20 2a69  nst ASN1_ITEM *i
001fdd0: 7429 3b0a 696e 7420 4153 4e31 5f69 7465  t);.int ASN1_ite
001fde0: 6d5f 6932 6428 4153 4e31 5f56 414c 5545  m_i2d(ASN1_VALUE
001fdf0: 202a 7661 6c2c 2075 6e73 6967 6e65 6420   *val, unsigned 
001fe00: 6368 6172 202a 2a6f 7574 2c20 636f 6e73  char **out, cons
001fe10: 7420 4153 4e31 5f49 5445 4d20 2a69 7429  t ASN1_ITEM *it)
001fe20: 3b0a 696e 7420 4153 4e31 5f69 7465 6d5f  ;.int ASN1_item_
001fe30: 6e64 6566 5f69 3264 2841 534e 315f 5641  ndef_i2d(ASN1_VA
001fe40: 4c55 4520 2a76 616c 2c20 756e 7369 676e  LUE *val, unsign
001fe50: 6564 2063 6861 7220 2a2a 6f75 742c 2063  ed char **out, c
001fe60: 6f6e 7374 2041 534e 315f 4954 454d 202a  onst ASN1_ITEM *
001fe70: 6974 293b 0a0a 766f 6964 2041 534e 315f  it);..void ASN1_
001fe80: 6164 645f 6f69 645f 6d6f 6475 6c65 2876  add_oid_module(v
001fe90: 6f69 6429 3b0a 0a41 534e 315f 5459 5045  oid);..ASN1_TYPE
001fea0: 202a 4153 4e31 5f67 656e 6572 6174 655f   *ASN1_generate_
001feb0: 6e63 6f6e 6628 6368 6172 202a 7374 722c  nconf(char *str,
001fec0: 2043 4f4e 4620 2a6e 636f 6e66 293b 0a41   CONF *nconf);.A
001fed0: 534e 315f 5459 5045 202a 4153 4e31 5f67  SN1_TYPE *ASN1_g
001fee0: 656e 6572 6174 655f 7633 2863 6861 7220  enerate_v3(char 
001fef0: 2a73 7472 2c20 5835 3039 5633 5f43 5458  *str, X509V3_CTX
001ff00: 202a 636e 6629 3b0a 2320 3131 3138 2022   *cnf);.# 1118 "
001ff10: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
001ff20: 6e73 736c 2f61 736e 312e 6822 2033 2034  nssl/asn1.h" 3 4
001ff30: 0a69 6e74 2041 534e 315f 6974 656d 5f70  .int ASN1_item_p
001ff40: 7269 6e74 2842 494f 202a 6f75 742c 2041  rint(BIO *out, A
001ff50: 534e 315f 5641 4c55 4520 2a69 666c 642c  SN1_VALUE *ifld,
001ff60: 2069 6e74 2069 6e64 656e 742c 0a20 2020   int indent,.   
001ff70: 2063 6f6e 7374 2041 534e 315f 4954 454d   const ASN1_ITEM
001ff80: 202a 6974 2c20 636f 6e73 7420 4153 4e31   *it, const ASN1
001ff90: 5f50 4354 5820 2a70 6374 7829 3b0a 4153  _PCTX *pctx);.AS
001ffa0: 4e31 5f50 4354 5820 2a41 534e 315f 5043  N1_PCTX *ASN1_PC
001ffb0: 5458 5f6e 6577 2876 6f69 6429 3b0a 766f  TX_new(void);.vo
001ffc0: 6964 2041 534e 315f 5043 5458 5f66 7265  id ASN1_PCTX_fre
001ffd0: 6528 4153 4e31 5f50 4354 5820 2a70 293b  e(ASN1_PCTX *p);
001ffe0: 0a75 6e73 6967 6e65 6420 6c6f 6e67 2041  .unsigned long A
001fff0: 534e 315f 5043 5458 5f67 6574 5f66 6c61  SN1_PCTX_get_fla
0020000: 6773 2841 534e 315f 5043 5458 202a 7029  gs(ASN1_PCTX *p)
0020010: 3b0a 766f 6964 2041 534e 315f 5043 5458  ;.void ASN1_PCTX
0020020: 5f73 6574 5f66 6c61 6773 2841 534e 315f  _set_flags(ASN1_
0020030: 5043 5458 202a 702c 2075 6e73 6967 6e65  PCTX *p, unsigne
0020040: 6420 6c6f 6e67 2066 6c61 6773 293b 0a75  d long flags);.u
0020050: 6e73 6967 6e65 6420 6c6f 6e67 2041 534e  nsigned long ASN
0020060: 315f 5043 5458 5f67 6574 5f6e 6d5f 666c  1_PCTX_get_nm_fl
0020070: 6167 7328 4153 4e31 5f50 4354 5820 2a70  ags(ASN1_PCTX *p
0020080: 293b 0a76 6f69 6420 4153 4e31 5f50 4354  );.void ASN1_PCT
0020090: 585f 7365 745f 6e6d 5f66 6c61 6773 2841  X_set_nm_flags(A
00200a0: 534e 315f 5043 5458 202a 702c 2075 6e73  SN1_PCTX *p, uns
00200b0: 6967 6e65 6420 6c6f 6e67 2066 6c61 6773  igned long flags
00200c0: 293b 0a75 6e73 6967 6e65 6420 6c6f 6e67  );.unsigned long
00200d0: 2041 534e 315f 5043 5458 5f67 6574 5f63   ASN1_PCTX_get_c
00200e0: 6572 745f 666c 6167 7328 4153 4e31 5f50  ert_flags(ASN1_P
00200f0: 4354 5820 2a70 293b 0a76 6f69 6420 4153  CTX *p);.void AS
0020100: 4e31 5f50 4354 585f 7365 745f 6365 7274  N1_PCTX_set_cert
0020110: 5f66 6c61 6773 2841 534e 315f 5043 5458  _flags(ASN1_PCTX
0020120: 202a 702c 2075 6e73 6967 6e65 6420 6c6f   *p, unsigned lo
0020130: 6e67 2066 6c61 6773 293b 0a75 6e73 6967  ng flags);.unsig
0020140: 6e65 6420 6c6f 6e67 2041 534e 315f 5043  ned long ASN1_PC
0020150: 5458 5f67 6574 5f6f 6964 5f66 6c61 6773  TX_get_oid_flags
0020160: 2841 534e 315f 5043 5458 202a 7029 3b0a  (ASN1_PCTX *p);.
0020170: 766f 6964 2041 534e 315f 5043 5458 5f73  void ASN1_PCTX_s
0020180: 6574 5f6f 6964 5f66 6c61 6773 2841 534e  et_oid_flags(ASN
0020190: 315f 5043 5458 202a 702c 2075 6e73 6967  1_PCTX *p, unsig
00201a0: 6e65 6420 6c6f 6e67 2066 6c61 6773 293b  ned long flags);
00201b0: 0a75 6e73 6967 6e65 6420 6c6f 6e67 2041  .unsigned long A
00201c0: 534e 315f 5043 5458 5f67 6574 5f73 7472  SN1_PCTX_get_str
00201d0: 5f66 6c61 6773 2841 534e 315f 5043 5458  _flags(ASN1_PCTX
00201e0: 202a 7029 3b0a 766f 6964 2041 534e 315f   *p);.void ASN1_
00201f0: 5043 5458 5f73 6574 5f73 7472 5f66 6c61  PCTX_set_str_fla
0020200: 6773 2841 534e 315f 5043 5458 202a 702c  gs(ASN1_PCTX *p,
0020210: 2075 6e73 6967 6e65 6420 6c6f 6e67 2066   unsigned long f
0020220: 6c61 6773 293b 0a0a 4249 4f5f 4d45 5448  lags);..BIO_METH
0020230: 4f44 202a 4249 4f5f 665f 6173 6e31 2876  OD *BIO_f_asn1(v
0020240: 6f69 6429 3b0a 0a42 494f 202a 4249 4f5f  oid);..BIO *BIO_
0020250: 6e65 775f 4e44 4546 2842 494f 202a 6f75  new_NDEF(BIO *ou
0020260: 742c 2041 534e 315f 5641 4c55 4520 2a76  t, ASN1_VALUE *v
0020270: 616c 2c20 636f 6e73 7420 4153 4e31 5f49  al, const ASN1_I
0020280: 5445 4d20 2a69 7429 3b0a 0a69 6e74 2069  TEM *it);..int i
0020290: 3264 5f41 534e 315f 6269 6f5f 7374 7265  2d_ASN1_bio_stre
00202a0: 616d 2842 494f 202a 6f75 742c 2041 534e  am(BIO *out, ASN
00202b0: 315f 5641 4c55 4520 2a76 616c 2c20 4249  1_VALUE *val, BI
00202c0: 4f20 2a69 6e2c 2069 6e74 2066 6c61 6773  O *in, int flags
00202d0: 2c0a 2020 2020 636f 6e73 7420 4153 4e31  ,.    const ASN1
00202e0: 5f49 5445 4d20 2a69 7429 3b0a 696e 7420  _ITEM *it);.int 
00202f0: 5045 4d5f 7772 6974 655f 6269 6f5f 4153  PEM_write_bio_AS
0020300: 4e31 5f73 7472 6561 6d28 4249 4f20 2a6f  N1_stream(BIO *o
0020310: 7574 2c20 4153 4e31 5f56 414c 5545 202a  ut, ASN1_VALUE *
0020320: 7661 6c2c 2042 494f 202a 696e 2c20 696e  val, BIO *in, in
0020330: 7420 666c 6167 732c 0a20 2020 2063 6f6e  t flags,.    con
0020340: 7374 2063 6861 7220 2a68 6472 2c0a 2020  st char *hdr,.  
0020350: 2020 636f 6e73 7420 4153 4e31 5f49 5445    const ASN1_ITE
0020360: 4d20 2a69 7429 3b0a 696e 7420 534d 494d  M *it);.int SMIM
0020370: 455f 7772 6974 655f 4153 4e31 2842 494f  E_write_ASN1(BIO
0020380: 202a 6269 6f2c 2041 534e 315f 5641 4c55   *bio, ASN1_VALU
0020390: 4520 2a76 616c 2c20 4249 4f20 2a64 6174  E *val, BIO *dat
00203a0: 612c 2069 6e74 2066 6c61 6773 2c0a 2020  a, int flags,.  
00203b0: 2020 696e 7420 6374 7970 655f 6e69 642c    int ctype_nid,
00203c0: 2069 6e74 2065 636f 6e74 5f6e 6964 2c0a   int econt_nid,.
00203d0: 2020 2020 7374 7275 6374 2073 7461 636b      struct stack
00203e0: 5f73 745f 5835 3039 5f41 4c47 4f52 202a  _st_X509_ALGOR *
00203f0: 6d64 616c 6773 2c0a 2020 2020 636f 6e73  mdalgs,.    cons
0020400: 7420 4153 4e31 5f49 5445 4d20 2a69 7429  t ASN1_ITEM *it)
0020410: 3b0a 4153 4e31 5f56 414c 5545 202a 534d  ;.ASN1_VALUE *SM
0020420: 494d 455f 7265 6164 5f41 534e 3128 4249  IME_read_ASN1(BI
0020430: 4f20 2a62 696f 2c20 4249 4f20 2a2a 6263  O *bio, BIO **bc
0020440: 6f6e 742c 2063 6f6e 7374 2041 534e 315f  ont, const ASN1_
0020450: 4954 454d 202a 6974 293b 0a69 6e74 2053  ITEM *it);.int S
0020460: 4d49 4d45 5f63 726c 665f 636f 7079 2842  MIME_crlf_copy(B
0020470: 494f 202a 696e 2c20 4249 4f20 2a6f 7574  IO *in, BIO *out
0020480: 2c20 696e 7420 666c 6167 7329 3b0a 696e  , int flags);.in
0020490: 7420 534d 494d 455f 7465 7874 2842 494f  t SMIME_text(BIO
00204a0: 202a 696e 2c20 4249 4f20 2a6f 7574 293b   *in, BIO *out);
00204b0: 0a0a 0a0a 0a0a 766f 6964 2045 5252 5f6c  ......void ERR_l
00204c0: 6f61 645f 4153 4e31 5f73 7472 696e 6773  oad_ASN1_strings
00204d0: 2876 6f69 6429 3b0a 2320 3633 2022 2f75  (void);.# 63 "/u
00204e0: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
00204f0: 736c 2f72 7361 2e68 2220 3220 3320 340a  sl/rsa.h" 2 3 4.
0020500: 2320 3835 2022 2f75 7372 2f69 6e63 6c75  # 85 "/usr/inclu
0020510: 6465 2f6f 7065 6e73 736c 2f72 7361 2e68  de/openssl/rsa.h
0020520: 2220 3320 340a 7374 7275 6374 2072 7361  " 3 4.struct rsa
0020530: 5f6d 6574 685f 7374 0a20 7b0a 2063 6f6e  _meth_st. {. con
0020540: 7374 2063 6861 7220 2a6e 616d 653b 0a20  st char *name;. 
0020550: 696e 7420 282a 7273 615f 7075 625f 656e  int (*rsa_pub_en
0020560: 6329 2869 6e74 2066 6c65 6e2c 636f 6e73  c)(int flen,cons
0020570: 7420 756e 7369 676e 6564 2063 6861 7220  t unsigned char 
0020580: 2a66 726f 6d2c 0a20 2020 2020 2075 6e73  *from,.      uns
0020590: 6967 6e65 6420 6368 6172 202a 746f 2c0a  igned char *to,.
00205a0: 2020 2020 2020 5253 4120 2a72 7361 2c69        RSA *rsa,i
00205b0: 6e74 2070 6164 6469 6e67 293b 0a20 696e  nt padding);. in
00205c0: 7420 282a 7273 615f 7075 625f 6465 6329  t (*rsa_pub_dec)
00205d0: 2869 6e74 2066 6c65 6e2c 636f 6e73 7420  (int flen,const 
00205e0: 756e 7369 676e 6564 2063 6861 7220 2a66  unsigned char *f
00205f0: 726f 6d2c 0a20 2020 2020 2075 6e73 6967  rom,.      unsig
0020600: 6e65 6420 6368 6172 202a 746f 2c0a 2020  ned char *to,.  
0020610: 2020 2020 5253 4120 2a72 7361 2c69 6e74      RSA *rsa,int
0020620: 2070 6164 6469 6e67 293b 0a20 696e 7420   padding);. int 
0020630: 282a 7273 615f 7072 6976 5f65 6e63 2928  (*rsa_priv_enc)(
0020640: 696e 7420 666c 656e 2c63 6f6e 7374 2075  int flen,const u
0020650: 6e73 6967 6e65 6420 6368 6172 202a 6672  nsigned char *fr
0020660: 6f6d 2c0a 2020 2020 2020 2075 6e73 6967  om,.       unsig
0020670: 6e65 6420 6368 6172 202a 746f 2c0a 2020  ned char *to,.  
0020680: 2020 2020 2052 5341 202a 7273 612c 696e       RSA *rsa,in
0020690: 7420 7061 6464 696e 6729 3b0a 2069 6e74  t padding);. int
00206a0: 2028 2a72 7361 5f70 7269 765f 6465 6329   (*rsa_priv_dec)
00206b0: 2869 6e74 2066 6c65 6e2c 636f 6e73 7420  (int flen,const 
00206c0: 756e 7369 676e 6564 2063 6861 7220 2a66  unsigned char *f
00206d0: 726f 6d2c 0a20 2020 2020 2020 756e 7369  rom,.       unsi
00206e0: 676e 6564 2063 6861 7220 2a74 6f2c 0a20  gned char *to,. 
00206f0: 2020 2020 2020 5253 4120 2a72 7361 2c69        RSA *rsa,i
0020700: 6e74 2070 6164 6469 6e67 293b 0a20 696e  nt padding);. in
0020710: 7420 282a 7273 615f 6d6f 645f 6578 7029  t (*rsa_mod_exp)
0020720: 2842 4947 4e55 4d20 2a72 302c 636f 6e73  (BIGNUM *r0,cons
0020730: 7420 4249 474e 554d 202a 492c 5253 4120  t BIGNUM *I,RSA 
0020740: 2a72 7361 2c42 4e5f 4354 5820 2a63 7478  *rsa,BN_CTX *ctx
0020750: 293b 0a20 696e 7420 282a 626e 5f6d 6f64  );. int (*bn_mod
0020760: 5f65 7870 2928 4249 474e 554d 202a 722c  _exp)(BIGNUM *r,
0020770: 2063 6f6e 7374 2042 4947 4e55 4d20 2a61   const BIGNUM *a
0020780: 2c20 636f 6e73 7420 4249 474e 554d 202a  , const BIGNUM *
0020790: 702c 0a20 2020 2020 636f 6e73 7420 4249  p,.     const BI
00207a0: 474e 554d 202a 6d2c 2042 4e5f 4354 5820  GNUM *m, BN_CTX 
00207b0: 2a63 7478 2c0a 2020 2020 2042 4e5f 4d4f  *ctx,.     BN_MO
00207c0: 4e54 5f43 5458 202a 6d5f 6374 7829 3b0a  NT_CTX *m_ctx);.
00207d0: 2069 6e74 2028 2a69 6e69 7429 2852 5341   int (*init)(RSA
00207e0: 202a 7273 6129 3b0a 2069 6e74 2028 2a66   *rsa);. int (*f
00207f0: 696e 6973 6829 2852 5341 202a 7273 6129  inish)(RSA *rsa)
0020800: 3b0a 2069 6e74 2066 6c61 6773 3b0a 2063  ;. int flags;. c
0020810: 6861 7220 2a61 7070 5f64 6174 613b 0a0a  har *app_data;..
0020820: 0a0a 0a0a 0a0a 2069 6e74 2028 2a72 7361  ...... int (*rsa
0020830: 5f73 6967 6e29 2869 6e74 2074 7970 652c  _sign)(int type,
0020840: 0a20 2063 6f6e 7374 2075 6e73 6967 6e65  .  const unsigne
0020850: 6420 6368 6172 202a 6d2c 2075 6e73 6967  d char *m, unsig
0020860: 6e65 6420 696e 7420 6d5f 6c65 6e67 7468  ned int m_length
0020870: 2c0a 2020 756e 7369 676e 6564 2063 6861  ,.  unsigned cha
0020880: 7220 2a73 6967 7265 742c 2075 6e73 6967  r *sigret, unsig
0020890: 6e65 6420 696e 7420 2a73 6967 6c65 6e2c  ned int *siglen,
00208a0: 2063 6f6e 7374 2052 5341 202a 7273 6129   const RSA *rsa)
00208b0: 3b0a 2069 6e74 2028 2a72 7361 5f76 6572  ;. int (*rsa_ver
00208c0: 6966 7929 2869 6e74 2064 7479 7065 2c0a  ify)(int dtype,.
00208d0: 2020 636f 6e73 7420 756e 7369 676e 6564    const unsigned
00208e0: 2063 6861 7220 2a6d 2c20 756e 7369 676e   char *m, unsign
00208f0: 6564 2069 6e74 206d 5f6c 656e 6774 682c  ed int m_length,
0020900: 0a20 2063 6f6e 7374 2075 6e73 6967 6e65  .  const unsigne
0020910: 6420 6368 6172 202a 7369 6762 7566 2c20  d char *sigbuf, 
0020920: 756e 7369 676e 6564 2069 6e74 2073 6967  unsigned int sig
0020930: 6c65 6e2c 0a20 2020 2020 2020 2063 6f6e  len,.        con
0020940: 7374 2052 5341 202a 7273 6129 3b0a 0a0a  st RSA *rsa);...
0020950: 0a0a 2069 6e74 2028 2a72 7361 5f6b 6579  .. int (*rsa_key
0020960: 6765 6e29 2852 5341 202a 7273 612c 2069  gen)(RSA *rsa, i
0020970: 6e74 2062 6974 732c 2042 4947 4e55 4d20  nt bits, BIGNUM 
0020980: 2a65 2c20 424e 5f47 454e 4342 202a 6362  *e, BN_GENCB *cb
0020990: 293b 0a20 7d3b 0a0a 7374 7275 6374 2072  );. };..struct r
00209a0: 7361 5f73 740a 207b 0a0a 0a20 696e 7420  sa_st. {... int 
00209b0: 7061 643b 0a20 6c6f 6e67 2076 6572 7369  pad;. long versi
00209c0: 6f6e 3b0a 2063 6f6e 7374 2052 5341 5f4d  on;. const RSA_M
00209d0: 4554 484f 4420 2a6d 6574 683b 0a0a 2045  ETHOD *meth;.. E
00209e0: 4e47 494e 4520 2a65 6e67 696e 653b 0a20  NGINE *engine;. 
00209f0: 4249 474e 554d 202a 6e3b 0a20 4249 474e  BIGNUM *n;. BIGN
0020a00: 554d 202a 653b 0a20 4249 474e 554d 202a  UM *e;. BIGNUM *
0020a10: 643b 0a20 4249 474e 554d 202a 703b 0a20  d;. BIGNUM *p;. 
0020a20: 4249 474e 554d 202a 713b 0a20 4249 474e  BIGNUM *q;. BIGN
0020a30: 554d 202a 646d 7031 3b0a 2042 4947 4e55  UM *dmp1;. BIGNU
0020a40: 4d20 2a64 6d71 313b 0a20 4249 474e 554d  M *dmq1;. BIGNUM
0020a50: 202a 6971 6d70 3b0a 0a20 4352 5950 544f   *iqmp;.. CRYPTO
0020a60: 5f45 585f 4441 5441 2065 785f 6461 7461  _EX_DATA ex_data
0020a70: 3b0a 2069 6e74 2072 6566 6572 656e 6365  ;. int reference
0020a80: 733b 0a20 696e 7420 666c 6167 733b 0a0a  s;. int flags;..
0020a90: 0a20 424e 5f4d 4f4e 545f 4354 5820 2a5f  . BN_MONT_CTX *_
0020aa0: 6d65 7468 6f64 5f6d 6f64 5f6e 3b0a 2042  method_mod_n;. B
0020ab0: 4e5f 4d4f 4e54 5f43 5458 202a 5f6d 6574  N_MONT_CTX *_met
0020ac0: 686f 645f 6d6f 645f 703b 0a20 424e 5f4d  hod_mod_p;. BN_M
0020ad0: 4f4e 545f 4354 5820 2a5f 6d65 7468 6f64  ONT_CTX *_method
0020ae0: 5f6d 6f64 5f71 3b0a 0a0a 0a20 6368 6172  _mod_q;.... char
0020af0: 202a 6269 676e 756d 5f64 6174 613b 0a20   *bignum_data;. 
0020b00: 424e 5f42 4c49 4e44 494e 4720 2a62 6c69  BN_BLINDING *bli
0020b10: 6e64 696e 673b 0a20 424e 5f42 4c49 4e44  nding;. BN_BLIND
0020b20: 494e 4720 2a6d 745f 626c 696e 6469 6e67  ING *mt_blinding
0020b30: 3b0a 207d 3b0a 2320 3238 3320 222f 7573  ;. };.# 283 "/us
0020b40: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
0020b50: 6c2f 7273 612e 6822 2033 2034 0a52 5341  l/rsa.h" 3 4.RSA
0020b60: 202a 2052 5341 5f6e 6577 2876 6f69 6429   * RSA_new(void)
0020b70: 3b0a 5253 4120 2a20 5253 415f 6e65 775f  ;.RSA * RSA_new_
0020b80: 6d65 7468 6f64 2845 4e47 494e 4520 2a65  method(ENGINE *e
0020b90: 6e67 696e 6529 3b0a 696e 7420 5253 415f  ngine);.int RSA_
0020ba0: 7369 7a65 2863 6f6e 7374 2052 5341 202a  size(const RSA *
0020bb0: 7273 6129 3b0a 0a0a 0a52 5341 202a 2052  rsa);....RSA * R
0020bc0: 5341 5f67 656e 6572 6174 655f 6b65 7928  SA_generate_key(
0020bd0: 696e 7420 6269 7473 2c20 756e 7369 676e  int bits, unsign
0020be0: 6564 206c 6f6e 6720 652c 766f 6964 0a20  ed long e,void. 
0020bf0: 2028 2a63 616c 6c62 6163 6b29 2869 6e74   (*callback)(int
0020c00: 2c69 6e74 2c76 6f69 6420 2a29 2c76 6f69  ,int,void *),voi
0020c10: 6420 2a63 625f 6172 6729 3b0a 0a0a 0a69  d *cb_arg);....i
0020c20: 6e74 2052 5341 5f67 656e 6572 6174 655f  nt RSA_generate_
0020c30: 6b65 795f 6578 2852 5341 202a 7273 612c  key_ex(RSA *rsa,
0020c40: 2069 6e74 2062 6974 732c 2042 4947 4e55   int bits, BIGNU
0020c50: 4d20 2a65 2c20 424e 5f47 454e 4342 202a  M *e, BN_GENCB *
0020c60: 6362 293b 0a69 6e74 2052 5341 5f58 3933  cb);.int RSA_X93
0020c70: 315f 6465 7269 7665 5f65 7828 5253 4120  1_derive_ex(RSA 
0020c80: 2a72 7361 2c20 4249 474e 554d 202a 7031  *rsa, BIGNUM *p1
0020c90: 2c20 4249 474e 554d 202a 7032 2c20 4249  , BIGNUM *p2, BI
0020ca0: 474e 554d 202a 7131 2c20 4249 474e 554d  GNUM *q1, BIGNUM
0020cb0: 202a 7132 2c0a 2020 2063 6f6e 7374 2042   *q2,.   const B
0020cc0: 4947 4e55 4d20 2a58 7031 2c20 636f 6e73  IGNUM *Xp1, cons
0020cd0: 7420 4249 474e 554d 202a 5870 322c 2063  t BIGNUM *Xp2, c
0020ce0: 6f6e 7374 2042 4947 4e55 4d20 2a58 702c  onst BIGNUM *Xp,
0020cf0: 0a20 2020 636f 6e73 7420 4249 474e 554d  .   const BIGNUM
0020d00: 202a 5871 312c 2063 6f6e 7374 2042 4947   *Xq1, const BIG
0020d10: 4e55 4d20 2a58 7132 2c20 636f 6e73 7420  NUM *Xq2, const 
0020d20: 4249 474e 554d 202a 5871 2c0a 2020 2063  BIGNUM *Xq,.   c
0020d30: 6f6e 7374 2042 4947 4e55 4d20 2a65 2c20  onst BIGNUM *e, 
0020d40: 424e 5f47 454e 4342 202a 6362 293b 0a69  BN_GENCB *cb);.i
0020d50: 6e74 2052 5341 5f58 3933 315f 6765 6e65  nt RSA_X931_gene
0020d60: 7261 7465 5f6b 6579 5f65 7828 5253 4120  rate_key_ex(RSA 
0020d70: 2a72 7361 2c20 696e 7420 6269 7473 2c20  *rsa, int bits, 
0020d80: 636f 6e73 7420 4249 474e 554d 202a 652c  const BIGNUM *e,
0020d90: 2042 4e5f 4745 4e43 4220 2a63 6229 3b0a   BN_GENCB *cb);.
0020da0: 0a69 6e74 2052 5341 5f63 6865 636b 5f6b  .int RSA_check_k
0020db0: 6579 2863 6f6e 7374 2052 5341 202a 293b  ey(const RSA *);
0020dc0: 0a0a 696e 7420 5253 415f 7075 626c 6963  ..int RSA_public
0020dd0: 5f65 6e63 7279 7074 2869 6e74 2066 6c65  _encrypt(int fle
0020de0: 6e2c 2063 6f6e 7374 2075 6e73 6967 6e65  n, const unsigne
0020df0: 6420 6368 6172 202a 6672 6f6d 2c0a 2020  d char *from,.  
0020e00: 756e 7369 676e 6564 2063 6861 7220 2a74  unsigned char *t
0020e10: 6f2c 2052 5341 202a 7273 612c 696e 7420  o, RSA *rsa,int 
0020e20: 7061 6464 696e 6729 3b0a 696e 7420 5253  padding);.int RS
0020e30: 415f 7072 6976 6174 655f 656e 6372 7970  A_private_encryp
0020e40: 7428 696e 7420 666c 656e 2c20 636f 6e73  t(int flen, cons
0020e50: 7420 756e 7369 676e 6564 2063 6861 7220  t unsigned char 
0020e60: 2a66 726f 6d2c 0a20 2075 6e73 6967 6e65  *from,.  unsigne
0020e70: 6420 6368 6172 202a 746f 2c20 5253 4120  d char *to, RSA 
0020e80: 2a72 7361 2c69 6e74 2070 6164 6469 6e67  *rsa,int padding
0020e90: 293b 0a69 6e74 2052 5341 5f70 7562 6c69  );.int RSA_publi
0020ea0: 635f 6465 6372 7970 7428 696e 7420 666c  c_decrypt(int fl
0020eb0: 656e 2c20 636f 6e73 7420 756e 7369 676e  en, const unsign
0020ec0: 6564 2063 6861 7220 2a66 726f 6d2c 0a20  ed char *from,. 
0020ed0: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
0020ee0: 746f 2c20 5253 4120 2a72 7361 2c69 6e74  to, RSA *rsa,int
0020ef0: 2070 6164 6469 6e67 293b 0a69 6e74 2052   padding);.int R
0020f00: 5341 5f70 7269 7661 7465 5f64 6563 7279  SA_private_decry
0020f10: 7074 2869 6e74 2066 6c65 6e2c 2063 6f6e  pt(int flen, con
0020f20: 7374 2075 6e73 6967 6e65 6420 6368 6172  st unsigned char
0020f30: 202a 6672 6f6d 2c0a 2020 756e 7369 676e   *from,.  unsign
0020f40: 6564 2063 6861 7220 2a74 6f2c 2052 5341  ed char *to, RSA
0020f50: 202a 7273 612c 696e 7420 7061 6464 696e   *rsa,int paddin
0020f60: 6729 3b0a 766f 6964 2052 5341 5f66 7265  g);.void RSA_fre
0020f70: 6520 2852 5341 202a 7229 3b0a 0a69 6e74  e (RSA *r);..int
0020f80: 2052 5341 5f75 705f 7265 6628 5253 4120   RSA_up_ref(RSA 
0020f90: 2a72 293b 0a0a 696e 7420 5253 415f 666c  *r);..int RSA_fl
0020fa0: 6167 7328 636f 6e73 7420 5253 4120 2a72  ags(const RSA *r
0020fb0: 293b 0a0a 766f 6964 2052 5341 5f73 6574  );..void RSA_set
0020fc0: 5f64 6566 6175 6c74 5f6d 6574 686f 6428  _default_method(
0020fd0: 636f 6e73 7420 5253 415f 4d45 5448 4f44  const RSA_METHOD
0020fe0: 202a 6d65 7468 293b 0a63 6f6e 7374 2052   *meth);.const R
0020ff0: 5341 5f4d 4554 484f 4420 2a52 5341 5f67  SA_METHOD *RSA_g
0021000: 6574 5f64 6566 6175 6c74 5f6d 6574 686f  et_default_metho
0021010: 6428 766f 6964 293b 0a63 6f6e 7374 2052  d(void);.const R
0021020: 5341 5f4d 4554 484f 4420 2a52 5341 5f67  SA_METHOD *RSA_g
0021030: 6574 5f6d 6574 686f 6428 636f 6e73 7420  et_method(const 
0021040: 5253 4120 2a72 7361 293b 0a69 6e74 2052  RSA *rsa);.int R
0021050: 5341 5f73 6574 5f6d 6574 686f 6428 5253  SA_set_method(RS
0021060: 4120 2a72 7361 2c20 636f 6e73 7420 5253  A *rsa, const RS
0021070: 415f 4d45 5448 4f44 202a 6d65 7468 293b  A_METHOD *meth);
0021080: 0a0a 0a69 6e74 2052 5341 5f6d 656d 6f72  ...int RSA_memor
0021090: 795f 6c6f 636b 2852 5341 202a 7229 3b0a  y_lock(RSA *r);.
00210a0: 0a0a 636f 6e73 7420 5253 415f 4d45 5448  ..const RSA_METH
00210b0: 4f44 202a 5253 415f 504b 4353 315f 5353  OD *RSA_PKCS1_SS
00210c0: 4c65 6179 2876 6f69 6429 3b0a 0a63 6f6e  Leay(void);..con
00210d0: 7374 2052 5341 5f4d 4554 484f 4420 2a52  st RSA_METHOD *R
00210e0: 5341 5f6e 756c 6c5f 6d65 7468 6f64 2876  SA_null_method(v
00210f0: 6f69 6429 3b0a 0a52 5341 202a 6432 695f  oid);..RSA *d2i_
0021100: 5253 4150 7562 6c69 634b 6579 2852 5341  RSAPublicKey(RSA
0021110: 202a 2a61 2c20 636f 6e73 7420 756e 7369   **a, const unsi
0021120: 676e 6564 2063 6861 7220 2a2a 696e 2c20  gned char **in, 
0021130: 6c6f 6e67 206c 656e 293b 2069 6e74 2069  long len); int i
0021140: 3264 5f52 5341 5075 626c 6963 4b65 7928  2d_RSAPublicKey(
0021150: 636f 6e73 7420 5253 4120 2a61 2c20 756e  const RSA *a, un
0021160: 7369 676e 6564 2063 6861 7220 2a2a 6f75  signed char **ou
0021170: 7429 3b20 6578 7465 726e 2063 6f6e 7374  t); extern const
0021180: 2041 534e 315f 4954 454d 2052 5341 5075   ASN1_ITEM RSAPu
0021190: 626c 6963 4b65 795f 6974 3b0a 5253 4120  blicKey_it;.RSA 
00211a0: 2a64 3269 5f52 5341 5072 6976 6174 654b  *d2i_RSAPrivateK
00211b0: 6579 2852 5341 202a 2a61 2c20 636f 6e73  ey(RSA **a, cons
00211c0: 7420 756e 7369 676e 6564 2063 6861 7220  t unsigned char 
00211d0: 2a2a 696e 2c20 6c6f 6e67 206c 656e 293b  **in, long len);
00211e0: 2069 6e74 2069 3264 5f52 5341 5072 6976   int i2d_RSAPriv
00211f0: 6174 654b 6579 2863 6f6e 7374 2052 5341  ateKey(const RSA
0021200: 202a 612c 2075 6e73 6967 6e65 6420 6368   *a, unsigned ch
0021210: 6172 202a 2a6f 7574 293b 2065 7874 6572  ar **out); exter
0021220: 6e20 636f 6e73 7420 4153 4e31 5f49 5445  n const ASN1_ITE
0021230: 4d20 5253 4150 7269 7661 7465 4b65 795f  M RSAPrivateKey_
0021240: 6974 3b0a 0a74 7970 6564 6566 2073 7472  it;..typedef str
0021250: 7563 7420 7273 615f 7073 735f 7061 7261  uct rsa_pss_para
0021260: 6d73 5f73 740a 207b 0a20 5835 3039 5f41  ms_st. {. X509_A
0021270: 4c47 4f52 202a 6861 7368 416c 676f 7269  LGOR *hashAlgori
0021280: 7468 6d3b 0a20 5835 3039 5f41 4c47 4f52  thm;. X509_ALGOR
0021290: 202a 6d61 736b 4765 6e41 6c67 6f72 6974   *maskGenAlgorit
00212a0: 686d 3b0a 2041 534e 315f 494e 5445 4745  hm;. ASN1_INTEGE
00212b0: 5220 2a73 616c 744c 656e 6774 683b 0a20  R *saltLength;. 
00212c0: 4153 4e31 5f49 4e54 4547 4552 202a 7472  ASN1_INTEGER *tr
00212d0: 6169 6c65 7246 6965 6c64 3b0a 207d 2052  ailerField;. } R
00212e0: 5341 5f50 5353 5f50 4152 414d 533b 0a0a  SA_PSS_PARAMS;..
00212f0: 5253 415f 5053 535f 5041 5241 4d53 202a  RSA_PSS_PARAMS *
0021300: 5253 415f 5053 535f 5041 5241 4d53 5f6e  RSA_PSS_PARAMS_n
0021310: 6577 2876 6f69 6429 3b20 766f 6964 2052  ew(void); void R
0021320: 5341 5f50 5353 5f50 4152 414d 535f 6672  SA_PSS_PARAMS_fr
0021330: 6565 2852 5341 5f50 5353 5f50 4152 414d  ee(RSA_PSS_PARAM
0021340: 5320 2a61 293b 2052 5341 5f50 5353 5f50  S *a); RSA_PSS_P
0021350: 4152 414d 5320 2a64 3269 5f52 5341 5f50  ARAMS *d2i_RSA_P
0021360: 5353 5f50 4152 414d 5328 5253 415f 5053  SS_PARAMS(RSA_PS
0021370: 535f 5041 5241 4d53 202a 2a61 2c20 636f  S_PARAMS **a, co
0021380: 6e73 7420 756e 7369 676e 6564 2063 6861  nst unsigned cha
0021390: 7220 2a2a 696e 2c20 6c6f 6e67 206c 656e  r **in, long len
00213a0: 293b 2069 6e74 2069 3264 5f52 5341 5f50  ); int i2d_RSA_P
00213b0: 5353 5f50 4152 414d 5328 5253 415f 5053  SS_PARAMS(RSA_PS
00213c0: 535f 5041 5241 4d53 202a 612c 2075 6e73  S_PARAMS *a, uns
00213d0: 6967 6e65 6420 6368 6172 202a 2a6f 7574  igned char **out
00213e0: 293b 2065 7874 6572 6e20 636f 6e73 7420  ); extern const 
00213f0: 4153 4e31 5f49 5445 4d20 5253 415f 5053  ASN1_ITEM RSA_PS
0021400: 535f 5041 5241 4d53 5f69 743b 0a0a 0a69  S_PARAMS_it;...i
0021410: 6e74 2052 5341 5f70 7269 6e74 5f66 7028  nt RSA_print_fp(
0021420: 4649 4c45 202a 6670 2c20 636f 6e73 7420  FILE *fp, const 
0021430: 5253 4120 2a72 2c69 6e74 206f 6666 7365  RSA *r,int offse
0021440: 7429 3b0a 0a0a 0a69 6e74 2052 5341 5f70  t);....int RSA_p
0021450: 7269 6e74 2842 494f 202a 6270 2c20 636f  rint(BIO *bp, co
0021460: 6e73 7420 5253 4120 2a72 2c69 6e74 206f  nst RSA *r,int o
0021470: 6666 7365 7429 3b0a 0a0a 0a69 6e74 2069  ffset);....int i
0021480: 3264 5f52 5341 5f4e 4554 2863 6f6e 7374  2d_RSA_NET(const
0021490: 2052 5341 202a 612c 2075 6e73 6967 6e65   RSA *a, unsigne
00214a0: 6420 6368 6172 202a 2a70 702c 0a20 2069  d char **pp,.  i
00214b0: 6e74 2028 2a63 6229 2863 6861 7220 2a62  nt (*cb)(char *b
00214c0: 7566 2c20 696e 7420 6c65 6e2c 2063 6f6e  uf, int len, con
00214d0: 7374 2063 6861 7220 2a70 726f 6d70 742c  st char *prompt,
00214e0: 2069 6e74 2076 6572 6966 7929 2c0a 2020   int verify),.  
00214f0: 696e 7420 7367 636b 6579 293b 0a52 5341  int sgckey);.RSA
0021500: 202a 6432 695f 5253 415f 4e45 5428 5253   *d2i_RSA_NET(RS
0021510: 4120 2a2a 612c 2063 6f6e 7374 2075 6e73  A **a, const uns
0021520: 6967 6e65 6420 6368 6172 202a 2a70 702c  igned char **pp,
0021530: 206c 6f6e 6720 6c65 6e67 7468 2c0a 2020   long length,.  
0021540: 2069 6e74 2028 2a63 6229 2863 6861 7220   int (*cb)(char 
0021550: 2a62 7566 2c20 696e 7420 6c65 6e2c 2063  *buf, int len, c
0021560: 6f6e 7374 2063 6861 7220 2a70 726f 6d70  onst char *promp
0021570: 742c 2069 6e74 2076 6572 6966 7929 2c0a  t, int verify),.
0021580: 2020 2069 6e74 2073 6763 6b65 7929 3b0a     int sgckey);.
0021590: 0a69 6e74 2069 3264 5f4e 6574 7363 6170  .int i2d_Netscap
00215a0: 655f 5253 4128 636f 6e73 7420 5253 4120  e_RSA(const RSA 
00215b0: 2a61 2c20 756e 7369 676e 6564 2063 6861  *a, unsigned cha
00215c0: 7220 2a2a 7070 2c0a 2020 2020 2020 2069  r **pp,.       i
00215d0: 6e74 2028 2a63 6229 2863 6861 7220 2a62  nt (*cb)(char *b
00215e0: 7566 2c20 696e 7420 6c65 6e2c 2063 6f6e  uf, int len, con
00215f0: 7374 2063 6861 7220 2a70 726f 6d70 742c  st char *prompt,
0021600: 0a20 2020 2020 2020 2020 2069 6e74 2076  .          int v
0021610: 6572 6966 7929 293b 0a52 5341 202a 6432  erify));.RSA *d2
0021620: 695f 4e65 7473 6361 7065 5f52 5341 2852  i_Netscape_RSA(R
0021630: 5341 202a 2a61 2c20 636f 6e73 7420 756e  SA **a, const un
0021640: 7369 676e 6564 2063 6861 7220 2a2a 7070  signed char **pp
0021650: 2c20 6c6f 6e67 206c 656e 6774 682c 0a20  , long length,. 
0021660: 2020 2020 2020 2069 6e74 2028 2a63 6229         int (*cb)
0021670: 2863 6861 7220 2a62 7566 2c20 696e 7420  (char *buf, int 
0021680: 6c65 6e2c 2063 6f6e 7374 2063 6861 7220  len, const char 
0021690: 2a70 726f 6d70 742c 0a20 2020 2069 6e74  *prompt,.    int
00216a0: 2076 6572 6966 7929 293b 0a0a 0a0a 0a69   verify));.....i
00216b0: 6e74 2052 5341 5f73 6967 6e28 696e 7420  nt RSA_sign(int 
00216c0: 7479 7065 2c20 636f 6e73 7420 756e 7369  type, const unsi
00216d0: 676e 6564 2063 6861 7220 2a6d 2c20 756e  gned char *m, un
00216e0: 7369 676e 6564 2069 6e74 206d 5f6c 656e  signed int m_len
00216f0: 6774 682c 0a20 756e 7369 676e 6564 2063  gth,. unsigned c
0021700: 6861 7220 2a73 6967 7265 742c 2075 6e73  har *sigret, uns
0021710: 6967 6e65 6420 696e 7420 2a73 6967 6c65  igned int *sigle
0021720: 6e2c 2052 5341 202a 7273 6129 3b0a 696e  n, RSA *rsa);.in
0021730: 7420 5253 415f 7665 7269 6679 2869 6e74  t RSA_verify(int
0021740: 2074 7970 652c 2063 6f6e 7374 2075 6e73   type, const uns
0021750: 6967 6e65 6420 6368 6172 202a 6d2c 2075  igned char *m, u
0021760: 6e73 6967 6e65 6420 696e 7420 6d5f 6c65  nsigned int m_le
0021770: 6e67 7468 2c0a 2063 6f6e 7374 2075 6e73  ngth,. const uns
0021780: 6967 6e65 6420 6368 6172 202a 7369 6762  igned char *sigb
0021790: 7566 2c20 756e 7369 676e 6564 2069 6e74  uf, unsigned int
00217a0: 2073 6967 6c65 6e2c 2052 5341 202a 7273   siglen, RSA *rs
00217b0: 6129 3b0a 0a0a 0a69 6e74 2052 5341 5f73  a);....int RSA_s
00217c0: 6967 6e5f 4153 4e31 5f4f 4354 4554 5f53  ign_ASN1_OCTET_S
00217d0: 5452 494e 4728 696e 7420 7479 7065 2c0a  TRING(int type,.
00217e0: 2063 6f6e 7374 2075 6e73 6967 6e65 6420   const unsigned 
00217f0: 6368 6172 202a 6d2c 2075 6e73 6967 6e65  char *m, unsigne
0021800: 6420 696e 7420 6d5f 6c65 6e67 7468 2c0a  d int m_length,.
0021810: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
0021820: 7369 6772 6574 2c20 756e 7369 676e 6564  sigret, unsigned
0021830: 2069 6e74 202a 7369 676c 656e 2c20 5253   int *siglen, RS
0021840: 4120 2a72 7361 293b 0a69 6e74 2052 5341  A *rsa);.int RSA
0021850: 5f76 6572 6966 795f 4153 4e31 5f4f 4354  _verify_ASN1_OCT
0021860: 4554 5f53 5452 494e 4728 696e 7420 7479  ET_STRING(int ty
0021870: 7065 2c0a 2063 6f6e 7374 2075 6e73 6967  pe,. const unsig
0021880: 6e65 6420 6368 6172 202a 6d2c 2075 6e73  ned char *m, uns
0021890: 6967 6e65 6420 696e 7420 6d5f 6c65 6e67  igned int m_leng
00218a0: 7468 2c0a 2075 6e73 6967 6e65 6420 6368  th,. unsigned ch
00218b0: 6172 202a 7369 6762 7566 2c20 756e 7369  ar *sigbuf, unsi
00218c0: 676e 6564 2069 6e74 2073 6967 6c65 6e2c  gned int siglen,
00218d0: 2052 5341 202a 7273 6129 3b0a 0a69 6e74   RSA *rsa);..int
00218e0: 2052 5341 5f62 6c69 6e64 696e 675f 6f6e   RSA_blinding_on
00218f0: 2852 5341 202a 7273 612c 2042 4e5f 4354  (RSA *rsa, BN_CT
0021900: 5820 2a63 7478 293b 0a76 6f69 6420 5253  X *ctx);.void RS
0021910: 415f 626c 696e 6469 6e67 5f6f 6666 2852  A_blinding_off(R
0021920: 5341 202a 7273 6129 3b0a 424e 5f42 4c49  SA *rsa);.BN_BLI
0021930: 4e44 494e 4720 2a52 5341 5f73 6574 7570  NDING *RSA_setup
0021940: 5f62 6c69 6e64 696e 6728 5253 4120 2a72  _blinding(RSA *r
0021950: 7361 2c20 424e 5f43 5458 202a 6374 7829  sa, BN_CTX *ctx)
0021960: 3b0a 0a69 6e74 2052 5341 5f70 6164 6469  ;..int RSA_paddi
0021970: 6e67 5f61 6464 5f50 4b43 5331 5f74 7970  ng_add_PKCS1_typ
0021980: 655f 3128 756e 7369 676e 6564 2063 6861  e_1(unsigned cha
0021990: 7220 2a74 6f2c 696e 7420 746c 656e 2c0a  r *to,int tlen,.
00219a0: 2063 6f6e 7374 2075 6e73 6967 6e65 6420   const unsigned 
00219b0: 6368 6172 202a 662c 696e 7420 666c 293b  char *f,int fl);
00219c0: 0a69 6e74 2052 5341 5f70 6164 6469 6e67  .int RSA_padding
00219d0: 5f63 6865 636b 5f50 4b43 5331 5f74 7970  _check_PKCS1_typ
00219e0: 655f 3128 756e 7369 676e 6564 2063 6861  e_1(unsigned cha
00219f0: 7220 2a74 6f2c 696e 7420 746c 656e 2c0a  r *to,int tlen,.
0021a00: 2063 6f6e 7374 2075 6e73 6967 6e65 6420   const unsigned 
0021a10: 6368 6172 202a 662c 696e 7420 666c 2c69  char *f,int fl,i
0021a20: 6e74 2072 7361 5f6c 656e 293b 0a69 6e74  nt rsa_len);.int
0021a30: 2052 5341 5f70 6164 6469 6e67 5f61 6464   RSA_padding_add
0021a40: 5f50 4b43 5331 5f74 7970 655f 3228 756e  _PKCS1_type_2(un
0021a50: 7369 676e 6564 2063 6861 7220 2a74 6f2c  signed char *to,
0021a60: 696e 7420 746c 656e 2c0a 2063 6f6e 7374  int tlen,. const
0021a70: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
0021a80: 662c 696e 7420 666c 293b 0a69 6e74 2052  f,int fl);.int R
0021a90: 5341 5f70 6164 6469 6e67 5f63 6865 636b  SA_padding_check
0021aa0: 5f50 4b43 5331 5f74 7970 655f 3228 756e  _PKCS1_type_2(un
0021ab0: 7369 676e 6564 2063 6861 7220 2a74 6f2c  signed char *to,
0021ac0: 696e 7420 746c 656e 2c0a 2063 6f6e 7374  int tlen,. const
0021ad0: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
0021ae0: 662c 696e 7420 666c 2c69 6e74 2072 7361  f,int fl,int rsa
0021af0: 5f6c 656e 293b 0a69 6e74 2050 4b43 5331  _len);.int PKCS1
0021b00: 5f4d 4746 3128 756e 7369 676e 6564 2063  _MGF1(unsigned c
0021b10: 6861 7220 2a6d 6173 6b2c 206c 6f6e 6720  har *mask, long 
0021b20: 6c65 6e2c 0a20 636f 6e73 7420 756e 7369  len,. const unsi
0021b30: 676e 6564 2063 6861 7220 2a73 6565 642c  gned char *seed,
0021b40: 206c 6f6e 6720 7365 6564 6c65 6e2c 2063   long seedlen, c
0021b50: 6f6e 7374 2045 5650 5f4d 4420 2a64 6773  onst EVP_MD *dgs
0021b60: 7429 3b0a 696e 7420 5253 415f 7061 6464  t);.int RSA_padd
0021b70: 696e 675f 6164 645f 504b 4353 315f 4f41  ing_add_PKCS1_OA
0021b80: 4550 2875 6e73 6967 6e65 6420 6368 6172  EP(unsigned char
0021b90: 202a 746f 2c69 6e74 2074 6c65 6e2c 0a20   *to,int tlen,. 
0021ba0: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
0021bb0: 6861 7220 2a66 2c69 6e74 2066 6c2c 0a20  har *f,int fl,. 
0021bc0: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
0021bd0: 6861 7220 2a70 2c69 6e74 2070 6c29 3b0a  har *p,int pl);.
0021be0: 696e 7420 5253 415f 7061 6464 696e 675f  int RSA_padding_
0021bf0: 6368 6563 6b5f 504b 4353 315f 4f41 4550  check_PKCS1_OAEP
0021c00: 2875 6e73 6967 6e65 6420 6368 6172 202a  (unsigned char *
0021c10: 746f 2c69 6e74 2074 6c65 6e2c 0a20 636f  to,int tlen,. co
0021c20: 6e73 7420 756e 7369 676e 6564 2063 6861  nst unsigned cha
0021c30: 7220 2a66 2c69 6e74 2066 6c2c 696e 7420  r *f,int fl,int 
0021c40: 7273 615f 6c65 6e2c 0a20 636f 6e73 7420  rsa_len,. const 
0021c50: 756e 7369 676e 6564 2063 6861 7220 2a70  unsigned char *p
0021c60: 2c69 6e74 2070 6c29 3b0a 696e 7420 5253  ,int pl);.int RS
0021c70: 415f 7061 6464 696e 675f 6164 645f 5353  A_padding_add_SS
0021c80: 4c76 3233 2875 6e73 6967 6e65 6420 6368  Lv23(unsigned ch
0021c90: 6172 202a 746f 2c69 6e74 2074 6c65 6e2c  ar *to,int tlen,
0021ca0: 0a20 636f 6e73 7420 756e 7369 676e 6564  . const unsigned
0021cb0: 2063 6861 7220 2a66 2c69 6e74 2066 6c29   char *f,int fl)
0021cc0: 3b0a 696e 7420 5253 415f 7061 6464 696e  ;.int RSA_paddin
0021cd0: 675f 6368 6563 6b5f 5353 4c76 3233 2875  g_check_SSLv23(u
0021ce0: 6e73 6967 6e65 6420 6368 6172 202a 746f  nsigned char *to
0021cf0: 2c69 6e74 2074 6c65 6e2c 0a20 636f 6e73  ,int tlen,. cons
0021d00: 7420 756e 7369 676e 6564 2063 6861 7220  t unsigned char 
0021d10: 2a66 2c69 6e74 2066 6c2c 696e 7420 7273  *f,int fl,int rs
0021d20: 615f 6c65 6e29 3b0a 696e 7420 5253 415f  a_len);.int RSA_
0021d30: 7061 6464 696e 675f 6164 645f 6e6f 6e65  padding_add_none
0021d40: 2875 6e73 6967 6e65 6420 6368 6172 202a  (unsigned char *
0021d50: 746f 2c69 6e74 2074 6c65 6e2c 0a20 636f  to,int tlen,. co
0021d60: 6e73 7420 756e 7369 676e 6564 2063 6861  nst unsigned cha
0021d70: 7220 2a66 2c69 6e74 2066 6c29 3b0a 696e  r *f,int fl);.in
0021d80: 7420 5253 415f 7061 6464 696e 675f 6368  t RSA_padding_ch
0021d90: 6563 6b5f 6e6f 6e65 2875 6e73 6967 6e65  eck_none(unsigne
0021da0: 6420 6368 6172 202a 746f 2c69 6e74 2074  d char *to,int t
0021db0: 6c65 6e2c 0a20 636f 6e73 7420 756e 7369  len,. const unsi
0021dc0: 676e 6564 2063 6861 7220 2a66 2c69 6e74  gned char *f,int
0021dd0: 2066 6c2c 696e 7420 7273 615f 6c65 6e29   fl,int rsa_len)
0021de0: 3b0a 696e 7420 5253 415f 7061 6464 696e  ;.int RSA_paddin
0021df0: 675f 6164 645f 5839 3331 2875 6e73 6967  g_add_X931(unsig
0021e00: 6e65 6420 6368 6172 202a 746f 2c69 6e74  ned char *to,int
0021e10: 2074 6c65 6e2c 0a20 636f 6e73 7420 756e   tlen,. const un
0021e20: 7369 676e 6564 2063 6861 7220 2a66 2c69  signed char *f,i
0021e30: 6e74 2066 6c29 3b0a 696e 7420 5253 415f  nt fl);.int RSA_
0021e40: 7061 6464 696e 675f 6368 6563 6b5f 5839  padding_check_X9
0021e50: 3331 2875 6e73 6967 6e65 6420 6368 6172  31(unsigned char
0021e60: 202a 746f 2c69 6e74 2074 6c65 6e2c 0a20   *to,int tlen,. 
0021e70: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
0021e80: 6861 7220 2a66 2c69 6e74 2066 6c2c 696e  har *f,int fl,in
0021e90: 7420 7273 615f 6c65 6e29 3b0a 696e 7420  t rsa_len);.int 
0021ea0: 5253 415f 5839 3331 5f68 6173 685f 6964  RSA_X931_hash_id
0021eb0: 2869 6e74 206e 6964 293b 0a0a 696e 7420  (int nid);..int 
0021ec0: 5253 415f 7665 7269 6679 5f50 4b43 5331  RSA_verify_PKCS1
0021ed0: 5f50 5353 2852 5341 202a 7273 612c 2063  _PSS(RSA *rsa, c
0021ee0: 6f6e 7374 2075 6e73 6967 6e65 6420 6368  onst unsigned ch
0021ef0: 6172 202a 6d48 6173 682c 0a20 2020 636f  ar *mHash,.   co
0021f00: 6e73 7420 4556 505f 4d44 202a 4861 7368  nst EVP_MD *Hash
0021f10: 2c20 636f 6e73 7420 756e 7369 676e 6564  , const unsigned
0021f20: 2063 6861 7220 2a45 4d2c 2069 6e74 2073   char *EM, int s
0021f30: 4c65 6e29 3b0a 696e 7420 5253 415f 7061  Len);.int RSA_pa
0021f40: 6464 696e 675f 6164 645f 504b 4353 315f  dding_add_PKCS1_
0021f50: 5053 5328 5253 4120 2a72 7361 2c20 756e  PSS(RSA *rsa, un
0021f60: 7369 676e 6564 2063 6861 7220 2a45 4d2c  signed char *EM,
0021f70: 0a20 2020 636f 6e73 7420 756e 7369 676e  .   const unsign
0021f80: 6564 2063 6861 7220 2a6d 4861 7368 2c0a  ed char *mHash,.
0021f90: 2020 2063 6f6e 7374 2045 5650 5f4d 4420     const EVP_MD 
0021fa0: 2a48 6173 682c 2069 6e74 2073 4c65 6e29  *Hash, int sLen)
0021fb0: 3b0a 0a69 6e74 2052 5341 5f76 6572 6966  ;..int RSA_verif
0021fc0: 795f 504b 4353 315f 5053 535f 6d67 6631  y_PKCS1_PSS_mgf1
0021fd0: 2852 5341 202a 7273 612c 2063 6f6e 7374  (RSA *rsa, const
0021fe0: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
0021ff0: 6d48 6173 682c 0a20 2020 636f 6e73 7420  mHash,.   const 
0022000: 4556 505f 4d44 202a 4861 7368 2c20 636f  EVP_MD *Hash, co
0022010: 6e73 7420 4556 505f 4d44 202a 6d67 6631  nst EVP_MD *mgf1
0022020: 4861 7368 2c0a 2020 2063 6f6e 7374 2075  Hash,.   const u
0022030: 6e73 6967 6e65 6420 6368 6172 202a 454d  nsigned char *EM
0022040: 2c20 696e 7420 734c 656e 293b 0a0a 696e  , int sLen);..in
0022050: 7420 5253 415f 7061 6464 696e 675f 6164  t RSA_padding_ad
0022060: 645f 504b 4353 315f 5053 535f 6d67 6631  d_PKCS1_PSS_mgf1
0022070: 2852 5341 202a 7273 612c 2075 6e73 6967  (RSA *rsa, unsig
0022080: 6e65 6420 6368 6172 202a 454d 2c0a 2020  ned char *EM,.  
0022090: 2063 6f6e 7374 2075 6e73 6967 6e65 6420   const unsigned 
00220a0: 6368 6172 202a 6d48 6173 682c 0a20 2020  char *mHash,.   
00220b0: 636f 6e73 7420 4556 505f 4d44 202a 4861  const EVP_MD *Ha
00220c0: 7368 2c20 636f 6e73 7420 4556 505f 4d44  sh, const EVP_MD
00220d0: 202a 6d67 6631 4861 7368 2c20 696e 7420   *mgf1Hash, int 
00220e0: 734c 656e 293b 0a0a 696e 7420 5253 415f  sLen);..int RSA_
00220f0: 6765 745f 6578 5f6e 6577 5f69 6e64 6578  get_ex_new_index
0022100: 286c 6f6e 6720 6172 676c 2c20 766f 6964  (long argl, void
0022110: 202a 6172 6770 2c20 4352 5950 544f 5f45   *argp, CRYPTO_E
0022120: 585f 6e65 7720 2a6e 6577 5f66 756e 632c  X_new *new_func,
0022130: 0a20 4352 5950 544f 5f45 585f 6475 7020  . CRYPTO_EX_dup 
0022140: 2a64 7570 5f66 756e 632c 2043 5259 5054  *dup_func, CRYPT
0022150: 4f5f 4558 5f66 7265 6520 2a66 7265 655f  O_EX_free *free_
0022160: 6675 6e63 293b 0a69 6e74 2052 5341 5f73  func);.int RSA_s
0022170: 6574 5f65 785f 6461 7461 2852 5341 202a  et_ex_data(RSA *
0022180: 722c 696e 7420 6964 782c 766f 6964 202a  r,int idx,void *
0022190: 6172 6729 3b0a 766f 6964 202a 5253 415f  arg);.void *RSA_
00221a0: 6765 745f 6578 5f64 6174 6128 636f 6e73  get_ex_data(cons
00221b0: 7420 5253 4120 2a72 2c20 696e 7420 6964  t RSA *r, int id
00221c0: 7829 3b0a 0a52 5341 202a 5253 4150 7562  x);..RSA *RSAPub
00221d0: 6c69 634b 6579 5f64 7570 2852 5341 202a  licKey_dup(RSA *
00221e0: 7273 6129 3b0a 5253 4120 2a52 5341 5072  rsa);.RSA *RSAPr
00221f0: 6976 6174 654b 6579 5f64 7570 2852 5341  ivateKey_dup(RSA
0022200: 202a 7273 6129 3b0a 2320 3436 3220 222f   *rsa);.# 462 "/
0022210: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
0022220: 7373 6c2f 7273 612e 6822 2033 2034 0a76  ssl/rsa.h" 3 4.v
0022230: 6f69 6420 4552 525f 6c6f 6164 5f52 5341  oid ERR_load_RSA
0022240: 5f73 7472 696e 6773 2876 6f69 6429 3b0a  _strings(void);.
0022250: 2320 3136 3020 2273 736c 5f6c 6f63 6c2e  # 160 "ssl_locl.
0022260: 6822 2032 0a0a 0a23 2031 2022 2f75 7372  h" 2...# 1 "/usr
0022270: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
0022280: 2f64 7361 2e68 2220 3120 3320 340a 2320  /dsa.h" 1 3 4.# 
0022290: 3638 2022 2f75 7372 2f69 6e63 6c75 6465  68 "/usr/include
00222a0: 2f6f 7065 6e73 736c 2f64 7361 2e68 2220  /openssl/dsa.h" 
00222b0: 3320 340a 2320 3120 222f 7573 722f 696e  3 4.# 1 "/usr/in
00222c0: 636c 7564 652f 6f70 656e 7373 6c2f 655f  clude/openssl/e_
00222d0: 6f73 322e 6822 2031 2033 2034 0a23 2035  os2.h" 1 3 4.# 5
00222e0: 3620 222f 7573 722f 696e 636c 7564 652f  6 "/usr/include/
00222f0: 6f70 656e 7373 6c2f 655f 6f73 322e 6822  openssl/e_os2.h"
0022300: 2033 2034 0a23 2031 2022 2f75 7372 2f69   3 4.# 1 "/usr/i
0022310: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f6f  nclude/openssl/o
0022320: 7065 6e73 736c 636f 6e66 2e68 2220 3120  pensslconf.h" 1 
0022330: 3320 340a 2320 3334 2022 2f75 7372 2f69  3 4.# 34 "/usr/i
0022340: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f6f  nclude/openssl/o
0022350: 7065 6e73 736c 636f 6e66 2e68 2220 3320  pensslconf.h" 3 
0022360: 340a 2320 3120 222f 7573 722f 696e 636c  4.# 1 "/usr/incl
0022370: 7564 652f 6f70 656e 7373 6c2f 6f70 656e  ude/openssl/open
0022380: 7373 6c63 6f6e 662d 7838 365f 3634 2e68  sslconf-x86_64.h
0022390: 2220 3120 3320 340a 2320 3335 2022 2f75  " 1 3 4.# 35 "/u
00223a0: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
00223b0: 736c 2f6f 7065 6e73 736c 636f 6e66 2e68  sl/opensslconf.h
00223c0: 2220 3220 3320 340a 2320 3537 2022 2f75  " 2 3 4.# 57 "/u
00223d0: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
00223e0: 736c 2f65 5f6f 7332 2e68 2220 3220 3320  sl/e_os2.h" 2 3 
00223f0: 340a 2320 3639 2022 2f75 7372 2f69 6e63  4.# 69 "/usr/inc
0022400: 6c75 6465 2f6f 7065 6e73 736c 2f64 7361  lude/openssl/dsa
0022410: 2e68 2220 3220 3320 340a 2320 3833 2022  .h" 2 3 4.# 83 "
0022420: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
0022430: 6e73 736c 2f64 7361 2e68 2220 3320 340a  nssl/dsa.h" 3 4.
0022440: 2320 3120 222f 7573 722f 696e 636c 7564  # 1 "/usr/includ
0022450: 652f 6f70 656e 7373 6c2f 6468 2e68 2220  e/openssl/dh.h" 
0022460: 3120 3320 340a 2320 3632 2022 2f75 7372  1 3 4.# 62 "/usr
0022470: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
0022480: 2f64 682e 6822 2033 2034 0a23 2031 2022  /dh.h" 3 4.# 1 "
0022490: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
00224a0: 6e73 736c 2f65 5f6f 7332 2e68 2220 3120  nssl/e_os2.h" 1 
00224b0: 3320 340a 2320 3536 2022 2f75 7372 2f69  3 4.# 56 "/usr/i
00224c0: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f65  nclude/openssl/e
00224d0: 5f6f 7332 2e68 2220 3320 340a 2320 3120  _os2.h" 3 4.# 1 
00224e0: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
00224f0: 656e 7373 6c2f 6f70 656e 7373 6c63 6f6e  enssl/opensslcon
0022500: 662e 6822 2031 2033 2034 0a23 2033 3420  f.h" 1 3 4.# 34 
0022510: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
0022520: 656e 7373 6c2f 6f70 656e 7373 6c63 6f6e  enssl/opensslcon
0022530: 662e 6822 2033 2034 0a23 2031 2022 2f75  f.h" 3 4.# 1 "/u
0022540: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
0022550: 736c 2f6f 7065 6e73 736c 636f 6e66 2d78  sl/opensslconf-x
0022560: 3836 5f36 342e 6822 2031 2033 2034 0a23  86_64.h" 1 3 4.#
0022570: 2033 3520 222f 7573 722f 696e 636c 7564   35 "/usr/includ
0022580: 652f 6f70 656e 7373 6c2f 6f70 656e 7373  e/openssl/openss
0022590: 6c63 6f6e 662e 6822 2032 2033 2034 0a23  lconf.h" 2 3 4.#
00225a0: 2035 3720 222f 7573 722f 696e 636c 7564   57 "/usr/includ
00225b0: 652f 6f70 656e 7373 6c2f 655f 6f73 322e  e/openssl/e_os2.
00225c0: 6822 2032 2033 2034 0a23 2036 3320 222f  h" 2 3 4.# 63 "/
00225d0: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
00225e0: 7373 6c2f 6468 2e68 2220 3220 3320 340a  ssl/dh.h" 2 3 4.
00225f0: 2320 3131 3520 222f 7573 722f 696e 636c  # 115 "/usr/incl
0022600: 7564 652f 6f70 656e 7373 6c2f 6468 2e68  ude/openssl/dh.h
0022610: 2220 3320 340a 7374 7275 6374 2064 685f  " 3 4.struct dh_
0022620: 6d65 7468 6f64 0a20 7b0a 2063 6f6e 7374  method. {. const
0022630: 2063 6861 7220 2a6e 616d 653b 0a0a 2069   char *name;.. i
0022640: 6e74 2028 2a67 656e 6572 6174 655f 6b65  nt (*generate_ke
0022650: 7929 2844 4820 2a64 6829 3b0a 2069 6e74  y)(DH *dh);. int
0022660: 2028 2a63 6f6d 7075 7465 5f6b 6579 2928   (*compute_key)(
0022670: 756e 7369 676e 6564 2063 6861 7220 2a6b  unsigned char *k
0022680: 6579 2c63 6f6e 7374 2042 4947 4e55 4d20  ey,const BIGNUM 
0022690: 2a70 7562 5f6b 6579 2c44 4820 2a64 6829  *pub_key,DH *dh)
00226a0: 3b0a 2069 6e74 2028 2a62 6e5f 6d6f 645f  ;. int (*bn_mod_
00226b0: 6578 7029 2863 6f6e 7374 2044 4820 2a64  exp)(const DH *d
00226c0: 682c 2042 4947 4e55 4d20 2a72 2c20 636f  h, BIGNUM *r, co
00226d0: 6e73 7420 4249 474e 554d 202a 612c 0a20  nst BIGNUM *a,. 
00226e0: 2020 2063 6f6e 7374 2042 4947 4e55 4d20     const BIGNUM 
00226f0: 2a70 2c20 636f 6e73 7420 4249 474e 554d  *p, const BIGNUM
0022700: 202a 6d2c 2042 4e5f 4354 5820 2a63 7478   *m, BN_CTX *ctx
0022710: 2c0a 2020 2020 424e 5f4d 4f4e 545f 4354  ,.    BN_MONT_CT
0022720: 5820 2a6d 5f63 7478 293b 0a0a 2069 6e74  X *m_ctx);.. int
0022730: 2028 2a69 6e69 7429 2844 4820 2a64 6829   (*init)(DH *dh)
0022740: 3b0a 2069 6e74 2028 2a66 696e 6973 6829  ;. int (*finish)
0022750: 2844 4820 2a64 6829 3b0a 2069 6e74 2066  (DH *dh);. int f
0022760: 6c61 6773 3b0a 2063 6861 7220 2a61 7070  lags;. char *app
0022770: 5f64 6174 613b 0a0a 2069 6e74 2028 2a67  _data;.. int (*g
0022780: 656e 6572 6174 655f 7061 7261 6d73 2928  enerate_params)(
0022790: 4448 202a 6468 2c20 696e 7420 7072 696d  DH *dh, int prim
00227a0: 655f 6c65 6e2c 2069 6e74 2067 656e 6572  e_len, int gener
00227b0: 6174 6f72 2c20 424e 5f47 454e 4342 202a  ator, BN_GENCB *
00227c0: 6362 293b 0a20 7d3b 0a0a 7374 7275 6374  cb);. };..struct
00227d0: 2064 685f 7374 0a20 7b0a 0a0a 2069 6e74   dh_st. {... int
00227e0: 2070 6164 3b0a 2069 6e74 2076 6572 7369   pad;. int versi
00227f0: 6f6e 3b0a 2042 4947 4e55 4d20 2a70 3b0a  on;. BIGNUM *p;.
0022800: 2042 4947 4e55 4d20 2a67 3b0a 206c 6f6e   BIGNUM *g;. lon
0022810: 6720 6c65 6e67 7468 3b0a 2042 4947 4e55  g length;. BIGNU
0022820: 4d20 2a70 7562 5f6b 6579 3b0a 2042 4947  M *pub_key;. BIG
0022830: 4e55 4d20 2a70 7269 765f 6b65 793b 0a0a  NUM *priv_key;..
0022840: 2069 6e74 2066 6c61 6773 3b0a 2042 4e5f   int flags;. BN_
0022850: 4d4f 4e54 5f43 5458 202a 6d65 7468 6f64  MONT_CTX *method
0022860: 5f6d 6f6e 745f 703b 0a0a 2042 4947 4e55  _mont_p;.. BIGNU
0022870: 4d20 2a71 3b0a 2042 4947 4e55 4d20 2a6a  M *q;. BIGNUM *j
0022880: 3b0a 2075 6e73 6967 6e65 6420 6368 6172  ;. unsigned char
0022890: 202a 7365 6564 3b0a 2069 6e74 2073 6565   *seed;. int see
00228a0: 646c 656e 3b0a 2042 4947 4e55 4d20 2a63  dlen;. BIGNUM *c
00228b0: 6f75 6e74 6572 3b0a 0a20 696e 7420 7265  ounter;.. int re
00228c0: 6665 7265 6e63 6573 3b0a 2043 5259 5054  ferences;. CRYPT
00228d0: 4f5f 4558 5f44 4154 4120 6578 5f64 6174  O_EX_DATA ex_dat
00228e0: 613b 0a20 636f 6e73 7420 4448 5f4d 4554  a;. const DH_MET
00228f0: 484f 4420 2a6d 6574 683b 0a20 454e 4749  HOD *meth;. ENGI
0022900: 4e45 202a 656e 6769 6e65 3b0a 207d 3b0a  NE *engine;. };.
0022910: 2320 3138 3520 222f 7573 722f 696e 636c  # 185 "/usr/incl
0022920: 7564 652f 6f70 656e 7373 6c2f 6468 2e68  ude/openssl/dh.h
0022930: 2220 3320 340a 4448 202a 4448 7061 7261  " 3 4.DH *DHpara
0022940: 6d73 5f64 7570 2844 4820 2a29 3b0a 0a63  ms_dup(DH *);..c
0022950: 6f6e 7374 2044 485f 4d45 5448 4f44 202a  onst DH_METHOD *
0022960: 4448 5f4f 7065 6e53 534c 2876 6f69 6429  DH_OpenSSL(void)
0022970: 3b0a 0a76 6f69 6420 4448 5f73 6574 5f64  ;..void DH_set_d
0022980: 6566 6175 6c74 5f6d 6574 686f 6428 636f  efault_method(co
0022990: 6e73 7420 4448 5f4d 4554 484f 4420 2a6d  nst DH_METHOD *m
00229a0: 6574 6829 3b0a 636f 6e73 7420 4448 5f4d  eth);.const DH_M
00229b0: 4554 484f 4420 2a44 485f 6765 745f 6465  ETHOD *DH_get_de
00229c0: 6661 756c 745f 6d65 7468 6f64 2876 6f69  fault_method(voi
00229d0: 6429 3b0a 696e 7420 4448 5f73 6574 5f6d  d);.int DH_set_m
00229e0: 6574 686f 6428 4448 202a 6468 2c20 636f  ethod(DH *dh, co
00229f0: 6e73 7420 4448 5f4d 4554 484f 4420 2a6d  nst DH_METHOD *m
0022a00: 6574 6829 3b0a 4448 202a 4448 5f6e 6577  eth);.DH *DH_new
0022a10: 5f6d 6574 686f 6428 454e 4749 4e45 202a  _method(ENGINE *
0022a20: 656e 6769 6e65 293b 0a0a 4448 202a 2044  engine);..DH * D
0022a30: 485f 6e65 7728 766f 6964 293b 0a76 6f69  H_new(void);.voi
0022a40: 6420 4448 5f66 7265 6528 4448 202a 6468  d DH_free(DH *dh
0022a50: 293b 0a69 6e74 2044 485f 7570 5f72 6566  );.int DH_up_ref
0022a60: 2844 4820 2a64 6829 3b0a 696e 7420 4448  (DH *dh);.int DH
0022a70: 5f73 697a 6528 636f 6e73 7420 4448 202a  _size(const DH *
0022a80: 6468 293b 0a69 6e74 2044 485f 6765 745f  dh);.int DH_get_
0022a90: 6578 5f6e 6577 5f69 6e64 6578 286c 6f6e  ex_new_index(lon
0022aa0: 6720 6172 676c 2c20 766f 6964 202a 6172  g argl, void *ar
0022ab0: 6770 2c20 4352 5950 544f 5f45 585f 6e65  gp, CRYPTO_EX_ne
0022ac0: 7720 2a6e 6577 5f66 756e 632c 0a20 2020  w *new_func,.   
0022ad0: 2020 2043 5259 5054 4f5f 4558 5f64 7570     CRYPTO_EX_dup
0022ae0: 202a 6475 705f 6675 6e63 2c20 4352 5950   *dup_func, CRYP
0022af0: 544f 5f45 585f 6672 6565 202a 6672 6565  TO_EX_free *free
0022b00: 5f66 756e 6329 3b0a 696e 7420 4448 5f73  _func);.int DH_s
0022b10: 6574 5f65 785f 6461 7461 2844 4820 2a64  et_ex_data(DH *d
0022b20: 2c20 696e 7420 6964 782c 2076 6f69 6420  , int idx, void 
0022b30: 2a61 7267 293b 0a76 6f69 6420 2a44 485f  *arg);.void *DH_
0022b40: 6765 745f 6578 5f64 6174 6128 4448 202a  get_ex_data(DH *
0022b50: 642c 2069 6e74 2069 6478 293b 0a0a 0a0a  d, int idx);....
0022b60: 4448 202a 2044 485f 6765 6e65 7261 7465  DH * DH_generate
0022b70: 5f70 6172 616d 6574 6572 7328 696e 7420  _parameters(int 
0022b80: 7072 696d 655f 6c65 6e2c 696e 7420 6765  prime_len,int ge
0022b90: 6e65 7261 746f 722c 0a20 2076 6f69 6420  nerator,.  void 
0022ba0: 282a 6361 6c6c 6261 636b 2928 696e 742c  (*callback)(int,
0022bb0: 696e 742c 766f 6964 202a 292c 766f 6964  int,void *),void
0022bc0: 202a 6362 5f61 7267 293b 0a0a 0a0a 696e   *cb_arg);....in
0022bd0: 7420 4448 5f67 656e 6572 6174 655f 7061  t DH_generate_pa
0022be0: 7261 6d65 7465 7273 5f65 7828 4448 202a  rameters_ex(DH *
0022bf0: 6468 2c20 696e 7420 7072 696d 655f 6c65  dh, int prime_le
0022c00: 6e2c 696e 7420 6765 6e65 7261 746f 722c  n,int generator,
0022c10: 2042 4e5f 4745 4e43 4220 2a63 6229 3b0a   BN_GENCB *cb);.
0022c20: 0a69 6e74 2044 485f 6368 6563 6b28 636f  .int DH_check(co
0022c30: 6e73 7420 4448 202a 6468 2c69 6e74 202a  nst DH *dh,int *
0022c40: 636f 6465 7329 3b0a 696e 7420 4448 5f63  codes);.int DH_c
0022c50: 6865 636b 5f70 7562 5f6b 6579 2863 6f6e  heck_pub_key(con
0022c60: 7374 2044 4820 2a64 682c 636f 6e73 7420  st DH *dh,const 
0022c70: 4249 474e 554d 202a 7075 625f 6b65 792c  BIGNUM *pub_key,
0022c80: 2069 6e74 202a 636f 6465 7329 3b0a 696e   int *codes);.in
0022c90: 7420 4448 5f67 656e 6572 6174 655f 6b65  t DH_generate_ke
0022ca0: 7928 4448 202a 6468 293b 0a69 6e74 2044  y(DH *dh);.int D
0022cb0: 485f 636f 6d70 7574 655f 6b65 7928 756e  H_compute_key(un
0022cc0: 7369 676e 6564 2063 6861 7220 2a6b 6579  signed char *key
0022cd0: 2c63 6f6e 7374 2042 4947 4e55 4d20 2a70  ,const BIGNUM *p
0022ce0: 7562 5f6b 6579 2c44 4820 2a64 6829 3b0a  ub_key,DH *dh);.
0022cf0: 696e 7420 4448 5f63 6f6d 7075 7465 5f6b  int DH_compute_k
0022d00: 6579 5f70 6164 6465 6428 756e 7369 676e  ey_padded(unsign
0022d10: 6564 2063 6861 7220 2a6b 6579 2c63 6f6e  ed char *key,con
0022d20: 7374 2042 4947 4e55 4d20 2a70 7562 5f6b  st BIGNUM *pub_k
0022d30: 6579 2c44 4820 2a64 6829 3b0a 4448 202a  ey,DH *dh);.DH *
0022d40: 2064 3269 5f44 4870 6172 616d 7328 4448   d2i_DHparams(DH
0022d50: 202a 2a61 2c63 6f6e 7374 2075 6e73 6967   **a,const unsig
0022d60: 6e65 6420 6368 6172 202a 2a70 702c 206c  ned char **pp, l
0022d70: 6f6e 6720 6c65 6e67 7468 293b 0a69 6e74  ong length);.int
0022d80: 2069 3264 5f44 4870 6172 616d 7328 636f   i2d_DHparams(co
0022d90: 6e73 7420 4448 202a 612c 756e 7369 676e  nst DH *a,unsign
0022da0: 6564 2063 6861 7220 2a2a 7070 293b 0a0a  ed char **pp);..
0022db0: 696e 7420 4448 7061 7261 6d73 5f70 7269  int DHparams_pri
0022dc0: 6e74 5f66 7028 4649 4c45 202a 6670 2c20  nt_fp(FILE *fp, 
0022dd0: 636f 6e73 7420 4448 202a 7829 3b0a 0a0a  const DH *x);...
0022de0: 696e 7420 4448 7061 7261 6d73 5f70 7269  int DHparams_pri
0022df0: 6e74 2842 494f 202a 6270 2c20 636f 6e73  nt(BIO *bp, cons
0022e00: 7420 4448 202a 7829 3b0a 2320 3234 3420  t DH *x);.# 244 
0022e10: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
0022e20: 656e 7373 6c2f 6468 2e68 2220 3320 340a  enssl/dh.h" 3 4.
0022e30: 766f 6964 2045 5252 5f6c 6f61 645f 4448  void ERR_load_DH
0022e40: 5f73 7472 696e 6773 2876 6f69 6429 3b0a  _strings(void);.
0022e50: 2320 3834 2022 2f75 7372 2f69 6e63 6c75  # 84 "/usr/inclu
0022e60: 6465 2f6f 7065 6e73 736c 2f64 7361 2e68  de/openssl/dsa.h
0022e70: 2220 3220 3320 340a 2320 3132 3620 222f  " 2 3 4.# 126 "/
0022e80: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
0022e90: 7373 6c2f 6473 612e 6822 2033 2034 0a74  ssl/dsa.h" 3 4.t
0022ea0: 7970 6564 6566 2073 7472 7563 7420 4453  ypedef struct DS
0022eb0: 415f 5349 475f 7374 0a20 7b0a 2042 4947  A_SIG_st. {. BIG
0022ec0: 4e55 4d20 2a72 3b0a 2042 4947 4e55 4d20  NUM *r;. BIGNUM 
0022ed0: 2a73 3b0a 207d 2044 5341 5f53 4947 3b0a  *s;. } DSA_SIG;.
0022ee0: 0a73 7472 7563 7420 6473 615f 6d65 7468  .struct dsa_meth
0022ef0: 6f64 0a20 7b0a 2063 6f6e 7374 2063 6861  od. {. const cha
0022f00: 7220 2a6e 616d 653b 0a20 4453 415f 5349  r *name;. DSA_SI
0022f10: 4720 2a20 282a 6473 615f 646f 5f73 6967  G * (*dsa_do_sig
0022f20: 6e29 2863 6f6e 7374 2075 6e73 6967 6e65  n)(const unsigne
0022f30: 6420 6368 6172 202a 6467 7374 2c20 696e  d char *dgst, in
0022f40: 7420 646c 656e 2c20 4453 4120 2a64 7361  t dlen, DSA *dsa
0022f50: 293b 0a20 696e 7420 282a 6473 615f 7369  );. int (*dsa_si
0022f60: 676e 5f73 6574 7570 2928 4453 4120 2a64  gn_setup)(DSA *d
0022f70: 7361 2c20 424e 5f43 5458 202a 6374 785f  sa, BN_CTX *ctx_
0022f80: 696e 2c20 4249 474e 554d 202a 2a6b 696e  in, BIGNUM **kin
0022f90: 7670 2c0a 2020 2020 2020 2020 4249 474e  vp,.        BIGN
0022fa0: 554d 202a 2a72 7029 3b0a 2069 6e74 2028  UM **rp);. int (
0022fb0: 2a64 7361 5f64 6f5f 7665 7269 6679 2928  *dsa_do_verify)(
0022fc0: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
0022fd0: 6861 7220 2a64 6773 742c 2069 6e74 2064  har *dgst, int d
0022fe0: 6773 745f 6c65 6e2c 0a20 2020 2020 2020  gst_len,.       
0022ff0: 2044 5341 5f53 4947 202a 7369 672c 2044   DSA_SIG *sig, D
0023000: 5341 202a 6473 6129 3b0a 2069 6e74 2028  SA *dsa);. int (
0023010: 2a64 7361 5f6d 6f64 5f65 7870 2928 4453  *dsa_mod_exp)(DS
0023020: 4120 2a64 7361 2c20 4249 474e 554d 202a  A *dsa, BIGNUM *
0023030: 7272 2c20 4249 474e 554d 202a 6131 2c20  rr, BIGNUM *a1, 
0023040: 4249 474e 554d 202a 7031 2c0a 2020 2042  BIGNUM *p1,.   B
0023050: 4947 4e55 4d20 2a61 322c 2042 4947 4e55  IGNUM *a2, BIGNU
0023060: 4d20 2a70 322c 2042 4947 4e55 4d20 2a6d  M *p2, BIGNUM *m
0023070: 2c20 424e 5f43 5458 202a 6374 782c 0a20  , BN_CTX *ctx,. 
0023080: 2020 424e 5f4d 4f4e 545f 4354 5820 2a69    BN_MONT_CTX *i
0023090: 6e5f 6d6f 6e74 293b 0a20 696e 7420 282a  n_mont);. int (*
00230a0: 626e 5f6d 6f64 5f65 7870 2928 4453 4120  bn_mod_exp)(DSA 
00230b0: 2a64 7361 2c20 4249 474e 554d 202a 722c  *dsa, BIGNUM *r,
00230c0: 2042 4947 4e55 4d20 2a61 2c20 636f 6e73   BIGNUM *a, cons
00230d0: 7420 4249 474e 554d 202a 702c 0a20 2020  t BIGNUM *p,.   
00230e0: 2063 6f6e 7374 2042 4947 4e55 4d20 2a6d   const BIGNUM *m
00230f0: 2c20 424e 5f43 5458 202a 6374 782c 0a20  , BN_CTX *ctx,. 
0023100: 2020 2042 4e5f 4d4f 4e54 5f43 5458 202a     BN_MONT_CTX *
0023110: 6d5f 6374 7829 3b0a 2069 6e74 2028 2a69  m_ctx);. int (*i
0023120: 6e69 7429 2844 5341 202a 6473 6129 3b0a  nit)(DSA *dsa);.
0023130: 2069 6e74 2028 2a66 696e 6973 6829 2844   int (*finish)(D
0023140: 5341 202a 6473 6129 3b0a 2069 6e74 2066  SA *dsa);. int f
0023150: 6c61 6773 3b0a 2063 6861 7220 2a61 7070  lags;. char *app
0023160: 5f64 6174 613b 0a0a 2069 6e74 2028 2a64  _data;.. int (*d
0023170: 7361 5f70 6172 616d 6765 6e29 2844 5341  sa_paramgen)(DSA
0023180: 202a 6473 612c 2069 6e74 2062 6974 732c   *dsa, int bits,
0023190: 0a20 2020 636f 6e73 7420 756e 7369 676e  .   const unsign
00231a0: 6564 2063 6861 7220 2a73 6565 642c 2069  ed char *seed, i
00231b0: 6e74 2073 6565 645f 6c65 6e2c 0a20 2020  nt seed_len,.   
00231c0: 696e 7420 2a63 6f75 6e74 6572 5f72 6574  int *counter_ret
00231d0: 2c20 756e 7369 676e 6564 206c 6f6e 6720  , unsigned long 
00231e0: 2a68 5f72 6574 2c0a 2020 2042 4e5f 4745  *h_ret,.   BN_GE
00231f0: 4e43 4220 2a63 6229 3b0a 0a20 696e 7420  NCB *cb);.. int 
0023200: 282a 6473 615f 6b65 7967 656e 2928 4453  (*dsa_keygen)(DS
0023210: 4120 2a64 7361 293b 0a20 7d3b 0a0a 7374  A *dsa);. };..st
0023220: 7275 6374 2064 7361 5f73 740a 207b 0a0a  ruct dsa_st. {..
0023230: 0a20 696e 7420 7061 643b 0a20 6c6f 6e67  . int pad;. long
0023240: 2076 6572 7369 6f6e 3b0a 2069 6e74 2077   version;. int w
0023250: 7269 7465 5f70 6172 616d 733b 0a20 4249  rite_params;. BI
0023260: 474e 554d 202a 703b 0a20 4249 474e 554d  GNUM *p;. BIGNUM
0023270: 202a 713b 0a20 4249 474e 554d 202a 673b   *q;. BIGNUM *g;
0023280: 0a0a 2042 4947 4e55 4d20 2a70 7562 5f6b  .. BIGNUM *pub_k
0023290: 6579 3b0a 2042 4947 4e55 4d20 2a70 7269  ey;. BIGNUM *pri
00232a0: 765f 6b65 793b 0a0a 2042 4947 4e55 4d20  v_key;.. BIGNUM 
00232b0: 2a6b 696e 763b 0a20 4249 474e 554d 202a  *kinv;. BIGNUM *
00232c0: 723b 0a0a 2069 6e74 2066 6c61 6773 3b0a  r;.. int flags;.
00232d0: 0a20 424e 5f4d 4f4e 545f 4354 5820 2a6d  . BN_MONT_CTX *m
00232e0: 6574 686f 645f 6d6f 6e74 5f70 3b0a 2069  ethod_mont_p;. i
00232f0: 6e74 2072 6566 6572 656e 6365 733b 0a20  nt references;. 
0023300: 4352 5950 544f 5f45 585f 4441 5441 2065  CRYPTO_EX_DATA e
0023310: 785f 6461 7461 3b0a 2063 6f6e 7374 2044  x_data;. const D
0023320: 5341 5f4d 4554 484f 4420 2a6d 6574 683b  SA_METHOD *meth;
0023330: 0a0a 2045 4e47 494e 4520 2a65 6e67 696e  .. ENGINE *engin
0023340: 653b 0a20 7d3b 0a23 2031 3934 2022 2f75  e;. };.# 194 "/u
0023350: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
0023360: 736c 2f64 7361 2e68 2220 3320 340a 4453  sl/dsa.h" 3 4.DS
0023370: 4120 2a44 5341 7061 7261 6d73 5f64 7570  A *DSAparams_dup
0023380: 2844 5341 202a 7829 3b0a 4453 415f 5349  (DSA *x);.DSA_SI
0023390: 4720 2a20 4453 415f 5349 475f 6e65 7728  G * DSA_SIG_new(
00233a0: 766f 6964 293b 0a76 6f69 6420 4453 415f  void);.void DSA_
00233b0: 5349 475f 6672 6565 2844 5341 5f53 4947  SIG_free(DSA_SIG
00233c0: 202a 6129 3b0a 696e 7420 6932 645f 4453   *a);.int i2d_DS
00233d0: 415f 5349 4728 636f 6e73 7420 4453 415f  A_SIG(const DSA_
00233e0: 5349 4720 2a61 2c20 756e 7369 676e 6564  SIG *a, unsigned
00233f0: 2063 6861 7220 2a2a 7070 293b 0a44 5341   char **pp);.DSA
0023400: 5f53 4947 202a 2064 3269 5f44 5341 5f53  _SIG * d2i_DSA_S
0023410: 4947 2844 5341 5f53 4947 202a 2a76 2c20  IG(DSA_SIG **v, 
0023420: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
0023430: 6861 7220 2a2a 7070 2c20 6c6f 6e67 206c  har **pp, long l
0023440: 656e 6774 6829 3b0a 0a44 5341 5f53 4947  ength);..DSA_SIG
0023450: 202a 2044 5341 5f64 6f5f 7369 676e 2863   * DSA_do_sign(c
0023460: 6f6e 7374 2075 6e73 6967 6e65 6420 6368  onst unsigned ch
0023470: 6172 202a 6467 7374 2c69 6e74 2064 6c65  ar *dgst,int dle
0023480: 6e2c 4453 4120 2a64 7361 293b 0a69 6e74  n,DSA *dsa);.int
0023490: 2044 5341 5f64 6f5f 7665 7269 6679 2863   DSA_do_verify(c
00234a0: 6f6e 7374 2075 6e73 6967 6e65 6420 6368  onst unsigned ch
00234b0: 6172 202a 6467 7374 2c69 6e74 2064 6773  ar *dgst,int dgs
00234c0: 745f 6c65 6e2c 0a20 2020 2020 2020 2044  t_len,.        D
00234d0: 5341 5f53 4947 202a 7369 672c 4453 4120  SA_SIG *sig,DSA 
00234e0: 2a64 7361 293b 0a0a 636f 6e73 7420 4453  *dsa);..const DS
00234f0: 415f 4d45 5448 4f44 202a 4453 415f 4f70  A_METHOD *DSA_Op
0023500: 656e 5353 4c28 766f 6964 293b 0a0a 766f  enSSL(void);..vo
0023510: 6964 2044 5341 5f73 6574 5f64 6566 6175  id DSA_set_defau
0023520: 6c74 5f6d 6574 686f 6428 636f 6e73 7420  lt_method(const 
0023530: 4453 415f 4d45 5448 4f44 202a 293b 0a63  DSA_METHOD *);.c
0023540: 6f6e 7374 2044 5341 5f4d 4554 484f 4420  onst DSA_METHOD 
0023550: 2a44 5341 5f67 6574 5f64 6566 6175 6c74  *DSA_get_default
0023560: 5f6d 6574 686f 6428 766f 6964 293b 0a69  _method(void);.i
0023570: 6e74 2044 5341 5f73 6574 5f6d 6574 686f  nt DSA_set_metho
0023580: 6428 4453 4120 2a64 7361 2c20 636f 6e73  d(DSA *dsa, cons
0023590: 7420 4453 415f 4d45 5448 4f44 202a 293b  t DSA_METHOD *);
00235a0: 0a0a 4453 4120 2a20 4453 415f 6e65 7728  ..DSA * DSA_new(
00235b0: 766f 6964 293b 0a44 5341 202a 2044 5341  void);.DSA * DSA
00235c0: 5f6e 6577 5f6d 6574 686f 6428 454e 4749  _new_method(ENGI
00235d0: 4e45 202a 656e 6769 6e65 293b 0a76 6f69  NE *engine);.voi
00235e0: 6420 4453 415f 6672 6565 2028 4453 4120  d DSA_free (DSA 
00235f0: 2a72 293b 0a0a 696e 7420 4453 415f 7570  *r);..int DSA_up
0023600: 5f72 6566 2844 5341 202a 7229 3b0a 696e  _ref(DSA *r);.in
0023610: 7420 4453 415f 7369 7a65 2863 6f6e 7374  t DSA_size(const
0023620: 2044 5341 202a 293b 0a0a 696e 7420 4453   DSA *);..int DS
0023630: 415f 7369 676e 5f73 6574 7570 2820 4453  A_sign_setup( DS
0023640: 4120 2a64 7361 2c42 4e5f 4354 5820 2a63  A *dsa,BN_CTX *c
0023650: 7478 5f69 6e2c 4249 474e 554d 202a 2a6b  tx_in,BIGNUM **k
0023660: 696e 7670 2c42 4947 4e55 4d20 2a2a 7270  invp,BIGNUM **rp
0023670: 293b 0a69 6e74 2044 5341 5f73 6967 6e28  );.int DSA_sign(
0023680: 696e 7420 7479 7065 2c63 6f6e 7374 2075  int type,const u
0023690: 6e73 6967 6e65 6420 6368 6172 202a 6467  nsigned char *dg
00236a0: 7374 2c69 6e74 2064 6c65 6e2c 0a20 2075  st,int dlen,.  u
00236b0: 6e73 6967 6e65 6420 6368 6172 202a 7369  nsigned char *si
00236c0: 672c 2075 6e73 6967 6e65 6420 696e 7420  g, unsigned int 
00236d0: 2a73 6967 6c65 6e2c 2044 5341 202a 6473  *siglen, DSA *ds
00236e0: 6129 3b0a 696e 7420 4453 415f 7665 7269  a);.int DSA_veri
00236f0: 6679 2869 6e74 2074 7970 652c 636f 6e73  fy(int type,cons
0023700: 7420 756e 7369 676e 6564 2063 6861 7220  t unsigned char 
0023710: 2a64 6773 742c 696e 7420 6467 7374 5f6c  *dgst,int dgst_l
0023720: 656e 2c0a 2020 636f 6e73 7420 756e 7369  en,.  const unsi
0023730: 676e 6564 2063 6861 7220 2a73 6967 6275  gned char *sigbu
0023740: 662c 2069 6e74 2073 6967 6c65 6e2c 2044  f, int siglen, D
0023750: 5341 202a 6473 6129 3b0a 696e 7420 4453  SA *dsa);.int DS
0023760: 415f 6765 745f 6578 5f6e 6577 5f69 6e64  A_get_ex_new_ind
0023770: 6578 286c 6f6e 6720 6172 676c 2c20 766f  ex(long argl, vo
0023780: 6964 202a 6172 6770 2c20 4352 5950 544f  id *argp, CRYPTO
0023790: 5f45 585f 6e65 7720 2a6e 6577 5f66 756e  _EX_new *new_fun
00237a0: 632c 0a20 2020 2020 2043 5259 5054 4f5f  c,.      CRYPTO_
00237b0: 4558 5f64 7570 202a 6475 705f 6675 6e63  EX_dup *dup_func
00237c0: 2c20 4352 5950 544f 5f45 585f 6672 6565  , CRYPTO_EX_free
00237d0: 202a 6672 6565 5f66 756e 6329 3b0a 696e   *free_func);.in
00237e0: 7420 4453 415f 7365 745f 6578 5f64 6174  t DSA_set_ex_dat
00237f0: 6128 4453 4120 2a64 2c20 696e 7420 6964  a(DSA *d, int id
0023800: 782c 2076 6f69 6420 2a61 7267 293b 0a76  x, void *arg);.v
0023810: 6f69 6420 2a44 5341 5f67 6574 5f65 785f  oid *DSA_get_ex_
0023820: 6461 7461 2844 5341 202a 642c 2069 6e74  data(DSA *d, int
0023830: 2069 6478 293b 0a0a 4453 4120 2a20 6432   idx);..DSA * d2
0023840: 695f 4453 4150 7562 6c69 634b 6579 2844  i_DSAPublicKey(D
0023850: 5341 202a 2a61 2c20 636f 6e73 7420 756e  SA **a, const un
0023860: 7369 676e 6564 2063 6861 7220 2a2a 7070  signed char **pp
0023870: 2c20 6c6f 6e67 206c 656e 6774 6829 3b0a  , long length);.
0023880: 4453 4120 2a20 6432 695f 4453 4150 7269  DSA * d2i_DSAPri
0023890: 7661 7465 4b65 7928 4453 4120 2a2a 612c  vateKey(DSA **a,
00238a0: 2063 6f6e 7374 2075 6e73 6967 6e65 6420   const unsigned 
00238b0: 6368 6172 202a 2a70 702c 206c 6f6e 6720  char **pp, long 
00238c0: 6c65 6e67 7468 293b 0a44 5341 202a 2064  length);.DSA * d
00238d0: 3269 5f44 5341 7061 7261 6d73 2844 5341  2i_DSAparams(DSA
00238e0: 202a 2a61 2c20 636f 6e73 7420 756e 7369   **a, const unsi
00238f0: 676e 6564 2063 6861 7220 2a2a 7070 2c20  gned char **pp, 
0023900: 6c6f 6e67 206c 656e 6774 6829 3b0a 0a0a  long length);...
0023910: 0a44 5341 202a 2044 5341 5f67 656e 6572  .DSA * DSA_gener
0023920: 6174 655f 7061 7261 6d65 7465 7273 2869  ate_parameters(i
0023930: 6e74 2062 6974 732c 0a20 2075 6e73 6967  nt bits,.  unsig
0023940: 6e65 6420 6368 6172 202a 7365 6564 2c69  ned char *seed,i
0023950: 6e74 2073 6565 645f 6c65 6e2c 0a20 2069  nt seed_len,.  i
0023960: 6e74 202a 636f 756e 7465 725f 7265 742c  nt *counter_ret,
0023970: 2075 6e73 6967 6e65 6420 6c6f 6e67 202a   unsigned long *
0023980: 685f 7265 742c 766f 6964 0a20 2028 2a63  h_ret,void.  (*c
0023990: 616c 6c62 6163 6b29 2869 6e74 2c20 696e  allback)(int, in
00239a0: 742c 2076 6f69 6420 2a29 2c76 6f69 6420  t, void *),void 
00239b0: 2a63 625f 6172 6729 3b0a 0a0a 0a69 6e74  *cb_arg);....int
00239c0: 2044 5341 5f67 656e 6572 6174 655f 7061   DSA_generate_pa
00239d0: 7261 6d65 7465 7273 5f65 7828 4453 4120  rameters_ex(DSA 
00239e0: 2a64 7361 2c20 696e 7420 6269 7473 2c0a  *dsa, int bits,.
00239f0: 2020 636f 6e73 7420 756e 7369 676e 6564    const unsigned
0023a00: 2063 6861 7220 2a73 6565 642c 696e 7420   char *seed,int 
0023a10: 7365 6564 5f6c 656e 2c0a 2020 696e 7420  seed_len,.  int 
0023a20: 2a63 6f75 6e74 6572 5f72 6574 2c20 756e  *counter_ret, un
0023a30: 7369 676e 6564 206c 6f6e 6720 2a68 5f72  signed long *h_r
0023a40: 6574 2c20 424e 5f47 454e 4342 202a 6362  et, BN_GENCB *cb
0023a50: 293b 0a0a 696e 7420 4453 415f 6765 6e65  );..int DSA_gene
0023a60: 7261 7465 5f6b 6579 2844 5341 202a 6129  rate_key(DSA *a)
0023a70: 3b0a 696e 7420 6932 645f 4453 4150 7562  ;.int i2d_DSAPub
0023a80: 6c69 634b 6579 2863 6f6e 7374 2044 5341  licKey(const DSA
0023a90: 202a 612c 2075 6e73 6967 6e65 6420 6368   *a, unsigned ch
0023aa0: 6172 202a 2a70 7029 3b0a 696e 7420 6932  ar **pp);.int i2
0023ab0: 645f 4453 4150 7269 7661 7465 4b65 7928  d_DSAPrivateKey(
0023ac0: 636f 6e73 7420 4453 4120 2a61 2c20 756e  const DSA *a, un
0023ad0: 7369 676e 6564 2063 6861 7220 2a2a 7070  signed char **pp
0023ae0: 293b 0a69 6e74 2069 3264 5f44 5341 7061  );.int i2d_DSApa
0023af0: 7261 6d73 2863 6f6e 7374 2044 5341 202a  rams(const DSA *
0023b00: 612c 756e 7369 676e 6564 2063 6861 7220  a,unsigned char 
0023b10: 2a2a 7070 293b 0a0a 0a69 6e74 2044 5341  **pp);...int DSA
0023b20: 7061 7261 6d73 5f70 7269 6e74 2842 494f  params_print(BIO
0023b30: 202a 6270 2c20 636f 6e73 7420 4453 4120   *bp, const DSA 
0023b40: 2a78 293b 0a69 6e74 2044 5341 5f70 7269  *x);.int DSA_pri
0023b50: 6e74 2842 494f 202a 6270 2c20 636f 6e73  nt(BIO *bp, cons
0023b60: 7420 4453 4120 2a78 2c20 696e 7420 6f66  t DSA *x, int of
0023b70: 6629 3b0a 0a0a 696e 7420 4453 4170 6172  f);...int DSApar
0023b80: 616d 735f 7072 696e 745f 6670 2846 494c  ams_print_fp(FIL
0023b90: 4520 2a66 702c 2063 6f6e 7374 2044 5341  E *fp, const DSA
0023ba0: 202a 7829 3b0a 696e 7420 4453 415f 7072   *x);.int DSA_pr
0023bb0: 696e 745f 6670 2846 494c 4520 2a62 702c  int_fp(FILE *bp,
0023bc0: 2063 6f6e 7374 2044 5341 202a 782c 2069   const DSA *x, i
0023bd0: 6e74 206f 6666 293b 0a23 2032 3637 2022  nt off);.# 267 "
0023be0: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
0023bf0: 6e73 736c 2f64 7361 2e68 2220 3320 340a  nssl/dsa.h" 3 4.
0023c00: 4448 202a 4453 415f 6475 705f 4448 2863  DH *DSA_dup_DH(c
0023c10: 6f6e 7374 2044 5341 202a 7229 3b0a 0a0a  onst DSA *r);...
0023c20: 0a69 6e74 2046 4950 535f 6473 615f 6275  .int FIPS_dsa_bu
0023c30: 696c 7469 6e5f 7061 7261 6d67 656e 2844  iltin_paramgen(D
0023c40: 5341 202a 7265 742c 2073 697a 655f 7420  SA *ret, size_t 
0023c50: 6269 7473 2c20 7369 7a65 5f74 2071 6269  bits, size_t qbi
0023c60: 7473 2c0a 2063 6f6e 7374 2045 5650 5f4d  ts,. const EVP_M
0023c70: 4420 2a65 7670 6d64 2c20 636f 6e73 7420  D *evpmd, const 
0023c80: 756e 7369 676e 6564 2063 6861 7220 2a73  unsigned char *s
0023c90: 6565 645f 696e 2c20 7369 7a65 5f74 2073  eed_in, size_t s
0023ca0: 6565 645f 6c65 6e2c 0a20 696e 7420 2a63  eed_len,. int *c
0023cb0: 6f75 6e74 6572 5f72 6574 2c20 756e 7369  ounter_ret, unsi
0023cc0: 676e 6564 206c 6f6e 6720 2a68 5f72 6574  gned long *h_ret
0023cd0: 2c20 424e 5f47 454e 4342 202a 6362 293b  , BN_GENCB *cb);
0023ce0: 0a69 6e74 2046 4950 535f 6473 615f 6765  .int FIPS_dsa_ge
0023cf0: 6e65 7261 7465 5f70 7128 424e 5f43 5458  nerate_pq(BN_CTX
0023d00: 202a 6374 782c 2073 697a 655f 7420 6269   *ctx, size_t bi
0023d10: 7473 2c20 7369 7a65 5f74 2071 6269 7473  ts, size_t qbits
0023d20: 2c0a 2020 636f 6e73 7420 4556 505f 4d44  ,.  const EVP_MD
0023d30: 202a 6576 706d 642c 2075 6e73 6967 6e65   *evpmd, unsigne
0023d40: 6420 6368 6172 202a 7365 6564 2c20 696e  d char *seed, in
0023d50: 7420 7365 6564 5f6c 656e 2c0a 2020 4249  t seed_len,.  BI
0023d60: 474e 554d 202a 2a70 5f72 6574 2c20 4249  GNUM **p_ret, BI
0023d70: 474e 554d 202a 2a71 5f72 6574 2c20 696e  GNUM **q_ret, in
0023d80: 7420 2a63 6f75 6e74 6572 5f72 6574 2c20  t *counter_ret, 
0023d90: 424e 5f47 454e 4342 202a 6362 293b 0a69  BN_GENCB *cb);.i
0023da0: 6e74 2046 4950 535f 6473 615f 6765 6e65  nt FIPS_dsa_gene
0023db0: 7261 7465 5f67 2842 4e5f 4354 5820 2a63  rate_g(BN_CTX *c
0023dc0: 7478 2c20 4249 474e 554d 202a 702c 2042  tx, BIGNUM *p, B
0023dd0: 4947 4e55 4d20 2a71 2c0a 2020 4249 474e  IGNUM *q,.  BIGN
0023de0: 554d 202a 2a67 5f72 6574 2c20 756e 7369  UM **g_ret, unsi
0023df0: 676e 6564 206c 6f6e 6720 2a68 5f72 6574  gned long *h_ret
0023e00: 2c20 424e 5f47 454e 4342 202a 6362 293b  , BN_GENCB *cb);
0023e10: 0a23 2032 3933 2022 2f75 7372 2f69 6e63  .# 293 "/usr/inc
0023e20: 6c75 6465 2f6f 7065 6e73 736c 2f64 7361  lude/openssl/dsa
0023e30: 2e68 2220 3320 340a 766f 6964 2045 5252  .h" 3 4.void ERR
0023e40: 5f6c 6f61 645f 4453 415f 7374 7269 6e67  _load_DSA_string
0023e50: 7328 766f 6964 293b 0a23 2031 3633 2022  s(void);.# 163 "
0023e60: 7373 6c5f 6c6f 636c 2e68 2220 320a 0a23  ssl_locl.h" 2..#
0023e70: 2031 2022 2f75 7372 2f69 6e63 6c75 6465   1 "/usr/include
0023e80: 2f6f 7065 6e73 736c 2f65 7272 2e68 2220  /openssl/err.h" 
0023e90: 3120 3320 340a 2320 3131 3520 222f 7573  1 3 4.# 115 "/us
0023ea0: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
0023eb0: 6c2f 6572 722e 6822 2033 2034 0a23 2031  l/err.h" 3 4.# 1
0023ec0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
0023ed0: 7065 6e73 736c 2f65 5f6f 7332 2e68 2220  penssl/e_os2.h" 
0023ee0: 3120 3320 340a 2320 3536 2022 2f75 7372  1 3 4.# 56 "/usr
0023ef0: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
0023f00: 2f65 5f6f 7332 2e68 2220 3320 340a 2320  /e_os2.h" 3 4.# 
0023f10: 3120 222f 7573 722f 696e 636c 7564 652f  1 "/usr/include/
0023f20: 6f70 656e 7373 6c2f 6f70 656e 7373 6c63  openssl/opensslc
0023f30: 6f6e 662e 6822 2031 2033 2034 0a23 2033  onf.h" 1 3 4.# 3
0023f40: 3420 222f 7573 722f 696e 636c 7564 652f  4 "/usr/include/
0023f50: 6f70 656e 7373 6c2f 6f70 656e 7373 6c63  openssl/opensslc
0023f60: 6f6e 662e 6822 2033 2034 0a23 2031 2022  onf.h" 3 4.# 1 "
0023f70: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
0023f80: 6e73 736c 2f6f 7065 6e73 736c 636f 6e66  nssl/opensslconf
0023f90: 2d78 3836 5f36 342e 6822 2031 2033 2034  -x86_64.h" 1 3 4
0023fa0: 0a23 2033 3520 222f 7573 722f 696e 636c  .# 35 "/usr/incl
0023fb0: 7564 652f 6f70 656e 7373 6c2f 6f70 656e  ude/openssl/open
0023fc0: 7373 6c63 6f6e 662e 6822 2032 2033 2034  sslconf.h" 2 3 4
0023fd0: 0a23 2035 3720 222f 7573 722f 696e 636c  .# 57 "/usr/incl
0023fe0: 7564 652f 6f70 656e 7373 6c2f 655f 6f73  ude/openssl/e_os
0023ff0: 322e 6822 2032 2033 2034 0a23 2031 3136  2.h" 2 3 4.# 116
0024000: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
0024010: 7065 6e73 736c 2f65 7272 2e68 2220 3220  penssl/err.h" 2 
0024020: 3320 340a 2320 3132 3720 222f 7573 722f  3 4.# 127 "/usr/
0024030: 696e 636c 7564 652f 6f70 656e 7373 6c2f  include/openssl/
0024040: 6572 722e 6822 2033 2034 0a23 2031 2022  err.h" 3 4.# 1 "
0024050: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
0024060: 6e73 736c 2f6c 6861 7368 2e68 2220 3120  nssl/lhash.h" 1 
0024070: 3320 340a 2320 3636 2022 2f75 7372 2f69  3 4.# 66 "/usr/i
0024080: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f6c  nclude/openssl/l
0024090: 6861 7368 2e68 2220 3320 340a 2320 3120  hash.h" 3 4.# 1 
00240a0: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
00240b0: 656e 7373 6c2f 655f 6f73 322e 6822 2031  enssl/e_os2.h" 1
00240c0: 2033 2034 0a23 2035 3620 222f 7573 722f   3 4.# 56 "/usr/
00240d0: 696e 636c 7564 652f 6f70 656e 7373 6c2f  include/openssl/
00240e0: 655f 6f73 322e 6822 2033 2034 0a23 2031  e_os2.h" 3 4.# 1
00240f0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
0024100: 7065 6e73 736c 2f6f 7065 6e73 736c 636f  penssl/opensslco
0024110: 6e66 2e68 2220 3120 3320 340a 2320 3334  nf.h" 1 3 4.# 34
0024120: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
0024130: 7065 6e73 736c 2f6f 7065 6e73 736c 636f  penssl/opensslco
0024140: 6e66 2e68 2220 3320 340a 2320 3120 222f  nf.h" 3 4.# 1 "/
0024150: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
0024160: 7373 6c2f 6f70 656e 7373 6c63 6f6e 662d  ssl/opensslconf-
0024170: 7838 365f 3634 2e68 2220 3120 3320 340a  x86_64.h" 1 3 4.
0024180: 2320 3335 2022 2f75 7372 2f69 6e63 6c75  # 35 "/usr/inclu
0024190: 6465 2f6f 7065 6e73 736c 2f6f 7065 6e73  de/openssl/opens
00241a0: 736c 636f 6e66 2e68 2220 3220 3320 340a  slconf.h" 2 3 4.
00241b0: 2320 3537 2022 2f75 7372 2f69 6e63 6c75  # 57 "/usr/inclu
00241c0: 6465 2f6f 7065 6e73 736c 2f65 5f6f 7332  de/openssl/e_os2
00241d0: 2e68 2220 3220 3320 340a 2320 3637 2022  .h" 2 3 4.# 67 "
00241e0: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
00241f0: 6e73 736c 2f6c 6861 7368 2e68 2220 3220  nssl/lhash.h" 2 
0024200: 3320 340a 2320 3739 2022 2f75 7372 2f69  3 4.# 79 "/usr/i
0024210: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f6c  nclude/openssl/l
0024220: 6861 7368 2e68 2220 3320 340a 7479 7065  hash.h" 3 4.type
0024230: 6465 6620 7374 7275 6374 206c 6861 7368  def struct lhash
0024240: 5f6e 6f64 655f 7374 0a20 7b0a 2076 6f69  _node_st. {. voi
0024250: 6420 2a64 6174 613b 0a20 7374 7275 6374  d *data;. struct
0024260: 206c 6861 7368 5f6e 6f64 655f 7374 202a   lhash_node_st *
0024270: 6e65 7874 3b0a 0a20 756e 7369 676e 6564  next;.. unsigned
0024280: 206c 6f6e 6720 6861 7368 3b0a 0a20 7d20   long hash;.. } 
0024290: 4c48 4153 485f 4e4f 4445 3b0a 0a74 7970  LHASH_NODE;..typ
00242a0: 6564 6566 2069 6e74 2028 2a4c 4841 5348  edef int (*LHASH
00242b0: 5f43 4f4d 505f 464e 5f54 5950 4529 2863  _COMP_FN_TYPE)(c
00242c0: 6f6e 7374 2076 6f69 6420 2a2c 2063 6f6e  onst void *, con
00242d0: 7374 2076 6f69 6420 2a29 3b0a 7479 7065  st void *);.type
00242e0: 6465 6620 756e 7369 676e 6564 206c 6f6e  def unsigned lon
00242f0: 6720 282a 4c48 4153 485f 4841 5348 5f46  g (*LHASH_HASH_F
0024300: 4e5f 5459 5045 2928 636f 6e73 7420 766f  N_TYPE)(const vo
0024310: 6964 202a 293b 0a74 7970 6564 6566 2076  id *);.typedef v
0024320: 6f69 6420 282a 4c48 4153 485f 444f 414c  oid (*LHASH_DOAL
0024330: 4c5f 464e 5f54 5950 4529 2876 6f69 6420  L_FN_TYPE)(void 
0024340: 2a29 3b0a 7479 7065 6465 6620 766f 6964  *);.typedef void
0024350: 2028 2a4c 4841 5348 5f44 4f41 4c4c 5f41   (*LHASH_DOALL_A
0024360: 5247 5f46 4e5f 5459 5045 2928 766f 6964  RG_FN_TYPE)(void
0024370: 202a 2c20 766f 6964 202a 293b 0a23 2031   *, void *);.# 1
0024380: 3338 2022 2f75 7372 2f69 6e63 6c75 6465  38 "/usr/include
0024390: 2f6f 7065 6e73 736c 2f6c 6861 7368 2e68  /openssl/lhash.h
00243a0: 2220 3320 340a 7479 7065 6465 6620 7374  " 3 4.typedef st
00243b0: 7275 6374 206c 6861 7368 5f73 740a 207b  ruct lhash_st. {
00243c0: 0a20 4c48 4153 485f 4e4f 4445 202a 2a62  . LHASH_NODE **b
00243d0: 3b0a 204c 4841 5348 5f43 4f4d 505f 464e  ;. LHASH_COMP_FN
00243e0: 5f54 5950 4520 636f 6d70 3b0a 204c 4841  _TYPE comp;. LHA
00243f0: 5348 5f48 4153 485f 464e 5f54 5950 4520  SH_HASH_FN_TYPE 
0024400: 6861 7368 3b0a 2075 6e73 6967 6e65 6420  hash;. unsigned 
0024410: 696e 7420 6e75 6d5f 6e6f 6465 733b 0a20  int num_nodes;. 
0024420: 756e 7369 676e 6564 2069 6e74 206e 756d  unsigned int num
0024430: 5f61 6c6c 6f63 5f6e 6f64 6573 3b0a 2075  _alloc_nodes;. u
0024440: 6e73 6967 6e65 6420 696e 7420 703b 0a20  nsigned int p;. 
0024450: 756e 7369 676e 6564 2069 6e74 2070 6d61  unsigned int pma
0024460: 783b 0a20 756e 7369 676e 6564 206c 6f6e  x;. unsigned lon
0024470: 6720 7570 5f6c 6f61 643b 0a20 756e 7369  g up_load;. unsi
0024480: 676e 6564 206c 6f6e 6720 646f 776e 5f6c  gned long down_l
0024490: 6f61 643b 0a20 756e 7369 676e 6564 206c  oad;. unsigned l
00244a0: 6f6e 6720 6e75 6d5f 6974 656d 733b 0a0a  ong num_items;..
00244b0: 2075 6e73 6967 6e65 6420 6c6f 6e67 206e   unsigned long n
00244c0: 756d 5f65 7870 616e 6473 3b0a 2075 6e73  um_expands;. uns
00244d0: 6967 6e65 6420 6c6f 6e67 206e 756d 5f65  igned long num_e
00244e0: 7870 616e 645f 7265 616c 6c6f 6373 3b0a  xpand_reallocs;.
00244f0: 2075 6e73 6967 6e65 6420 6c6f 6e67 206e   unsigned long n
0024500: 756d 5f63 6f6e 7472 6163 7473 3b0a 2075  um_contracts;. u
0024510: 6e73 6967 6e65 6420 6c6f 6e67 206e 756d  nsigned long num
0024520: 5f63 6f6e 7472 6163 745f 7265 616c 6c6f  _contract_reallo
0024530: 6373 3b0a 2075 6e73 6967 6e65 6420 6c6f  cs;. unsigned lo
0024540: 6e67 206e 756d 5f68 6173 685f 6361 6c6c  ng num_hash_call
0024550: 733b 0a20 756e 7369 676e 6564 206c 6f6e  s;. unsigned lon
0024560: 6720 6e75 6d5f 636f 6d70 5f63 616c 6c73  g num_comp_calls
0024570: 3b0a 2075 6e73 6967 6e65 6420 6c6f 6e67  ;. unsigned long
0024580: 206e 756d 5f69 6e73 6572 743b 0a20 756e   num_insert;. un
0024590: 7369 676e 6564 206c 6f6e 6720 6e75 6d5f  signed long num_
00245a0: 7265 706c 6163 653b 0a20 756e 7369 676e  replace;. unsign
00245b0: 6564 206c 6f6e 6720 6e75 6d5f 6465 6c65  ed long num_dele
00245c0: 7465 3b0a 2075 6e73 6967 6e65 6420 6c6f  te;. unsigned lo
00245d0: 6e67 206e 756d 5f6e 6f5f 6465 6c65 7465  ng num_no_delete
00245e0: 3b0a 2075 6e73 6967 6e65 6420 6c6f 6e67  ;. unsigned long
00245f0: 206e 756d 5f72 6574 7269 6576 653b 0a20   num_retrieve;. 
0024600: 756e 7369 676e 6564 206c 6f6e 6720 6e75  unsigned long nu
0024610: 6d5f 7265 7472 6965 7665 5f6d 6973 733b  m_retrieve_miss;
0024620: 0a20 756e 7369 676e 6564 206c 6f6e 6720  . unsigned long 
0024630: 6e75 6d5f 6861 7368 5f63 6f6d 7073 3b0a  num_hash_comps;.
0024640: 0a20 696e 7420 6572 726f 723b 0a20 7d20  . int error;. } 
0024650: 5f4c 4841 5348 3b0a 2320 3137 3520 222f  _LHASH;.# 175 "/
0024660: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
0024670: 7373 6c2f 6c68 6173 682e 6822 2033 2034  ssl/lhash.h" 3 4
0024680: 0a5f 4c48 4153 4820 2a6c 685f 6e65 7728  ._LHASH *lh_new(
0024690: 4c48 4153 485f 4841 5348 5f46 4e5f 5459  LHASH_HASH_FN_TY
00246a0: 5045 2068 2c20 4c48 4153 485f 434f 4d50  PE h, LHASH_COMP
00246b0: 5f46 4e5f 5459 5045 2063 293b 0a76 6f69  _FN_TYPE c);.voi
00246c0: 6420 6c68 5f66 7265 6528 5f4c 4841 5348  d lh_free(_LHASH
00246d0: 202a 6c68 293b 0a76 6f69 6420 2a6c 685f   *lh);.void *lh_
00246e0: 696e 7365 7274 285f 4c48 4153 4820 2a6c  insert(_LHASH *l
00246f0: 682c 2076 6f69 6420 2a64 6174 6129 3b0a  h, void *data);.
0024700: 766f 6964 202a 6c68 5f64 656c 6574 6528  void *lh_delete(
0024710: 5f4c 4841 5348 202a 6c68 2c20 636f 6e73  _LHASH *lh, cons
0024720: 7420 766f 6964 202a 6461 7461 293b 0a76  t void *data);.v
0024730: 6f69 6420 2a6c 685f 7265 7472 6965 7665  oid *lh_retrieve
0024740: 285f 4c48 4153 4820 2a6c 682c 2063 6f6e  (_LHASH *lh, con
0024750: 7374 2076 6f69 6420 2a64 6174 6129 3b0a  st void *data);.
0024760: 766f 6964 206c 685f 646f 616c 6c28 5f4c  void lh_doall(_L
0024770: 4841 5348 202a 6c68 2c20 4c48 4153 485f  HASH *lh, LHASH_
0024780: 444f 414c 4c5f 464e 5f54 5950 4520 6675  DOALL_FN_TYPE fu
0024790: 6e63 293b 0a76 6f69 6420 6c68 5f64 6f61  nc);.void lh_doa
00247a0: 6c6c 5f61 7267 285f 4c48 4153 4820 2a6c  ll_arg(_LHASH *l
00247b0: 682c 204c 4841 5348 5f44 4f41 4c4c 5f41  h, LHASH_DOALL_A
00247c0: 5247 5f46 4e5f 5459 5045 2066 756e 632c  RG_FN_TYPE func,
00247d0: 2076 6f69 6420 2a61 7267 293b 0a75 6e73   void *arg);.uns
00247e0: 6967 6e65 6420 6c6f 6e67 206c 685f 7374  igned long lh_st
00247f0: 7268 6173 6828 636f 6e73 7420 6368 6172  rhash(const char
0024800: 202a 6329 3b0a 756e 7369 676e 6564 206c   *c);.unsigned l
0024810: 6f6e 6720 6c68 5f6e 756d 5f69 7465 6d73  ong lh_num_items
0024820: 2863 6f6e 7374 205f 4c48 4153 4820 2a6c  (const _LHASH *l
0024830: 6829 3b0a 0a0a 766f 6964 206c 685f 7374  h);...void lh_st
0024840: 6174 7328 636f 6e73 7420 5f4c 4841 5348  ats(const _LHASH
0024850: 202a 6c68 2c20 4649 4c45 202a 6f75 7429   *lh, FILE *out)
0024860: 3b0a 766f 6964 206c 685f 6e6f 6465 5f73  ;.void lh_node_s
0024870: 7461 7473 2863 6f6e 7374 205f 4c48 4153  tats(const _LHAS
0024880: 4820 2a6c 682c 2046 494c 4520 2a6f 7574  H *lh, FILE *out
0024890: 293b 0a76 6f69 6420 6c68 5f6e 6f64 655f  );.void lh_node_
00248a0: 7573 6167 655f 7374 6174 7328 636f 6e73  usage_stats(cons
00248b0: 7420 5f4c 4841 5348 202a 6c68 2c20 4649  t _LHASH *lh, FI
00248c0: 4c45 202a 6f75 7429 3b0a 0a0a 0a76 6f69  LE *out);....voi
00248d0: 6420 6c68 5f73 7461 7473 5f62 696f 2863  d lh_stats_bio(c
00248e0: 6f6e 7374 205f 4c48 4153 4820 2a6c 682c  onst _LHASH *lh,
00248f0: 2042 494f 202a 6f75 7429 3b0a 766f 6964   BIO *out);.void
0024900: 206c 685f 6e6f 6465 5f73 7461 7473 5f62   lh_node_stats_b
0024910: 696f 2863 6f6e 7374 205f 4c48 4153 4820  io(const _LHASH 
0024920: 2a6c 682c 2042 494f 202a 6f75 7429 3b0a  *lh, BIO *out);.
0024930: 766f 6964 206c 685f 6e6f 6465 5f75 7361  void lh_node_usa
0024940: 6765 5f73 7461 7473 5f62 696f 2863 6f6e  ge_stats_bio(con
0024950: 7374 205f 4c48 4153 4820 2a6c 682c 2042  st _LHASH *lh, B
0024960: 494f 202a 6f75 7429 3b0a 2320 3233 3320  IO *out);.# 233 
0024970: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
0024980: 656e 7373 6c2f 6c68 6173 682e 6822 2033  enssl/lhash.h" 3
0024990: 2034 0a73 7472 7563 7420 6c68 6173 685f   4.struct lhash_
00249a0: 7374 5f4f 5045 4e53 534c 5f53 5452 494e  st_OPENSSL_STRIN
00249b0: 4720 7b20 696e 7420 6475 6d6d 793b 207d  G { int dummy; }
00249c0: 3b0a 7374 7275 6374 206c 6861 7368 5f73  ;.struct lhash_s
00249d0: 745f 4f50 454e 5353 4c5f 4353 5452 494e  t_OPENSSL_CSTRIN
00249e0: 4720 7b20 696e 7420 6475 6d6d 793b 207d  G { int dummy; }
00249f0: 3b0a 2320 3132 3820 222f 7573 722f 696e  ;.# 128 "/usr/in
0024a00: 636c 7564 652f 6f70 656e 7373 6c2f 6572  clude/openssl/er
0024a10: 722e 6822 2032 2033 2034 0a23 2031 3430  r.h" 2 3 4.# 140
0024a20: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
0024a30: 7065 6e73 736c 2f65 7272 2e68 2220 3320  penssl/err.h" 3 
0024a40: 340a 2320 3120 222f 7573 722f 696e 636c  4.# 1 "/usr/incl
0024a50: 7564 652f 6572 726e 6f2e 6822 2031 2033  ude/errno.h" 1 3
0024a60: 2034 0a23 2031 3431 2022 2f75 7372 2f69   4.# 141 "/usr/i
0024a70: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f65  nclude/openssl/e
0024a80: 7272 2e68 2220 3220 3320 340a 0a0a 0a0a  rr.h" 2 3 4.....
0024a90: 0a0a 0a74 7970 6564 6566 2073 7472 7563  ...typedef struc
0024aa0: 7420 6572 725f 7374 6174 655f 7374 0a20  t err_state_st. 
0024ab0: 7b0a 2043 5259 5054 4f5f 5448 5245 4144  {. CRYPTO_THREAD
0024ac0: 4944 2074 6964 3b0a 2069 6e74 2065 7272  ID tid;. int err
0024ad0: 5f66 6c61 6773 5b31 365d 3b0a 2075 6e73  _flags[16];. uns
0024ae0: 6967 6e65 6420 6c6f 6e67 2065 7272 5f62  igned long err_b
0024af0: 7566 6665 725b 3136 5d3b 0a20 6368 6172  uffer[16];. char
0024b00: 202a 6572 725f 6461 7461 5b31 365d 3b0a   *err_data[16];.
0024b10: 2069 6e74 2065 7272 5f64 6174 615f 666c   int err_data_fl
0024b20: 6167 735b 3136 5d3b 0a20 636f 6e73 7420  ags[16];. const 
0024b30: 6368 6172 202a 6572 725f 6669 6c65 5b31  char *err_file[1
0024b40: 365d 3b0a 2069 6e74 2065 7272 5f6c 696e  6];. int err_lin
0024b50: 655b 3136 5d3b 0a20 696e 7420 746f 702c  e[16];. int top,
0024b60: 626f 7474 6f6d 3b0a 207d 2045 5252 5f53  bottom;. } ERR_S
0024b70: 5441 5445 3b0a 2320 3331 3320 222f 7573  TATE;.# 313 "/us
0024b80: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
0024b90: 6c2f 6572 722e 6822 2033 2034 0a74 7970  l/err.h" 3 4.typ
0024ba0: 6564 6566 2073 7472 7563 7420 4552 525f  edef struct ERR_
0024bb0: 7374 7269 6e67 5f64 6174 615f 7374 0a20  string_data_st. 
0024bc0: 7b0a 2075 6e73 6967 6e65 6420 6c6f 6e67  {. unsigned long
0024bd0: 2065 7272 6f72 3b0a 2063 6f6e 7374 2063   error;. const c
0024be0: 6861 7220 2a73 7472 696e 673b 0a20 7d20  har *string;. } 
0024bf0: 4552 525f 5354 5249 4e47 5f44 4154 413b  ERR_STRING_DATA;
0024c00: 0a0a 766f 6964 2045 5252 5f70 7574 5f65  ..void ERR_put_e
0024c10: 7272 6f72 2869 6e74 206c 6962 2c20 696e  rror(int lib, in
0024c20: 7420 6675 6e63 2c69 6e74 2072 6561 736f  t func,int reaso
0024c30: 6e2c 636f 6e73 7420 6368 6172 202a 6669  n,const char *fi
0024c40: 6c65 2c69 6e74 206c 696e 6529 3b0a 766f  le,int line);.vo
0024c50: 6964 2045 5252 5f73 6574 5f65 7272 6f72  id ERR_set_error
0024c60: 5f64 6174 6128 6368 6172 202a 6461 7461  _data(char *data
0024c70: 2c69 6e74 2066 6c61 6773 293b 0a0a 756e  ,int flags);..un
0024c80: 7369 676e 6564 206c 6f6e 6720 4552 525f  signed long ERR_
0024c90: 6765 745f 6572 726f 7228 766f 6964 293b  get_error(void);
0024ca0: 0a75 6e73 6967 6e65 6420 6c6f 6e67 2045  .unsigned long E
0024cb0: 5252 5f67 6574 5f65 7272 6f72 5f6c 696e  RR_get_error_lin
0024cc0: 6528 636f 6e73 7420 6368 6172 202a 2a66  e(const char **f
0024cd0: 696c 652c 696e 7420 2a6c 696e 6529 3b0a  ile,int *line);.
0024ce0: 756e 7369 676e 6564 206c 6f6e 6720 4552  unsigned long ER
0024cf0: 525f 6765 745f 6572 726f 725f 6c69 6e65  R_get_error_line
0024d00: 5f64 6174 6128 636f 6e73 7420 6368 6172  _data(const char
0024d10: 202a 2a66 696c 652c 696e 7420 2a6c 696e   **file,int *lin
0024d20: 652c 0a20 2020 2020 2020 2020 2063 6f6e  e,.          con
0024d30: 7374 2063 6861 7220 2a2a 6461 7461 2c20  st char **data, 
0024d40: 696e 7420 2a66 6c61 6773 293b 0a75 6e73  int *flags);.uns
0024d50: 6967 6e65 6420 6c6f 6e67 2045 5252 5f70  igned long ERR_p
0024d60: 6565 6b5f 6572 726f 7228 766f 6964 293b  eek_error(void);
0024d70: 0a75 6e73 6967 6e65 6420 6c6f 6e67 2045  .unsigned long E
0024d80: 5252 5f70 6565 6b5f 6572 726f 725f 6c69  RR_peek_error_li
0024d90: 6e65 2863 6f6e 7374 2063 6861 7220 2a2a  ne(const char **
0024da0: 6669 6c65 2c69 6e74 202a 6c69 6e65 293b  file,int *line);
0024db0: 0a75 6e73 6967 6e65 6420 6c6f 6e67 2045  .unsigned long E
0024dc0: 5252 5f70 6565 6b5f 6572 726f 725f 6c69  RR_peek_error_li
0024dd0: 6e65 5f64 6174 6128 636f 6e73 7420 6368  ne_data(const ch
0024de0: 6172 202a 2a66 696c 652c 696e 7420 2a6c  ar **file,int *l
0024df0: 696e 652c 0a20 2020 2020 2020 2020 2020  ine,.           
0024e00: 636f 6e73 7420 6368 6172 202a 2a64 6174  const char **dat
0024e10: 612c 696e 7420 2a66 6c61 6773 293b 0a75  a,int *flags);.u
0024e20: 6e73 6967 6e65 6420 6c6f 6e67 2045 5252  nsigned long ERR
0024e30: 5f70 6565 6b5f 6c61 7374 5f65 7272 6f72  _peek_last_error
0024e40: 2876 6f69 6429 3b0a 756e 7369 676e 6564  (void);.unsigned
0024e50: 206c 6f6e 6720 4552 525f 7065 656b 5f6c   long ERR_peek_l
0024e60: 6173 745f 6572 726f 725f 6c69 6e65 2863  ast_error_line(c
0024e70: 6f6e 7374 2063 6861 7220 2a2a 6669 6c65  onst char **file
0024e80: 2c69 6e74 202a 6c69 6e65 293b 0a75 6e73  ,int *line);.uns
0024e90: 6967 6e65 6420 6c6f 6e67 2045 5252 5f70  igned long ERR_p
0024ea0: 6565 6b5f 6c61 7374 5f65 7272 6f72 5f6c  eek_last_error_l
0024eb0: 696e 655f 6461 7461 2863 6f6e 7374 2063  ine_data(const c
0024ec0: 6861 7220 2a2a 6669 6c65 2c69 6e74 202a  har **file,int *
0024ed0: 6c69 6e65 2c0a 2020 2020 2020 2020 2020  line,.          
0024ee0: 2063 6f6e 7374 2063 6861 7220 2a2a 6461   const char **da
0024ef0: 7461 2c69 6e74 202a 666c 6167 7329 3b0a  ta,int *flags);.
0024f00: 766f 6964 2045 5252 5f63 6c65 6172 5f65  void ERR_clear_e
0024f10: 7272 6f72 2876 6f69 6420 293b 0a63 6861  rror(void );.cha
0024f20: 7220 2a45 5252 5f65 7272 6f72 5f73 7472  r *ERR_error_str
0024f30: 696e 6728 756e 7369 676e 6564 206c 6f6e  ing(unsigned lon
0024f40: 6720 652c 6368 6172 202a 6275 6629 3b0a  g e,char *buf);.
0024f50: 766f 6964 2045 5252 5f65 7272 6f72 5f73  void ERR_error_s
0024f60: 7472 696e 675f 6e28 756e 7369 676e 6564  tring_n(unsigned
0024f70: 206c 6f6e 6720 652c 2063 6861 7220 2a62   long e, char *b
0024f80: 7566 2c20 7369 7a65 5f74 206c 656e 293b  uf, size_t len);
0024f90: 0a63 6f6e 7374 2063 6861 7220 2a45 5252  .const char *ERR
0024fa0: 5f6c 6962 5f65 7272 6f72 5f73 7472 696e  _lib_error_strin
0024fb0: 6728 756e 7369 676e 6564 206c 6f6e 6720  g(unsigned long 
0024fc0: 6529 3b0a 636f 6e73 7420 6368 6172 202a  e);.const char *
0024fd0: 4552 525f 6675 6e63 5f65 7272 6f72 5f73  ERR_func_error_s
0024fe0: 7472 696e 6728 756e 7369 676e 6564 206c  tring(unsigned l
0024ff0: 6f6e 6720 6529 3b0a 636f 6e73 7420 6368  ong e);.const ch
0025000: 6172 202a 4552 525f 7265 6173 6f6e 5f65  ar *ERR_reason_e
0025010: 7272 6f72 5f73 7472 696e 6728 756e 7369  rror_string(unsi
0025020: 676e 6564 206c 6f6e 6720 6529 3b0a 766f  gned long e);.vo
0025030: 6964 2045 5252 5f70 7269 6e74 5f65 7272  id ERR_print_err
0025040: 6f72 735f 6362 2869 6e74 2028 2a63 6229  ors_cb(int (*cb)
0025050: 2863 6f6e 7374 2063 6861 7220 2a73 7472  (const char *str
0025060: 2c20 7369 7a65 5f74 206c 656e 2c20 766f  , size_t len, vo
0025070: 6964 202a 7529 2c0a 2020 2020 766f 6964  id *u),.    void
0025080: 202a 7529 3b0a 0a76 6f69 6420 4552 525f   *u);..void ERR_
0025090: 7072 696e 745f 6572 726f 7273 5f66 7028  print_errors_fp(
00250a0: 4649 4c45 202a 6670 293b 0a0a 0a76 6f69  FILE *fp);...voi
00250b0: 6420 4552 525f 7072 696e 745f 6572 726f  d ERR_print_erro
00250c0: 7273 2842 494f 202a 6270 293b 0a0a 766f  rs(BIO *bp);..vo
00250d0: 6964 2045 5252 5f61 6464 5f65 7272 6f72  id ERR_add_error
00250e0: 5f64 6174 6128 696e 7420 6e75 6d2c 202e  _data(int num, .
00250f0: 2e2e 293b 0a76 6f69 6420 4552 525f 6164  ..);.void ERR_ad
0025100: 645f 6572 726f 725f 7664 6174 6128 696e  d_error_vdata(in
0025110: 7420 6e75 6d2c 2076 615f 6c69 7374 2061  t num, va_list a
0025120: 7267 7329 3b0a 766f 6964 2045 5252 5f6c  rgs);.void ERR_l
0025130: 6f61 645f 7374 7269 6e67 7328 696e 7420  oad_strings(int 
0025140: 6c69 622c 4552 525f 5354 5249 4e47 5f44  lib,ERR_STRING_D
0025150: 4154 4120 7374 725b 5d29 3b0a 766f 6964  ATA str[]);.void
0025160: 2045 5252 5f75 6e6c 6f61 645f 7374 7269   ERR_unload_stri
0025170: 6e67 7328 696e 7420 6c69 622c 4552 525f  ngs(int lib,ERR_
0025180: 5354 5249 4e47 5f44 4154 4120 7374 725b  STRING_DATA str[
0025190: 5d29 3b0a 766f 6964 2045 5252 5f6c 6f61  ]);.void ERR_loa
00251a0: 645f 4552 525f 7374 7269 6e67 7328 766f  d_ERR_strings(vo
00251b0: 6964 293b 0a76 6f69 6420 4552 525f 6c6f  id);.void ERR_lo
00251c0: 6164 5f63 7279 7074 6f5f 7374 7269 6e67  ad_crypto_string
00251d0: 7328 766f 6964 293b 0a76 6f69 6420 4552  s(void);.void ER
00251e0: 525f 6672 6565 5f73 7472 696e 6773 2876  R_free_strings(v
00251f0: 6f69 6429 3b0a 0a76 6f69 6420 4552 525f  oid);..void ERR_
0025200: 7265 6d6f 7665 5f74 6872 6561 645f 7374  remove_thread_st
0025210: 6174 6528 636f 6e73 7420 4352 5950 544f  ate(const CRYPTO
0025220: 5f54 4852 4541 4449 4420 2a74 6964 293b  _THREADID *tid);
0025230: 0a0a 766f 6964 2045 5252 5f72 656d 6f76  ..void ERR_remov
0025240: 655f 7374 6174 6528 756e 7369 676e 6564  e_state(unsigned
0025250: 206c 6f6e 6720 7069 6429 3b0a 0a45 5252   long pid);..ERR
0025260: 5f53 5441 5445 202a 4552 525f 6765 745f  _STATE *ERR_get_
0025270: 7374 6174 6528 766f 6964 293b 0a0a 0a73  state(void);...s
0025280: 7472 7563 7420 6c68 6173 685f 7374 5f45  truct lhash_st_E
0025290: 5252 5f53 5452 494e 475f 4441 5441 202a  RR_STRING_DATA *
00252a0: 4552 525f 6765 745f 7374 7269 6e67 5f74  ERR_get_string_t
00252b0: 6162 6c65 2876 6f69 6429 3b0a 7374 7275  able(void);.stru
00252c0: 6374 206c 6861 7368 5f73 745f 4552 525f  ct lhash_st_ERR_
00252d0: 5354 4154 4520 2a45 5252 5f67 6574 5f65  STATE *ERR_get_e
00252e0: 7272 5f73 7461 7465 5f74 6162 6c65 2876  rr_state_table(v
00252f0: 6f69 6429 3b0a 766f 6964 2045 5252 5f72  oid);.void ERR_r
0025300: 656c 6561 7365 5f65 7272 5f73 7461 7465  elease_err_state
0025310: 5f74 6162 6c65 2873 7472 7563 7420 6c68  _table(struct lh
0025320: 6173 685f 7374 5f45 5252 5f53 5441 5445  ash_st_ERR_STATE
0025330: 202a 2a68 6173 6829 3b0a 0a0a 696e 7420   **hash);...int 
0025340: 4552 525f 6765 745f 6e65 7874 5f65 7272  ERR_get_next_err
0025350: 6f72 5f6c 6962 7261 7279 2876 6f69 6429  or_library(void)
0025360: 3b0a 0a69 6e74 2045 5252 5f73 6574 5f6d  ;..int ERR_set_m
0025370: 6172 6b28 766f 6964 293b 0a69 6e74 2045  ark(void);.int E
0025380: 5252 5f70 6f70 5f74 6f5f 6d61 726b 2876  RR_pop_to_mark(v
0025390: 6f69 6429 3b0a 0a0a 0a0a 0a63 6f6e 7374  oid);......const
00253a0: 2045 5252 5f46 4e53 202a 4552 525f 6765   ERR_FNS *ERR_ge
00253b0: 745f 696d 706c 656d 656e 7461 7469 6f6e  t_implementation
00253c0: 2876 6f69 6429 3b0a 0a0a 696e 7420 4552  (void);...int ER
00253d0: 525f 7365 745f 696d 706c 656d 656e 7461  R_set_implementa
00253e0: 7469 6f6e 2863 6f6e 7374 2045 5252 5f46  tion(const ERR_F
00253f0: 4e53 202a 666e 7329 3b0a 2320 3136 3520  NS *fns);.# 165 
0025400: 2273 736c 5f6c 6f63 6c2e 6822 2032 0a23  "ssl_locl.h" 2.#
0025410: 2031 2022 2f75 7372 2f69 6e63 6c75 6465   1 "/usr/include
0025420: 2f6f 7065 6e73 736c 2f73 736c 2e68 2220  /openssl/ssl.h" 
0025430: 3120 3320 340a 2320 3134 3620 222f 7573  1 3 4.# 146 "/us
0025440: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
0025450: 6c2f 7373 6c2e 6822 2033 2034 0a23 2031  l/ssl.h" 3 4.# 1
0025460: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
0025470: 7065 6e73 736c 2f65 5f6f 7332 2e68 2220  penssl/e_os2.h" 
0025480: 3120 3320 340a 2320 3536 2022 2f75 7372  1 3 4.# 56 "/usr
0025490: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
00254a0: 2f65 5f6f 7332 2e68 2220 3320 340a 2320  /e_os2.h" 3 4.# 
00254b0: 3120 222f 7573 722f 696e 636c 7564 652f  1 "/usr/include/
00254c0: 6f70 656e 7373 6c2f 6f70 656e 7373 6c63  openssl/opensslc
00254d0: 6f6e 662e 6822 2031 2033 2034 0a23 2033  onf.h" 1 3 4.# 3
00254e0: 3420 222f 7573 722f 696e 636c 7564 652f  4 "/usr/include/
00254f0: 6f70 656e 7373 6c2f 6f70 656e 7373 6c63  openssl/opensslc
0025500: 6f6e 662e 6822 2033 2034 0a23 2031 2022  onf.h" 3 4.# 1 "
0025510: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
0025520: 6e73 736c 2f6f 7065 6e73 736c 636f 6e66  nssl/opensslconf
0025530: 2d78 3836 5f36 342e 6822 2031 2033 2034  -x86_64.h" 1 3 4
0025540: 0a23 2033 3520 222f 7573 722f 696e 636c  .# 35 "/usr/incl
0025550: 7564 652f 6f70 656e 7373 6c2f 6f70 656e  ude/openssl/open
0025560: 7373 6c63 6f6e 662e 6822 2032 2033 2034  sslconf.h" 2 3 4
0025570: 0a23 2035 3720 222f 7573 722f 696e 636c  .# 57 "/usr/incl
0025580: 7564 652f 6f70 656e 7373 6c2f 655f 6f73  ude/openssl/e_os
0025590: 322e 6822 2032 2033 2034 0a23 2031 3437  2.h" 2 3 4.# 147
00255a0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
00255b0: 7065 6e73 736c 2f73 736c 2e68 2220 3220  penssl/ssl.h" 2 
00255c0: 3320 340a 2320 3135 3620 222f 7573 722f  3 4.# 156 "/usr/
00255d0: 696e 636c 7564 652f 6f70 656e 7373 6c2f  include/openssl/
00255e0: 7373 6c2e 6822 2033 2034 0a23 2031 2022  ssl.h" 3 4.# 1 "
00255f0: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
0025600: 6e73 736c 2f78 3530 392e 6822 2031 2033  nssl/x509.h" 1 3
0025610: 2034 0a23 2036 3720 222f 7573 722f 696e   4.# 67 "/usr/in
0025620: 636c 7564 652f 6f70 656e 7373 6c2f 7835  clude/openssl/x5
0025630: 3039 2e68 2220 3320 340a 2320 3120 222f  09.h" 3 4.# 1 "/
0025640: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
0025650: 7373 6c2f 655f 6f73 322e 6822 2031 2033  ssl/e_os2.h" 1 3
0025660: 2034 0a23 2035 3620 222f 7573 722f 696e   4.# 56 "/usr/in
0025670: 636c 7564 652f 6f70 656e 7373 6c2f 655f  clude/openssl/e_
0025680: 6f73 322e 6822 2033 2034 0a23 2031 2022  os2.h" 3 4.# 1 "
0025690: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
00256a0: 6e73 736c 2f6f 7065 6e73 736c 636f 6e66  nssl/opensslconf
00256b0: 2e68 2220 3120 3320 340a 2320 3334 2022  .h" 1 3 4.# 34 "
00256c0: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
00256d0: 6e73 736c 2f6f 7065 6e73 736c 636f 6e66  nssl/opensslconf
00256e0: 2e68 2220 3320 340a 2320 3120 222f 7573  .h" 3 4.# 1 "/us
00256f0: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
0025700: 6c2f 6f70 656e 7373 6c63 6f6e 662d 7838  l/opensslconf-x8
0025710: 365f 3634 2e68 2220 3120 3320 340a 2320  6_64.h" 1 3 4.# 
0025720: 3335 2022 2f75 7372 2f69 6e63 6c75 6465  35 "/usr/include
0025730: 2f6f 7065 6e73 736c 2f6f 7065 6e73 736c  /openssl/openssl
0025740: 636f 6e66 2e68 2220 3220 3320 340a 2320  conf.h" 2 3 4.# 
0025750: 3537 2022 2f75 7372 2f69 6e63 6c75 6465  57 "/usr/include
0025760: 2f6f 7065 6e73 736c 2f65 5f6f 7332 2e68  /openssl/e_os2.h
0025770: 2220 3220 3320 340a 2320 3638 2022 2f75  " 2 3 4.# 68 "/u
0025780: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
0025790: 736c 2f78 3530 392e 6822 2032 2033 2034  sl/x509.h" 2 3 4
00257a0: 0a0a 0a0a 0a0a 2320 3120 222f 7573 722f  ......# 1 "/usr/
00257b0: 696e 636c 7564 652f 6f70 656e 7373 6c2f  include/openssl/
00257c0: 6576 702e 6822 2031 2033 2034 0a23 2036  evp.h" 1 3 4.# 6
00257d0: 3620 222f 7573 722f 696e 636c 7564 652f  6 "/usr/include/
00257e0: 6f70 656e 7373 6c2f 6576 702e 6822 2033  openssl/evp.h" 3
00257f0: 2034 0a23 2031 2022 2f75 7372 2f69 6e63   4.# 1 "/usr/inc
0025800: 6c75 6465 2f6f 7065 6e73 736c 2f6f 7065  lude/openssl/ope
0025810: 6e73 736c 636f 6e66 2e68 2220 3120 3320  nsslconf.h" 1 3 
0025820: 340a 2320 3334 2022 2f75 7372 2f69 6e63  4.# 34 "/usr/inc
0025830: 6c75 6465 2f6f 7065 6e73 736c 2f6f 7065  lude/openssl/ope
0025840: 6e73 736c 636f 6e66 2e68 2220 3320 340a  nsslconf.h" 3 4.
0025850: 2320 3120 222f 7573 722f 696e 636c 7564  # 1 "/usr/includ
0025860: 652f 6f70 656e 7373 6c2f 6f70 656e 7373  e/openssl/openss
0025870: 6c63 6f6e 662d 7838 365f 3634 2e68 2220  lconf-x86_64.h" 
0025880: 3120 3320 340a 2320 3335 2022 2f75 7372  1 3 4.# 35 "/usr
0025890: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
00258a0: 2f6f 7065 6e73 736c 636f 6e66 2e68 2220  /opensslconf.h" 
00258b0: 3220 3320 340a 2320 3637 2022 2f75 7372  2 3 4.# 67 "/usr
00258c0: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
00258d0: 2f65 7670 2e68 2220 3220 3320 340a 2320  /evp.h" 2 3 4.# 
00258e0: 3739 2022 2f75 7372 2f69 6e63 6c75 6465  79 "/usr/include
00258f0: 2f6f 7065 6e73 736c 2f65 7670 2e68 2220  /openssl/evp.h" 
0025900: 3320 340a 2320 3120 222f 7573 722f 696e  3 4.# 1 "/usr/in
0025910: 636c 7564 652f 6f70 656e 7373 6c2f 6669  clude/openssl/fi
0025920: 7073 2e68 2220 3120 3320 340a 2320 3530  ps.h" 1 3 4.# 50
0025930: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
0025940: 7065 6e73 736c 2f66 6970 732e 6822 2033  penssl/fips.h" 3
0025950: 2034 0a23 2031 2022 2f75 7372 2f69 6e63   4.# 1 "/usr/inc
0025960: 6c75 6465 2f6f 7065 6e73 736c 2f6f 7065  lude/openssl/ope
0025970: 6e73 736c 636f 6e66 2e68 2220 3120 3320  nsslconf.h" 1 3 
0025980: 340a 2320 3334 2022 2f75 7372 2f69 6e63  4.# 34 "/usr/inc
0025990: 6c75 6465 2f6f 7065 6e73 736c 2f6f 7065  lude/openssl/ope
00259a0: 6e73 736c 636f 6e66 2e68 2220 3320 340a  nsslconf.h" 3 4.
00259b0: 2320 3120 222f 7573 722f 696e 636c 7564  # 1 "/usr/includ
00259c0: 652f 6f70 656e 7373 6c2f 6f70 656e 7373  e/openssl/openss
00259d0: 6c63 6f6e 662d 7838 365f 3634 2e68 2220  lconf-x86_64.h" 
00259e0: 3120 3320 340a 2320 3335 2022 2f75 7372  1 3 4.# 35 "/usr
00259f0: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
0025a00: 2f6f 7065 6e73 736c 636f 6e66 2e68 2220  /opensslconf.h" 
0025a10: 3220 3320 340a 2320 3531 2022 2f75 7372  2 3 4.# 51 "/usr
0025a20: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
0025a30: 2f66 6970 732e 6822 2032 2033 2034 0a23  /fips.h" 2 3 4.#
0025a40: 2036 3420 222f 7573 722f 696e 636c 7564   64 "/usr/includ
0025a50: 652f 6f70 656e 7373 6c2f 6669 7073 2e68  e/openssl/fips.h
0025a60: 2220 3320 340a 7374 7275 6374 2064 7361  " 3 4.struct dsa
0025a70: 5f73 743b 0a73 7472 7563 7420 7273 615f  _st;.struct rsa_
0025a80: 7374 3b0a 7374 7275 6374 2065 7670 5f70  st;.struct evp_p
0025a90: 6b65 795f 7374 3b0a 7374 7275 6374 2065  key_st;.struct e
0025aa0: 6e76 5f6d 645f 7374 3b0a 7374 7275 6374  nv_md_st;.struct
0025ab0: 2065 6e76 5f6d 645f 6374 785f 7374 3b0a   env_md_ctx_st;.
0025ac0: 7374 7275 6374 2065 7670 5f63 6970 6865  struct evp_ciphe
0025ad0: 725f 7374 3b0a 7374 7275 6374 2065 7670  r_st;.struct evp
0025ae0: 5f63 6970 6865 725f 6374 785f 7374 3b0a  _cipher_ctx_st;.
0025af0: 7374 7275 6374 2064 685f 6d65 7468 6f64  struct dh_method
0025b00: 3b0a 7374 7275 6374 2043 4d41 435f 4354  ;.struct CMAC_CT
0025b10: 585f 7374 3b0a 7374 7275 6374 2068 6d61  X_st;.struct hma
0025b20: 635f 6374 785f 7374 3b0a 0a69 6e74 2046  c_ctx_st;..int F
0025b30: 4950 535f 6d6f 6475 6c65 5f6d 6f64 655f  IPS_module_mode_
0025b40: 7365 7428 696e 7420 6f6e 6f66 662c 2063  set(int onoff, c
0025b50: 6f6e 7374 2063 6861 7220 2a61 7574 6829  onst char *auth)
0025b60: 3b0a 696e 7420 4649 5053 5f6d 6f64 756c  ;.int FIPS_modul
0025b70: 655f 6d6f 6465 2876 6f69 6429 3b0a 696e  e_mode(void);.in
0025b80: 7420 4649 5053 5f6d 6f64 756c 655f 696e  t FIPS_module_in
0025b90: 7374 616c 6c65 6428 766f 6964 293b 0a63  stalled(void);.c
0025ba0: 6f6e 7374 2076 6f69 6420 2a46 4950 535f  onst void *FIPS_
0025bb0: 7261 6e64 5f63 6865 636b 2876 6f69 6429  rand_check(void)
0025bc0: 3b0a 696e 7420 4649 5053 5f73 656c 6674  ;.int FIPS_selft
0025bd0: 6573 7428 766f 6964 293b 0a69 6e74 2046  est(void);.int F
0025be0: 4950 535f 7365 6c66 7465 7374 5f66 6169  IPS_selftest_fai
0025bf0: 6c65 6428 766f 6964 293b 0a76 6f69 6420  led(void);.void 
0025c00: 4649 5053 5f63 6f72 7275 7074 5f73 6861  FIPS_corrupt_sha
0025c10: 3128 766f 6964 293b 0a69 6e74 2046 4950  1(void);.int FIP
0025c20: 535f 7365 6c66 7465 7374 5f73 6861 3128  S_selftest_sha1(
0025c30: 766f 6964 293b 0a69 6e74 2046 4950 535f  void);.int FIPS_
0025c40: 7365 6c66 7465 7374 5f73 6861 3228 766f  selftest_sha2(vo
0025c50: 6964 293b 0a76 6f69 6420 4649 5053 5f63  id);.void FIPS_c
0025c60: 6f72 7275 7074 5f61 6573 2876 6f69 6429  orrupt_aes(void)
0025c70: 3b0a 696e 7420 4649 5053 5f73 656c 6674  ;.int FIPS_selft
0025c80: 6573 745f 6165 735f 6363 6d28 766f 6964  est_aes_ccm(void
0025c90: 293b 0a69 6e74 2046 4950 535f 7365 6c66  );.int FIPS_self
0025ca0: 7465 7374 5f61 6573 5f67 636d 2876 6f69  test_aes_gcm(voi
0025cb0: 6429 3b0a 696e 7420 4649 5053 5f73 656c  d);.int FIPS_sel
0025cc0: 6674 6573 745f 6165 735f 7874 7328 766f  ftest_aes_xts(vo
0025cd0: 6964 293b 0a69 6e74 2046 4950 535f 7365  id);.int FIPS_se
0025ce0: 6c66 7465 7374 5f61 6573 2876 6f69 6429  lftest_aes(void)
0025cf0: 3b0a 766f 6964 2046 4950 535f 636f 7272  ;.void FIPS_corr
0025d00: 7570 745f 6465 7328 766f 6964 293b 0a69  upt_des(void);.i
0025d10: 6e74 2046 4950 535f 7365 6c66 7465 7374  nt FIPS_selftest
0025d20: 5f64 6573 2876 6f69 6429 3b0a 766f 6964  _des(void);.void
0025d30: 2046 4950 535f 636f 7272 7570 745f 7273   FIPS_corrupt_rs
0025d40: 6128 766f 6964 293b 0a76 6f69 6420 4649  a(void);.void FI
0025d50: 5053 5f63 6f72 7275 7074 5f72 7361 5f6b  PS_corrupt_rsa_k
0025d60: 6579 6765 6e28 766f 6964 293b 0a69 6e74  eygen(void);.int
0025d70: 2046 4950 535f 7365 6c66 7465 7374 5f72   FIPS_selftest_r
0025d80: 7361 2876 6f69 6429 3b0a 766f 6964 2046  sa(void);.void F
0025d90: 4950 535f 636f 7272 7570 745f 6473 6128  IPS_corrupt_dsa(
0025da0: 766f 6964 293b 0a76 6f69 6420 4649 5053  void);.void FIPS
0025db0: 5f63 6f72 7275 7074 5f64 7361 5f6b 6579  _corrupt_dsa_key
0025dc0: 6765 6e28 766f 6964 293b 0a69 6e74 2046  gen(void);.int F
0025dd0: 4950 535f 7365 6c66 7465 7374 5f64 7361  IPS_selftest_dsa
0025de0: 2876 6f69 6429 3b0a 696e 7420 4649 5053  (void);.int FIPS
0025df0: 5f73 656c 6674 6573 745f 6563 6473 6128  _selftest_ecdsa(
0025e00: 766f 6964 293b 0a69 6e74 2046 4950 535f  void);.int FIPS_
0025e10: 7365 6c66 7465 7374 5f65 6364 6828 766f  selftest_ecdh(vo
0025e20: 6964 293b 0a69 6e74 2046 4950 535f 7365  id);.int FIPS_se
0025e30: 6c66 7465 7374 5f64 6828 766f 6964 293b  lftest_dh(void);
0025e40: 0a76 6f69 6420 4649 5053 5f63 6f72 7275  .void FIPS_corru
0025e50: 7074 5f72 6e67 2876 6f69 6429 3b0a 766f  pt_rng(void);.vo
0025e60: 6964 2046 4950 535f 726e 675f 7374 6963  id FIPS_rng_stic
0025e70: 6b28 766f 6964 293b 0a76 6f69 6420 4649  k(void);.void FI
0025e80: 5053 5f78 3933 315f 7374 6963 6b28 696e  PS_x931_stick(in
0025e90: 7420 6f6e 6f66 6629 3b0a 766f 6964 2046  t onoff);.void F
0025ea0: 4950 535f 6472 6267 5f73 7469 636b 2869  IPS_drbg_stick(i
0025eb0: 6e74 206f 6e6f 6666 293b 0a69 6e74 2046  nt onoff);.int F
0025ec0: 4950 535f 7365 6c66 7465 7374 5f72 6e67  IPS_selftest_rng
0025ed0: 2876 6f69 6429 3b0a 696e 7420 4649 5053  (void);.int FIPS
0025ee0: 5f73 656c 6674 6573 745f 7839 3331 2876  _selftest_x931(v
0025ef0: 6f69 6429 3b0a 696e 7420 4649 5053 5f73  oid);.int FIPS_s
0025f00: 656c 6674 6573 745f 686d 6163 2876 6f69  elftest_hmac(voi
0025f10: 6429 3b0a 696e 7420 4649 5053 5f73 656c  d);.int FIPS_sel
0025f20: 6674 6573 745f 6472 6267 2876 6f69 6429  ftest_drbg(void)
0025f30: 3b0a 696e 7420 4649 5053 5f73 656c 6674  ;.int FIPS_selft
0025f40: 6573 745f 6472 6267 5f61 6c6c 2876 6f69  est_drbg_all(voi
0025f50: 6429 3b0a 696e 7420 4649 5053 5f73 656c  d);.int FIPS_sel
0025f60: 6674 6573 745f 636d 6163 2876 6f69 6429  ftest_cmac(void)
0025f70: 3b0a 0a76 6f69 6420 4649 5053 5f67 6574  ;..void FIPS_get
0025f80: 5f74 696d 6576 6563 2875 6e73 6967 6e65  _timevec(unsigne
0025f90: 6420 6368 6172 202a 6275 662c 2075 6e73  d char *buf, uns
0025fa0: 6967 6e65 6420 6c6f 6e67 202a 7063 7472  igned long *pctr
0025fb0: 293b 0a0a 0a0a 0a69 6e74 2066 6970 735f  );.....int fips_
0025fc0: 706b 6579 5f73 6967 6e61 7475 7265 5f74  pkey_signature_t
0025fd0: 6573 7428 7374 7275 6374 2065 7670 5f70  est(struct evp_p
0025fe0: 6b65 795f 7374 202a 706b 6579 2c0a 2020  key_st *pkey,.  
0025ff0: 2063 6f6e 7374 2075 6e73 6967 6e65 6420   const unsigned 
0026000: 6368 6172 202a 7462 732c 2069 6e74 2074  char *tbs, int t
0026010: 6273 6c65 6e2c 0a20 2020 636f 6e73 7420  bslen,.   const 
0026020: 756e 7369 676e 6564 2063 6861 7220 2a6b  unsigned char *k
0026030: 6174 2c20 756e 7369 676e 6564 2069 6e74  at, unsigned int
0026040: 206b 6174 6c65 6e2c 0a20 2020 636f 6e73   katlen,.   cons
0026050: 7420 7374 7275 6374 2065 6e76 5f6d 645f  t struct env_md_
0026060: 7374 202a 6469 6765 7374 2c20 756e 7369  st *digest, unsi
0026070: 676e 6564 2069 6e74 206d 645f 666c 6167  gned int md_flag
0026080: 732c 0a20 2020 636f 6e73 7420 6368 6172  s,.   const char
0026090: 202a 6661 696c 5f73 7472 293b 0a0a 696e   *fail_str);..in
00260a0: 7420 6669 7073 5f63 6970 6865 725f 7465  t fips_cipher_te
00260b0: 7374 2873 7472 7563 7420 6576 705f 6369  st(struct evp_ci
00260c0: 7068 6572 5f63 7478 5f73 7420 2a63 7478  pher_ctx_st *ctx
00260d0: 2c0a 2020 2063 6f6e 7374 2073 7472 7563  ,.   const struc
00260e0: 7420 6576 705f 6369 7068 6572 5f73 7420  t evp_cipher_st 
00260f0: 2a63 6970 6865 722c 0a20 2020 636f 6e73  *cipher,.   cons
0026100: 7420 756e 7369 676e 6564 2063 6861 7220  t unsigned char 
0026110: 2a6b 6579 2c0a 2020 2063 6f6e 7374 2075  *key,.   const u
0026120: 6e73 6967 6e65 6420 6368 6172 202a 6976  nsigned char *iv
0026130: 2c0a 2020 2063 6f6e 7374 2075 6e73 6967  ,.   const unsig
0026140: 6e65 6420 6368 6172 202a 706c 6169 6e74  ned char *plaint
0026150: 6578 742c 0a20 2020 636f 6e73 7420 756e  ext,.   const un
0026160: 7369 676e 6564 2063 6861 7220 2a63 6970  signed char *cip
0026170: 6865 7274 6578 742c 0a20 2020 696e 7420  hertext,.   int 
0026180: 6c65 6e29 3b0a 0a76 6f69 6420 6669 7073  len);..void fips
0026190: 5f73 6574 5f73 656c 6674 6573 745f 6661  _set_selftest_fa
00261a0: 696c 2876 6f69 6429 3b0a 0a63 6f6e 7374  il(void);..const
00261b0: 2073 7472 7563 7420 656e 765f 6d64 5f73   struct env_md_s
00261c0: 7420 2a46 4950 535f 6765 745f 6469 6765  t *FIPS_get_dige
00261d0: 7374 6279 6e69 6428 696e 7420 6e69 6429  stbynid(int nid)
00261e0: 3b0a 0a63 6f6e 7374 2073 7472 7563 7420  ;..const struct 
00261f0: 6576 705f 6369 7068 6572 5f73 7420 2a46  evp_cipher_st *F
0026200: 4950 535f 6765 745f 6369 7068 6572 6279  IPS_get_cipherby
0026210: 6e69 6428 696e 7420 6e69 6429 3b0a 0a0a  nid(int nid);...
0026220: 0a0a 0a0a 766f 6964 2045 5252 5f6c 6f61  ....void ERR_loa
0026230: 645f 4649 5053 5f73 7472 696e 6773 2876  d_FIPS_strings(v
0026240: 6f69 6429 3b0a 2320 3830 2022 2f75 7372  oid);.# 80 "/usr
0026250: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
0026260: 2f65 7670 2e68 2220 3220 3320 340a 2320  /evp.h" 2 3 4.# 
0026270: 3938 2022 2f75 7372 2f69 6e63 6c75 6465  98 "/usr/include
0026280: 2f6f 7065 6e73 736c 2f65 7670 2e68 2220  /openssl/evp.h" 
0026290: 3320 340a 2320 3120 222f 7573 722f 696e  3 4.# 1 "/usr/in
00262a0: 636c 7564 652f 6f70 656e 7373 6c2f 6f62  clude/openssl/ob
00262b0: 6a65 6374 732e 6822 2031 2033 2034 0a23  jects.h" 1 3 4.#
00262c0: 2036 3520 222f 7573 722f 696e 636c 7564   65 "/usr/includ
00262d0: 652f 6f70 656e 7373 6c2f 6f62 6a65 6374  e/openssl/object
00262e0: 732e 6822 2033 2034 0a23 2031 2022 2f75  s.h" 3 4.# 1 "/u
00262f0: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
0026300: 736c 2f6f 626a 5f6d 6163 2e68 2220 3120  sl/obj_mac.h" 1 
0026310: 3320 340a 2320 3636 2022 2f75 7372 2f69  3 4.# 66 "/usr/i
0026320: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f6f  nclude/openssl/o
0026330: 626a 6563 7473 2e68 2220 3220 3320 340a  bjects.h" 2 3 4.
0026340: 2320 3937 3920 222f 7573 722f 696e 636c  # 979 "/usr/incl
0026350: 7564 652f 6f70 656e 7373 6c2f 6f62 6a65  ude/openssl/obje
0026360: 6374 732e 6822 2033 2034 0a74 7970 6564  cts.h" 3 4.typed
0026370: 6566 2073 7472 7563 7420 6f62 6a5f 6e61  ef struct obj_na
0026380: 6d65 5f73 740a 207b 0a20 696e 7420 7479  me_st. {. int ty
0026390: 7065 3b0a 2069 6e74 2061 6c69 6173 3b0a  pe;. int alias;.
00263a0: 2063 6f6e 7374 2063 6861 7220 2a6e 616d   const char *nam
00263b0: 653b 0a20 636f 6e73 7420 6368 6172 202a  e;. const char *
00263c0: 6461 7461 3b0a 207d 204f 424a 5f4e 414d  data;. } OBJ_NAM
00263d0: 453b 0a0a 0a0a 0a69 6e74 204f 424a 5f4e  E;.....int OBJ_N
00263e0: 414d 455f 696e 6974 2876 6f69 6429 3b0a  AME_init(void);.
00263f0: 696e 7420 4f42 4a5f 4e41 4d45 5f6e 6577  int OBJ_NAME_new
0026400: 5f69 6e64 6578 2875 6e73 6967 6e65 6420  _index(unsigned 
0026410: 6c6f 6e67 2028 2a68 6173 685f 6675 6e63  long (*hash_func
0026420: 2928 636f 6e73 7420 6368 6172 202a 292c  )(const char *),
0026430: 0a20 2020 2020 2020 2020 696e 7420 282a  .         int (*
0026440: 636d 705f 6675 6e63 2928 636f 6e73 7420  cmp_func)(const 
0026450: 6368 6172 202a 2c20 636f 6e73 7420 6368  char *, const ch
0026460: 6172 202a 292c 0a20 2020 2020 2020 2020  ar *),.         
0026470: 766f 6964 2028 2a66 7265 655f 6675 6e63  void (*free_func
0026480: 2928 636f 6e73 7420 6368 6172 202a 2c20  )(const char *, 
0026490: 696e 742c 2063 6f6e 7374 2063 6861 7220  int, const char 
00264a0: 2a29 293b 0a63 6f6e 7374 2063 6861 7220  *));.const char 
00264b0: 2a4f 424a 5f4e 414d 455f 6765 7428 636f  *OBJ_NAME_get(co
00264c0: 6e73 7420 6368 6172 202a 6e61 6d65 2c69  nst char *name,i
00264d0: 6e74 2074 7970 6529 3b0a 696e 7420 4f42  nt type);.int OB
00264e0: 4a5f 4e41 4d45 5f61 6464 2863 6f6e 7374  J_NAME_add(const
00264f0: 2063 6861 7220 2a6e 616d 652c 696e 7420   char *name,int 
0026500: 7479 7065 2c63 6f6e 7374 2063 6861 7220  type,const char 
0026510: 2a64 6174 6129 3b0a 696e 7420 4f42 4a5f  *data);.int OBJ_
0026520: 4e41 4d45 5f72 656d 6f76 6528 636f 6e73  NAME_remove(cons
0026530: 7420 6368 6172 202a 6e61 6d65 2c69 6e74  t char *name,int
0026540: 2074 7970 6529 3b0a 766f 6964 204f 424a   type);.void OBJ
0026550: 5f4e 414d 455f 636c 6561 6e75 7028 696e  _NAME_cleanup(in
0026560: 7420 7479 7065 293b 0a76 6f69 6420 4f42  t type);.void OB
0026570: 4a5f 4e41 4d45 5f64 6f5f 616c 6c28 696e  J_NAME_do_all(in
0026580: 7420 7479 7065 2c76 6f69 6420 282a 666e  t type,void (*fn
0026590: 2928 636f 6e73 7420 4f42 4a5f 4e41 4d45  )(const OBJ_NAME
00265a0: 202a 2c76 6f69 6420 2a61 7267 292c 0a20   *,void *arg),. 
00265b0: 2020 2020 2020 766f 6964 202a 6172 6729        void *arg)
00265c0: 3b0a 766f 6964 204f 424a 5f4e 414d 455f  ;.void OBJ_NAME_
00265d0: 646f 5f61 6c6c 5f73 6f72 7465 6428 696e  do_all_sorted(in
00265e0: 7420 7479 7065 2c76 6f69 6420 282a 666e  t type,void (*fn
00265f0: 2928 636f 6e73 7420 4f42 4a5f 4e41 4d45  )(const OBJ_NAME
0026600: 202a 2c76 6f69 6420 2a61 7267 292c 0a20   *,void *arg),. 
0026610: 2020 2020 2020 766f 6964 202a 6172 6729        void *arg)
0026620: 3b0a 0a41 534e 315f 4f42 4a45 4354 202a  ;..ASN1_OBJECT *
0026630: 204f 424a 5f64 7570 2863 6f6e 7374 2041   OBJ_dup(const A
0026640: 534e 315f 4f42 4a45 4354 202a 6f29 3b0a  SN1_OBJECT *o);.
0026650: 4153 4e31 5f4f 424a 4543 5420 2a20 4f42  ASN1_OBJECT * OB
0026660: 4a5f 6e69 6432 6f62 6a28 696e 7420 6e29  J_nid2obj(int n)
0026670: 3b0a 636f 6e73 7420 6368 6172 202a 204f  ;.const char * O
0026680: 424a 5f6e 6964 326c 6e28 696e 7420 6e29  BJ_nid2ln(int n)
0026690: 3b0a 636f 6e73 7420 6368 6172 202a 204f  ;.const char * O
00266a0: 424a 5f6e 6964 3273 6e28 696e 7420 6e29  BJ_nid2sn(int n)
00266b0: 3b0a 696e 7420 4f42 4a5f 6f62 6a32 6e69  ;.int OBJ_obj2ni
00266c0: 6428 636f 6e73 7420 4153 4e31 5f4f 424a  d(const ASN1_OBJ
00266d0: 4543 5420 2a6f 293b 0a41 534e 315f 4f42  ECT *o);.ASN1_OB
00266e0: 4a45 4354 202a 204f 424a 5f74 7874 326f  JECT * OBJ_txt2o
00266f0: 626a 2863 6f6e 7374 2063 6861 7220 2a73  bj(const char *s
0026700: 2c20 696e 7420 6e6f 5f6e 616d 6529 3b0a  , int no_name);.
0026710: 696e 7420 4f42 4a5f 6f62 6a32 7478 7428  int OBJ_obj2txt(
0026720: 6368 6172 202a 6275 662c 2069 6e74 2062  char *buf, int b
0026730: 7566 5f6c 656e 2c20 636f 6e73 7420 4153  uf_len, const AS
0026740: 4e31 5f4f 424a 4543 5420 2a61 2c20 696e  N1_OBJECT *a, in
0026750: 7420 6e6f 5f6e 616d 6529 3b0a 696e 7420  t no_name);.int 
0026760: 4f42 4a5f 7478 7432 6e69 6428 636f 6e73  OBJ_txt2nid(cons
0026770: 7420 6368 6172 202a 7329 3b0a 696e 7420  t char *s);.int 
0026780: 4f42 4a5f 6c6e 326e 6964 2863 6f6e 7374  OBJ_ln2nid(const
0026790: 2063 6861 7220 2a73 293b 0a69 6e74 204f   char *s);.int O
00267a0: 424a 5f73 6e32 6e69 6428 636f 6e73 7420  BJ_sn2nid(const 
00267b0: 6368 6172 202a 7329 3b0a 696e 7420 4f42  char *s);.int OB
00267c0: 4a5f 636d 7028 636f 6e73 7420 4153 4e31  J_cmp(const ASN1
00267d0: 5f4f 424a 4543 5420 2a61 2c63 6f6e 7374  _OBJECT *a,const
00267e0: 2041 534e 315f 4f42 4a45 4354 202a 6229   ASN1_OBJECT *b)
00267f0: 3b0a 636f 6e73 7420 766f 6964 202a 204f  ;.const void * O
0026800: 424a 5f62 7365 6172 6368 5f28 636f 6e73  BJ_bsearch_(cons
0026810: 7420 766f 6964 202a 6b65 792c 636f 6e73  t void *key,cons
0026820: 7420 766f 6964 202a 6261 7365 2c69 6e74  t void *base,int
0026830: 206e 756d 2c69 6e74 2073 697a 652c 0a20   num,int size,. 
0026840: 2020 2020 2020 2069 6e74 2028 2a63 6d70         int (*cmp
0026850: 2928 636f 6e73 7420 766f 6964 202a 2c20  )(const void *, 
0026860: 636f 6e73 7420 766f 6964 202a 2929 3b0a  const void *));.
0026870: 636f 6e73 7420 766f 6964 202a 204f 424a  const void * OBJ
0026880: 5f62 7365 6172 6368 5f65 785f 2863 6f6e  _bsearch_ex_(con
0026890: 7374 2076 6f69 6420 2a6b 6579 2c63 6f6e  st void *key,con
00268a0: 7374 2076 6f69 6420 2a62 6173 652c 696e  st void *base,in
00268b0: 7420 6e75 6d2c 0a20 2020 2069 6e74 2073  t num,.    int s
00268c0: 697a 652c 0a20 2020 2069 6e74 2028 2a63  ize,.    int (*c
00268d0: 6d70 2928 636f 6e73 7420 766f 6964 202a  mp)(const void *
00268e0: 2c20 636f 6e73 7420 766f 6964 202a 292c  , const void *),
00268f0: 0a20 2020 2069 6e74 2066 6c61 6773 293b  .    int flags);
0026900: 0a23 2031 3130 3020 222f 7573 722f 696e  .# 1100 "/usr/in
0026910: 636c 7564 652f 6f70 656e 7373 6c2f 6f62  clude/openssl/ob
0026920: 6a65 6374 732e 6822 2033 2034 0a69 6e74  jects.h" 3 4.int
0026930: 204f 424a 5f6e 6577 5f6e 6964 2869 6e74   OBJ_new_nid(int
0026940: 206e 756d 293b 0a69 6e74 204f 424a 5f61   num);.int OBJ_a
0026950: 6464 5f6f 626a 6563 7428 636f 6e73 7420  dd_object(const 
0026960: 4153 4e31 5f4f 424a 4543 5420 2a6f 626a  ASN1_OBJECT *obj
0026970: 293b 0a69 6e74 204f 424a 5f63 7265 6174  );.int OBJ_creat
0026980: 6528 636f 6e73 7420 6368 6172 202a 6f69  e(const char *oi
0026990: 642c 636f 6e73 7420 6368 6172 202a 736e  d,const char *sn
00269a0: 2c63 6f6e 7374 2063 6861 7220 2a6c 6e29  ,const char *ln)
00269b0: 3b0a 766f 6964 204f 424a 5f63 6c65 616e  ;.void OBJ_clean
00269c0: 7570 2876 6f69 6420 293b 0a69 6e74 204f  up(void );.int O
00269d0: 424a 5f63 7265 6174 655f 6f62 6a65 6374  BJ_create_object
00269e0: 7328 4249 4f20 2a69 6e29 3b0a 0a69 6e74  s(BIO *in);..int
00269f0: 204f 424a 5f66 696e 645f 7369 6769 645f   OBJ_find_sigid_
0026a00: 616c 6773 2869 6e74 2073 6967 6e69 642c  algs(int signid,
0026a10: 2069 6e74 202a 7064 6967 5f6e 6964 2c20   int *pdig_nid, 
0026a20: 696e 7420 2a70 706b 6579 5f6e 6964 293b  int *ppkey_nid);
0026a30: 0a69 6e74 204f 424a 5f66 696e 645f 7369  .int OBJ_find_si
0026a40: 6769 645f 6279 5f61 6c67 7328 696e 7420  gid_by_algs(int 
0026a50: 2a70 7369 676e 6964 2c20 696e 7420 6469  *psignid, int di
0026a60: 675f 6e69 642c 2069 6e74 2070 6b65 795f  g_nid, int pkey_
0026a70: 6e69 6429 3b0a 696e 7420 4f42 4a5f 6164  nid);.int OBJ_ad
0026a80: 645f 7369 6769 6428 696e 7420 7369 676e  d_sigid(int sign
0026a90: 6964 2c20 696e 7420 6469 675f 6964 2c20  id, int dig_id, 
0026aa0: 696e 7420 706b 6579 5f69 6429 3b0a 766f  int pkey_id);.vo
0026ab0: 6964 204f 424a 5f73 6967 6964 5f66 7265  id OBJ_sigid_fre
0026ac0: 6528 766f 6964 293b 0a0a 6578 7465 726e  e(void);..extern
0026ad0: 2069 6e74 206f 626a 5f63 6c65 616e 7570   int obj_cleanup
0026ae0: 5f64 6566 6572 3b0a 766f 6964 2063 6865  _defer;.void che
0026af0: 636b 5f64 6566 6572 2869 6e74 206e 6964  ck_defer(int nid
0026b00: 293b 0a0a 0a0a 0a0a 766f 6964 2045 5252  );......void ERR
0026b10: 5f6c 6f61 645f 4f42 4a5f 7374 7269 6e67  _load_OBJ_string
0026b20: 7328 766f 6964 293b 0a23 2039 3920 222f  s(void);.# 99 "/
0026b30: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
0026b40: 7373 6c2f 6576 702e 6822 2032 2033 2034  ssl/evp.h" 2 3 4
0026b50: 0a23 2031 3332 2022 2f75 7372 2f69 6e63  .# 132 "/usr/inc
0026b60: 6c75 6465 2f6f 7065 6e73 736c 2f65 7670  lude/openssl/evp
0026b70: 2e68 2220 3320 340a 7374 7275 6374 2065  .h" 3 4.struct e
0026b80: 7670 5f70 6b65 795f 7374 0a20 7b0a 2069  vp_pkey_st. {. i
0026b90: 6e74 2074 7970 653b 0a20 696e 7420 7361  nt type;. int sa
0026ba0: 7665 5f74 7970 653b 0a20 696e 7420 7265  ve_type;. int re
0026bb0: 6665 7265 6e63 6573 3b0a 2063 6f6e 7374  ferences;. const
0026bc0: 2045 5650 5f50 4b45 595f 4153 4e31 5f4d   EVP_PKEY_ASN1_M
0026bd0: 4554 484f 4420 2a61 6d65 7468 3b0a 2045  ETHOD *ameth;. E
0026be0: 4e47 494e 4520 2a65 6e67 696e 653b 0a20  NGINE *engine;. 
0026bf0: 756e 696f 6e20 7b0a 2020 6368 6172 202a  union {.  char *
0026c00: 7074 723b 0a0a 2020 7374 7275 6374 2072  ptr;..  struct r
0026c10: 7361 5f73 7420 2a72 7361 3b0a 0a0a 2020  sa_st *rsa;...  
0026c20: 7374 7275 6374 2064 7361 5f73 7420 2a64  struct dsa_st *d
0026c30: 7361 3b0a 0a0a 2020 7374 7275 6374 2064  sa;...  struct d
0026c40: 685f 7374 202a 6468 3b0a 0a0a 2020 7374  h_st *dh;...  st
0026c50: 7275 6374 2065 635f 6b65 795f 7374 202a  ruct ec_key_st *
0026c60: 6563 3b0a 0a20 207d 2070 6b65 793b 0a20  ec;..  } pkey;. 
0026c70: 696e 7420 7361 7665 5f70 6172 616d 6574  int save_paramet
0026c80: 6572 733b 0a20 7374 7275 6374 2073 7461  ers;. struct sta
0026c90: 636b 5f73 745f 5835 3039 5f41 5454 5249  ck_st_X509_ATTRI
0026ca0: 4255 5445 202a 6174 7472 6962 7574 6573  BUTE *attributes
0026cb0: 3b0a 207d 203b 0a0a 0a0a 0a0a 0a0a 7374  ;. } ;........st
0026cc0: 7275 6374 2065 6e76 5f6d 645f 7374 0a20  ruct env_md_st. 
0026cd0: 7b0a 2069 6e74 2074 7970 653b 0a20 696e  {. int type;. in
0026ce0: 7420 706b 6579 5f74 7970 653b 0a20 696e  t pkey_type;. in
0026cf0: 7420 6d64 5f73 697a 653b 0a20 756e 7369  t md_size;. unsi
0026d00: 676e 6564 206c 6f6e 6720 666c 6167 733b  gned long flags;
0026d10: 0a20 696e 7420 282a 696e 6974 2928 4556  . int (*init)(EV
0026d20: 505f 4d44 5f43 5458 202a 6374 7829 3b0a  P_MD_CTX *ctx);.
0026d30: 2069 6e74 2028 2a75 7064 6174 6529 2845   int (*update)(E
0026d40: 5650 5f4d 445f 4354 5820 2a63 7478 2c63  VP_MD_CTX *ctx,c
0026d50: 6f6e 7374 2076 6f69 6420 2a64 6174 612c  onst void *data,
0026d60: 7369 7a65 5f74 2063 6f75 6e74 293b 0a20  size_t count);. 
0026d70: 696e 7420 282a 6669 6e61 6c29 2845 5650  int (*final)(EVP
0026d80: 5f4d 445f 4354 5820 2a63 7478 2c75 6e73  _MD_CTX *ctx,uns
0026d90: 6967 6e65 6420 6368 6172 202a 6d64 293b  igned char *md);
0026da0: 0a20 696e 7420 282a 636f 7079 2928 4556  . int (*copy)(EV
0026db0: 505f 4d44 5f43 5458 202a 746f 2c63 6f6e  P_MD_CTX *to,con
0026dc0: 7374 2045 5650 5f4d 445f 4354 5820 2a66  st EVP_MD_CTX *f
0026dd0: 726f 6d29 3b0a 2069 6e74 2028 2a63 6c65  rom);. int (*cle
0026de0: 616e 7570 2928 4556 505f 4d44 5f43 5458  anup)(EVP_MD_CTX
0026df0: 202a 6374 7829 3b0a 0a0a 2069 6e74 2028   *ctx);... int (
0026e00: 2a73 6967 6e29 2869 6e74 2074 7970 652c  *sign)(int type,
0026e10: 2063 6f6e 7374 2075 6e73 6967 6e65 6420   const unsigned 
0026e20: 6368 6172 202a 6d2c 2075 6e73 6967 6e65  char *m, unsigne
0026e30: 6420 696e 7420 6d5f 6c65 6e67 7468 2c0a  d int m_length,.
0026e40: 2020 2020 2020 756e 7369 676e 6564 2063        unsigned c
0026e50: 6861 7220 2a73 6967 7265 742c 2075 6e73  har *sigret, uns
0026e60: 6967 6e65 6420 696e 7420 2a73 6967 6c65  igned int *sigle
0026e70: 6e2c 2076 6f69 6420 2a6b 6579 293b 0a20  n, void *key);. 
0026e80: 696e 7420 282a 7665 7269 6679 2928 696e  int (*verify)(in
0026e90: 7420 7479 7065 2c20 636f 6e73 7420 756e  t type, const un
0026ea0: 7369 676e 6564 2063 6861 7220 2a6d 2c20  signed char *m, 
0026eb0: 756e 7369 676e 6564 2069 6e74 206d 5f6c  unsigned int m_l
0026ec0: 656e 6774 682c 0a20 2020 2020 2020 2063  ength,.        c
0026ed0: 6f6e 7374 2075 6e73 6967 6e65 6420 6368  onst unsigned ch
0026ee0: 6172 202a 7369 6762 7566 2c20 756e 7369  ar *sigbuf, unsi
0026ef0: 676e 6564 2069 6e74 2073 6967 6c65 6e2c  gned int siglen,
0026f00: 0a20 2020 2020 2020 2076 6f69 6420 2a6b  .        void *k
0026f10: 6579 293b 0a20 696e 7420 7265 7175 6972  ey);. int requir
0026f20: 6564 5f70 6b65 795f 7479 7065 5b35 5d3b  ed_pkey_type[5];
0026f30: 0a20 696e 7420 626c 6f63 6b5f 7369 7a65  . int block_size
0026f40: 3b0a 2069 6e74 2063 7478 5f73 697a 653b  ;. int ctx_size;
0026f50: 0a0a 2069 6e74 2028 2a6d 645f 6374 726c  .. int (*md_ctrl
0026f60: 2928 4556 505f 4d44 5f43 5458 202a 6374  )(EVP_MD_CTX *ct
0026f70: 782c 2069 6e74 2063 6d64 2c20 696e 7420  x, int cmd, int 
0026f80: 7031 2c20 766f 6964 202a 7032 293b 0a20  p1, void *p2);. 
0026f90: 7d20 3b0a 0a74 7970 6564 6566 2069 6e74  } ;..typedef int
0026fa0: 2065 7670 5f73 6967 6e5f 6d65 7468 6f64   evp_sign_method
0026fb0: 2869 6e74 2074 7970 652c 636f 6e73 7420  (int type,const 
0026fc0: 756e 7369 676e 6564 2063 6861 7220 2a6d  unsigned char *m
0026fd0: 2c0a 2020 2020 2020 2075 6e73 6967 6e65  ,.       unsigne
0026fe0: 6420 696e 7420 6d5f 6c65 6e67 7468 2c75  d int m_length,u
0026ff0: 6e73 6967 6e65 6420 6368 6172 202a 7369  nsigned char *si
0027000: 6772 6574 2c0a 2020 2020 2020 2075 6e73  gret,.       uns
0027010: 6967 6e65 6420 696e 7420 2a73 6967 6c65  igned int *sigle
0027020: 6e2c 2076 6f69 6420 2a6b 6579 293b 0a74  n, void *key);.t
0027030: 7970 6564 6566 2069 6e74 2065 7670 5f76  ypedef int evp_v
0027040: 6572 6966 795f 6d65 7468 6f64 2869 6e74  erify_method(int
0027050: 2074 7970 652c 636f 6e73 7420 756e 7369   type,const unsi
0027060: 676e 6564 2063 6861 7220 2a6d 2c0a 2020  gned char *m,.  
0027070: 2020 2020 2075 6e73 6967 6e65 6420 696e       unsigned in
0027080: 7420 6d5f 6c65 6e67 7468 2c63 6f6e 7374  t m_length,const
0027090: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
00270a0: 7369 6762 7566 2c0a 2020 2020 2020 2075  sigbuf,.       u
00270b0: 6e73 6967 6e65 6420 696e 7420 7369 676c  nsigned int sigl
00270c0: 656e 2c20 766f 6964 202a 6b65 7929 3b0a  en, void *key);.
00270d0: 2320 3236 3920 222f 7573 722f 696e 636c  # 269 "/usr/incl
00270e0: 7564 652f 6f70 656e 7373 6c2f 6576 702e  ude/openssl/evp.
00270f0: 6822 2033 2034 0a73 7472 7563 7420 656e  h" 3 4.struct en
0027100: 765f 6d64 5f63 7478 5f73 740a 207b 0a20  v_md_ctx_st. {. 
0027110: 636f 6e73 7420 4556 505f 4d44 202a 6469  const EVP_MD *di
0027120: 6765 7374 3b0a 2045 4e47 494e 4520 2a65  gest;. ENGINE *e
0027130: 6e67 696e 653b 0a20 756e 7369 676e 6564  ngine;. unsigned
0027140: 206c 6f6e 6720 666c 6167 733b 0a20 766f   long flags;. vo
0027150: 6964 202a 6d64 5f64 6174 613b 0a0a 2045  id *md_data;.. E
0027160: 5650 5f50 4b45 595f 4354 5820 2a70 6374  VP_PKEY_CTX *pct
0027170: 783b 0a0a 2069 6e74 2028 2a75 7064 6174  x;.. int (*updat
0027180: 6529 2845 5650 5f4d 445f 4354 5820 2a63  e)(EVP_MD_CTX *c
0027190: 7478 2c63 6f6e 7374 2076 6f69 6420 2a64  tx,const void *d
00271a0: 6174 612c 7369 7a65 5f74 2063 6f75 6e74  ata,size_t count
00271b0: 293b 0a20 7d20 3b0a 2320 3330 3720 222f  );. } ;.# 307 "/
00271c0: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
00271d0: 7373 6c2f 6576 702e 6822 2033 2034 0a73  ssl/evp.h" 3 4.s
00271e0: 7472 7563 7420 6576 705f 6369 7068 6572  truct evp_cipher
00271f0: 5f73 740a 207b 0a20 696e 7420 6e69 643b  _st. {. int nid;
0027200: 0a20 696e 7420 626c 6f63 6b5f 7369 7a65  . int block_size
0027210: 3b0a 2069 6e74 206b 6579 5f6c 656e 3b0a  ;. int key_len;.
0027220: 2069 6e74 2069 765f 6c65 6e3b 0a20 756e   int iv_len;. un
0027230: 7369 676e 6564 206c 6f6e 6720 666c 6167  signed long flag
0027240: 733b 0a20 696e 7420 282a 696e 6974 2928  s;. int (*init)(
0027250: 4556 505f 4349 5048 4552 5f43 5458 202a  EVP_CIPHER_CTX *
0027260: 6374 782c 2063 6f6e 7374 2075 6e73 6967  ctx, const unsig
0027270: 6e65 6420 6368 6172 202a 6b65 792c 0a20  ned char *key,. 
0027280: 2020 2020 2063 6f6e 7374 2075 6e73 6967       const unsig
0027290: 6e65 6420 6368 6172 202a 6976 2c20 696e  ned char *iv, in
00272a0: 7420 656e 6329 3b0a 2069 6e74 2028 2a64  t enc);. int (*d
00272b0: 6f5f 6369 7068 6572 2928 4556 505f 4349  o_cipher)(EVP_CI
00272c0: 5048 4552 5f43 5458 202a 6374 782c 2075  PHER_CTX *ctx, u
00272d0: 6e73 6967 6e65 6420 6368 6172 202a 6f75  nsigned char *ou
00272e0: 742c 0a20 2020 2063 6f6e 7374 2075 6e73  t,.    const uns
00272f0: 6967 6e65 6420 6368 6172 202a 696e 2c20  igned char *in, 
0027300: 7369 7a65 5f74 2069 6e6c 293b 0a20 696e  size_t inl);. in
0027310: 7420 282a 636c 6561 6e75 7029 2845 5650  t (*cleanup)(EVP
0027320: 5f43 4950 4845 525f 4354 5820 2a29 3b0a  _CIPHER_CTX *);.
0027330: 2069 6e74 2063 7478 5f73 697a 653b 0a20   int ctx_size;. 
0027340: 696e 7420 282a 7365 745f 6173 6e31 5f70  int (*set_asn1_p
0027350: 6172 616d 6574 6572 7329 2845 5650 5f43  arameters)(EVP_C
0027360: 4950 4845 525f 4354 5820 2a2c 2041 534e  IPHER_CTX *, ASN
0027370: 315f 5459 5045 202a 293b 0a20 696e 7420  1_TYPE *);. int 
0027380: 282a 6765 745f 6173 6e31 5f70 6172 616d  (*get_asn1_param
0027390: 6574 6572 7329 2845 5650 5f43 4950 4845  eters)(EVP_CIPHE
00273a0: 525f 4354 5820 2a2c 2041 534e 315f 5459  R_CTX *, ASN1_TY
00273b0: 5045 202a 293b 0a20 696e 7420 282a 6374  PE *);. int (*ct
00273c0: 726c 2928 4556 505f 4349 5048 4552 5f43  rl)(EVP_CIPHER_C
00273d0: 5458 202a 2c20 696e 7420 7479 7065 2c20  TX *, int type, 
00273e0: 696e 7420 6172 672c 2076 6f69 6420 2a70  int arg, void *p
00273f0: 7472 293b 0a20 766f 6964 202a 6170 705f  tr);. void *app_
0027400: 6461 7461 3b0a 207d 203b 0a23 2034 3137  data;. } ;.# 417
0027410: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
0027420: 7065 6e73 736c 2f65 7670 2e68 2220 3320  penssl/evp.h" 3 
0027430: 340a 7479 7065 6465 6620 7374 7275 6374  4.typedef struct
0027440: 2065 7670 5f63 6970 6865 725f 696e 666f   evp_cipher_info
0027450: 5f73 740a 207b 0a20 636f 6e73 7420 4556  _st. {. const EV
0027460: 505f 4349 5048 4552 202a 6369 7068 6572  P_CIPHER *cipher
0027470: 3b0a 2075 6e73 6967 6e65 6420 6368 6172  ;. unsigned char
0027480: 2069 765b 3136 5d3b 0a20 7d20 4556 505f   iv[16];. } EVP_
0027490: 4349 5048 4552 5f49 4e46 4f3b 0a0a 7374  CIPHER_INFO;..st
00274a0: 7275 6374 2065 7670 5f63 6970 6865 725f  ruct evp_cipher_
00274b0: 6374 785f 7374 0a20 7b0a 2063 6f6e 7374  ctx_st. {. const
00274c0: 2045 5650 5f43 4950 4845 5220 2a63 6970   EVP_CIPHER *cip
00274d0: 6865 723b 0a20 454e 4749 4e45 202a 656e  her;. ENGINE *en
00274e0: 6769 6e65 3b0a 2069 6e74 2065 6e63 7279  gine;. int encry
00274f0: 7074 3b0a 2069 6e74 2062 7566 5f6c 656e  pt;. int buf_len
0027500: 3b0a 0a20 756e 7369 676e 6564 2063 6861  ;.. unsigned cha
0027510: 7220 6f69 765b 3136 5d3b 0a20 756e 7369  r oiv[16];. unsi
0027520: 676e 6564 2063 6861 7220 6976 5b31 365d  gned char iv[16]
0027530: 3b0a 2075 6e73 6967 6e65 6420 6368 6172  ;. unsigned char
0027540: 2062 7566 5b33 325d 3b0a 2069 6e74 206e   buf[32];. int n
0027550: 756d 3b0a 0a20 766f 6964 202a 6170 705f  um;.. void *app_
0027560: 6461 7461 3b0a 2069 6e74 206b 6579 5f6c  data;. int key_l
0027570: 656e 3b0a 2075 6e73 6967 6e65 6420 6c6f  en;. unsigned lo
0027580: 6e67 2066 6c61 6773 3b0a 2076 6f69 6420  ng flags;. void 
0027590: 2a63 6970 6865 725f 6461 7461 3b0a 2069  *cipher_data;. i
00275a0: 6e74 2066 696e 616c 5f75 7365 643b 0a20  nt final_used;. 
00275b0: 696e 7420 626c 6f63 6b5f 6d61 736b 3b0a  int block_mask;.
00275c0: 2075 6e73 6967 6e65 6420 6368 6172 2066   unsigned char f
00275d0: 696e 616c 5b33 325d 3b0a 207d 203b 0a0a  inal[32];. } ;..
00275e0: 7479 7065 6465 6620 7374 7275 6374 2065  typedef struct e
00275f0: 7670 5f45 6e63 6f64 655f 4374 785f 7374  vp_Encode_Ctx_st
0027600: 0a20 7b0a 2069 6e74 206e 756d 3b0a 2069  . {. int num;. i
0027610: 6e74 206c 656e 6774 683b 0a0a 0a0a 0a20  nt length;..... 
0027620: 756e 7369 676e 6564 2063 6861 7220 656e  unsigned char en
0027630: 635f 6461 7461 5b38 305d 3b0a 2069 6e74  c_data[80];. int
0027640: 206c 696e 655f 6e75 6d3b 0a20 696e 7420   line_num;. int 
0027650: 6578 7065 6374 5f6e 6c3b 0a20 7d20 4556  expect_nl;. } EV
0027660: 505f 454e 434f 4445 5f43 5458 3b0a 0a0a  P_ENCODE_CTX;...
0027670: 7479 7065 6465 6620 696e 7420 2845 5650  typedef int (EVP
0027680: 5f50 4245 5f4b 4559 4745 4e29 2845 5650  _PBE_KEYGEN)(EVP
0027690: 5f43 4950 4845 525f 4354 5820 2a63 7478  _CIPHER_CTX *ctx
00276a0: 2c20 636f 6e73 7420 6368 6172 202a 7061  , const char *pa
00276b0: 7373 2c20 696e 7420 7061 7373 6c65 6e2c  ss, int passlen,
00276c0: 0a20 2041 534e 315f 5459 5045 202a 7061  .  ASN1_TYPE *pa
00276d0: 7261 6d2c 2063 6f6e 7374 2045 5650 5f43  ram, const EVP_C
00276e0: 4950 4845 5220 2a63 6970 6865 722c 0a20  IPHER *cipher,. 
00276f0: 2020 2020 2020 2020 2020 2020 2020 2063                 c
0027700: 6f6e 7374 2045 5650 5f4d 4420 2a6d 642c  onst EVP_MD *md,
0027710: 2069 6e74 2065 6e5f 6465 293b 0a23 2034   int en_de);.# 4
0027720: 3838 2022 2f75 7372 2f69 6e63 6c75 6465  88 "/usr/include
0027730: 2f6f 7065 6e73 736c 2f65 7670 2e68 2220  /openssl/evp.h" 
0027740: 3320 340a 696e 7420 4556 505f 4d44 5f74  3 4.int EVP_MD_t
0027750: 7970 6528 636f 6e73 7420 4556 505f 4d44  ype(const EVP_MD
0027760: 202a 6d64 293b 0a0a 0a69 6e74 2045 5650   *md);...int EVP
0027770: 5f4d 445f 706b 6579 5f74 7970 6528 636f  _MD_pkey_type(co
0027780: 6e73 7420 4556 505f 4d44 202a 6d64 293b  nst EVP_MD *md);
0027790: 0a69 6e74 2045 5650 5f4d 445f 7369 7a65  .int EVP_MD_size
00277a0: 2863 6f6e 7374 2045 5650 5f4d 4420 2a6d  (const EVP_MD *m
00277b0: 6429 3b0a 696e 7420 4556 505f 4d44 5f62  d);.int EVP_MD_b
00277c0: 6c6f 636b 5f73 697a 6528 636f 6e73 7420  lock_size(const 
00277d0: 4556 505f 4d44 202a 6d64 293b 0a75 6e73  EVP_MD *md);.uns
00277e0: 6967 6e65 6420 6c6f 6e67 2045 5650 5f4d  igned long EVP_M
00277f0: 445f 666c 6167 7328 636f 6e73 7420 4556  D_flags(const EV
0027800: 505f 4d44 202a 6d64 293b 0a0a 636f 6e73  P_MD *md);..cons
0027810: 7420 4556 505f 4d44 202a 4556 505f 4d44  t EVP_MD *EVP_MD
0027820: 5f43 5458 5f6d 6428 636f 6e73 7420 4556  _CTX_md(const EV
0027830: 505f 4d44 5f43 5458 202a 6374 7829 3b0a  P_MD_CTX *ctx);.
0027840: 0a0a 0a0a 696e 7420 4556 505f 4349 5048  ....int EVP_CIPH
0027850: 4552 5f6e 6964 2863 6f6e 7374 2045 5650  ER_nid(const EVP
0027860: 5f43 4950 4845 5220 2a63 6970 6865 7229  _CIPHER *cipher)
0027870: 3b0a 0a69 6e74 2045 5650 5f43 4950 4845  ;..int EVP_CIPHE
0027880: 525f 626c 6f63 6b5f 7369 7a65 2863 6f6e  R_block_size(con
0027890: 7374 2045 5650 5f43 4950 4845 5220 2a63  st EVP_CIPHER *c
00278a0: 6970 6865 7229 3b0a 696e 7420 4556 505f  ipher);.int EVP_
00278b0: 4349 5048 4552 5f6b 6579 5f6c 656e 6774  CIPHER_key_lengt
00278c0: 6828 636f 6e73 7420 4556 505f 4349 5048  h(const EVP_CIPH
00278d0: 4552 202a 6369 7068 6572 293b 0a69 6e74  ER *cipher);.int
00278e0: 2045 5650 5f43 4950 4845 525f 6976 5f6c   EVP_CIPHER_iv_l
00278f0: 656e 6774 6828 636f 6e73 7420 4556 505f  ength(const EVP_
0027900: 4349 5048 4552 202a 6369 7068 6572 293b  CIPHER *cipher);
0027910: 0a75 6e73 6967 6e65 6420 6c6f 6e67 2045  .unsigned long E
0027920: 5650 5f43 4950 4845 525f 666c 6167 7328  VP_CIPHER_flags(
0027930: 636f 6e73 7420 4556 505f 4349 5048 4552  const EVP_CIPHER
0027940: 202a 6369 7068 6572 293b 0a0a 0a63 6f6e   *cipher);...con
0027950: 7374 2045 5650 5f43 4950 4845 5220 2a20  st EVP_CIPHER * 
0027960: 4556 505f 4349 5048 4552 5f43 5458 5f63  EVP_CIPHER_CTX_c
0027970: 6970 6865 7228 636f 6e73 7420 4556 505f  ipher(const EVP_
0027980: 4349 5048 4552 5f43 5458 202a 6374 7829  CIPHER_CTX *ctx)
0027990: 3b0a 696e 7420 4556 505f 4349 5048 4552  ;.int EVP_CIPHER
00279a0: 5f43 5458 5f6e 6964 2863 6f6e 7374 2045  _CTX_nid(const E
00279b0: 5650 5f43 4950 4845 525f 4354 5820 2a63  VP_CIPHER_CTX *c
00279c0: 7478 293b 0a69 6e74 2045 5650 5f43 4950  tx);.int EVP_CIP
00279d0: 4845 525f 4354 585f 626c 6f63 6b5f 7369  HER_CTX_block_si
00279e0: 7a65 2863 6f6e 7374 2045 5650 5f43 4950  ze(const EVP_CIP
00279f0: 4845 525f 4354 5820 2a63 7478 293b 0a69  HER_CTX *ctx);.i
0027a00: 6e74 2045 5650 5f43 4950 4845 525f 4354  nt EVP_CIPHER_CT
0027a10: 585f 6b65 795f 6c65 6e67 7468 2863 6f6e  X_key_length(con
0027a20: 7374 2045 5650 5f43 4950 4845 525f 4354  st EVP_CIPHER_CT
0027a30: 5820 2a63 7478 293b 0a69 6e74 2045 5650  X *ctx);.int EVP
0027a40: 5f43 4950 4845 525f 4354 585f 6976 5f6c  _CIPHER_CTX_iv_l
0027a50: 656e 6774 6828 636f 6e73 7420 4556 505f  ength(const EVP_
0027a60: 4349 5048 4552 5f43 5458 202a 6374 7829  CIPHER_CTX *ctx)
0027a70: 3b0a 696e 7420 4556 505f 4349 5048 4552  ;.int EVP_CIPHER
0027a80: 5f43 5458 5f63 6f70 7928 4556 505f 4349  _CTX_copy(EVP_CI
0027a90: 5048 4552 5f43 5458 202a 6f75 742c 2063  PHER_CTX *out, c
0027aa0: 6f6e 7374 2045 5650 5f43 4950 4845 525f  onst EVP_CIPHER_
0027ab0: 4354 5820 2a69 6e29 3b0a 766f 6964 202a  CTX *in);.void *
0027ac0: 2045 5650 5f43 4950 4845 525f 4354 585f   EVP_CIPHER_CTX_
0027ad0: 6765 745f 6170 705f 6461 7461 2863 6f6e  get_app_data(con
0027ae0: 7374 2045 5650 5f43 4950 4845 525f 4354  st EVP_CIPHER_CT
0027af0: 5820 2a63 7478 293b 0a76 6f69 6420 4556  X *ctx);.void EV
0027b00: 505f 4349 5048 4552 5f43 5458 5f73 6574  P_CIPHER_CTX_set
0027b10: 5f61 7070 5f64 6174 6128 4556 505f 4349  _app_data(EVP_CI
0027b20: 5048 4552 5f43 5458 202a 6374 782c 2076  PHER_CTX *ctx, v
0027b30: 6f69 6420 2a64 6174 6129 3b0a 0a75 6e73  oid *data);..uns
0027b40: 6967 6e65 6420 6c6f 6e67 2045 5650 5f43  igned long EVP_C
0027b50: 4950 4845 525f 4354 585f 666c 6167 7328  IPHER_CTX_flags(
0027b60: 636f 6e73 7420 4556 505f 4349 5048 4552  const EVP_CIPHER
0027b70: 5f43 5458 202a 6374 7829 3b0a 2320 3534  _CTX *ctx);.# 54
0027b80: 3620 222f 7573 722f 696e 636c 7564 652f  6 "/usr/include/
0027b90: 6f70 656e 7373 6c2f 6576 702e 6822 2033  openssl/evp.h" 3
0027ba0: 2034 0a69 6e74 2045 5650 5f43 6970 6865   4.int EVP_Ciphe
0027bb0: 7228 4556 505f 4349 5048 4552 5f43 5458  r(EVP_CIPHER_CTX
0027bc0: 202a 632c 0a20 2075 6e73 6967 6e65 6420   *c,.  unsigned 
0027bd0: 6368 6172 202a 6f75 742c 0a20 2063 6f6e  char *out,.  con
0027be0: 7374 2075 6e73 6967 6e65 6420 6368 6172  st unsigned char
0027bf0: 202a 696e 2c0a 2020 756e 7369 676e 6564   *in,.  unsigned
0027c00: 2069 6e74 2069 6e6c 293b 0a23 2035 3630   int inl);.# 560
0027c10: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
0027c20: 7065 6e73 736c 2f65 7670 2e68 2220 3320  penssl/evp.h" 3 
0027c30: 340a 766f 6964 2045 5650 5f4d 445f 4354  4.void EVP_MD_CT
0027c40: 585f 696e 6974 2845 5650 5f4d 445f 4354  X_init(EVP_MD_CT
0027c50: 5820 2a63 7478 293b 0a69 6e74 2045 5650  X *ctx);.int EVP
0027c60: 5f4d 445f 4354 585f 636c 6561 6e75 7028  _MD_CTX_cleanup(
0027c70: 4556 505f 4d44 5f43 5458 202a 6374 7829  EVP_MD_CTX *ctx)
0027c80: 3b0a 4556 505f 4d44 5f43 5458 202a 4556  ;.EVP_MD_CTX *EV
0027c90: 505f 4d44 5f43 5458 5f63 7265 6174 6528  P_MD_CTX_create(
0027ca0: 766f 6964 293b 0a76 6f69 6420 4556 505f  void);.void EVP_
0027cb0: 4d44 5f43 5458 5f64 6573 7472 6f79 2845  MD_CTX_destroy(E
0027cc0: 5650 5f4d 445f 4354 5820 2a63 7478 293b  VP_MD_CTX *ctx);
0027cd0: 0a69 6e74 2045 5650 5f4d 445f 4354 585f  .int EVP_MD_CTX_
0027ce0: 636f 7079 5f65 7828 4556 505f 4d44 5f43  copy_ex(EVP_MD_C
0027cf0: 5458 202a 6f75 742c 636f 6e73 7420 4556  TX *out,const EV
0027d00: 505f 4d44 5f43 5458 202a 696e 293b 0a76  P_MD_CTX *in);.v
0027d10: 6f69 6420 4556 505f 4d44 5f43 5458 5f73  oid EVP_MD_CTX_s
0027d20: 6574 5f66 6c61 6773 2845 5650 5f4d 445f  et_flags(EVP_MD_
0027d30: 4354 5820 2a63 7478 2c20 696e 7420 666c  CTX *ctx, int fl
0027d40: 6167 7329 3b0a 766f 6964 2045 5650 5f4d  ags);.void EVP_M
0027d50: 445f 4354 585f 636c 6561 725f 666c 6167  D_CTX_clear_flag
0027d60: 7328 4556 505f 4d44 5f43 5458 202a 6374  s(EVP_MD_CTX *ct
0027d70: 782c 2069 6e74 2066 6c61 6773 293b 0a69  x, int flags);.i
0027d80: 6e74 2045 5650 5f4d 445f 4354 585f 7465  nt EVP_MD_CTX_te
0027d90: 7374 5f66 6c61 6773 2863 6f6e 7374 2045  st_flags(const E
0027da0: 5650 5f4d 445f 4354 5820 2a63 7478 2c69  VP_MD_CTX *ctx,i
0027db0: 6e74 2066 6c61 6773 293b 0a69 6e74 2045  nt flags);.int E
0027dc0: 5650 5f44 6967 6573 7449 6e69 745f 6578  VP_DigestInit_ex
0027dd0: 2845 5650 5f4d 445f 4354 5820 2a63 7478  (EVP_MD_CTX *ctx
0027de0: 2c20 636f 6e73 7420 4556 505f 4d44 202a  , const EVP_MD *
0027df0: 7479 7065 2c20 454e 4749 4e45 202a 696d  type, ENGINE *im
0027e00: 706c 293b 0a69 6e74 2045 5650 5f44 6967  pl);.int EVP_Dig
0027e10: 6573 7455 7064 6174 6528 4556 505f 4d44  estUpdate(EVP_MD
0027e20: 5f43 5458 202a 6374 782c 636f 6e73 7420  _CTX *ctx,const 
0027e30: 766f 6964 202a 642c 0a20 2020 2073 697a  void *d,.    siz
0027e40: 655f 7420 636e 7429 3b0a 696e 7420 4556  e_t cnt);.int EV
0027e50: 505f 4469 6765 7374 4669 6e61 6c5f 6578  P_DigestFinal_ex
0027e60: 2845 5650 5f4d 445f 4354 5820 2a63 7478  (EVP_MD_CTX *ctx
0027e70: 2c75 6e73 6967 6e65 6420 6368 6172 202a  ,unsigned char *
0027e80: 6d64 2c75 6e73 6967 6e65 6420 696e 7420  md,unsigned int 
0027e90: 2a73 293b 0a69 6e74 2045 5650 5f44 6967  *s);.int EVP_Dig
0027ea0: 6573 7428 636f 6e73 7420 766f 6964 202a  est(const void *
0027eb0: 6461 7461 2c20 7369 7a65 5f74 2063 6f75  data, size_t cou
0027ec0: 6e74 2c0a 2020 756e 7369 676e 6564 2063  nt,.  unsigned c
0027ed0: 6861 7220 2a6d 642c 2075 6e73 6967 6e65  har *md, unsigne
0027ee0: 6420 696e 7420 2a73 697a 652c 2063 6f6e  d int *size, con
0027ef0: 7374 2045 5650 5f4d 4420 2a74 7970 652c  st EVP_MD *type,
0027f00: 2045 4e47 494e 4520 2a69 6d70 6c29 3b0a   ENGINE *impl);.
0027f10: 0a69 6e74 2045 5650 5f4d 445f 4354 585f  .int EVP_MD_CTX_
0027f20: 636f 7079 2845 5650 5f4d 445f 4354 5820  copy(EVP_MD_CTX 
0027f30: 2a6f 7574 2c63 6f6e 7374 2045 5650 5f4d  *out,const EVP_M
0027f40: 445f 4354 5820 2a69 6e29 3b0a 696e 7420  D_CTX *in);.int 
0027f50: 4556 505f 4469 6765 7374 496e 6974 2845  EVP_DigestInit(E
0027f60: 5650 5f4d 445f 4354 5820 2a63 7478 2c20  VP_MD_CTX *ctx, 
0027f70: 636f 6e73 7420 4556 505f 4d44 202a 7479  const EVP_MD *ty
0027f80: 7065 293b 0a69 6e74 2045 5650 5f44 6967  pe);.int EVP_Dig
0027f90: 6573 7446 696e 616c 2845 5650 5f4d 445f  estFinal(EVP_MD_
0027fa0: 4354 5820 2a63 7478 2c75 6e73 6967 6e65  CTX *ctx,unsigne
0027fb0: 6420 6368 6172 202a 6d64 2c75 6e73 6967  d char *md,unsig
0027fc0: 6e65 6420 696e 7420 2a73 293b 0a0a 696e  ned int *s);..in
0027fd0: 7420 4556 505f 7265 6164 5f70 775f 7374  t EVP_read_pw_st
0027fe0: 7269 6e67 2863 6861 7220 2a62 7566 2c69  ring(char *buf,i
0027ff0: 6e74 206c 656e 6774 682c 636f 6e73 7420  nt length,const 
0028000: 6368 6172 202a 7072 6f6d 7074 2c69 6e74  char *prompt,int
0028010: 2076 6572 6966 7929 3b0a 696e 7420 4556   verify);.int EV
0028020: 505f 7265 6164 5f70 775f 7374 7269 6e67  P_read_pw_string
0028030: 5f6d 696e 2863 6861 7220 2a62 7566 2c69  _min(char *buf,i
0028040: 6e74 206d 696e 6c65 6e2c 696e 7420 6d61  nt minlen,int ma
0028050: 786c 656e 2c63 6f6e 7374 2063 6861 7220  xlen,const char 
0028060: 2a70 726f 6d70 742c 696e 7420 7665 7269  *prompt,int veri
0028070: 6679 293b 0a76 6f69 6420 4556 505f 7365  fy);.void EVP_se
0028080: 745f 7077 5f70 726f 6d70 7428 636f 6e73  t_pw_prompt(cons
0028090: 7420 6368 6172 202a 7072 6f6d 7074 293b  t char *prompt);
00280a0: 0a63 6861 7220 2a20 4556 505f 6765 745f  .char * EVP_get_
00280b0: 7077 5f70 726f 6d70 7428 766f 6964 293b  pw_prompt(void);
00280c0: 0a0a 696e 7420 4556 505f 4279 7465 7354  ..int EVP_BytesT
00280d0: 6f4b 6579 2863 6f6e 7374 2045 5650 5f43  oKey(const EVP_C
00280e0: 4950 4845 5220 2a74 7970 652c 636f 6e73  IPHER *type,cons
00280f0: 7420 4556 505f 4d44 202a 6d64 2c0a 2020  t EVP_MD *md,.  
0028100: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
0028110: 6861 7220 2a73 616c 742c 2063 6f6e 7374  har *salt, const
0028120: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
0028130: 6461 7461 2c0a 2020 696e 7420 6461 7461  data,.  int data
0028140: 6c2c 2069 6e74 2063 6f75 6e74 2c20 756e  l, int count, un
0028150: 7369 676e 6564 2063 6861 7220 2a6b 6579  signed char *key
0028160: 2c75 6e73 6967 6e65 6420 6368 6172 202a  ,unsigned char *
0028170: 6976 293b 0a0a 766f 6964 2045 5650 5f43  iv);..void EVP_C
0028180: 4950 4845 525f 4354 585f 7365 745f 666c  IPHER_CTX_set_fl
0028190: 6167 7328 4556 505f 4349 5048 4552 5f43  ags(EVP_CIPHER_C
00281a0: 5458 202a 6374 782c 2069 6e74 2066 6c61  TX *ctx, int fla
00281b0: 6773 293b 0a76 6f69 6420 4556 505f 4349  gs);.void EVP_CI
00281c0: 5048 4552 5f43 5458 5f63 6c65 6172 5f66  PHER_CTX_clear_f
00281d0: 6c61 6773 2845 5650 5f43 4950 4845 525f  lags(EVP_CIPHER_
00281e0: 4354 5820 2a63 7478 2c20 696e 7420 666c  CTX *ctx, int fl
00281f0: 6167 7329 3b0a 696e 7420 4556 505f 4349  ags);.int EVP_CI
0028200: 5048 4552 5f43 5458 5f74 6573 745f 666c  PHER_CTX_test_fl
0028210: 6167 7328 636f 6e73 7420 4556 505f 4349  ags(const EVP_CI
0028220: 5048 4552 5f43 5458 202a 6374 782c 696e  PHER_CTX *ctx,in
0028230: 7420 666c 6167 7329 3b0a 0a69 6e74 2045  t flags);..int E
0028240: 5650 5f45 6e63 7279 7074 496e 6974 2845  VP_EncryptInit(E
0028250: 5650 5f43 4950 4845 525f 4354 5820 2a63  VP_CIPHER_CTX *c
0028260: 7478 2c63 6f6e 7374 2045 5650 5f43 4950  tx,const EVP_CIP
0028270: 4845 5220 2a63 6970 6865 722c 0a20 2063  HER *cipher,.  c
0028280: 6f6e 7374 2075 6e73 6967 6e65 6420 6368  onst unsigned ch
0028290: 6172 202a 6b65 792c 2063 6f6e 7374 2075  ar *key, const u
00282a0: 6e73 6967 6e65 6420 6368 6172 202a 6976  nsigned char *iv
00282b0: 293b 0a69 6e74 2045 5650 5f45 6e63 7279  );.int EVP_Encry
00282c0: 7074 496e 6974 5f65 7828 4556 505f 4349  ptInit_ex(EVP_CI
00282d0: 5048 4552 5f43 5458 202a 6374 782c 636f  PHER_CTX *ctx,co
00282e0: 6e73 7420 4556 505f 4349 5048 4552 202a  nst EVP_CIPHER *
00282f0: 6369 7068 6572 2c20 454e 4749 4e45 202a  cipher, ENGINE *
0028300: 696d 706c 2c0a 2020 636f 6e73 7420 756e  impl,.  const un
0028310: 7369 676e 6564 2063 6861 7220 2a6b 6579  signed char *key
0028320: 2c20 636f 6e73 7420 756e 7369 676e 6564  , const unsigned
0028330: 2063 6861 7220 2a69 7629 3b0a 696e 7420   char *iv);.int 
0028340: 4556 505f 456e 6372 7970 7455 7064 6174  EVP_EncryptUpdat
0028350: 6528 4556 505f 4349 5048 4552 5f43 5458  e(EVP_CIPHER_CTX
0028360: 202a 6374 782c 2075 6e73 6967 6e65 6420   *ctx, unsigned 
0028370: 6368 6172 202a 6f75 742c 0a20 2069 6e74  char *out,.  int
0028380: 202a 6f75 746c 2c20 636f 6e73 7420 756e   *outl, const un
0028390: 7369 676e 6564 2063 6861 7220 2a69 6e2c  signed char *in,
00283a0: 2069 6e74 2069 6e6c 293b 0a69 6e74 2045   int inl);.int E
00283b0: 5650 5f45 6e63 7279 7074 4669 6e61 6c5f  VP_EncryptFinal_
00283c0: 6578 2845 5650 5f43 4950 4845 525f 4354  ex(EVP_CIPHER_CT
00283d0: 5820 2a63 7478 2c20 756e 7369 676e 6564  X *ctx, unsigned
00283e0: 2063 6861 7220 2a6f 7574 2c20 696e 7420   char *out, int 
00283f0: 2a6f 7574 6c29 3b0a 696e 7420 4556 505f  *outl);.int EVP_
0028400: 456e 6372 7970 7446 696e 616c 2845 5650  EncryptFinal(EVP
0028410: 5f43 4950 4845 525f 4354 5820 2a63 7478  _CIPHER_CTX *ctx
0028420: 2c20 756e 7369 676e 6564 2063 6861 7220  , unsigned char 
0028430: 2a6f 7574 2c20 696e 7420 2a6f 7574 6c29  *out, int *outl)
0028440: 3b0a 0a69 6e74 2045 5650 5f44 6563 7279  ;..int EVP_Decry
0028450: 7074 496e 6974 2845 5650 5f43 4950 4845  ptInit(EVP_CIPHE
0028460: 525f 4354 5820 2a63 7478 2c63 6f6e 7374  R_CTX *ctx,const
0028470: 2045 5650 5f43 4950 4845 5220 2a63 6970   EVP_CIPHER *cip
0028480: 6865 722c 0a20 2063 6f6e 7374 2075 6e73  her,.  const uns
0028490: 6967 6e65 6420 6368 6172 202a 6b65 792c  igned char *key,
00284a0: 2063 6f6e 7374 2075 6e73 6967 6e65 6420   const unsigned 
00284b0: 6368 6172 202a 6976 293b 0a69 6e74 2045  char *iv);.int E
00284c0: 5650 5f44 6563 7279 7074 496e 6974 5f65  VP_DecryptInit_e
00284d0: 7828 4556 505f 4349 5048 4552 5f43 5458  x(EVP_CIPHER_CTX
00284e0: 202a 6374 782c 636f 6e73 7420 4556 505f   *ctx,const EVP_
00284f0: 4349 5048 4552 202a 6369 7068 6572 2c20  CIPHER *cipher, 
0028500: 454e 4749 4e45 202a 696d 706c 2c0a 2020  ENGINE *impl,.  
0028510: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
0028520: 6861 7220 2a6b 6579 2c20 636f 6e73 7420  har *key, const 
0028530: 756e 7369 676e 6564 2063 6861 7220 2a69  unsigned char *i
0028540: 7629 3b0a 696e 7420 4556 505f 4465 6372  v);.int EVP_Decr
0028550: 7970 7455 7064 6174 6528 4556 505f 4349  yptUpdate(EVP_CI
0028560: 5048 4552 5f43 5458 202a 6374 782c 2075  PHER_CTX *ctx, u
0028570: 6e73 6967 6e65 6420 6368 6172 202a 6f75  nsigned char *ou
0028580: 742c 0a20 2069 6e74 202a 6f75 746c 2c20  t,.  int *outl, 
0028590: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
00285a0: 6861 7220 2a69 6e2c 2069 6e74 2069 6e6c  har *in, int inl
00285b0: 293b 0a69 6e74 2045 5650 5f44 6563 7279  );.int EVP_Decry
00285c0: 7074 4669 6e61 6c28 4556 505f 4349 5048  ptFinal(EVP_CIPH
00285d0: 4552 5f43 5458 202a 6374 782c 2075 6e73  ER_CTX *ctx, uns
00285e0: 6967 6e65 6420 6368 6172 202a 6f75 746d  igned char *outm
00285f0: 2c20 696e 7420 2a6f 7574 6c29 3b0a 696e  , int *outl);.in
0028600: 7420 4556 505f 4465 6372 7970 7446 696e  t EVP_DecryptFin
0028610: 616c 5f65 7828 4556 505f 4349 5048 4552  al_ex(EVP_CIPHER
0028620: 5f43 5458 202a 6374 782c 2075 6e73 6967  _CTX *ctx, unsig
0028630: 6e65 6420 6368 6172 202a 6f75 746d 2c20  ned char *outm, 
0028640: 696e 7420 2a6f 7574 6c29 3b0a 0a69 6e74  int *outl);..int
0028650: 2045 5650 5f43 6970 6865 7249 6e69 7428   EVP_CipherInit(
0028660: 4556 505f 4349 5048 4552 5f43 5458 202a  EVP_CIPHER_CTX *
0028670: 6374 782c 636f 6e73 7420 4556 505f 4349  ctx,const EVP_CI
0028680: 5048 4552 202a 6369 7068 6572 2c0a 2020  PHER *cipher,.  
0028690: 2020 2020 2020 2063 6f6e 7374 2075 6e73         const uns
00286a0: 6967 6e65 6420 6368 6172 202a 6b65 792c  igned char *key,
00286b0: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
00286c0: 6861 7220 2a69 762c 0a20 2020 2020 2020  har *iv,.       
00286d0: 2020 696e 7420 656e 6329 3b0a 696e 7420    int enc);.int 
00286e0: 4556 505f 4369 7068 6572 496e 6974 5f65  EVP_CipherInit_e
00286f0: 7828 4556 505f 4349 5048 4552 5f43 5458  x(EVP_CIPHER_CTX
0028700: 202a 6374 782c 636f 6e73 7420 4556 505f   *ctx,const EVP_
0028710: 4349 5048 4552 202a 6369 7068 6572 2c20  CIPHER *cipher, 
0028720: 454e 4749 4e45 202a 696d 706c 2c0a 2020  ENGINE *impl,.  
0028730: 2020 2020 2020 2063 6f6e 7374 2075 6e73         const uns
0028740: 6967 6e65 6420 6368 6172 202a 6b65 792c  igned char *key,
0028750: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
0028760: 6861 7220 2a69 762c 0a20 2020 2020 2020  har *iv,.       
0028770: 2020 696e 7420 656e 6329 3b0a 696e 7420    int enc);.int 
0028780: 4556 505f 4369 7068 6572 5570 6461 7465  EVP_CipherUpdate
0028790: 2845 5650 5f43 4950 4845 525f 4354 5820  (EVP_CIPHER_CTX 
00287a0: 2a63 7478 2c20 756e 7369 676e 6564 2063  *ctx, unsigned c
00287b0: 6861 7220 2a6f 7574 2c0a 2020 696e 7420  har *out,.  int 
00287c0: 2a6f 7574 6c2c 2063 6f6e 7374 2075 6e73  *outl, const uns
00287d0: 6967 6e65 6420 6368 6172 202a 696e 2c20  igned char *in, 
00287e0: 696e 7420 696e 6c29 3b0a 696e 7420 4556  int inl);.int EV
00287f0: 505f 4369 7068 6572 4669 6e61 6c28 4556  P_CipherFinal(EV
0028800: 505f 4349 5048 4552 5f43 5458 202a 6374  P_CIPHER_CTX *ct
0028810: 782c 2075 6e73 6967 6e65 6420 6368 6172  x, unsigned char
0028820: 202a 6f75 746d 2c20 696e 7420 2a6f 7574   *outm, int *out
0028830: 6c29 3b0a 696e 7420 4556 505f 4369 7068  l);.int EVP_Ciph
0028840: 6572 4669 6e61 6c5f 6578 2845 5650 5f43  erFinal_ex(EVP_C
0028850: 4950 4845 525f 4354 5820 2a63 7478 2c20  IPHER_CTX *ctx, 
0028860: 756e 7369 676e 6564 2063 6861 7220 2a6f  unsigned char *o
0028870: 7574 6d2c 2069 6e74 202a 6f75 746c 293b  utm, int *outl);
0028880: 0a0a 696e 7420 4556 505f 5369 676e 4669  ..int EVP_SignFi
0028890: 6e61 6c28 4556 505f 4d44 5f43 5458 202a  nal(EVP_MD_CTX *
00288a0: 6374 782c 756e 7369 676e 6564 2063 6861  ctx,unsigned cha
00288b0: 7220 2a6d 642c 756e 7369 676e 6564 2069  r *md,unsigned i
00288c0: 6e74 202a 732c 0a20 2045 5650 5f50 4b45  nt *s,.  EVP_PKE
00288d0: 5920 2a70 6b65 7929 3b0a 0a69 6e74 2045  Y *pkey);..int E
00288e0: 5650 5f56 6572 6966 7946 696e 616c 2845  VP_VerifyFinal(E
00288f0: 5650 5f4d 445f 4354 5820 2a63 7478 2c63  VP_MD_CTX *ctx,c
0028900: 6f6e 7374 2075 6e73 6967 6e65 6420 6368  onst unsigned ch
0028910: 6172 202a 7369 6762 7566 2c0a 2020 756e  ar *sigbuf,.  un
0028920: 7369 676e 6564 2069 6e74 2073 6967 6c65  signed int sigle
0028930: 6e2c 4556 505f 504b 4559 202a 706b 6579  n,EVP_PKEY *pkey
0028940: 293b 0a0a 696e 7420 4556 505f 4469 6765  );..int EVP_Dige
0028950: 7374 5369 676e 496e 6974 2845 5650 5f4d  stSignInit(EVP_M
0028960: 445f 4354 5820 2a63 7478 2c20 4556 505f  D_CTX *ctx, EVP_
0028970: 504b 4559 5f43 5458 202a 2a70 6374 782c  PKEY_CTX **pctx,
0028980: 0a20 2020 636f 6e73 7420 4556 505f 4d44  .   const EVP_MD
0028990: 202a 7479 7065 2c20 454e 4749 4e45 202a   *type, ENGINE *
00289a0: 652c 2045 5650 5f50 4b45 5920 2a70 6b65  e, EVP_PKEY *pke
00289b0: 7929 3b0a 696e 7420 4556 505f 4469 6765  y);.int EVP_Dige
00289c0: 7374 5369 676e 4669 6e61 6c28 4556 505f  stSignFinal(EVP_
00289d0: 4d44 5f43 5458 202a 6374 782c 0a20 2020  MD_CTX *ctx,.   
00289e0: 756e 7369 676e 6564 2063 6861 7220 2a73  unsigned char *s
00289f0: 6967 7265 742c 2073 697a 655f 7420 2a73  igret, size_t *s
0028a00: 6967 6c65 6e29 3b0a 0a69 6e74 2045 5650  iglen);..int EVP
0028a10: 5f44 6967 6573 7456 6572 6966 7949 6e69  _DigestVerifyIni
0028a20: 7428 4556 505f 4d44 5f43 5458 202a 6374  t(EVP_MD_CTX *ct
0028a30: 782c 2045 5650 5f50 4b45 595f 4354 5820  x, EVP_PKEY_CTX 
0028a40: 2a2a 7063 7478 2c0a 2020 2063 6f6e 7374  **pctx,.   const
0028a50: 2045 5650 5f4d 4420 2a74 7970 652c 2045   EVP_MD *type, E
0028a60: 4e47 494e 4520 2a65 2c20 4556 505f 504b  NGINE *e, EVP_PK
0028a70: 4559 202a 706b 6579 293b 0a69 6e74 2045  EY *pkey);.int E
0028a80: 5650 5f44 6967 6573 7456 6572 6966 7946  VP_DigestVerifyF
0028a90: 696e 616c 2845 5650 5f4d 445f 4354 5820  inal(EVP_MD_CTX 
0028aa0: 2a63 7478 2c0a 2020 2075 6e73 6967 6e65  *ctx,.   unsigne
0028ab0: 6420 6368 6172 202a 7369 672c 2073 697a  d char *sig, siz
0028ac0: 655f 7420 7369 676c 656e 293b 0a0a 696e  e_t siglen);..in
0028ad0: 7420 4556 505f 4f70 656e 496e 6974 2845  t EVP_OpenInit(E
0028ae0: 5650 5f43 4950 4845 525f 4354 5820 2a63  VP_CIPHER_CTX *c
0028af0: 7478 2c63 6f6e 7374 2045 5650 5f43 4950  tx,const EVP_CIP
0028b00: 4845 5220 2a74 7970 652c 0a20 2063 6f6e  HER *type,.  con
0028b10: 7374 2075 6e73 6967 6e65 6420 6368 6172  st unsigned char
0028b20: 202a 656b 2c20 696e 7420 656b 6c2c 2063   *ek, int ekl, c
0028b30: 6f6e 7374 2075 6e73 6967 6e65 6420 6368  onst unsigned ch
0028b40: 6172 202a 6976 2c0a 2020 4556 505f 504b  ar *iv,.  EVP_PK
0028b50: 4559 202a 7072 6976 293b 0a69 6e74 2045  EY *priv);.int E
0028b60: 5650 5f4f 7065 6e46 696e 616c 2845 5650  VP_OpenFinal(EVP
0028b70: 5f43 4950 4845 525f 4354 5820 2a63 7478  _CIPHER_CTX *ctx
0028b80: 2c20 756e 7369 676e 6564 2063 6861 7220  , unsigned char 
0028b90: 2a6f 7574 2c20 696e 7420 2a6f 7574 6c29  *out, int *outl)
0028ba0: 3b0a 0a69 6e74 2045 5650 5f53 6561 6c49  ;..int EVP_SealI
0028bb0: 6e69 7428 4556 505f 4349 5048 4552 5f43  nit(EVP_CIPHER_C
0028bc0: 5458 202a 6374 782c 2063 6f6e 7374 2045  TX *ctx, const E
0028bd0: 5650 5f43 4950 4845 5220 2a74 7970 652c  VP_CIPHER *type,
0028be0: 0a20 2020 756e 7369 676e 6564 2063 6861  .   unsigned cha
0028bf0: 7220 2a2a 656b 2c20 696e 7420 2a65 6b6c  r **ek, int *ekl
0028c00: 2c20 756e 7369 676e 6564 2063 6861 7220  , unsigned char 
0028c10: 2a69 762c 0a20 2045 5650 5f50 4b45 5920  *iv,.  EVP_PKEY 
0028c20: 2a2a 7075 626b 2c20 696e 7420 6e70 7562  **pubk, int npub
0028c30: 6b29 3b0a 696e 7420 4556 505f 5365 616c  k);.int EVP_Seal
0028c40: 4669 6e61 6c28 4556 505f 4349 5048 4552  Final(EVP_CIPHER
0028c50: 5f43 5458 202a 6374 782c 756e 7369 676e  _CTX *ctx,unsign
0028c60: 6564 2063 6861 7220 2a6f 7574 2c69 6e74  ed char *out,int
0028c70: 202a 6f75 746c 293b 0a0a 766f 6964 2045   *outl);..void E
0028c80: 5650 5f45 6e63 6f64 6549 6e69 7428 4556  VP_EncodeInit(EV
0028c90: 505f 454e 434f 4445 5f43 5458 202a 6374  P_ENCODE_CTX *ct
0028ca0: 7829 3b0a 766f 6964 2045 5650 5f45 6e63  x);.void EVP_Enc
0028cb0: 6f64 6555 7064 6174 6528 4556 505f 454e  odeUpdate(EVP_EN
0028cc0: 434f 4445 5f43 5458 202a 6374 782c 756e  CODE_CTX *ctx,un
0028cd0: 7369 676e 6564 2063 6861 7220 2a6f 7574  signed char *out
0028ce0: 2c69 6e74 202a 6f75 746c 2c0a 2020 636f  ,int *outl,.  co
0028cf0: 6e73 7420 756e 7369 676e 6564 2063 6861  nst unsigned cha
0028d00: 7220 2a69 6e2c 696e 7420 696e 6c29 3b0a  r *in,int inl);.
0028d10: 766f 6964 2045 5650 5f45 6e63 6f64 6546  void EVP_EncodeF
0028d20: 696e 616c 2845 5650 5f45 4e43 4f44 455f  inal(EVP_ENCODE_
0028d30: 4354 5820 2a63 7478 2c75 6e73 6967 6e65  CTX *ctx,unsigne
0028d40: 6420 6368 6172 202a 6f75 742c 696e 7420  d char *out,int 
0028d50: 2a6f 7574 6c29 3b0a 696e 7420 4556 505f  *outl);.int EVP_
0028d60: 456e 636f 6465 426c 6f63 6b28 756e 7369  EncodeBlock(unsi
0028d70: 676e 6564 2063 6861 7220 2a74 2c20 636f  gned char *t, co
0028d80: 6e73 7420 756e 7369 676e 6564 2063 6861  nst unsigned cha
0028d90: 7220 2a66 2c20 696e 7420 6e29 3b0a 0a76  r *f, int n);..v
0028da0: 6f69 6420 4556 505f 4465 636f 6465 496e  oid EVP_DecodeIn
0028db0: 6974 2845 5650 5f45 4e43 4f44 455f 4354  it(EVP_ENCODE_CT
0028dc0: 5820 2a63 7478 293b 0a69 6e74 2045 5650  X *ctx);.int EVP
0028dd0: 5f44 6563 6f64 6555 7064 6174 6528 4556  _DecodeUpdate(EV
0028de0: 505f 454e 434f 4445 5f43 5458 202a 6374  P_ENCODE_CTX *ct
0028df0: 782c 756e 7369 676e 6564 2063 6861 7220  x,unsigned char 
0028e00: 2a6f 7574 2c69 6e74 202a 6f75 746c 2c0a  *out,int *outl,.
0028e10: 2020 636f 6e73 7420 756e 7369 676e 6564    const unsigned
0028e20: 2063 6861 7220 2a69 6e2c 2069 6e74 2069   char *in, int i
0028e30: 6e6c 293b 0a69 6e74 2045 5650 5f44 6563  nl);.int EVP_Dec
0028e40: 6f64 6546 696e 616c 2845 5650 5f45 4e43  odeFinal(EVP_ENC
0028e50: 4f44 455f 4354 5820 2a63 7478 2c20 756e  ODE_CTX *ctx, un
0028e60: 7369 676e 6564 0a20 2063 6861 7220 2a6f  signed.  char *o
0028e70: 7574 2c20 696e 7420 2a6f 7574 6c29 3b0a  ut, int *outl);.
0028e80: 696e 7420 4556 505f 4465 636f 6465 426c  int EVP_DecodeBl
0028e90: 6f63 6b28 756e 7369 676e 6564 2063 6861  ock(unsigned cha
0028ea0: 7220 2a74 2c20 636f 6e73 7420 756e 7369  r *t, const unsi
0028eb0: 676e 6564 2063 6861 7220 2a66 2c20 696e  gned char *f, in
0028ec0: 7420 6e29 3b0a 0a76 6f69 6420 4556 505f  t n);..void EVP_
0028ed0: 4349 5048 4552 5f43 5458 5f69 6e69 7428  CIPHER_CTX_init(
0028ee0: 4556 505f 4349 5048 4552 5f43 5458 202a  EVP_CIPHER_CTX *
0028ef0: 6129 3b0a 696e 7420 4556 505f 4349 5048  a);.int EVP_CIPH
0028f00: 4552 5f43 5458 5f63 6c65 616e 7570 2845  ER_CTX_cleanup(E
0028f10: 5650 5f43 4950 4845 525f 4354 5820 2a61  VP_CIPHER_CTX *a
0028f20: 293b 0a45 5650 5f43 4950 4845 525f 4354  );.EVP_CIPHER_CT
0028f30: 5820 2a45 5650 5f43 4950 4845 525f 4354  X *EVP_CIPHER_CT
0028f40: 585f 6e65 7728 766f 6964 293b 0a76 6f69  X_new(void);.voi
0028f50: 6420 4556 505f 4349 5048 4552 5f43 5458  d EVP_CIPHER_CTX
0028f60: 5f66 7265 6528 4556 505f 4349 5048 4552  _free(EVP_CIPHER
0028f70: 5f43 5458 202a 6129 3b0a 696e 7420 4556  _CTX *a);.int EV
0028f80: 505f 4349 5048 4552 5f43 5458 5f73 6574  P_CIPHER_CTX_set
0028f90: 5f6b 6579 5f6c 656e 6774 6828 4556 505f  _key_length(EVP_
0028fa0: 4349 5048 4552 5f43 5458 202a 782c 2069  CIPHER_CTX *x, i
0028fb0: 6e74 206b 6579 6c65 6e29 3b0a 696e 7420  nt keylen);.int 
0028fc0: 4556 505f 4349 5048 4552 5f43 5458 5f73  EVP_CIPHER_CTX_s
0028fd0: 6574 5f70 6164 6469 6e67 2845 5650 5f43  et_padding(EVP_C
0028fe0: 4950 4845 525f 4354 5820 2a63 2c20 696e  IPHER_CTX *c, in
0028ff0: 7420 7061 6429 3b0a 696e 7420 4556 505f  t pad);.int EVP_
0029000: 4349 5048 4552 5f43 5458 5f63 7472 6c28  CIPHER_CTX_ctrl(
0029010: 4556 505f 4349 5048 4552 5f43 5458 202a  EVP_CIPHER_CTX *
0029020: 6374 782c 2069 6e74 2074 7970 652c 2069  ctx, int type, i
0029030: 6e74 2061 7267 2c20 766f 6964 202a 7074  nt arg, void *pt
0029040: 7229 3b0a 696e 7420 4556 505f 4349 5048  r);.int EVP_CIPH
0029050: 4552 5f43 5458 5f72 616e 645f 6b65 7928  ER_CTX_rand_key(
0029060: 4556 505f 4349 5048 4552 5f43 5458 202a  EVP_CIPHER_CTX *
0029070: 6374 782c 2075 6e73 6967 6e65 6420 6368  ctx, unsigned ch
0029080: 6172 202a 6b65 7929 3b0a 0a0a 4249 4f5f  ar *key);...BIO_
0029090: 4d45 5448 4f44 202a 4249 4f5f 665f 6d64  METHOD *BIO_f_md
00290a0: 2876 6f69 6429 3b0a 4249 4f5f 4d45 5448  (void);.BIO_METH
00290b0: 4f44 202a 4249 4f5f 665f 6261 7365 3634  OD *BIO_f_base64
00290c0: 2876 6f69 6429 3b0a 4249 4f5f 4d45 5448  (void);.BIO_METH
00290d0: 4f44 202a 4249 4f5f 665f 6369 7068 6572  OD *BIO_f_cipher
00290e0: 2876 6f69 6429 3b0a 4249 4f5f 4d45 5448  (void);.BIO_METH
00290f0: 4f44 202a 4249 4f5f 665f 7265 6c69 6162  OD *BIO_f_reliab
0029100: 6c65 2876 6f69 6429 3b0a 766f 6964 2042  le(void);.void B
0029110: 494f 5f73 6574 5f63 6970 6865 7228 4249  IO_set_cipher(BI
0029120: 4f20 2a62 2c63 6f6e 7374 2045 5650 5f43  O *b,const EVP_C
0029130: 4950 4845 5220 2a63 2c63 6f6e 7374 2075  IPHER *c,const u
0029140: 6e73 6967 6e65 6420 6368 6172 202a 6b2c  nsigned char *k,
0029150: 0a20 2063 6f6e 7374 2075 6e73 6967 6e65  .  const unsigne
0029160: 6420 6368 6172 202a 692c 2069 6e74 2065  d char *i, int e
0029170: 6e63 293b 0a0a 0a63 6f6e 7374 2045 5650  nc);...const EVP
0029180: 5f4d 4420 2a45 5650 5f6d 645f 6e75 6c6c  _MD *EVP_md_null
0029190: 2876 6f69 6429 3b0a 0a63 6f6e 7374 2045  (void);..const E
00291a0: 5650 5f4d 4420 2a45 5650 5f6d 6432 2876  VP_MD *EVP_md2(v
00291b0: 6f69 6429 3b0a 0a0a 636f 6e73 7420 4556  oid);...const EV
00291c0: 505f 4d44 202a 4556 505f 6d64 3428 766f  P_MD *EVP_md4(vo
00291d0: 6964 293b 0a0a 0a63 6f6e 7374 2045 5650  id);...const EVP
00291e0: 5f4d 4420 2a45 5650 5f6d 6435 2876 6f69  _MD *EVP_md5(voi
00291f0: 6429 3b0a 0a0a 636f 6e73 7420 4556 505f  d);...const EVP_
0029200: 4d44 202a 4556 505f 7368 6128 766f 6964  MD *EVP_sha(void
0029210: 293b 0a63 6f6e 7374 2045 5650 5f4d 4420  );.const EVP_MD 
0029220: 2a45 5650 5f73 6861 3128 766f 6964 293b  *EVP_sha1(void);
0029230: 0a63 6f6e 7374 2045 5650 5f4d 4420 2a45  .const EVP_MD *E
0029240: 5650 5f64 7373 2876 6f69 6429 3b0a 636f  VP_dss(void);.co
0029250: 6e73 7420 4556 505f 4d44 202a 4556 505f  nst EVP_MD *EVP_
0029260: 6473 7331 2876 6f69 6429 3b0a 636f 6e73  dss1(void);.cons
0029270: 7420 4556 505f 4d44 202a 4556 505f 6563  t EVP_MD *EVP_ec
0029280: 6473 6128 766f 6964 293b 0a0a 0a63 6f6e  dsa(void);...con
0029290: 7374 2045 5650 5f4d 4420 2a45 5650 5f73  st EVP_MD *EVP_s
00292a0: 6861 3232 3428 766f 6964 293b 0a63 6f6e  ha224(void);.con
00292b0: 7374 2045 5650 5f4d 4420 2a45 5650 5f73  st EVP_MD *EVP_s
00292c0: 6861 3235 3628 766f 6964 293b 0a0a 0a63  ha256(void);...c
00292d0: 6f6e 7374 2045 5650 5f4d 4420 2a45 5650  onst EVP_MD *EVP
00292e0: 5f73 6861 3338 3428 766f 6964 293b 0a63  _sha384(void);.c
00292f0: 6f6e 7374 2045 5650 5f4d 4420 2a45 5650  onst EVP_MD *EVP
0029300: 5f73 6861 3531 3228 766f 6964 293b 0a0a  _sha512(void);..
0029310: 0a0a 0a0a 636f 6e73 7420 4556 505f 4d44  ....const EVP_MD
0029320: 202a 4556 505f 7269 7065 6d64 3136 3028   *EVP_ripemd160(
0029330: 766f 6964 293b 0a0a 0a63 6f6e 7374 2045  void);...const E
0029340: 5650 5f4d 4420 2a45 5650 5f77 6869 726c  VP_MD *EVP_whirl
0029350: 706f 6f6c 2876 6f69 6429 3b0a 0a63 6f6e  pool(void);..con
0029360: 7374 2045 5650 5f43 4950 4845 5220 2a45  st EVP_CIPHER *E
0029370: 5650 5f65 6e63 5f6e 756c 6c28 766f 6964  VP_enc_null(void
0029380: 293b 0a0a 636f 6e73 7420 4556 505f 4349  );..const EVP_CI
0029390: 5048 4552 202a 4556 505f 6465 735f 6563  PHER *EVP_des_ec
00293a0: 6228 766f 6964 293b 0a63 6f6e 7374 2045  b(void);.const E
00293b0: 5650 5f43 4950 4845 5220 2a45 5650 5f64  VP_CIPHER *EVP_d
00293c0: 6573 5f65 6465 2876 6f69 6429 3b0a 636f  es_ede(void);.co
00293d0: 6e73 7420 4556 505f 4349 5048 4552 202a  nst EVP_CIPHER *
00293e0: 4556 505f 6465 735f 6564 6533 2876 6f69  EVP_des_ede3(voi
00293f0: 6429 3b0a 636f 6e73 7420 4556 505f 4349  d);.const EVP_CI
0029400: 5048 4552 202a 4556 505f 6465 735f 6564  PHER *EVP_des_ed
0029410: 655f 6563 6228 766f 6964 293b 0a63 6f6e  e_ecb(void);.con
0029420: 7374 2045 5650 5f43 4950 4845 5220 2a45  st EVP_CIPHER *E
0029430: 5650 5f64 6573 5f65 6465 335f 6563 6228  VP_des_ede3_ecb(
0029440: 766f 6964 293b 0a63 6f6e 7374 2045 5650  void);.const EVP
0029450: 5f43 4950 4845 5220 2a45 5650 5f64 6573  _CIPHER *EVP_des
0029460: 5f63 6662 3634 2876 6f69 6429 3b0a 0a63  _cfb64(void);..c
0029470: 6f6e 7374 2045 5650 5f43 4950 4845 5220  onst EVP_CIPHER 
0029480: 2a45 5650 5f64 6573 5f63 6662 3128 766f  *EVP_des_cfb1(vo
0029490: 6964 293b 0a63 6f6e 7374 2045 5650 5f43  id);.const EVP_C
00294a0: 4950 4845 5220 2a45 5650 5f64 6573 5f63  IPHER *EVP_des_c
00294b0: 6662 3828 766f 6964 293b 0a63 6f6e 7374  fb8(void);.const
00294c0: 2045 5650 5f43 4950 4845 5220 2a45 5650   EVP_CIPHER *EVP
00294d0: 5f64 6573 5f65 6465 5f63 6662 3634 2876  _des_ede_cfb64(v
00294e0: 6f69 6429 3b0a 0a0a 0a0a 0a63 6f6e 7374  oid);......const
00294f0: 2045 5650 5f43 4950 4845 5220 2a45 5650   EVP_CIPHER *EVP
0029500: 5f64 6573 5f65 6465 335f 6366 6236 3428  _des_ede3_cfb64(
0029510: 766f 6964 293b 0a0a 636f 6e73 7420 4556  void);..const EV
0029520: 505f 4349 5048 4552 202a 4556 505f 6465  P_CIPHER *EVP_de
0029530: 735f 6564 6533 5f63 6662 3128 766f 6964  s_ede3_cfb1(void
0029540: 293b 0a63 6f6e 7374 2045 5650 5f43 4950  );.const EVP_CIP
0029550: 4845 5220 2a45 5650 5f64 6573 5f65 6465  HER *EVP_des_ede
0029560: 335f 6366 6238 2876 6f69 6429 3b0a 636f  3_cfb8(void);.co
0029570: 6e73 7420 4556 505f 4349 5048 4552 202a  nst EVP_CIPHER *
0029580: 4556 505f 6465 735f 6f66 6228 766f 6964  EVP_des_ofb(void
0029590: 293b 0a63 6f6e 7374 2045 5650 5f43 4950  );.const EVP_CIP
00295a0: 4845 5220 2a45 5650 5f64 6573 5f65 6465  HER *EVP_des_ede
00295b0: 5f6f 6662 2876 6f69 6429 3b0a 636f 6e73  _ofb(void);.cons
00295c0: 7420 4556 505f 4349 5048 4552 202a 4556  t EVP_CIPHER *EV
00295d0: 505f 6465 735f 6564 6533 5f6f 6662 2876  P_des_ede3_ofb(v
00295e0: 6f69 6429 3b0a 636f 6e73 7420 4556 505f  oid);.const EVP_
00295f0: 4349 5048 4552 202a 4556 505f 6465 735f  CIPHER *EVP_des_
0029600: 6362 6328 766f 6964 293b 0a63 6f6e 7374  cbc(void);.const
0029610: 2045 5650 5f43 4950 4845 5220 2a45 5650   EVP_CIPHER *EVP
0029620: 5f64 6573 5f65 6465 5f63 6263 2876 6f69  _des_ede_cbc(voi
0029630: 6429 3b0a 636f 6e73 7420 4556 505f 4349  d);.const EVP_CI
0029640: 5048 4552 202a 4556 505f 6465 735f 6564  PHER *EVP_des_ed
0029650: 6533 5f63 6263 2876 6f69 6429 3b0a 636f  e3_cbc(void);.co
0029660: 6e73 7420 4556 505f 4349 5048 4552 202a  nst EVP_CIPHER *
0029670: 4556 505f 6465 7378 5f63 6263 2876 6f69  EVP_desx_cbc(voi
0029680: 6429 3b0a 636f 6e73 7420 4556 505f 4349  d);.const EVP_CI
0029690: 5048 4552 202a 4556 505f 6465 735f 6564  PHER *EVP_des_ed
00296a0: 6533 5f77 7261 7028 766f 6964 293b 0a23  e3_wrap(void);.#
00296b0: 2037 3532 2022 2f75 7372 2f69 6e63 6c75   752 "/usr/inclu
00296c0: 6465 2f6f 7065 6e73 736c 2f65 7670 2e68  de/openssl/evp.h
00296d0: 2220 3320 340a 636f 6e73 7420 4556 505f  " 3 4.const EVP_
00296e0: 4349 5048 4552 202a 4556 505f 7263 3428  CIPHER *EVP_rc4(
00296f0: 766f 6964 293b 0a63 6f6e 7374 2045 5650  void);.const EVP
0029700: 5f43 4950 4845 5220 2a45 5650 5f72 6334  _CIPHER *EVP_rc4
0029710: 5f34 3028 766f 6964 293b 0a0a 636f 6e73  _40(void);..cons
0029720: 7420 4556 505f 4349 5048 4552 202a 4556  t EVP_CIPHER *EV
0029730: 505f 7263 345f 686d 6163 5f6d 6435 2876  P_rc4_hmac_md5(v
0029740: 6f69 6429 3b0a 0a0a 0a63 6f6e 7374 2045  oid);....const E
0029750: 5650 5f43 4950 4845 5220 2a45 5650 5f69  VP_CIPHER *EVP_i
0029760: 6465 615f 6563 6228 766f 6964 293b 0a63  dea_ecb(void);.c
0029770: 6f6e 7374 2045 5650 5f43 4950 4845 5220  onst EVP_CIPHER 
0029780: 2a45 5650 5f69 6465 615f 6366 6236 3428  *EVP_idea_cfb64(
0029790: 766f 6964 293b 0a0a 636f 6e73 7420 4556  void);..const EV
00297a0: 505f 4349 5048 4552 202a 4556 505f 6964  P_CIPHER *EVP_id
00297b0: 6561 5f6f 6662 2876 6f69 6429 3b0a 636f  ea_ofb(void);.co
00297c0: 6e73 7420 4556 505f 4349 5048 4552 202a  nst EVP_CIPHER *
00297d0: 4556 505f 6964 6561 5f63 6263 2876 6f69  EVP_idea_cbc(voi
00297e0: 6429 3b0a 0a0a 636f 6e73 7420 4556 505f  d);...const EVP_
00297f0: 4349 5048 4552 202a 4556 505f 7263 325f  CIPHER *EVP_rc2_
0029800: 6563 6228 766f 6964 293b 0a63 6f6e 7374  ecb(void);.const
0029810: 2045 5650 5f43 4950 4845 5220 2a45 5650   EVP_CIPHER *EVP
0029820: 5f72 6332 5f63 6263 2876 6f69 6429 3b0a  _rc2_cbc(void);.
0029830: 636f 6e73 7420 4556 505f 4349 5048 4552  const EVP_CIPHER
0029840: 202a 4556 505f 7263 325f 3430 5f63 6263   *EVP_rc2_40_cbc
0029850: 2876 6f69 6429 3b0a 636f 6e73 7420 4556  (void);.const EV
0029860: 505f 4349 5048 4552 202a 4556 505f 7263  P_CIPHER *EVP_rc
0029870: 325f 3634 5f63 6263 2876 6f69 6429 3b0a  2_64_cbc(void);.
0029880: 636f 6e73 7420 4556 505f 4349 5048 4552  const EVP_CIPHER
0029890: 202a 4556 505f 7263 325f 6366 6236 3428   *EVP_rc2_cfb64(
00298a0: 766f 6964 293b 0a0a 636f 6e73 7420 4556  void);..const EV
00298b0: 505f 4349 5048 4552 202a 4556 505f 7263  P_CIPHER *EVP_rc
00298c0: 325f 6f66 6228 766f 6964 293b 0a0a 0a63  2_ofb(void);...c
00298d0: 6f6e 7374 2045 5650 5f43 4950 4845 5220  onst EVP_CIPHER 
00298e0: 2a45 5650 5f62 665f 6563 6228 766f 6964  *EVP_bf_ecb(void
00298f0: 293b 0a63 6f6e 7374 2045 5650 5f43 4950  );.const EVP_CIP
0029900: 4845 5220 2a45 5650 5f62 665f 6362 6328  HER *EVP_bf_cbc(
0029910: 766f 6964 293b 0a63 6f6e 7374 2045 5650  void);.const EVP
0029920: 5f43 4950 4845 5220 2a45 5650 5f62 665f  _CIPHER *EVP_bf_
0029930: 6366 6236 3428 766f 6964 293b 0a0a 636f  cfb64(void);..co
0029940: 6e73 7420 4556 505f 4349 5048 4552 202a  nst EVP_CIPHER *
0029950: 4556 505f 6266 5f6f 6662 2876 6f69 6429  EVP_bf_ofb(void)
0029960: 3b0a 0a0a 636f 6e73 7420 4556 505f 4349  ;...const EVP_CI
0029970: 5048 4552 202a 4556 505f 6361 7374 355f  PHER *EVP_cast5_
0029980: 6563 6228 766f 6964 293b 0a63 6f6e 7374  ecb(void);.const
0029990: 2045 5650 5f43 4950 4845 5220 2a45 5650   EVP_CIPHER *EVP
00299a0: 5f63 6173 7435 5f63 6263 2876 6f69 6429  _cast5_cbc(void)
00299b0: 3b0a 636f 6e73 7420 4556 505f 4349 5048  ;.const EVP_CIPH
00299c0: 4552 202a 4556 505f 6361 7374 355f 6366  ER *EVP_cast5_cf
00299d0: 6236 3428 766f 6964 293b 0a0a 636f 6e73  b64(void);..cons
00299e0: 7420 4556 505f 4349 5048 4552 202a 4556  t EVP_CIPHER *EV
00299f0: 505f 6361 7374 355f 6f66 6228 766f 6964  P_cast5_ofb(void
0029a00: 293b 0a0a 0a63 6f6e 7374 2045 5650 5f43  );...const EVP_C
0029a10: 4950 4845 5220 2a45 5650 5f61 6573 5f31  IPHER *EVP_aes_1
0029a20: 3238 5f65 6362 2876 6f69 6429 3b0a 636f  28_ecb(void);.co
0029a30: 6e73 7420 4556 505f 4349 5048 4552 202a  nst EVP_CIPHER *
0029a40: 4556 505f 6165 735f 3132 385f 6362 6328  EVP_aes_128_cbc(
0029a50: 766f 6964 293b 0a63 6f6e 7374 2045 5650  void);.const EVP
0029a60: 5f43 4950 4845 5220 2a45 5650 5f61 6573  _CIPHER *EVP_aes
0029a70: 5f31 3238 5f63 6662 3128 766f 6964 293b  _128_cfb1(void);
0029a80: 0a63 6f6e 7374 2045 5650 5f43 4950 4845  .const EVP_CIPHE
0029a90: 5220 2a45 5650 5f61 6573 5f31 3238 5f63  R *EVP_aes_128_c
0029aa0: 6662 3828 766f 6964 293b 0a63 6f6e 7374  fb8(void);.const
0029ab0: 2045 5650 5f43 4950 4845 5220 2a45 5650   EVP_CIPHER *EVP
0029ac0: 5f61 6573 5f31 3238 5f63 6662 3132 3828  _aes_128_cfb128(
0029ad0: 766f 6964 293b 0a0a 636f 6e73 7420 4556  void);..const EV
0029ae0: 505f 4349 5048 4552 202a 4556 505f 6165  P_CIPHER *EVP_ae
0029af0: 735f 3132 385f 6f66 6228 766f 6964 293b  s_128_ofb(void);
0029b00: 0a63 6f6e 7374 2045 5650 5f43 4950 4845  .const EVP_CIPHE
0029b10: 5220 2a45 5650 5f61 6573 5f31 3238 5f63  R *EVP_aes_128_c
0029b20: 7472 2876 6f69 6429 3b0a 636f 6e73 7420  tr(void);.const 
0029b30: 4556 505f 4349 5048 4552 202a 4556 505f  EVP_CIPHER *EVP_
0029b40: 6165 735f 3132 385f 6363 6d28 766f 6964  aes_128_ccm(void
0029b50: 293b 0a63 6f6e 7374 2045 5650 5f43 4950  );.const EVP_CIP
0029b60: 4845 5220 2a45 5650 5f61 6573 5f31 3238  HER *EVP_aes_128
0029b70: 5f67 636d 2876 6f69 6429 3b0a 636f 6e73  _gcm(void);.cons
0029b80: 7420 4556 505f 4349 5048 4552 202a 4556  t EVP_CIPHER *EV
0029b90: 505f 6165 735f 3132 385f 7874 7328 766f  P_aes_128_xts(vo
0029ba0: 6964 293b 0a63 6f6e 7374 2045 5650 5f43  id);.const EVP_C
0029bb0: 4950 4845 5220 2a45 5650 5f61 6573 5f31  IPHER *EVP_aes_1
0029bc0: 3238 5f77 7261 7028 766f 6964 293b 0a63  28_wrap(void);.c
0029bd0: 6f6e 7374 2045 5650 5f43 4950 4845 5220  onst EVP_CIPHER 
0029be0: 2a45 5650 5f61 6573 5f31 3238 5f77 7261  *EVP_aes_128_wra
0029bf0: 705f 7061 6428 766f 6964 293b 0a63 6f6e  p_pad(void);.con
0029c00: 7374 2045 5650 5f43 4950 4845 5220 2a45  st EVP_CIPHER *E
0029c10: 5650 5f61 6573 5f31 3932 5f65 6362 2876  VP_aes_192_ecb(v
0029c20: 6f69 6429 3b0a 636f 6e73 7420 4556 505f  oid);.const EVP_
0029c30: 4349 5048 4552 202a 4556 505f 6165 735f  CIPHER *EVP_aes_
0029c40: 3139 325f 6362 6328 766f 6964 293b 0a63  192_cbc(void);.c
0029c50: 6f6e 7374 2045 5650 5f43 4950 4845 5220  onst EVP_CIPHER 
0029c60: 2a45 5650 5f61 6573 5f31 3932 5f63 6662  *EVP_aes_192_cfb
0029c70: 3128 766f 6964 293b 0a63 6f6e 7374 2045  1(void);.const E
0029c80: 5650 5f43 4950 4845 5220 2a45 5650 5f61  VP_CIPHER *EVP_a
0029c90: 6573 5f31 3932 5f63 6662 3828 766f 6964  es_192_cfb8(void
0029ca0: 293b 0a63 6f6e 7374 2045 5650 5f43 4950  );.const EVP_CIP
0029cb0: 4845 5220 2a45 5650 5f61 6573 5f31 3932  HER *EVP_aes_192
0029cc0: 5f63 6662 3132 3828 766f 6964 293b 0a0a  _cfb128(void);..
0029cd0: 636f 6e73 7420 4556 505f 4349 5048 4552  const EVP_CIPHER
0029ce0: 202a 4556 505f 6165 735f 3139 325f 6f66   *EVP_aes_192_of
0029cf0: 6228 766f 6964 293b 0a63 6f6e 7374 2045  b(void);.const E
0029d00: 5650 5f43 4950 4845 5220 2a45 5650 5f61  VP_CIPHER *EVP_a
0029d10: 6573 5f31 3932 5f63 7472 2876 6f69 6429  es_192_ctr(void)
0029d20: 3b0a 636f 6e73 7420 4556 505f 4349 5048  ;.const EVP_CIPH
0029d30: 4552 202a 4556 505f 6165 735f 3139 325f  ER *EVP_aes_192_
0029d40: 6363 6d28 766f 6964 293b 0a63 6f6e 7374  ccm(void);.const
0029d50: 2045 5650 5f43 4950 4845 5220 2a45 5650   EVP_CIPHER *EVP
0029d60: 5f61 6573 5f31 3932 5f67 636d 2876 6f69  _aes_192_gcm(voi
0029d70: 6429 3b0a 636f 6e73 7420 4556 505f 4349  d);.const EVP_CI
0029d80: 5048 4552 202a 4556 505f 6165 735f 3139  PHER *EVP_aes_19
0029d90: 325f 7772 6170 2876 6f69 6429 3b0a 636f  2_wrap(void);.co
0029da0: 6e73 7420 4556 505f 4349 5048 4552 202a  nst EVP_CIPHER *
0029db0: 4556 505f 6165 735f 3139 325f 7772 6170  EVP_aes_192_wrap
0029dc0: 5f70 6164 2876 6f69 6429 3b0a 636f 6e73  _pad(void);.cons
0029dd0: 7420 4556 505f 4349 5048 4552 202a 4556  t EVP_CIPHER *EV
0029de0: 505f 6165 735f 3235 365f 6563 6228 766f  P_aes_256_ecb(vo
0029df0: 6964 293b 0a63 6f6e 7374 2045 5650 5f43  id);.const EVP_C
0029e00: 4950 4845 5220 2a45 5650 5f61 6573 5f32  IPHER *EVP_aes_2
0029e10: 3536 5f63 6263 2876 6f69 6429 3b0a 636f  56_cbc(void);.co
0029e20: 6e73 7420 4556 505f 4349 5048 4552 202a  nst EVP_CIPHER *
0029e30: 4556 505f 6165 735f 3235 365f 6366 6231  EVP_aes_256_cfb1
0029e40: 2876 6f69 6429 3b0a 636f 6e73 7420 4556  (void);.const EV
0029e50: 505f 4349 5048 4552 202a 4556 505f 6165  P_CIPHER *EVP_ae
0029e60: 735f 3235 365f 6366 6238 2876 6f69 6429  s_256_cfb8(void)
0029e70: 3b0a 636f 6e73 7420 4556 505f 4349 5048  ;.const EVP_CIPH
0029e80: 4552 202a 4556 505f 6165 735f 3235 365f  ER *EVP_aes_256_
0029e90: 6366 6231 3238 2876 6f69 6429 3b0a 0a63  cfb128(void);..c
0029ea0: 6f6e 7374 2045 5650 5f43 4950 4845 5220  onst EVP_CIPHER 
0029eb0: 2a45 5650 5f61 6573 5f32 3536 5f6f 6662  *EVP_aes_256_ofb
0029ec0: 2876 6f69 6429 3b0a 636f 6e73 7420 4556  (void);.const EV
0029ed0: 505f 4349 5048 4552 202a 4556 505f 6165  P_CIPHER *EVP_ae
0029ee0: 735f 3235 365f 6374 7228 766f 6964 293b  s_256_ctr(void);
0029ef0: 0a63 6f6e 7374 2045 5650 5f43 4950 4845  .const EVP_CIPHE
0029f00: 5220 2a45 5650 5f61 6573 5f32 3536 5f63  R *EVP_aes_256_c
0029f10: 636d 2876 6f69 6429 3b0a 636f 6e73 7420  cm(void);.const 
0029f20: 4556 505f 4349 5048 4552 202a 4556 505f  EVP_CIPHER *EVP_
0029f30: 6165 735f 3235 365f 6763 6d28 766f 6964  aes_256_gcm(void
0029f40: 293b 0a63 6f6e 7374 2045 5650 5f43 4950  );.const EVP_CIP
0029f50: 4845 5220 2a45 5650 5f61 6573 5f32 3536  HER *EVP_aes_256
0029f60: 5f78 7473 2876 6f69 6429 3b0a 636f 6e73  _xts(void);.cons
0029f70: 7420 4556 505f 4349 5048 4552 202a 4556  t EVP_CIPHER *EV
0029f80: 505f 6165 735f 3235 365f 7772 6170 2876  P_aes_256_wrap(v
0029f90: 6f69 6429 3b0a 636f 6e73 7420 4556 505f  oid);.const EVP_
0029fa0: 4349 5048 4552 202a 4556 505f 6165 735f  CIPHER *EVP_aes_
0029fb0: 3235 365f 7772 6170 5f70 6164 2876 6f69  256_wrap_pad(voi
0029fc0: 6429 3b0a 0a63 6f6e 7374 2045 5650 5f43  d);..const EVP_C
0029fd0: 4950 4845 5220 2a45 5650 5f61 6573 5f31  IPHER *EVP_aes_1
0029fe0: 3238 5f63 6263 5f68 6d61 635f 7368 6131  28_cbc_hmac_sha1
0029ff0: 2876 6f69 6429 3b0a 636f 6e73 7420 4556  (void);.const EV
002a000: 505f 4349 5048 4552 202a 4556 505f 6165  P_CIPHER *EVP_ae
002a010: 735f 3235 365f 6362 635f 686d 6163 5f73  s_256_cbc_hmac_s
002a020: 6861 3128 766f 6964 293b 0a0a 0a0a 636f  ha1(void);....co
002a030: 6e73 7420 4556 505f 4349 5048 4552 202a  nst EVP_CIPHER *
002a040: 4556 505f 6361 6d65 6c6c 6961 5f31 3238  EVP_camellia_128
002a050: 5f65 6362 2876 6f69 6429 3b0a 636f 6e73  _ecb(void);.cons
002a060: 7420 4556 505f 4349 5048 4552 202a 4556  t EVP_CIPHER *EV
002a070: 505f 6361 6d65 6c6c 6961 5f31 3238 5f63  P_camellia_128_c
002a080: 6263 2876 6f69 6429 3b0a 636f 6e73 7420  bc(void);.const 
002a090: 4556 505f 4349 5048 4552 202a 4556 505f  EVP_CIPHER *EVP_
002a0a0: 6361 6d65 6c6c 6961 5f31 3238 5f63 6662  camellia_128_cfb
002a0b0: 3128 766f 6964 293b 0a63 6f6e 7374 2045  1(void);.const E
002a0c0: 5650 5f43 4950 4845 5220 2a45 5650 5f63  VP_CIPHER *EVP_c
002a0d0: 616d 656c 6c69 615f 3132 385f 6366 6238  amellia_128_cfb8
002a0e0: 2876 6f69 6429 3b0a 636f 6e73 7420 4556  (void);.const EV
002a0f0: 505f 4349 5048 4552 202a 4556 505f 6361  P_CIPHER *EVP_ca
002a100: 6d65 6c6c 6961 5f31 3238 5f63 6662 3132  mellia_128_cfb12
002a110: 3828 766f 6964 293b 0a0a 636f 6e73 7420  8(void);..const 
002a120: 4556 505f 4349 5048 4552 202a 4556 505f  EVP_CIPHER *EVP_
002a130: 6361 6d65 6c6c 6961 5f31 3238 5f6f 6662  camellia_128_ofb
002a140: 2876 6f69 6429 3b0a 636f 6e73 7420 4556  (void);.const EV
002a150: 505f 4349 5048 4552 202a 4556 505f 6361  P_CIPHER *EVP_ca
002a160: 6d65 6c6c 6961 5f31 3932 5f65 6362 2876  mellia_192_ecb(v
002a170: 6f69 6429 3b0a 636f 6e73 7420 4556 505f  oid);.const EVP_
002a180: 4349 5048 4552 202a 4556 505f 6361 6d65  CIPHER *EVP_came
002a190: 6c6c 6961 5f31 3932 5f63 6263 2876 6f69  llia_192_cbc(voi
002a1a0: 6429 3b0a 636f 6e73 7420 4556 505f 4349  d);.const EVP_CI
002a1b0: 5048 4552 202a 4556 505f 6361 6d65 6c6c  PHER *EVP_camell
002a1c0: 6961 5f31 3932 5f63 6662 3128 766f 6964  ia_192_cfb1(void
002a1d0: 293b 0a63 6f6e 7374 2045 5650 5f43 4950  );.const EVP_CIP
002a1e0: 4845 5220 2a45 5650 5f63 616d 656c 6c69  HER *EVP_camelli
002a1f0: 615f 3139 325f 6366 6238 2876 6f69 6429  a_192_cfb8(void)
002a200: 3b0a 636f 6e73 7420 4556 505f 4349 5048  ;.const EVP_CIPH
002a210: 4552 202a 4556 505f 6361 6d65 6c6c 6961  ER *EVP_camellia
002a220: 5f31 3932 5f63 6662 3132 3828 766f 6964  _192_cfb128(void
002a230: 293b 0a0a 636f 6e73 7420 4556 505f 4349  );..const EVP_CI
002a240: 5048 4552 202a 4556 505f 6361 6d65 6c6c  PHER *EVP_camell
002a250: 6961 5f31 3932 5f6f 6662 2876 6f69 6429  ia_192_ofb(void)
002a260: 3b0a 636f 6e73 7420 4556 505f 4349 5048  ;.const EVP_CIPH
002a270: 4552 202a 4556 505f 6361 6d65 6c6c 6961  ER *EVP_camellia
002a280: 5f32 3536 5f65 6362 2876 6f69 6429 3b0a  _256_ecb(void);.
002a290: 636f 6e73 7420 4556 505f 4349 5048 4552  const EVP_CIPHER
002a2a0: 202a 4556 505f 6361 6d65 6c6c 6961 5f32   *EVP_camellia_2
002a2b0: 3536 5f63 6263 2876 6f69 6429 3b0a 636f  56_cbc(void);.co
002a2c0: 6e73 7420 4556 505f 4349 5048 4552 202a  nst EVP_CIPHER *
002a2d0: 4556 505f 6361 6d65 6c6c 6961 5f32 3536  EVP_camellia_256
002a2e0: 5f63 6662 3128 766f 6964 293b 0a63 6f6e  _cfb1(void);.con
002a2f0: 7374 2045 5650 5f43 4950 4845 5220 2a45  st EVP_CIPHER *E
002a300: 5650 5f63 616d 656c 6c69 615f 3235 365f  VP_camellia_256_
002a310: 6366 6238 2876 6f69 6429 3b0a 636f 6e73  cfb8(void);.cons
002a320: 7420 4556 505f 4349 5048 4552 202a 4556  t EVP_CIPHER *EV
002a330: 505f 6361 6d65 6c6c 6961 5f32 3536 5f63  P_camellia_256_c
002a340: 6662 3132 3828 766f 6964 293b 0a0a 636f  fb128(void);..co
002a350: 6e73 7420 4556 505f 4349 5048 4552 202a  nst EVP_CIPHER *
002a360: 4556 505f 6361 6d65 6c6c 6961 5f32 3536  EVP_camellia_256
002a370: 5f6f 6662 2876 6f69 6429 3b0a 0a0a 0a63  _ofb(void);....c
002a380: 6f6e 7374 2045 5650 5f43 4950 4845 5220  onst EVP_CIPHER 
002a390: 2a45 5650 5f73 6565 645f 6563 6228 766f  *EVP_seed_ecb(vo
002a3a0: 6964 293b 0a63 6f6e 7374 2045 5650 5f43  id);.const EVP_C
002a3b0: 4950 4845 5220 2a45 5650 5f73 6565 645f  IPHER *EVP_seed_
002a3c0: 6362 6328 766f 6964 293b 0a63 6f6e 7374  cbc(void);.const
002a3d0: 2045 5650 5f43 4950 4845 5220 2a45 5650   EVP_CIPHER *EVP
002a3e0: 5f73 6565 645f 6366 6231 3238 2876 6f69  _seed_cfb128(voi
002a3f0: 6429 3b0a 0a63 6f6e 7374 2045 5650 5f43  d);..const EVP_C
002a400: 4950 4845 5220 2a45 5650 5f73 6565 645f  IPHER *EVP_seed_
002a410: 6f66 6228 766f 6964 293b 0a0a 0a76 6f69  ofb(void);...voi
002a420: 6420 4f50 454e 5353 4c5f 6164 645f 616c  d OPENSSL_add_al
002a430: 6c5f 616c 676f 7269 7468 6d73 5f6e 6f63  l_algorithms_noc
002a440: 6f6e 6628 766f 6964 293b 0a76 6f69 6420  onf(void);.void 
002a450: 4f50 454e 5353 4c5f 6164 645f 616c 6c5f  OPENSSL_add_all_
002a460: 616c 676f 7269 7468 6d73 5f63 6f6e 6628  algorithms_conf(
002a470: 766f 6964 293b 0a23 2038 3735 2022 2f75  void);.# 875 "/u
002a480: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
002a490: 736c 2f65 7670 2e68 2220 3320 340a 766f  sl/evp.h" 3 4.vo
002a4a0: 6964 204f 7065 6e53 534c 5f61 6464 5f61  id OpenSSL_add_a
002a4b0: 6c6c 5f63 6970 6865 7273 2876 6f69 6429  ll_ciphers(void)
002a4c0: 3b0a 766f 6964 204f 7065 6e53 534c 5f61  ;.void OpenSSL_a
002a4d0: 6464 5f61 6c6c 5f64 6967 6573 7473 2876  dd_all_digests(v
002a4e0: 6f69 6429 3b0a 0a0a 0a0a 696e 7420 4556  oid);.....int EV
002a4f0: 505f 6164 645f 6369 7068 6572 2863 6f6e  P_add_cipher(con
002a500: 7374 2045 5650 5f43 4950 4845 5220 2a63  st EVP_CIPHER *c
002a510: 6970 6865 7229 3b0a 696e 7420 4556 505f  ipher);.int EVP_
002a520: 6164 645f 6469 6765 7374 2863 6f6e 7374  add_digest(const
002a530: 2045 5650 5f4d 4420 2a64 6967 6573 7429   EVP_MD *digest)
002a540: 3b0a 0a63 6f6e 7374 2045 5650 5f43 4950  ;..const EVP_CIP
002a550: 4845 5220 2a45 5650 5f67 6574 5f63 6970  HER *EVP_get_cip
002a560: 6865 7262 796e 616d 6528 636f 6e73 7420  herbyname(const 
002a570: 6368 6172 202a 6e61 6d65 293b 0a63 6f6e  char *name);.con
002a580: 7374 2045 5650 5f4d 4420 2a45 5650 5f67  st EVP_MD *EVP_g
002a590: 6574 5f64 6967 6573 7462 796e 616d 6528  et_digestbyname(
002a5a0: 636f 6e73 7420 6368 6172 202a 6e61 6d65  const char *name
002a5b0: 293b 0a76 6f69 6420 4556 505f 636c 6561  );.void EVP_clea
002a5c0: 6e75 7028 766f 6964 293b 0a0a 766f 6964  nup(void);..void
002a5d0: 2045 5650 5f43 4950 4845 525f 646f 5f61   EVP_CIPHER_do_a
002a5e0: 6c6c 2876 6f69 6420 282a 666e 2928 636f  ll(void (*fn)(co
002a5f0: 6e73 7420 4556 505f 4349 5048 4552 202a  nst EVP_CIPHER *
002a600: 6369 7068 2c0a 2020 636f 6e73 7420 6368  ciph,.  const ch
002a610: 6172 202a 6672 6f6d 2c20 636f 6e73 7420  ar *from, const 
002a620: 6368 6172 202a 746f 2c20 766f 6964 202a  char *to, void *
002a630: 7829 2c20 766f 6964 202a 6172 6729 3b0a  x), void *arg);.
002a640: 766f 6964 2045 5650 5f43 4950 4845 525f  void EVP_CIPHER_
002a650: 646f 5f61 6c6c 5f73 6f72 7465 6428 766f  do_all_sorted(vo
002a660: 6964 2028 2a66 6e29 2863 6f6e 7374 2045  id (*fn)(const E
002a670: 5650 5f43 4950 4845 5220 2a63 6970 682c  VP_CIPHER *ciph,
002a680: 0a20 2063 6f6e 7374 2063 6861 7220 2a66  .  const char *f
002a690: 726f 6d2c 2063 6f6e 7374 2063 6861 7220  rom, const char 
002a6a0: 2a74 6f2c 2076 6f69 6420 2a78 292c 2076  *to, void *x), v
002a6b0: 6f69 6420 2a61 7267 293b 0a0a 766f 6964  oid *arg);..void
002a6c0: 2045 5650 5f4d 445f 646f 5f61 6c6c 2876   EVP_MD_do_all(v
002a6d0: 6f69 6420 282a 666e 2928 636f 6e73 7420  oid (*fn)(const 
002a6e0: 4556 505f 4d44 202a 6369 7068 2c0a 2020  EVP_MD *ciph,.  
002a6f0: 636f 6e73 7420 6368 6172 202a 6672 6f6d  const char *from
002a700: 2c20 636f 6e73 7420 6368 6172 202a 746f  , const char *to
002a710: 2c20 766f 6964 202a 7829 2c20 766f 6964  , void *x), void
002a720: 202a 6172 6729 3b0a 766f 6964 2045 5650   *arg);.void EVP
002a730: 5f4d 445f 646f 5f61 6c6c 5f73 6f72 7465  _MD_do_all_sorte
002a740: 6428 766f 6964 2028 2a66 6e29 2863 6f6e  d(void (*fn)(con
002a750: 7374 2045 5650 5f4d 4420 2a63 6970 682c  st EVP_MD *ciph,
002a760: 0a20 2063 6f6e 7374 2063 6861 7220 2a66  .  const char *f
002a770: 726f 6d2c 2063 6f6e 7374 2063 6861 7220  rom, const char 
002a780: 2a74 6f2c 2076 6f69 6420 2a78 292c 2076  *to, void *x), v
002a790: 6f69 6420 2a61 7267 293b 0a0a 696e 7420  oid *arg);..int 
002a7a0: 4556 505f 504b 4559 5f64 6563 7279 7074  EVP_PKEY_decrypt
002a7b0: 5f6f 6c64 2875 6e73 6967 6e65 6420 6368  _old(unsigned ch
002a7c0: 6172 202a 6465 635f 6b65 792c 0a20 2020  ar *dec_key,.   
002a7d0: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
002a7e0: 6861 7220 2a65 6e63 5f6b 6579 2c69 6e74  har *enc_key,int
002a7f0: 2065 6e63 5f6b 6579 5f6c 656e 2c0a 2020   enc_key_len,.  
002a800: 2045 5650 5f50 4b45 5920 2a70 7269 7661   EVP_PKEY *priva
002a810: 7465 5f6b 6579 293b 0a69 6e74 2045 5650  te_key);.int EVP
002a820: 5f50 4b45 595f 656e 6372 7970 745f 6f6c  _PKEY_encrypt_ol
002a830: 6428 756e 7369 676e 6564 2063 6861 7220  d(unsigned char 
002a840: 2a65 6e63 5f6b 6579 2c0a 2020 2063 6f6e  *enc_key,.   con
002a850: 7374 2075 6e73 6967 6e65 6420 6368 6172  st unsigned char
002a860: 202a 6b65 792c 696e 7420 6b65 795f 6c65   *key,int key_le
002a870: 6e2c 0a20 2020 4556 505f 504b 4559 202a  n,.   EVP_PKEY *
002a880: 7075 625f 6b65 7929 3b0a 696e 7420 4556  pub_key);.int EV
002a890: 505f 504b 4559 5f74 7970 6528 696e 7420  P_PKEY_type(int 
002a8a0: 7479 7065 293b 0a69 6e74 2045 5650 5f50  type);.int EVP_P
002a8b0: 4b45 595f 6964 2863 6f6e 7374 2045 5650  KEY_id(const EVP
002a8c0: 5f50 4b45 5920 2a70 6b65 7929 3b0a 696e  _PKEY *pkey);.in
002a8d0: 7420 4556 505f 504b 4559 5f62 6173 655f  t EVP_PKEY_base_
002a8e0: 6964 2863 6f6e 7374 2045 5650 5f50 4b45  id(const EVP_PKE
002a8f0: 5920 2a70 6b65 7929 3b0a 696e 7420 4556  Y *pkey);.int EV
002a900: 505f 504b 4559 5f62 6974 7328 4556 505f  P_PKEY_bits(EVP_
002a910: 504b 4559 202a 706b 6579 293b 0a69 6e74  PKEY *pkey);.int
002a920: 2045 5650 5f50 4b45 595f 7369 7a65 2845   EVP_PKEY_size(E
002a930: 5650 5f50 4b45 5920 2a70 6b65 7929 3b0a  VP_PKEY *pkey);.
002a940: 696e 7420 4556 505f 504b 4559 5f73 6574  int EVP_PKEY_set
002a950: 5f74 7970 6528 4556 505f 504b 4559 202a  _type(EVP_PKEY *
002a960: 706b 6579 2c69 6e74 2074 7970 6529 3b0a  pkey,int type);.
002a970: 696e 7420 4556 505f 504b 4559 5f73 6574  int EVP_PKEY_set
002a980: 5f74 7970 655f 7374 7228 4556 505f 504b  _type_str(EVP_PK
002a990: 4559 202a 706b 6579 2c20 636f 6e73 7420  EY *pkey, const 
002a9a0: 6368 6172 202a 7374 722c 2069 6e74 206c  char *str, int l
002a9b0: 656e 293b 0a69 6e74 2045 5650 5f50 4b45  en);.int EVP_PKE
002a9c0: 595f 6173 7369 676e 2845 5650 5f50 4b45  Y_assign(EVP_PKE
002a9d0: 5920 2a70 6b65 792c 696e 7420 7479 7065  Y *pkey,int type
002a9e0: 2c76 6f69 6420 2a6b 6579 293b 0a76 6f69  ,void *key);.voi
002a9f0: 6420 2a20 4556 505f 504b 4559 5f67 6574  d * EVP_PKEY_get
002aa00: 3028 4556 505f 504b 4559 202a 706b 6579  0(EVP_PKEY *pkey
002aa10: 293b 0a0a 0a73 7472 7563 7420 7273 615f  );...struct rsa_
002aa20: 7374 3b0a 696e 7420 4556 505f 504b 4559  st;.int EVP_PKEY
002aa30: 5f73 6574 315f 5253 4128 4556 505f 504b  _set1_RSA(EVP_PK
002aa40: 4559 202a 706b 6579 2c73 7472 7563 7420  EY *pkey,struct 
002aa50: 7273 615f 7374 202a 6b65 7929 3b0a 7374  rsa_st *key);.st
002aa60: 7275 6374 2072 7361 5f73 7420 2a45 5650  ruct rsa_st *EVP
002aa70: 5f50 4b45 595f 6765 7431 5f52 5341 2845  _PKEY_get1_RSA(E
002aa80: 5650 5f50 4b45 5920 2a70 6b65 7929 3b0a  VP_PKEY *pkey);.
002aa90: 0a0a 7374 7275 6374 2064 7361 5f73 743b  ..struct dsa_st;
002aaa0: 0a69 6e74 2045 5650 5f50 4b45 595f 7365  .int EVP_PKEY_se
002aab0: 7431 5f44 5341 2845 5650 5f50 4b45 5920  t1_DSA(EVP_PKEY 
002aac0: 2a70 6b65 792c 7374 7275 6374 2064 7361  *pkey,struct dsa
002aad0: 5f73 7420 2a6b 6579 293b 0a73 7472 7563  _st *key);.struc
002aae0: 7420 6473 615f 7374 202a 4556 505f 504b  t dsa_st *EVP_PK
002aaf0: 4559 5f67 6574 315f 4453 4128 4556 505f  EY_get1_DSA(EVP_
002ab00: 504b 4559 202a 706b 6579 293b 0a0a 0a73  PKEY *pkey);...s
002ab10: 7472 7563 7420 6468 5f73 743b 0a69 6e74  truct dh_st;.int
002ab20: 2045 5650 5f50 4b45 595f 7365 7431 5f44   EVP_PKEY_set1_D
002ab30: 4828 4556 505f 504b 4559 202a 706b 6579  H(EVP_PKEY *pkey
002ab40: 2c73 7472 7563 7420 6468 5f73 7420 2a6b  ,struct dh_st *k
002ab50: 6579 293b 0a73 7472 7563 7420 6468 5f73  ey);.struct dh_s
002ab60: 7420 2a45 5650 5f50 4b45 595f 6765 7431  t *EVP_PKEY_get1
002ab70: 5f44 4828 4556 505f 504b 4559 202a 706b  _DH(EVP_PKEY *pk
002ab80: 6579 293b 0a0a 0a73 7472 7563 7420 6563  ey);...struct ec
002ab90: 5f6b 6579 5f73 743b 0a69 6e74 2045 5650  _key_st;.int EVP
002aba0: 5f50 4b45 595f 7365 7431 5f45 435f 4b45  _PKEY_set1_EC_KE
002abb0: 5928 4556 505f 504b 4559 202a 706b 6579  Y(EVP_PKEY *pkey
002abc0: 2c73 7472 7563 7420 6563 5f6b 6579 5f73  ,struct ec_key_s
002abd0: 7420 2a6b 6579 293b 0a73 7472 7563 7420  t *key);.struct 
002abe0: 6563 5f6b 6579 5f73 7420 2a45 5650 5f50  ec_key_st *EVP_P
002abf0: 4b45 595f 6765 7431 5f45 435f 4b45 5928  KEY_get1_EC_KEY(
002ac00: 4556 505f 504b 4559 202a 706b 6579 293b  EVP_PKEY *pkey);
002ac10: 0a0a 0a45 5650 5f50 4b45 5920 2a20 4556  ...EVP_PKEY * EV
002ac20: 505f 504b 4559 5f6e 6577 2876 6f69 6429  P_PKEY_new(void)
002ac30: 3b0a 766f 6964 2045 5650 5f50 4b45 595f  ;.void EVP_PKEY_
002ac40: 6672 6565 2845 5650 5f50 4b45 5920 2a70  free(EVP_PKEY *p
002ac50: 6b65 7929 3b0a 0a45 5650 5f50 4b45 5920  key);..EVP_PKEY 
002ac60: 2a20 6432 695f 5075 626c 6963 4b65 7928  * d2i_PublicKey(
002ac70: 696e 7420 7479 7065 2c45 5650 5f50 4b45  int type,EVP_PKE
002ac80: 5920 2a2a 612c 2063 6f6e 7374 2075 6e73  Y **a, const uns
002ac90: 6967 6e65 6420 6368 6172 202a 2a70 702c  igned char **pp,
002aca0: 0a20 2020 6c6f 6e67 206c 656e 6774 6829  .   long length)
002acb0: 3b0a 696e 7420 6932 645f 5075 626c 6963  ;.int i2d_Public
002acc0: 4b65 7928 4556 505f 504b 4559 202a 612c  Key(EVP_PKEY *a,
002acd0: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
002ace0: 2a70 7029 3b0a 0a45 5650 5f50 4b45 5920  *pp);..EVP_PKEY 
002acf0: 2a20 6432 695f 5072 6976 6174 654b 6579  * d2i_PrivateKey
002ad00: 2869 6e74 2074 7970 652c 4556 505f 504b  (int type,EVP_PK
002ad10: 4559 202a 2a61 2c20 636f 6e73 7420 756e  EY **a, const un
002ad20: 7369 676e 6564 2063 6861 7220 2a2a 7070  signed char **pp
002ad30: 2c0a 2020 206c 6f6e 6720 6c65 6e67 7468  ,.   long length
002ad40: 293b 0a45 5650 5f50 4b45 5920 2a20 6432  );.EVP_PKEY * d2
002ad50: 695f 4175 746f 5072 6976 6174 654b 6579  i_AutoPrivateKey
002ad60: 2845 5650 5f50 4b45 5920 2a2a 612c 2063  (EVP_PKEY **a, c
002ad70: 6f6e 7374 2075 6e73 6967 6e65 6420 6368  onst unsigned ch
002ad80: 6172 202a 2a70 702c 0a20 2020 6c6f 6e67  ar **pp,.   long
002ad90: 206c 656e 6774 6829 3b0a 696e 7420 6932   length);.int i2
002ada0: 645f 5072 6976 6174 654b 6579 2845 5650  d_PrivateKey(EVP
002adb0: 5f50 4b45 5920 2a61 2c20 756e 7369 676e  _PKEY *a, unsign
002adc0: 6564 2063 6861 7220 2a2a 7070 293b 0a0a  ed char **pp);..
002add0: 696e 7420 4556 505f 504b 4559 5f63 6f70  int EVP_PKEY_cop
002ade0: 795f 7061 7261 6d65 7465 7273 2845 5650  y_parameters(EVP
002adf0: 5f50 4b45 5920 2a74 6f2c 2063 6f6e 7374  _PKEY *to, const
002ae00: 2045 5650 5f50 4b45 5920 2a66 726f 6d29   EVP_PKEY *from)
002ae10: 3b0a 696e 7420 4556 505f 504b 4559 5f6d  ;.int EVP_PKEY_m
002ae20: 6973 7369 6e67 5f70 6172 616d 6574 6572  issing_parameter
002ae30: 7328 636f 6e73 7420 4556 505f 504b 4559  s(const EVP_PKEY
002ae40: 202a 706b 6579 293b 0a69 6e74 2045 5650   *pkey);.int EVP
002ae50: 5f50 4b45 595f 7361 7665 5f70 6172 616d  _PKEY_save_param
002ae60: 6574 6572 7328 4556 505f 504b 4559 202a  eters(EVP_PKEY *
002ae70: 706b 6579 2c69 6e74 206d 6f64 6529 3b0a  pkey,int mode);.
002ae80: 696e 7420 4556 505f 504b 4559 5f63 6d70  int EVP_PKEY_cmp
002ae90: 5f70 6172 616d 6574 6572 7328 636f 6e73  _parameters(cons
002aea0: 7420 4556 505f 504b 4559 202a 612c 2063  t EVP_PKEY *a, c
002aeb0: 6f6e 7374 2045 5650 5f50 4b45 5920 2a62  onst EVP_PKEY *b
002aec0: 293b 0a0a 696e 7420 4556 505f 504b 4559  );..int EVP_PKEY
002aed0: 5f63 6d70 2863 6f6e 7374 2045 5650 5f50  _cmp(const EVP_P
002aee0: 4b45 5920 2a61 2c20 636f 6e73 7420 4556  KEY *a, const EV
002aef0: 505f 504b 4559 202a 6229 3b0a 0a69 6e74  P_PKEY *b);..int
002af00: 2045 5650 5f50 4b45 595f 7072 696e 745f   EVP_PKEY_print_
002af10: 7075 626c 6963 2842 494f 202a 6f75 742c  public(BIO *out,
002af20: 2063 6f6e 7374 2045 5650 5f50 4b45 5920   const EVP_PKEY 
002af30: 2a70 6b65 792c 0a20 2020 2069 6e74 2069  *pkey,.    int i
002af40: 6e64 656e 742c 2041 534e 315f 5043 5458  ndent, ASN1_PCTX
002af50: 202a 7063 7478 293b 0a69 6e74 2045 5650   *pctx);.int EVP
002af60: 5f50 4b45 595f 7072 696e 745f 7072 6976  _PKEY_print_priv
002af70: 6174 6528 4249 4f20 2a6f 7574 2c20 636f  ate(BIO *out, co
002af80: 6e73 7420 4556 505f 504b 4559 202a 706b  nst EVP_PKEY *pk
002af90: 6579 2c0a 2020 2020 696e 7420 696e 6465  ey,.    int inde
002afa0: 6e74 2c20 4153 4e31 5f50 4354 5820 2a70  nt, ASN1_PCTX *p
002afb0: 6374 7829 3b0a 696e 7420 4556 505f 504b  ctx);.int EVP_PK
002afc0: 4559 5f70 7269 6e74 5f70 6172 616d 7328  EY_print_params(
002afd0: 4249 4f20 2a6f 7574 2c20 636f 6e73 7420  BIO *out, const 
002afe0: 4556 505f 504b 4559 202a 706b 6579 2c0a  EVP_PKEY *pkey,.
002aff0: 2020 2020 696e 7420 696e 6465 6e74 2c20      int indent, 
002b000: 4153 4e31 5f50 4354 5820 2a70 6374 7829  ASN1_PCTX *pctx)
002b010: 3b0a 0a69 6e74 2045 5650 5f50 4b45 595f  ;..int EVP_PKEY_
002b020: 6765 745f 6465 6661 756c 745f 6469 6765  get_default_dige
002b030: 7374 5f6e 6964 2845 5650 5f50 4b45 5920  st_nid(EVP_PKEY 
002b040: 2a70 6b65 792c 2069 6e74 202a 706e 6964  *pkey, int *pnid
002b050: 293b 0a0a 696e 7420 4556 505f 4349 5048  );..int EVP_CIPH
002b060: 4552 5f74 7970 6528 636f 6e73 7420 4556  ER_type(const EV
002b070: 505f 4349 5048 4552 202a 6374 7829 3b0a  P_CIPHER *ctx);.
002b080: 0a0a 696e 7420 4556 505f 4349 5048 4552  ..int EVP_CIPHER
002b090: 5f70 6172 616d 5f74 6f5f 6173 6e31 2845  _param_to_asn1(E
002b0a0: 5650 5f43 4950 4845 525f 4354 5820 2a63  VP_CIPHER_CTX *c
002b0b0: 2c20 4153 4e31 5f54 5950 4520 2a74 7970  , ASN1_TYPE *typ
002b0c0: 6529 3b0a 696e 7420 4556 505f 4349 5048  e);.int EVP_CIPH
002b0d0: 4552 5f61 736e 315f 746f 5f70 6172 616d  ER_asn1_to_param
002b0e0: 2845 5650 5f43 4950 4845 525f 4354 5820  (EVP_CIPHER_CTX 
002b0f0: 2a63 2c20 4153 4e31 5f54 5950 4520 2a74  *c, ASN1_TYPE *t
002b100: 7970 6529 3b0a 0a0a 696e 7420 4556 505f  ype);...int EVP_
002b110: 4349 5048 4552 5f73 6574 5f61 736e 315f  CIPHER_set_asn1_
002b120: 6976 2845 5650 5f43 4950 4845 525f 4354  iv(EVP_CIPHER_CT
002b130: 5820 2a63 2c41 534e 315f 5459 5045 202a  X *c,ASN1_TYPE *
002b140: 7479 7065 293b 0a69 6e74 2045 5650 5f43  type);.int EVP_C
002b150: 4950 4845 525f 6765 745f 6173 6e31 5f69  IPHER_get_asn1_i
002b160: 7628 4556 505f 4349 5048 4552 5f43 5458  v(EVP_CIPHER_CTX
002b170: 202a 632c 4153 4e31 5f54 5950 4520 2a74   *c,ASN1_TYPE *t
002b180: 7970 6529 3b0a 0a0a 696e 7420 504b 4353  ype);...int PKCS
002b190: 355f 5042 455f 6b65 7969 7667 656e 2845  5_PBE_keyivgen(E
002b1a0: 5650 5f43 4950 4845 525f 4354 5820 2a63  VP_CIPHER_CTX *c
002b1b0: 7478 2c20 636f 6e73 7420 6368 6172 202a  tx, const char *
002b1c0: 7061 7373 2c20 696e 7420 7061 7373 6c65  pass, int passle
002b1d0: 6e2c 0a20 2020 2041 534e 315f 5459 5045  n,.    ASN1_TYPE
002b1e0: 202a 7061 7261 6d2c 2063 6f6e 7374 2045   *param, const E
002b1f0: 5650 5f43 4950 4845 5220 2a63 6970 6865  VP_CIPHER *ciphe
002b200: 722c 2063 6f6e 7374 2045 5650 5f4d 4420  r, const EVP_MD 
002b210: 2a6d 642c 0a20 2020 2069 6e74 2065 6e5f  *md,.    int en_
002b220: 6465 293b 0a69 6e74 2050 4b43 5335 5f50  de);.int PKCS5_P
002b230: 424b 4446 325f 484d 4143 5f53 4841 3128  BKDF2_HMAC_SHA1(
002b240: 636f 6e73 7420 6368 6172 202a 7061 7373  const char *pass
002b250: 2c20 696e 7420 7061 7373 6c65 6e2c 0a20  , int passlen,. 
002b260: 2020 2020 2063 6f6e 7374 2075 6e73 6967       const unsig
002b270: 6e65 6420 6368 6172 202a 7361 6c74 2c20  ned char *salt, 
002b280: 696e 7420 7361 6c74 6c65 6e2c 2069 6e74  int saltlen, int
002b290: 2069 7465 722c 0a20 2020 2020 2069 6e74   iter,.      int
002b2a0: 206b 6579 6c65 6e2c 2075 6e73 6967 6e65   keylen, unsigne
002b2b0: 6420 6368 6172 202a 6f75 7429 3b0a 696e  d char *out);.in
002b2c0: 7420 504b 4353 355f 5042 4b44 4632 5f48  t PKCS5_PBKDF2_H
002b2d0: 4d41 4328 636f 6e73 7420 6368 6172 202a  MAC(const char *
002b2e0: 7061 7373 2c20 696e 7420 7061 7373 6c65  pass, int passle
002b2f0: 6e2c 0a20 2020 2020 2063 6f6e 7374 2075  n,.      const u
002b300: 6e73 6967 6e65 6420 6368 6172 202a 7361  nsigned char *sa
002b310: 6c74 2c20 696e 7420 7361 6c74 6c65 6e2c  lt, int saltlen,
002b320: 2069 6e74 2069 7465 722c 0a20 2020 2020   int iter,.     
002b330: 2063 6f6e 7374 2045 5650 5f4d 4420 2a64   const EVP_MD *d
002b340: 6967 6573 742c 0a20 2020 2020 2020 2069  igest,.        i
002b350: 6e74 206b 6579 6c65 6e2c 2075 6e73 6967  nt keylen, unsig
002b360: 6e65 6420 6368 6172 202a 6f75 7429 3b0a  ned char *out);.
002b370: 696e 7420 504b 4353 355f 7632 5f50 4245  int PKCS5_v2_PBE
002b380: 5f6b 6579 6976 6765 6e28 4556 505f 4349  _keyivgen(EVP_CI
002b390: 5048 4552 5f43 5458 202a 6374 782c 2063  PHER_CTX *ctx, c
002b3a0: 6f6e 7374 2063 6861 7220 2a70 6173 732c  onst char *pass,
002b3b0: 2069 6e74 2070 6173 736c 656e 2c0a 2020   int passlen,.  
002b3c0: 2020 4153 4e31 5f54 5950 4520 2a70 6172    ASN1_TYPE *par
002b3d0: 616d 2c20 636f 6e73 7420 4556 505f 4349  am, const EVP_CI
002b3e0: 5048 4552 202a 6369 7068 6572 2c20 636f  PHER *cipher, co
002b3f0: 6e73 7420 4556 505f 4d44 202a 6d64 2c0a  nst EVP_MD *md,.
002b400: 2020 2020 696e 7420 656e 5f64 6529 3b0a      int en_de);.
002b410: 0a76 6f69 6420 504b 4353 355f 5042 455f  .void PKCS5_PBE_
002b420: 6164 6428 766f 6964 293b 0a0a 696e 7420  add(void);..int 
002b430: 4556 505f 5042 455f 4369 7068 6572 496e  EVP_PBE_CipherIn
002b440: 6974 2028 4153 4e31 5f4f 424a 4543 5420  it (ASN1_OBJECT 
002b450: 2a70 6265 5f6f 626a 2c20 636f 6e73 7420  *pbe_obj, const 
002b460: 6368 6172 202a 7061 7373 2c20 696e 7420  char *pass, int 
002b470: 7061 7373 6c65 6e2c 0a20 2020 2020 2041  passlen,.      A
002b480: 534e 315f 5459 5045 202a 7061 7261 6d2c  SN1_TYPE *param,
002b490: 2045 5650 5f43 4950 4845 525f 4354 5820   EVP_CIPHER_CTX 
002b4a0: 2a63 7478 2c20 696e 7420 656e 5f64 6529  *ctx, int en_de)
002b4b0: 3b0a 2320 3130 3031 2022 2f75 7372 2f69  ;.# 1001 "/usr/i
002b4c0: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f65  nclude/openssl/e
002b4d0: 7670 2e68 2220 3320 340a 696e 7420 4556  vp.h" 3 4.int EV
002b4e0: 505f 5042 455f 616c 675f 6164 645f 7479  P_PBE_alg_add_ty
002b4f0: 7065 2869 6e74 2070 6265 5f74 7970 652c  pe(int pbe_type,
002b500: 2069 6e74 2070 6265 5f6e 6964 2c20 696e   int pbe_nid, in
002b510: 7420 6369 7068 6572 5f6e 6964 2c20 696e  t cipher_nid, in
002b520: 7420 6d64 5f6e 6964 2c0a 2020 2020 2020  t md_nid,.      
002b530: 4556 505f 5042 455f 4b45 5947 454e 202a  EVP_PBE_KEYGEN *
002b540: 6b65 7967 656e 293b 0a69 6e74 2045 5650  keygen);.int EVP
002b550: 5f50 4245 5f61 6c67 5f61 6464 2869 6e74  _PBE_alg_add(int
002b560: 206e 6964 2c20 636f 6e73 7420 4556 505f   nid, const EVP_
002b570: 4349 5048 4552 202a 6369 7068 6572 2c20  CIPHER *cipher, 
002b580: 636f 6e73 7420 4556 505f 4d44 202a 6d64  const EVP_MD *md
002b590: 2c0a 2020 2020 2020 4556 505f 5042 455f  ,.      EVP_PBE_
002b5a0: 4b45 5947 454e 202a 6b65 7967 656e 293b  KEYGEN *keygen);
002b5b0: 0a69 6e74 2045 5650 5f50 4245 5f66 696e  .int EVP_PBE_fin
002b5c0: 6428 696e 7420 7479 7065 2c20 696e 7420  d(int type, int 
002b5d0: 7062 655f 6e69 642c 0a20 2020 696e 7420  pbe_nid,.   int 
002b5e0: 2a70 636e 6964 2c20 696e 7420 2a70 6d6e  *pcnid, int *pmn
002b5f0: 6964 2c20 4556 505f 5042 455f 4b45 5947  id, EVP_PBE_KEYG
002b600: 454e 202a 2a70 6b65 7967 656e 293b 0a76  EN **pkeygen);.v
002b610: 6f69 6420 4556 505f 5042 455f 636c 6561  oid EVP_PBE_clea
002b620: 6e75 7028 766f 6964 293b 0a23 2031 3031  nup(void);.# 101
002b630: 3920 222f 7573 722f 696e 636c 7564 652f  9 "/usr/include/
002b640: 6f70 656e 7373 6c2f 6576 702e 6822 2033  openssl/evp.h" 3
002b650: 2034 0a69 6e74 2045 5650 5f50 4b45 595f   4.int EVP_PKEY_
002b660: 6173 6e31 5f67 6574 5f63 6f75 6e74 2876  asn1_get_count(v
002b670: 6f69 6429 3b0a 636f 6e73 7420 4556 505f  oid);.const EVP_
002b680: 504b 4559 5f41 534e 315f 4d45 5448 4f44  PKEY_ASN1_METHOD
002b690: 202a 4556 505f 504b 4559 5f61 736e 315f   *EVP_PKEY_asn1_
002b6a0: 6765 7430 2869 6e74 2069 6478 293b 0a63  get0(int idx);.c
002b6b0: 6f6e 7374 2045 5650 5f50 4b45 595f 4153  onst EVP_PKEY_AS
002b6c0: 4e31 5f4d 4554 484f 4420 2a45 5650 5f50  N1_METHOD *EVP_P
002b6d0: 4b45 595f 6173 6e31 5f66 696e 6428 454e  KEY_asn1_find(EN
002b6e0: 4749 4e45 202a 2a70 652c 2069 6e74 2074  GINE **pe, int t
002b6f0: 7970 6529 3b0a 636f 6e73 7420 4556 505f  ype);.const EVP_
002b700: 504b 4559 5f41 534e 315f 4d45 5448 4f44  PKEY_ASN1_METHOD
002b710: 202a 4556 505f 504b 4559 5f61 736e 315f   *EVP_PKEY_asn1_
002b720: 6669 6e64 5f73 7472 2845 4e47 494e 4520  find_str(ENGINE 
002b730: 2a2a 7065 2c0a 2020 2020 2063 6f6e 7374  **pe,.     const
002b740: 2063 6861 7220 2a73 7472 2c20 696e 7420   char *str, int 
002b750: 6c65 6e29 3b0a 696e 7420 4556 505f 504b  len);.int EVP_PK
002b760: 4559 5f61 736e 315f 6164 6430 2863 6f6e  EY_asn1_add0(con
002b770: 7374 2045 5650 5f50 4b45 595f 4153 4e31  st EVP_PKEY_ASN1
002b780: 5f4d 4554 484f 4420 2a61 6d65 7468 293b  _METHOD *ameth);
002b790: 0a69 6e74 2045 5650 5f50 4b45 595f 6173  .int EVP_PKEY_as
002b7a0: 6e31 5f61 6464 5f61 6c69 6173 2869 6e74  n1_add_alias(int
002b7b0: 2074 6f2c 2069 6e74 2066 726f 6d29 3b0a   to, int from);.
002b7c0: 696e 7420 4556 505f 504b 4559 5f61 736e  int EVP_PKEY_asn
002b7d0: 315f 6765 7430 5f69 6e66 6f28 696e 7420  1_get0_info(int 
002b7e0: 2a70 706b 6579 5f69 642c 2069 6e74 202a  *ppkey_id, int *
002b7f0: 706b 6579 5f62 6173 655f 6964 2c20 696e  pkey_base_id, in
002b800: 7420 2a70 706b 6579 5f66 6c61 6773 2c0a  t *ppkey_flags,.
002b810: 2020 2020 636f 6e73 7420 6368 6172 202a      const char *
002b820: 2a70 696e 666f 2c20 636f 6e73 7420 6368  *pinfo, const ch
002b830: 6172 202a 2a70 7065 6d5f 7374 722c 0a20  ar **ppem_str,. 
002b840: 2020 2020 636f 6e73 7420 4556 505f 504b      const EVP_PK
002b850: 4559 5f41 534e 315f 4d45 5448 4f44 202a  EY_ASN1_METHOD *
002b860: 616d 6574 6829 3b0a 0a63 6f6e 7374 2045  ameth);..const E
002b870: 5650 5f50 4b45 595f 4153 4e31 5f4d 4554  VP_PKEY_ASN1_MET
002b880: 484f 442a 2045 5650 5f50 4b45 595f 6765  HOD* EVP_PKEY_ge
002b890: 7430 5f61 736e 3128 4556 505f 504b 4559  t0_asn1(EVP_PKEY
002b8a0: 202a 706b 6579 293b 0a45 5650 5f50 4b45   *pkey);.EVP_PKE
002b8b0: 595f 4153 4e31 5f4d 4554 484f 442a 2045  Y_ASN1_METHOD* E
002b8c0: 5650 5f50 4b45 595f 6173 6e31 5f6e 6577  VP_PKEY_asn1_new
002b8d0: 2869 6e74 2069 642c 2069 6e74 2066 6c61  (int id, int fla
002b8e0: 6773 2c0a 2020 2020 2063 6f6e 7374 2063  gs,.     const c
002b8f0: 6861 7220 2a70 656d 5f73 7472 2c20 636f  har *pem_str, co
002b900: 6e73 7420 6368 6172 202a 696e 666f 293b  nst char *info);
002b910: 0a76 6f69 6420 4556 505f 504b 4559 5f61  .void EVP_PKEY_a
002b920: 736e 315f 636f 7079 2845 5650 5f50 4b45  sn1_copy(EVP_PKE
002b930: 595f 4153 4e31 5f4d 4554 484f 4420 2a64  Y_ASN1_METHOD *d
002b940: 7374 2c0a 2020 2063 6f6e 7374 2045 5650  st,.   const EVP
002b950: 5f50 4b45 595f 4153 4e31 5f4d 4554 484f  _PKEY_ASN1_METHO
002b960: 4420 2a73 7263 293b 0a76 6f69 6420 4556  D *src);.void EV
002b970: 505f 504b 4559 5f61 736e 315f 6672 6565  P_PKEY_asn1_free
002b980: 2845 5650 5f50 4b45 595f 4153 4e31 5f4d  (EVP_PKEY_ASN1_M
002b990: 4554 484f 4420 2a61 6d65 7468 293b 0a76  ETHOD *ameth);.v
002b9a0: 6f69 6420 4556 505f 504b 4559 5f61 736e  oid EVP_PKEY_asn
002b9b0: 315f 7365 745f 7075 626c 6963 2845 5650  1_set_public(EVP
002b9c0: 5f50 4b45 595f 4153 4e31 5f4d 4554 484f  _PKEY_ASN1_METHO
002b9d0: 4420 2a61 6d65 7468 2c0a 2020 696e 7420  D *ameth,.  int 
002b9e0: 282a 7075 625f 6465 636f 6465 2928 4556  (*pub_decode)(EV
002b9f0: 505f 504b 4559 202a 706b 2c20 5835 3039  P_PKEY *pk, X509
002ba00: 5f50 5542 4b45 5920 2a70 7562 292c 0a20  _PUBKEY *pub),. 
002ba10: 2069 6e74 2028 2a70 7562 5f65 6e63 6f64   int (*pub_encod
002ba20: 6529 2858 3530 395f 5055 424b 4559 202a  e)(X509_PUBKEY *
002ba30: 7075 622c 2063 6f6e 7374 2045 5650 5f50  pub, const EVP_P
002ba40: 4b45 5920 2a70 6b29 2c0a 2020 696e 7420  KEY *pk),.  int 
002ba50: 282a 7075 625f 636d 7029 2863 6f6e 7374  (*pub_cmp)(const
002ba60: 2045 5650 5f50 4b45 5920 2a61 2c20 636f   EVP_PKEY *a, co
002ba70: 6e73 7420 4556 505f 504b 4559 202a 6229  nst EVP_PKEY *b)
002ba80: 2c0a 2020 696e 7420 282a 7075 625f 7072  ,.  int (*pub_pr
002ba90: 696e 7429 2842 494f 202a 6f75 742c 2063  int)(BIO *out, c
002baa0: 6f6e 7374 2045 5650 5f50 4b45 5920 2a70  onst EVP_PKEY *p
002bab0: 6b65 792c 2069 6e74 2069 6e64 656e 742c  key, int indent,
002bac0: 0a20 2020 2020 2020 4153 4e31 5f50 4354  .       ASN1_PCT
002bad0: 5820 2a70 6374 7829 2c0a 2020 696e 7420  X *pctx),.  int 
002bae0: 282a 706b 6579 5f73 697a 6529 2863 6f6e  (*pkey_size)(con
002baf0: 7374 2045 5650 5f50 4b45 5920 2a70 6b29  st EVP_PKEY *pk)
002bb00: 2c0a 2020 696e 7420 282a 706b 6579 5f62  ,.  int (*pkey_b
002bb10: 6974 7329 2863 6f6e 7374 2045 5650 5f50  its)(const EVP_P
002bb20: 4b45 5920 2a70 6b29 293b 0a76 6f69 6420  KEY *pk));.void 
002bb30: 4556 505f 504b 4559 5f61 736e 315f 7365  EVP_PKEY_asn1_se
002bb40: 745f 7072 6976 6174 6528 4556 505f 504b  t_private(EVP_PK
002bb50: 4559 5f41 534e 315f 4d45 5448 4f44 202a  EY_ASN1_METHOD *
002bb60: 616d 6574 682c 0a20 2069 6e74 2028 2a70  ameth,.  int (*p
002bb70: 7269 765f 6465 636f 6465 2928 4556 505f  riv_decode)(EVP_
002bb80: 504b 4559 202a 706b 2c20 504b 4353 385f  PKEY *pk, PKCS8_
002bb90: 5052 4956 5f4b 4559 5f49 4e46 4f20 2a70  PRIV_KEY_INFO *p
002bba0: 3869 6e66 292c 0a20 2069 6e74 2028 2a70  8inf),.  int (*p
002bbb0: 7269 765f 656e 636f 6465 2928 504b 4353  riv_encode)(PKCS
002bbc0: 385f 5052 4956 5f4b 4559 5f49 4e46 4f20  8_PRIV_KEY_INFO 
002bbd0: 2a70 382c 2063 6f6e 7374 2045 5650 5f50  *p8, const EVP_P
002bbe0: 4b45 5920 2a70 6b29 2c0a 2020 696e 7420  KEY *pk),.  int 
002bbf0: 282a 7072 6976 5f70 7269 6e74 2928 4249  (*priv_print)(BI
002bc00: 4f20 2a6f 7574 2c20 636f 6e73 7420 4556  O *out, const EV
002bc10: 505f 504b 4559 202a 706b 6579 2c20 696e  P_PKEY *pkey, in
002bc20: 7420 696e 6465 6e74 2c0a 2020 2020 2020  t indent,.      
002bc30: 2041 534e 315f 5043 5458 202a 7063 7478   ASN1_PCTX *pctx
002bc40: 2929 3b0a 766f 6964 2045 5650 5f50 4b45  ));.void EVP_PKE
002bc50: 595f 6173 6e31 5f73 6574 5f70 6172 616d  Y_asn1_set_param
002bc60: 2845 5650 5f50 4b45 595f 4153 4e31 5f4d  (EVP_PKEY_ASN1_M
002bc70: 4554 484f 4420 2a61 6d65 7468 2c0a 2020  ETHOD *ameth,.  
002bc80: 696e 7420 282a 7061 7261 6d5f 6465 636f  int (*param_deco
002bc90: 6465 2928 4556 505f 504b 4559 202a 706b  de)(EVP_PKEY *pk
002bca0: 6579 2c0a 2020 2020 636f 6e73 7420 756e  ey,.    const un
002bcb0: 7369 676e 6564 2063 6861 7220 2a2a 7064  signed char **pd
002bcc0: 6572 2c20 696e 7420 6465 726c 656e 292c  er, int derlen),
002bcd0: 0a20 2069 6e74 2028 2a70 6172 616d 5f65  .  int (*param_e
002bce0: 6e63 6f64 6529 2863 6f6e 7374 2045 5650  ncode)(const EVP
002bcf0: 5f50 4b45 5920 2a70 6b65 792c 2075 6e73  _PKEY *pkey, uns
002bd00: 6967 6e65 6420 6368 6172 202a 2a70 6465  igned char **pde
002bd10: 7229 2c0a 2020 696e 7420 282a 7061 7261  r),.  int (*para
002bd20: 6d5f 6d69 7373 696e 6729 2863 6f6e 7374  m_missing)(const
002bd30: 2045 5650 5f50 4b45 5920 2a70 6b29 2c0a   EVP_PKEY *pk),.
002bd40: 2020 696e 7420 282a 7061 7261 6d5f 636f    int (*param_co
002bd50: 7079 2928 4556 505f 504b 4559 202a 746f  py)(EVP_PKEY *to
002bd60: 2c20 636f 6e73 7420 4556 505f 504b 4559  , const EVP_PKEY
002bd70: 202a 6672 6f6d 292c 0a20 2069 6e74 2028   *from),.  int (
002bd80: 2a70 6172 616d 5f63 6d70 2928 636f 6e73  *param_cmp)(cons
002bd90: 7420 4556 505f 504b 4559 202a 612c 2063  t EVP_PKEY *a, c
002bda0: 6f6e 7374 2045 5650 5f50 4b45 5920 2a62  onst EVP_PKEY *b
002bdb0: 292c 0a20 2069 6e74 2028 2a70 6172 616d  ),.  int (*param
002bdc0: 5f70 7269 6e74 2928 4249 4f20 2a6f 7574  _print)(BIO *out
002bdd0: 2c20 636f 6e73 7420 4556 505f 504b 4559  , const EVP_PKEY
002bde0: 202a 706b 6579 2c20 696e 7420 696e 6465   *pkey, int inde
002bdf0: 6e74 2c0a 2020 2020 2020 2041 534e 315f  nt,.       ASN1_
002be00: 5043 5458 202a 7063 7478 2929 3b0a 0a76  PCTX *pctx));..v
002be10: 6f69 6420 4556 505f 504b 4559 5f61 736e  oid EVP_PKEY_asn
002be20: 315f 7365 745f 6672 6565 2845 5650 5f50  1_set_free(EVP_P
002be30: 4b45 595f 4153 4e31 5f4d 4554 484f 4420  KEY_ASN1_METHOD 
002be40: 2a61 6d65 7468 2c0a 2020 766f 6964 2028  *ameth,.  void (
002be50: 2a70 6b65 795f 6672 6565 2928 4556 505f  *pkey_free)(EVP_
002be60: 504b 4559 202a 706b 6579 2929 3b0a 766f  PKEY *pkey));.vo
002be70: 6964 2045 5650 5f50 4b45 595f 6173 6e31  id EVP_PKEY_asn1
002be80: 5f73 6574 5f63 7472 6c28 4556 505f 504b  _set_ctrl(EVP_PK
002be90: 4559 5f41 534e 315f 4d45 5448 4f44 202a  EY_ASN1_METHOD *
002bea0: 616d 6574 682c 0a20 2069 6e74 2028 2a70  ameth,.  int (*p
002beb0: 6b65 795f 6374 726c 2928 4556 505f 504b  key_ctrl)(EVP_PK
002bec0: 4559 202a 706b 6579 2c20 696e 7420 6f70  EY *pkey, int op
002bed0: 2c0a 2020 2020 2020 206c 6f6e 6720 6172  ,.       long ar
002bee0: 6731 2c20 766f 6964 202a 6172 6732 2929  g1, void *arg2))
002bef0: 3b0a 2320 3131 3235 2022 2f75 7372 2f69  ;.# 1125 "/usr/i
002bf00: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f65  nclude/openssl/e
002bf10: 7670 2e68 2220 3320 340a 636f 6e73 7420  vp.h" 3 4.const 
002bf20: 4556 505f 504b 4559 5f4d 4554 484f 4420  EVP_PKEY_METHOD 
002bf30: 2a45 5650 5f50 4b45 595f 6d65 7468 5f66  *EVP_PKEY_meth_f
002bf40: 696e 6428 696e 7420 7479 7065 293b 0a45  ind(int type);.E
002bf50: 5650 5f50 4b45 595f 4d45 5448 4f44 2a20  VP_PKEY_METHOD* 
002bf60: 4556 505f 504b 4559 5f6d 6574 685f 6e65  EVP_PKEY_meth_ne
002bf70: 7728 696e 7420 6964 2c20 696e 7420 666c  w(int id, int fl
002bf80: 6167 7329 3b0a 766f 6964 2045 5650 5f50  ags);.void EVP_P
002bf90: 4b45 595f 6d65 7468 5f67 6574 305f 696e  KEY_meth_get0_in
002bfa0: 666f 2869 6e74 202a 7070 6b65 795f 6964  fo(int *ppkey_id
002bfb0: 2c20 696e 7420 2a70 666c 6167 732c 0a20  , int *pflags,. 
002bfc0: 2020 2063 6f6e 7374 2045 5650 5f50 4b45     const EVP_PKE
002bfd0: 595f 4d45 5448 4f44 202a 6d65 7468 293b  Y_METHOD *meth);
002bfe0: 0a76 6f69 6420 4556 505f 504b 4559 5f6d  .void EVP_PKEY_m
002bff0: 6574 685f 636f 7079 2845 5650 5f50 4b45  eth_copy(EVP_PKE
002c000: 595f 4d45 5448 4f44 202a 6473 742c 2063  Y_METHOD *dst, c
002c010: 6f6e 7374 2045 5650 5f50 4b45 595f 4d45  onst EVP_PKEY_ME
002c020: 5448 4f44 202a 7372 6329 3b0a 766f 6964  THOD *src);.void
002c030: 2045 5650 5f50 4b45 595f 6d65 7468 5f66   EVP_PKEY_meth_f
002c040: 7265 6528 4556 505f 504b 4559 5f4d 4554  ree(EVP_PKEY_MET
002c050: 484f 4420 2a70 6d65 7468 293b 0a69 6e74  HOD *pmeth);.int
002c060: 2045 5650 5f50 4b45 595f 6d65 7468 5f61   EVP_PKEY_meth_a
002c070: 6464 3028 636f 6e73 7420 4556 505f 504b  dd0(const EVP_PK
002c080: 4559 5f4d 4554 484f 4420 2a70 6d65 7468  EY_METHOD *pmeth
002c090: 293b 0a0a 4556 505f 504b 4559 5f43 5458  );..EVP_PKEY_CTX
002c0a0: 202a 4556 505f 504b 4559 5f43 5458 5f6e   *EVP_PKEY_CTX_n
002c0b0: 6577 2845 5650 5f50 4b45 5920 2a70 6b65  ew(EVP_PKEY *pke
002c0c0: 792c 2045 4e47 494e 4520 2a65 293b 0a45  y, ENGINE *e);.E
002c0d0: 5650 5f50 4b45 595f 4354 5820 2a45 5650  VP_PKEY_CTX *EVP
002c0e0: 5f50 4b45 595f 4354 585f 6e65 775f 6964  _PKEY_CTX_new_id
002c0f0: 2869 6e74 2069 642c 2045 4e47 494e 4520  (int id, ENGINE 
002c100: 2a65 293b 0a45 5650 5f50 4b45 595f 4354  *e);.EVP_PKEY_CT
002c110: 5820 2a45 5650 5f50 4b45 595f 4354 585f  X *EVP_PKEY_CTX_
002c120: 6475 7028 4556 505f 504b 4559 5f43 5458  dup(EVP_PKEY_CTX
002c130: 202a 6374 7829 3b0a 766f 6964 2045 5650   *ctx);.void EVP
002c140: 5f50 4b45 595f 4354 585f 6672 6565 2845  _PKEY_CTX_free(E
002c150: 5650 5f50 4b45 595f 4354 5820 2a63 7478  VP_PKEY_CTX *ctx
002c160: 293b 0a0a 696e 7420 4556 505f 504b 4559  );..int EVP_PKEY
002c170: 5f43 5458 5f63 7472 6c28 4556 505f 504b  _CTX_ctrl(EVP_PK
002c180: 4559 5f43 5458 202a 6374 782c 2069 6e74  EY_CTX *ctx, int
002c190: 206b 6579 7479 7065 2c20 696e 7420 6f70   keytype, int op
002c1a0: 7479 7065 2c0a 2020 2020 696e 7420 636d  type,.    int cm
002c1b0: 642c 2069 6e74 2070 312c 2076 6f69 6420  d, int p1, void 
002c1c0: 2a70 3229 3b0a 696e 7420 4556 505f 504b  *p2);.int EVP_PK
002c1d0: 4559 5f43 5458 5f63 7472 6c5f 7374 7228  EY_CTX_ctrl_str(
002c1e0: 4556 505f 504b 4559 5f43 5458 202a 6374  EVP_PKEY_CTX *ct
002c1f0: 782c 2063 6f6e 7374 2063 6861 7220 2a74  x, const char *t
002c200: 7970 652c 0a20 2020 2020 2063 6f6e 7374  ype,.      const
002c210: 2063 6861 7220 2a76 616c 7565 293b 0a0a   char *value);..
002c220: 696e 7420 4556 505f 504b 4559 5f43 5458  int EVP_PKEY_CTX
002c230: 5f67 6574 5f6f 7065 7261 7469 6f6e 2845  _get_operation(E
002c240: 5650 5f50 4b45 595f 4354 5820 2a63 7478  VP_PKEY_CTX *ctx
002c250: 293b 0a76 6f69 6420 4556 505f 504b 4559  );.void EVP_PKEY
002c260: 5f43 5458 5f73 6574 305f 6b65 7967 656e  _CTX_set0_keygen
002c270: 5f69 6e66 6f28 4556 505f 504b 4559 5f43  _info(EVP_PKEY_C
002c280: 5458 202a 6374 782c 2069 6e74 202a 6461  TX *ctx, int *da
002c290: 742c 2069 6e74 2064 6174 6c65 6e29 3b0a  t, int datlen);.
002c2a0: 0a45 5650 5f50 4b45 5920 2a45 5650 5f50  .EVP_PKEY *EVP_P
002c2b0: 4b45 595f 6e65 775f 6d61 635f 6b65 7928  KEY_new_mac_key(
002c2c0: 696e 7420 7479 7065 2c20 454e 4749 4e45  int type, ENGINE
002c2d0: 202a 652c 0a20 2020 2063 6f6e 7374 2075   *e,.    const u
002c2e0: 6e73 6967 6e65 6420 6368 6172 202a 6b65  nsigned char *ke
002c2f0: 792c 2069 6e74 206b 6579 6c65 6e29 3b0a  y, int keylen);.
002c300: 0a76 6f69 6420 4556 505f 504b 4559 5f43  .void EVP_PKEY_C
002c310: 5458 5f73 6574 5f64 6174 6128 4556 505f  TX_set_data(EVP_
002c320: 504b 4559 5f43 5458 202a 6374 782c 2076  PKEY_CTX *ctx, v
002c330: 6f69 6420 2a64 6174 6129 3b0a 766f 6964  oid *data);.void
002c340: 202a 4556 505f 504b 4559 5f43 5458 5f67   *EVP_PKEY_CTX_g
002c350: 6574 5f64 6174 6128 4556 505f 504b 4559  et_data(EVP_PKEY
002c360: 5f43 5458 202a 6374 7829 3b0a 4556 505f  _CTX *ctx);.EVP_
002c370: 504b 4559 202a 4556 505f 504b 4559 5f43  PKEY *EVP_PKEY_C
002c380: 5458 5f67 6574 305f 706b 6579 2845 5650  TX_get0_pkey(EVP
002c390: 5f50 4b45 595f 4354 5820 2a63 7478 293b  _PKEY_CTX *ctx);
002c3a0: 0a0a 4556 505f 504b 4559 202a 4556 505f  ..EVP_PKEY *EVP_
002c3b0: 504b 4559 5f43 5458 5f67 6574 305f 7065  PKEY_CTX_get0_pe
002c3c0: 6572 6b65 7928 4556 505f 504b 4559 5f43  erkey(EVP_PKEY_C
002c3d0: 5458 202a 6374 7829 3b0a 0a76 6f69 6420  TX *ctx);..void 
002c3e0: 4556 505f 504b 4559 5f43 5458 5f73 6574  EVP_PKEY_CTX_set
002c3f0: 5f61 7070 5f64 6174 6128 4556 505f 504b  _app_data(EVP_PK
002c400: 4559 5f43 5458 202a 6374 782c 2076 6f69  EY_CTX *ctx, voi
002c410: 6420 2a64 6174 6129 3b0a 766f 6964 202a  d *data);.void *
002c420: 4556 505f 504b 4559 5f43 5458 5f67 6574  EVP_PKEY_CTX_get
002c430: 5f61 7070 5f64 6174 6128 4556 505f 504b  _app_data(EVP_PK
002c440: 4559 5f43 5458 202a 6374 7829 3b0a 0a69  EY_CTX *ctx);..i
002c450: 6e74 2045 5650 5f50 4b45 595f 7369 676e  nt EVP_PKEY_sign
002c460: 5f69 6e69 7428 4556 505f 504b 4559 5f43  _init(EVP_PKEY_C
002c470: 5458 202a 6374 7829 3b0a 696e 7420 4556  TX *ctx);.int EV
002c480: 505f 504b 4559 5f73 6967 6e28 4556 505f  P_PKEY_sign(EVP_
002c490: 504b 4559 5f43 5458 202a 6374 782c 0a20  PKEY_CTX *ctx,. 
002c4a0: 2020 756e 7369 676e 6564 2063 6861 7220    unsigned char 
002c4b0: 2a73 6967 2c20 7369 7a65 5f74 202a 7369  *sig, size_t *si
002c4c0: 676c 656e 2c0a 2020 2063 6f6e 7374 2075  glen,.   const u
002c4d0: 6e73 6967 6e65 6420 6368 6172 202a 7462  nsigned char *tb
002c4e0: 732c 2073 697a 655f 7420 7462 736c 656e  s, size_t tbslen
002c4f0: 293b 0a69 6e74 2045 5650 5f50 4b45 595f  );.int EVP_PKEY_
002c500: 7665 7269 6679 5f69 6e69 7428 4556 505f  verify_init(EVP_
002c510: 504b 4559 5f43 5458 202a 6374 7829 3b0a  PKEY_CTX *ctx);.
002c520: 696e 7420 4556 505f 504b 4559 5f76 6572  int EVP_PKEY_ver
002c530: 6966 7928 4556 505f 504b 4559 5f43 5458  ify(EVP_PKEY_CTX
002c540: 202a 6374 782c 0a20 2020 636f 6e73 7420   *ctx,.   const 
002c550: 756e 7369 676e 6564 2063 6861 7220 2a73  unsigned char *s
002c560: 6967 2c20 7369 7a65 5f74 2073 6967 6c65  ig, size_t sigle
002c570: 6e2c 0a20 2020 636f 6e73 7420 756e 7369  n,.   const unsi
002c580: 676e 6564 2063 6861 7220 2a74 6273 2c20  gned char *tbs, 
002c590: 7369 7a65 5f74 2074 6273 6c65 6e29 3b0a  size_t tbslen);.
002c5a0: 696e 7420 4556 505f 504b 4559 5f76 6572  int EVP_PKEY_ver
002c5b0: 6966 795f 7265 636f 7665 725f 696e 6974  ify_recover_init
002c5c0: 2845 5650 5f50 4b45 595f 4354 5820 2a63  (EVP_PKEY_CTX *c
002c5d0: 7478 293b 0a69 6e74 2045 5650 5f50 4b45  tx);.int EVP_PKE
002c5e0: 595f 7665 7269 6679 5f72 6563 6f76 6572  Y_verify_recover
002c5f0: 2845 5650 5f50 4b45 595f 4354 5820 2a63  (EVP_PKEY_CTX *c
002c600: 7478 2c0a 2020 2075 6e73 6967 6e65 6420  tx,.   unsigned 
002c610: 6368 6172 202a 726f 7574 2c20 7369 7a65  char *rout, size
002c620: 5f74 202a 726f 7574 6c65 6e2c 0a20 2020  _t *routlen,.   
002c630: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
002c640: 6861 7220 2a73 6967 2c20 7369 7a65 5f74  har *sig, size_t
002c650: 2073 6967 6c65 6e29 3b0a 696e 7420 4556   siglen);.int EV
002c660: 505f 504b 4559 5f65 6e63 7279 7074 5f69  P_PKEY_encrypt_i
002c670: 6e69 7428 4556 505f 504b 4559 5f43 5458  nit(EVP_PKEY_CTX
002c680: 202a 6374 7829 3b0a 696e 7420 4556 505f   *ctx);.int EVP_
002c690: 504b 4559 5f65 6e63 7279 7074 2845 5650  PKEY_encrypt(EVP
002c6a0: 5f50 4b45 595f 4354 5820 2a63 7478 2c0a  _PKEY_CTX *ctx,.
002c6b0: 2020 2075 6e73 6967 6e65 6420 6368 6172     unsigned char
002c6c0: 202a 6f75 742c 2073 697a 655f 7420 2a6f   *out, size_t *o
002c6d0: 7574 6c65 6e2c 0a20 2020 636f 6e73 7420  utlen,.   const 
002c6e0: 756e 7369 676e 6564 2063 6861 7220 2a69  unsigned char *i
002c6f0: 6e2c 2073 697a 655f 7420 696e 6c65 6e29  n, size_t inlen)
002c700: 3b0a 696e 7420 4556 505f 504b 4559 5f64  ;.int EVP_PKEY_d
002c710: 6563 7279 7074 5f69 6e69 7428 4556 505f  ecrypt_init(EVP_
002c720: 504b 4559 5f43 5458 202a 6374 7829 3b0a  PKEY_CTX *ctx);.
002c730: 696e 7420 4556 505f 504b 4559 5f64 6563  int EVP_PKEY_dec
002c740: 7279 7074 2845 5650 5f50 4b45 595f 4354  rypt(EVP_PKEY_CT
002c750: 5820 2a63 7478 2c0a 2020 2075 6e73 6967  X *ctx,.   unsig
002c760: 6e65 6420 6368 6172 202a 6f75 742c 2073  ned char *out, s
002c770: 697a 655f 7420 2a6f 7574 6c65 6e2c 0a20  ize_t *outlen,. 
002c780: 2020 636f 6e73 7420 756e 7369 676e 6564    const unsigned
002c790: 2063 6861 7220 2a69 6e2c 2073 697a 655f   char *in, size_
002c7a0: 7420 696e 6c65 6e29 3b0a 0a69 6e74 2045  t inlen);..int E
002c7b0: 5650 5f50 4b45 595f 6465 7269 7665 5f69  VP_PKEY_derive_i
002c7c0: 6e69 7428 4556 505f 504b 4559 5f43 5458  nit(EVP_PKEY_CTX
002c7d0: 202a 6374 7829 3b0a 696e 7420 4556 505f   *ctx);.int EVP_
002c7e0: 504b 4559 5f64 6572 6976 655f 7365 745f  PKEY_derive_set_
002c7f0: 7065 6572 2845 5650 5f50 4b45 595f 4354  peer(EVP_PKEY_CT
002c800: 5820 2a63 7478 2c20 4556 505f 504b 4559  X *ctx, EVP_PKEY
002c810: 202a 7065 6572 293b 0a69 6e74 2045 5650   *peer);.int EVP
002c820: 5f50 4b45 595f 6465 7269 7665 2845 5650  _PKEY_derive(EVP
002c830: 5f50 4b45 595f 4354 5820 2a63 7478 2c20  _PKEY_CTX *ctx, 
002c840: 756e 7369 676e 6564 2063 6861 7220 2a6b  unsigned char *k
002c850: 6579 2c20 7369 7a65 5f74 202a 6b65 796c  ey, size_t *keyl
002c860: 656e 293b 0a0a 7479 7065 6465 6620 696e  en);..typedef in
002c870: 7420 4556 505f 504b 4559 5f67 656e 5f63  t EVP_PKEY_gen_c
002c880: 6228 4556 505f 504b 4559 5f43 5458 202a  b(EVP_PKEY_CTX *
002c890: 6374 7829 3b0a 0a69 6e74 2045 5650 5f50  ctx);..int EVP_P
002c8a0: 4b45 595f 7061 7261 6d67 656e 5f69 6e69  KEY_paramgen_ini
002c8b0: 7428 4556 505f 504b 4559 5f43 5458 202a  t(EVP_PKEY_CTX *
002c8c0: 6374 7829 3b0a 696e 7420 4556 505f 504b  ctx);.int EVP_PK
002c8d0: 4559 5f70 6172 616d 6765 6e28 4556 505f  EY_paramgen(EVP_
002c8e0: 504b 4559 5f43 5458 202a 6374 782c 2045  PKEY_CTX *ctx, E
002c8f0: 5650 5f50 4b45 5920 2a2a 7070 6b65 7929  VP_PKEY **ppkey)
002c900: 3b0a 696e 7420 4556 505f 504b 4559 5f6b  ;.int EVP_PKEY_k
002c910: 6579 6765 6e5f 696e 6974 2845 5650 5f50  eygen_init(EVP_P
002c920: 4b45 595f 4354 5820 2a63 7478 293b 0a69  KEY_CTX *ctx);.i
002c930: 6e74 2045 5650 5f50 4b45 595f 6b65 7967  nt EVP_PKEY_keyg
002c940: 656e 2845 5650 5f50 4b45 595f 4354 5820  en(EVP_PKEY_CTX 
002c950: 2a63 7478 2c20 4556 505f 504b 4559 202a  *ctx, EVP_PKEY *
002c960: 2a70 706b 6579 293b 0a0a 766f 6964 2045  *ppkey);..void E
002c970: 5650 5f50 4b45 595f 4354 585f 7365 745f  VP_PKEY_CTX_set_
002c980: 6362 2845 5650 5f50 4b45 595f 4354 5820  cb(EVP_PKEY_CTX 
002c990: 2a63 7478 2c20 4556 505f 504b 4559 5f67  *ctx, EVP_PKEY_g
002c9a0: 656e 5f63 6220 2a63 6229 3b0a 4556 505f  en_cb *cb);.EVP_
002c9b0: 504b 4559 5f67 656e 5f63 6220 2a45 5650  PKEY_gen_cb *EVP
002c9c0: 5f50 4b45 595f 4354 585f 6765 745f 6362  _PKEY_CTX_get_cb
002c9d0: 2845 5650 5f50 4b45 595f 4354 5820 2a63  (EVP_PKEY_CTX *c
002c9e0: 7478 293b 0a0a 696e 7420 4556 505f 504b  tx);..int EVP_PK
002c9f0: 4559 5f43 5458 5f67 6574 5f6b 6579 6765  EY_CTX_get_keyge
002ca00: 6e5f 696e 666f 2845 5650 5f50 4b45 595f  n_info(EVP_PKEY_
002ca10: 4354 5820 2a63 7478 2c20 696e 7420 6964  CTX *ctx, int id
002ca20: 7829 3b0a 0a76 6f69 6420 4556 505f 504b  x);..void EVP_PK
002ca30: 4559 5f6d 6574 685f 7365 745f 696e 6974  EY_meth_set_init
002ca40: 2845 5650 5f50 4b45 595f 4d45 5448 4f44  (EVP_PKEY_METHOD
002ca50: 202a 706d 6574 682c 0a20 696e 7420 282a   *pmeth,. int (*
002ca60: 696e 6974 2928 4556 505f 504b 4559 5f43  init)(EVP_PKEY_C
002ca70: 5458 202a 6374 7829 293b 0a0a 766f 6964  TX *ctx));..void
002ca80: 2045 5650 5f50 4b45 595f 6d65 7468 5f73   EVP_PKEY_meth_s
002ca90: 6574 5f63 6f70 7928 4556 505f 504b 4559  et_copy(EVP_PKEY
002caa0: 5f4d 4554 484f 4420 2a70 6d65 7468 2c0a  _METHOD *pmeth,.
002cab0: 2069 6e74 2028 2a63 6f70 7929 2845 5650   int (*copy)(EVP
002cac0: 5f50 4b45 595f 4354 5820 2a64 7374 2c20  _PKEY_CTX *dst, 
002cad0: 4556 505f 504b 4559 5f43 5458 202a 7372  EVP_PKEY_CTX *sr
002cae0: 6329 293b 0a0a 766f 6964 2045 5650 5f50  c));..void EVP_P
002caf0: 4b45 595f 6d65 7468 5f73 6574 5f63 6c65  KEY_meth_set_cle
002cb00: 616e 7570 2845 5650 5f50 4b45 595f 4d45  anup(EVP_PKEY_ME
002cb10: 5448 4f44 202a 706d 6574 682c 0a20 766f  THOD *pmeth,. vo
002cb20: 6964 2028 2a63 6c65 616e 7570 2928 4556  id (*cleanup)(EV
002cb30: 505f 504b 4559 5f43 5458 202a 6374 7829  P_PKEY_CTX *ctx)
002cb40: 293b 0a0a 766f 6964 2045 5650 5f50 4b45  );..void EVP_PKE
002cb50: 595f 6d65 7468 5f73 6574 5f70 6172 616d  Y_meth_set_param
002cb60: 6765 6e28 4556 505f 504b 4559 5f4d 4554  gen(EVP_PKEY_MET
002cb70: 484f 4420 2a70 6d65 7468 2c0a 2069 6e74  HOD *pmeth,. int
002cb80: 2028 2a70 6172 616d 6765 6e5f 696e 6974   (*paramgen_init
002cb90: 2928 4556 505f 504b 4559 5f43 5458 202a  )(EVP_PKEY_CTX *
002cba0: 6374 7829 2c0a 2069 6e74 2028 2a70 6172  ctx),. int (*par
002cbb0: 616d 6765 6e29 2845 5650 5f50 4b45 595f  amgen)(EVP_PKEY_
002cbc0: 4354 5820 2a63 7478 2c20 4556 505f 504b  CTX *ctx, EVP_PK
002cbd0: 4559 202a 706b 6579 2929 3b0a 0a76 6f69  EY *pkey));..voi
002cbe0: 6420 4556 505f 504b 4559 5f6d 6574 685f  d EVP_PKEY_meth_
002cbf0: 7365 745f 6b65 7967 656e 2845 5650 5f50  set_keygen(EVP_P
002cc00: 4b45 595f 4d45 5448 4f44 202a 706d 6574  KEY_METHOD *pmet
002cc10: 682c 0a20 696e 7420 282a 6b65 7967 656e  h,. int (*keygen
002cc20: 5f69 6e69 7429 2845 5650 5f50 4b45 595f  _init)(EVP_PKEY_
002cc30: 4354 5820 2a63 7478 292c 0a20 696e 7420  CTX *ctx),. int 
002cc40: 282a 6b65 7967 656e 2928 4556 505f 504b  (*keygen)(EVP_PK
002cc50: 4559 5f43 5458 202a 6374 782c 2045 5650  EY_CTX *ctx, EVP
002cc60: 5f50 4b45 5920 2a70 6b65 7929 293b 0a0a  _PKEY *pkey));..
002cc70: 766f 6964 2045 5650 5f50 4b45 595f 6d65  void EVP_PKEY_me
002cc80: 7468 5f73 6574 5f73 6967 6e28 4556 505f  th_set_sign(EVP_
002cc90: 504b 4559 5f4d 4554 484f 4420 2a70 6d65  PKEY_METHOD *pme
002cca0: 7468 2c0a 2069 6e74 2028 2a73 6967 6e5f  th,. int (*sign_
002ccb0: 696e 6974 2928 4556 505f 504b 4559 5f43  init)(EVP_PKEY_C
002ccc0: 5458 202a 6374 7829 2c0a 2069 6e74 2028  TX *ctx),. int (
002ccd0: 2a73 6967 6e29 2845 5650 5f50 4b45 595f  *sign)(EVP_PKEY_
002cce0: 4354 5820 2a63 7478 2c20 756e 7369 676e  CTX *ctx, unsign
002ccf0: 6564 2063 6861 7220 2a73 6967 2c20 7369  ed char *sig, si
002cd00: 7a65 5f74 202a 7369 676c 656e 2c0a 2020  ze_t *siglen,.  
002cd10: 2020 2063 6f6e 7374 2075 6e73 6967 6e65     const unsigne
002cd20: 6420 6368 6172 202a 7462 732c 2073 697a  d char *tbs, siz
002cd30: 655f 7420 7462 736c 656e 2929 3b0a 0a76  e_t tbslen));..v
002cd40: 6f69 6420 4556 505f 504b 4559 5f6d 6574  oid EVP_PKEY_met
002cd50: 685f 7365 745f 7665 7269 6679 2845 5650  h_set_verify(EVP
002cd60: 5f50 4b45 595f 4d45 5448 4f44 202a 706d  _PKEY_METHOD *pm
002cd70: 6574 682c 0a20 696e 7420 282a 7665 7269  eth,. int (*veri
002cd80: 6679 5f69 6e69 7429 2845 5650 5f50 4b45  fy_init)(EVP_PKE
002cd90: 595f 4354 5820 2a63 7478 292c 0a20 696e  Y_CTX *ctx),. in
002cda0: 7420 282a 7665 7269 6679 2928 4556 505f  t (*verify)(EVP_
002cdb0: 504b 4559 5f43 5458 202a 6374 782c 2063  PKEY_CTX *ctx, c
002cdc0: 6f6e 7374 2075 6e73 6967 6e65 6420 6368  onst unsigned ch
002cdd0: 6172 202a 7369 672c 2073 697a 655f 7420  ar *sig, size_t 
002cde0: 7369 676c 656e 2c0a 2020 2020 2063 6f6e  siglen,.     con
002cdf0: 7374 2075 6e73 6967 6e65 6420 6368 6172  st unsigned char
002ce00: 202a 7462 732c 2073 697a 655f 7420 7462   *tbs, size_t tb
002ce10: 736c 656e 2929 3b0a 0a76 6f69 6420 4556  slen));..void EV
002ce20: 505f 504b 4559 5f6d 6574 685f 7365 745f  P_PKEY_meth_set_
002ce30: 7665 7269 6679 5f72 6563 6f76 6572 2845  verify_recover(E
002ce40: 5650 5f50 4b45 595f 4d45 5448 4f44 202a  VP_PKEY_METHOD *
002ce50: 706d 6574 682c 0a20 696e 7420 282a 7665  pmeth,. int (*ve
002ce60: 7269 6679 5f72 6563 6f76 6572 5f69 6e69  rify_recover_ini
002ce70: 7429 2845 5650 5f50 4b45 595f 4354 5820  t)(EVP_PKEY_CTX 
002ce80: 2a63 7478 292c 0a20 696e 7420 282a 7665  *ctx),. int (*ve
002ce90: 7269 6679 5f72 6563 6f76 6572 2928 4556  rify_recover)(EV
002cea0: 505f 504b 4559 5f43 5458 202a 6374 782c  P_PKEY_CTX *ctx,
002ceb0: 0a20 2020 2020 756e 7369 676e 6564 2063  .     unsigned c
002cec0: 6861 7220 2a73 6967 2c20 7369 7a65 5f74  har *sig, size_t
002ced0: 202a 7369 676c 656e 2c0a 2020 2020 2063   *siglen,.     c
002cee0: 6f6e 7374 2075 6e73 6967 6e65 6420 6368  onst unsigned ch
002cef0: 6172 202a 7462 732c 2073 697a 655f 7420  ar *tbs, size_t 
002cf00: 7462 736c 656e 2929 3b0a 0a76 6f69 6420  tbslen));..void 
002cf10: 4556 505f 504b 4559 5f6d 6574 685f 7365  EVP_PKEY_meth_se
002cf20: 745f 7369 676e 6374 7828 4556 505f 504b  t_signctx(EVP_PK
002cf30: 4559 5f4d 4554 484f 4420 2a70 6d65 7468  EY_METHOD *pmeth
002cf40: 2c0a 2069 6e74 2028 2a73 6967 6e63 7478  ,. int (*signctx
002cf50: 5f69 6e69 7429 2845 5650 5f50 4b45 595f  _init)(EVP_PKEY_
002cf60: 4354 5820 2a63 7478 2c20 4556 505f 4d44  CTX *ctx, EVP_MD
002cf70: 5f43 5458 202a 6d63 7478 292c 0a20 696e  _CTX *mctx),. in
002cf80: 7420 282a 7369 676e 6374 7829 2845 5650  t (*signctx)(EVP
002cf90: 5f50 4b45 595f 4354 5820 2a63 7478 2c20  _PKEY_CTX *ctx, 
002cfa0: 756e 7369 676e 6564 2063 6861 7220 2a73  unsigned char *s
002cfb0: 6967 2c20 7369 7a65 5f74 202a 7369 676c  ig, size_t *sigl
002cfc0: 656e 2c0a 2020 2020 2045 5650 5f4d 445f  en,.     EVP_MD_
002cfd0: 4354 5820 2a6d 6374 7829 293b 0a0a 766f  CTX *mctx));..vo
002cfe0: 6964 2045 5650 5f50 4b45 595f 6d65 7468  id EVP_PKEY_meth
002cff0: 5f73 6574 5f76 6572 6966 7963 7478 2845  _set_verifyctx(E
002d000: 5650 5f50 4b45 595f 4d45 5448 4f44 202a  VP_PKEY_METHOD *
002d010: 706d 6574 682c 0a20 696e 7420 282a 7665  pmeth,. int (*ve
002d020: 7269 6679 6374 785f 696e 6974 2928 4556  rifyctx_init)(EV
002d030: 505f 504b 4559 5f43 5458 202a 6374 782c  P_PKEY_CTX *ctx,
002d040: 2045 5650 5f4d 445f 4354 5820 2a6d 6374   EVP_MD_CTX *mct
002d050: 7829 2c0a 2069 6e74 2028 2a76 6572 6966  x),. int (*verif
002d060: 7963 7478 2928 4556 505f 504b 4559 5f43  yctx)(EVP_PKEY_C
002d070: 5458 202a 6374 782c 2063 6f6e 7374 2075  TX *ctx, const u
002d080: 6e73 6967 6e65 6420 6368 6172 202a 7369  nsigned char *si
002d090: 672c 696e 7420 7369 676c 656e 2c0a 2020  g,int siglen,.  
002d0a0: 2020 2045 5650 5f4d 445f 4354 5820 2a6d     EVP_MD_CTX *m
002d0b0: 6374 7829 293b 0a0a 766f 6964 2045 5650  ctx));..void EVP
002d0c0: 5f50 4b45 595f 6d65 7468 5f73 6574 5f65  _PKEY_meth_set_e
002d0d0: 6e63 7279 7074 2845 5650 5f50 4b45 595f  ncrypt(EVP_PKEY_
002d0e0: 4d45 5448 4f44 202a 706d 6574 682c 0a20  METHOD *pmeth,. 
002d0f0: 696e 7420 282a 656e 6372 7970 745f 696e  int (*encrypt_in
002d100: 6974 2928 4556 505f 504b 4559 5f43 5458  it)(EVP_PKEY_CTX
002d110: 202a 6374 7829 2c0a 2069 6e74 2028 2a65   *ctx),. int (*e
002d120: 6e63 7279 7074 666e 2928 4556 505f 504b  ncryptfn)(EVP_PK
002d130: 4559 5f43 5458 202a 6374 782c 2075 6e73  EY_CTX *ctx, uns
002d140: 6967 6e65 6420 6368 6172 202a 6f75 742c  igned char *out,
002d150: 2073 697a 655f 7420 2a6f 7574 6c65 6e2c   size_t *outlen,
002d160: 0a20 2020 2020 636f 6e73 7420 756e 7369  .     const unsi
002d170: 676e 6564 2063 6861 7220 2a69 6e2c 2073  gned char *in, s
002d180: 697a 655f 7420 696e 6c65 6e29 293b 0a0a  ize_t inlen));..
002d190: 766f 6964 2045 5650 5f50 4b45 595f 6d65  void EVP_PKEY_me
002d1a0: 7468 5f73 6574 5f64 6563 7279 7074 2845  th_set_decrypt(E
002d1b0: 5650 5f50 4b45 595f 4d45 5448 4f44 202a  VP_PKEY_METHOD *
002d1c0: 706d 6574 682c 0a20 696e 7420 282a 6465  pmeth,. int (*de
002d1d0: 6372 7970 745f 696e 6974 2928 4556 505f  crypt_init)(EVP_
002d1e0: 504b 4559 5f43 5458 202a 6374 7829 2c0a  PKEY_CTX *ctx),.
002d1f0: 2069 6e74 2028 2a64 6563 7279 7074 2928   int (*decrypt)(
002d200: 4556 505f 504b 4559 5f43 5458 202a 6374  EVP_PKEY_CTX *ct
002d210: 782c 2075 6e73 6967 6e65 6420 6368 6172  x, unsigned char
002d220: 202a 6f75 742c 2073 697a 655f 7420 2a6f   *out, size_t *o
002d230: 7574 6c65 6e2c 0a20 2020 2020 636f 6e73  utlen,.     cons
002d240: 7420 756e 7369 676e 6564 2063 6861 7220  t unsigned char 
002d250: 2a69 6e2c 2073 697a 655f 7420 696e 6c65  *in, size_t inle
002d260: 6e29 293b 0a0a 766f 6964 2045 5650 5f50  n));..void EVP_P
002d270: 4b45 595f 6d65 7468 5f73 6574 5f64 6572  KEY_meth_set_der
002d280: 6976 6528 4556 505f 504b 4559 5f4d 4554  ive(EVP_PKEY_MET
002d290: 484f 4420 2a70 6d65 7468 2c0a 2069 6e74  HOD *pmeth,. int
002d2a0: 2028 2a64 6572 6976 655f 696e 6974 2928   (*derive_init)(
002d2b0: 4556 505f 504b 4559 5f43 5458 202a 6374  EVP_PKEY_CTX *ct
002d2c0: 7829 2c0a 2069 6e74 2028 2a64 6572 6976  x),. int (*deriv
002d2d0: 6529 2845 5650 5f50 4b45 595f 4354 5820  e)(EVP_PKEY_CTX 
002d2e0: 2a63 7478 2c20 756e 7369 676e 6564 2063  *ctx, unsigned c
002d2f0: 6861 7220 2a6b 6579 2c20 7369 7a65 5f74  har *key, size_t
002d300: 202a 6b65 796c 656e 2929 3b0a 0a76 6f69   *keylen));..voi
002d310: 6420 4556 505f 504b 4559 5f6d 6574 685f  d EVP_PKEY_meth_
002d320: 7365 745f 6374 726c 2845 5650 5f50 4b45  set_ctrl(EVP_PKE
002d330: 595f 4d45 5448 4f44 202a 706d 6574 682c  Y_METHOD *pmeth,
002d340: 0a20 696e 7420 282a 6374 726c 2928 4556  . int (*ctrl)(EV
002d350: 505f 504b 4559 5f43 5458 202a 6374 782c  P_PKEY_CTX *ctx,
002d360: 2069 6e74 2074 7970 652c 2069 6e74 2070   int type, int p
002d370: 312c 2076 6f69 6420 2a70 3229 2c0a 2069  1, void *p2),. i
002d380: 6e74 2028 2a63 7472 6c5f 7374 7229 2845  nt (*ctrl_str)(E
002d390: 5650 5f50 4b45 595f 4354 5820 2a63 7478  VP_PKEY_CTX *ctx
002d3a0: 2c0a 2020 2020 2063 6f6e 7374 2063 6861  ,.     const cha
002d3b0: 7220 2a74 7970 652c 2063 6f6e 7374 2063  r *type, const c
002d3c0: 6861 7220 2a76 616c 7565 2929 3b0a 0a76  har *value));..v
002d3d0: 6f69 6420 4556 505f 6164 645f 616c 675f  oid EVP_add_alg_
002d3e0: 6d6f 6475 6c65 2876 6f69 6429 3b0a 0a0a  module(void);...
002d3f0: 0a0a 0a76 6f69 6420 4552 525f 6c6f 6164  ...void ERR_load
002d400: 5f45 5650 5f73 7472 696e 6773 2876 6f69  _EVP_strings(voi
002d410: 6429 3b0a 2320 3734 2022 2f75 7372 2f69  d);.# 74 "/usr/i
002d420: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f78  nclude/openssl/x
002d430: 3530 392e 6822 2032 2033 2034 0a23 2038  509.h" 2 3 4.# 8
002d440: 3320 222f 7573 722f 696e 636c 7564 652f  3 "/usr/include/
002d450: 6f70 656e 7373 6c2f 7835 3039 2e68 2220  openssl/x509.h" 
002d460: 3320 340a 2320 3120 222f 7573 722f 696e  3 4.# 1 "/usr/in
002d470: 636c 7564 652f 6f70 656e 7373 6c2f 6563  clude/openssl/ec
002d480: 2e68 2220 3120 3320 340a 2320 3739 2022  .h" 1 3 4.# 79 "
002d490: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
002d4a0: 6e73 736c 2f65 632e 6822 2033 2034 0a23  nssl/ec.h" 3 4.#
002d4b0: 2031 2022 2f75 7372 2f69 6e63 6c75 6465   1 "/usr/include
002d4c0: 2f6f 7065 6e73 736c 2f6f 7065 6e73 736c  /openssl/openssl
002d4d0: 636f 6e66 2e68 2220 3120 3320 340a 2320  conf.h" 1 3 4.# 
002d4e0: 3334 2022 2f75 7372 2f69 6e63 6c75 6465  34 "/usr/include
002d4f0: 2f6f 7065 6e73 736c 2f6f 7065 6e73 736c  /openssl/openssl
002d500: 636f 6e66 2e68 2220 3320 340a 2320 3120  conf.h" 3 4.# 1 
002d510: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
002d520: 656e 7373 6c2f 6f70 656e 7373 6c63 6f6e  enssl/opensslcon
002d530: 662d 7838 365f 3634 2e68 2220 3120 3320  f-x86_64.h" 1 3 
002d540: 340a 2320 3335 2022 2f75 7372 2f69 6e63  4.# 35 "/usr/inc
002d550: 6c75 6465 2f6f 7065 6e73 736c 2f6f 7065  lude/openssl/ope
002d560: 6e73 736c 636f 6e66 2e68 2220 3220 3320  nsslconf.h" 2 3 
002d570: 340a 2320 3830 2022 2f75 7372 2f69 6e63  4.# 80 "/usr/inc
002d580: 6c75 6465 2f6f 7065 6e73 736c 2f65 632e  lude/openssl/ec.
002d590: 6822 2032 2033 2034 0a23 2031 3036 2022  h" 2 3 4.# 106 "
002d5a0: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
002d5b0: 6e73 736c 2f65 632e 6822 2033 2034 0a74  nssl/ec.h" 3 4.t
002d5c0: 7970 6564 6566 2065 6e75 6d20 7b0a 0a0a  ypedef enum {...
002d5d0: 2050 4f49 4e54 5f43 4f4e 5645 5253 494f   POINT_CONVERSIO
002d5e0: 4e5f 434f 4d50 5245 5353 4544 203d 2032  N_COMPRESSED = 2
002d5f0: 2c0a 0a20 504f 494e 545f 434f 4e56 4552  ,.. POINT_CONVER
002d600: 5349 4f4e 5f55 4e43 4f4d 5052 4553 5345  SION_UNCOMPRESSE
002d610: 4420 3d20 342c 0a0a 0a20 504f 494e 545f  D = 4,... POINT_
002d620: 434f 4e56 4552 5349 4f4e 5f48 5942 5249  CONVERSION_HYBRI
002d630: 4420 3d20 360a 7d20 706f 696e 745f 636f  D = 6.} point_co
002d640: 6e76 6572 7369 6f6e 5f66 6f72 6d5f 743b  nversion_form_t;
002d650: 0a0a 0a74 7970 6564 6566 2073 7472 7563  ...typedef struc
002d660: 7420 6563 5f6d 6574 686f 645f 7374 2045  t ec_method_st E
002d670: 435f 4d45 5448 4f44 3b0a 0a74 7970 6564  C_METHOD;..typed
002d680: 6566 2073 7472 7563 7420 6563 5f67 726f  ef struct ec_gro
002d690: 7570 5f73 740a 2320 3132 3920 222f 7573  up_st.# 129 "/us
002d6a0: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
002d6b0: 6c2f 6563 2e68 2220 3320 340a 2045 435f  l/ec.h" 3 4. EC_
002d6c0: 4752 4f55 503b 0a0a 7479 7065 6465 6620  GROUP;..typedef 
002d6d0: 7374 7275 6374 2065 635f 706f 696e 745f  struct ec_point_
002d6e0: 7374 2045 435f 504f 494e 543b 0a23 2031  st EC_POINT;.# 1
002d6f0: 3432 2022 2f75 7372 2f69 6e63 6c75 6465  42 "/usr/include
002d700: 2f6f 7065 6e73 736c 2f65 632e 6822 2033  /openssl/ec.h" 3
002d710: 2034 0a63 6f6e 7374 2045 435f 4d45 5448   4.const EC_METH
002d720: 4f44 202a 4543 5f47 4670 5f73 696d 706c  OD *EC_GFp_simpl
002d730: 655f 6d65 7468 6f64 2876 6f69 6429 3b0a  e_method(void);.
002d740: 0a0a 0a0a 636f 6e73 7420 4543 5f4d 4554  ....const EC_MET
002d750: 484f 4420 2a45 435f 4746 705f 6d6f 6e74  HOD *EC_GFp_mont
002d760: 5f6d 6574 686f 6428 766f 6964 293b 0a0a  _method(void);..
002d770: 0a0a 0a63 6f6e 7374 2045 435f 4d45 5448  ...const EC_METH
002d780: 4f44 202a 4543 5f47 4670 5f6e 6973 745f  OD *EC_GFp_nist_
002d790: 6d65 7468 6f64 2876 6f69 6429 3b0a 2320  method(void);.# 
002d7a0: 3138 3120 222f 7573 722f 696e 636c 7564  181 "/usr/includ
002d7b0: 652f 6f70 656e 7373 6c2f 6563 2e68 2220  e/openssl/ec.h" 
002d7c0: 3320 340a 4543 5f47 524f 5550 202a 4543  3 4.EC_GROUP *EC
002d7d0: 5f47 524f 5550 5f6e 6577 2863 6f6e 7374  _GROUP_new(const
002d7e0: 2045 435f 4d45 5448 4f44 202a 6d65 7468   EC_METHOD *meth
002d7f0: 293b 0a0a 0a0a 0a76 6f69 6420 4543 5f47  );.....void EC_G
002d800: 524f 5550 5f66 7265 6528 4543 5f47 524f  ROUP_free(EC_GRO
002d810: 5550 202a 6772 6f75 7029 3b0a 0a0a 0a0a  UP *group);.....
002d820: 766f 6964 2045 435f 4752 4f55 505f 636c  void EC_GROUP_cl
002d830: 6561 725f 6672 6565 2845 435f 4752 4f55  ear_free(EC_GROU
002d840: 5020 2a67 726f 7570 293b 0a0a 0a0a 0a0a  P *group);......
002d850: 0a69 6e74 2045 435f 4752 4f55 505f 636f  .int EC_GROUP_co
002d860: 7079 2845 435f 4752 4f55 5020 2a64 7374  py(EC_GROUP *dst
002d870: 2c20 636f 6e73 7420 4543 5f47 524f 5550  , const EC_GROUP
002d880: 202a 7372 6329 3b0a 0a0a 0a0a 0a0a 4543   *src);.......EC
002d890: 5f47 524f 5550 202a 4543 5f47 524f 5550  _GROUP *EC_GROUP
002d8a0: 5f64 7570 2863 6f6e 7374 2045 435f 4752  _dup(const EC_GR
002d8b0: 4f55 5020 2a73 7263 293b 0a0a 0a0a 0a0a  OUP *src);......
002d8c0: 636f 6e73 7420 4543 5f4d 4554 484f 4420  const EC_METHOD 
002d8d0: 2a45 435f 4752 4f55 505f 6d65 7468 6f64  *EC_GROUP_method
002d8e0: 5f6f 6628 636f 6e73 7420 4543 5f47 524f  _of(const EC_GRO
002d8f0: 5550 202a 6772 6f75 7029 3b0a 0a0a 0a0a  UP *group);.....
002d900: 0a69 6e74 2045 435f 4d45 5448 4f44 5f67  .int EC_METHOD_g
002d910: 6574 5f66 6965 6c64 5f74 7970 6528 636f  et_field_type(co
002d920: 6e73 7420 4543 5f4d 4554 484f 4420 2a6d  nst EC_METHOD *m
002d930: 6574 6829 3b0a 2320 3232 3720 222f 7573  eth);.# 227 "/us
002d940: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
002d950: 6c2f 6563 2e68 2220 3320 340a 696e 7420  l/ec.h" 3 4.int 
002d960: 4543 5f47 524f 5550 5f73 6574 5f67 656e  EC_GROUP_set_gen
002d970: 6572 6174 6f72 2845 435f 4752 4f55 5020  erator(EC_GROUP 
002d980: 2a67 726f 7570 2c20 636f 6e73 7420 4543  *group, const EC
002d990: 5f50 4f49 4e54 202a 6765 6e65 7261 746f  _POINT *generato
002d9a0: 722c 2063 6f6e 7374 2042 4947 4e55 4d20  r, const BIGNUM 
002d9b0: 2a6f 7264 6572 2c20 636f 6e73 7420 4249  *order, const BI
002d9c0: 474e 554d 202a 636f 6661 6374 6f72 293b  GNUM *cofactor);
002d9d0: 0a0a 0a0a 0a0a 636f 6e73 7420 4543 5f50  ......const EC_P
002d9e0: 4f49 4e54 202a 4543 5f47 524f 5550 5f67  OINT *EC_GROUP_g
002d9f0: 6574 305f 6765 6e65 7261 746f 7228 636f  et0_generator(co
002da00: 6e73 7420 4543 5f47 524f 5550 202a 6772  nst EC_GROUP *gr
002da10: 6f75 7029 3b0a 0a0a 0a0a 0a0a 0a69 6e74  oup);........int
002da20: 2045 435f 4752 4f55 505f 6765 745f 6f72   EC_GROUP_get_or
002da30: 6465 7228 636f 6e73 7420 4543 5f47 524f  der(const EC_GRO
002da40: 5550 202a 6772 6f75 702c 2042 4947 4e55  UP *group, BIGNU
002da50: 4d20 2a6f 7264 6572 2c20 424e 5f43 5458  M *order, BN_CTX
002da60: 202a 6374 7829 3b0a 0a0a 0a0a 0a0a 0a69   *ctx);........i
002da70: 6e74 2045 435f 4752 4f55 505f 6765 745f  nt EC_GROUP_get_
002da80: 636f 6661 6374 6f72 2863 6f6e 7374 2045  cofactor(const E
002da90: 435f 4752 4f55 5020 2a67 726f 7570 2c20  C_GROUP *group, 
002daa0: 4249 474e 554d 202a 636f 6661 6374 6f72  BIGNUM *cofactor
002dab0: 2c20 424e 5f43 5458 202a 6374 7829 3b0a  , BN_CTX *ctx);.
002dac0: 0a0a 0a0a 0a76 6f69 6420 4543 5f47 524f  .....void EC_GRO
002dad0: 5550 5f73 6574 5f63 7572 7665 5f6e 616d  UP_set_curve_nam
002dae0: 6528 4543 5f47 524f 5550 202a 6772 6f75  e(EC_GROUP *grou
002daf0: 702c 2069 6e74 206e 6964 293b 0a0a 0a0a  p, int nid);....
002db00: 0a0a 696e 7420 4543 5f47 524f 5550 5f67  ..int EC_GROUP_g
002db10: 6574 5f63 7572 7665 5f6e 616d 6528 636f  et_curve_name(co
002db20: 6e73 7420 4543 5f47 524f 5550 202a 6772  nst EC_GROUP *gr
002db30: 6f75 7029 3b0a 0a76 6f69 6420 4543 5f47  oup);..void EC_G
002db40: 524f 5550 5f73 6574 5f61 736e 315f 666c  ROUP_set_asn1_fl
002db50: 6167 2845 435f 4752 4f55 5020 2a67 726f  ag(EC_GROUP *gro
002db60: 7570 2c20 696e 7420 666c 6167 293b 0a69  up, int flag);.i
002db70: 6e74 2045 435f 4752 4f55 505f 6765 745f  nt EC_GROUP_get_
002db80: 6173 6e31 5f66 6c61 6728 636f 6e73 7420  asn1_flag(const 
002db90: 4543 5f47 524f 5550 202a 6772 6f75 7029  EC_GROUP *group)
002dba0: 3b0a 0a76 6f69 6420 4543 5f47 524f 5550  ;..void EC_GROUP
002dbb0: 5f73 6574 5f70 6f69 6e74 5f63 6f6e 7665  _set_point_conve
002dbc0: 7273 696f 6e5f 666f 726d 2845 435f 4752  rsion_form(EC_GR
002dbd0: 4f55 5020 2a67 726f 7570 2c20 706f 696e  OUP *group, poin
002dbe0: 745f 636f 6e76 6572 7369 6f6e 5f66 6f72  t_conversion_for
002dbf0: 6d5f 7420 666f 726d 293b 0a70 6f69 6e74  m_t form);.point
002dc00: 5f63 6f6e 7665 7273 696f 6e5f 666f 726d  _conversion_form
002dc10: 5f74 2045 435f 4752 4f55 505f 6765 745f  _t EC_GROUP_get_
002dc20: 706f 696e 745f 636f 6e76 6572 7369 6f6e  point_conversion
002dc30: 5f66 6f72 6d28 636f 6e73 7420 4543 5f47  _form(const EC_G
002dc40: 524f 5550 202a 293b 0a0a 756e 7369 676e  ROUP *);..unsign
002dc50: 6564 2063 6861 7220 2a45 435f 4752 4f55  ed char *EC_GROU
002dc60: 505f 6765 7430 5f73 6565 6428 636f 6e73  P_get0_seed(cons
002dc70: 7420 4543 5f47 524f 5550 202a 7829 3b0a  t EC_GROUP *x);.
002dc80: 7369 7a65 5f74 2045 435f 4752 4f55 505f  size_t EC_GROUP_
002dc90: 6765 745f 7365 6564 5f6c 656e 2863 6f6e  get_seed_len(con
002dca0: 7374 2045 435f 4752 4f55 5020 2a29 3b0a  st EC_GROUP *);.
002dcb0: 7369 7a65 5f74 2045 435f 4752 4f55 505f  size_t EC_GROUP_
002dcc0: 7365 745f 7365 6564 2845 435f 4752 4f55  set_seed(EC_GROU
002dcd0: 5020 2a2c 2063 6f6e 7374 2075 6e73 6967  P *, const unsig
002dce0: 6e65 6420 6368 6172 202a 2c20 7369 7a65  ned char *, size
002dcf0: 5f74 206c 656e 293b 0a23 2032 3831 2022  _t len);.# 281 "
002dd00: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
002dd10: 6e73 736c 2f65 632e 6822 2033 2034 0a69  nssl/ec.h" 3 4.i
002dd20: 6e74 2045 435f 4752 4f55 505f 7365 745f  nt EC_GROUP_set_
002dd30: 6375 7276 655f 4746 7028 4543 5f47 524f  curve_GFp(EC_GRO
002dd40: 5550 202a 6772 6f75 702c 2063 6f6e 7374  UP *group, const
002dd50: 2042 4947 4e55 4d20 2a70 2c20 636f 6e73   BIGNUM *p, cons
002dd60: 7420 4249 474e 554d 202a 612c 2063 6f6e  t BIGNUM *a, con
002dd70: 7374 2042 4947 4e55 4d20 2a62 2c20 424e  st BIGNUM *b, BN
002dd80: 5f43 5458 202a 6374 7829 3b0a 2320 3239  _CTX *ctx);.# 29
002dd90: 3120 222f 7573 722f 696e 636c 7564 652f  1 "/usr/include/
002dda0: 6f70 656e 7373 6c2f 6563 2e68 2220 3320  openssl/ec.h" 3 
002ddb0: 340a 696e 7420 4543 5f47 524f 5550 5f67  4.int EC_GROUP_g
002ddc0: 6574 5f63 7572 7665 5f47 4670 2863 6f6e  et_curve_GFp(con
002ddd0: 7374 2045 435f 4752 4f55 5020 2a67 726f  st EC_GROUP *gro
002dde0: 7570 2c20 4249 474e 554d 202a 702c 2042  up, BIGNUM *p, B
002ddf0: 4947 4e55 4d20 2a61 2c20 4249 474e 554d  IGNUM *a, BIGNUM
002de00: 202a 622c 2042 4e5f 4354 5820 2a63 7478   *b, BN_CTX *ctx
002de10: 293b 0a0a 0a0a 0a0a 696e 7420 4543 5f47  );......int EC_G
002de20: 524f 5550 5f67 6574 5f64 6567 7265 6528  ROUP_get_degree(
002de30: 636f 6e73 7420 4543 5f47 524f 5550 202a  const EC_GROUP *
002de40: 6772 6f75 7029 3b0a 0a0a 0a0a 0a0a 696e  group);.......in
002de50: 7420 4543 5f47 524f 5550 5f63 6865 636b  t EC_GROUP_check
002de60: 2863 6f6e 7374 2045 435f 4752 4f55 5020  (const EC_GROUP 
002de70: 2a67 726f 7570 2c20 424e 5f43 5458 202a  *group, BN_CTX *
002de80: 6374 7829 3b0a 0a0a 0a0a 0a0a 696e 7420  ctx);.......int 
002de90: 4543 5f47 524f 5550 5f63 6865 636b 5f64  EC_GROUP_check_d
002dea0: 6973 6372 696d 696e 616e 7428 636f 6e73  iscriminant(cons
002deb0: 7420 4543 5f47 524f 5550 202a 6772 6f75  t EC_GROUP *grou
002dec0: 702c 2042 4e5f 4354 5820 2a63 7478 293b  p, BN_CTX *ctx);
002ded0: 0a0a 0a0a 0a0a 0a0a 696e 7420 4543 5f47  ........int EC_G
002dee0: 524f 5550 5f63 6d70 2863 6f6e 7374 2045  ROUP_cmp(const E
002def0: 435f 4752 4f55 5020 2a61 2c20 636f 6e73  C_GROUP *a, cons
002df00: 7420 4543 5f47 524f 5550 202a 622c 2042  t EC_GROUP *b, B
002df10: 4e5f 4354 5820 2a63 7478 293b 0a23 2033  N_CTX *ctx);.# 3
002df20: 3332 2022 2f75 7372 2f69 6e63 6c75 6465  32 "/usr/include
002df30: 2f6f 7065 6e73 736c 2f65 632e 6822 2033  /openssl/ec.h" 3
002df40: 2034 0a45 435f 4752 4f55 5020 2a45 435f   4.EC_GROUP *EC_
002df50: 4752 4f55 505f 6e65 775f 6375 7276 655f  GROUP_new_curve_
002df60: 4746 7028 636f 6e73 7420 4249 474e 554d  GFp(const BIGNUM
002df70: 202a 702c 2063 6f6e 7374 2042 4947 4e55   *p, const BIGNU
002df80: 4d20 2a61 2c20 636f 6e73 7420 4249 474e  M *a, const BIGN
002df90: 554d 202a 622c 2042 4e5f 4354 5820 2a63  UM *b, BN_CTX *c
002dfa0: 7478 293b 0a0a 0a0a 0a0a 4543 5f47 524f  tx);......EC_GRO
002dfb0: 5550 202a 4543 5f47 524f 5550 5f6e 6577  UP *EC_GROUP_new
002dfc0: 5f62 795f 6375 7276 655f 6e61 6d65 2869  _by_curve_name(i
002dfd0: 6e74 206e 6964 293b 0a0a 0a0a 0a0a 0a74  nt nid);.......t
002dfe0: 7970 6564 6566 2073 7472 7563 7420 7b0a  ypedef struct {.
002dff0: 2069 6e74 206e 6964 3b0a 2063 6f6e 7374   int nid;. const
002e000: 2063 6861 7220 2a63 6f6d 6d65 6e74 3b0a   char *comment;.
002e010: 207d 2045 435f 6275 696c 7469 6e5f 6375   } EC_builtin_cu
002e020: 7276 653b 0a0a 0a0a 0a0a 7369 7a65 5f74  rve;......size_t
002e030: 2045 435f 6765 745f 6275 696c 7469 6e5f   EC_get_builtin_
002e040: 6375 7276 6573 2845 435f 6275 696c 7469  curves(EC_builti
002e050: 6e5f 6375 7276 6520 2a72 2c20 7369 7a65  n_curve *r, size
002e060: 5f74 206e 6974 656d 7329 3b0a 2320 3336  _t nitems);.# 36
002e070: 3520 222f 7573 722f 696e 636c 7564 652f  5 "/usr/include/
002e080: 6f70 656e 7373 6c2f 6563 2e68 2220 3320  openssl/ec.h" 3 
002e090: 340a 4543 5f50 4f49 4e54 202a 4543 5f50  4.EC_POINT *EC_P
002e0a0: 4f49 4e54 5f6e 6577 2863 6f6e 7374 2045  OINT_new(const E
002e0b0: 435f 4752 4f55 5020 2a67 726f 7570 293b  C_GROUP *group);
002e0c0: 0a0a 0a0a 0a76 6f69 6420 4543 5f50 4f49  .....void EC_POI
002e0d0: 4e54 5f66 7265 6528 4543 5f50 4f49 4e54  NT_free(EC_POINT
002e0e0: 202a 706f 696e 7429 3b0a 0a0a 0a0a 766f   *point);.....vo
002e0f0: 6964 2045 435f 504f 494e 545f 636c 6561  id EC_POINT_clea
002e100: 725f 6672 6565 2845 435f 504f 494e 5420  r_free(EC_POINT 
002e110: 2a70 6f69 6e74 293b 0a0a 0a0a 0a0a 0a69  *point);.......i
002e120: 6e74 2045 435f 504f 494e 545f 636f 7079  nt EC_POINT_copy
002e130: 2845 435f 504f 494e 5420 2a64 7374 2c20  (EC_POINT *dst, 
002e140: 636f 6e73 7420 4543 5f50 4f49 4e54 202a  const EC_POINT *
002e150: 7372 6329 3b0a 0a0a 0a0a 0a0a 0a45 435f  src);........EC_
002e160: 504f 494e 5420 2a45 435f 504f 494e 545f  POINT *EC_POINT_
002e170: 6475 7028 636f 6e73 7420 4543 5f50 4f49  dup(const EC_POI
002e180: 4e54 202a 7372 632c 2063 6f6e 7374 2045  NT *src, const E
002e190: 435f 4752 4f55 5020 2a67 726f 7570 293b  C_GROUP *group);
002e1a0: 0a0a 0a0a 0a0a 636f 6e73 7420 4543 5f4d  ......const EC_M
002e1b0: 4554 484f 4420 2a45 435f 504f 494e 545f  ETHOD *EC_POINT_
002e1c0: 6d65 7468 6f64 5f6f 6628 636f 6e73 7420  method_of(const 
002e1d0: 4543 5f50 4f49 4e54 202a 706f 696e 7429  EC_POINT *point)
002e1e0: 3b0a 0a0a 0a0a 0a0a 696e 7420 4543 5f50  ;.......int EC_P
002e1f0: 4f49 4e54 5f73 6574 5f74 6f5f 696e 6669  OINT_set_to_infi
002e200: 6e69 7479 2863 6f6e 7374 2045 435f 4752  nity(const EC_GR
002e210: 4f55 5020 2a67 726f 7570 2c20 4543 5f50  OUP *group, EC_P
002e220: 4f49 4e54 202a 706f 696e 7429 3b0a 2320  OINT *point);.# 
002e230: 3431 3420 222f 7573 722f 696e 636c 7564  414 "/usr/includ
002e240: 652f 6f70 656e 7373 6c2f 6563 2e68 2220  e/openssl/ec.h" 
002e250: 3320 340a 696e 7420 4543 5f50 4f49 4e54  3 4.int EC_POINT
002e260: 5f73 6574 5f4a 7072 6f6a 6563 7469 7665  _set_Jprojective
002e270: 5f63 6f6f 7264 696e 6174 6573 5f47 4670  _coordinates_GFp
002e280: 2863 6f6e 7374 2045 435f 4752 4f55 5020  (const EC_GROUP 
002e290: 2a67 726f 7570 2c20 4543 5f50 4f49 4e54  *group, EC_POINT
002e2a0: 202a 702c 0a20 636f 6e73 7420 4249 474e   *p,. const BIGN
002e2b0: 554d 202a 782c 2063 6f6e 7374 2042 4947  UM *x, const BIG
002e2c0: 4e55 4d20 2a79 2c20 636f 6e73 7420 4249  NUM *y, const BI
002e2d0: 474e 554d 202a 7a2c 2042 4e5f 4354 5820  GNUM *z, BN_CTX 
002e2e0: 2a63 7478 293b 0a23 2034 3236 2022 2f75  *ctx);.# 426 "/u
002e2f0: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
002e300: 736c 2f65 632e 6822 2033 2034 0a69 6e74  sl/ec.h" 3 4.int
002e310: 2045 435f 504f 494e 545f 6765 745f 4a70   EC_POINT_get_Jp
002e320: 726f 6a65 6374 6976 655f 636f 6f72 6469  rojective_coordi
002e330: 6e61 7465 735f 4746 7028 636f 6e73 7420  nates_GFp(const 
002e340: 4543 5f47 524f 5550 202a 6772 6f75 702c  EC_GROUP *group,
002e350: 0a20 636f 6e73 7420 4543 5f50 4f49 4e54  . const EC_POINT
002e360: 202a 702c 2042 4947 4e55 4d20 2a78 2c20   *p, BIGNUM *x, 
002e370: 4249 474e 554d 202a 792c 2042 4947 4e55  BIGNUM *y, BIGNU
002e380: 4d20 2a7a 2c20 424e 5f43 5458 202a 6374  M *z, BN_CTX *ct
002e390: 7829 3b0a 2320 3433 3720 222f 7573 722f  x);.# 437 "/usr/
002e3a0: 696e 636c 7564 652f 6f70 656e 7373 6c2f  include/openssl/
002e3b0: 6563 2e68 2220 3320 340a 696e 7420 4543  ec.h" 3 4.int EC
002e3c0: 5f50 4f49 4e54 5f73 6574 5f61 6666 696e  _POINT_set_affin
002e3d0: 655f 636f 6f72 6469 6e61 7465 735f 4746  e_coordinates_GF
002e3e0: 7028 636f 6e73 7420 4543 5f47 524f 5550  p(const EC_GROUP
002e3f0: 202a 6772 6f75 702c 2045 435f 504f 494e   *group, EC_POIN
002e400: 5420 2a70 2c0a 2063 6f6e 7374 2042 4947  T *p,. const BIG
002e410: 4e55 4d20 2a78 2c20 636f 6e73 7420 4249  NUM *x, const BI
002e420: 474e 554d 202a 792c 2042 4e5f 4354 5820  GNUM *y, BN_CTX 
002e430: 2a63 7478 293b 0a23 2034 3438 2022 2f75  *ctx);.# 448 "/u
002e440: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
002e450: 736c 2f65 632e 6822 2033 2034 0a69 6e74  sl/ec.h" 3 4.int
002e460: 2045 435f 504f 494e 545f 6765 745f 6166   EC_POINT_get_af
002e470: 6669 6e65 5f63 6f6f 7264 696e 6174 6573  fine_coordinates
002e480: 5f47 4670 2863 6f6e 7374 2045 435f 4752  _GFp(const EC_GR
002e490: 4f55 5020 2a67 726f 7570 2c0a 2063 6f6e  OUP *group,. con
002e4a0: 7374 2045 435f 504f 494e 5420 2a70 2c20  st EC_POINT *p, 
002e4b0: 4249 474e 554d 202a 782c 2042 4947 4e55  BIGNUM *x, BIGNU
002e4c0: 4d20 2a79 2c20 424e 5f43 5458 202a 6374  M *y, BN_CTX *ct
002e4d0: 7829 3b0a 2320 3435 3920 222f 7573 722f  x);.# 459 "/usr/
002e4e0: 696e 636c 7564 652f 6f70 656e 7373 6c2f  include/openssl/
002e4f0: 6563 2e68 2220 3320 340a 696e 7420 4543  ec.h" 3 4.int EC
002e500: 5f50 4f49 4e54 5f73 6574 5f63 6f6d 7072  _POINT_set_compr
002e510: 6573 7365 645f 636f 6f72 6469 6e61 7465  essed_coordinate
002e520: 735f 4746 7028 636f 6e73 7420 4543 5f47  s_GFp(const EC_G
002e530: 524f 5550 202a 6772 6f75 702c 2045 435f  ROUP *group, EC_
002e540: 504f 494e 5420 2a70 2c0a 2063 6f6e 7374  POINT *p,. const
002e550: 2042 4947 4e55 4d20 2a78 2c20 696e 7420   BIGNUM *x, int 
002e560: 795f 6269 742c 2042 4e5f 4354 5820 2a63  y_bit, BN_CTX *c
002e570: 7478 293b 0a23 2034 3731 2022 2f75 7372  tx);.# 471 "/usr
002e580: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
002e590: 2f65 632e 6822 2033 2034 0a73 697a 655f  /ec.h" 3 4.size_
002e5a0: 7420 4543 5f50 4f49 4e54 5f70 6f69 6e74  t EC_POINT_point
002e5b0: 326f 6374 2863 6f6e 7374 2045 435f 4752  2oct(const EC_GR
002e5c0: 4f55 5020 2a67 726f 7570 2c20 636f 6e73  OUP *group, cons
002e5d0: 7420 4543 5f50 4f49 4e54 202a 702c 0a20  t EC_POINT *p,. 
002e5e0: 706f 696e 745f 636f 6e76 6572 7369 6f6e  point_conversion
002e5f0: 5f66 6f72 6d5f 7420 666f 726d 2c0a 2020  _form_t form,.  
002e600: 2020 2020 2020 756e 7369 676e 6564 2063        unsigned c
002e610: 6861 7220 2a62 7566 2c20 7369 7a65 5f74  har *buf, size_t
002e620: 206c 656e 2c20 424e 5f43 5458 202a 6374   len, BN_CTX *ct
002e630: 7829 3b0a 2320 3438 3320 222f 7573 722f  x);.# 483 "/usr/
002e640: 696e 636c 7564 652f 6f70 656e 7373 6c2f  include/openssl/
002e650: 6563 2e68 2220 3320 340a 696e 7420 4543  ec.h" 3 4.int EC
002e660: 5f50 4f49 4e54 5f6f 6374 3270 6f69 6e74  _POINT_oct2point
002e670: 2863 6f6e 7374 2045 435f 4752 4f55 5020  (const EC_GROUP 
002e680: 2a67 726f 7570 2c20 4543 5f50 4f49 4e54  *group, EC_POINT
002e690: 202a 702c 0a20 2020 2020 2020 2063 6f6e   *p,.        con
002e6a0: 7374 2075 6e73 6967 6e65 6420 6368 6172  st unsigned char
002e6b0: 202a 6275 662c 2073 697a 655f 7420 6c65   *buf, size_t le
002e6c0: 6e2c 2042 4e5f 4354 5820 2a63 7478 293b  n, BN_CTX *ctx);
002e6d0: 0a0a 0a42 4947 4e55 4d20 2a45 435f 504f  ...BIGNUM *EC_PO
002e6e0: 494e 545f 706f 696e 7432 626e 2863 6f6e  INT_point2bn(con
002e6f0: 7374 2045 435f 4752 4f55 5020 2a2c 2063  st EC_GROUP *, c
002e700: 6f6e 7374 2045 435f 504f 494e 5420 2a2c  onst EC_POINT *,
002e710: 0a20 706f 696e 745f 636f 6e76 6572 7369  . point_conversi
002e720: 6f6e 5f66 6f72 6d5f 7420 666f 726d 2c20  on_form_t form, 
002e730: 4249 474e 554d 202a 2c20 424e 5f43 5458  BIGNUM *, BN_CTX
002e740: 202a 293b 0a45 435f 504f 494e 5420 2a45   *);.EC_POINT *E
002e750: 435f 504f 494e 545f 626e 3270 6f69 6e74  C_POINT_bn2point
002e760: 2863 6f6e 7374 2045 435f 4752 4f55 5020  (const EC_GROUP 
002e770: 2a2c 2063 6f6e 7374 2042 4947 4e55 4d20  *, const BIGNUM 
002e780: 2a2c 0a20 4543 5f50 4f49 4e54 202a 2c20  *,. EC_POINT *, 
002e790: 424e 5f43 5458 202a 293b 0a63 6861 7220  BN_CTX *);.char 
002e7a0: 2a45 435f 504f 494e 545f 706f 696e 7432  *EC_POINT_point2
002e7b0: 6865 7828 636f 6e73 7420 4543 5f47 524f  hex(const EC_GRO
002e7c0: 5550 202a 2c20 636f 6e73 7420 4543 5f50  UP *, const EC_P
002e7d0: 4f49 4e54 202a 2c0a 2070 6f69 6e74 5f63  OINT *,. point_c
002e7e0: 6f6e 7665 7273 696f 6e5f 666f 726d 5f74  onversion_form_t
002e7f0: 2066 6f72 6d2c 2042 4e5f 4354 5820 2a29   form, BN_CTX *)
002e800: 3b0a 4543 5f50 4f49 4e54 202a 4543 5f50  ;.EC_POINT *EC_P
002e810: 4f49 4e54 5f68 6578 3270 6f69 6e74 2863  OINT_hex2point(c
002e820: 6f6e 7374 2045 435f 4752 4f55 5020 2a2c  onst EC_GROUP *,
002e830: 2063 6f6e 7374 2063 6861 7220 2a2c 0a20   const char *,. 
002e840: 4543 5f50 4f49 4e54 202a 2c20 424e 5f43  EC_POINT *, BN_C
002e850: 5458 202a 293b 0a23 2035 3039 2022 2f75  TX *);.# 509 "/u
002e860: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
002e870: 736c 2f65 632e 6822 2033 2034 0a69 6e74  sl/ec.h" 3 4.int
002e880: 2045 435f 504f 494e 545f 6164 6428 636f   EC_POINT_add(co
002e890: 6e73 7420 4543 5f47 524f 5550 202a 6772  nst EC_GROUP *gr
002e8a0: 6f75 702c 2045 435f 504f 494e 5420 2a72  oup, EC_POINT *r
002e8b0: 2c20 636f 6e73 7420 4543 5f50 4f49 4e54  , const EC_POINT
002e8c0: 202a 612c 2063 6f6e 7374 2045 435f 504f   *a, const EC_PO
002e8d0: 494e 5420 2a62 2c20 424e 5f43 5458 202a  INT *b, BN_CTX *
002e8e0: 6374 7829 3b0a 2320 3531 3820 222f 7573  ctx);.# 518 "/us
002e8f0: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
002e900: 6c2f 6563 2e68 2220 3320 340a 696e 7420  l/ec.h" 3 4.int 
002e910: 4543 5f50 4f49 4e54 5f64 626c 2863 6f6e  EC_POINT_dbl(con
002e920: 7374 2045 435f 4752 4f55 5020 2a67 726f  st EC_GROUP *gro
002e930: 7570 2c20 4543 5f50 4f49 4e54 202a 722c  up, EC_POINT *r,
002e940: 2063 6f6e 7374 2045 435f 504f 494e 5420   const EC_POINT 
002e950: 2a61 2c20 424e 5f43 5458 202a 6374 7829  *a, BN_CTX *ctx)
002e960: 3b0a 0a0a 0a0a 0a0a 0a69 6e74 2045 435f  ;........int EC_
002e970: 504f 494e 545f 696e 7665 7274 2863 6f6e  POINT_invert(con
002e980: 7374 2045 435f 4752 4f55 5020 2a67 726f  st EC_GROUP *gro
002e990: 7570 2c20 4543 5f50 4f49 4e54 202a 612c  up, EC_POINT *a,
002e9a0: 2042 4e5f 4354 5820 2a63 7478 293b 0a0a   BN_CTX *ctx);..
002e9b0: 0a0a 0a0a 0a69 6e74 2045 435f 504f 494e  .....int EC_POIN
002e9c0: 545f 6973 5f61 745f 696e 6669 6e69 7479  T_is_at_infinity
002e9d0: 2863 6f6e 7374 2045 435f 4752 4f55 5020  (const EC_GROUP 
002e9e0: 2a67 726f 7570 2c20 636f 6e73 7420 4543  *group, const EC
002e9f0: 5f50 4f49 4e54 202a 7029 3b0a 0a0a 0a0a  _POINT *p);.....
002ea00: 0a0a 0a69 6e74 2045 435f 504f 494e 545f  ...int EC_POINT_
002ea10: 6973 5f6f 6e5f 6375 7276 6528 636f 6e73  is_on_curve(cons
002ea20: 7420 4543 5f47 524f 5550 202a 6772 6f75  t EC_GROUP *grou
002ea30: 702c 2063 6f6e 7374 2045 435f 504f 494e  p, const EC_POIN
002ea40: 5420 2a70 6f69 6e74 2c20 424e 5f43 5458  T *point, BN_CTX
002ea50: 202a 6374 7829 3b0a 2320 3535 3020 222f   *ctx);.# 550 "/
002ea60: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
002ea70: 7373 6c2f 6563 2e68 2220 3320 340a 696e  ssl/ec.h" 3 4.in
002ea80: 7420 4543 5f50 4f49 4e54 5f63 6d70 2863  t EC_POINT_cmp(c
002ea90: 6f6e 7374 2045 435f 4752 4f55 5020 2a67  onst EC_GROUP *g
002eaa0: 726f 7570 2c20 636f 6e73 7420 4543 5f50  roup, const EC_P
002eab0: 4f49 4e54 202a 612c 2063 6f6e 7374 2045  OINT *a, const E
002eac0: 435f 504f 494e 5420 2a62 2c20 424e 5f43  C_POINT *b, BN_C
002ead0: 5458 202a 6374 7829 3b0a 0a69 6e74 2045  TX *ctx);..int E
002eae0: 435f 504f 494e 545f 6d61 6b65 5f61 6666  C_POINT_make_aff
002eaf0: 696e 6528 636f 6e73 7420 4543 5f47 524f  ine(const EC_GRO
002eb00: 5550 202a 6772 6f75 702c 2045 435f 504f  UP *group, EC_PO
002eb10: 494e 5420 2a70 6f69 6e74 2c20 424e 5f43  INT *point, BN_C
002eb20: 5458 202a 6374 7829 3b0a 696e 7420 4543  TX *ctx);.int EC
002eb30: 5f50 4f49 4e54 735f 6d61 6b65 5f61 6666  _POINTs_make_aff
002eb40: 696e 6528 636f 6e73 7420 4543 5f47 524f  ine(const EC_GRO
002eb50: 5550 202a 6772 6f75 702c 2073 697a 655f  UP *group, size_
002eb60: 7420 6e75 6d2c 2045 435f 504f 494e 5420  t num, EC_POINT 
002eb70: 2a70 6f69 6e74 735b 5d2c 2042 4e5f 4354  *points[], BN_CT
002eb80: 5820 2a63 7478 293b 0a23 2035 3635 2022  X *ctx);.# 565 "
002eb90: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
002eba0: 6e73 736c 2f65 632e 6822 2033 2034 0a69  nssl/ec.h" 3 4.i
002ebb0: 6e74 2045 435f 504f 494e 5473 5f6d 756c  nt EC_POINTs_mul
002ebc0: 2863 6f6e 7374 2045 435f 4752 4f55 5020  (const EC_GROUP 
002ebd0: 2a67 726f 7570 2c20 4543 5f50 4f49 4e54  *group, EC_POINT
002ebe0: 202a 722c 2063 6f6e 7374 2042 4947 4e55   *r, const BIGNU
002ebf0: 4d20 2a6e 2c20 7369 7a65 5f74 206e 756d  M *n, size_t num
002ec00: 2c20 636f 6e73 7420 4543 5f50 4f49 4e54  , const EC_POINT
002ec10: 202a 705b 5d2c 2063 6f6e 7374 2042 4947   *p[], const BIG
002ec20: 4e55 4d20 2a6d 5b5d 2c20 424e 5f43 5458  NUM *m[], BN_CTX
002ec30: 202a 6374 7829 3b0a 2320 3537 3620 222f   *ctx);.# 576 "/
002ec40: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
002ec50: 7373 6c2f 6563 2e68 2220 3320 340a 696e  ssl/ec.h" 3 4.in
002ec60: 7420 4543 5f50 4f49 4e54 5f6d 756c 2863  t EC_POINT_mul(c
002ec70: 6f6e 7374 2045 435f 4752 4f55 5020 2a67  onst EC_GROUP *g
002ec80: 726f 7570 2c20 4543 5f50 4f49 4e54 202a  roup, EC_POINT *
002ec90: 722c 2063 6f6e 7374 2042 4947 4e55 4d20  r, const BIGNUM 
002eca0: 2a6e 2c20 636f 6e73 7420 4543 5f50 4f49  *n, const EC_POI
002ecb0: 4e54 202a 712c 2063 6f6e 7374 2042 4947  NT *q, const BIG
002ecc0: 4e55 4d20 2a6d 2c20 424e 5f43 5458 202a  NUM *m, BN_CTX *
002ecd0: 6374 7829 3b0a 0a0a 0a0a 0a0a 696e 7420  ctx);.......int 
002ece0: 4543 5f47 524f 5550 5f70 7265 636f 6d70  EC_GROUP_precomp
002ecf0: 7574 655f 6d75 6c74 2845 435f 4752 4f55  ute_mult(EC_GROU
002ed00: 5020 2a67 726f 7570 2c20 424e 5f43 5458  P *group, BN_CTX
002ed10: 202a 6374 7829 3b0a 0a0a 0a0a 0a69 6e74   *ctx);......int
002ed20: 2045 435f 4752 4f55 505f 6861 7665 5f70   EC_GROUP_have_p
002ed30: 7265 636f 6d70 7574 655f 6d75 6c74 2863  recompute_mult(c
002ed40: 6f6e 7374 2045 435f 4752 4f55 5020 2a67  onst EC_GROUP *g
002ed50: 726f 7570 293b 0a23 2035 3938 2022 2f75  roup);.# 598 "/u
002ed60: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
002ed70: 736c 2f65 632e 6822 2033 2034 0a69 6e74  sl/ec.h" 3 4.int
002ed80: 2045 435f 4752 4f55 505f 6765 745f 6261   EC_GROUP_get_ba
002ed90: 7369 735f 7479 7065 2863 6f6e 7374 2045  sis_type(const E
002eda0: 435f 4752 4f55 5020 2a29 3b0a 0a0a 0a74  C_GROUP *);....t
002edb0: 7970 6564 6566 2073 7472 7563 7420 6563  ypedef struct ec
002edc0: 706b 5f70 6172 616d 6574 6572 735f 7374  pk_parameters_st
002edd0: 2045 4350 4b50 4152 414d 4554 4552 533b   ECPKPARAMETERS;
002ede0: 0a0a 4543 5f47 524f 5550 202a 6432 695f  ..EC_GROUP *d2i_
002edf0: 4543 504b 5061 7261 6d65 7465 7273 2845  ECPKParameters(E
002ee00: 435f 4752 4f55 5020 2a2a 2c20 636f 6e73  C_GROUP **, cons
002ee10: 7420 756e 7369 676e 6564 2063 6861 7220  t unsigned char 
002ee20: 2a2a 696e 2c20 6c6f 6e67 206c 656e 293b  **in, long len);
002ee30: 0a69 6e74 2069 3264 5f45 4350 4b50 6172  .int i2d_ECPKPar
002ee40: 616d 6574 6572 7328 636f 6e73 7420 4543  ameters(const EC
002ee50: 5f47 524f 5550 202a 2c20 756e 7369 676e  _GROUP *, unsign
002ee60: 6564 2063 6861 7220 2a2a 6f75 7429 3b0a  ed char **out);.
002ee70: 2320 3631 3520 222f 7573 722f 696e 636c  # 615 "/usr/incl
002ee80: 7564 652f 6f70 656e 7373 6c2f 6563 2e68  ude/openssl/ec.h
002ee90: 2220 3320 340a 696e 7420 4543 504b 5061  " 3 4.int ECPKPa
002eea0: 7261 6d65 7465 7273 5f70 7269 6e74 2842  rameters_print(B
002eeb0: 494f 202a 6270 2c20 636f 6e73 7420 4543  IO *bp, const EC
002eec0: 5f47 524f 5550 202a 782c 2069 6e74 206f  _GROUP *x, int o
002eed0: 6666 293b 0a0a 0a69 6e74 2045 4350 4b50  ff);...int ECPKP
002eee0: 6172 616d 6574 6572 735f 7072 696e 745f  arameters_print_
002eef0: 6670 2846 494c 4520 2a66 702c 2063 6f6e  fp(FILE *fp, con
002ef00: 7374 2045 435f 4752 4f55 5020 2a78 2c20  st EC_GROUP *x, 
002ef10: 696e 7420 6f66 6629 3b0a 0a0a 0a0a 0a0a  int off);.......
002ef20: 0a74 7970 6564 6566 2073 7472 7563 7420  .typedef struct 
002ef30: 6563 5f6b 6579 5f73 7420 4543 5f4b 4559  ec_key_st EC_KEY
002ef40: 3b0a 2320 3633 3920 222f 7573 722f 696e  ;.# 639 "/usr/in
002ef50: 636c 7564 652f 6f70 656e 7373 6c2f 6563  clude/openssl/ec
002ef60: 2e68 2220 3320 340a 4543 5f4b 4559 202a  .h" 3 4.EC_KEY *
002ef70: 4543 5f4b 4559 5f6e 6577 2876 6f69 6429  EC_KEY_new(void)
002ef80: 3b0a 0a69 6e74 2045 435f 4b45 595f 6765  ;..int EC_KEY_ge
002ef90: 745f 666c 6167 7328 636f 6e73 7420 4543  t_flags(const EC
002efa0: 5f4b 4559 202a 6b65 7929 3b0a 0a76 6f69  _KEY *key);..voi
002efb0: 6420 4543 5f4b 4559 5f73 6574 5f66 6c61  d EC_KEY_set_fla
002efc0: 6773 2845 435f 4b45 5920 2a6b 6579 2c20  gs(EC_KEY *key, 
002efd0: 696e 7420 666c 6167 7329 3b0a 0a76 6f69  int flags);..voi
002efe0: 6420 4543 5f4b 4559 5f63 6c65 6172 5f66  d EC_KEY_clear_f
002eff0: 6c61 6773 2845 435f 4b45 5920 2a6b 6579  lags(EC_KEY *key
002f000: 2c20 696e 7420 666c 6167 7329 3b0a 0a0a  , int flags);...
002f010: 0a0a 0a0a 4543 5f4b 4559 202a 4543 5f4b  ....EC_KEY *EC_K
002f020: 4559 5f6e 6577 5f62 795f 6375 7276 655f  EY_new_by_curve_
002f030: 6e61 6d65 2869 6e74 206e 6964 293b 0a0a  name(int nid);..
002f040: 0a0a 0a76 6f69 6420 4543 5f4b 4559 5f66  ...void EC_KEY_f
002f050: 7265 6528 4543 5f4b 4559 202a 6b65 7929  ree(EC_KEY *key)
002f060: 3b0a 0a0a 0a0a 0a0a 4543 5f4b 4559 202a  ;.......EC_KEY *
002f070: 4543 5f4b 4559 5f63 6f70 7928 4543 5f4b  EC_KEY_copy(EC_K
002f080: 4559 202a 6473 742c 2063 6f6e 7374 2045  EY *dst, const E
002f090: 435f 4b45 5920 2a73 7263 293b 0a0a 0a0a  C_KEY *src);....
002f0a0: 0a0a 4543 5f4b 4559 202a 4543 5f4b 4559  ..EC_KEY *EC_KEY
002f0b0: 5f64 7570 2863 6f6e 7374 2045 435f 4b45  _dup(const EC_KE
002f0c0: 5920 2a73 7263 293b 0a0a 0a0a 0a0a 696e  Y *src);......in
002f0d0: 7420 4543 5f4b 4559 5f75 705f 7265 6628  t EC_KEY_up_ref(
002f0e0: 4543 5f4b 4559 202a 6b65 7929 3b0a 0a0a  EC_KEY *key);...
002f0f0: 0a0a 0a63 6f6e 7374 2045 435f 4752 4f55  ...const EC_GROU
002f100: 5020 2a45 435f 4b45 595f 6765 7430 5f67  P *EC_KEY_get0_g
002f110: 726f 7570 2863 6f6e 7374 2045 435f 4b45  roup(const EC_KE
002f120: 5920 2a6b 6579 293b 0a0a 0a0a 0a0a 0a0a  Y *key);........
002f130: 696e 7420 4543 5f4b 4559 5f73 6574 5f67  int EC_KEY_set_g
002f140: 726f 7570 2845 435f 4b45 5920 2a6b 6579  roup(EC_KEY *key
002f150: 2c20 636f 6e73 7420 4543 5f47 524f 5550  , const EC_GROUP
002f160: 202a 6772 6f75 7029 3b0a 0a0a 0a0a 0a63   *group);......c
002f170: 6f6e 7374 2042 4947 4e55 4d20 2a45 435f  onst BIGNUM *EC_
002f180: 4b45 595f 6765 7430 5f70 7269 7661 7465  KEY_get0_private
002f190: 5f6b 6579 2863 6f6e 7374 2045 435f 4b45  _key(const EC_KE
002f1a0: 5920 2a6b 6579 293b 0a0a 0a0a 0a0a 0a0a  Y *key);........
002f1b0: 696e 7420 4543 5f4b 4559 5f73 6574 5f70  int EC_KEY_set_p
002f1c0: 7269 7661 7465 5f6b 6579 2845 435f 4b45  rivate_key(EC_KE
002f1d0: 5920 2a6b 6579 2c20 636f 6e73 7420 4249  Y *key, const BI
002f1e0: 474e 554d 202a 7072 7629 3b0a 0a0a 0a0a  GNUM *prv);.....
002f1f0: 0a63 6f6e 7374 2045 435f 504f 494e 5420  .const EC_POINT 
002f200: 2a45 435f 4b45 595f 6765 7430 5f70 7562  *EC_KEY_get0_pub
002f210: 6c69 635f 6b65 7928 636f 6e73 7420 4543  lic_key(const EC
002f220: 5f4b 4559 202a 6b65 7929 3b0a 0a0a 0a0a  _KEY *key);.....
002f230: 0a0a 0a69 6e74 2045 435f 4b45 595f 7365  ...int EC_KEY_se
002f240: 745f 7075 626c 6963 5f6b 6579 2845 435f  t_public_key(EC_
002f250: 4b45 5920 2a6b 6579 2c20 636f 6e73 7420  KEY *key, const 
002f260: 4543 5f50 4f49 4e54 202a 7075 6229 3b0a  EC_POINT *pub);.
002f270: 0a75 6e73 6967 6e65 6420 4543 5f4b 4559  .unsigned EC_KEY
002f280: 5f67 6574 5f65 6e63 5f66 6c61 6773 2863  _get_enc_flags(c
002f290: 6f6e 7374 2045 435f 4b45 5920 2a6b 6579  onst EC_KEY *key
002f2a0: 293b 0a76 6f69 6420 4543 5f4b 4559 5f73  );.void EC_KEY_s
002f2b0: 6574 5f65 6e63 5f66 6c61 6773 2845 435f  et_enc_flags(EC_
002f2c0: 4b45 5920 2a65 636b 6579 2c20 756e 7369  KEY *eckey, unsi
002f2d0: 676e 6564 2069 6e74 2066 6c61 6773 293b  gned int flags);
002f2e0: 0a70 6f69 6e74 5f63 6f6e 7665 7273 696f  .point_conversio
002f2f0: 6e5f 666f 726d 5f74 2045 435f 4b45 595f  n_form_t EC_KEY_
002f300: 6765 745f 636f 6e76 5f66 6f72 6d28 636f  get_conv_form(co
002f310: 6e73 7420 4543 5f4b 4559 202a 6b65 7929  nst EC_KEY *key)
002f320: 3b0a 766f 6964 2045 435f 4b45 595f 7365  ;.void EC_KEY_se
002f330: 745f 636f 6e76 5f66 6f72 6d28 4543 5f4b  t_conv_form(EC_K
002f340: 4559 202a 6563 6b65 792c 2070 6f69 6e74  EY *eckey, point
002f350: 5f63 6f6e 7665 7273 696f 6e5f 666f 726d  _conversion_form
002f360: 5f74 2063 666f 726d 293b 0a0a 766f 6964  _t cform);..void
002f370: 202a 4543 5f4b 4559 5f67 6574 5f6b 6579   *EC_KEY_get_key
002f380: 5f6d 6574 686f 645f 6461 7461 2845 435f  _method_data(EC_
002f390: 4b45 5920 2a6b 6579 2c0a 2076 6f69 6420  KEY *key,. void 
002f3a0: 2a28 2a64 7570 5f66 756e 6329 2876 6f69  *(*dup_func)(voi
002f3b0: 6420 2a29 2c20 766f 6964 2028 2a66 7265  d *), void (*fre
002f3c0: 655f 6675 6e63 2928 766f 6964 202a 292c  e_func)(void *),
002f3d0: 2076 6f69 6420 282a 636c 6561 725f 6672   void (*clear_fr
002f3e0: 6565 5f66 756e 6329 2876 6f69 6420 2a29  ee_func)(void *)
002f3f0: 293b 0a23 2037 3335 2022 2f75 7372 2f69  );.# 735 "/usr/i
002f400: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f65  nclude/openssl/e
002f410: 632e 6822 2033 2034 0a76 6f69 6420 2a45  c.h" 3 4.void *E
002f420: 435f 4b45 595f 696e 7365 7274 5f6b 6579  C_KEY_insert_key
002f430: 5f6d 6574 686f 645f 6461 7461 2845 435f  _method_data(EC_
002f440: 4b45 5920 2a6b 6579 2c20 766f 6964 202a  KEY *key, void *
002f450: 6461 7461 2c0a 2076 6f69 6420 2a28 2a64  data,. void *(*d
002f460: 7570 5f66 756e 6329 2876 6f69 6420 2a29  up_func)(void *)
002f470: 2c20 766f 6964 2028 2a66 7265 655f 6675  , void (*free_fu
002f480: 6e63 2928 766f 6964 202a 292c 2076 6f69  nc)(void *), voi
002f490: 6420 282a 636c 6561 725f 6672 6565 5f66  d (*clear_free_f
002f4a0: 756e 6329 2876 6f69 6420 2a29 293b 0a0a  unc)(void *));..
002f4b0: 766f 6964 2045 435f 4b45 595f 7365 745f  void EC_KEY_set_
002f4c0: 6173 6e31 5f66 6c61 6728 4543 5f4b 4559  asn1_flag(EC_KEY
002f4d0: 202a 6563 6b65 792c 2069 6e74 2061 736e   *eckey, int asn
002f4e0: 315f 666c 6167 293b 0a0a 0a0a 0a0a 0a0a  1_flag);........
002f4f0: 696e 7420 4543 5f4b 4559 5f70 7265 636f  int EC_KEY_preco
002f500: 6d70 7574 655f 6d75 6c74 2845 435f 4b45  mpute_mult(EC_KE
002f510: 5920 2a6b 6579 2c20 424e 5f43 5458 202a  Y *key, BN_CTX *
002f520: 6374 7829 3b0a 0a0a 0a0a 0a69 6e74 2045  ctx);......int E
002f530: 435f 4b45 595f 6765 6e65 7261 7465 5f6b  C_KEY_generate_k
002f540: 6579 2845 435f 4b45 5920 2a6b 6579 293b  ey(EC_KEY *key);
002f550: 0a0a 0a0a 0a0a 696e 7420 4543 5f4b 4559  ......int EC_KEY
002f560: 5f63 6865 636b 5f6b 6579 2863 6f6e 7374  _check_key(const
002f570: 2045 435f 4b45 5920 2a6b 6579 293b 0a23   EC_KEY *key);.#
002f580: 2037 3637 2022 2f75 7372 2f69 6e63 6c75   767 "/usr/inclu
002f590: 6465 2f6f 7065 6e73 736c 2f65 632e 6822  de/openssl/ec.h"
002f5a0: 2033 2034 0a69 6e74 2045 435f 4b45 595f   3 4.int EC_KEY_
002f5b0: 7365 745f 7075 626c 6963 5f6b 6579 5f61  set_public_key_a
002f5c0: 6666 696e 655f 636f 6f72 6469 6e61 7465  ffine_coordinate
002f5d0: 7328 4543 5f4b 4559 202a 6b65 792c 2042  s(EC_KEY *key, B
002f5e0: 4947 4e55 4d20 2a78 2c20 4249 474e 554d  IGNUM *x, BIGNUM
002f5f0: 202a 7929 3b0a 2320 3738 3020 222f 7573   *y);.# 780 "/us
002f600: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
002f610: 6c2f 6563 2e68 2220 3320 340a 4543 5f4b  l/ec.h" 3 4.EC_K
002f620: 4559 202a 6432 695f 4543 5072 6976 6174  EY *d2i_ECPrivat
002f630: 654b 6579 2845 435f 4b45 5920 2a2a 6b65  eKey(EC_KEY **ke
002f640: 792c 2063 6f6e 7374 2075 6e73 6967 6e65  y, const unsigne
002f650: 6420 6368 6172 202a 2a69 6e2c 206c 6f6e  d char **in, lon
002f660: 6720 6c65 6e29 3b0a 0a0a 0a0a 0a0a 0a69  g len);........i
002f670: 6e74 2069 3264 5f45 4350 7269 7661 7465  nt i2d_ECPrivate
002f680: 4b65 7928 4543 5f4b 4559 202a 6b65 792c  Key(EC_KEY *key,
002f690: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
002f6a0: 2a6f 7574 293b 0a23 2038 3032 2022 2f75  *out);.# 802 "/u
002f6b0: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
002f6c0: 736c 2f65 632e 6822 2033 2034 0a45 435f  sl/ec.h" 3 4.EC_
002f6d0: 4b45 5920 2a64 3269 5f45 4350 6172 616d  KEY *d2i_ECParam
002f6e0: 6574 6572 7328 4543 5f4b 4559 202a 2a6b  eters(EC_KEY **k
002f6f0: 6579 2c20 636f 6e73 7420 756e 7369 676e  ey, const unsign
002f700: 6564 2063 6861 7220 2a2a 696e 2c20 6c6f  ed char **in, lo
002f710: 6e67 206c 656e 293b 0a0a 0a0a 0a0a 0a0a  ng len);........
002f720: 696e 7420 6932 645f 4543 5061 7261 6d65  int i2d_ECParame
002f730: 7465 7273 2845 435f 4b45 5920 2a6b 6579  ters(EC_KEY *key
002f740: 2c20 756e 7369 676e 6564 2063 6861 7220  , unsigned char 
002f750: 2a2a 6f75 7429 3b0a 2320 3832 3520 222f  **out);.# 825 "/
002f760: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
002f770: 7373 6c2f 6563 2e68 2220 3320 340a 4543  ssl/ec.h" 3 4.EC
002f780: 5f4b 4559 202a 6f32 695f 4543 5075 626c  _KEY *o2i_ECPubl
002f790: 6963 4b65 7928 4543 5f4b 4559 202a 2a6b  icKey(EC_KEY **k
002f7a0: 6579 2c20 636f 6e73 7420 756e 7369 676e  ey, const unsign
002f7b0: 6564 2063 6861 7220 2a2a 696e 2c20 6c6f  ed char **in, lo
002f7c0: 6e67 206c 656e 293b 0a0a 0a0a 0a0a 0a0a  ng len);........
002f7d0: 696e 7420 6932 6f5f 4543 5075 626c 6963  int i2o_ECPublic
002f7e0: 4b65 7928 4543 5f4b 4559 202a 6b65 792c  Key(EC_KEY *key,
002f7f0: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
002f800: 2a6f 7574 293b 0a0a 0a0a 0a0a 0a0a 696e  *out);........in
002f810: 7420 4543 5061 7261 6d65 7465 7273 5f70  t ECParameters_p
002f820: 7269 6e74 2842 494f 202a 6270 2c20 636f  rint(BIO *bp, co
002f830: 6e73 7420 4543 5f4b 4559 202a 6b65 7929  nst EC_KEY *key)
002f840: 3b0a 0a0a 0a0a 0a0a 0a69 6e74 2045 435f  ;........int EC_
002f850: 4b45 595f 7072 696e 7428 4249 4f20 2a62  KEY_print(BIO *b
002f860: 702c 2063 6f6e 7374 2045 435f 4b45 5920  p, const EC_KEY 
002f870: 2a6b 6579 2c20 696e 7420 6f66 6629 3b0a  *key, int off);.
002f880: 2320 3835 3820 222f 7573 722f 696e 636c  # 858 "/usr/incl
002f890: 7564 652f 6f70 656e 7373 6c2f 6563 2e68  ude/openssl/ec.h
002f8a0: 2220 3320 340a 696e 7420 4543 5061 7261  " 3 4.int ECPara
002f8b0: 6d65 7465 7273 5f70 7269 6e74 5f66 7028  meters_print_fp(
002f8c0: 4649 4c45 202a 6670 2c20 636f 6e73 7420  FILE *fp, const 
002f8d0: 4543 5f4b 4559 202a 6b65 7929 3b0a 0a0a  EC_KEY *key);...
002f8e0: 0a0a 0a0a 0a69 6e74 2045 435f 4b45 595f  .....int EC_KEY_
002f8f0: 7072 696e 745f 6670 2846 494c 4520 2a66  print_fp(FILE *f
002f900: 702c 2063 6f6e 7374 2045 435f 4b45 5920  p, const EC_KEY 
002f910: 2a6b 6579 2c20 696e 7420 6f66 6629 3b0a  *key, int off);.
002f920: 2320 3839 3120 222f 7573 722f 696e 636c  # 891 "/usr/incl
002f930: 7564 652f 6f70 656e 7373 6c2f 6563 2e68  ude/openssl/ec.h
002f940: 2220 3320 340a 766f 6964 2045 5252 5f6c  " 3 4.void ERR_l
002f950: 6f61 645f 4543 5f73 7472 696e 6773 2876  oad_EC_strings(v
002f960: 6f69 6429 3b0a 2320 3834 2022 2f75 7372  oid);.# 84 "/usr
002f970: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
002f980: 2f78 3530 392e 6822 2032 2033 2034 0a0a  /x509.h" 2 3 4..
002f990: 0a0a 2320 3120 222f 7573 722f 696e 636c  ..# 1 "/usr/incl
002f9a0: 7564 652f 6f70 656e 7373 6c2f 6563 6473  ude/openssl/ecds
002f9b0: 612e 6822 2031 2033 2034 0a23 2036 3220  a.h" 1 3 4.# 62 
002f9c0: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
002f9d0: 656e 7373 6c2f 6563 6473 612e 6822 2033  enssl/ecdsa.h" 3
002f9e0: 2034 0a23 2031 2022 2f75 7372 2f69 6e63   4.# 1 "/usr/inc
002f9f0: 6c75 6465 2f6f 7065 6e73 736c 2f6f 7065  lude/openssl/ope
002fa00: 6e73 736c 636f 6e66 2e68 2220 3120 3320  nsslconf.h" 1 3 
002fa10: 340a 2320 3334 2022 2f75 7372 2f69 6e63  4.# 34 "/usr/inc
002fa20: 6c75 6465 2f6f 7065 6e73 736c 2f6f 7065  lude/openssl/ope
002fa30: 6e73 736c 636f 6e66 2e68 2220 3320 340a  nsslconf.h" 3 4.
002fa40: 2320 3120 222f 7573 722f 696e 636c 7564  # 1 "/usr/includ
002fa50: 652f 6f70 656e 7373 6c2f 6f70 656e 7373  e/openssl/openss
002fa60: 6c63 6f6e 662d 7838 365f 3634 2e68 2220  lconf-x86_64.h" 
002fa70: 3120 3320 340a 2320 3335 2022 2f75 7372  1 3 4.# 35 "/usr
002fa80: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
002fa90: 2f6f 7065 6e73 736c 636f 6e66 2e68 2220  /opensslconf.h" 
002faa0: 3220 3320 340a 2320 3633 2022 2f75 7372  2 3 4.# 63 "/usr
002fab0: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
002fac0: 2f65 6364 7361 2e68 2220 3220 3320 340a  /ecdsa.h" 2 3 4.
002fad0: 2320 3738 2022 2f75 7372 2f69 6e63 6c75  # 78 "/usr/inclu
002fae0: 6465 2f6f 7065 6e73 736c 2f65 6364 7361  de/openssl/ecdsa
002faf0: 2e68 2220 3320 340a 7479 7065 6465 6620  .h" 3 4.typedef 
002fb00: 7374 7275 6374 2045 4344 5341 5f53 4947  struct ECDSA_SIG
002fb10: 5f73 740a 207b 0a20 4249 474e 554d 202a  _st. {. BIGNUM *
002fb20: 723b 0a20 4249 474e 554d 202a 733b 0a20  r;. BIGNUM *s;. 
002fb30: 7d20 4543 4453 415f 5349 473b 0a0a 0a0a  } ECDSA_SIG;....
002fb40: 0a45 4344 5341 5f53 4947 202a 4543 4453  .ECDSA_SIG *ECDS
002fb50: 415f 5349 475f 6e65 7728 766f 6964 293b  A_SIG_new(void);
002fb60: 0a0a 0a0a 0a76 6f69 6420 4543 4453 415f  .....void ECDSA_
002fb70: 5349 475f 6672 6565 2845 4344 5341 5f53  SIG_free(ECDSA_S
002fb80: 4947 202a 7369 6729 3b0a 0a0a 0a0a 0a0a  IG *sig);.......
002fb90: 0a69 6e74 2069 3264 5f45 4344 5341 5f53  .int i2d_ECDSA_S
002fba0: 4947 2863 6f6e 7374 2045 4344 5341 5f53  IG(const ECDSA_S
002fbb0: 4947 202a 7369 672c 2075 6e73 6967 6e65  IG *sig, unsigne
002fbc0: 6420 6368 6172 202a 2a70 7029 3b0a 2320  d char **pp);.# 
002fbd0: 3130 3920 222f 7573 722f 696e 636c 7564  109 "/usr/includ
002fbe0: 652f 6f70 656e 7373 6c2f 6563 6473 612e  e/openssl/ecdsa.
002fbf0: 6822 2033 2034 0a45 4344 5341 5f53 4947  h" 3 4.ECDSA_SIG
002fc00: 202a 6432 695f 4543 4453 415f 5349 4728   *d2i_ECDSA_SIG(
002fc10: 4543 4453 415f 5349 4720 2a2a 7369 672c  ECDSA_SIG **sig,
002fc20: 2063 6f6e 7374 2075 6e73 6967 6e65 6420   const unsigned 
002fc30: 6368 6172 202a 2a70 702c 206c 6f6e 6720  char **pp, long 
002fc40: 6c65 6e29 3b0a 2320 3131 3820 222f 7573  len);.# 118 "/us
002fc50: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
002fc60: 6c2f 6563 6473 612e 6822 2033 2034 0a45  l/ecdsa.h" 3 4.E
002fc70: 4344 5341 5f53 4947 202a 4543 4453 415f  CDSA_SIG *ECDSA_
002fc80: 646f 5f73 6967 6e28 636f 6e73 7420 756e  do_sign(const un
002fc90: 7369 676e 6564 2063 6861 7220 2a64 6773  signed char *dgs
002fca0: 742c 696e 7420 6467 7374 5f6c 656e 2c45  t,int dgst_len,E
002fcb0: 435f 4b45 5920 2a65 636b 6579 293b 0a23  C_KEY *eckey);.#
002fcc0: 2031 3330 2022 2f75 7372 2f69 6e63 6c75   130 "/usr/inclu
002fcd0: 6465 2f6f 7065 6e73 736c 2f65 6364 7361  de/openssl/ecdsa
002fce0: 2e68 2220 3320 340a 4543 4453 415f 5349  .h" 3 4.ECDSA_SI
002fcf0: 4720 2a45 4344 5341 5f64 6f5f 7369 676e  G *ECDSA_do_sign
002fd00: 5f65 7828 636f 6e73 7420 756e 7369 676e  _ex(const unsign
002fd10: 6564 2063 6861 7220 2a64 6773 742c 2069  ed char *dgst, i
002fd20: 6e74 2064 6773 746c 656e 2c0a 2020 636f  nt dgstlen,.  co
002fd30: 6e73 7420 4249 474e 554d 202a 6b69 6e76  nst BIGNUM *kinv
002fd40: 2c20 636f 6e73 7420 4249 474e 554d 202a  , const BIGNUM *
002fd50: 7270 2c20 4543 5f4b 4559 202a 6563 6b65  rp, EC_KEY *ecke
002fd60: 7929 3b0a 2320 3134 3220 222f 7573 722f  y);.# 142 "/usr/
002fd70: 696e 636c 7564 652f 6f70 656e 7373 6c2f  include/openssl/
002fd80: 6563 6473 612e 6822 2033 2034 0a69 6e74  ecdsa.h" 3 4.int
002fd90: 2045 4344 5341 5f64 6f5f 7665 7269 6679   ECDSA_do_verify
002fda0: 2863 6f6e 7374 2075 6e73 6967 6e65 6420  (const unsigned 
002fdb0: 6368 6172 202a 6467 7374 2c20 696e 7420  char *dgst, int 
002fdc0: 6467 7374 5f6c 656e 2c0a 2020 636f 6e73  dgst_len,.  cons
002fdd0: 7420 4543 4453 415f 5349 4720 2a73 6967  t ECDSA_SIG *sig
002fde0: 2c20 4543 5f4b 4559 2a20 6563 6b65 7929  , EC_KEY* eckey)
002fdf0: 3b0a 0a63 6f6e 7374 2045 4344 5341 5f4d  ;..const ECDSA_M
002fe00: 4554 484f 4420 2a45 4344 5341 5f4f 7065  ETHOD *ECDSA_Ope
002fe10: 6e53 534c 2876 6f69 6429 3b0a 0a0a 0a0a  nSSL(void);.....
002fe20: 766f 6964 2045 4344 5341 5f73 6574 5f64  void ECDSA_set_d
002fe30: 6566 6175 6c74 5f6d 6574 686f 6428 636f  efault_method(co
002fe40: 6e73 7420 4543 4453 415f 4d45 5448 4f44  nst ECDSA_METHOD
002fe50: 202a 6d65 7468 293b 0a0a 0a0a 0a63 6f6e   *meth);.....con
002fe60: 7374 2045 4344 5341 5f4d 4554 484f 4420  st ECDSA_METHOD 
002fe70: 2a45 4344 5341 5f67 6574 5f64 6566 6175  *ECDSA_get_defau
002fe80: 6c74 5f6d 6574 686f 6428 766f 6964 293b  lt_method(void);
002fe90: 0a0a 0a0a 0a0a 0a69 6e74 2045 4344 5341  .......int ECDSA
002fea0: 5f73 6574 5f6d 6574 686f 6428 4543 5f4b  _set_method(EC_K
002feb0: 4559 202a 6563 6b65 792c 2063 6f6e 7374  EY *eckey, const
002fec0: 2045 4344 5341 5f4d 4554 484f 4420 2a6d   ECDSA_METHOD *m
002fed0: 6574 6829 3b0a 0a0a 0a0a 0a69 6e74 2045  eth);......int E
002fee0: 4344 5341 5f73 697a 6528 636f 6e73 7420  CDSA_size(const 
002fef0: 4543 5f4b 4559 202a 6563 6b65 7929 3b0a  EC_KEY *eckey);.
002ff00: 2320 3137 3720 222f 7573 722f 696e 636c  # 177 "/usr/incl
002ff10: 7564 652f 6f70 656e 7373 6c2f 6563 6473  ude/openssl/ecds
002ff20: 612e 6822 2033 2034 0a69 6e74 2045 4344  a.h" 3 4.int ECD
002ff30: 5341 5f73 6967 6e5f 7365 7475 7028 4543  SA_sign_setup(EC
002ff40: 5f4b 4559 202a 6563 6b65 792c 2042 4e5f  _KEY *eckey, BN_
002ff50: 4354 5820 2a63 7478 2c20 4249 474e 554d  CTX *ctx, BIGNUM
002ff60: 202a 2a6b 696e 762c 0a20 2042 4947 4e55   **kinv,.  BIGNU
002ff70: 4d20 2a2a 7270 293b 0a23 2031 3930 2022  M **rp);.# 190 "
002ff80: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
002ff90: 6e73 736c 2f65 6364 7361 2e68 2220 3320  nssl/ecdsa.h" 3 
002ffa0: 340a 696e 7420 4543 4453 415f 7369 676e  4.int ECDSA_sign
002ffb0: 2869 6e74 2074 7970 652c 2063 6f6e 7374  (int type, const
002ffc0: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
002ffd0: 6467 7374 2c20 696e 7420 6467 7374 6c65  dgst, int dgstle
002ffe0: 6e2c 0a20 2075 6e73 6967 6e65 6420 6368  n,.  unsigned ch
002fff0: 6172 202a 7369 672c 2075 6e73 6967 6e65  ar *sig, unsigne
0030000: 6420 696e 7420 2a73 6967 6c65 6e2c 2045  d int *siglen, E
0030010: 435f 4b45 5920 2a65 636b 6579 293b 0a23  C_KEY *eckey);.#
0030020: 2032 3037 2022 2f75 7372 2f69 6e63 6c75   207 "/usr/inclu
0030030: 6465 2f6f 7065 6e73 736c 2f65 6364 7361  de/openssl/ecdsa
0030040: 2e68 2220 3320 340a 696e 7420 4543 4453  .h" 3 4.int ECDS
0030050: 415f 7369 676e 5f65 7828 696e 7420 7479  A_sign_ex(int ty
0030060: 7065 2c20 636f 6e73 7420 756e 7369 676e  pe, const unsign
0030070: 6564 2063 6861 7220 2a64 6773 742c 2069  ed char *dgst, i
0030080: 6e74 2064 6773 746c 656e 2c0a 2020 756e  nt dgstlen,.  un
0030090: 7369 676e 6564 2063 6861 7220 2a73 6967  signed char *sig
00300a0: 2c20 756e 7369 676e 6564 2069 6e74 202a  , unsigned int *
00300b0: 7369 676c 656e 2c20 636f 6e73 7420 4249  siglen, const BI
00300c0: 474e 554d 202a 6b69 6e76 2c0a 2020 636f  GNUM *kinv,.  co
00300d0: 6e73 7420 4249 474e 554d 202a 7270 2c20  nst BIGNUM *rp, 
00300e0: 4543 5f4b 4559 202a 6563 6b65 7929 3b0a  EC_KEY *eckey);.
00300f0: 2320 3232 3220 222f 7573 722f 696e 636c  # 222 "/usr/incl
0030100: 7564 652f 6f70 656e 7373 6c2f 6563 6473  ude/openssl/ecds
0030110: 612e 6822 2033 2034 0a69 6e74 2045 4344  a.h" 3 4.int ECD
0030120: 5341 5f76 6572 6966 7928 696e 7420 7479  SA_verify(int ty
0030130: 7065 2c20 636f 6e73 7420 756e 7369 676e  pe, const unsign
0030140: 6564 2063 6861 7220 2a64 6773 742c 2069  ed char *dgst, i
0030150: 6e74 2064 6773 746c 656e 2c0a 2020 636f  nt dgstlen,.  co
0030160: 6e73 7420 756e 7369 676e 6564 2063 6861  nst unsigned cha
0030170: 7220 2a73 6967 2c20 696e 7420 7369 676c  r *sig, int sigl
0030180: 656e 2c20 4543 5f4b 4559 202a 6563 6b65  en, EC_KEY *ecke
0030190: 7929 3b0a 0a0a 696e 7420 4543 4453 415f  y);...int ECDSA_
00301a0: 6765 745f 6578 5f6e 6577 5f69 6e64 6578  get_ex_new_index
00301b0: 286c 6f6e 6720 6172 676c 2c20 766f 6964  (long argl, void
00301c0: 202a 6172 6770 2c20 4352 5950 544f 5f45   *argp, CRYPTO_E
00301d0: 585f 6e65 770a 2020 2a6e 6577 5f66 756e  X_new.  *new_fun
00301e0: 632c 2043 5259 5054 4f5f 4558 5f64 7570  c, CRYPTO_EX_dup
00301f0: 202a 6475 705f 6675 6e63 2c20 4352 5950   *dup_func, CRYP
0030200: 544f 5f45 585f 6672 6565 202a 6672 6565  TO_EX_free *free
0030210: 5f66 756e 6329 3b0a 696e 7420 4543 4453  _func);.int ECDS
0030220: 415f 7365 745f 6578 5f64 6174 6128 4543  A_set_ex_data(EC
0030230: 5f4b 4559 202a 642c 2069 6e74 2069 6478  _KEY *d, int idx
0030240: 2c20 766f 6964 202a 6172 6729 3b0a 766f  , void *arg);.vo
0030250: 6964 202a 4543 4453 415f 6765 745f 6578  id *ECDSA_get_ex
0030260: 5f64 6174 6128 4543 5f4b 4559 202a 642c  _data(EC_KEY *d,
0030270: 2069 6e74 2069 6478 293b 0a0a 0a0a 0a0a   int idx);......
0030280: 0a76 6f69 6420 4552 525f 6c6f 6164 5f45  .void ERR_load_E
0030290: 4344 5341 5f73 7472 696e 6773 2876 6f69  CDSA_strings(voi
00302a0: 6429 3b0a 2320 3838 2022 2f75 7372 2f69  d);.# 88 "/usr/i
00302b0: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f78  nclude/openssl/x
00302c0: 3530 392e 6822 2032 2033 2034 0a0a 0a0a  509.h" 2 3 4....
00302d0: 2320 3120 222f 7573 722f 696e 636c 7564  # 1 "/usr/includ
00302e0: 652f 6f70 656e 7373 6c2f 6563 6468 2e68  e/openssl/ecdh.h
00302f0: 2220 3120 3320 340a 2320 3732 2022 2f75  " 1 3 4.# 72 "/u
0030300: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
0030310: 736c 2f65 6364 682e 6822 2033 2034 0a23  sl/ecdh.h" 3 4.#
0030320: 2031 2022 2f75 7372 2f69 6e63 6c75 6465   1 "/usr/include
0030330: 2f6f 7065 6e73 736c 2f6f 7065 6e73 736c  /openssl/openssl
0030340: 636f 6e66 2e68 2220 3120 3320 340a 2320  conf.h" 1 3 4.# 
0030350: 3334 2022 2f75 7372 2f69 6e63 6c75 6465  34 "/usr/include
0030360: 2f6f 7065 6e73 736c 2f6f 7065 6e73 736c  /openssl/openssl
0030370: 636f 6e66 2e68 2220 3320 340a 2320 3120  conf.h" 3 4.# 1 
0030380: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
0030390: 656e 7373 6c2f 6f70 656e 7373 6c63 6f6e  enssl/opensslcon
00303a0: 662d 7838 365f 3634 2e68 2220 3120 3320  f-x86_64.h" 1 3 
00303b0: 340a 2320 3335 2022 2f75 7372 2f69 6e63  4.# 35 "/usr/inc
00303c0: 6c75 6465 2f6f 7065 6e73 736c 2f6f 7065  lude/openssl/ope
00303d0: 6e73 736c 636f 6e66 2e68 2220 3220 3320  nsslconf.h" 2 3 
00303e0: 340a 2320 3733 2022 2f75 7372 2f69 6e63  4.# 73 "/usr/inc
00303f0: 6c75 6465 2f6f 7065 6e73 736c 2f65 6364  lude/openssl/ecd
0030400: 682e 6822 2032 2033 2034 0a23 2039 3020  h.h" 2 3 4.# 90 
0030410: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
0030420: 656e 7373 6c2f 6563 6468 2e68 2220 3320  enssl/ecdh.h" 3 
0030430: 340a 636f 6e73 7420 4543 4448 5f4d 4554  4.const ECDH_MET
0030440: 484f 4420 2a45 4344 485f 4f70 656e 5353  HOD *ECDH_OpenSS
0030450: 4c28 766f 6964 293b 0a0a 766f 6964 2045  L(void);..void E
0030460: 4344 485f 7365 745f 6465 6661 756c 745f  CDH_set_default_
0030470: 6d65 7468 6f64 2863 6f6e 7374 2045 4344  method(const ECD
0030480: 485f 4d45 5448 4f44 202a 293b 0a63 6f6e  H_METHOD *);.con
0030490: 7374 2045 4344 485f 4d45 5448 4f44 202a  st ECDH_METHOD *
00304a0: 4543 4448 5f67 6574 5f64 6566 6175 6c74  ECDH_get_default
00304b0: 5f6d 6574 686f 6428 766f 6964 293b 0a69  _method(void);.i
00304c0: 6e74 2045 4344 485f 7365 745f 6d65 7468  nt ECDH_set_meth
00304d0: 6f64 2845 435f 4b45 5920 2a2c 2063 6f6e  od(EC_KEY *, con
00304e0: 7374 2045 4344 485f 4d45 5448 4f44 202a  st ECDH_METHOD *
00304f0: 293b 0a0a 696e 7420 4543 4448 5f63 6f6d  );..int ECDH_com
0030500: 7075 7465 5f6b 6579 2876 6f69 6420 2a6f  pute_key(void *o
0030510: 7574 2c20 7369 7a65 5f74 206f 7574 6c65  ut, size_t outle
0030520: 6e2c 2063 6f6e 7374 2045 435f 504f 494e  n, const EC_POIN
0030530: 5420 2a70 7562 5f6b 6579 2c20 4543 5f4b  T *pub_key, EC_K
0030540: 4559 202a 6563 6468 2c0a 2020 2020 2020  EY *ecdh,.      
0030550: 2020 2020 2020 2020 2020 2020 2020 2076                 v
0030560: 6f69 6420 2a28 2a4b 4446 2928 636f 6e73  oid *(*KDF)(cons
0030570: 7420 766f 6964 202a 696e 2c20 7369 7a65  t void *in, size
0030580: 5f74 2069 6e6c 656e 2c20 766f 6964 202a  _t inlen, void *
0030590: 6f75 742c 2073 697a 655f 7420 2a6f 7574  out, size_t *out
00305a0: 6c65 6e29 293b 0a0a 696e 7420 4543 4448  len));..int ECDH
00305b0: 5f67 6574 5f65 785f 6e65 775f 696e 6465  _get_ex_new_inde
00305c0: 7828 6c6f 6e67 2061 7267 6c2c 2076 6f69  x(long argl, voi
00305d0: 6420 2a61 7267 702c 2043 5259 5054 4f5f  d *argp, CRYPTO_
00305e0: 4558 5f6e 6577 0a20 202a 6e65 775f 6675  EX_new.  *new_fu
00305f0: 6e63 2c20 4352 5950 544f 5f45 585f 6475  nc, CRYPTO_EX_du
0030600: 7020 2a64 7570 5f66 756e 632c 2043 5259  p *dup_func, CRY
0030610: 5054 4f5f 4558 5f66 7265 6520 2a66 7265  PTO_EX_free *fre
0030620: 655f 6675 6e63 293b 0a69 6e74 2045 4344  e_func);.int ECD
0030630: 485f 7365 745f 6578 5f64 6174 6128 4543  H_set_ex_data(EC
0030640: 5f4b 4559 202a 642c 2069 6e74 2069 6478  _KEY *d, int idx
0030650: 2c20 766f 6964 202a 6172 6729 3b0a 766f  , void *arg);.vo
0030660: 6964 202a 4543 4448 5f67 6574 5f65 785f  id *ECDH_get_ex_
0030670: 6461 7461 2845 435f 4b45 5920 2a64 2c20  data(EC_KEY *d, 
0030680: 696e 7420 6964 7829 3b0a 0a0a 0a0a 0a0a  int idx);.......
0030690: 766f 6964 2045 5252 5f6c 6f61 645f 4543  void ERR_load_EC
00306a0: 4448 5f73 7472 696e 6773 2876 6f69 6429  DH_strings(void)
00306b0: 3b0a 2320 3932 2022 2f75 7372 2f69 6e63  ;.# 92 "/usr/inc
00306c0: 6c75 6465 2f6f 7065 6e73 736c 2f78 3530  lude/openssl/x50
00306d0: 392e 6822 2032 2033 2034 0a23 2031 3037  9.h" 2 3 4.# 107
00306e0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
00306f0: 7065 6e73 736c 2f78 3530 392e 6822 2033  penssl/x509.h" 3
0030700: 2034 0a23 2031 2022 2f75 7372 2f69 6e63   4.# 1 "/usr/inc
0030710: 6c75 6465 2f6f 7065 6e73 736c 2f73 6861  lude/openssl/sha
0030720: 2e68 2220 3120 3320 340a 2320 3632 2022  .h" 1 3 4.# 62 "
0030730: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
0030740: 6e73 736c 2f73 6861 2e68 2220 3320 340a  nssl/sha.h" 3 4.
0030750: 2320 3120 222f 7573 722f 696e 636c 7564  # 1 "/usr/includ
0030760: 652f 6f70 656e 7373 6c2f 655f 6f73 322e  e/openssl/e_os2.
0030770: 6822 2031 2033 2034 0a23 2035 3620 222f  h" 1 3 4.# 56 "/
0030780: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
0030790: 7373 6c2f 655f 6f73 322e 6822 2033 2034  ssl/e_os2.h" 3 4
00307a0: 0a23 2031 2022 2f75 7372 2f69 6e63 6c75  .# 1 "/usr/inclu
00307b0: 6465 2f6f 7065 6e73 736c 2f6f 7065 6e73  de/openssl/opens
00307c0: 736c 636f 6e66 2e68 2220 3120 3320 340a  slconf.h" 1 3 4.
00307d0: 2320 3334 2022 2f75 7372 2f69 6e63 6c75  # 34 "/usr/inclu
00307e0: 6465 2f6f 7065 6e73 736c 2f6f 7065 6e73  de/openssl/opens
00307f0: 736c 636f 6e66 2e68 2220 3320 340a 2320  slconf.h" 3 4.# 
0030800: 3120 222f 7573 722f 696e 636c 7564 652f  1 "/usr/include/
0030810: 6f70 656e 7373 6c2f 6f70 656e 7373 6c63  openssl/opensslc
0030820: 6f6e 662d 7838 365f 3634 2e68 2220 3120  onf-x86_64.h" 1 
0030830: 3320 340a 2320 3335 2022 2f75 7372 2f69  3 4.# 35 "/usr/i
0030840: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f6f  nclude/openssl/o
0030850: 7065 6e73 736c 636f 6e66 2e68 2220 3220  pensslconf.h" 2 
0030860: 3320 340a 2320 3537 2022 2f75 7372 2f69  3 4.# 57 "/usr/i
0030870: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f65  nclude/openssl/e
0030880: 5f6f 7332 2e68 2220 3220 3320 340a 2320  _os2.h" 2 3 4.# 
0030890: 3633 2022 2f75 7372 2f69 6e63 6c75 6465  63 "/usr/include
00308a0: 2f6f 7065 6e73 736c 2f73 6861 2e68 2220  /openssl/sha.h" 
00308b0: 3220 3320 340a 2320 3120 222f 7573 722f  2 3 4.# 1 "/usr/
00308c0: 6c69 622f 6763 632f 7838 365f 3634 2d72  lib/gcc/x86_64-r
00308d0: 6564 6861 742d 6c69 6e75 782f 342e 382e  edhat-linux/4.8.
00308e0: 332f 696e 636c 7564 652f 7374 6464 6566  3/include/stddef
00308f0: 2e68 2220 3120 3320 340a 2320 3634 2022  .h" 1 3 4.# 64 "
0030900: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
0030910: 6e73 736c 2f73 6861 2e68 2220 3220 3320  nssl/sha.h" 2 3 
0030920: 340a 2320 3130 3020 222f 7573 722f 696e  4.# 100 "/usr/in
0030930: 636c 7564 652f 6f70 656e 7373 6c2f 7368  clude/openssl/sh
0030940: 612e 6822 2033 2034 0a74 7970 6564 6566  a.h" 3 4.typedef
0030950: 2073 7472 7563 7420 5348 4173 7461 7465   struct SHAstate
0030960: 5f73 740a 207b 0a20 756e 7369 676e 6564  _st. {. unsigned
0030970: 2069 6e74 2068 302c 6831 2c68 322c 6833   int h0,h1,h2,h3
0030980: 2c68 343b 0a20 756e 7369 676e 6564 2069  ,h4;. unsigned i
0030990: 6e74 204e 6c2c 4e68 3b0a 2075 6e73 6967  nt Nl,Nh;. unsig
00309a0: 6e65 6420 696e 7420 6461 7461 5b31 365d  ned int data[16]
00309b0: 3b0a 2075 6e73 6967 6e65 6420 696e 7420  ;. unsigned int 
00309c0: 6e75 6d3b 0a20 7d20 5348 415f 4354 583b  num;. } SHA_CTX;
00309d0: 0a0a 0a0a 696e 7420 7072 6976 6174 655f  ....int private_
00309e0: 5348 415f 496e 6974 2853 4841 5f43 5458  SHA_Init(SHA_CTX
00309f0: 202a 6329 3b0a 0a69 6e74 2053 4841 5f49   *c);..int SHA_I
0030a00: 6e69 7428 5348 415f 4354 5820 2a63 293b  nit(SHA_CTX *c);
0030a10: 0a69 6e74 2053 4841 5f55 7064 6174 6528  .int SHA_Update(
0030a20: 5348 415f 4354 5820 2a63 2c20 636f 6e73  SHA_CTX *c, cons
0030a30: 7420 766f 6964 202a 6461 7461 2c20 7369  t void *data, si
0030a40: 7a65 5f74 206c 656e 293b 0a69 6e74 2053  ze_t len);.int S
0030a50: 4841 5f46 696e 616c 2875 6e73 6967 6e65  HA_Final(unsigne
0030a60: 6420 6368 6172 202a 6d64 2c20 5348 415f  d char *md, SHA_
0030a70: 4354 5820 2a63 293b 0a75 6e73 6967 6e65  CTX *c);.unsigne
0030a80: 6420 6368 6172 202a 5348 4128 636f 6e73  d char *SHA(cons
0030a90: 7420 756e 7369 676e 6564 2063 6861 7220  t unsigned char 
0030aa0: 2a64 2c20 7369 7a65 5f74 206e 2c20 756e  *d, size_t n, un
0030ab0: 7369 676e 6564 2063 6861 7220 2a6d 6429  signed char *md)
0030ac0: 3b0a 766f 6964 2053 4841 5f54 7261 6e73  ;.void SHA_Trans
0030ad0: 666f 726d 2853 4841 5f43 5458 202a 632c  form(SHA_CTX *c,
0030ae0: 2063 6f6e 7374 2075 6e73 6967 6e65 6420   const unsigned 
0030af0: 6368 6172 202a 6461 7461 293b 0a0a 0a69  char *data);...i
0030b00: 6e74 2053 4841 315f 496e 6974 2853 4841  nt SHA1_Init(SHA
0030b10: 5f43 5458 202a 6329 3b0a 696e 7420 5348  _CTX *c);.int SH
0030b20: 4131 5f55 7064 6174 6528 5348 415f 4354  A1_Update(SHA_CT
0030b30: 5820 2a63 2c20 636f 6e73 7420 766f 6964  X *c, const void
0030b40: 202a 6461 7461 2c20 7369 7a65 5f74 206c   *data, size_t l
0030b50: 656e 293b 0a69 6e74 2053 4841 315f 4669  en);.int SHA1_Fi
0030b60: 6e61 6c28 756e 7369 676e 6564 2063 6861  nal(unsigned cha
0030b70: 7220 2a6d 642c 2053 4841 5f43 5458 202a  r *md, SHA_CTX *
0030b80: 6329 3b0a 756e 7369 676e 6564 2063 6861  c);.unsigned cha
0030b90: 7220 2a53 4841 3128 636f 6e73 7420 756e  r *SHA1(const un
0030ba0: 7369 676e 6564 2063 6861 7220 2a64 2c20  signed char *d, 
0030bb0: 7369 7a65 5f74 206e 2c20 756e 7369 676e  size_t n, unsign
0030bc0: 6564 2063 6861 7220 2a6d 6429 3b0a 766f  ed char *md);.vo
0030bd0: 6964 2053 4841 315f 5472 616e 7366 6f72  id SHA1_Transfor
0030be0: 6d28 5348 415f 4354 5820 2a63 2c20 636f  m(SHA_CTX *c, co
0030bf0: 6e73 7420 756e 7369 676e 6564 2063 6861  nst unsigned cha
0030c00: 7220 2a64 6174 6129 3b0a 2320 3133 3220  r *data);.# 132 
0030c10: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
0030c20: 656e 7373 6c2f 7368 612e 6822 2033 2034  enssl/sha.h" 3 4
0030c30: 0a74 7970 6564 6566 2073 7472 7563 7420  .typedef struct 
0030c40: 5348 4132 3536 7374 6174 655f 7374 0a20  SHA256state_st. 
0030c50: 7b0a 2075 6e73 6967 6e65 6420 696e 7420  {. unsigned int 
0030c60: 685b 385d 3b0a 2075 6e73 6967 6e65 6420  h[8];. unsigned 
0030c70: 696e 7420 4e6c 2c4e 683b 0a20 756e 7369  int Nl,Nh;. unsi
0030c80: 676e 6564 2069 6e74 2064 6174 615b 3136  gned int data[16
0030c90: 5d3b 0a20 756e 7369 676e 6564 2069 6e74  ];. unsigned int
0030ca0: 206e 756d 2c6d 645f 6c65 6e3b 0a20 7d20   num,md_len;. } 
0030cb0: 5348 4132 3536 5f43 5458 3b0a 0a0a 696e  SHA256_CTX;...in
0030cc0: 7420 5348 4132 3234 5f49 6e69 7428 5348  t SHA224_Init(SH
0030cd0: 4132 3536 5f43 5458 202a 6329 3b0a 696e  A256_CTX *c);.in
0030ce0: 7420 5348 4132 3234 5f55 7064 6174 6528  t SHA224_Update(
0030cf0: 5348 4132 3536 5f43 5458 202a 632c 2063  SHA256_CTX *c, c
0030d00: 6f6e 7374 2076 6f69 6420 2a64 6174 612c  onst void *data,
0030d10: 2073 697a 655f 7420 6c65 6e29 3b0a 696e   size_t len);.in
0030d20: 7420 5348 4132 3234 5f46 696e 616c 2875  t SHA224_Final(u
0030d30: 6e73 6967 6e65 6420 6368 6172 202a 6d64  nsigned char *md
0030d40: 2c20 5348 4132 3536 5f43 5458 202a 6329  , SHA256_CTX *c)
0030d50: 3b0a 756e 7369 676e 6564 2063 6861 7220  ;.unsigned char 
0030d60: 2a53 4841 3232 3428 636f 6e73 7420 756e  *SHA224(const un
0030d70: 7369 676e 6564 2063 6861 7220 2a64 2c20  signed char *d, 
0030d80: 7369 7a65 5f74 206e 2c75 6e73 6967 6e65  size_t n,unsigne
0030d90: 6420 6368 6172 202a 6d64 293b 0a69 6e74  d char *md);.int
0030da0: 2053 4841 3235 365f 496e 6974 2853 4841   SHA256_Init(SHA
0030db0: 3235 365f 4354 5820 2a63 293b 0a69 6e74  256_CTX *c);.int
0030dc0: 2053 4841 3235 365f 5570 6461 7465 2853   SHA256_Update(S
0030dd0: 4841 3235 365f 4354 5820 2a63 2c20 636f  HA256_CTX *c, co
0030de0: 6e73 7420 766f 6964 202a 6461 7461 2c20  nst void *data, 
0030df0: 7369 7a65 5f74 206c 656e 293b 0a69 6e74  size_t len);.int
0030e00: 2053 4841 3235 365f 4669 6e61 6c28 756e   SHA256_Final(un
0030e10: 7369 676e 6564 2063 6861 7220 2a6d 642c  signed char *md,
0030e20: 2053 4841 3235 365f 4354 5820 2a63 293b   SHA256_CTX *c);
0030e30: 0a75 6e73 6967 6e65 6420 6368 6172 202a  .unsigned char *
0030e40: 5348 4132 3536 2863 6f6e 7374 2075 6e73  SHA256(const uns
0030e50: 6967 6e65 6420 6368 6172 202a 642c 2073  igned char *d, s
0030e60: 697a 655f 7420 6e2c 756e 7369 676e 6564  ize_t n,unsigned
0030e70: 2063 6861 7220 2a6d 6429 3b0a 766f 6964   char *md);.void
0030e80: 2053 4841 3235 365f 5472 616e 7366 6f72   SHA256_Transfor
0030e90: 6d28 5348 4132 3536 5f43 5458 202a 632c  m(SHA256_CTX *c,
0030ea0: 2063 6f6e 7374 2075 6e73 6967 6e65 6420   const unsigned 
0030eb0: 6368 6172 202a 6461 7461 293b 0a23 2031  char *data);.# 1
0030ec0: 3735 2022 2f75 7372 2f69 6e63 6c75 6465  75 "/usr/include
0030ed0: 2f6f 7065 6e73 736c 2f73 6861 2e68 2220  /openssl/sha.h" 
0030ee0: 3320 340a 7479 7065 6465 6620 7374 7275  3 4.typedef stru
0030ef0: 6374 2053 4841 3531 3273 7461 7465 5f73  ct SHA512state_s
0030f00: 740a 207b 0a20 756e 7369 676e 6564 206c  t. {. unsigned l
0030f10: 6f6e 6720 6c6f 6e67 2068 5b38 5d3b 0a20  ong long h[8];. 
0030f20: 756e 7369 676e 6564 206c 6f6e 6720 6c6f  unsigned long lo
0030f30: 6e67 204e 6c2c 4e68 3b0a 2075 6e69 6f6e  ng Nl,Nh;. union
0030f40: 207b 0a20 2075 6e73 6967 6e65 6420 6c6f   {.  unsigned lo
0030f50: 6e67 206c 6f6e 6720 645b 3136 5d3b 0a20  ng long d[16];. 
0030f60: 2075 6e73 6967 6e65 6420 6368 6172 2070   unsigned char p
0030f70: 5b28 3136 2a38 295d 3b0a 207d 2075 3b0a  [(16*8)];. } u;.
0030f80: 2075 6e73 6967 6e65 6420 696e 7420 6e75   unsigned int nu
0030f90: 6d2c 6d64 5f6c 656e 3b0a 207d 2053 4841  m,md_len;. } SHA
0030fa0: 3531 325f 4354 583b 0a0a 0a0a 696e 7420  512_CTX;....int 
0030fb0: 5348 4133 3834 5f49 6e69 7428 5348 4135  SHA384_Init(SHA5
0030fc0: 3132 5f43 5458 202a 6329 3b0a 696e 7420  12_CTX *c);.int 
0030fd0: 5348 4133 3834 5f55 7064 6174 6528 5348  SHA384_Update(SH
0030fe0: 4135 3132 5f43 5458 202a 632c 2063 6f6e  A512_CTX *c, con
0030ff0: 7374 2076 6f69 6420 2a64 6174 612c 2073  st void *data, s
0031000: 697a 655f 7420 6c65 6e29 3b0a 696e 7420  ize_t len);.int 
0031010: 5348 4133 3834 5f46 696e 616c 2875 6e73  SHA384_Final(uns
0031020: 6967 6e65 6420 6368 6172 202a 6d64 2c20  igned char *md, 
0031030: 5348 4135 3132 5f43 5458 202a 6329 3b0a  SHA512_CTX *c);.
0031040: 756e 7369 676e 6564 2063 6861 7220 2a53  unsigned char *S
0031050: 4841 3338 3428 636f 6e73 7420 756e 7369  HA384(const unsi
0031060: 676e 6564 2063 6861 7220 2a64 2c20 7369  gned char *d, si
0031070: 7a65 5f74 206e 2c75 6e73 6967 6e65 6420  ze_t n,unsigned 
0031080: 6368 6172 202a 6d64 293b 0a69 6e74 2053  char *md);.int S
0031090: 4841 3531 325f 496e 6974 2853 4841 3531  HA512_Init(SHA51
00310a0: 325f 4354 5820 2a63 293b 0a69 6e74 2053  2_CTX *c);.int S
00310b0: 4841 3531 325f 5570 6461 7465 2853 4841  HA512_Update(SHA
00310c0: 3531 325f 4354 5820 2a63 2c20 636f 6e73  512_CTX *c, cons
00310d0: 7420 766f 6964 202a 6461 7461 2c20 7369  t void *data, si
00310e0: 7a65 5f74 206c 656e 293b 0a69 6e74 2053  ze_t len);.int S
00310f0: 4841 3531 325f 4669 6e61 6c28 756e 7369  HA512_Final(unsi
0031100: 676e 6564 2063 6861 7220 2a6d 642c 2053  gned char *md, S
0031110: 4841 3531 325f 4354 5820 2a63 293b 0a75  HA512_CTX *c);.u
0031120: 6e73 6967 6e65 6420 6368 6172 202a 5348  nsigned char *SH
0031130: 4135 3132 2863 6f6e 7374 2075 6e73 6967  A512(const unsig
0031140: 6e65 6420 6368 6172 202a 642c 2073 697a  ned char *d, siz
0031150: 655f 7420 6e2c 756e 7369 676e 6564 2063  e_t n,unsigned c
0031160: 6861 7220 2a6d 6429 3b0a 766f 6964 2053  har *md);.void S
0031170: 4841 3531 325f 5472 616e 7366 6f72 6d28  HA512_Transform(
0031180: 5348 4135 3132 5f43 5458 202a 632c 2063  SHA512_CTX *c, c
0031190: 6f6e 7374 2075 6e73 6967 6e65 6420 6368  onst unsigned ch
00311a0: 6172 202a 6461 7461 293b 0a23 2031 3038  ar *data);.# 108
00311b0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
00311c0: 7065 6e73 736c 2f78 3530 392e 6822 2032  penssl/x509.h" 2
00311d0: 2033 2034 0a23 2031 3337 2022 2f75 7372   3 4.# 137 "/usr
00311e0: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
00311f0: 2f78 3530 392e 6822 2033 2034 0a74 7970  /x509.h" 3 4.typ
0031200: 6564 6566 2073 7472 7563 7420 5835 3039  edef struct X509
0031210: 5f6f 626a 6563 7473 5f73 740a 207b 0a20  _objects_st. {. 
0031220: 696e 7420 6e69 643b 0a20 696e 7420 282a  int nid;. int (*
0031230: 6132 6929 2876 6f69 6429 3b0a 2069 6e74  a2i)(void);. int
0031240: 2028 2a69 3261 2928 766f 6964 293b 0a20   (*i2a)(void);. 
0031250: 7d20 5835 3039 5f4f 424a 4543 5453 3b0a  } X509_OBJECTS;.
0031260: 0a73 7472 7563 7420 5835 3039 5f61 6c67  .struct X509_alg
0031270: 6f72 5f73 740a 207b 0a20 4153 4e31 5f4f  or_st. {. ASN1_O
0031280: 424a 4543 5420 2a61 6c67 6f72 6974 686d  BJECT *algorithm
0031290: 3b0a 2041 534e 315f 5459 5045 202a 7061  ;. ASN1_TYPE *pa
00312a0: 7261 6d65 7465 723b 0a20 7d20 3b0a 0a0a  rameter;. } ;...
00312b0: 0a74 7970 6564 6566 2073 7472 7563 7420  .typedef struct 
00312c0: 7374 6163 6b5f 7374 5f58 3530 395f 414c  stack_st_X509_AL
00312d0: 474f 5220 5835 3039 5f41 4c47 4f52 533b  GOR X509_ALGORS;
00312e0: 0a0a 7479 7065 6465 6620 7374 7275 6374  ..typedef struct
00312f0: 2058 3530 395f 7661 6c5f 7374 0a20 7b0a   X509_val_st. {.
0031300: 2041 534e 315f 5449 4d45 202a 6e6f 7442   ASN1_TIME *notB
0031310: 6566 6f72 653b 0a20 4153 4e31 5f54 494d  efore;. ASN1_TIM
0031320: 4520 2a6e 6f74 4166 7465 723b 0a20 7d20  E *notAfter;. } 
0031330: 5835 3039 5f56 414c 3b0a 0a73 7472 7563  X509_VAL;..struc
0031340: 7420 5835 3039 5f70 7562 6b65 795f 7374  t X509_pubkey_st
0031350: 0a20 7b0a 2058 3530 395f 414c 474f 5220  . {. X509_ALGOR 
0031360: 2a61 6c67 6f72 3b0a 2041 534e 315f 4249  *algor;. ASN1_BI
0031370: 545f 5354 5249 4e47 202a 7075 626c 6963  T_STRING *public
0031380: 5f6b 6579 3b0a 2045 5650 5f50 4b45 5920  _key;. EVP_PKEY 
0031390: 2a70 6b65 793b 0a20 7d3b 0a0a 7479 7065  *pkey;. };..type
00313a0: 6465 6620 7374 7275 6374 2058 3530 395f  def struct X509_
00313b0: 7369 675f 7374 0a20 7b0a 2058 3530 395f  sig_st. {. X509_
00313c0: 414c 474f 5220 2a61 6c67 6f72 3b0a 2041  ALGOR *algor;. A
00313d0: 534e 315f 4f43 5445 545f 5354 5249 4e47  SN1_OCTET_STRING
00313e0: 202a 6469 6765 7374 3b0a 207d 2058 3530   *digest;. } X50
00313f0: 395f 5349 473b 0a0a 7479 7065 6465 6620  9_SIG;..typedef 
0031400: 7374 7275 6374 2058 3530 395f 6e61 6d65  struct X509_name
0031410: 5f65 6e74 7279 5f73 740a 207b 0a20 4153  _entry_st. {. AS
0031420: 4e31 5f4f 424a 4543 5420 2a6f 626a 6563  N1_OBJECT *objec
0031430: 743b 0a20 4153 4e31 5f53 5452 494e 4720  t;. ASN1_STRING 
0031440: 2a76 616c 7565 3b0a 2069 6e74 2073 6574  *value;. int set
0031450: 3b0a 2069 6e74 2073 697a 653b 0a20 7d20  ;. int size;. } 
0031460: 5835 3039 5f4e 414d 455f 454e 5452 593b  X509_NAME_ENTRY;
0031470: 0a0a 7374 7275 6374 2073 7461 636b 5f73  ..struct stack_s
0031480: 745f 5835 3039 5f4e 414d 455f 454e 5452  t_X509_NAME_ENTR
0031490: 5920 7b20 5f53 5441 434b 2073 7461 636b  Y { _STACK stack
00314a0: 3b20 7d3b 0a0a 0a0a 7374 7275 6374 2058  ; };....struct X
00314b0: 3530 395f 6e61 6d65 5f73 740a 207b 0a20  509_name_st. {. 
00314c0: 7374 7275 6374 2073 7461 636b 5f73 745f  struct stack_st_
00314d0: 5835 3039 5f4e 414d 455f 454e 5452 5920  X509_NAME_ENTRY 
00314e0: 2a65 6e74 7269 6573 3b0a 2069 6e74 206d  *entries;. int m
00314f0: 6f64 6966 6965 643b 0a0a 2042 5546 5f4d  odified;.. BUF_M
0031500: 454d 202a 6279 7465 733b 0a0a 0a0a 0a20  EM *bytes;..... 
0031510: 756e 7369 676e 6564 2063 6861 7220 2a63  unsigned char *c
0031520: 616e 6f6e 5f65 6e63 3b0a 2069 6e74 2063  anon_enc;. int c
0031530: 616e 6f6e 5f65 6e63 6c65 6e3b 0a20 7d20  anon_enclen;. } 
0031540: 3b0a 0a73 7472 7563 7420 7374 6163 6b5f  ;..struct stack_
0031550: 7374 5f58 3530 395f 4e41 4d45 207b 205f  st_X509_NAME { _
0031560: 5354 4143 4b20 7374 6163 6b3b 207d 3b0a  STACK stack; };.
0031570: 0a0a 0a74 7970 6564 6566 2073 7472 7563  ...typedef struc
0031580: 7420 5835 3039 5f65 7874 656e 7369 6f6e  t X509_extension
0031590: 5f73 740a 207b 0a20 4153 4e31 5f4f 424a  _st. {. ASN1_OBJ
00315a0: 4543 5420 2a6f 626a 6563 743b 0a20 4153  ECT *object;. AS
00315b0: 4e31 5f42 4f4f 4c45 414e 2063 7269 7469  N1_BOOLEAN criti
00315c0: 6361 6c3b 0a20 4153 4e31 5f4f 4354 4554  cal;. ASN1_OCTET
00315d0: 5f53 5452 494e 4720 2a76 616c 7565 3b0a  _STRING *value;.
00315e0: 207d 2058 3530 395f 4558 5445 4e53 494f   } X509_EXTENSIO
00315f0: 4e3b 0a0a 7479 7065 6465 6620 7374 7275  N;..typedef stru
0031600: 6374 2073 7461 636b 5f73 745f 5835 3039  ct stack_st_X509
0031610: 5f45 5854 454e 5349 4f4e 2058 3530 395f  _EXTENSION X509_
0031620: 4558 5445 4e53 494f 4e53 3b0a 0a73 7472  EXTENSIONS;..str
0031630: 7563 7420 7374 6163 6b5f 7374 5f58 3530  uct stack_st_X50
0031640: 395f 4558 5445 4e53 494f 4e20 7b20 5f53  9_EXTENSION { _S
0031650: 5441 434b 2073 7461 636b 3b20 7d3b 0a0a  TACK stack; };..
0031660: 0a0a 7479 7065 6465 6620 7374 7275 6374  ..typedef struct
0031670: 2078 3530 395f 6174 7472 6962 7574 6573   x509_attributes
0031680: 5f73 740a 207b 0a20 4153 4e31 5f4f 424a  _st. {. ASN1_OBJ
0031690: 4543 5420 2a6f 626a 6563 743b 0a20 696e  ECT *object;. in
00316a0: 7420 7369 6e67 6c65 3b0a 2075 6e69 6f6e  t single;. union
00316b0: 207b 0a20 2063 6861 7220 2a70 7472 3b0a   {.  char *ptr;.
00316c0: 2020 2020 2020 2020 2073 7472 7563 7420           struct 
00316d0: 7374 6163 6b5f 7374 5f41 534e 315f 5459  stack_st_ASN1_TY
00316e0: 5045 202a 7365 743b 0a20 2020 2020 2020  PE *set;.       
00316f0: 2020 4153 4e31 5f54 5950 4520 2a73 696e    ASN1_TYPE *sin
0031700: 676c 653b 0a20 207d 2076 616c 7565 3b0a  gle;.  } value;.
0031710: 207d 2058 3530 395f 4154 5452 4942 5554   } X509_ATTRIBUT
0031720: 453b 0a0a 7374 7275 6374 2073 7461 636b  E;..struct stack
0031730: 5f73 745f 5835 3039 5f41 5454 5249 4255  _st_X509_ATTRIBU
0031740: 5445 207b 205f 5354 4143 4b20 7374 6163  TE { _STACK stac
0031750: 6b3b 207d 3b0a 0a0a 0a74 7970 6564 6566  k; };....typedef
0031760: 2073 7472 7563 7420 5835 3039 5f72 6571   struct X509_req
0031770: 5f69 6e66 6f5f 7374 0a20 7b0a 2041 534e  _info_st. {. ASN
0031780: 315f 454e 434f 4449 4e47 2065 6e63 3b0a  1_ENCODING enc;.
0031790: 2041 534e 315f 494e 5445 4745 5220 2a76   ASN1_INTEGER *v
00317a0: 6572 7369 6f6e 3b0a 2058 3530 395f 4e41  ersion;. X509_NA
00317b0: 4d45 202a 7375 626a 6563 743b 0a20 5835  ME *subject;. X5
00317c0: 3039 5f50 5542 4b45 5920 2a70 7562 6b65  09_PUBKEY *pubke
00317d0: 793b 0a0a 2073 7472 7563 7420 7374 6163  y;.. struct stac
00317e0: 6b5f 7374 5f58 3530 395f 4154 5452 4942  k_st_X509_ATTRIB
00317f0: 5554 4520 2a61 7474 7269 6275 7465 733b  UTE *attributes;
0031800: 0a20 7d20 5835 3039 5f52 4551 5f49 4e46  . } X509_REQ_INF
0031810: 4f3b 0a0a 7479 7065 6465 6620 7374 7275  O;..typedef stru
0031820: 6374 2058 3530 395f 7265 715f 7374 0a20  ct X509_req_st. 
0031830: 7b0a 2058 3530 395f 5245 515f 494e 464f  {. X509_REQ_INFO
0031840: 202a 7265 715f 696e 666f 3b0a 2058 3530   *req_info;. X50
0031850: 395f 414c 474f 5220 2a73 6967 5f61 6c67  9_ALGOR *sig_alg
0031860: 3b0a 2041 534e 315f 4249 545f 5354 5249  ;. ASN1_BIT_STRI
0031870: 4e47 202a 7369 676e 6174 7572 653b 0a20  NG *signature;. 
0031880: 696e 7420 7265 6665 7265 6e63 6573 3b0a  int references;.
0031890: 207d 2058 3530 395f 5245 513b 0a0a 7479   } X509_REQ;..ty
00318a0: 7065 6465 6620 7374 7275 6374 2078 3530  pedef struct x50
00318b0: 395f 6369 6e66 5f73 740a 207b 0a20 4153  9_cinf_st. {. AS
00318c0: 4e31 5f49 4e54 4547 4552 202a 7665 7273  N1_INTEGER *vers
00318d0: 696f 6e3b 0a20 4153 4e31 5f49 4e54 4547  ion;. ASN1_INTEG
00318e0: 4552 202a 7365 7269 616c 4e75 6d62 6572  ER *serialNumber
00318f0: 3b0a 2058 3530 395f 414c 474f 5220 2a73  ;. X509_ALGOR *s
0031900: 6967 6e61 7475 7265 3b0a 2058 3530 395f  ignature;. X509_
0031910: 4e41 4d45 202a 6973 7375 6572 3b0a 2058  NAME *issuer;. X
0031920: 3530 395f 5641 4c20 2a76 616c 6964 6974  509_VAL *validit
0031930: 793b 0a20 5835 3039 5f4e 414d 4520 2a73  y;. X509_NAME *s
0031940: 7562 6a65 6374 3b0a 2058 3530 395f 5055  ubject;. X509_PU
0031950: 424b 4559 202a 6b65 793b 0a20 4153 4e31  BKEY *key;. ASN1
0031960: 5f42 4954 5f53 5452 494e 4720 2a69 7373  _BIT_STRING *iss
0031970: 7565 7255 4944 3b0a 2041 534e 315f 4249  uerUID;. ASN1_BI
0031980: 545f 5354 5249 4e47 202a 7375 626a 6563  T_STRING *subjec
0031990: 7455 4944 3b0a 2073 7472 7563 7420 7374  tUID;. struct st
00319a0: 6163 6b5f 7374 5f58 3530 395f 4558 5445  ack_st_X509_EXTE
00319b0: 4e53 494f 4e20 2a65 7874 656e 7369 6f6e  NSION *extension
00319c0: 733b 0a20 4153 4e31 5f45 4e43 4f44 494e  s;. ASN1_ENCODIN
00319d0: 4720 656e 633b 0a20 7d20 5835 3039 5f43  G enc;. } X509_C
00319e0: 494e 463b 0a0a 0a0a 0a0a 0a0a 7479 7065  INF;........type
00319f0: 6465 6620 7374 7275 6374 2078 3530 395f  def struct x509_
0031a00: 6365 7274 5f61 7578 5f73 740a 207b 0a20  cert_aux_st. {. 
0031a10: 7374 7275 6374 2073 7461 636b 5f73 745f  struct stack_st_
0031a20: 4153 4e31 5f4f 424a 4543 5420 2a74 7275  ASN1_OBJECT *tru
0031a30: 7374 3b0a 2073 7472 7563 7420 7374 6163  st;. struct stac
0031a40: 6b5f 7374 5f41 534e 315f 4f42 4a45 4354  k_st_ASN1_OBJECT
0031a50: 202a 7265 6a65 6374 3b0a 2041 534e 315f   *reject;. ASN1_
0031a60: 5554 4638 5354 5249 4e47 202a 616c 6961  UTF8STRING *alia
0031a70: 733b 0a20 4153 4e31 5f4f 4354 4554 5f53  s;. ASN1_OCTET_S
0031a80: 5452 494e 4720 2a6b 6579 6964 3b0a 2073  TRING *keyid;. s
0031a90: 7472 7563 7420 7374 6163 6b5f 7374 5f58  truct stack_st_X
0031aa0: 3530 395f 414c 474f 5220 2a6f 7468 6572  509_ALGOR *other
0031ab0: 3b0a 207d 2058 3530 395f 4345 5254 5f41  ;. } X509_CERT_A
0031ac0: 5558 3b0a 0a73 7472 7563 7420 7835 3039  UX;..struct x509
0031ad0: 5f73 740a 207b 0a20 5835 3039 5f43 494e  _st. {. X509_CIN
0031ae0: 4620 2a63 6572 745f 696e 666f 3b0a 2058  F *cert_info;. X
0031af0: 3530 395f 414c 474f 5220 2a73 6967 5f61  509_ALGOR *sig_a
0031b00: 6c67 3b0a 2041 534e 315f 4249 545f 5354  lg;. ASN1_BIT_ST
0031b10: 5249 4e47 202a 7369 676e 6174 7572 653b  RING *signature;
0031b20: 0a20 696e 7420 7661 6c69 643b 0a20 696e  . int valid;. in
0031b30: 7420 7265 6665 7265 6e63 6573 3b0a 2063  t references;. c
0031b40: 6861 7220 2a6e 616d 653b 0a20 4352 5950  har *name;. CRYP
0031b50: 544f 5f45 585f 4441 5441 2065 785f 6461  TO_EX_DATA ex_da
0031b60: 7461 3b0a 0a20 6c6f 6e67 2065 785f 7061  ta;.. long ex_pa
0031b70: 7468 6c65 6e3b 0a20 6c6f 6e67 2065 785f  thlen;. long ex_
0031b80: 7063 7061 7468 6c65 6e3b 0a20 756e 7369  pcpathlen;. unsi
0031b90: 676e 6564 206c 6f6e 6720 6578 5f66 6c61  gned long ex_fla
0031ba0: 6773 3b0a 2075 6e73 6967 6e65 6420 6c6f  gs;. unsigned lo
0031bb0: 6e67 2065 785f 6b75 7361 6765 3b0a 2075  ng ex_kusage;. u
0031bc0: 6e73 6967 6e65 6420 6c6f 6e67 2065 785f  nsigned long ex_
0031bd0: 786b 7573 6167 653b 0a20 756e 7369 676e  xkusage;. unsign
0031be0: 6564 206c 6f6e 6720 6578 5f6e 7363 6572  ed long ex_nscer
0031bf0: 743b 0a20 4153 4e31 5f4f 4354 4554 5f53  t;. ASN1_OCTET_S
0031c00: 5452 494e 4720 2a73 6b69 643b 0a20 4155  TRING *skid;. AU
0031c10: 5448 4f52 4954 595f 4b45 5949 4420 2a61  THORITY_KEYID *a
0031c20: 6b69 643b 0a20 5835 3039 5f50 4f4c 4943  kid;. X509_POLIC
0031c30: 595f 4341 4348 4520 2a70 6f6c 6963 795f  Y_CACHE *policy_
0031c40: 6361 6368 653b 0a20 7374 7275 6374 2073  cache;. struct s
0031c50: 7461 636b 5f73 745f 4449 5354 5f50 4f49  tack_st_DIST_POI
0031c60: 4e54 202a 6372 6c64 703b 0a20 7374 7275  NT *crldp;. stru
0031c70: 6374 2073 7461 636b 5f73 745f 4745 4e45  ct stack_st_GENE
0031c80: 5241 4c5f 4e41 4d45 202a 616c 746e 616d  RAL_NAME *altnam
0031c90: 653b 0a20 4e41 4d45 5f43 4f4e 5354 5241  e;. NAME_CONSTRA
0031ca0: 494e 5453 202a 6e63 3b0a 0a20 7374 7275  INTS *nc;.. stru
0031cb0: 6374 2073 7461 636b 5f73 745f 4950 4164  ct stack_st_IPAd
0031cc0: 6472 6573 7346 616d 696c 7920 2a72 6663  dressFamily *rfc
0031cd0: 3337 3739 5f61 6464 723b 0a20 7374 7275  3779_addr;. stru
0031ce0: 6374 2041 5349 6465 6e74 6966 6965 7273  ct ASIdentifiers
0031cf0: 5f73 7420 2a72 6663 3337 3739 5f61 7369  _st *rfc3779_asi
0031d00: 643b 0a0a 0a20 756e 7369 676e 6564 2063  d;... unsigned c
0031d10: 6861 7220 7368 6131 5f68 6173 685b 3230  har sha1_hash[20
0031d20: 5d3b 0a0a 2058 3530 395f 4345 5254 5f41  ];.. X509_CERT_A
0031d30: 5558 202a 6175 783b 0a20 7d20 3b0a 0a73  UX *aux;. } ;..s
0031d40: 7472 7563 7420 7374 6163 6b5f 7374 5f58  truct stack_st_X
0031d50: 3530 3920 7b20 5f53 5441 434b 2073 7461  509 { _STACK sta
0031d60: 636b 3b20 7d3b 0a0a 0a0a 0a74 7970 6564  ck; };.....typed
0031d70: 6566 2073 7472 7563 7420 7835 3039 5f74  ef struct x509_t
0031d80: 7275 7374 5f73 7420 7b0a 2069 6e74 2074  rust_st {. int t
0031d90: 7275 7374 3b0a 2069 6e74 2066 6c61 6773  rust;. int flags
0031da0: 3b0a 2069 6e74 2028 2a63 6865 636b 5f74  ;. int (*check_t
0031db0: 7275 7374 2928 7374 7275 6374 2078 3530  rust)(struct x50
0031dc0: 395f 7472 7573 745f 7374 202a 2c20 5835  9_trust_st *, X5
0031dd0: 3039 202a 2c20 696e 7429 3b0a 2063 6861  09 *, int);. cha
0031de0: 7220 2a6e 616d 653b 0a20 696e 7420 6172  r *name;. int ar
0031df0: 6731 3b0a 2076 6f69 6420 2a61 7267 323b  g1;. void *arg2;
0031e00: 0a7d 2058 3530 395f 5452 5553 543b 0a0a  .} X509_TRUST;..
0031e10: 7374 7275 6374 2073 7461 636b 5f73 745f  struct stack_st_
0031e20: 5835 3039 5f54 5255 5354 207b 205f 5354  X509_TRUST { _ST
0031e30: 4143 4b20 7374 6163 6b3b 207d 3b0a 0a74  ACK stack; };..t
0031e40: 7970 6564 6566 2073 7472 7563 7420 7835  ypedef struct x5
0031e50: 3039 5f63 6572 745f 7061 6972 5f73 7420  09_cert_pair_st 
0031e60: 7b0a 2058 3530 3920 2a66 6f72 7761 7264  {. X509 *forward
0031e70: 3b0a 2058 3530 3920 2a72 6576 6572 7365  ;. X509 *reverse
0031e80: 3b0a 7d20 5835 3039 5f43 4552 545f 5041  ;.} X509_CERT_PA
0031e90: 4952 3b0a 2320 3433 3420 222f 7573 722f  IR;.# 434 "/usr/
0031ea0: 696e 636c 7564 652f 6f70 656e 7373 6c2f  include/openssl/
0031eb0: 7835 3039 2e68 2220 3320 340a 7374 7275  x509.h" 3 4.stru
0031ec0: 6374 2078 3530 395f 7265 766f 6b65 645f  ct x509_revoked_
0031ed0: 7374 0a20 7b0a 2041 534e 315f 494e 5445  st. {. ASN1_INTE
0031ee0: 4745 5220 2a73 6572 6961 6c4e 756d 6265  GER *serialNumbe
0031ef0: 723b 0a20 4153 4e31 5f54 494d 4520 2a72  r;. ASN1_TIME *r
0031f00: 6576 6f63 6174 696f 6e44 6174 653b 0a20  evocationDate;. 
0031f10: 7374 7275 6374 2073 7461 636b 5f73 745f  struct stack_st_
0031f20: 5835 3039 5f45 5854 454e 5349 4f4e 202a  X509_EXTENSION *
0031f30: 6578 7465 6e73 696f 6e73 3b0a 0a20 7374  extensions;.. st
0031f40: 7275 6374 2073 7461 636b 5f73 745f 4745  ruct stack_st_GE
0031f50: 4e45 5241 4c5f 4e41 4d45 202a 6973 7375  NERAL_NAME *issu
0031f60: 6572 3b0a 0a20 696e 7420 7265 6173 6f6e  er;.. int reason
0031f70: 3b0a 2069 6e74 2073 6571 7565 6e63 653b  ;. int sequence;
0031f80: 0a20 7d3b 0a0a 7374 7275 6374 2073 7461  . };..struct sta
0031f90: 636b 5f73 745f 5835 3039 5f52 4556 4f4b  ck_st_X509_REVOK
0031fa0: 4544 207b 205f 5354 4143 4b20 7374 6163  ED { _STACK stac
0031fb0: 6b3b 207d 3b0a 0a0a 7479 7065 6465 6620  k; };...typedef 
0031fc0: 7374 7275 6374 2058 3530 395f 6372 6c5f  struct X509_crl_
0031fd0: 696e 666f 5f73 740a 207b 0a20 4153 4e31  info_st. {. ASN1
0031fe0: 5f49 4e54 4547 4552 202a 7665 7273 696f  _INTEGER *versio
0031ff0: 6e3b 0a20 5835 3039 5f41 4c47 4f52 202a  n;. X509_ALGOR *
0032000: 7369 675f 616c 673b 0a20 5835 3039 5f4e  sig_alg;. X509_N
0032010: 414d 4520 2a69 7373 7565 723b 0a20 4153  AME *issuer;. AS
0032020: 4e31 5f54 494d 4520 2a6c 6173 7455 7064  N1_TIME *lastUpd
0032030: 6174 653b 0a20 4153 4e31 5f54 494d 4520  ate;. ASN1_TIME 
0032040: 2a6e 6578 7455 7064 6174 653b 0a20 7374  *nextUpdate;. st
0032050: 7275 6374 2073 7461 636b 5f73 745f 5835  ruct stack_st_X5
0032060: 3039 5f52 4556 4f4b 4544 202a 7265 766f  09_REVOKED *revo
0032070: 6b65 643b 0a20 7374 7275 6374 2073 7461  ked;. struct sta
0032080: 636b 5f73 745f 5835 3039 5f45 5854 454e  ck_st_X509_EXTEN
0032090: 5349 4f4e 202a 6578 7465 6e73 696f 6e73  SION *extensions
00320a0: 3b0a 2041 534e 315f 454e 434f 4449 4e47  ;. ASN1_ENCODING
00320b0: 2065 6e63 3b0a 207d 2058 3530 395f 4352   enc;. } X509_CR
00320c0: 4c5f 494e 464f 3b0a 0a73 7472 7563 7420  L_INFO;..struct 
00320d0: 5835 3039 5f63 726c 5f73 740a 207b 0a0a  X509_crl_st. {..
00320e0: 2058 3530 395f 4352 4c5f 494e 464f 202a   X509_CRL_INFO *
00320f0: 6372 6c3b 0a20 5835 3039 5f41 4c47 4f52  crl;. X509_ALGOR
0032100: 202a 7369 675f 616c 673b 0a20 4153 4e31   *sig_alg;. ASN1
0032110: 5f42 4954 5f53 5452 494e 4720 2a73 6967  _BIT_STRING *sig
0032120: 6e61 7475 7265 3b0a 2069 6e74 2072 6566  nature;. int ref
0032130: 6572 656e 6365 733b 0a20 696e 7420 666c  erences;. int fl
0032140: 6167 733b 0a0a 2041 5554 484f 5249 5459  ags;.. AUTHORITY
0032150: 5f4b 4559 4944 202a 616b 6964 3b0a 2049  _KEYID *akid;. I
0032160: 5353 5549 4e47 5f44 4953 545f 504f 494e  SSUING_DIST_POIN
0032170: 5420 2a69 6470 3b0a 0a20 696e 7420 6964  T *idp;.. int id
0032180: 705f 666c 6167 733b 0a20 696e 7420 6964  p_flags;. int id
0032190: 705f 7265 6173 6f6e 733b 0a0a 2041 534e  p_reasons;.. ASN
00321a0: 315f 494e 5445 4745 5220 2a63 726c 5f6e  1_INTEGER *crl_n
00321b0: 756d 6265 723b 0a20 4153 4e31 5f49 4e54  umber;. ASN1_INT
00321c0: 4547 4552 202a 6261 7365 5f63 726c 5f6e  EGER *base_crl_n
00321d0: 756d 6265 723b 0a0a 2075 6e73 6967 6e65  umber;.. unsigne
00321e0: 6420 6368 6172 2073 6861 315f 6861 7368  d char sha1_hash
00321f0: 5b32 305d 3b0a 0a20 7374 7275 6374 2073  [20];.. struct s
0032200: 7461 636b 5f73 745f 4745 4e45 5241 4c5f  tack_st_GENERAL_
0032210: 4e41 4d45 5320 2a69 7373 7565 7273 3b0a  NAMES *issuers;.
0032220: 2063 6f6e 7374 2058 3530 395f 4352 4c5f   const X509_CRL_
0032230: 4d45 5448 4f44 202a 6d65 7468 3b0a 2076  METHOD *meth;. v
0032240: 6f69 6420 2a6d 6574 685f 6461 7461 3b0a  oid *meth_data;.
0032250: 207d 203b 0a0a 7374 7275 6374 2073 7461   } ;..struct sta
0032260: 636b 5f73 745f 5835 3039 5f43 524c 207b  ck_st_X509_CRL {
0032270: 205f 5354 4143 4b20 7374 6163 6b3b 207d   _STACK stack; }
0032280: 3b0a 0a0a 7479 7065 6465 6620 7374 7275  ;...typedef stru
0032290: 6374 2070 7269 7661 7465 5f6b 6579 5f73  ct private_key_s
00322a0: 740a 207b 0a20 696e 7420 7665 7273 696f  t. {. int versio
00322b0: 6e3b 0a0a 2058 3530 395f 414c 474f 5220  n;.. X509_ALGOR 
00322c0: 2a65 6e63 5f61 6c67 6f72 3b0a 2041 534e  *enc_algor;. ASN
00322d0: 315f 4f43 5445 545f 5354 5249 4e47 202a  1_OCTET_STRING *
00322e0: 656e 635f 706b 6579 3b0a 0a0a 2045 5650  enc_pkey;... EVP
00322f0: 5f50 4b45 5920 2a64 6563 5f70 6b65 793b  _PKEY *dec_pkey;
0032300: 0a0a 0a20 696e 7420 6b65 795f 6c65 6e67  ... int key_leng
0032310: 7468 3b0a 2063 6861 7220 2a6b 6579 5f64  th;. char *key_d
0032320: 6174 613b 0a20 696e 7420 6b65 795f 6672  ata;. int key_fr
0032330: 6565 3b0a 0a0a 2045 5650 5f43 4950 4845  ee;... EVP_CIPHE
0032340: 525f 494e 464f 2063 6970 6865 723b 0a0a  R_INFO cipher;..
0032350: 2069 6e74 2072 6566 6572 656e 6365 733b   int references;
0032360: 0a20 7d20 5835 3039 5f50 4b45 593b 0a0a  . } X509_PKEY;..
0032370: 0a74 7970 6564 6566 2073 7472 7563 7420  .typedef struct 
0032380: 5835 3039 5f69 6e66 6f5f 7374 0a20 7b0a  X509_info_st. {.
0032390: 2058 3530 3920 2a78 3530 393b 0a20 5835   X509 *x509;. X5
00323a0: 3039 5f43 524c 202a 6372 6c3b 0a20 5835  09_CRL *crl;. X5
00323b0: 3039 5f50 4b45 5920 2a78 5f70 6b65 793b  09_PKEY *x_pkey;
00323c0: 0a0a 2045 5650 5f43 4950 4845 525f 494e  .. EVP_CIPHER_IN
00323d0: 464f 2065 6e63 5f63 6970 6865 723b 0a20  FO enc_cipher;. 
00323e0: 696e 7420 656e 635f 6c65 6e3b 0a20 6368  int enc_len;. ch
00323f0: 6172 202a 656e 635f 6461 7461 3b0a 0a20  ar *enc_data;.. 
0032400: 696e 7420 7265 6665 7265 6e63 6573 3b0a  int references;.
0032410: 207d 2058 3530 395f 494e 464f 3b0a 0a73   } X509_INFO;..s
0032420: 7472 7563 7420 7374 6163 6b5f 7374 5f58  truct stack_st_X
0032430: 3530 395f 494e 464f 207b 205f 5354 4143  509_INFO { _STAC
0032440: 4b20 7374 6163 6b3b 207d 3b0a 0a0a 0a0a  K stack; };.....
0032450: 0a0a 7479 7065 6465 6620 7374 7275 6374  ..typedef struct
0032460: 204e 6574 7363 6170 655f 7370 6b61 635f   Netscape_spkac_
0032470: 7374 0a20 7b0a 2058 3530 395f 5055 424b  st. {. X509_PUBK
0032480: 4559 202a 7075 626b 6579 3b0a 2041 534e  EY *pubkey;. ASN
0032490: 315f 4941 3553 5452 494e 4720 2a63 6861  1_IA5STRING *cha
00324a0: 6c6c 656e 6765 3b0a 207d 204e 4554 5343  llenge;. } NETSC
00324b0: 4150 455f 5350 4b41 433b 0a0a 7479 7065  APE_SPKAC;..type
00324c0: 6465 6620 7374 7275 6374 204e 6574 7363  def struct Netsc
00324d0: 6170 655f 7370 6b69 5f73 740a 207b 0a20  ape_spki_st. {. 
00324e0: 4e45 5453 4341 5045 5f53 504b 4143 202a  NETSCAPE_SPKAC *
00324f0: 7370 6b61 633b 0a20 5835 3039 5f41 4c47  spkac;. X509_ALG
0032500: 4f52 202a 7369 675f 616c 676f 723b 0a20  OR *sig_algor;. 
0032510: 4153 4e31 5f42 4954 5f53 5452 494e 4720  ASN1_BIT_STRING 
0032520: 2a73 6967 6e61 7475 7265 3b0a 207d 204e  *signature;. } N
0032530: 4554 5343 4150 455f 5350 4b49 3b0a 0a0a  ETSCAPE_SPKI;...
0032540: 7479 7065 6465 6620 7374 7275 6374 204e  typedef struct N
0032550: 6574 7363 6170 655f 6365 7274 6966 6963  etscape_certific
0032560: 6174 655f 7365 7175 656e 6365 0a20 7b0a  ate_sequence. {.
0032570: 2041 534e 315f 4f42 4a45 4354 202a 7479   ASN1_OBJECT *ty
0032580: 7065 3b0a 2073 7472 7563 7420 7374 6163  pe;. struct stac
0032590: 6b5f 7374 5f58 3530 3920 2a63 6572 7473  k_st_X509 *certs
00325a0: 3b0a 207d 204e 4554 5343 4150 455f 4345  ;. } NETSCAPE_CE
00325b0: 5254 5f53 4551 5545 4e43 453b 0a23 2035  RT_SEQUENCE;.# 5
00325c0: 3630 2022 2f75 7372 2f69 6e63 6c75 6465  60 "/usr/include
00325d0: 2f6f 7065 6e73 736c 2f78 3530 392e 6822  /openssl/x509.h"
00325e0: 2033 2034 0a74 7970 6564 6566 2073 7472   3 4.typedef str
00325f0: 7563 7420 5042 4550 4152 414d 5f73 7420  uct PBEPARAM_st 
0032600: 7b0a 4153 4e31 5f4f 4354 4554 5f53 5452  {.ASN1_OCTET_STR
0032610: 494e 4720 2a73 616c 743b 0a41 534e 315f  ING *salt;.ASN1_
0032620: 494e 5445 4745 5220 2a69 7465 723b 0a7d  INTEGER *iter;.}
0032630: 2050 4245 5041 5241 4d3b 0a0a 0a0a 7479   PBEPARAM;....ty
0032640: 7065 6465 6620 7374 7275 6374 2050 4245  pedef struct PBE
0032650: 3250 4152 414d 5f73 7420 7b0a 5835 3039  2PARAM_st {.X509
0032660: 5f41 4c47 4f52 202a 6b65 7966 756e 633b  _ALGOR *keyfunc;
0032670: 0a58 3530 395f 414c 474f 5220 2a65 6e63  .X509_ALGOR *enc
0032680: 7279 7074 696f 6e3b 0a7d 2050 4245 3250  ryption;.} PBE2P
0032690: 4152 414d 3b0a 0a74 7970 6564 6566 2073  ARAM;..typedef s
00326a0: 7472 7563 7420 5042 4b44 4632 5041 5241  truct PBKDF2PARA
00326b0: 4d5f 7374 207b 0a41 534e 315f 5459 5045  M_st {.ASN1_TYPE
00326c0: 202a 7361 6c74 3b0a 4153 4e31 5f49 4e54   *salt;.ASN1_INT
00326d0: 4547 4552 202a 6974 6572 3b0a 4153 4e31  EGER *iter;.ASN1
00326e0: 5f49 4e54 4547 4552 202a 6b65 796c 656e  _INTEGER *keylen
00326f0: 6774 683b 0a58 3530 395f 414c 474f 5220  gth;.X509_ALGOR 
0032700: 2a70 7266 3b0a 7d20 5042 4b44 4632 5041  *prf;.} PBKDF2PA
0032710: 5241 4d3b 0a0a 0a0a 0a73 7472 7563 7420  RAM;.....struct 
0032720: 706b 6373 385f 7072 6976 5f6b 6579 5f69  pkcs8_priv_key_i
0032730: 6e66 6f5f 7374 0a20 2020 2020 2020 207b  nfo_st.        {
0032740: 0a20 2020 2020 2020 2069 6e74 2062 726f  .        int bro
0032750: 6b65 6e3b 0a0a 0a0a 0a0a 2020 2020 2020  ken;......      
0032760: 2020 4153 4e31 5f49 4e54 4547 4552 202a    ASN1_INTEGER *
0032770: 7665 7273 696f 6e3b 0a20 2020 2020 2020  version;.       
0032780: 2058 3530 395f 414c 474f 5220 2a70 6b65   X509_ALGOR *pke
0032790: 7961 6c67 3b0a 2020 2020 2020 2020 4153  yalg;.        AS
00327a0: 4e31 5f54 5950 4520 2a70 6b65 793b 0a20  N1_TYPE *pkey;. 
00327b0: 2020 2020 2020 2073 7472 7563 7420 7374         struct st
00327c0: 6163 6b5f 7374 5f58 3530 395f 4154 5452  ack_st_X509_ATTR
00327d0: 4942 5554 4520 2a61 7474 7269 6275 7465  IBUTE *attribute
00327e0: 733b 0a20 2020 2020 2020 207d 3b0a 0a0a  s;.        };...
00327f0: 0a0a 0a23 2031 2022 2f75 7372 2f69 6e63  ...# 1 "/usr/inc
0032800: 6c75 6465 2f6f 7065 6e73 736c 2f78 3530  lude/openssl/x50
0032810: 395f 7666 792e 6822 2031 2033 2034 0a23  9_vfy.h" 1 3 4.#
0032820: 2036 3820 222f 7573 722f 696e 636c 7564   68 "/usr/includ
0032830: 652f 6f70 656e 7373 6c2f 7835 3039 5f76  e/openssl/x509_v
0032840: 6679 2e68 2220 3320 340a 2320 3120 222f  fy.h" 3 4.# 1 "/
0032850: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
0032860: 7373 6c2f 6f70 656e 7373 6c63 6f6e 662e  ssl/opensslconf.
0032870: 6822 2031 2033 2034 0a23 2033 3420 222f  h" 1 3 4.# 34 "/
0032880: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
0032890: 7373 6c2f 6f70 656e 7373 6c63 6f6e 662e  ssl/opensslconf.
00328a0: 6822 2033 2034 0a23 2031 2022 2f75 7372  h" 3 4.# 1 "/usr
00328b0: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
00328c0: 2f6f 7065 6e73 736c 636f 6e66 2d78 3836  /opensslconf-x86
00328d0: 5f36 342e 6822 2031 2033 2034 0a23 2033  _64.h" 1 3 4.# 3
00328e0: 3520 222f 7573 722f 696e 636c 7564 652f  5 "/usr/include/
00328f0: 6f70 656e 7373 6c2f 6f70 656e 7373 6c63  openssl/opensslc
0032900: 6f6e 662e 6822 2032 2033 2034 0a23 2036  onf.h" 2 3 4.# 6
0032910: 3920 222f 7573 722f 696e 636c 7564 652f  9 "/usr/include/
0032920: 6f70 656e 7373 6c2f 7835 3039 5f76 6679  openssl/x509_vfy
0032930: 2e68 2220 3220 3320 340a 2320 3931 2022  .h" 2 3 4.# 91 "
0032940: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
0032950: 6e73 736c 2f78 3530 395f 7666 792e 6822  nssl/x509_vfy.h"
0032960: 2033 2034 0a74 7970 6564 6566 2073 7472   3 4.typedef str
0032970: 7563 7420 7835 3039 5f66 696c 655f 7374  uct x509_file_st
0032980: 0a20 7b0a 2069 6e74 206e 756d 5f70 6174  . {. int num_pat
0032990: 6873 3b0a 2069 6e74 206e 756d 5f61 6c6c  hs;. int num_all
00329a0: 6f63 6564 3b0a 2063 6861 7220 2a2a 7061  oced;. char **pa
00329b0: 7468 733b 0a20 696e 7420 2a70 6174 685f  ths;. int *path_
00329c0: 7479 7065 3b0a 207d 2058 3530 395f 4345  type;. } X509_CE
00329d0: 5254 5f46 494c 455f 4354 583b 0a23 2031  RT_FILE_CTX;.# 1
00329e0: 3233 2022 2f75 7372 2f69 6e63 6c75 6465  23 "/usr/include
00329f0: 2f6f 7065 6e73 736c 2f78 3530 395f 7666  /openssl/x509_vf
0032a00: 792e 6822 2033 2034 0a74 7970 6564 6566  y.h" 3 4.typedef
0032a10: 2073 7472 7563 7420 7835 3039 5f6f 626a   struct x509_obj
0032a20: 6563 745f 7374 0a20 7b0a 0a20 696e 7420  ect_st. {.. int 
0032a30: 7479 7065 3b0a 2075 6e69 6f6e 207b 0a20  type;. union {. 
0032a40: 2063 6861 7220 2a70 7472 3b0a 2020 5835   char *ptr;.  X5
0032a50: 3039 202a 7835 3039 3b0a 2020 5835 3039  09 *x509;.  X509
0032a60: 5f43 524c 202a 6372 6c3b 0a20 2045 5650  _CRL *crl;.  EVP
0032a70: 5f50 4b45 5920 2a70 6b65 793b 0a20 207d  _PKEY *pkey;.  }
0032a80: 2064 6174 613b 0a20 7d20 5835 3039 5f4f   data;. } X509_O
0032a90: 424a 4543 543b 0a0a 7479 7065 6465 6620  BJECT;..typedef 
0032aa0: 7374 7275 6374 2078 3530 395f 6c6f 6f6b  struct x509_look
0032ab0: 7570 5f73 7420 5835 3039 5f4c 4f4f 4b55  up_st X509_LOOKU
0032ac0: 503b 0a0a 7374 7275 6374 2073 7461 636b  P;..struct stack
0032ad0: 5f73 745f 5835 3039 5f4c 4f4f 4b55 5020  _st_X509_LOOKUP 
0032ae0: 7b20 5f53 5441 434b 2073 7461 636b 3b20  { _STACK stack; 
0032af0: 7d3b 0a73 7472 7563 7420 7374 6163 6b5f  };.struct stack_
0032b00: 7374 5f58 3530 395f 4f42 4a45 4354 207b  st_X509_OBJECT {
0032b10: 205f 5354 4143 4b20 7374 6163 6b3b 207d   _STACK stack; }
0032b20: 3b0a 0a0a 7479 7065 6465 6620 7374 7275  ;...typedef stru
0032b30: 6374 2078 3530 395f 6c6f 6f6b 7570 5f6d  ct x509_lookup_m
0032b40: 6574 686f 645f 7374 0a20 7b0a 2063 6f6e  ethod_st. {. con
0032b50: 7374 2063 6861 7220 2a6e 616d 653b 0a20  st char *name;. 
0032b60: 696e 7420 282a 6e65 775f 6974 656d 2928  int (*new_item)(
0032b70: 5835 3039 5f4c 4f4f 4b55 5020 2a63 7478  X509_LOOKUP *ctx
0032b80: 293b 0a20 766f 6964 2028 2a66 7265 6529  );. void (*free)
0032b90: 2858 3530 395f 4c4f 4f4b 5550 202a 6374  (X509_LOOKUP *ct
0032ba0: 7829 3b0a 2069 6e74 2028 2a69 6e69 7429  x);. int (*init)
0032bb0: 2858 3530 395f 4c4f 4f4b 5550 202a 6374  (X509_LOOKUP *ct
0032bc0: 7829 3b0a 2069 6e74 2028 2a73 6875 7464  x);. int (*shutd
0032bd0: 6f77 6e29 2858 3530 395f 4c4f 4f4b 5550  own)(X509_LOOKUP
0032be0: 202a 6374 7829 3b0a 2069 6e74 2028 2a63   *ctx);. int (*c
0032bf0: 7472 6c29 2858 3530 395f 4c4f 4f4b 5550  trl)(X509_LOOKUP
0032c00: 202a 6374 782c 696e 7420 636d 642c 636f   *ctx,int cmd,co
0032c10: 6e73 7420 6368 6172 202a 6172 6763 2c6c  nst char *argc,l
0032c20: 6f6e 6720 6172 676c 2c0a 2020 2063 6861  ong argl,.   cha
0032c30: 7220 2a2a 7265 7429 3b0a 2069 6e74 2028  r **ret);. int (
0032c40: 2a67 6574 5f62 795f 7375 626a 6563 7429  *get_by_subject)
0032c50: 2858 3530 395f 4c4f 4f4b 5550 202a 6374  (X509_LOOKUP *ct
0032c60: 782c 696e 7420 7479 7065 2c58 3530 395f  x,int type,X509_
0032c70: 4e41 4d45 202a 6e61 6d65 2c0a 2020 2020  NAME *name,.    
0032c80: 2020 2020 2058 3530 395f 4f42 4a45 4354       X509_OBJECT
0032c90: 202a 7265 7429 3b0a 2069 6e74 2028 2a67   *ret);. int (*g
0032ca0: 6574 5f62 795f 6973 7375 6572 5f73 6572  et_by_issuer_ser
0032cb0: 6961 6c29 2858 3530 395f 4c4f 4f4b 5550  ial)(X509_LOOKUP
0032cc0: 202a 6374 782c 696e 7420 7479 7065 2c58   *ctx,int type,X
0032cd0: 3530 395f 4e41 4d45 202a 6e61 6d65 2c0a  509_NAME *name,.
0032ce0: 2020 2020 2020 2020 4153 4e31 5f49 4e54          ASN1_INT
0032cf0: 4547 4552 202a 7365 7269 616c 2c58 3530  EGER *serial,X50
0032d00: 395f 4f42 4a45 4354 202a 7265 7429 3b0a  9_OBJECT *ret);.
0032d10: 2069 6e74 2028 2a67 6574 5f62 795f 6669   int (*get_by_fi
0032d20: 6e67 6572 7072 696e 7429 2858 3530 395f  ngerprint)(X509_
0032d30: 4c4f 4f4b 5550 202a 6374 782c 696e 7420  LOOKUP *ctx,int 
0032d40: 7479 7065 2c0a 2020 2020 2020 756e 7369  type,.      unsi
0032d50: 676e 6564 2063 6861 7220 2a62 7974 6573  gned char *bytes
0032d60: 2c69 6e74 206c 656e 2c0a 2020 2020 2020  ,int len,.      
0032d70: 5835 3039 5f4f 424a 4543 5420 2a72 6574  X509_OBJECT *ret
0032d80: 293b 0a20 696e 7420 282a 6765 745f 6279  );. int (*get_by
0032d90: 5f61 6c69 6173 2928 5835 3039 5f4c 4f4f  _alias)(X509_LOO
0032da0: 4b55 5020 2a63 7478 2c69 6e74 2074 7970  KUP *ctx,int typ
0032db0: 652c 6368 6172 202a 7374 722c 696e 7420  e,char *str,int 
0032dc0: 6c65 6e2c 0a20 2020 2020 2020 5835 3039  len,.       X509
0032dd0: 5f4f 424a 4543 5420 2a72 6574 293b 0a20  _OBJECT *ret);. 
0032de0: 7d20 5835 3039 5f4c 4f4f 4b55 505f 4d45  } X509_LOOKUP_ME
0032df0: 5448 4f44 3b0a 0a0a 0a0a 0a0a 7479 7065  THOD;.......type
0032e00: 6465 6620 7374 7275 6374 2058 3530 395f  def struct X509_
0032e10: 5645 5249 4659 5f50 4152 414d 5f73 740a  VERIFY_PARAM_st.
0032e20: 207b 0a20 6368 6172 202a 6e61 6d65 3b0a   {. char *name;.
0032e30: 2074 696d 655f 7420 6368 6563 6b5f 7469   time_t check_ti
0032e40: 6d65 3b0a 2075 6e73 6967 6e65 6420 6c6f  me;. unsigned lo
0032e50: 6e67 2069 6e68 5f66 6c61 6773 3b0a 2075  ng inh_flags;. u
0032e60: 6e73 6967 6e65 6420 6c6f 6e67 2066 6c61  nsigned long fla
0032e70: 6773 3b0a 2069 6e74 2070 7572 706f 7365  gs;. int purpose
0032e80: 3b0a 2069 6e74 2074 7275 7374 3b0a 2069  ;. int trust;. i
0032e90: 6e74 2064 6570 7468 3b0a 2073 7472 7563  nt depth;. struc
0032ea0: 7420 7374 6163 6b5f 7374 5f41 534e 315f  t stack_st_ASN1_
0032eb0: 4f42 4a45 4354 202a 706f 6c69 6369 6573  OBJECT *policies
0032ec0: 3b0a 207d 2058 3530 395f 5645 5249 4659  ;. } X509_VERIFY
0032ed0: 5f50 4152 414d 3b0a 0a73 7472 7563 7420  _PARAM;..struct 
0032ee0: 7374 6163 6b5f 7374 5f58 3530 395f 5645  stack_st_X509_VE
0032ef0: 5249 4659 5f50 4152 414d 207b 205f 5354  RIFY_PARAM { _ST
0032f00: 4143 4b20 7374 6163 6b3b 207d 3b0a 0a0a  ACK stack; };...
0032f10: 0a0a 7374 7275 6374 2078 3530 395f 7374  ..struct x509_st
0032f20: 6f72 655f 7374 0a20 7b0a 0a20 696e 7420  ore_st. {.. int 
0032f30: 6361 6368 653b 0a20 7374 7275 6374 2073  cache;. struct s
0032f40: 7461 636b 5f73 745f 5835 3039 5f4f 424a  tack_st_X509_OBJ
0032f50: 4543 5420 2a6f 626a 733b 0a0a 0a20 7374  ECT *objs;... st
0032f60: 7275 6374 2073 7461 636b 5f73 745f 5835  ruct stack_st_X5
0032f70: 3039 5f4c 4f4f 4b55 5020 2a67 6574 5f63  09_LOOKUP *get_c
0032f80: 6572 745f 6d65 7468 6f64 733b 0a0a 2058  ert_methods;.. X
0032f90: 3530 395f 5645 5249 4659 5f50 4152 414d  509_VERIFY_PARAM
0032fa0: 202a 7061 7261 6d3b 0a0a 0a20 696e 7420   *param;... int 
0032fb0: 282a 7665 7269 6679 2928 5835 3039 5f53  (*verify)(X509_S
0032fc0: 544f 5245 5f43 5458 202a 6374 7829 3b0a  TORE_CTX *ctx);.
0032fd0: 2069 6e74 2028 2a76 6572 6966 795f 6362   int (*verify_cb
0032fe0: 2928 696e 7420 6f6b 2c58 3530 395f 5354  )(int ok,X509_ST
0032ff0: 4f52 455f 4354 5820 2a63 7478 293b 0a20  ORE_CTX *ctx);. 
0033000: 696e 7420 282a 6765 745f 6973 7375 6572  int (*get_issuer
0033010: 2928 5835 3039 202a 2a69 7373 7565 722c  )(X509 **issuer,
0033020: 2058 3530 395f 5354 4f52 455f 4354 5820   X509_STORE_CTX 
0033030: 2a63 7478 2c20 5835 3039 202a 7829 3b0a  *ctx, X509 *x);.
0033040: 2069 6e74 2028 2a63 6865 636b 5f69 7373   int (*check_iss
0033050: 7565 6429 2858 3530 395f 5354 4f52 455f  ued)(X509_STORE_
0033060: 4354 5820 2a63 7478 2c20 5835 3039 202a  CTX *ctx, X509 *
0033070: 782c 2058 3530 3920 2a69 7373 7565 7229  x, X509 *issuer)
0033080: 3b0a 2069 6e74 2028 2a63 6865 636b 5f72  ;. int (*check_r
0033090: 6576 6f63 6174 696f 6e29 2858 3530 395f  evocation)(X509_
00330a0: 5354 4f52 455f 4354 5820 2a63 7478 293b  STORE_CTX *ctx);
00330b0: 0a20 696e 7420 282a 6765 745f 6372 6c29  . int (*get_crl)
00330c0: 2858 3530 395f 5354 4f52 455f 4354 5820  (X509_STORE_CTX 
00330d0: 2a63 7478 2c20 5835 3039 5f43 524c 202a  *ctx, X509_CRL *
00330e0: 2a63 726c 2c20 5835 3039 202a 7829 3b0a  *crl, X509 *x);.
00330f0: 2069 6e74 2028 2a63 6865 636b 5f63 726c   int (*check_crl
0033100: 2928 5835 3039 5f53 544f 5245 5f43 5458  )(X509_STORE_CTX
0033110: 202a 6374 782c 2058 3530 395f 4352 4c20   *ctx, X509_CRL 
0033120: 2a63 726c 293b 0a20 696e 7420 282a 6365  *crl);. int (*ce
0033130: 7274 5f63 726c 2928 5835 3039 5f53 544f  rt_crl)(X509_STO
0033140: 5245 5f43 5458 202a 6374 782c 2058 3530  RE_CTX *ctx, X50
0033150: 395f 4352 4c20 2a63 726c 2c20 5835 3039  9_CRL *crl, X509
0033160: 202a 7829 3b0a 2073 7472 7563 7420 7374   *x);. struct st
0033170: 6163 6b5f 7374 5f58 3530 3920 2a20 282a  ack_st_X509 * (*
0033180: 6c6f 6f6b 7570 5f63 6572 7473 2928 5835  lookup_certs)(X5
0033190: 3039 5f53 544f 5245 5f43 5458 202a 6374  09_STORE_CTX *ct
00331a0: 782c 2058 3530 395f 4e41 4d45 202a 6e6d  x, X509_NAME *nm
00331b0: 293b 0a20 7374 7275 6374 2073 7461 636b  );. struct stack
00331c0: 5f73 745f 5835 3039 5f43 524c 202a 2028  _st_X509_CRL * (
00331d0: 2a6c 6f6f 6b75 705f 6372 6c73 2928 5835  *lookup_crls)(X5
00331e0: 3039 5f53 544f 5245 5f43 5458 202a 6374  09_STORE_CTX *ct
00331f0: 782c 2058 3530 395f 4e41 4d45 202a 6e6d  x, X509_NAME *nm
0033200: 293b 0a20 696e 7420 282a 636c 6561 6e75  );. int (*cleanu
0033210: 7029 2858 3530 395f 5354 4f52 455f 4354  p)(X509_STORE_CT
0033220: 5820 2a63 7478 293b 0a0a 2043 5259 5054  X *ctx);.. CRYPT
0033230: 4f5f 4558 5f44 4154 4120 6578 5f64 6174  O_EX_DATA ex_dat
0033240: 613b 0a20 696e 7420 7265 6665 7265 6e63  a;. int referenc
0033250: 6573 3b0a 207d 203b 0a0a 696e 7420 5835  es;. } ;..int X5
0033260: 3039 5f53 544f 5245 5f73 6574 5f64 6570  09_STORE_set_dep
0033270: 7468 2858 3530 395f 5354 4f52 4520 2a73  th(X509_STORE *s
0033280: 746f 7265 2c20 696e 7420 6465 7074 6829  tore, int depth)
0033290: 3b0a 0a0a 0a0a 0a73 7472 7563 7420 7835  ;......struct x5
00332a0: 3039 5f6c 6f6f 6b75 705f 7374 0a20 7b0a  09_lookup_st. {.
00332b0: 2069 6e74 2069 6e69 743b 0a20 696e 7420   int init;. int 
00332c0: 736b 6970 3b0a 2058 3530 395f 4c4f 4f4b  skip;. X509_LOOK
00332d0: 5550 5f4d 4554 484f 4420 2a6d 6574 686f  UP_METHOD *metho
00332e0: 643b 0a20 6368 6172 202a 6d65 7468 6f64  d;. char *method
00332f0: 5f64 6174 613b 0a0a 2058 3530 395f 5354  _data;.. X509_ST
0033300: 4f52 4520 2a73 746f 7265 5f63 7478 3b0a  ORE *store_ctx;.
0033310: 207d 203b 0a0a 0a0a 0a73 7472 7563 7420   } ;.....struct 
0033320: 7835 3039 5f73 746f 7265 5f63 7478 5f73  x509_store_ctx_s
0033330: 740a 207b 0a20 5835 3039 5f53 544f 5245  t. {. X509_STORE
0033340: 202a 6374 783b 0a20 696e 7420 6375 7272   *ctx;. int curr
0033350: 656e 745f 6d65 7468 6f64 3b0a 0a0a 2058  ent_method;... X
0033360: 3530 3920 2a63 6572 743b 0a20 7374 7275  509 *cert;. stru
0033370: 6374 2073 7461 636b 5f73 745f 5835 3039  ct stack_st_X509
0033380: 202a 756e 7472 7573 7465 643b 0a20 7374   *untrusted;. st
0033390: 7275 6374 2073 7461 636b 5f73 745f 5835  ruct stack_st_X5
00333a0: 3039 5f43 524c 202a 6372 6c73 3b0a 0a20  09_CRL *crls;.. 
00333b0: 5835 3039 5f56 4552 4946 595f 5041 5241  X509_VERIFY_PARA
00333c0: 4d20 2a70 6172 616d 3b0a 2076 6f69 6420  M *param;. void 
00333d0: 2a6f 7468 6572 5f63 7478 3b0a 0a0a 2069  *other_ctx;... i
00333e0: 6e74 2028 2a76 6572 6966 7929 2858 3530  nt (*verify)(X50
00333f0: 395f 5354 4f52 455f 4354 5820 2a63 7478  9_STORE_CTX *ctx
0033400: 293b 0a20 696e 7420 282a 7665 7269 6679  );. int (*verify
0033410: 5f63 6229 2869 6e74 206f 6b2c 5835 3039  _cb)(int ok,X509
0033420: 5f53 544f 5245 5f43 5458 202a 6374 7829  _STORE_CTX *ctx)
0033430: 3b0a 2069 6e74 2028 2a67 6574 5f69 7373  ;. int (*get_iss
0033440: 7565 7229 2858 3530 3920 2a2a 6973 7375  uer)(X509 **issu
0033450: 6572 2c20 5835 3039 5f53 544f 5245 5f43  er, X509_STORE_C
0033460: 5458 202a 6374 782c 2058 3530 3920 2a78  TX *ctx, X509 *x
0033470: 293b 0a20 696e 7420 282a 6368 6563 6b5f  );. int (*check_
0033480: 6973 7375 6564 2928 5835 3039 5f53 544f  issued)(X509_STO
0033490: 5245 5f43 5458 202a 6374 782c 2058 3530  RE_CTX *ctx, X50
00334a0: 3920 2a78 2c20 5835 3039 202a 6973 7375  9 *x, X509 *issu
00334b0: 6572 293b 0a20 696e 7420 282a 6368 6563  er);. int (*chec
00334c0: 6b5f 7265 766f 6361 7469 6f6e 2928 5835  k_revocation)(X5
00334d0: 3039 5f53 544f 5245 5f43 5458 202a 6374  09_STORE_CTX *ct
00334e0: 7829 3b0a 2069 6e74 2028 2a67 6574 5f63  x);. int (*get_c
00334f0: 726c 2928 5835 3039 5f53 544f 5245 5f43  rl)(X509_STORE_C
0033500: 5458 202a 6374 782c 2058 3530 395f 4352  TX *ctx, X509_CR
0033510: 4c20 2a2a 6372 6c2c 2058 3530 3920 2a78  L **crl, X509 *x
0033520: 293b 0a20 696e 7420 282a 6368 6563 6b5f  );. int (*check_
0033530: 6372 6c29 2858 3530 395f 5354 4f52 455f  crl)(X509_STORE_
0033540: 4354 5820 2a63 7478 2c20 5835 3039 5f43  CTX *ctx, X509_C
0033550: 524c 202a 6372 6c29 3b0a 2069 6e74 2028  RL *crl);. int (
0033560: 2a63 6572 745f 6372 6c29 2858 3530 395f  *cert_crl)(X509_
0033570: 5354 4f52 455f 4354 5820 2a63 7478 2c20  STORE_CTX *ctx, 
0033580: 5835 3039 5f43 524c 202a 6372 6c2c 2058  X509_CRL *crl, X
0033590: 3530 3920 2a78 293b 0a20 696e 7420 282a  509 *x);. int (*
00335a0: 6368 6563 6b5f 706f 6c69 6379 2928 5835  check_policy)(X5
00335b0: 3039 5f53 544f 5245 5f43 5458 202a 6374  09_STORE_CTX *ct
00335c0: 7829 3b0a 2073 7472 7563 7420 7374 6163  x);. struct stac
00335d0: 6b5f 7374 5f58 3530 3920 2a20 282a 6c6f  k_st_X509 * (*lo
00335e0: 6f6b 7570 5f63 6572 7473 2928 5835 3039  okup_certs)(X509
00335f0: 5f53 544f 5245 5f43 5458 202a 6374 782c  _STORE_CTX *ctx,
0033600: 2058 3530 395f 4e41 4d45 202a 6e6d 293b   X509_NAME *nm);
0033610: 0a20 7374 7275 6374 2073 7461 636b 5f73  . struct stack_s
0033620: 745f 5835 3039 5f43 524c 202a 2028 2a6c  t_X509_CRL * (*l
0033630: 6f6f 6b75 705f 6372 6c73 2928 5835 3039  ookup_crls)(X509
0033640: 5f53 544f 5245 5f43 5458 202a 6374 782c  _STORE_CTX *ctx,
0033650: 2058 3530 395f 4e41 4d45 202a 6e6d 293b   X509_NAME *nm);
0033660: 0a20 696e 7420 282a 636c 6561 6e75 7029  . int (*cleanup)
0033670: 2858 3530 395f 5354 4f52 455f 4354 5820  (X509_STORE_CTX 
0033680: 2a63 7478 293b 0a0a 0a20 696e 7420 7661  *ctx);... int va
0033690: 6c69 643b 0a20 696e 7420 6c61 7374 5f75  lid;. int last_u
00336a0: 6e74 7275 7374 6564 3b0a 2073 7472 7563  ntrusted;. struc
00336b0: 7420 7374 6163 6b5f 7374 5f58 3530 3920  t stack_st_X509 
00336c0: 2a63 6861 696e 3b0a 2058 3530 395f 504f  *chain;. X509_PO
00336d0: 4c49 4359 5f54 5245 4520 2a74 7265 653b  LICY_TREE *tree;
00336e0: 0a0a 2069 6e74 2065 7870 6c69 6369 745f  .. int explicit_
00336f0: 706f 6c69 6379 3b0a 0a0a 2069 6e74 2065  policy;... int e
0033700: 7272 6f72 5f64 6570 7468 3b0a 2069 6e74  rror_depth;. int
0033710: 2065 7272 6f72 3b0a 2058 3530 3920 2a63   error;. X509 *c
0033720: 7572 7265 6e74 5f63 6572 743b 0a20 5835  urrent_cert;. X5
0033730: 3039 202a 6375 7272 656e 745f 6973 7375  09 *current_issu
0033740: 6572 3b0a 2058 3530 395f 4352 4c20 2a63  er;. X509_CRL *c
0033750: 7572 7265 6e74 5f63 726c 3b0a 0a20 696e  urrent_crl;.. in
0033760: 7420 6375 7272 656e 745f 6372 6c5f 7363  t current_crl_sc
0033770: 6f72 653b 0a20 756e 7369 676e 6564 2069  ore;. unsigned i
0033780: 6e74 2063 7572 7265 6e74 5f72 6561 736f  nt current_reaso
0033790: 6e73 3b0a 0a20 5835 3039 5f53 544f 5245  ns;.. X509_STORE
00337a0: 5f43 5458 202a 7061 7265 6e74 3b0a 0a20  _CTX *parent;.. 
00337b0: 4352 5950 544f 5f45 585f 4441 5441 2065  CRYPTO_EX_DATA e
00337c0: 785f 6461 7461 3b0a 207d 203b 0a0a 766f  x_data;. } ;..vo
00337d0: 6964 2058 3530 395f 5354 4f52 455f 4354  id X509_STORE_CT
00337e0: 585f 7365 745f 6465 7074 6828 5835 3039  X_set_depth(X509
00337f0: 5f53 544f 5245 5f43 5458 202a 6374 782c  _STORE_CTX *ctx,
0033800: 2069 6e74 2064 6570 7468 293b 0a23 2034   int depth);.# 4
0033810: 3038 2022 2f75 7372 2f69 6e63 6c75 6465  08 "/usr/include
0033820: 2f6f 7065 6e73 736c 2f78 3530 395f 7666  /openssl/x509_vf
0033830: 792e 6822 2033 2034 0a69 6e74 2058 3530  y.h" 3 4.int X50
0033840: 395f 4f42 4a45 4354 5f69 6478 5f62 795f  9_OBJECT_idx_by_
0033850: 7375 626a 6563 7428 7374 7275 6374 2073  subject(struct s
0033860: 7461 636b 5f73 745f 5835 3039 5f4f 424a  tack_st_X509_OBJ
0033870: 4543 5420 2a68 2c20 696e 7420 7479 7065  ECT *h, int type
0033880: 2c0a 2020 2020 2020 5835 3039 5f4e 414d  ,.      X509_NAM
0033890: 4520 2a6e 616d 6529 3b0a 5835 3039 5f4f  E *name);.X509_O
00338a0: 424a 4543 5420 2a58 3530 395f 4f42 4a45  BJECT *X509_OBJE
00338b0: 4354 5f72 6574 7269 6576 655f 6279 5f73  CT_retrieve_by_s
00338c0: 7562 6a65 6374 2873 7472 7563 7420 7374  ubject(struct st
00338d0: 6163 6b5f 7374 5f58 3530 395f 4f42 4a45  ack_st_X509_OBJE
00338e0: 4354 202a 682c 696e 7420 7479 7065 2c58  CT *h,int type,X
00338f0: 3530 395f 4e41 4d45 202a 6e61 6d65 293b  509_NAME *name);
0033900: 0a58 3530 395f 4f42 4a45 4354 202a 5835  .X509_OBJECT *X5
0033910: 3039 5f4f 424a 4543 545f 7265 7472 6965  09_OBJECT_retrie
0033920: 7665 5f6d 6174 6368 2873 7472 7563 7420  ve_match(struct 
0033930: 7374 6163 6b5f 7374 5f58 3530 395f 4f42  stack_st_X509_OB
0033940: 4a45 4354 202a 682c 2058 3530 395f 4f42  JECT *h, X509_OB
0033950: 4a45 4354 202a 7829 3b0a 766f 6964 2058  JECT *x);.void X
0033960: 3530 395f 4f42 4a45 4354 5f75 705f 7265  509_OBJECT_up_re
0033970: 665f 636f 756e 7428 5835 3039 5f4f 424a  f_count(X509_OBJ
0033980: 4543 5420 2a61 293b 0a76 6f69 6420 5835  ECT *a);.void X5
0033990: 3039 5f4f 424a 4543 545f 6672 6565 5f63  09_OBJECT_free_c
00339a0: 6f6e 7465 6e74 7328 5835 3039 5f4f 424a  ontents(X509_OBJ
00339b0: 4543 5420 2a61 293b 0a58 3530 395f 5354  ECT *a);.X509_ST
00339c0: 4f52 4520 2a58 3530 395f 5354 4f52 455f  ORE *X509_STORE_
00339d0: 6e65 7728 766f 6964 2029 3b0a 766f 6964  new(void );.void
00339e0: 2058 3530 395f 5354 4f52 455f 6672 6565   X509_STORE_free
00339f0: 2858 3530 395f 5354 4f52 4520 2a76 293b  (X509_STORE *v);
0033a00: 0a0a 7374 7275 6374 2073 7461 636b 5f73  ..struct stack_s
0033a10: 745f 5835 3039 2a20 5835 3039 5f53 544f  t_X509* X509_STO
0033a20: 5245 5f67 6574 315f 6365 7274 7328 5835  RE_get1_certs(X5
0033a30: 3039 5f53 544f 5245 5f43 5458 202a 7374  09_STORE_CTX *st
0033a40: 2c20 5835 3039 5f4e 414d 4520 2a6e 6d29  , X509_NAME *nm)
0033a50: 3b0a 7374 7275 6374 2073 7461 636b 5f73  ;.struct stack_s
0033a60: 745f 5835 3039 5f43 524c 2a20 5835 3039  t_X509_CRL* X509
0033a70: 5f53 544f 5245 5f67 6574 315f 6372 6c73  _STORE_get1_crls
0033a80: 2858 3530 395f 5354 4f52 455f 4354 5820  (X509_STORE_CTX 
0033a90: 2a73 742c 2058 3530 395f 4e41 4d45 202a  *st, X509_NAME *
0033aa0: 6e6d 293b 0a69 6e74 2058 3530 395f 5354  nm);.int X509_ST
0033ab0: 4f52 455f 7365 745f 666c 6167 7328 5835  ORE_set_flags(X5
0033ac0: 3039 5f53 544f 5245 202a 6374 782c 2075  09_STORE *ctx, u
0033ad0: 6e73 6967 6e65 6420 6c6f 6e67 2066 6c61  nsigned long fla
0033ae0: 6773 293b 0a69 6e74 2058 3530 395f 5354  gs);.int X509_ST
0033af0: 4f52 455f 7365 745f 7075 7270 6f73 6528  ORE_set_purpose(
0033b00: 5835 3039 5f53 544f 5245 202a 6374 782c  X509_STORE *ctx,
0033b10: 2069 6e74 2070 7572 706f 7365 293b 0a69   int purpose);.i
0033b20: 6e74 2058 3530 395f 5354 4f52 455f 7365  nt X509_STORE_se
0033b30: 745f 7472 7573 7428 5835 3039 5f53 544f  t_trust(X509_STO
0033b40: 5245 202a 6374 782c 2069 6e74 2074 7275  RE *ctx, int tru
0033b50: 7374 293b 0a69 6e74 2058 3530 395f 5354  st);.int X509_ST
0033b60: 4f52 455f 7365 7431 5f70 6172 616d 2858  ORE_set1_param(X
0033b70: 3530 395f 5354 4f52 4520 2a63 7478 2c20  509_STORE *ctx, 
0033b80: 5835 3039 5f56 4552 4946 595f 5041 5241  X509_VERIFY_PARA
0033b90: 4d20 2a70 6d29 3b0a 0a76 6f69 6420 5835  M *pm);..void X5
0033ba0: 3039 5f53 544f 5245 5f73 6574 5f76 6572  09_STORE_set_ver
0033bb0: 6966 795f 6362 2858 3530 395f 5354 4f52  ify_cb(X509_STOR
0033bc0: 4520 2a63 7478 2c0a 2020 2020 2020 696e  E *ctx,.      in
0033bd0: 7420 282a 7665 7269 6679 5f63 6229 2869  t (*verify_cb)(i
0033be0: 6e74 2c20 5835 3039 5f53 544f 5245 5f43  nt, X509_STORE_C
0033bf0: 5458 202a 2929 3b0a 0a58 3530 395f 5354  TX *));..X509_ST
0033c00: 4f52 455f 4354 5820 2a58 3530 395f 5354  ORE_CTX *X509_ST
0033c10: 4f52 455f 4354 585f 6e65 7728 766f 6964  ORE_CTX_new(void
0033c20: 293b 0a0a 696e 7420 5835 3039 5f53 544f  );..int X509_STO
0033c30: 5245 5f43 5458 5f67 6574 315f 6973 7375  RE_CTX_get1_issu
0033c40: 6572 2858 3530 3920 2a2a 6973 7375 6572  er(X509 **issuer
0033c50: 2c20 5835 3039 5f53 544f 5245 5f43 5458  , X509_STORE_CTX
0033c60: 202a 6374 782c 2058 3530 3920 2a78 293b   *ctx, X509 *x);
0033c70: 0a0a 766f 6964 2058 3530 395f 5354 4f52  ..void X509_STOR
0033c80: 455f 4354 585f 6672 6565 2858 3530 395f  E_CTX_free(X509_
0033c90: 5354 4f52 455f 4354 5820 2a63 7478 293b  STORE_CTX *ctx);
0033ca0: 0a69 6e74 2058 3530 395f 5354 4f52 455f  .int X509_STORE_
0033cb0: 4354 585f 696e 6974 2858 3530 395f 5354  CTX_init(X509_ST
0033cc0: 4f52 455f 4354 5820 2a63 7478 2c20 5835  ORE_CTX *ctx, X5
0033cd0: 3039 5f53 544f 5245 202a 7374 6f72 652c  09_STORE *store,
0033ce0: 0a20 2020 2058 3530 3920 2a78 3530 392c  .    X509 *x509,
0033cf0: 2073 7472 7563 7420 7374 6163 6b5f 7374   struct stack_st
0033d00: 5f58 3530 3920 2a63 6861 696e 293b 0a76  _X509 *chain);.v
0033d10: 6f69 6420 5835 3039 5f53 544f 5245 5f43  oid X509_STORE_C
0033d20: 5458 5f74 7275 7374 6564 5f73 7461 636b  TX_trusted_stack
0033d30: 2858 3530 395f 5354 4f52 455f 4354 5820  (X509_STORE_CTX 
0033d40: 2a63 7478 2c20 7374 7275 6374 2073 7461  *ctx, struct sta
0033d50: 636b 5f73 745f 5835 3039 202a 736b 293b  ck_st_X509 *sk);
0033d60: 0a76 6f69 6420 5835 3039 5f53 544f 5245  .void X509_STORE
0033d70: 5f43 5458 5f63 6c65 616e 7570 2858 3530  _CTX_cleanup(X50
0033d80: 395f 5354 4f52 455f 4354 5820 2a63 7478  9_STORE_CTX *ctx
0033d90: 293b 0a0a 5835 3039 5f4c 4f4f 4b55 5020  );..X509_LOOKUP 
0033da0: 2a58 3530 395f 5354 4f52 455f 6164 645f  *X509_STORE_add_
0033db0: 6c6f 6f6b 7570 2858 3530 395f 5354 4f52  lookup(X509_STOR
0033dc0: 4520 2a76 2c20 5835 3039 5f4c 4f4f 4b55  E *v, X509_LOOKU
0033dd0: 505f 4d45 5448 4f44 202a 6d29 3b0a 0a58  P_METHOD *m);..X
0033de0: 3530 395f 4c4f 4f4b 5550 5f4d 4554 484f  509_LOOKUP_METHO
0033df0: 4420 2a58 3530 395f 4c4f 4f4b 5550 5f68  D *X509_LOOKUP_h
0033e00: 6173 685f 6469 7228 766f 6964 293b 0a58  ash_dir(void);.X
0033e10: 3530 395f 4c4f 4f4b 5550 5f4d 4554 484f  509_LOOKUP_METHO
0033e20: 4420 2a58 3530 395f 4c4f 4f4b 5550 5f66  D *X509_LOOKUP_f
0033e30: 696c 6528 766f 6964 293b 0a0a 696e 7420  ile(void);..int 
0033e40: 5835 3039 5f53 544f 5245 5f61 6464 5f63  X509_STORE_add_c
0033e50: 6572 7428 5835 3039 5f53 544f 5245 202a  ert(X509_STORE *
0033e60: 6374 782c 2058 3530 3920 2a78 293b 0a69  ctx, X509 *x);.i
0033e70: 6e74 2058 3530 395f 5354 4f52 455f 6164  nt X509_STORE_ad
0033e80: 645f 6372 6c28 5835 3039 5f53 544f 5245  d_crl(X509_STORE
0033e90: 202a 6374 782c 2058 3530 395f 4352 4c20   *ctx, X509_CRL 
0033ea0: 2a78 293b 0a0a 696e 7420 5835 3039 5f53  *x);..int X509_S
0033eb0: 544f 5245 5f67 6574 5f62 795f 7375 626a  TORE_get_by_subj
0033ec0: 6563 7428 5835 3039 5f53 544f 5245 5f43  ect(X509_STORE_C
0033ed0: 5458 202a 7673 2c69 6e74 2074 7970 652c  TX *vs,int type,
0033ee0: 5835 3039 5f4e 414d 4520 2a6e 616d 652c  X509_NAME *name,
0033ef0: 0a20 5835 3039 5f4f 424a 4543 5420 2a72  . X509_OBJECT *r
0033f00: 6574 293b 0a0a 696e 7420 5835 3039 5f4c  et);..int X509_L
0033f10: 4f4f 4b55 505f 6374 726c 2858 3530 395f  OOKUP_ctrl(X509_
0033f20: 4c4f 4f4b 5550 202a 6374 782c 2069 6e74  LOOKUP *ctx, int
0033f30: 2063 6d64 2c20 636f 6e73 7420 6368 6172   cmd, const char
0033f40: 202a 6172 6763 2c0a 206c 6f6e 6720 6172   *argc,. long ar
0033f50: 676c 2c20 6368 6172 202a 2a72 6574 293b  gl, char **ret);
0033f60: 0a0a 0a69 6e74 2058 3530 395f 6c6f 6164  ...int X509_load
0033f70: 5f63 6572 745f 6669 6c65 2858 3530 395f  _cert_file(X509_
0033f80: 4c4f 4f4b 5550 202a 6374 782c 2063 6f6e  LOOKUP *ctx, con
0033f90: 7374 2063 6861 7220 2a66 696c 652c 2069  st char *file, i
0033fa0: 6e74 2074 7970 6529 3b0a 696e 7420 5835  nt type);.int X5
0033fb0: 3039 5f6c 6f61 645f 6372 6c5f 6669 6c65  09_load_crl_file
0033fc0: 2858 3530 395f 4c4f 4f4b 5550 202a 6374  (X509_LOOKUP *ct
0033fd0: 782c 2063 6f6e 7374 2063 6861 7220 2a66  x, const char *f
0033fe0: 696c 652c 2069 6e74 2074 7970 6529 3b0a  ile, int type);.
0033ff0: 696e 7420 5835 3039 5f6c 6f61 645f 6365  int X509_load_ce
0034000: 7274 5f63 726c 5f66 696c 6528 5835 3039  rt_crl_file(X509
0034010: 5f4c 4f4f 4b55 5020 2a63 7478 2c20 636f  _LOOKUP *ctx, co
0034020: 6e73 7420 6368 6172 202a 6669 6c65 2c20  nst char *file, 
0034030: 696e 7420 7479 7065 293b 0a0a 0a0a 5835  int type);....X5
0034040: 3039 5f4c 4f4f 4b55 5020 2a58 3530 395f  09_LOOKUP *X509_
0034050: 4c4f 4f4b 5550 5f6e 6577 2858 3530 395f  LOOKUP_new(X509_
0034060: 4c4f 4f4b 5550 5f4d 4554 484f 4420 2a6d  LOOKUP_METHOD *m
0034070: 6574 686f 6429 3b0a 766f 6964 2058 3530  ethod);.void X50
0034080: 395f 4c4f 4f4b 5550 5f66 7265 6528 5835  9_LOOKUP_free(X5
0034090: 3039 5f4c 4f4f 4b55 5020 2a63 7478 293b  09_LOOKUP *ctx);
00340a0: 0a69 6e74 2058 3530 395f 4c4f 4f4b 5550  .int X509_LOOKUP
00340b0: 5f69 6e69 7428 5835 3039 5f4c 4f4f 4b55  _init(X509_LOOKU
00340c0: 5020 2a63 7478 293b 0a69 6e74 2058 3530  P *ctx);.int X50
00340d0: 395f 4c4f 4f4b 5550 5f62 795f 7375 626a  9_LOOKUP_by_subj
00340e0: 6563 7428 5835 3039 5f4c 4f4f 4b55 5020  ect(X509_LOOKUP 
00340f0: 2a63 7478 2c20 696e 7420 7479 7065 2c20  *ctx, int type, 
0034100: 5835 3039 5f4e 414d 4520 2a6e 616d 652c  X509_NAME *name,
0034110: 0a20 5835 3039 5f4f 424a 4543 5420 2a72  . X509_OBJECT *r
0034120: 6574 293b 0a69 6e74 2058 3530 395f 4c4f  et);.int X509_LO
0034130: 4f4b 5550 5f62 795f 6973 7375 6572 5f73  OKUP_by_issuer_s
0034140: 6572 6961 6c28 5835 3039 5f4c 4f4f 4b55  erial(X509_LOOKU
0034150: 5020 2a63 7478 2c20 696e 7420 7479 7065  P *ctx, int type
0034160: 2c20 5835 3039 5f4e 414d 4520 2a6e 616d  , X509_NAME *nam
0034170: 652c 0a20 4153 4e31 5f49 4e54 4547 4552  e,. ASN1_INTEGER
0034180: 202a 7365 7269 616c 2c20 5835 3039 5f4f   *serial, X509_O
0034190: 424a 4543 5420 2a72 6574 293b 0a69 6e74  BJECT *ret);.int
00341a0: 2058 3530 395f 4c4f 4f4b 5550 5f62 795f   X509_LOOKUP_by_
00341b0: 6669 6e67 6572 7072 696e 7428 5835 3039  fingerprint(X509
00341c0: 5f4c 4f4f 4b55 5020 2a63 7478 2c20 696e  _LOOKUP *ctx, in
00341d0: 7420 7479 7065 2c0a 2075 6e73 6967 6e65  t type,. unsigne
00341e0: 6420 6368 6172 202a 6279 7465 732c 2069  d char *bytes, i
00341f0: 6e74 206c 656e 2c20 5835 3039 5f4f 424a  nt len, X509_OBJ
0034200: 4543 5420 2a72 6574 293b 0a69 6e74 2058  ECT *ret);.int X
0034210: 3530 395f 4c4f 4f4b 5550 5f62 795f 616c  509_LOOKUP_by_al
0034220: 6961 7328 5835 3039 5f4c 4f4f 4b55 5020  ias(X509_LOOKUP 
0034230: 2a63 7478 2c20 696e 7420 7479 7065 2c20  *ctx, int type, 
0034240: 6368 6172 202a 7374 722c 0a20 696e 7420  char *str,. int 
0034250: 6c65 6e2c 2058 3530 395f 4f42 4a45 4354  len, X509_OBJECT
0034260: 202a 7265 7429 3b0a 696e 7420 5835 3039   *ret);.int X509
0034270: 5f4c 4f4f 4b55 505f 7368 7574 646f 776e  _LOOKUP_shutdown
0034280: 2858 3530 395f 4c4f 4f4b 5550 202a 6374  (X509_LOOKUP *ct
0034290: 7829 3b0a 0a0a 696e 7420 5835 3039 5f53  x);...int X509_S
00342a0: 544f 5245 5f6c 6f61 645f 6c6f 6361 7469  TORE_load_locati
00342b0: 6f6e 7320 2858 3530 395f 5354 4f52 4520  ons (X509_STORE 
00342c0: 2a63 7478 2c0a 2020 636f 6e73 7420 6368  *ctx,.  const ch
00342d0: 6172 202a 6669 6c65 2c20 636f 6e73 7420  ar *file, const 
00342e0: 6368 6172 202a 6469 7229 3b0a 696e 7420  char *dir);.int 
00342f0: 5835 3039 5f53 544f 5245 5f73 6574 5f64  X509_STORE_set_d
0034300: 6566 6175 6c74 5f70 6174 6873 2858 3530  efault_paths(X50
0034310: 395f 5354 4f52 4520 2a63 7478 293b 0a0a  9_STORE *ctx);..
0034320: 0a69 6e74 2058 3530 395f 5354 4f52 455f  .int X509_STORE_
0034330: 4354 585f 6765 745f 6578 5f6e 6577 5f69  CTX_get_ex_new_i
0034340: 6e64 6578 286c 6f6e 6720 6172 676c 2c20  ndex(long argl, 
0034350: 766f 6964 202a 6172 6770 2c20 4352 5950  void *argp, CRYP
0034360: 544f 5f45 585f 6e65 7720 2a6e 6577 5f66  TO_EX_new *new_f
0034370: 756e 632c 0a20 4352 5950 544f 5f45 585f  unc,. CRYPTO_EX_
0034380: 6475 7020 2a64 7570 5f66 756e 632c 2043  dup *dup_func, C
0034390: 5259 5054 4f5f 4558 5f66 7265 6520 2a66  RYPTO_EX_free *f
00343a0: 7265 655f 6675 6e63 293b 0a69 6e74 2058  ree_func);.int X
00343b0: 3530 395f 5354 4f52 455f 4354 585f 7365  509_STORE_CTX_se
00343c0: 745f 6578 5f64 6174 6128 5835 3039 5f53  t_ex_data(X509_S
00343d0: 544f 5245 5f43 5458 202a 6374 782c 696e  TORE_CTX *ctx,in
00343e0: 7420 6964 782c 766f 6964 202a 6461 7461  t idx,void *data
00343f0: 293b 0a76 6f69 6420 2a20 5835 3039 5f53  );.void * X509_S
0034400: 544f 5245 5f43 5458 5f67 6574 5f65 785f  TORE_CTX_get_ex_
0034410: 6461 7461 2858 3530 395f 5354 4f52 455f  data(X509_STORE_
0034420: 4354 5820 2a63 7478 2c69 6e74 2069 6478  CTX *ctx,int idx
0034430: 293b 0a69 6e74 2058 3530 395f 5354 4f52  );.int X509_STOR
0034440: 455f 4354 585f 6765 745f 6572 726f 7228  E_CTX_get_error(
0034450: 5835 3039 5f53 544f 5245 5f43 5458 202a  X509_STORE_CTX *
0034460: 6374 7829 3b0a 766f 6964 2058 3530 395f  ctx);.void X509_
0034470: 5354 4f52 455f 4354 585f 7365 745f 6572  STORE_CTX_set_er
0034480: 726f 7228 5835 3039 5f53 544f 5245 5f43  ror(X509_STORE_C
0034490: 5458 202a 6374 782c 696e 7420 7329 3b0a  TX *ctx,int s);.
00344a0: 696e 7420 5835 3039 5f53 544f 5245 5f43  int X509_STORE_C
00344b0: 5458 5f67 6574 5f65 7272 6f72 5f64 6570  TX_get_error_dep
00344c0: 7468 2858 3530 395f 5354 4f52 455f 4354  th(X509_STORE_CT
00344d0: 5820 2a63 7478 293b 0a58 3530 3920 2a20  X *ctx);.X509 * 
00344e0: 5835 3039 5f53 544f 5245 5f43 5458 5f67  X509_STORE_CTX_g
00344f0: 6574 5f63 7572 7265 6e74 5f63 6572 7428  et_current_cert(
0034500: 5835 3039 5f53 544f 5245 5f43 5458 202a  X509_STORE_CTX *
0034510: 6374 7829 3b0a 5835 3039 202a 5835 3039  ctx);.X509 *X509
0034520: 5f53 544f 5245 5f43 5458 5f67 6574 305f  _STORE_CTX_get0_
0034530: 6375 7272 656e 745f 6973 7375 6572 2858  current_issuer(X
0034540: 3530 395f 5354 4f52 455f 4354 5820 2a63  509_STORE_CTX *c
0034550: 7478 293b 0a58 3530 395f 4352 4c20 2a58  tx);.X509_CRL *X
0034560: 3530 395f 5354 4f52 455f 4354 585f 6765  509_STORE_CTX_ge
0034570: 7430 5f63 7572 7265 6e74 5f63 726c 2858  t0_current_crl(X
0034580: 3530 395f 5354 4f52 455f 4354 5820 2a63  509_STORE_CTX *c
0034590: 7478 293b 0a58 3530 395f 5354 4f52 455f  tx);.X509_STORE_
00345a0: 4354 5820 2a58 3530 395f 5354 4f52 455f  CTX *X509_STORE_
00345b0: 4354 585f 6765 7430 5f70 6172 656e 745f  CTX_get0_parent_
00345c0: 6374 7828 5835 3039 5f53 544f 5245 5f43  ctx(X509_STORE_C
00345d0: 5458 202a 6374 7829 3b0a 7374 7275 6374  TX *ctx);.struct
00345e0: 2073 7461 636b 5f73 745f 5835 3039 202a   stack_st_X509 *
00345f0: 5835 3039 5f53 544f 5245 5f43 5458 5f67  X509_STORE_CTX_g
0034600: 6574 5f63 6861 696e 2858 3530 395f 5354  et_chain(X509_ST
0034610: 4f52 455f 4354 5820 2a63 7478 293b 0a73  ORE_CTX *ctx);.s
0034620: 7472 7563 7420 7374 6163 6b5f 7374 5f58  truct stack_st_X
0034630: 3530 3920 2a58 3530 395f 5354 4f52 455f  509 *X509_STORE_
0034640: 4354 585f 6765 7431 5f63 6861 696e 2858  CTX_get1_chain(X
0034650: 3530 395f 5354 4f52 455f 4354 5820 2a63  509_STORE_CTX *c
0034660: 7478 293b 0a76 6f69 6420 5835 3039 5f53  tx);.void X509_S
0034670: 544f 5245 5f43 5458 5f73 6574 5f63 6572  TORE_CTX_set_cer
0034680: 7428 5835 3039 5f53 544f 5245 5f43 5458  t(X509_STORE_CTX
0034690: 202a 632c 5835 3039 202a 7829 3b0a 766f   *c,X509 *x);.vo
00346a0: 6964 2058 3530 395f 5354 4f52 455f 4354  id X509_STORE_CT
00346b0: 585f 7365 745f 6368 6169 6e28 5835 3039  X_set_chain(X509
00346c0: 5f53 544f 5245 5f43 5458 202a 632c 7374  _STORE_CTX *c,st
00346d0: 7275 6374 2073 7461 636b 5f73 745f 5835  ruct stack_st_X5
00346e0: 3039 202a 736b 293b 0a76 6f69 6420 5835  09 *sk);.void X5
00346f0: 3039 5f53 544f 5245 5f43 5458 5f73 6574  09_STORE_CTX_set
0034700: 305f 6372 6c73 2858 3530 395f 5354 4f52  0_crls(X509_STOR
0034710: 455f 4354 5820 2a63 2c73 7472 7563 7420  E_CTX *c,struct 
0034720: 7374 6163 6b5f 7374 5f58 3530 395f 4352  stack_st_X509_CR
0034730: 4c20 2a73 6b29 3b0a 696e 7420 5835 3039  L *sk);.int X509
0034740: 5f53 544f 5245 5f43 5458 5f73 6574 5f70  _STORE_CTX_set_p
0034750: 7572 706f 7365 2858 3530 395f 5354 4f52  urpose(X509_STOR
0034760: 455f 4354 5820 2a63 7478 2c20 696e 7420  E_CTX *ctx, int 
0034770: 7075 7270 6f73 6529 3b0a 696e 7420 5835  purpose);.int X5
0034780: 3039 5f53 544f 5245 5f43 5458 5f73 6574  09_STORE_CTX_set
0034790: 5f74 7275 7374 2858 3530 395f 5354 4f52  _trust(X509_STOR
00347a0: 455f 4354 5820 2a63 7478 2c20 696e 7420  E_CTX *ctx, int 
00347b0: 7472 7573 7429 3b0a 696e 7420 5835 3039  trust);.int X509
00347c0: 5f53 544f 5245 5f43 5458 5f70 7572 706f  _STORE_CTX_purpo
00347d0: 7365 5f69 6e68 6572 6974 2858 3530 395f  se_inherit(X509_
00347e0: 5354 4f52 455f 4354 5820 2a63 7478 2c20  STORE_CTX *ctx, 
00347f0: 696e 7420 6465 665f 7075 7270 6f73 652c  int def_purpose,
0034800: 0a20 2020 2069 6e74 2070 7572 706f 7365  .    int purpose
0034810: 2c20 696e 7420 7472 7573 7429 3b0a 766f  , int trust);.vo
0034820: 6964 2058 3530 395f 5354 4f52 455f 4354  id X509_STORE_CT
0034830: 585f 7365 745f 666c 6167 7328 5835 3039  X_set_flags(X509
0034840: 5f53 544f 5245 5f43 5458 202a 6374 782c  _STORE_CTX *ctx,
0034850: 2075 6e73 6967 6e65 6420 6c6f 6e67 2066   unsigned long f
0034860: 6c61 6773 293b 0a76 6f69 6420 5835 3039  lags);.void X509
0034870: 5f53 544f 5245 5f43 5458 5f73 6574 5f74  _STORE_CTX_set_t
0034880: 696d 6528 5835 3039 5f53 544f 5245 5f43  ime(X509_STORE_C
0034890: 5458 202a 6374 782c 2075 6e73 6967 6e65  TX *ctx, unsigne
00348a0: 6420 6c6f 6e67 2066 6c61 6773 2c0a 2020  d long flags,.  
00348b0: 2020 2020 2020 7469 6d65 5f74 2074 293b        time_t t);
00348c0: 0a76 6f69 6420 5835 3039 5f53 544f 5245  .void X509_STORE
00348d0: 5f43 5458 5f73 6574 5f76 6572 6966 795f  _CTX_set_verify_
00348e0: 6362 2858 3530 395f 5354 4f52 455f 4354  cb(X509_STORE_CT
00348f0: 5820 2a63 7478 2c0a 2020 2020 2020 696e  X *ctx,.      in
0034900: 7420 282a 7665 7269 6679 5f63 6229 2869  t (*verify_cb)(i
0034910: 6e74 2c20 5835 3039 5f53 544f 5245 5f43  nt, X509_STORE_C
0034920: 5458 202a 2929 3b0a 0a58 3530 395f 504f  TX *));..X509_PO
0034930: 4c49 4359 5f54 5245 4520 2a58 3530 395f  LICY_TREE *X509_
0034940: 5354 4f52 455f 4354 585f 6765 7430 5f70  STORE_CTX_get0_p
0034950: 6f6c 6963 795f 7472 6565 2858 3530 395f  olicy_tree(X509_
0034960: 5354 4f52 455f 4354 5820 2a63 7478 293b  STORE_CTX *ctx);
0034970: 0a69 6e74 2058 3530 395f 5354 4f52 455f  .int X509_STORE_
0034980: 4354 585f 6765 745f 6578 706c 6963 6974  CTX_get_explicit
0034990: 5f70 6f6c 6963 7928 5835 3039 5f53 544f  _policy(X509_STO
00349a0: 5245 5f43 5458 202a 6374 7829 3b0a 0a58  RE_CTX *ctx);..X
00349b0: 3530 395f 5645 5249 4659 5f50 4152 414d  509_VERIFY_PARAM
00349c0: 202a 5835 3039 5f53 544f 5245 5f43 5458   *X509_STORE_CTX
00349d0: 5f67 6574 305f 7061 7261 6d28 5835 3039  _get0_param(X509
00349e0: 5f53 544f 5245 5f43 5458 202a 6374 7829  _STORE_CTX *ctx)
00349f0: 3b0a 766f 6964 2058 3530 395f 5354 4f52  ;.void X509_STOR
0034a00: 455f 4354 585f 7365 7430 5f70 6172 616d  E_CTX_set0_param
0034a10: 2858 3530 395f 5354 4f52 455f 4354 5820  (X509_STORE_CTX 
0034a20: 2a63 7478 2c20 5835 3039 5f56 4552 4946  *ctx, X509_VERIF
0034a30: 595f 5041 5241 4d20 2a70 6172 616d 293b  Y_PARAM *param);
0034a40: 0a69 6e74 2058 3530 395f 5354 4f52 455f  .int X509_STORE_
0034a50: 4354 585f 7365 745f 6465 6661 756c 7428  CTX_set_default(
0034a60: 5835 3039 5f53 544f 5245 5f43 5458 202a  X509_STORE_CTX *
0034a70: 6374 782c 2063 6f6e 7374 2063 6861 7220  ctx, const char 
0034a80: 2a6e 616d 6529 3b0a 0a0a 0a58 3530 395f  *name);....X509_
0034a90: 5645 5249 4659 5f50 4152 414d 202a 5835  VERIFY_PARAM *X5
0034aa0: 3039 5f56 4552 4946 595f 5041 5241 4d5f  09_VERIFY_PARAM_
0034ab0: 6e65 7728 766f 6964 293b 0a76 6f69 6420  new(void);.void 
0034ac0: 5835 3039 5f56 4552 4946 595f 5041 5241  X509_VERIFY_PARA
0034ad0: 4d5f 6672 6565 2858 3530 395f 5645 5249  M_free(X509_VERI
0034ae0: 4659 5f50 4152 414d 202a 7061 7261 6d29  FY_PARAM *param)
0034af0: 3b0a 696e 7420 5835 3039 5f56 4552 4946  ;.int X509_VERIF
0034b00: 595f 5041 5241 4d5f 696e 6865 7269 7428  Y_PARAM_inherit(
0034b10: 5835 3039 5f56 4552 4946 595f 5041 5241  X509_VERIFY_PARA
0034b20: 4d20 2a74 6f2c 0a20 2020 2020 2063 6f6e  M *to,.      con
0034b30: 7374 2058 3530 395f 5645 5249 4659 5f50  st X509_VERIFY_P
0034b40: 4152 414d 202a 6672 6f6d 293b 0a69 6e74  ARAM *from);.int
0034b50: 2058 3530 395f 5645 5249 4659 5f50 4152   X509_VERIFY_PAR
0034b60: 414d 5f73 6574 3128 5835 3039 5f56 4552  AM_set1(X509_VER
0034b70: 4946 595f 5041 5241 4d20 2a74 6f2c 0a20  IFY_PARAM *to,. 
0034b80: 2020 2020 2063 6f6e 7374 2058 3530 395f       const X509_
0034b90: 5645 5249 4659 5f50 4152 414d 202a 6672  VERIFY_PARAM *fr
0034ba0: 6f6d 293b 0a69 6e74 2058 3530 395f 5645  om);.int X509_VE
0034bb0: 5249 4659 5f50 4152 414d 5f73 6574 315f  RIFY_PARAM_set1_
0034bc0: 6e61 6d65 2858 3530 395f 5645 5249 4659  name(X509_VERIFY
0034bd0: 5f50 4152 414d 202a 7061 7261 6d2c 2063  _PARAM *param, c
0034be0: 6f6e 7374 2063 6861 7220 2a6e 616d 6529  onst char *name)
0034bf0: 3b0a 696e 7420 5835 3039 5f56 4552 4946  ;.int X509_VERIF
0034c00: 595f 5041 5241 4d5f 7365 745f 666c 6167  Y_PARAM_set_flag
0034c10: 7328 5835 3039 5f56 4552 4946 595f 5041  s(X509_VERIFY_PA
0034c20: 5241 4d20 2a70 6172 616d 2c20 756e 7369  RAM *param, unsi
0034c30: 676e 6564 206c 6f6e 6720 666c 6167 7329  gned long flags)
0034c40: 3b0a 696e 7420 5835 3039 5f56 4552 4946  ;.int X509_VERIF
0034c50: 595f 5041 5241 4d5f 636c 6561 725f 666c  Y_PARAM_clear_fl
0034c60: 6167 7328 5835 3039 5f56 4552 4946 595f  ags(X509_VERIFY_
0034c70: 5041 5241 4d20 2a70 6172 616d 2c0a 2020  PARAM *param,.  
0034c80: 2020 2020 2075 6e73 6967 6e65 6420 6c6f       unsigned lo
0034c90: 6e67 2066 6c61 6773 293b 0a75 6e73 6967  ng flags);.unsig
0034ca0: 6e65 6420 6c6f 6e67 2058 3530 395f 5645  ned long X509_VE
0034cb0: 5249 4659 5f50 4152 414d 5f67 6574 5f66  RIFY_PARAM_get_f
0034cc0: 6c61 6773 2858 3530 395f 5645 5249 4659  lags(X509_VERIFY
0034cd0: 5f50 4152 414d 202a 7061 7261 6d29 3b0a  _PARAM *param);.
0034ce0: 696e 7420 5835 3039 5f56 4552 4946 595f  int X509_VERIFY_
0034cf0: 5041 5241 4d5f 7365 745f 7075 7270 6f73  PARAM_set_purpos
0034d00: 6528 5835 3039 5f56 4552 4946 595f 5041  e(X509_VERIFY_PA
0034d10: 5241 4d20 2a70 6172 616d 2c20 696e 7420  RAM *param, int 
0034d20: 7075 7270 6f73 6529 3b0a 696e 7420 5835  purpose);.int X5
0034d30: 3039 5f56 4552 4946 595f 5041 5241 4d5f  09_VERIFY_PARAM_
0034d40: 7365 745f 7472 7573 7428 5835 3039 5f56  set_trust(X509_V
0034d50: 4552 4946 595f 5041 5241 4d20 2a70 6172  ERIFY_PARAM *par
0034d60: 616d 2c20 696e 7420 7472 7573 7429 3b0a  am, int trust);.
0034d70: 766f 6964 2058 3530 395f 5645 5249 4659  void X509_VERIFY
0034d80: 5f50 4152 414d 5f73 6574 5f64 6570 7468  _PARAM_set_depth
0034d90: 2858 3530 395f 5645 5249 4659 5f50 4152  (X509_VERIFY_PAR
0034da0: 414d 202a 7061 7261 6d2c 2069 6e74 2064  AM *param, int d
0034db0: 6570 7468 293b 0a76 6f69 6420 5835 3039  epth);.void X509
0034dc0: 5f56 4552 4946 595f 5041 5241 4d5f 7365  _VERIFY_PARAM_se
0034dd0: 745f 7469 6d65 2858 3530 395f 5645 5249  t_time(X509_VERI
0034de0: 4659 5f50 4152 414d 202a 7061 7261 6d2c  FY_PARAM *param,
0034df0: 2074 696d 655f 7420 7429 3b0a 696e 7420   time_t t);.int 
0034e00: 5835 3039 5f56 4552 4946 595f 5041 5241  X509_VERIFY_PARA
0034e10: 4d5f 6164 6430 5f70 6f6c 6963 7928 5835  M_add0_policy(X5
0034e20: 3039 5f56 4552 4946 595f 5041 5241 4d20  09_VERIFY_PARAM 
0034e30: 2a70 6172 616d 2c0a 2020 2020 2020 4153  *param,.      AS
0034e40: 4e31 5f4f 424a 4543 5420 2a70 6f6c 6963  N1_OBJECT *polic
0034e50: 7929 3b0a 696e 7420 5835 3039 5f56 4552  y);.int X509_VER
0034e60: 4946 595f 5041 5241 4d5f 7365 7431 5f70  IFY_PARAM_set1_p
0034e70: 6f6c 6963 6965 7328 5835 3039 5f56 4552  olicies(X509_VER
0034e80: 4946 595f 5041 5241 4d20 2a70 6172 616d  IFY_PARAM *param
0034e90: 2c0a 2020 2020 2073 7472 7563 7420 7374  ,.     struct st
0034ea0: 6163 6b5f 7374 5f41 534e 315f 4f42 4a45  ack_st_ASN1_OBJE
0034eb0: 4354 202a 706f 6c69 6369 6573 293b 0a69  CT *policies);.i
0034ec0: 6e74 2058 3530 395f 5645 5249 4659 5f50  nt X509_VERIFY_P
0034ed0: 4152 414d 5f67 6574 5f64 6570 7468 2863  ARAM_get_depth(c
0034ee0: 6f6e 7374 2058 3530 395f 5645 5249 4659  onst X509_VERIFY
0034ef0: 5f50 4152 414d 202a 7061 7261 6d29 3b0a  _PARAM *param);.
0034f00: 0a69 6e74 2058 3530 395f 5645 5249 4659  .int X509_VERIFY
0034f10: 5f50 4152 414d 5f61 6464 305f 7461 626c  _PARAM_add0_tabl
0034f20: 6528 5835 3039 5f56 4552 4946 595f 5041  e(X509_VERIFY_PA
0034f30: 5241 4d20 2a70 6172 616d 293b 0a63 6f6e  RAM *param);.con
0034f40: 7374 2058 3530 395f 5645 5249 4659 5f50  st X509_VERIFY_P
0034f50: 4152 414d 202a 5835 3039 5f56 4552 4946  ARAM *X509_VERIF
0034f60: 595f 5041 5241 4d5f 6c6f 6f6b 7570 2863  Y_PARAM_lookup(c
0034f70: 6f6e 7374 2063 6861 7220 2a6e 616d 6529  onst char *name)
0034f80: 3b0a 766f 6964 2058 3530 395f 5645 5249  ;.void X509_VERI
0034f90: 4659 5f50 4152 414d 5f74 6162 6c65 5f63  FY_PARAM_table_c
0034fa0: 6c65 616e 7570 2876 6f69 6429 3b0a 0a69  leanup(void);..i
0034fb0: 6e74 2058 3530 395f 706f 6c69 6379 5f63  nt X509_policy_c
0034fc0: 6865 636b 2858 3530 395f 504f 4c49 4359  heck(X509_POLICY
0034fd0: 5f54 5245 4520 2a2a 7074 7265 652c 2069  _TREE **ptree, i
0034fe0: 6e74 202a 7065 7870 6c69 6369 745f 706f  nt *pexplicit_po
0034ff0: 6c69 6379 2c0a 2020 2073 7472 7563 7420  licy,.   struct 
0035000: 7374 6163 6b5f 7374 5f58 3530 3920 2a63  stack_st_X509 *c
0035010: 6572 7473 2c0a 2020 2073 7472 7563 7420  erts,.   struct 
0035020: 7374 6163 6b5f 7374 5f41 534e 315f 4f42  stack_st_ASN1_OB
0035030: 4a45 4354 202a 706f 6c69 6379 5f6f 6964  JECT *policy_oid
0035040: 732c 0a20 2020 756e 7369 676e 6564 2069  s,.   unsigned i
0035050: 6e74 2066 6c61 6773 293b 0a0a 766f 6964  nt flags);..void
0035060: 2058 3530 395f 706f 6c69 6379 5f74 7265   X509_policy_tre
0035070: 655f 6672 6565 2858 3530 395f 504f 4c49  e_free(X509_POLI
0035080: 4359 5f54 5245 4520 2a74 7265 6529 3b0a  CY_TREE *tree);.
0035090: 0a69 6e74 2058 3530 395f 706f 6c69 6379  .int X509_policy
00350a0: 5f74 7265 655f 6c65 7665 6c5f 636f 756e  _tree_level_coun
00350b0: 7428 636f 6e73 7420 5835 3039 5f50 4f4c  t(const X509_POL
00350c0: 4943 595f 5452 4545 202a 7472 6565 293b  ICY_TREE *tree);
00350d0: 0a58 3530 395f 504f 4c49 4359 5f4c 4556  .X509_POLICY_LEV
00350e0: 454c 202a 0a20 5835 3039 5f70 6f6c 6963  EL *. X509_polic
00350f0: 795f 7472 6565 5f67 6574 305f 6c65 7665  y_tree_get0_leve
0035100: 6c28 636f 6e73 7420 5835 3039 5f50 4f4c  l(const X509_POL
0035110: 4943 595f 5452 4545 202a 7472 6565 2c20  ICY_TREE *tree, 
0035120: 696e 7420 6929 3b0a 0a73 7472 7563 7420  int i);..struct 
0035130: 7374 6163 6b5f 7374 5f58 3530 395f 504f  stack_st_X509_PO
0035140: 4c49 4359 5f4e 4f44 4520 2a0a 2058 3530  LICY_NODE *. X50
0035150: 395f 706f 6c69 6379 5f74 7265 655f 6765  9_policy_tree_ge
0035160: 7430 5f70 6f6c 6963 6965 7328 636f 6e73  t0_policies(cons
0035170: 7420 5835 3039 5f50 4f4c 4943 595f 5452  t X509_POLICY_TR
0035180: 4545 202a 7472 6565 293b 0a0a 7374 7275  EE *tree);..stru
0035190: 6374 2073 7461 636b 5f73 745f 5835 3039  ct stack_st_X509
00351a0: 5f50 4f4c 4943 595f 4e4f 4445 202a 0a20  _POLICY_NODE *. 
00351b0: 5835 3039 5f70 6f6c 6963 795f 7472 6565  X509_policy_tree
00351c0: 5f67 6574 305f 7573 6572 5f70 6f6c 6963  _get0_user_polic
00351d0: 6965 7328 636f 6e73 7420 5835 3039 5f50  ies(const X509_P
00351e0: 4f4c 4943 595f 5452 4545 202a 7472 6565  OLICY_TREE *tree
00351f0: 293b 0a0a 696e 7420 5835 3039 5f70 6f6c  );..int X509_pol
0035200: 6963 795f 6c65 7665 6c5f 6e6f 6465 5f63  icy_level_node_c
0035210: 6f75 6e74 2858 3530 395f 504f 4c49 4359  ount(X509_POLICY
0035220: 5f4c 4556 454c 202a 6c65 7665 6c29 3b0a  _LEVEL *level);.
0035230: 0a58 3530 395f 504f 4c49 4359 5f4e 4f44  .X509_POLICY_NOD
0035240: 4520 2a58 3530 395f 706f 6c69 6379 5f6c  E *X509_policy_l
0035250: 6576 656c 5f67 6574 305f 6e6f 6465 2858  evel_get0_node(X
0035260: 3530 395f 504f 4c49 4359 5f4c 4556 454c  509_POLICY_LEVEL
0035270: 202a 6c65 7665 6c2c 2069 6e74 2069 293b   *level, int i);
0035280: 0a0a 636f 6e73 7420 4153 4e31 5f4f 424a  ..const ASN1_OBJ
0035290: 4543 5420 2a58 3530 395f 706f 6c69 6379  ECT *X509_policy
00352a0: 5f6e 6f64 655f 6765 7430 5f70 6f6c 6963  _node_get0_polic
00352b0: 7928 636f 6e73 7420 5835 3039 5f50 4f4c  y(const X509_POL
00352c0: 4943 595f 4e4f 4445 202a 6e6f 6465 293b  ICY_NODE *node);
00352d0: 0a0a 7374 7275 6374 2073 7461 636b 5f73  ..struct stack_s
00352e0: 745f 504f 4c49 4359 5155 414c 494e 464f  t_POLICYQUALINFO
00352f0: 202a 0a20 5835 3039 5f70 6f6c 6963 795f   *. X509_policy_
0035300: 6e6f 6465 5f67 6574 305f 7175 616c 6966  node_get0_qualif
0035310: 6965 7273 2863 6f6e 7374 2058 3530 395f  iers(const X509_
0035320: 504f 4c49 4359 5f4e 4f44 4520 2a6e 6f64  POLICY_NODE *nod
0035330: 6529 3b0a 636f 6e73 7420 5835 3039 5f50  e);.const X509_P
0035340: 4f4c 4943 595f 4e4f 4445 202a 0a20 5835  OLICY_NODE *. X5
0035350: 3039 5f70 6f6c 6963 795f 6e6f 6465 5f67  09_policy_node_g
0035360: 6574 305f 7061 7265 6e74 2863 6f6e 7374  et0_parent(const
0035370: 2058 3530 395f 504f 4c49 4359 5f4e 4f44   X509_POLICY_NOD
0035380: 4520 2a6e 6f64 6529 3b0a 2320 3630 3120  E *node);.# 601 
0035390: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
00353a0: 656e 7373 6c2f 7835 3039 2e68 2220 3220  enssl/x509.h" 2 
00353b0: 3320 340a 2320 3120 222f 7573 722f 696e  3 4.# 1 "/usr/in
00353c0: 636c 7564 652f 6f70 656e 7373 6c2f 706b  clude/openssl/pk
00353d0: 6373 372e 6822 2031 2033 2034 0a23 2036  cs7.h" 1 3 4.# 6
00353e0: 3420 222f 7573 722f 696e 636c 7564 652f  4 "/usr/include/
00353f0: 6f70 656e 7373 6c2f 706b 6373 372e 6822  openssl/pkcs7.h"
0035400: 2033 2034 0a23 2031 2022 2f75 7372 2f69   3 4.# 1 "/usr/i
0035410: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f65  nclude/openssl/e
0035420: 5f6f 7332 2e68 2220 3120 3320 340a 2320  _os2.h" 1 3 4.# 
0035430: 3536 2022 2f75 7372 2f69 6e63 6c75 6465  56 "/usr/include
0035440: 2f6f 7065 6e73 736c 2f65 5f6f 7332 2e68  /openssl/e_os2.h
0035450: 2220 3320 340a 2320 3120 222f 7573 722f  " 3 4.# 1 "/usr/
0035460: 696e 636c 7564 652f 6f70 656e 7373 6c2f  include/openssl/
0035470: 6f70 656e 7373 6c63 6f6e 662e 6822 2031  opensslconf.h" 1
0035480: 2033 2034 0a23 2033 3420 222f 7573 722f   3 4.# 34 "/usr/
0035490: 696e 636c 7564 652f 6f70 656e 7373 6c2f  include/openssl/
00354a0: 6f70 656e 7373 6c63 6f6e 662e 6822 2033  opensslconf.h" 3
00354b0: 2034 0a23 2031 2022 2f75 7372 2f69 6e63   4.# 1 "/usr/inc
00354c0: 6c75 6465 2f6f 7065 6e73 736c 2f6f 7065  lude/openssl/ope
00354d0: 6e73 736c 636f 6e66 2d78 3836 5f36 342e  nsslconf-x86_64.
00354e0: 6822 2031 2033 2034 0a23 2033 3520 222f  h" 1 3 4.# 35 "/
00354f0: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
0035500: 7373 6c2f 6f70 656e 7373 6c63 6f6e 662e  ssl/opensslconf.
0035510: 6822 2032 2033 2034 0a23 2035 3720 222f  h" 2 3 4.# 57 "/
0035520: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
0035530: 7373 6c2f 655f 6f73 322e 6822 2032 2033  ssl/e_os2.h" 2 3
0035540: 2034 0a23 2036 3520 222f 7573 722f 696e   4.# 65 "/usr/in
0035550: 636c 7564 652f 6f70 656e 7373 6c2f 706b  clude/openssl/pk
0035560: 6373 372e 6822 2032 2033 2034 0a23 2038  cs7.h" 2 3 4.# 8
0035570: 3620 222f 7573 722f 696e 636c 7564 652f  6 "/usr/include/
0035580: 6f70 656e 7373 6c2f 706b 6373 372e 6822  openssl/pkcs7.h"
0035590: 2033 2034 0a74 7970 6564 6566 2073 7472   3 4.typedef str
00355a0: 7563 7420 706b 6373 375f 6973 7375 6572  uct pkcs7_issuer
00355b0: 5f61 6e64 5f73 6572 6961 6c5f 7374 0a20  _and_serial_st. 
00355c0: 7b0a 2058 3530 395f 4e41 4d45 202a 6973  {. X509_NAME *is
00355d0: 7375 6572 3b0a 2041 534e 315f 494e 5445  suer;. ASN1_INTE
00355e0: 4745 5220 2a73 6572 6961 6c3b 0a20 7d20  GER *serial;. } 
00355f0: 504b 4353 375f 4953 5355 4552 5f41 4e44  PKCS7_ISSUER_AND
0035600: 5f53 4552 4941 4c3b 0a0a 7479 7065 6465  _SERIAL;..typede
0035610: 6620 7374 7275 6374 2070 6b63 7337 5f73  f struct pkcs7_s
0035620: 6967 6e65 725f 696e 666f 5f73 740a 207b  igner_info_st. {
0035630: 0a20 4153 4e31 5f49 4e54 4547 4552 202a  . ASN1_INTEGER *
0035640: 7665 7273 696f 6e3b 0a20 504b 4353 375f  version;. PKCS7_
0035650: 4953 5355 4552 5f41 4e44 5f53 4552 4941  ISSUER_AND_SERIA
0035660: 4c20 2a69 7373 7565 725f 616e 645f 7365  L *issuer_and_se
0035670: 7269 616c 3b0a 2058 3530 395f 414c 474f  rial;. X509_ALGO
0035680: 5220 2a64 6967 6573 745f 616c 673b 0a20  R *digest_alg;. 
0035690: 7374 7275 6374 2073 7461 636b 5f73 745f  struct stack_st_
00356a0: 5835 3039 5f41 5454 5249 4255 5445 202a  X509_ATTRIBUTE *
00356b0: 6175 7468 5f61 7474 723b 0a20 5835 3039  auth_attr;. X509
00356c0: 5f41 4c47 4f52 202a 6469 6765 7374 5f65  _ALGOR *digest_e
00356d0: 6e63 5f61 6c67 3b0a 2041 534e 315f 4f43  nc_alg;. ASN1_OC
00356e0: 5445 545f 5354 5249 4e47 202a 656e 635f  TET_STRING *enc_
00356f0: 6469 6765 7374 3b0a 2073 7472 7563 7420  digest;. struct 
0035700: 7374 6163 6b5f 7374 5f58 3530 395f 4154  stack_st_X509_AT
0035710: 5452 4942 5554 4520 2a75 6e61 7574 685f  TRIBUTE *unauth_
0035720: 6174 7472 3b0a 0a0a 2045 5650 5f50 4b45  attr;... EVP_PKE
0035730: 5920 2a70 6b65 793b 0a20 7d20 504b 4353  Y *pkey;. } PKCS
0035740: 375f 5349 474e 4552 5f49 4e46 4f3b 0a0a  7_SIGNER_INFO;..
0035750: 7374 7275 6374 2073 7461 636b 5f73 745f  struct stack_st_
0035760: 504b 4353 375f 5349 474e 4552 5f49 4e46  PKCS7_SIGNER_INF
0035770: 4f20 7b20 5f53 5441 434b 2073 7461 636b  O { _STACK stack
0035780: 3b20 7d3b 0a0a 0a74 7970 6564 6566 2073  ; };...typedef s
0035790: 7472 7563 7420 706b 6373 375f 7265 6369  truct pkcs7_reci
00357a0: 705f 696e 666f 5f73 740a 207b 0a20 4153  p_info_st. {. AS
00357b0: 4e31 5f49 4e54 4547 4552 202a 7665 7273  N1_INTEGER *vers
00357c0: 696f 6e3b 0a20 504b 4353 375f 4953 5355  ion;. PKCS7_ISSU
00357d0: 4552 5f41 4e44 5f53 4552 4941 4c20 2a69  ER_AND_SERIAL *i
00357e0: 7373 7565 725f 616e 645f 7365 7269 616c  ssuer_and_serial
00357f0: 3b0a 2058 3530 395f 414c 474f 5220 2a6b  ;. X509_ALGOR *k
0035800: 6579 5f65 6e63 5f61 6c67 6f72 3b0a 2041  ey_enc_algor;. A
0035810: 534e 315f 4f43 5445 545f 5354 5249 4e47  SN1_OCTET_STRING
0035820: 202a 656e 635f 6b65 793b 0a20 5835 3039   *enc_key;. X509
0035830: 202a 6365 7274 3b0a 207d 2050 4b43 5337   *cert;. } PKCS7
0035840: 5f52 4543 4950 5f49 4e46 4f3b 0a0a 7374  _RECIP_INFO;..st
0035850: 7275 6374 2073 7461 636b 5f73 745f 504b  ruct stack_st_PK
0035860: 4353 375f 5245 4349 505f 494e 464f 207b  CS7_RECIP_INFO {
0035870: 205f 5354 4143 4b20 7374 6163 6b3b 207d   _STACK stack; }
0035880: 3b0a 0a0a 7479 7065 6465 6620 7374 7275  ;...typedef stru
0035890: 6374 2070 6b63 7337 5f73 6967 6e65 645f  ct pkcs7_signed_
00358a0: 7374 0a20 7b0a 2041 534e 315f 494e 5445  st. {. ASN1_INTE
00358b0: 4745 5220 2a76 6572 7369 6f6e 3b0a 2073  GER *version;. s
00358c0: 7472 7563 7420 7374 6163 6b5f 7374 5f58  truct stack_st_X
00358d0: 3530 395f 414c 474f 5220 2a6d 645f 616c  509_ALGOR *md_al
00358e0: 6773 3b0a 2073 7472 7563 7420 7374 6163  gs;. struct stac
00358f0: 6b5f 7374 5f58 3530 3920 2a63 6572 743b  k_st_X509 *cert;
0035900: 0a20 7374 7275 6374 2073 7461 636b 5f73  . struct stack_s
0035910: 745f 5835 3039 5f43 524c 202a 6372 6c3b  t_X509_CRL *crl;
0035920: 0a20 7374 7275 6374 2073 7461 636b 5f73  . struct stack_s
0035930: 745f 504b 4353 375f 5349 474e 4552 5f49  t_PKCS7_SIGNER_I
0035940: 4e46 4f20 2a73 6967 6e65 725f 696e 666f  NFO *signer_info
0035950: 3b0a 0a20 7374 7275 6374 2070 6b63 7337  ;.. struct pkcs7
0035960: 5f73 7420 2a63 6f6e 7465 6e74 733b 0a20  _st *contents;. 
0035970: 7d20 504b 4353 375f 5349 474e 4544 3b0a  } PKCS7_SIGNED;.
0035980: 0a0a 0a74 7970 6564 6566 2073 7472 7563  ...typedef struc
0035990: 7420 706b 6373 375f 656e 635f 636f 6e74  t pkcs7_enc_cont
00359a0: 656e 745f 7374 0a20 7b0a 2041 534e 315f  ent_st. {. ASN1_
00359b0: 4f42 4a45 4354 202a 636f 6e74 656e 745f  OBJECT *content_
00359c0: 7479 7065 3b0a 2058 3530 395f 414c 474f  type;. X509_ALGO
00359d0: 5220 2a61 6c67 6f72 6974 686d 3b0a 2041  R *algorithm;. A
00359e0: 534e 315f 4f43 5445 545f 5354 5249 4e47  SN1_OCTET_STRING
00359f0: 202a 656e 635f 6461 7461 3b0a 2063 6f6e   *enc_data;. con
0035a00: 7374 2045 5650 5f43 4950 4845 5220 2a63  st EVP_CIPHER *c
0035a10: 6970 6865 723b 0a20 7d20 504b 4353 375f  ipher;. } PKCS7_
0035a20: 454e 435f 434f 4e54 454e 543b 0a0a 7479  ENC_CONTENT;..ty
0035a30: 7065 6465 6620 7374 7275 6374 2070 6b63  pedef struct pkc
0035a40: 7337 5f65 6e76 656c 6f70 6564 5f73 740a  s7_enveloped_st.
0035a50: 207b 0a20 4153 4e31 5f49 4e54 4547 4552   {. ASN1_INTEGER
0035a60: 202a 7665 7273 696f 6e3b 0a20 7374 7275   *version;. stru
0035a70: 6374 2073 7461 636b 5f73 745f 504b 4353  ct stack_st_PKCS
0035a80: 375f 5245 4349 505f 494e 464f 202a 7265  7_RECIP_INFO *re
0035a90: 6369 7069 656e 7469 6e66 6f3b 0a20 504b  cipientinfo;. PK
0035aa0: 4353 375f 454e 435f 434f 4e54 454e 5420  CS7_ENC_CONTENT 
0035ab0: 2a65 6e63 5f64 6174 613b 0a20 7d20 504b  *enc_data;. } PK
0035ac0: 4353 375f 454e 5645 4c4f 5045 3b0a 0a74  CS7_ENVELOPE;..t
0035ad0: 7970 6564 6566 2073 7472 7563 7420 706b  ypedef struct pk
0035ae0: 6373 375f 7369 676e 6564 616e 6465 6e76  cs7_signedandenv
0035af0: 656c 6f70 6564 5f73 740a 207b 0a20 4153  eloped_st. {. AS
0035b00: 4e31 5f49 4e54 4547 4552 202a 7665 7273  N1_INTEGER *vers
0035b10: 696f 6e3b 0a20 7374 7275 6374 2073 7461  ion;. struct sta
0035b20: 636b 5f73 745f 5835 3039 5f41 4c47 4f52  ck_st_X509_ALGOR
0035b30: 202a 6d64 5f61 6c67 733b 0a20 7374 7275   *md_algs;. stru
0035b40: 6374 2073 7461 636b 5f73 745f 5835 3039  ct stack_st_X509
0035b50: 202a 6365 7274 3b0a 2073 7472 7563 7420   *cert;. struct 
0035b60: 7374 6163 6b5f 7374 5f58 3530 395f 4352  stack_st_X509_CR
0035b70: 4c20 2a63 726c 3b0a 2073 7472 7563 7420  L *crl;. struct 
0035b80: 7374 6163 6b5f 7374 5f50 4b43 5337 5f53  stack_st_PKCS7_S
0035b90: 4947 4e45 525f 494e 464f 202a 7369 676e  IGNER_INFO *sign
0035ba0: 6572 5f69 6e66 6f3b 0a0a 2050 4b43 5337  er_info;.. PKCS7
0035bb0: 5f45 4e43 5f43 4f4e 5445 4e54 202a 656e  _ENC_CONTENT *en
0035bc0: 635f 6461 7461 3b0a 2073 7472 7563 7420  c_data;. struct 
0035bd0: 7374 6163 6b5f 7374 5f50 4b43 5337 5f52  stack_st_PKCS7_R
0035be0: 4543 4950 5f49 4e46 4f20 2a72 6563 6970  ECIP_INFO *recip
0035bf0: 6965 6e74 696e 666f 3b0a 207d 2050 4b43  ientinfo;. } PKC
0035c00: 5337 5f53 4947 4e5f 454e 5645 4c4f 5045  S7_SIGN_ENVELOPE
0035c10: 3b0a 0a74 7970 6564 6566 2073 7472 7563  ;..typedef struc
0035c20: 7420 706b 6373 375f 6469 6765 7374 5f73  t pkcs7_digest_s
0035c30: 740a 207b 0a20 4153 4e31 5f49 4e54 4547  t. {. ASN1_INTEG
0035c40: 4552 202a 7665 7273 696f 6e3b 0a20 5835  ER *version;. X5
0035c50: 3039 5f41 4c47 4f52 202a 6d64 3b0a 2073  09_ALGOR *md;. s
0035c60: 7472 7563 7420 706b 6373 375f 7374 202a  truct pkcs7_st *
0035c70: 636f 6e74 656e 7473 3b0a 2041 534e 315f  contents;. ASN1_
0035c80: 4f43 5445 545f 5354 5249 4e47 202a 6469  OCTET_STRING *di
0035c90: 6765 7374 3b0a 207d 2050 4b43 5337 5f44  gest;. } PKCS7_D
0035ca0: 4947 4553 543b 0a0a 7479 7065 6465 6620  IGEST;..typedef 
0035cb0: 7374 7275 6374 2070 6b63 7337 5f65 6e63  struct pkcs7_enc
0035cc0: 7279 7074 6564 5f73 740a 207b 0a20 4153  rypted_st. {. AS
0035cd0: 4e31 5f49 4e54 4547 4552 202a 7665 7273  N1_INTEGER *vers
0035ce0: 696f 6e3b 0a20 504b 4353 375f 454e 435f  ion;. PKCS7_ENC_
0035cf0: 434f 4e54 454e 5420 2a65 6e63 5f64 6174  CONTENT *enc_dat
0035d00: 613b 0a20 7d20 504b 4353 375f 454e 4352  a;. } PKCS7_ENCR
0035d10: 5950 543b 0a0a 7479 7065 6465 6620 7374  YPT;..typedef st
0035d20: 7275 6374 2070 6b63 7337 5f73 740a 207b  ruct pkcs7_st. {
0035d30: 0a0a 0a20 756e 7369 676e 6564 2063 6861  ... unsigned cha
0035d40: 7220 2a61 736e 313b 0a20 6c6f 6e67 206c  r *asn1;. long l
0035d50: 656e 6774 683b 0a0a 0a0a 0a20 696e 7420  ength;..... int 
0035d60: 7374 6174 653b 0a0a 2069 6e74 2064 6574  state;.. int det
0035d70: 6163 6865 643b 0a0a 2041 534e 315f 4f42  ached;.. ASN1_OB
0035d80: 4a45 4354 202a 7479 7065 3b0a 0a0a 0a20  JECT *type;.... 
0035d90: 756e 696f 6e20 7b0a 2020 6368 6172 202a  union {.  char *
0035da0: 7074 723b 0a0a 0a20 2041 534e 315f 4f43  ptr;...  ASN1_OC
0035db0: 5445 545f 5354 5249 4e47 202a 6461 7461  TET_STRING *data
0035dc0: 3b0a 0a0a 2020 504b 4353 375f 5349 474e  ;...  PKCS7_SIGN
0035dd0: 4544 202a 7369 676e 3b0a 0a0a 2020 504b  ED *sign;...  PK
0035de0: 4353 375f 454e 5645 4c4f 5045 202a 656e  CS7_ENVELOPE *en
0035df0: 7665 6c6f 7065 643b 0a0a 0a20 2050 4b43  veloped;...  PKC
0035e00: 5337 5f53 4947 4e5f 454e 5645 4c4f 5045  S7_SIGN_ENVELOPE
0035e10: 202a 7369 676e 6564 5f61 6e64 5f65 6e76   *signed_and_env
0035e20: 656c 6f70 6564 3b0a 0a0a 2020 504b 4353  eloped;...  PKCS
0035e30: 375f 4449 4745 5354 202a 6469 6765 7374  7_DIGEST *digest
0035e40: 3b0a 0a0a 2020 504b 4353 375f 454e 4352  ;...  PKCS7_ENCR
0035e50: 5950 5420 2a65 6e63 7279 7074 6564 3b0a  YPT *encrypted;.
0035e60: 0a0a 2020 4153 4e31 5f54 5950 4520 2a6f  ..  ASN1_TYPE *o
0035e70: 7468 6572 3b0a 2020 7d20 643b 0a20 7d20  ther;.  } d;. } 
0035e80: 504b 4353 373b 0a0a 7374 7275 6374 2073  PKCS7;..struct s
0035e90: 7461 636b 5f73 745f 504b 4353 3720 7b20  tack_st_PKCS7 { 
0035ea0: 5f53 5441 434b 2073 7461 636b 3b20 7d3b  _STACK stack; };
0035eb0: 0a0a 0a23 2032 3739 2022 2f75 7372 2f69  ...# 279 "/usr/i
0035ec0: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f70  nclude/openssl/p
0035ed0: 6b63 7337 2e68 2220 3320 340a 504b 4353  kcs7.h" 3 4.PKCS
0035ee0: 375f 4953 5355 4552 5f41 4e44 5f53 4552  7_ISSUER_AND_SER
0035ef0: 4941 4c20 2a50 4b43 5337 5f49 5353 5545  IAL *PKCS7_ISSUE
0035f00: 525f 414e 445f 5345 5249 414c 5f6e 6577  R_AND_SERIAL_new
0035f10: 2876 6f69 6429 3b20 766f 6964 2050 4b43  (void); void PKC
0035f20: 5337 5f49 5353 5545 525f 414e 445f 5345  S7_ISSUER_AND_SE
0035f30: 5249 414c 5f66 7265 6528 504b 4353 375f  RIAL_free(PKCS7_
0035f40: 4953 5355 4552 5f41 4e44 5f53 4552 4941  ISSUER_AND_SERIA
0035f50: 4c20 2a61 293b 2050 4b43 5337 5f49 5353  L *a); PKCS7_ISS
0035f60: 5545 525f 414e 445f 5345 5249 414c 202a  UER_AND_SERIAL *
0035f70: 6432 695f 504b 4353 375f 4953 5355 4552  d2i_PKCS7_ISSUER
0035f80: 5f41 4e44 5f53 4552 4941 4c28 504b 4353  _AND_SERIAL(PKCS
0035f90: 375f 4953 5355 4552 5f41 4e44 5f53 4552  7_ISSUER_AND_SER
0035fa0: 4941 4c20 2a2a 612c 2063 6f6e 7374 2075  IAL **a, const u
0035fb0: 6e73 6967 6e65 6420 6368 6172 202a 2a69  nsigned char **i
0035fc0: 6e2c 206c 6f6e 6720 6c65 6e29 3b20 696e  n, long len); in
0035fd0: 7420 6932 645f 504b 4353 375f 4953 5355  t i2d_PKCS7_ISSU
0035fe0: 4552 5f41 4e44 5f53 4552 4941 4c28 504b  ER_AND_SERIAL(PK
0035ff0: 4353 375f 4953 5355 4552 5f41 4e44 5f53  CS7_ISSUER_AND_S
0036000: 4552 4941 4c20 2a61 2c20 756e 7369 676e  ERIAL *a, unsign
0036010: 6564 2063 6861 7220 2a2a 6f75 7429 3b20  ed char **out); 
0036020: 6578 7465 726e 2063 6f6e 7374 2041 534e  extern const ASN
0036030: 315f 4954 454d 2050 4b43 5337 5f49 5353  1_ITEM PKCS7_ISS
0036040: 5545 525f 414e 445f 5345 5249 414c 5f69  UER_AND_SERIAL_i
0036050: 743b 0a0a 696e 7420 504b 4353 375f 4953  t;..int PKCS7_IS
0036060: 5355 4552 5f41 4e44 5f53 4552 4941 4c5f  SUER_AND_SERIAL_
0036070: 6469 6765 7374 2850 4b43 5337 5f49 5353  digest(PKCS7_ISS
0036080: 5545 525f 414e 445f 5345 5249 414c 202a  UER_AND_SERIAL *
0036090: 6461 7461 2c63 6f6e 7374 2045 5650 5f4d  data,const EVP_M
00360a0: 4420 2a74 7970 652c 0a20 756e 7369 676e  D *type,. unsign
00360b0: 6564 2063 6861 7220 2a6d 642c 756e 7369  ed char *md,unsi
00360c0: 676e 6564 2069 6e74 202a 6c65 6e29 3b0a  gned int *len);.
00360d0: 0a50 4b43 5337 202a 6432 695f 504b 4353  .PKCS7 *d2i_PKCS
00360e0: 375f 6670 2846 494c 4520 2a66 702c 504b  7_fp(FILE *fp,PK
00360f0: 4353 3720 2a2a 7037 293b 0a69 6e74 2069  CS7 **p7);.int i
0036100: 3264 5f50 4b43 5337 5f66 7028 4649 4c45  2d_PKCS7_fp(FILE
0036110: 202a 6670 2c50 4b43 5337 202a 7037 293b   *fp,PKCS7 *p7);
0036120: 0a0a 504b 4353 3720 2a50 4b43 5337 5f64  ..PKCS7 *PKCS7_d
0036130: 7570 2850 4b43 5337 202a 7037 293b 0a50  up(PKCS7 *p7);.P
0036140: 4b43 5337 202a 6432 695f 504b 4353 375f  KCS7 *d2i_PKCS7_
0036150: 6269 6f28 4249 4f20 2a62 702c 504b 4353  bio(BIO *bp,PKCS
0036160: 3720 2a2a 7037 293b 0a69 6e74 2069 3264  7 **p7);.int i2d
0036170: 5f50 4b43 5337 5f62 696f 2842 494f 202a  _PKCS7_bio(BIO *
0036180: 6270 2c50 4b43 5337 202a 7037 293b 0a69  bp,PKCS7 *p7);.i
0036190: 6e74 2069 3264 5f50 4b43 5337 5f62 696f  nt i2d_PKCS7_bio
00361a0: 5f73 7472 6561 6d28 4249 4f20 2a6f 7574  _stream(BIO *out
00361b0: 2c20 504b 4353 3720 2a70 372c 2042 494f  , PKCS7 *p7, BIO
00361c0: 202a 696e 2c20 696e 7420 666c 6167 7329   *in, int flags)
00361d0: 3b0a 696e 7420 5045 4d5f 7772 6974 655f  ;.int PEM_write_
00361e0: 6269 6f5f 504b 4353 375f 7374 7265 616d  bio_PKCS7_stream
00361f0: 2842 494f 202a 6f75 742c 2050 4b43 5337  (BIO *out, PKCS7
0036200: 202a 7037 2c20 4249 4f20 2a69 6e2c 2069   *p7, BIO *in, i
0036210: 6e74 2066 6c61 6773 293b 0a0a 504b 4353  nt flags);..PKCS
0036220: 375f 5349 474e 4552 5f49 4e46 4f20 2a50  7_SIGNER_INFO *P
0036230: 4b43 5337 5f53 4947 4e45 525f 494e 464f  KCS7_SIGNER_INFO
0036240: 5f6e 6577 2876 6f69 6429 3b20 766f 6964  _new(void); void
0036250: 2050 4b43 5337 5f53 4947 4e45 525f 494e   PKCS7_SIGNER_IN
0036260: 464f 5f66 7265 6528 504b 4353 375f 5349  FO_free(PKCS7_SI
0036270: 474e 4552 5f49 4e46 4f20 2a61 293b 2050  GNER_INFO *a); P
0036280: 4b43 5337 5f53 4947 4e45 525f 494e 464f  KCS7_SIGNER_INFO
0036290: 202a 6432 695f 504b 4353 375f 5349 474e   *d2i_PKCS7_SIGN
00362a0: 4552 5f49 4e46 4f28 504b 4353 375f 5349  ER_INFO(PKCS7_SI
00362b0: 474e 4552 5f49 4e46 4f20 2a2a 612c 2063  GNER_INFO **a, c
00362c0: 6f6e 7374 2075 6e73 6967 6e65 6420 6368  onst unsigned ch
00362d0: 6172 202a 2a69 6e2c 206c 6f6e 6720 6c65  ar **in, long le
00362e0: 6e29 3b20 696e 7420 6932 645f 504b 4353  n); int i2d_PKCS
00362f0: 375f 5349 474e 4552 5f49 4e46 4f28 504b  7_SIGNER_INFO(PK
0036300: 4353 375f 5349 474e 4552 5f49 4e46 4f20  CS7_SIGNER_INFO 
0036310: 2a61 2c20 756e 7369 676e 6564 2063 6861  *a, unsigned cha
0036320: 7220 2a2a 6f75 7429 3b20 6578 7465 726e  r **out); extern
0036330: 2063 6f6e 7374 2041 534e 315f 4954 454d   const ASN1_ITEM
0036340: 2050 4b43 5337 5f53 4947 4e45 525f 494e   PKCS7_SIGNER_IN
0036350: 464f 5f69 743b 0a50 4b43 5337 5f52 4543  FO_it;.PKCS7_REC
0036360: 4950 5f49 4e46 4f20 2a50 4b43 5337 5f52  IP_INFO *PKCS7_R
0036370: 4543 4950 5f49 4e46 4f5f 6e65 7728 766f  ECIP_INFO_new(vo
0036380: 6964 293b 2076 6f69 6420 504b 4353 375f  id); void PKCS7_
0036390: 5245 4349 505f 494e 464f 5f66 7265 6528  RECIP_INFO_free(
00363a0: 504b 4353 375f 5245 4349 505f 494e 464f  PKCS7_RECIP_INFO
00363b0: 202a 6129 3b20 504b 4353 375f 5245 4349   *a); PKCS7_RECI
00363c0: 505f 494e 464f 202a 6432 695f 504b 4353  P_INFO *d2i_PKCS
00363d0: 375f 5245 4349 505f 494e 464f 2850 4b43  7_RECIP_INFO(PKC
00363e0: 5337 5f52 4543 4950 5f49 4e46 4f20 2a2a  S7_RECIP_INFO **
00363f0: 612c 2063 6f6e 7374 2075 6e73 6967 6e65  a, const unsigne
0036400: 6420 6368 6172 202a 2a69 6e2c 206c 6f6e  d char **in, lon
0036410: 6720 6c65 6e29 3b20 696e 7420 6932 645f  g len); int i2d_
0036420: 504b 4353 375f 5245 4349 505f 494e 464f  PKCS7_RECIP_INFO
0036430: 2850 4b43 5337 5f52 4543 4950 5f49 4e46  (PKCS7_RECIP_INF
0036440: 4f20 2a61 2c20 756e 7369 676e 6564 2063  O *a, unsigned c
0036450: 6861 7220 2a2a 6f75 7429 3b20 6578 7465  har **out); exte
0036460: 726e 2063 6f6e 7374 2041 534e 315f 4954  rn const ASN1_IT
0036470: 454d 2050 4b43 5337 5f52 4543 4950 5f49  EM PKCS7_RECIP_I
0036480: 4e46 4f5f 6974 3b0a 504b 4353 375f 5349  NFO_it;.PKCS7_SI
0036490: 474e 4544 202a 504b 4353 375f 5349 474e  GNED *PKCS7_SIGN
00364a0: 4544 5f6e 6577 2876 6f69 6429 3b20 766f  ED_new(void); vo
00364b0: 6964 2050 4b43 5337 5f53 4947 4e45 445f  id PKCS7_SIGNED_
00364c0: 6672 6565 2850 4b43 5337 5f53 4947 4e45  free(PKCS7_SIGNE
00364d0: 4420 2a61 293b 2050 4b43 5337 5f53 4947  D *a); PKCS7_SIG
00364e0: 4e45 4420 2a64 3269 5f50 4b43 5337 5f53  NED *d2i_PKCS7_S
00364f0: 4947 4e45 4428 504b 4353 375f 5349 474e  IGNED(PKCS7_SIGN
0036500: 4544 202a 2a61 2c20 636f 6e73 7420 756e  ED **a, const un
0036510: 7369 676e 6564 2063 6861 7220 2a2a 696e  signed char **in
0036520: 2c20 6c6f 6e67 206c 656e 293b 2069 6e74  , long len); int
0036530: 2069 3264 5f50 4b43 5337 5f53 4947 4e45   i2d_PKCS7_SIGNE
0036540: 4428 504b 4353 375f 5349 474e 4544 202a  D(PKCS7_SIGNED *
0036550: 612c 2075 6e73 6967 6e65 6420 6368 6172  a, unsigned char
0036560: 202a 2a6f 7574 293b 2065 7874 6572 6e20   **out); extern 
0036570: 636f 6e73 7420 4153 4e31 5f49 5445 4d20  const ASN1_ITEM 
0036580: 504b 4353 375f 5349 474e 4544 5f69 743b  PKCS7_SIGNED_it;
0036590: 0a50 4b43 5337 5f45 4e43 5f43 4f4e 5445  .PKCS7_ENC_CONTE
00365a0: 4e54 202a 504b 4353 375f 454e 435f 434f  NT *PKCS7_ENC_CO
00365b0: 4e54 454e 545f 6e65 7728 766f 6964 293b  NTENT_new(void);
00365c0: 2076 6f69 6420 504b 4353 375f 454e 435f   void PKCS7_ENC_
00365d0: 434f 4e54 454e 545f 6672 6565 2850 4b43  CONTENT_free(PKC
00365e0: 5337 5f45 4e43 5f43 4f4e 5445 4e54 202a  S7_ENC_CONTENT *
00365f0: 6129 3b20 504b 4353 375f 454e 435f 434f  a); PKCS7_ENC_CO
0036600: 4e54 454e 5420 2a64 3269 5f50 4b43 5337  NTENT *d2i_PKCS7
0036610: 5f45 4e43 5f43 4f4e 5445 4e54 2850 4b43  _ENC_CONTENT(PKC
0036620: 5337 5f45 4e43 5f43 4f4e 5445 4e54 202a  S7_ENC_CONTENT *
0036630: 2a61 2c20 636f 6e73 7420 756e 7369 676e  *a, const unsign
0036640: 6564 2063 6861 7220 2a2a 696e 2c20 6c6f  ed char **in, lo
0036650: 6e67 206c 656e 293b 2069 6e74 2069 3264  ng len); int i2d
0036660: 5f50 4b43 5337 5f45 4e43 5f43 4f4e 5445  _PKCS7_ENC_CONTE
0036670: 4e54 2850 4b43 5337 5f45 4e43 5f43 4f4e  NT(PKCS7_ENC_CON
0036680: 5445 4e54 202a 612c 2075 6e73 6967 6e65  TENT *a, unsigne
0036690: 6420 6368 6172 202a 2a6f 7574 293b 2065  d char **out); e
00366a0: 7874 6572 6e20 636f 6e73 7420 4153 4e31  xtern const ASN1
00366b0: 5f49 5445 4d20 504b 4353 375f 454e 435f  _ITEM PKCS7_ENC_
00366c0: 434f 4e54 454e 545f 6974 3b0a 504b 4353  CONTENT_it;.PKCS
00366d0: 375f 454e 5645 4c4f 5045 202a 504b 4353  7_ENVELOPE *PKCS
00366e0: 375f 454e 5645 4c4f 5045 5f6e 6577 2876  7_ENVELOPE_new(v
00366f0: 6f69 6429 3b20 766f 6964 2050 4b43 5337  oid); void PKCS7
0036700: 5f45 4e56 454c 4f50 455f 6672 6565 2850  _ENVELOPE_free(P
0036710: 4b43 5337 5f45 4e56 454c 4f50 4520 2a61  KCS7_ENVELOPE *a
0036720: 293b 2050 4b43 5337 5f45 4e56 454c 4f50  ); PKCS7_ENVELOP
0036730: 4520 2a64 3269 5f50 4b43 5337 5f45 4e56  E *d2i_PKCS7_ENV
0036740: 454c 4f50 4528 504b 4353 375f 454e 5645  ELOPE(PKCS7_ENVE
0036750: 4c4f 5045 202a 2a61 2c20 636f 6e73 7420  LOPE **a, const 
0036760: 756e 7369 676e 6564 2063 6861 7220 2a2a  unsigned char **
0036770: 696e 2c20 6c6f 6e67 206c 656e 293b 2069  in, long len); i
0036780: 6e74 2069 3264 5f50 4b43 5337 5f45 4e56  nt i2d_PKCS7_ENV
0036790: 454c 4f50 4528 504b 4353 375f 454e 5645  ELOPE(PKCS7_ENVE
00367a0: 4c4f 5045 202a 612c 2075 6e73 6967 6e65  LOPE *a, unsigne
00367b0: 6420 6368 6172 202a 2a6f 7574 293b 2065  d char **out); e
00367c0: 7874 6572 6e20 636f 6e73 7420 4153 4e31  xtern const ASN1
00367d0: 5f49 5445 4d20 504b 4353 375f 454e 5645  _ITEM PKCS7_ENVE
00367e0: 4c4f 5045 5f69 743b 0a50 4b43 5337 5f53  LOPE_it;.PKCS7_S
00367f0: 4947 4e5f 454e 5645 4c4f 5045 202a 504b  IGN_ENVELOPE *PK
0036800: 4353 375f 5349 474e 5f45 4e56 454c 4f50  CS7_SIGN_ENVELOP
0036810: 455f 6e65 7728 766f 6964 293b 2076 6f69  E_new(void); voi
0036820: 6420 504b 4353 375f 5349 474e 5f45 4e56  d PKCS7_SIGN_ENV
0036830: 454c 4f50 455f 6672 6565 2850 4b43 5337  ELOPE_free(PKCS7
0036840: 5f53 4947 4e5f 454e 5645 4c4f 5045 202a  _SIGN_ENVELOPE *
0036850: 6129 3b20 504b 4353 375f 5349 474e 5f45  a); PKCS7_SIGN_E
0036860: 4e56 454c 4f50 4520 2a64 3269 5f50 4b43  NVELOPE *d2i_PKC
0036870: 5337 5f53 4947 4e5f 454e 5645 4c4f 5045  S7_SIGN_ENVELOPE
0036880: 2850 4b43 5337 5f53 4947 4e5f 454e 5645  (PKCS7_SIGN_ENVE
0036890: 4c4f 5045 202a 2a61 2c20 636f 6e73 7420  LOPE **a, const 
00368a0: 756e 7369 676e 6564 2063 6861 7220 2a2a  unsigned char **
00368b0: 696e 2c20 6c6f 6e67 206c 656e 293b 2069  in, long len); i
00368c0: 6e74 2069 3264 5f50 4b43 5337 5f53 4947  nt i2d_PKCS7_SIG
00368d0: 4e5f 454e 5645 4c4f 5045 2850 4b43 5337  N_ENVELOPE(PKCS7
00368e0: 5f53 4947 4e5f 454e 5645 4c4f 5045 202a  _SIGN_ENVELOPE *
00368f0: 612c 2075 6e73 6967 6e65 6420 6368 6172  a, unsigned char
0036900: 202a 2a6f 7574 293b 2065 7874 6572 6e20   **out); extern 
0036910: 636f 6e73 7420 4153 4e31 5f49 5445 4d20  const ASN1_ITEM 
0036920: 504b 4353 375f 5349 474e 5f45 4e56 454c  PKCS7_SIGN_ENVEL
0036930: 4f50 455f 6974 3b0a 504b 4353 375f 4449  OPE_it;.PKCS7_DI
0036940: 4745 5354 202a 504b 4353 375f 4449 4745  GEST *PKCS7_DIGE
0036950: 5354 5f6e 6577 2876 6f69 6429 3b20 766f  ST_new(void); vo
0036960: 6964 2050 4b43 5337 5f44 4947 4553 545f  id PKCS7_DIGEST_
0036970: 6672 6565 2850 4b43 5337 5f44 4947 4553  free(PKCS7_DIGES
0036980: 5420 2a61 293b 2050 4b43 5337 5f44 4947  T *a); PKCS7_DIG
0036990: 4553 5420 2a64 3269 5f50 4b43 5337 5f44  EST *d2i_PKCS7_D
00369a0: 4947 4553 5428 504b 4353 375f 4449 4745  IGEST(PKCS7_DIGE
00369b0: 5354 202a 2a61 2c20 636f 6e73 7420 756e  ST **a, const un
00369c0: 7369 676e 6564 2063 6861 7220 2a2a 696e  signed char **in
00369d0: 2c20 6c6f 6e67 206c 656e 293b 2069 6e74  , long len); int
00369e0: 2069 3264 5f50 4b43 5337 5f44 4947 4553   i2d_PKCS7_DIGES
00369f0: 5428 504b 4353 375f 4449 4745 5354 202a  T(PKCS7_DIGEST *
0036a00: 612c 2075 6e73 6967 6e65 6420 6368 6172  a, unsigned char
0036a10: 202a 2a6f 7574 293b 2065 7874 6572 6e20   **out); extern 
0036a20: 636f 6e73 7420 4153 4e31 5f49 5445 4d20  const ASN1_ITEM 
0036a30: 504b 4353 375f 4449 4745 5354 5f69 743b  PKCS7_DIGEST_it;
0036a40: 0a50 4b43 5337 5f45 4e43 5259 5054 202a  .PKCS7_ENCRYPT *
0036a50: 504b 4353 375f 454e 4352 5950 545f 6e65  PKCS7_ENCRYPT_ne
0036a60: 7728 766f 6964 293b 2076 6f69 6420 504b  w(void); void PK
0036a70: 4353 375f 454e 4352 5950 545f 6672 6565  CS7_ENCRYPT_free
0036a80: 2850 4b43 5337 5f45 4e43 5259 5054 202a  (PKCS7_ENCRYPT *
0036a90: 6129 3b20 504b 4353 375f 454e 4352 5950  a); PKCS7_ENCRYP
0036aa0: 5420 2a64 3269 5f50 4b43 5337 5f45 4e43  T *d2i_PKCS7_ENC
0036ab0: 5259 5054 2850 4b43 5337 5f45 4e43 5259  RYPT(PKCS7_ENCRY
0036ac0: 5054 202a 2a61 2c20 636f 6e73 7420 756e  PT **a, const un
0036ad0: 7369 676e 6564 2063 6861 7220 2a2a 696e  signed char **in
0036ae0: 2c20 6c6f 6e67 206c 656e 293b 2069 6e74  , long len); int
0036af0: 2069 3264 5f50 4b43 5337 5f45 4e43 5259   i2d_PKCS7_ENCRY
0036b00: 5054 2850 4b43 5337 5f45 4e43 5259 5054  PT(PKCS7_ENCRYPT
0036b10: 202a 612c 2075 6e73 6967 6e65 6420 6368   *a, unsigned ch
0036b20: 6172 202a 2a6f 7574 293b 2065 7874 6572  ar **out); exter
0036b30: 6e20 636f 6e73 7420 4153 4e31 5f49 5445  n const ASN1_ITE
0036b40: 4d20 504b 4353 375f 454e 4352 5950 545f  M PKCS7_ENCRYPT_
0036b50: 6974 3b0a 504b 4353 3720 2a50 4b43 5337  it;.PKCS7 *PKCS7
0036b60: 5f6e 6577 2876 6f69 6429 3b20 766f 6964  _new(void); void
0036b70: 2050 4b43 5337 5f66 7265 6528 504b 4353   PKCS7_free(PKCS
0036b80: 3720 2a61 293b 2050 4b43 5337 202a 6432  7 *a); PKCS7 *d2
0036b90: 695f 504b 4353 3728 504b 4353 3720 2a2a  i_PKCS7(PKCS7 **
0036ba0: 612c 2063 6f6e 7374 2075 6e73 6967 6e65  a, const unsigne
0036bb0: 6420 6368 6172 202a 2a69 6e2c 206c 6f6e  d char **in, lon
0036bc0: 6720 6c65 6e29 3b20 696e 7420 6932 645f  g len); int i2d_
0036bd0: 504b 4353 3728 504b 4353 3720 2a61 2c20  PKCS7(PKCS7 *a, 
0036be0: 756e 7369 676e 6564 2063 6861 7220 2a2a  unsigned char **
0036bf0: 6f75 7429 3b20 6578 7465 726e 2063 6f6e  out); extern con
0036c00: 7374 2041 534e 315f 4954 454d 2050 4b43  st ASN1_ITEM PKC
0036c10: 5337 5f69 743b 0a0a 6578 7465 726e 2063  S7_it;..extern c
0036c20: 6f6e 7374 2041 534e 315f 4954 454d 2050  onst ASN1_ITEM P
0036c30: 4b43 5337 5f41 5454 525f 5349 474e 5f69  KCS7_ATTR_SIGN_i
0036c40: 743b 0a65 7874 6572 6e20 636f 6e73 7420  t;.extern const 
0036c50: 4153 4e31 5f49 5445 4d20 504b 4353 375f  ASN1_ITEM PKCS7_
0036c60: 4154 5452 5f56 4552 4946 595f 6974 3b0a  ATTR_VERIFY_it;.
0036c70: 0a69 6e74 2069 3264 5f50 4b43 5337 5f4e  .int i2d_PKCS7_N
0036c80: 4445 4628 504b 4353 3720 2a61 2c20 756e  DEF(PKCS7 *a, un
0036c90: 7369 676e 6564 2063 6861 7220 2a2a 6f75  signed char **ou
0036ca0: 7429 3b0a 696e 7420 504b 4353 375f 7072  t);.int PKCS7_pr
0036cb0: 696e 745f 6374 7828 4249 4f20 2a6f 7574  int_ctx(BIO *out
0036cc0: 2c20 504b 4353 3720 2a78 2c20 696e 7420  , PKCS7 *x, int 
0036cd0: 696e 6465 6e74 2c20 636f 6e73 7420 4153  indent, const AS
0036ce0: 4e31 5f50 4354 5820 2a70 6374 7829 3b0a  N1_PCTX *pctx);.
0036cf0: 0a6c 6f6e 6720 504b 4353 375f 6374 726c  .long PKCS7_ctrl
0036d00: 2850 4b43 5337 202a 7037 2c20 696e 7420  (PKCS7 *p7, int 
0036d10: 636d 642c 206c 6f6e 6720 6c61 7267 2c20  cmd, long larg, 
0036d20: 6368 6172 202a 7061 7267 293b 0a0a 696e  char *parg);..in
0036d30: 7420 504b 4353 375f 7365 745f 7479 7065  t PKCS7_set_type
0036d40: 2850 4b43 5337 202a 7037 2c20 696e 7420  (PKCS7 *p7, int 
0036d50: 7479 7065 293b 0a69 6e74 2050 4b43 5337  type);.int PKCS7
0036d60: 5f73 6574 305f 7479 7065 5f6f 7468 6572  _set0_type_other
0036d70: 2850 4b43 5337 202a 7037 2c20 696e 7420  (PKCS7 *p7, int 
0036d80: 7479 7065 2c20 4153 4e31 5f54 5950 4520  type, ASN1_TYPE 
0036d90: 2a6f 7468 6572 293b 0a69 6e74 2050 4b43  *other);.int PKC
0036da0: 5337 5f73 6574 5f63 6f6e 7465 6e74 2850  S7_set_content(P
0036db0: 4b43 5337 202a 7037 2c20 504b 4353 3720  KCS7 *p7, PKCS7 
0036dc0: 2a70 375f 6461 7461 293b 0a69 6e74 2050  *p7_data);.int P
0036dd0: 4b43 5337 5f53 4947 4e45 525f 494e 464f  KCS7_SIGNER_INFO
0036de0: 5f73 6574 2850 4b43 5337 5f53 4947 4e45  _set(PKCS7_SIGNE
0036df0: 525f 494e 464f 202a 7037 692c 2058 3530  R_INFO *p7i, X50
0036e00: 3920 2a78 3530 392c 2045 5650 5f50 4b45  9 *x509, EVP_PKE
0036e10: 5920 2a70 6b65 792c 0a20 636f 6e73 7420  Y *pkey,. const 
0036e20: 4556 505f 4d44 202a 6467 7374 293b 0a69  EVP_MD *dgst);.i
0036e30: 6e74 2050 4b43 5337 5f53 4947 4e45 525f  nt PKCS7_SIGNER_
0036e40: 494e 464f 5f73 6967 6e28 504b 4353 375f  INFO_sign(PKCS7_
0036e50: 5349 474e 4552 5f49 4e46 4f20 2a73 6929  SIGNER_INFO *si)
0036e60: 3b0a 696e 7420 504b 4353 375f 6164 645f  ;.int PKCS7_add_
0036e70: 7369 676e 6572 2850 4b43 5337 202a 7037  signer(PKCS7 *p7
0036e80: 2c20 504b 4353 375f 5349 474e 4552 5f49  , PKCS7_SIGNER_I
0036e90: 4e46 4f20 2a70 3769 293b 0a69 6e74 2050  NFO *p7i);.int P
0036ea0: 4b43 5337 5f61 6464 5f63 6572 7469 6669  KCS7_add_certifi
0036eb0: 6361 7465 2850 4b43 5337 202a 7037 2c20  cate(PKCS7 *p7, 
0036ec0: 5835 3039 202a 7835 3039 293b 0a69 6e74  X509 *x509);.int
0036ed0: 2050 4b43 5337 5f61 6464 5f63 726c 2850   PKCS7_add_crl(P
0036ee0: 4b43 5337 202a 7037 2c20 5835 3039 5f43  KCS7 *p7, X509_C
0036ef0: 524c 202a 7835 3039 293b 0a69 6e74 2050  RL *x509);.int P
0036f00: 4b43 5337 5f63 6f6e 7465 6e74 5f6e 6577  KCS7_content_new
0036f10: 2850 4b43 5337 202a 7037 2c20 696e 7420  (PKCS7 *p7, int 
0036f20: 6e69 6429 3b0a 696e 7420 504b 4353 375f  nid);.int PKCS7_
0036f30: 6461 7461 5665 7269 6679 2858 3530 395f  dataVerify(X509_
0036f40: 5354 4f52 4520 2a63 6572 745f 7374 6f72  STORE *cert_stor
0036f50: 652c 2058 3530 395f 5354 4f52 455f 4354  e, X509_STORE_CT
0036f60: 5820 2a63 7478 2c0a 2042 494f 202a 6269  X *ctx,. BIO *bi
0036f70: 6f2c 2050 4b43 5337 202a 7037 2c20 504b  o, PKCS7 *p7, PK
0036f80: 4353 375f 5349 474e 4552 5f49 4e46 4f20  CS7_SIGNER_INFO 
0036f90: 2a73 6929 3b0a 696e 7420 504b 4353 375f  *si);.int PKCS7_
0036fa0: 7369 676e 6174 7572 6556 6572 6966 7928  signatureVerify(
0036fb0: 4249 4f20 2a62 696f 2c20 504b 4353 3720  BIO *bio, PKCS7 
0036fc0: 2a70 372c 2050 4b43 5337 5f53 4947 4e45  *p7, PKCS7_SIGNE
0036fd0: 525f 494e 464f 202a 7369 2c0a 2020 2020  R_INFO *si,.    
0036fe0: 2020 2020 5835 3039 202a 7835 3039 293b      X509 *x509);
0036ff0: 0a0a 4249 4f20 2a50 4b43 5337 5f64 6174  ..BIO *PKCS7_dat
0037000: 6149 6e69 7428 504b 4353 3720 2a70 372c  aInit(PKCS7 *p7,
0037010: 2042 494f 202a 6269 6f29 3b0a 696e 7420   BIO *bio);.int 
0037020: 504b 4353 375f 6461 7461 4669 6e61 6c28  PKCS7_dataFinal(
0037030: 504b 4353 3720 2a70 372c 2042 494f 202a  PKCS7 *p7, BIO *
0037040: 6269 6f29 3b0a 4249 4f20 2a50 4b43 5337  bio);.BIO *PKCS7
0037050: 5f64 6174 6144 6563 6f64 6528 504b 4353  _dataDecode(PKCS
0037060: 3720 2a70 372c 2045 5650 5f50 4b45 5920  7 *p7, EVP_PKEY 
0037070: 2a70 6b65 792c 2042 494f 202a 696e 5f62  *pkey, BIO *in_b
0037080: 696f 2c20 5835 3039 202a 7063 6572 7429  io, X509 *pcert)
0037090: 3b0a 0a0a 504b 4353 375f 5349 474e 4552  ;...PKCS7_SIGNER
00370a0: 5f49 4e46 4f20 2a50 4b43 5337 5f61 6464  _INFO *PKCS7_add
00370b0: 5f73 6967 6e61 7475 7265 2850 4b43 5337  _signature(PKCS7
00370c0: 202a 7037 2c20 5835 3039 202a 7835 3039   *p7, X509 *x509
00370d0: 2c0a 2045 5650 5f50 4b45 5920 2a70 6b65  ,. EVP_PKEY *pke
00370e0: 792c 2063 6f6e 7374 2045 5650 5f4d 4420  y, const EVP_MD 
00370f0: 2a64 6773 7429 3b0a 5835 3039 202a 504b  *dgst);.X509 *PK
0037100: 4353 375f 6365 7274 5f66 726f 6d5f 7369  CS7_cert_from_si
0037110: 676e 6572 5f69 6e66 6f28 504b 4353 3720  gner_info(PKCS7 
0037120: 2a70 372c 2050 4b43 5337 5f53 4947 4e45  *p7, PKCS7_SIGNE
0037130: 525f 494e 464f 202a 7369 293b 0a69 6e74  R_INFO *si);.int
0037140: 2050 4b43 5337 5f73 6574 5f64 6967 6573   PKCS7_set_diges
0037150: 7428 504b 4353 3720 2a70 372c 2063 6f6e  t(PKCS7 *p7, con
0037160: 7374 2045 5650 5f4d 4420 2a6d 6429 3b0a  st EVP_MD *md);.
0037170: 7374 7275 6374 2073 7461 636b 5f73 745f  struct stack_st_
0037180: 504b 4353 375f 5349 474e 4552 5f49 4e46  PKCS7_SIGNER_INF
0037190: 4f20 2a50 4b43 5337 5f67 6574 5f73 6967  O *PKCS7_get_sig
00371a0: 6e65 725f 696e 666f 2850 4b43 5337 202a  ner_info(PKCS7 *
00371b0: 7037 293b 0a0a 504b 4353 375f 5245 4349  p7);..PKCS7_RECI
00371c0: 505f 494e 464f 202a 504b 4353 375f 6164  P_INFO *PKCS7_ad
00371d0: 645f 7265 6369 7069 656e 7428 504b 4353  d_recipient(PKCS
00371e0: 3720 2a70 372c 2058 3530 3920 2a78 3530  7 *p7, X509 *x50
00371f0: 3929 3b0a 766f 6964 2050 4b43 5337 5f53  9);.void PKCS7_S
0037200: 4947 4e45 525f 494e 464f 5f67 6574 305f  IGNER_INFO_get0_
0037210: 616c 6773 2850 4b43 5337 5f53 4947 4e45  algs(PKCS7_SIGNE
0037220: 525f 494e 464f 202a 7369 2c20 4556 505f  R_INFO *si, EVP_
0037230: 504b 4559 202a 2a70 6b2c 0a20 2020 2020  PKEY **pk,.     
0037240: 5835 3039 5f41 4c47 4f52 202a 2a70 6469  X509_ALGOR **pdi
0037250: 672c 2058 3530 395f 414c 474f 5220 2a2a  g, X509_ALGOR **
0037260: 7073 6967 293b 0a76 6f69 6420 504b 4353  psig);.void PKCS
0037270: 375f 5245 4349 505f 494e 464f 5f67 6574  7_RECIP_INFO_get
0037280: 305f 616c 6728 504b 4353 375f 5245 4349  0_alg(PKCS7_RECI
0037290: 505f 494e 464f 202a 7269 2c20 5835 3039  P_INFO *ri, X509
00372a0: 5f41 4c47 4f52 202a 2a70 656e 6329 3b0a  _ALGOR **penc);.
00372b0: 696e 7420 504b 4353 375f 6164 645f 7265  int PKCS7_add_re
00372c0: 6369 7069 656e 745f 696e 666f 2850 4b43  cipient_info(PKC
00372d0: 5337 202a 7037 2c20 504b 4353 375f 5245  S7 *p7, PKCS7_RE
00372e0: 4349 505f 494e 464f 202a 7269 293b 0a69  CIP_INFO *ri);.i
00372f0: 6e74 2050 4b43 5337 5f52 4543 4950 5f49  nt PKCS7_RECIP_I
0037300: 4e46 4f5f 7365 7428 504b 4353 375f 5245  NFO_set(PKCS7_RE
0037310: 4349 505f 494e 464f 202a 7037 692c 2058  CIP_INFO *p7i, X
0037320: 3530 3920 2a78 3530 3929 3b0a 696e 7420  509 *x509);.int 
0037330: 504b 4353 375f 7365 745f 6369 7068 6572  PKCS7_set_cipher
0037340: 2850 4b43 5337 202a 7037 2c20 636f 6e73  (PKCS7 *p7, cons
0037350: 7420 4556 505f 4349 5048 4552 202a 6369  t EVP_CIPHER *ci
0037360: 7068 6572 293b 0a69 6e74 2050 4b43 5337  pher);.int PKCS7
0037370: 5f73 7472 6561 6d28 756e 7369 676e 6564  _stream(unsigned
0037380: 2063 6861 7220 2a2a 2a62 6f75 6e64 6172   char ***boundar
0037390: 792c 2050 4b43 5337 202a 7037 293b 0a0a  y, PKCS7 *p7);..
00373a0: 504b 4353 375f 4953 5355 4552 5f41 4e44  PKCS7_ISSUER_AND
00373b0: 5f53 4552 4941 4c20 2a50 4b43 5337 5f67  _SERIAL *PKCS7_g
00373c0: 6574 5f69 7373 7565 725f 616e 645f 7365  et_issuer_and_se
00373d0: 7269 616c 2850 4b43 5337 202a 7037 2c20  rial(PKCS7 *p7, 
00373e0: 696e 7420 6964 7829 3b0a 4153 4e31 5f4f  int idx);.ASN1_O
00373f0: 4354 4554 5f53 5452 494e 4720 2a50 4b43  CTET_STRING *PKC
0037400: 5337 5f64 6967 6573 745f 6672 6f6d 5f61  S7_digest_from_a
0037410: 7474 7269 6275 7465 7328 7374 7275 6374  ttributes(struct
0037420: 2073 7461 636b 5f73 745f 5835 3039 5f41   stack_st_X509_A
0037430: 5454 5249 4255 5445 202a 736b 293b 0a69  TTRIBUTE *sk);.i
0037440: 6e74 2050 4b43 5337 5f61 6464 5f73 6967  nt PKCS7_add_sig
0037450: 6e65 645f 6174 7472 6962 7574 6528 504b  ned_attribute(PK
0037460: 4353 375f 5349 474e 4552 5f49 4e46 4f20  CS7_SIGNER_INFO 
0037470: 2a70 3773 692c 696e 7420 6e69 642c 696e  *p7si,int nid,in
0037480: 7420 7479 7065 2c0a 2076 6f69 6420 2a64  t type,. void *d
0037490: 6174 6129 3b0a 696e 7420 504b 4353 375f  ata);.int PKCS7_
00374a0: 6164 645f 6174 7472 6962 7574 6520 2850  add_attribute (P
00374b0: 4b43 5337 5f53 4947 4e45 525f 494e 464f  KCS7_SIGNER_INFO
00374c0: 202a 7037 7369 2c20 696e 7420 6e69 642c   *p7si, int nid,
00374d0: 2069 6e74 2061 7472 7479 7065 2c0a 2076   int atrtype,. v
00374e0: 6f69 6420 2a76 616c 7565 293b 0a41 534e  oid *value);.ASN
00374f0: 315f 5459 5045 202a 504b 4353 375f 6765  1_TYPE *PKCS7_ge
0037500: 745f 6174 7472 6962 7574 6528 504b 4353  t_attribute(PKCS
0037510: 375f 5349 474e 4552 5f49 4e46 4f20 2a73  7_SIGNER_INFO *s
0037520: 692c 2069 6e74 206e 6964 293b 0a41 534e  i, int nid);.ASN
0037530: 315f 5459 5045 202a 504b 4353 375f 6765  1_TYPE *PKCS7_ge
0037540: 745f 7369 676e 6564 5f61 7474 7269 6275  t_signed_attribu
0037550: 7465 2850 4b43 5337 5f53 4947 4e45 525f  te(PKCS7_SIGNER_
0037560: 494e 464f 202a 7369 2c20 696e 7420 6e69  INFO *si, int ni
0037570: 6429 3b0a 696e 7420 504b 4353 375f 7365  d);.int PKCS7_se
0037580: 745f 7369 676e 6564 5f61 7474 7269 6275  t_signed_attribu
0037590: 7465 7328 504b 4353 375f 5349 474e 4552  tes(PKCS7_SIGNER
00375a0: 5f49 4e46 4f20 2a70 3773 692c 0a20 2020  _INFO *p7si,.   
00375b0: 2073 7472 7563 7420 7374 6163 6b5f 7374   struct stack_st
00375c0: 5f58 3530 395f 4154 5452 4942 5554 4520  _X509_ATTRIBUTE 
00375d0: 2a73 6b29 3b0a 696e 7420 504b 4353 375f  *sk);.int PKCS7_
00375e0: 7365 745f 6174 7472 6962 7574 6573 2850  set_attributes(P
00375f0: 4b43 5337 5f53 4947 4e45 525f 494e 464f  KCS7_SIGNER_INFO
0037600: 202a 7037 7369 2c73 7472 7563 7420 7374   *p7si,struct st
0037610: 6163 6b5f 7374 5f58 3530 395f 4154 5452  ack_st_X509_ATTR
0037620: 4942 5554 4520 2a73 6b29 3b0a 0a0a 504b  IBUTE *sk);...PK
0037630: 4353 3720 2a50 4b43 5337 5f73 6967 6e28  CS7 *PKCS7_sign(
0037640: 5835 3039 202a 7369 676e 6365 7274 2c20  X509 *signcert, 
0037650: 4556 505f 504b 4559 202a 706b 6579 2c20  EVP_PKEY *pkey, 
0037660: 7374 7275 6374 2073 7461 636b 5f73 745f  struct stack_st_
0037670: 5835 3039 202a 6365 7274 732c 0a20 2020  X509 *certs,.   
0037680: 2020 2020 4249 4f20 2a64 6174 612c 2069      BIO *data, i
0037690: 6e74 2066 6c61 6773 293b 0a0a 504b 4353  nt flags);..PKCS
00376a0: 375f 5349 474e 4552 5f49 4e46 4f20 2a50  7_SIGNER_INFO *P
00376b0: 4b43 5337 5f73 6967 6e5f 6164 645f 7369  KCS7_sign_add_si
00376c0: 676e 6572 2850 4b43 5337 202a 7037 2c0a  gner(PKCS7 *p7,.
00376d0: 2020 2058 3530 3920 2a73 6967 6e63 6572     X509 *signcer
00376e0: 742c 2045 5650 5f50 4b45 5920 2a70 6b65  t, EVP_PKEY *pke
00376f0: 792c 2063 6f6e 7374 2045 5650 5f4d 4420  y, const EVP_MD 
0037700: 2a6d 642c 0a20 2020 696e 7420 666c 6167  *md,.   int flag
0037710: 7329 3b0a 0a69 6e74 2050 4b43 5337 5f66  s);..int PKCS7_f
0037720: 696e 616c 2850 4b43 5337 202a 7037 2c20  inal(PKCS7 *p7, 
0037730: 4249 4f20 2a64 6174 612c 2069 6e74 2066  BIO *data, int f
0037740: 6c61 6773 293b 0a69 6e74 2050 4b43 5337  lags);.int PKCS7
0037750: 5f76 6572 6966 7928 504b 4353 3720 2a70  _verify(PKCS7 *p
0037760: 372c 2073 7472 7563 7420 7374 6163 6b5f  7, struct stack_
0037770: 7374 5f58 3530 3920 2a63 6572 7473 2c20  st_X509 *certs, 
0037780: 5835 3039 5f53 544f 5245 202a 7374 6f72  X509_STORE *stor
0037790: 652c 0a20 2020 2020 4249 4f20 2a69 6e64  e,.     BIO *ind
00377a0: 6174 612c 2042 494f 202a 6f75 742c 2069  ata, BIO *out, i
00377b0: 6e74 2066 6c61 6773 293b 0a73 7472 7563  nt flags);.struc
00377c0: 7420 7374 6163 6b5f 7374 5f58 3530 3920  t stack_st_X509 
00377d0: 2a50 4b43 5337 5f67 6574 305f 7369 676e  *PKCS7_get0_sign
00377e0: 6572 7328 504b 4353 3720 2a70 372c 2073  ers(PKCS7 *p7, s
00377f0: 7472 7563 7420 7374 6163 6b5f 7374 5f58  truct stack_st_X
0037800: 3530 3920 2a63 6572 7473 2c20 696e 7420  509 *certs, int 
0037810: 666c 6167 7329 3b0a 504b 4353 3720 2a50  flags);.PKCS7 *P
0037820: 4b43 5337 5f65 6e63 7279 7074 2873 7472  KCS7_encrypt(str
0037830: 7563 7420 7374 6163 6b5f 7374 5f58 3530  uct stack_st_X50
0037840: 3920 2a63 6572 7473 2c20 4249 4f20 2a69  9 *certs, BIO *i
0037850: 6e2c 2063 6f6e 7374 2045 5650 5f43 4950  n, const EVP_CIP
0037860: 4845 5220 2a63 6970 6865 722c 0a20 2020  HER *cipher,.   
0037870: 2020 2020 2069 6e74 2066 6c61 6773 293b       int flags);
0037880: 0a69 6e74 2050 4b43 5337 5f64 6563 7279  .int PKCS7_decry
0037890: 7074 2850 4b43 5337 202a 7037 2c20 4556  pt(PKCS7 *p7, EV
00378a0: 505f 504b 4559 202a 706b 6579 2c20 5835  P_PKEY *pkey, X5
00378b0: 3039 202a 6365 7274 2c20 4249 4f20 2a64  09 *cert, BIO *d
00378c0: 6174 612c 2069 6e74 2066 6c61 6773 293b  ata, int flags);
00378d0: 0a0a 696e 7420 504b 4353 375f 6164 645f  ..int PKCS7_add_
00378e0: 6174 7472 6962 5f73 6d69 6d65 6361 7028  attrib_smimecap(
00378f0: 504b 4353 375f 5349 474e 4552 5f49 4e46  PKCS7_SIGNER_INF
0037900: 4f20 2a73 692c 0a20 2020 2020 2020 2020  O *si,.         
0037910: 7374 7275 6374 2073 7461 636b 5f73 745f  struct stack_st_
0037920: 5835 3039 5f41 4c47 4f52 202a 6361 7029  X509_ALGOR *cap)
0037930: 3b0a 7374 7275 6374 2073 7461 636b 5f73  ;.struct stack_s
0037940: 745f 5835 3039 5f41 4c47 4f52 202a 504b  t_X509_ALGOR *PK
0037950: 4353 375f 6765 745f 736d 696d 6563 6170  CS7_get_smimecap
0037960: 2850 4b43 5337 5f53 4947 4e45 525f 494e  (PKCS7_SIGNER_IN
0037970: 464f 202a 7369 293b 0a69 6e74 2050 4b43  FO *si);.int PKC
0037980: 5337 5f73 696d 706c 655f 736d 696d 6563  S7_simple_smimec
0037990: 6170 2873 7472 7563 7420 7374 6163 6b5f  ap(struct stack_
00379a0: 7374 5f58 3530 395f 414c 474f 5220 2a73  st_X509_ALGOR *s
00379b0: 6b2c 2069 6e74 206e 6964 2c20 696e 7420  k, int nid, int 
00379c0: 6172 6729 3b0a 0a69 6e74 2050 4b43 5337  arg);..int PKCS7
00379d0: 5f61 6464 5f61 7474 7269 625f 636f 6e74  _add_attrib_cont
00379e0: 656e 745f 7479 7065 2850 4b43 5337 5f53  ent_type(PKCS7_S
00379f0: 4947 4e45 525f 494e 464f 202a 7369 2c20  IGNER_INFO *si, 
0037a00: 4153 4e31 5f4f 424a 4543 5420 2a63 6f69  ASN1_OBJECT *coi
0037a10: 6429 3b0a 696e 7420 504b 4353 375f 6164  d);.int PKCS7_ad
0037a20: 6430 5f61 7474 7269 625f 7369 676e 696e  d0_attrib_signin
0037a30: 675f 7469 6d65 2850 4b43 5337 5f53 4947  g_time(PKCS7_SIG
0037a40: 4e45 525f 494e 464f 202a 7369 2c20 4153  NER_INFO *si, AS
0037a50: 4e31 5f54 494d 4520 2a74 293b 0a69 6e74  N1_TIME *t);.int
0037a60: 2050 4b43 5337 5f61 6464 315f 6174 7472   PKCS7_add1_attr
0037a70: 6962 5f64 6967 6573 7428 504b 4353 375f  ib_digest(PKCS7_
0037a80: 5349 474e 4552 5f49 4e46 4f20 2a73 692c  SIGNER_INFO *si,
0037a90: 0a20 2020 2063 6f6e 7374 2075 6e73 6967  .    const unsig
0037aa0: 6e65 6420 6368 6172 202a 6d64 2c20 696e  ned char *md, in
0037ab0: 7420 6d64 6c65 6e29 3b0a 0a69 6e74 2053  t mdlen);..int S
0037ac0: 4d49 4d45 5f77 7269 7465 5f50 4b43 5337  MIME_write_PKCS7
0037ad0: 2842 494f 202a 6269 6f2c 2050 4b43 5337  (BIO *bio, PKCS7
0037ae0: 202a 7037 2c20 4249 4f20 2a64 6174 612c   *p7, BIO *data,
0037af0: 2069 6e74 2066 6c61 6773 293b 0a50 4b43   int flags);.PKC
0037b00: 5337 202a 534d 494d 455f 7265 6164 5f50  S7 *SMIME_read_P
0037b10: 4b43 5337 2842 494f 202a 6269 6f2c 2042  KCS7(BIO *bio, B
0037b20: 494f 202a 2a62 636f 6e74 293b 0a0a 4249  IO **bcont);..BI
0037b30: 4f20 2a42 494f 5f6e 6577 5f50 4b43 5337  O *BIO_new_PKCS7
0037b40: 2842 494f 202a 6f75 742c 2050 4b43 5337  (BIO *out, PKCS7
0037b50: 202a 7037 293b 0a0a 0a0a 0a0a 0a76 6f69   *p7);.......voi
0037b60: 6420 4552 525f 6c6f 6164 5f50 4b43 5337  d ERR_load_PKCS7
0037b70: 5f73 7472 696e 6773 2876 6f69 6429 3b0a  _strings(void);.
0037b80: 2320 3630 3220 222f 7573 722f 696e 636c  # 602 "/usr/incl
0037b90: 7564 652f 6f70 656e 7373 6c2f 7835 3039  ude/openssl/x509
0037ba0: 2e68 2220 3220 3320 340a 2320 3632 3720  .h" 2 3 4.# 627 
0037bb0: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
0037bc0: 656e 7373 6c2f 7835 3039 2e68 2220 3320  enssl/x509.h" 3 
0037bd0: 340a 766f 6964 2058 3530 395f 4352 4c5f  4.void X509_CRL_
0037be0: 7365 745f 6465 6661 756c 745f 6d65 7468  set_default_meth
0037bf0: 6f64 2863 6f6e 7374 2058 3530 395f 4352  od(const X509_CR
0037c00: 4c5f 4d45 5448 4f44 202a 6d65 7468 293b  L_METHOD *meth);
0037c10: 0a58 3530 395f 4352 4c5f 4d45 5448 4f44  .X509_CRL_METHOD
0037c20: 202a 5835 3039 5f43 524c 5f4d 4554 484f   *X509_CRL_METHO
0037c30: 445f 6e65 7728 0a20 696e 7420 282a 6372  D_new(. int (*cr
0037c40: 6c5f 696e 6974 2928 5835 3039 5f43 524c  l_init)(X509_CRL
0037c50: 202a 6372 6c29 2c0a 2069 6e74 2028 2a63   *crl),. int (*c
0037c60: 726c 5f66 7265 6529 2858 3530 395f 4352  rl_free)(X509_CR
0037c70: 4c20 2a63 726c 292c 0a20 696e 7420 282a  L *crl),. int (*
0037c80: 6372 6c5f 6c6f 6f6b 7570 2928 5835 3039  crl_lookup)(X509
0037c90: 5f43 524c 202a 6372 6c2c 2058 3530 395f  _CRL *crl, X509_
0037ca0: 5245 564f 4b45 4420 2a2a 7265 742c 0a20  REVOKED **ret,. 
0037cb0: 2020 2041 534e 315f 494e 5445 4745 5220     ASN1_INTEGER 
0037cc0: 2a73 6572 2c20 5835 3039 5f4e 414d 4520  *ser, X509_NAME 
0037cd0: 2a69 7373 7565 7229 2c0a 2069 6e74 2028  *issuer),. int (
0037ce0: 2a63 726c 5f76 6572 6966 7929 2858 3530  *crl_verify)(X50
0037cf0: 395f 4352 4c20 2a63 726c 2c20 4556 505f  9_CRL *crl, EVP_
0037d00: 504b 4559 202a 706b 2929 3b0a 766f 6964  PKEY *pk));.void
0037d10: 2058 3530 395f 4352 4c5f 4d45 5448 4f44   X509_CRL_METHOD
0037d20: 5f66 7265 6528 5835 3039 5f43 524c 5f4d  _free(X509_CRL_M
0037d30: 4554 484f 4420 2a6d 293b 0a0a 766f 6964  ETHOD *m);..void
0037d40: 2058 3530 395f 4352 4c5f 7365 745f 6d65   X509_CRL_set_me
0037d50: 7468 5f64 6174 6128 5835 3039 5f43 524c  th_data(X509_CRL
0037d60: 202a 6372 6c2c 2076 6f69 6420 2a64 6174   *crl, void *dat
0037d70: 293b 0a76 6f69 6420 2a58 3530 395f 4352  );.void *X509_CR
0037d80: 4c5f 6765 745f 6d65 7468 5f64 6174 6128  L_get_meth_data(
0037d90: 5835 3039 5f43 524c 202a 6372 6c29 3b0a  X509_CRL *crl);.
0037da0: 0a0a 0a0a 0a0a 636f 6e73 7420 6368 6172  ......const char
0037db0: 202a 5835 3039 5f76 6572 6966 795f 6365   *X509_verify_ce
0037dc0: 7274 5f65 7272 6f72 5f73 7472 696e 6728  rt_error_string(
0037dd0: 6c6f 6e67 206e 293b 0a0a 0a69 6e74 2058  long n);...int X
0037de0: 3530 395f 7665 7269 6679 2858 3530 3920  509_verify(X509 
0037df0: 2a61 2c20 4556 505f 504b 4559 202a 7229  *a, EVP_PKEY *r)
0037e00: 3b0a 0a69 6e74 2058 3530 395f 5245 515f  ;..int X509_REQ_
0037e10: 7665 7269 6679 2858 3530 395f 5245 5120  verify(X509_REQ 
0037e20: 2a61 2c20 4556 505f 504b 4559 202a 7229  *a, EVP_PKEY *r)
0037e30: 3b0a 696e 7420 5835 3039 5f43 524c 5f76  ;.int X509_CRL_v
0037e40: 6572 6966 7928 5835 3039 5f43 524c 202a  erify(X509_CRL *
0037e50: 612c 2045 5650 5f50 4b45 5920 2a72 293b  a, EVP_PKEY *r);
0037e60: 0a69 6e74 204e 4554 5343 4150 455f 5350  .int NETSCAPE_SP
0037e70: 4b49 5f76 6572 6966 7928 4e45 5453 4341  KI_verify(NETSCA
0037e80: 5045 5f53 504b 4920 2a61 2c20 4556 505f  PE_SPKI *a, EVP_
0037e90: 504b 4559 202a 7229 3b0a 0a4e 4554 5343  PKEY *r);..NETSC
0037ea0: 4150 455f 5350 4b49 202a 204e 4554 5343  APE_SPKI * NETSC
0037eb0: 4150 455f 5350 4b49 5f62 3634 5f64 6563  APE_SPKI_b64_dec
0037ec0: 6f64 6528 636f 6e73 7420 6368 6172 202a  ode(const char *
0037ed0: 7374 722c 2069 6e74 206c 656e 293b 0a63  str, int len);.c
0037ee0: 6861 7220 2a20 4e45 5453 4341 5045 5f53  har * NETSCAPE_S
0037ef0: 504b 495f 6236 345f 656e 636f 6465 284e  PKI_b64_encode(N
0037f00: 4554 5343 4150 455f 5350 4b49 202a 7829  ETSCAPE_SPKI *x)
0037f10: 3b0a 4556 505f 504b 4559 202a 4e45 5453  ;.EVP_PKEY *NETS
0037f20: 4341 5045 5f53 504b 495f 6765 745f 7075  CAPE_SPKI_get_pu
0037f30: 626b 6579 284e 4554 5343 4150 455f 5350  bkey(NETSCAPE_SP
0037f40: 4b49 202a 7829 3b0a 696e 7420 4e45 5453  KI *x);.int NETS
0037f50: 4341 5045 5f53 504b 495f 7365 745f 7075  CAPE_SPKI_set_pu
0037f60: 626b 6579 284e 4554 5343 4150 455f 5350  bkey(NETSCAPE_SP
0037f70: 4b49 202a 782c 2045 5650 5f50 4b45 5920  KI *x, EVP_PKEY 
0037f80: 2a70 6b65 7929 3b0a 0a69 6e74 204e 4554  *pkey);..int NET
0037f90: 5343 4150 455f 5350 4b49 5f70 7269 6e74  SCAPE_SPKI_print
0037fa0: 2842 494f 202a 6f75 742c 204e 4554 5343  (BIO *out, NETSC
0037fb0: 4150 455f 5350 4b49 202a 7370 6b69 293b  APE_SPKI *spki);
0037fc0: 0a0a 696e 7420 5835 3039 5f73 6967 6e61  ..int X509_signa
0037fd0: 7475 7265 5f64 756d 7028 4249 4f20 2a62  ture_dump(BIO *b
0037fe0: 702c 636f 6e73 7420 4153 4e31 5f53 5452  p,const ASN1_STR
0037ff0: 494e 4720 2a73 6967 2c20 696e 7420 696e  ING *sig, int in
0038000: 6465 6e74 293b 0a69 6e74 2058 3530 395f  dent);.int X509_
0038010: 7369 676e 6174 7572 655f 7072 696e 7428  signature_print(
0038020: 4249 4f20 2a62 702c 5835 3039 5f41 4c47  BIO *bp,X509_ALG
0038030: 4f52 202a 616c 672c 2041 534e 315f 5354  OR *alg, ASN1_ST
0038040: 5249 4e47 202a 7369 6729 3b0a 0a69 6e74  RING *sig);..int
0038050: 2058 3530 395f 7369 676e 2858 3530 3920   X509_sign(X509 
0038060: 2a78 2c20 4556 505f 504b 4559 202a 706b  *x, EVP_PKEY *pk
0038070: 6579 2c20 636f 6e73 7420 4556 505f 4d44  ey, const EVP_MD
0038080: 202a 6d64 293b 0a69 6e74 2058 3530 395f   *md);.int X509_
0038090: 7369 676e 5f63 7478 2858 3530 3920 2a78  sign_ctx(X509 *x
00380a0: 2c20 4556 505f 4d44 5f43 5458 202a 6374  , EVP_MD_CTX *ct
00380b0: 7829 3b0a 696e 7420 5835 3039 5f52 4551  x);.int X509_REQ
00380c0: 5f73 6967 6e28 5835 3039 5f52 4551 202a  _sign(X509_REQ *
00380d0: 782c 2045 5650 5f50 4b45 5920 2a70 6b65  x, EVP_PKEY *pke
00380e0: 792c 2063 6f6e 7374 2045 5650 5f4d 4420  y, const EVP_MD 
00380f0: 2a6d 6429 3b0a 696e 7420 5835 3039 5f52  *md);.int X509_R
0038100: 4551 5f73 6967 6e5f 6374 7828 5835 3039  EQ_sign_ctx(X509
0038110: 5f52 4551 202a 782c 2045 5650 5f4d 445f  _REQ *x, EVP_MD_
0038120: 4354 5820 2a63 7478 293b 0a69 6e74 2058  CTX *ctx);.int X
0038130: 3530 395f 4352 4c5f 7369 676e 2858 3530  509_CRL_sign(X50
0038140: 395f 4352 4c20 2a78 2c20 4556 505f 504b  9_CRL *x, EVP_PK
0038150: 4559 202a 706b 6579 2c20 636f 6e73 7420  EY *pkey, const 
0038160: 4556 505f 4d44 202a 6d64 293b 0a69 6e74  EVP_MD *md);.int
0038170: 2058 3530 395f 4352 4c5f 7369 676e 5f63   X509_CRL_sign_c
0038180: 7478 2858 3530 395f 4352 4c20 2a78 2c20  tx(X509_CRL *x, 
0038190: 4556 505f 4d44 5f43 5458 202a 6374 7829  EVP_MD_CTX *ctx)
00381a0: 3b0a 696e 7420 4e45 5453 4341 5045 5f53  ;.int NETSCAPE_S
00381b0: 504b 495f 7369 676e 284e 4554 5343 4150  PKI_sign(NETSCAP
00381c0: 455f 5350 4b49 202a 782c 2045 5650 5f50  E_SPKI *x, EVP_P
00381d0: 4b45 5920 2a70 6b65 792c 2063 6f6e 7374  KEY *pkey, const
00381e0: 2045 5650 5f4d 4420 2a6d 6429 3b0a 0a69   EVP_MD *md);..i
00381f0: 6e74 2058 3530 395f 7075 626b 6579 5f64  nt X509_pubkey_d
0038200: 6967 6573 7428 636f 6e73 7420 5835 3039  igest(const X509
0038210: 202a 6461 7461 2c63 6f6e 7374 2045 5650   *data,const EVP
0038220: 5f4d 4420 2a74 7970 652c 0a20 2075 6e73  _MD *type,.  uns
0038230: 6967 6e65 6420 6368 6172 202a 6d64 2c20  igned char *md, 
0038240: 756e 7369 676e 6564 2069 6e74 202a 6c65  unsigned int *le
0038250: 6e29 3b0a 696e 7420 5835 3039 5f64 6967  n);.int X509_dig
0038260: 6573 7428 636f 6e73 7420 5835 3039 202a  est(const X509 *
0038270: 6461 7461 2c63 6f6e 7374 2045 5650 5f4d  data,const EVP_M
0038280: 4420 2a74 7970 652c 0a20 2075 6e73 6967  D *type,.  unsig
0038290: 6e65 6420 6368 6172 202a 6d64 2c20 756e  ned char *md, un
00382a0: 7369 676e 6564 2069 6e74 202a 6c65 6e29  signed int *len)
00382b0: 3b0a 696e 7420 5835 3039 5f43 524c 5f64  ;.int X509_CRL_d
00382c0: 6967 6573 7428 636f 6e73 7420 5835 3039  igest(const X509
00382d0: 5f43 524c 202a 6461 7461 2c63 6f6e 7374  _CRL *data,const
00382e0: 2045 5650 5f4d 4420 2a74 7970 652c 0a20   EVP_MD *type,. 
00382f0: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
0038300: 6d64 2c20 756e 7369 676e 6564 2069 6e74  md, unsigned int
0038310: 202a 6c65 6e29 3b0a 696e 7420 5835 3039   *len);.int X509
0038320: 5f52 4551 5f64 6967 6573 7428 636f 6e73  _REQ_digest(cons
0038330: 7420 5835 3039 5f52 4551 202a 6461 7461  t X509_REQ *data
0038340: 2c63 6f6e 7374 2045 5650 5f4d 4420 2a74  ,const EVP_MD *t
0038350: 7970 652c 0a20 2075 6e73 6967 6e65 6420  ype,.  unsigned 
0038360: 6368 6172 202a 6d64 2c20 756e 7369 676e  char *md, unsign
0038370: 6564 2069 6e74 202a 6c65 6e29 3b0a 696e  ed int *len);.in
0038380: 7420 5835 3039 5f4e 414d 455f 6469 6765  t X509_NAME_dige
0038390: 7374 2863 6f6e 7374 2058 3530 395f 4e41  st(const X509_NA
00383a0: 4d45 202a 6461 7461 2c63 6f6e 7374 2045  ME *data,const E
00383b0: 5650 5f4d 4420 2a74 7970 652c 0a20 2075  VP_MD *type,.  u
00383c0: 6e73 6967 6e65 6420 6368 6172 202a 6d64  nsigned char *md
00383d0: 2c20 756e 7369 676e 6564 2069 6e74 202a  , unsigned int *
00383e0: 6c65 6e29 3b0a 0a0a 0a58 3530 3920 2a64  len);....X509 *d
00383f0: 3269 5f58 3530 395f 6670 2846 494c 4520  2i_X509_fp(FILE 
0038400: 2a66 702c 2058 3530 3920 2a2a 7835 3039  *fp, X509 **x509
0038410: 293b 0a69 6e74 2069 3264 5f58 3530 395f  );.int i2d_X509_
0038420: 6670 2846 494c 4520 2a66 702c 5835 3039  fp(FILE *fp,X509
0038430: 202a 7835 3039 293b 0a58 3530 395f 4352   *x509);.X509_CR
0038440: 4c20 2a64 3269 5f58 3530 395f 4352 4c5f  L *d2i_X509_CRL_
0038450: 6670 2846 494c 4520 2a66 702c 5835 3039  fp(FILE *fp,X509
0038460: 5f43 524c 202a 2a63 726c 293b 0a69 6e74  _CRL **crl);.int
0038470: 2069 3264 5f58 3530 395f 4352 4c5f 6670   i2d_X509_CRL_fp
0038480: 2846 494c 4520 2a66 702c 5835 3039 5f43  (FILE *fp,X509_C
0038490: 524c 202a 6372 6c29 3b0a 5835 3039 5f52  RL *crl);.X509_R
00384a0: 4551 202a 6432 695f 5835 3039 5f52 4551  EQ *d2i_X509_REQ
00384b0: 5f66 7028 4649 4c45 202a 6670 2c58 3530  _fp(FILE *fp,X50
00384c0: 395f 5245 5120 2a2a 7265 7129 3b0a 696e  9_REQ **req);.in
00384d0: 7420 6932 645f 5835 3039 5f52 4551 5f66  t i2d_X509_REQ_f
00384e0: 7028 4649 4c45 202a 6670 2c58 3530 395f  p(FILE *fp,X509_
00384f0: 5245 5120 2a72 6571 293b 0a0a 5253 4120  REQ *req);..RSA 
0038500: 2a64 3269 5f52 5341 5072 6976 6174 654b  *d2i_RSAPrivateK
0038510: 6579 5f66 7028 4649 4c45 202a 6670 2c52  ey_fp(FILE *fp,R
0038520: 5341 202a 2a72 7361 293b 0a69 6e74 2069  SA **rsa);.int i
0038530: 3264 5f52 5341 5072 6976 6174 654b 6579  2d_RSAPrivateKey
0038540: 5f66 7028 4649 4c45 202a 6670 2c52 5341  _fp(FILE *fp,RSA
0038550: 202a 7273 6129 3b0a 5253 4120 2a64 3269   *rsa);.RSA *d2i
0038560: 5f52 5341 5075 626c 6963 4b65 795f 6670  _RSAPublicKey_fp
0038570: 2846 494c 4520 2a66 702c 5253 4120 2a2a  (FILE *fp,RSA **
0038580: 7273 6129 3b0a 696e 7420 6932 645f 5253  rsa);.int i2d_RS
0038590: 4150 7562 6c69 634b 6579 5f66 7028 4649  APublicKey_fp(FI
00385a0: 4c45 202a 6670 2c52 5341 202a 7273 6129  LE *fp,RSA *rsa)
00385b0: 3b0a 5253 4120 2a64 3269 5f52 5341 5f50  ;.RSA *d2i_RSA_P
00385c0: 5542 4b45 595f 6670 2846 494c 4520 2a66  UBKEY_fp(FILE *f
00385d0: 702c 5253 4120 2a2a 7273 6129 3b0a 696e  p,RSA **rsa);.in
00385e0: 7420 6932 645f 5253 415f 5055 424b 4559  t i2d_RSA_PUBKEY
00385f0: 5f66 7028 4649 4c45 202a 6670 2c52 5341  _fp(FILE *fp,RSA
0038600: 202a 7273 6129 3b0a 0a0a 4453 4120 2a64   *rsa);...DSA *d
0038610: 3269 5f44 5341 5f50 5542 4b45 595f 6670  2i_DSA_PUBKEY_fp
0038620: 2846 494c 4520 2a66 702c 2044 5341 202a  (FILE *fp, DSA *
0038630: 2a64 7361 293b 0a69 6e74 2069 3264 5f44  *dsa);.int i2d_D
0038640: 5341 5f50 5542 4b45 595f 6670 2846 494c  SA_PUBKEY_fp(FIL
0038650: 4520 2a66 702c 2044 5341 202a 6473 6129  E *fp, DSA *dsa)
0038660: 3b0a 4453 4120 2a64 3269 5f44 5341 5072  ;.DSA *d2i_DSAPr
0038670: 6976 6174 654b 6579 5f66 7028 4649 4c45  ivateKey_fp(FILE
0038680: 202a 6670 2c20 4453 4120 2a2a 6473 6129   *fp, DSA **dsa)
0038690: 3b0a 696e 7420 6932 645f 4453 4150 7269  ;.int i2d_DSAPri
00386a0: 7661 7465 4b65 795f 6670 2846 494c 4520  vateKey_fp(FILE 
00386b0: 2a66 702c 2044 5341 202a 6473 6129 3b0a  *fp, DSA *dsa);.
00386c0: 0a0a 4543 5f4b 4559 202a 6432 695f 4543  ..EC_KEY *d2i_EC
00386d0: 5f50 5542 4b45 595f 6670 2846 494c 4520  _PUBKEY_fp(FILE 
00386e0: 2a66 702c 2045 435f 4b45 5920 2a2a 6563  *fp, EC_KEY **ec
00386f0: 6b65 7929 3b0a 696e 7420 6932 645f 4543  key);.int i2d_EC
0038700: 5f50 5542 4b45 595f 6670 2846 494c 4520  _PUBKEY_fp(FILE 
0038710: 2a66 702c 2045 435f 4b45 5920 2a65 636b  *fp, EC_KEY *eck
0038720: 6579 293b 0a45 435f 4b45 5920 2a64 3269  ey);.EC_KEY *d2i
0038730: 5f45 4350 7269 7661 7465 4b65 795f 6670  _ECPrivateKey_fp
0038740: 2846 494c 4520 2a66 702c 2045 435f 4b45  (FILE *fp, EC_KE
0038750: 5920 2a2a 6563 6b65 7929 3b0a 696e 7420  Y **eckey);.int 
0038760: 6932 645f 4543 5072 6976 6174 654b 6579  i2d_ECPrivateKey
0038770: 5f66 7028 4649 4c45 202a 6670 2c20 4543  _fp(FILE *fp, EC
0038780: 5f4b 4559 202a 6563 6b65 7929 3b0a 0a58  _KEY *eckey);..X
0038790: 3530 395f 5349 4720 2a64 3269 5f50 4b43  509_SIG *d2i_PKC
00387a0: 5338 5f66 7028 4649 4c45 202a 6670 2c58  S8_fp(FILE *fp,X
00387b0: 3530 395f 5349 4720 2a2a 7038 293b 0a69  509_SIG **p8);.i
00387c0: 6e74 2069 3264 5f50 4b43 5338 5f66 7028  nt i2d_PKCS8_fp(
00387d0: 4649 4c45 202a 6670 2c58 3530 395f 5349  FILE *fp,X509_SI
00387e0: 4720 2a70 3829 3b0a 504b 4353 385f 5052  G *p8);.PKCS8_PR
00387f0: 4956 5f4b 4559 5f49 4e46 4f20 2a64 3269  IV_KEY_INFO *d2i
0038800: 5f50 4b43 5338 5f50 5249 565f 4b45 595f  _PKCS8_PRIV_KEY_
0038810: 494e 464f 5f66 7028 4649 4c45 202a 6670  INFO_fp(FILE *fp
0038820: 2c0a 2020 2020 2020 504b 4353 385f 5052  ,.      PKCS8_PR
0038830: 4956 5f4b 4559 5f49 4e46 4f20 2a2a 7038  IV_KEY_INFO **p8
0038840: 696e 6629 3b0a 696e 7420 6932 645f 504b  inf);.int i2d_PK
0038850: 4353 385f 5052 4956 5f4b 4559 5f49 4e46  CS8_PRIV_KEY_INF
0038860: 4f5f 6670 2846 494c 4520 2a66 702c 504b  O_fp(FILE *fp,PK
0038870: 4353 385f 5052 4956 5f4b 4559 5f49 4e46  CS8_PRIV_KEY_INF
0038880: 4f20 2a70 3869 6e66 293b 0a69 6e74 2069  O *p8inf);.int i
0038890: 3264 5f50 4b43 5338 5072 6976 6174 654b  2d_PKCS8PrivateK
00388a0: 6579 496e 666f 5f66 7028 4649 4c45 202a  eyInfo_fp(FILE *
00388b0: 6670 2c20 4556 505f 504b 4559 202a 6b65  fp, EVP_PKEY *ke
00388c0: 7929 3b0a 696e 7420 6932 645f 5072 6976  y);.int i2d_Priv
00388d0: 6174 654b 6579 5f66 7028 4649 4c45 202a  ateKey_fp(FILE *
00388e0: 6670 2c20 4556 505f 504b 4559 202a 706b  fp, EVP_PKEY *pk
00388f0: 6579 293b 0a45 5650 5f50 4b45 5920 2a64  ey);.EVP_PKEY *d
0038900: 3269 5f50 7269 7661 7465 4b65 795f 6670  2i_PrivateKey_fp
0038910: 2846 494c 4520 2a66 702c 2045 5650 5f50  (FILE *fp, EVP_P
0038920: 4b45 5920 2a2a 6129 3b0a 696e 7420 6932  KEY **a);.int i2
0038930: 645f 5055 424b 4559 5f66 7028 4649 4c45  d_PUBKEY_fp(FILE
0038940: 202a 6670 2c20 4556 505f 504b 4559 202a   *fp, EVP_PKEY *
0038950: 706b 6579 293b 0a45 5650 5f50 4b45 5920  pkey);.EVP_PKEY 
0038960: 2a64 3269 5f50 5542 4b45 595f 6670 2846  *d2i_PUBKEY_fp(F
0038970: 494c 4520 2a66 702c 2045 5650 5f50 4b45  ILE *fp, EVP_PKE
0038980: 5920 2a2a 6129 3b0a 0a0a 0a58 3530 3920  Y **a);....X509 
0038990: 2a64 3269 5f58 3530 395f 6269 6f28 4249  *d2i_X509_bio(BI
00389a0: 4f20 2a62 702c 5835 3039 202a 2a78 3530  O *bp,X509 **x50
00389b0: 3929 3b0a 696e 7420 6932 645f 5835 3039  9);.int i2d_X509
00389c0: 5f62 696f 2842 494f 202a 6270 2c58 3530  _bio(BIO *bp,X50
00389d0: 3920 2a78 3530 3929 3b0a 5835 3039 5f43  9 *x509);.X509_C
00389e0: 524c 202a 6432 695f 5835 3039 5f43 524c  RL *d2i_X509_CRL
00389f0: 5f62 696f 2842 494f 202a 6270 2c58 3530  _bio(BIO *bp,X50
0038a00: 395f 4352 4c20 2a2a 6372 6c29 3b0a 696e  9_CRL **crl);.in
0038a10: 7420 6932 645f 5835 3039 5f43 524c 5f62  t i2d_X509_CRL_b
0038a20: 696f 2842 494f 202a 6270 2c58 3530 395f  io(BIO *bp,X509_
0038a30: 4352 4c20 2a63 726c 293b 0a58 3530 395f  CRL *crl);.X509_
0038a40: 5245 5120 2a64 3269 5f58 3530 395f 5245  REQ *d2i_X509_RE
0038a50: 515f 6269 6f28 4249 4f20 2a62 702c 5835  Q_bio(BIO *bp,X5
0038a60: 3039 5f52 4551 202a 2a72 6571 293b 0a69  09_REQ **req);.i
0038a70: 6e74 2069 3264 5f58 3530 395f 5245 515f  nt i2d_X509_REQ_
0038a80: 6269 6f28 4249 4f20 2a62 702c 5835 3039  bio(BIO *bp,X509
0038a90: 5f52 4551 202a 7265 7129 3b0a 0a52 5341  _REQ *req);..RSA
0038aa0: 202a 6432 695f 5253 4150 7269 7661 7465   *d2i_RSAPrivate
0038ab0: 4b65 795f 6269 6f28 4249 4f20 2a62 702c  Key_bio(BIO *bp,
0038ac0: 5253 4120 2a2a 7273 6129 3b0a 696e 7420  RSA **rsa);.int 
0038ad0: 6932 645f 5253 4150 7269 7661 7465 4b65  i2d_RSAPrivateKe
0038ae0: 795f 6269 6f28 4249 4f20 2a62 702c 5253  y_bio(BIO *bp,RS
0038af0: 4120 2a72 7361 293b 0a52 5341 202a 6432  A *rsa);.RSA *d2
0038b00: 695f 5253 4150 7562 6c69 634b 6579 5f62  i_RSAPublicKey_b
0038b10: 696f 2842 494f 202a 6270 2c52 5341 202a  io(BIO *bp,RSA *
0038b20: 2a72 7361 293b 0a69 6e74 2069 3264 5f52  *rsa);.int i2d_R
0038b30: 5341 5075 626c 6963 4b65 795f 6269 6f28  SAPublicKey_bio(
0038b40: 4249 4f20 2a62 702c 5253 4120 2a72 7361  BIO *bp,RSA *rsa
0038b50: 293b 0a52 5341 202a 6432 695f 5253 415f  );.RSA *d2i_RSA_
0038b60: 5055 424b 4559 5f62 696f 2842 494f 202a  PUBKEY_bio(BIO *
0038b70: 6270 2c52 5341 202a 2a72 7361 293b 0a69  bp,RSA **rsa);.i
0038b80: 6e74 2069 3264 5f52 5341 5f50 5542 4b45  nt i2d_RSA_PUBKE
0038b90: 595f 6269 6f28 4249 4f20 2a62 702c 5253  Y_bio(BIO *bp,RS
0038ba0: 4120 2a72 7361 293b 0a0a 0a44 5341 202a  A *rsa);...DSA *
0038bb0: 6432 695f 4453 415f 5055 424b 4559 5f62  d2i_DSA_PUBKEY_b
0038bc0: 696f 2842 494f 202a 6270 2c20 4453 4120  io(BIO *bp, DSA 
0038bd0: 2a2a 6473 6129 3b0a 696e 7420 6932 645f  **dsa);.int i2d_
0038be0: 4453 415f 5055 424b 4559 5f62 696f 2842  DSA_PUBKEY_bio(B
0038bf0: 494f 202a 6270 2c20 4453 4120 2a64 7361  IO *bp, DSA *dsa
0038c00: 293b 0a44 5341 202a 6432 695f 4453 4150  );.DSA *d2i_DSAP
0038c10: 7269 7661 7465 4b65 795f 6269 6f28 4249  rivateKey_bio(BI
0038c20: 4f20 2a62 702c 2044 5341 202a 2a64 7361  O *bp, DSA **dsa
0038c30: 293b 0a69 6e74 2069 3264 5f44 5341 5072  );.int i2d_DSAPr
0038c40: 6976 6174 654b 6579 5f62 696f 2842 494f  ivateKey_bio(BIO
0038c50: 202a 6270 2c20 4453 4120 2a64 7361 293b   *bp, DSA *dsa);
0038c60: 0a0a 0a45 435f 4b45 5920 2a64 3269 5f45  ...EC_KEY *d2i_E
0038c70: 435f 5055 424b 4559 5f62 696f 2842 494f  C_PUBKEY_bio(BIO
0038c80: 202a 6270 2c20 4543 5f4b 4559 202a 2a65   *bp, EC_KEY **e
0038c90: 636b 6579 293b 0a69 6e74 2069 3264 5f45  ckey);.int i2d_E
0038ca0: 435f 5055 424b 4559 5f62 696f 2842 494f  C_PUBKEY_bio(BIO
0038cb0: 202a 6270 2c20 4543 5f4b 4559 202a 6563   *bp, EC_KEY *ec
0038cc0: 6b65 7929 3b0a 4543 5f4b 4559 202a 6432  key);.EC_KEY *d2
0038cd0: 695f 4543 5072 6976 6174 654b 6579 5f62  i_ECPrivateKey_b
0038ce0: 696f 2842 494f 202a 6270 2c20 4543 5f4b  io(BIO *bp, EC_K
0038cf0: 4559 202a 2a65 636b 6579 293b 0a69 6e74  EY **eckey);.int
0038d00: 2069 3264 5f45 4350 7269 7661 7465 4b65   i2d_ECPrivateKe
0038d10: 795f 6269 6f28 4249 4f20 2a62 702c 2045  y_bio(BIO *bp, E
0038d20: 435f 4b45 5920 2a65 636b 6579 293b 0a0a  C_KEY *eckey);..
0038d30: 5835 3039 5f53 4947 202a 6432 695f 504b  X509_SIG *d2i_PK
0038d40: 4353 385f 6269 6f28 4249 4f20 2a62 702c  CS8_bio(BIO *bp,
0038d50: 5835 3039 5f53 4947 202a 2a70 3829 3b0a  X509_SIG **p8);.
0038d60: 696e 7420 6932 645f 504b 4353 385f 6269  int i2d_PKCS8_bi
0038d70: 6f28 4249 4f20 2a62 702c 5835 3039 5f53  o(BIO *bp,X509_S
0038d80: 4947 202a 7038 293b 0a50 4b43 5338 5f50  IG *p8);.PKCS8_P
0038d90: 5249 565f 4b45 595f 494e 464f 202a 6432  RIV_KEY_INFO *d2
0038da0: 695f 504b 4353 385f 5052 4956 5f4b 4559  i_PKCS8_PRIV_KEY
0038db0: 5f49 4e46 4f5f 6269 6f28 4249 4f20 2a62  _INFO_bio(BIO *b
0038dc0: 702c 0a20 2020 2020 2050 4b43 5338 5f50  p,.      PKCS8_P
0038dd0: 5249 565f 4b45 595f 494e 464f 202a 2a70  RIV_KEY_INFO **p
0038de0: 3869 6e66 293b 0a69 6e74 2069 3264 5f50  8inf);.int i2d_P
0038df0: 4b43 5338 5f50 5249 565f 4b45 595f 494e  KCS8_PRIV_KEY_IN
0038e00: 464f 5f62 696f 2842 494f 202a 6270 2c50  FO_bio(BIO *bp,P
0038e10: 4b43 5338 5f50 5249 565f 4b45 595f 494e  KCS8_PRIV_KEY_IN
0038e20: 464f 202a 7038 696e 6629 3b0a 696e 7420  FO *p8inf);.int 
0038e30: 6932 645f 504b 4353 3850 7269 7661 7465  i2d_PKCS8Private
0038e40: 4b65 7949 6e66 6f5f 6269 6f28 4249 4f20  KeyInfo_bio(BIO 
0038e50: 2a62 702c 2045 5650 5f50 4b45 5920 2a6b  *bp, EVP_PKEY *k
0038e60: 6579 293b 0a69 6e74 2069 3264 5f50 7269  ey);.int i2d_Pri
0038e70: 7661 7465 4b65 795f 6269 6f28 4249 4f20  vateKey_bio(BIO 
0038e80: 2a62 702c 2045 5650 5f50 4b45 5920 2a70  *bp, EVP_PKEY *p
0038e90: 6b65 7929 3b0a 4556 505f 504b 4559 202a  key);.EVP_PKEY *
0038ea0: 6432 695f 5072 6976 6174 654b 6579 5f62  d2i_PrivateKey_b
0038eb0: 696f 2842 494f 202a 6270 2c20 4556 505f  io(BIO *bp, EVP_
0038ec0: 504b 4559 202a 2a61 293b 0a69 6e74 2069  PKEY **a);.int i
0038ed0: 3264 5f50 5542 4b45 595f 6269 6f28 4249  2d_PUBKEY_bio(BI
0038ee0: 4f20 2a62 702c 2045 5650 5f50 4b45 5920  O *bp, EVP_PKEY 
0038ef0: 2a70 6b65 7929 3b0a 4556 505f 504b 4559  *pkey);.EVP_PKEY
0038f00: 202a 6432 695f 5055 424b 4559 5f62 696f   *d2i_PUBKEY_bio
0038f10: 2842 494f 202a 6270 2c20 4556 505f 504b  (BIO *bp, EVP_PK
0038f20: 4559 202a 2a61 293b 0a0a 0a58 3530 3920  EY **a);...X509 
0038f30: 2a58 3530 395f 6475 7028 5835 3039 202a  *X509_dup(X509 *
0038f40: 7835 3039 293b 0a58 3530 395f 4154 5452  x509);.X509_ATTR
0038f50: 4942 5554 4520 2a58 3530 395f 4154 5452  IBUTE *X509_ATTR
0038f60: 4942 5554 455f 6475 7028 5835 3039 5f41  IBUTE_dup(X509_A
0038f70: 5454 5249 4255 5445 202a 7861 293b 0a58  TTRIBUTE *xa);.X
0038f80: 3530 395f 4558 5445 4e53 494f 4e20 2a58  509_EXTENSION *X
0038f90: 3530 395f 4558 5445 4e53 494f 4e5f 6475  509_EXTENSION_du
0038fa0: 7028 5835 3039 5f45 5854 454e 5349 4f4e  p(X509_EXTENSION
0038fb0: 202a 6578 293b 0a58 3530 395f 4352 4c20   *ex);.X509_CRL 
0038fc0: 2a58 3530 395f 4352 4c5f 6475 7028 5835  *X509_CRL_dup(X5
0038fd0: 3039 5f43 524c 202a 6372 6c29 3b0a 5835  09_CRL *crl);.X5
0038fe0: 3039 5f52 4551 202a 5835 3039 5f52 4551  09_REQ *X509_REQ
0038ff0: 5f64 7570 2858 3530 395f 5245 5120 2a72  _dup(X509_REQ *r
0039000: 6571 293b 0a58 3530 395f 414c 474f 5220  eq);.X509_ALGOR 
0039010: 2a58 3530 395f 414c 474f 525f 6475 7028  *X509_ALGOR_dup(
0039020: 5835 3039 5f41 4c47 4f52 202a 786e 293b  X509_ALGOR *xn);
0039030: 0a69 6e74 2058 3530 395f 414c 474f 525f  .int X509_ALGOR_
0039040: 7365 7430 2858 3530 395f 414c 474f 5220  set0(X509_ALGOR 
0039050: 2a61 6c67 2c20 4153 4e31 5f4f 424a 4543  *alg, ASN1_OBJEC
0039060: 5420 2a61 6f62 6a2c 2069 6e74 2070 7479  T *aobj, int pty
0039070: 7065 2c20 766f 6964 202a 7076 616c 293b  pe, void *pval);
0039080: 0a76 6f69 6420 5835 3039 5f41 4c47 4f52  .void X509_ALGOR
0039090: 5f67 6574 3028 4153 4e31 5f4f 424a 4543  _get0(ASN1_OBJEC
00390a0: 5420 2a2a 7061 6f62 6a2c 2069 6e74 202a  T **paobj, int *
00390b0: 7070 7479 7065 2c20 766f 6964 202a 2a70  pptype, void **p
00390c0: 7076 616c 2c0a 2020 2020 2020 5835 3039  pval,.      X509
00390d0: 5f41 4c47 4f52 202a 616c 676f 7229 3b0a  _ALGOR *algor);.
00390e0: 766f 6964 2058 3530 395f 414c 474f 525f  void X509_ALGOR_
00390f0: 7365 745f 6d64 2858 3530 395f 414c 474f  set_md(X509_ALGO
0039100: 5220 2a61 6c67 2c20 636f 6e73 7420 4556  R *alg, const EV
0039110: 505f 4d44 202a 6d64 293b 0a69 6e74 2058  P_MD *md);.int X
0039120: 3530 395f 414c 474f 525f 636d 7028 636f  509_ALGOR_cmp(co
0039130: 6e73 7420 5835 3039 5f41 4c47 4f52 202a  nst X509_ALGOR *
0039140: 612c 2063 6f6e 7374 2058 3530 395f 414c  a, const X509_AL
0039150: 474f 5220 2a62 293b 0a0a 5835 3039 5f4e  GOR *b);..X509_N
0039160: 414d 4520 2a58 3530 395f 4e41 4d45 5f64  AME *X509_NAME_d
0039170: 7570 2858 3530 395f 4e41 4d45 202a 786e  up(X509_NAME *xn
0039180: 293b 0a58 3530 395f 4e41 4d45 5f45 4e54  );.X509_NAME_ENT
0039190: 5259 202a 5835 3039 5f4e 414d 455f 454e  RY *X509_NAME_EN
00391a0: 5452 595f 6475 7028 5835 3039 5f4e 414d  TRY_dup(X509_NAM
00391b0: 455f 454e 5452 5920 2a6e 6529 3b0a 0a69  E_ENTRY *ne);..i
00391c0: 6e74 2058 3530 395f 636d 705f 7469 6d65  nt X509_cmp_time
00391d0: 2863 6f6e 7374 2041 534e 315f 5449 4d45  (const ASN1_TIME
00391e0: 202a 732c 2074 696d 655f 7420 2a74 293b   *s, time_t *t);
00391f0: 0a69 6e74 2058 3530 395f 636d 705f 6375  .int X509_cmp_cu
0039200: 7272 656e 745f 7469 6d65 2863 6f6e 7374  rrent_time(const
0039210: 2041 534e 315f 5449 4d45 202a 7329 3b0a   ASN1_TIME *s);.
0039220: 4153 4e31 5f54 494d 4520 2a20 5835 3039  ASN1_TIME * X509
0039230: 5f74 696d 655f 6164 6a28 4153 4e31 5f54  _time_adj(ASN1_T
0039240: 494d 4520 2a73 2c20 6c6f 6e67 2061 646a  IME *s, long adj
0039250: 2c20 7469 6d65 5f74 202a 7429 3b0a 4153  , time_t *t);.AS
0039260: 4e31 5f54 494d 4520 2a20 5835 3039 5f74  N1_TIME * X509_t
0039270: 696d 655f 6164 6a5f 6578 2841 534e 315f  ime_adj_ex(ASN1_
0039280: 5449 4d45 202a 732c 0a20 2020 2069 6e74  TIME *s,.    int
0039290: 206f 6666 7365 745f 6461 792c 206c 6f6e   offset_day, lon
00392a0: 6720 6f66 6673 6574 5f73 6563 2c20 7469  g offset_sec, ti
00392b0: 6d65 5f74 202a 7429 3b0a 4153 4e31 5f54  me_t *t);.ASN1_T
00392c0: 494d 4520 2a20 5835 3039 5f67 6d74 696d  IME * X509_gmtim
00392d0: 655f 6164 6a28 4153 4e31 5f54 494d 4520  e_adj(ASN1_TIME 
00392e0: 2a73 2c20 6c6f 6e67 2061 646a 293b 0a0a  *s, long adj);..
00392f0: 636f 6e73 7420 6368 6172 202a 2058 3530  const char * X50
0039300: 395f 6765 745f 6465 6661 756c 745f 6365  9_get_default_ce
0039310: 7274 5f61 7265 6128 766f 6964 2029 3b0a  rt_area(void );.
0039320: 636f 6e73 7420 6368 6172 202a 2058 3530  const char * X50
0039330: 395f 6765 745f 6465 6661 756c 745f 6365  9_get_default_ce
0039340: 7274 5f64 6972 2876 6f69 6420 293b 0a63  rt_dir(void );.c
0039350: 6f6e 7374 2063 6861 7220 2a20 5835 3039  onst char * X509
0039360: 5f67 6574 5f64 6566 6175 6c74 5f63 6572  _get_default_cer
0039370: 745f 6669 6c65 2876 6f69 6420 293b 0a63  t_file(void );.c
0039380: 6f6e 7374 2063 6861 7220 2a20 5835 3039  onst char * X509
0039390: 5f67 6574 5f64 6566 6175 6c74 5f63 6572  _get_default_cer
00393a0: 745f 6469 725f 656e 7628 766f 6964 2029  t_dir_env(void )
00393b0: 3b0a 636f 6e73 7420 6368 6172 202a 2058  ;.const char * X
00393c0: 3530 395f 6765 745f 6465 6661 756c 745f  509_get_default_
00393d0: 6365 7274 5f66 696c 655f 656e 7628 766f  cert_file_env(vo
00393e0: 6964 2029 3b0a 636f 6e73 7420 6368 6172  id );.const char
00393f0: 202a 2058 3530 395f 6765 745f 6465 6661   * X509_get_defa
0039400: 756c 745f 7072 6976 6174 655f 6469 7228  ult_private_dir(
0039410: 766f 6964 2029 3b0a 0a58 3530 395f 5245  void );..X509_RE
0039420: 5120 2a20 5835 3039 5f74 6f5f 5835 3039  Q * X509_to_X509
0039430: 5f52 4551 2858 3530 3920 2a78 2c20 4556  _REQ(X509 *x, EV
0039440: 505f 504b 4559 202a 706b 6579 2c20 636f  P_PKEY *pkey, co
0039450: 6e73 7420 4556 505f 4d44 202a 6d64 293b  nst EVP_MD *md);
0039460: 0a58 3530 3920 2a20 5835 3039 5f52 4551  .X509 * X509_REQ
0039470: 5f74 6f5f 5835 3039 2858 3530 395f 5245  _to_X509(X509_RE
0039480: 5120 2a72 2c20 696e 7420 6461 7973 2c45  Q *r, int days,E
0039490: 5650 5f50 4b45 5920 2a70 6b65 7929 3b0a  VP_PKEY *pkey);.
00394a0: 0a58 3530 395f 414c 474f 5220 2a58 3530  .X509_ALGOR *X50
00394b0: 395f 414c 474f 525f 6e65 7728 766f 6964  9_ALGOR_new(void
00394c0: 293b 2076 6f69 6420 5835 3039 5f41 4c47  ); void X509_ALG
00394d0: 4f52 5f66 7265 6528 5835 3039 5f41 4c47  OR_free(X509_ALG
00394e0: 4f52 202a 6129 3b20 5835 3039 5f41 4c47  OR *a); X509_ALG
00394f0: 4f52 202a 6432 695f 5835 3039 5f41 4c47  OR *d2i_X509_ALG
0039500: 4f52 2858 3530 395f 414c 474f 5220 2a2a  OR(X509_ALGOR **
0039510: 612c 2063 6f6e 7374 2075 6e73 6967 6e65  a, const unsigne
0039520: 6420 6368 6172 202a 2a69 6e2c 206c 6f6e  d char **in, lon
0039530: 6720 6c65 6e29 3b20 696e 7420 6932 645f  g len); int i2d_
0039540: 5835 3039 5f41 4c47 4f52 2858 3530 395f  X509_ALGOR(X509_
0039550: 414c 474f 5220 2a61 2c20 756e 7369 676e  ALGOR *a, unsign
0039560: 6564 2063 6861 7220 2a2a 6f75 7429 3b20  ed char **out); 
0039570: 6578 7465 726e 2063 6f6e 7374 2041 534e  extern const ASN
0039580: 315f 4954 454d 2058 3530 395f 414c 474f  1_ITEM X509_ALGO
0039590: 525f 6974 3b0a 5835 3039 5f41 4c47 4f52  R_it;.X509_ALGOR
00395a0: 5320 2a64 3269 5f58 3530 395f 414c 474f  S *d2i_X509_ALGO
00395b0: 5253 2858 3530 395f 414c 474f 5253 202a  RS(X509_ALGORS *
00395c0: 2a61 2c20 636f 6e73 7420 756e 7369 676e  *a, const unsign
00395d0: 6564 2063 6861 7220 2a2a 696e 2c20 6c6f  ed char **in, lo
00395e0: 6e67 206c 656e 293b 2069 6e74 2069 3264  ng len); int i2d
00395f0: 5f58 3530 395f 414c 474f 5253 2858 3530  _X509_ALGORS(X50
0039600: 395f 414c 474f 5253 202a 612c 2075 6e73  9_ALGORS *a, uns
0039610: 6967 6e65 6420 6368 6172 202a 2a6f 7574  igned char **out
0039620: 293b 2065 7874 6572 6e20 636f 6e73 7420  ); extern const 
0039630: 4153 4e31 5f49 5445 4d20 5835 3039 5f41  ASN1_ITEM X509_A
0039640: 4c47 4f52 535f 6974 3b0a 5835 3039 5f56  LGORS_it;.X509_V
0039650: 414c 202a 5835 3039 5f56 414c 5f6e 6577  AL *X509_VAL_new
0039660: 2876 6f69 6429 3b20 766f 6964 2058 3530  (void); void X50
0039670: 395f 5641 4c5f 6672 6565 2858 3530 395f  9_VAL_free(X509_
0039680: 5641 4c20 2a61 293b 2058 3530 395f 5641  VAL *a); X509_VA
0039690: 4c20 2a64 3269 5f58 3530 395f 5641 4c28  L *d2i_X509_VAL(
00396a0: 5835 3039 5f56 414c 202a 2a61 2c20 636f  X509_VAL **a, co
00396b0: 6e73 7420 756e 7369 676e 6564 2063 6861  nst unsigned cha
00396c0: 7220 2a2a 696e 2c20 6c6f 6e67 206c 656e  r **in, long len
00396d0: 293b 2069 6e74 2069 3264 5f58 3530 395f  ); int i2d_X509_
00396e0: 5641 4c28 5835 3039 5f56 414c 202a 612c  VAL(X509_VAL *a,
00396f0: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
0039700: 2a6f 7574 293b 2065 7874 6572 6e20 636f  *out); extern co
0039710: 6e73 7420 4153 4e31 5f49 5445 4d20 5835  nst ASN1_ITEM X5
0039720: 3039 5f56 414c 5f69 743b 0a0a 5835 3039  09_VAL_it;..X509
0039730: 5f50 5542 4b45 5920 2a58 3530 395f 5055  _PUBKEY *X509_PU
0039740: 424b 4559 5f6e 6577 2876 6f69 6429 3b20  BKEY_new(void); 
0039750: 766f 6964 2058 3530 395f 5055 424b 4559  void X509_PUBKEY
0039760: 5f66 7265 6528 5835 3039 5f50 5542 4b45  _free(X509_PUBKE
0039770: 5920 2a61 293b 2058 3530 395f 5055 424b  Y *a); X509_PUBK
0039780: 4559 202a 6432 695f 5835 3039 5f50 5542  EY *d2i_X509_PUB
0039790: 4b45 5928 5835 3039 5f50 5542 4b45 5920  KEY(X509_PUBKEY 
00397a0: 2a2a 612c 2063 6f6e 7374 2075 6e73 6967  **a, const unsig
00397b0: 6e65 6420 6368 6172 202a 2a69 6e2c 206c  ned char **in, l
00397c0: 6f6e 6720 6c65 6e29 3b20 696e 7420 6932  ong len); int i2
00397d0: 645f 5835 3039 5f50 5542 4b45 5928 5835  d_X509_PUBKEY(X5
00397e0: 3039 5f50 5542 4b45 5920 2a61 2c20 756e  09_PUBKEY *a, un
00397f0: 7369 676e 6564 2063 6861 7220 2a2a 6f75  signed char **ou
0039800: 7429 3b20 6578 7465 726e 2063 6f6e 7374  t); extern const
0039810: 2041 534e 315f 4954 454d 2058 3530 395f   ASN1_ITEM X509_
0039820: 5055 424b 4559 5f69 743b 0a0a 696e 7420  PUBKEY_it;..int 
0039830: 5835 3039 5f50 5542 4b45 595f 7365 7428  X509_PUBKEY_set(
0039840: 5835 3039 5f50 5542 4b45 5920 2a2a 782c  X509_PUBKEY **x,
0039850: 2045 5650 5f50 4b45 5920 2a70 6b65 7929   EVP_PKEY *pkey)
0039860: 3b0a 4556 505f 504b 4559 202a 2058 3530  ;.EVP_PKEY * X50
0039870: 395f 5055 424b 4559 5f67 6574 2858 3530  9_PUBKEY_get(X50
0039880: 395f 5055 424b 4559 202a 6b65 7929 3b0a  9_PUBKEY *key);.
0039890: 696e 7420 5835 3039 5f67 6574 5f70 7562  int X509_get_pub
00398a0: 6b65 795f 7061 7261 6d65 7465 7273 2845  key_parameters(E
00398b0: 5650 5f50 4b45 5920 2a70 6b65 792c 0a20  VP_PKEY *pkey,. 
00398c0: 2020 2020 2020 2073 7472 7563 7420 7374         struct st
00398d0: 6163 6b5f 7374 5f58 3530 3920 2a63 6861  ack_st_X509 *cha
00398e0: 696e 293b 0a69 6e74 2069 3264 5f50 5542  in);.int i2d_PUB
00398f0: 4b45 5928 4556 505f 504b 4559 202a 612c  KEY(EVP_PKEY *a,
0039900: 756e 7369 676e 6564 2063 6861 7220 2a2a  unsigned char **
0039910: 7070 293b 0a45 5650 5f50 4b45 5920 2a20  pp);.EVP_PKEY * 
0039920: 6432 695f 5055 424b 4559 2845 5650 5f50  d2i_PUBKEY(EVP_P
0039930: 4b45 5920 2a2a 612c 636f 6e73 7420 756e  KEY **a,const un
0039940: 7369 676e 6564 2063 6861 7220 2a2a 7070  signed char **pp
0039950: 2c0a 2020 206c 6f6e 6720 6c65 6e67 7468  ,.   long length
0039960: 293b 0a0a 696e 7420 6932 645f 5253 415f  );..int i2d_RSA_
0039970: 5055 424b 4559 2852 5341 202a 612c 756e  PUBKEY(RSA *a,un
0039980: 7369 676e 6564 2063 6861 7220 2a2a 7070  signed char **pp
0039990: 293b 0a52 5341 202a 2064 3269 5f52 5341  );.RSA * d2i_RSA
00399a0: 5f50 5542 4b45 5928 5253 4120 2a2a 612c  _PUBKEY(RSA **a,
00399b0: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
00399c0: 6861 7220 2a2a 7070 2c0a 2020 206c 6f6e  har **pp,.   lon
00399d0: 6720 6c65 6e67 7468 293b 0a0a 0a69 6e74  g length);...int
00399e0: 2069 3264 5f44 5341 5f50 5542 4b45 5928   i2d_DSA_PUBKEY(
00399f0: 4453 4120 2a61 2c75 6e73 6967 6e65 6420  DSA *a,unsigned 
0039a00: 6368 6172 202a 2a70 7029 3b0a 4453 4120  char **pp);.DSA 
0039a10: 2a20 6432 695f 4453 415f 5055 424b 4559  * d2i_DSA_PUBKEY
0039a20: 2844 5341 202a 2a61 2c63 6f6e 7374 2075  (DSA **a,const u
0039a30: 6e73 6967 6e65 6420 6368 6172 202a 2a70  nsigned char **p
0039a40: 702c 0a20 2020 6c6f 6e67 206c 656e 6774  p,.   long lengt
0039a50: 6829 3b0a 0a0a 696e 7420 6932 645f 4543  h);...int i2d_EC
0039a60: 5f50 5542 4b45 5928 4543 5f4b 4559 202a  _PUBKEY(EC_KEY *
0039a70: 612c 2075 6e73 6967 6e65 6420 6368 6172  a, unsigned char
0039a80: 202a 2a70 7029 3b0a 4543 5f4b 4559 202a   **pp);.EC_KEY *
0039a90: 6432 695f 4543 5f50 5542 4b45 5928 4543  d2i_EC_PUBKEY(EC
0039aa0: 5f4b 4559 202a 2a61 2c20 636f 6e73 7420  _KEY **a, const 
0039ab0: 756e 7369 676e 6564 2063 6861 7220 2a2a  unsigned char **
0039ac0: 7070 2c0a 2020 206c 6f6e 6720 6c65 6e67  pp,.   long leng
0039ad0: 7468 293b 0a0a 0a58 3530 395f 5349 4720  th);...X509_SIG 
0039ae0: 2a58 3530 395f 5349 475f 6e65 7728 766f  *X509_SIG_new(vo
0039af0: 6964 293b 2076 6f69 6420 5835 3039 5f53  id); void X509_S
0039b00: 4947 5f66 7265 6528 5835 3039 5f53 4947  IG_free(X509_SIG
0039b10: 202a 6129 3b20 5835 3039 5f53 4947 202a   *a); X509_SIG *
0039b20: 6432 695f 5835 3039 5f53 4947 2858 3530  d2i_X509_SIG(X50
0039b30: 395f 5349 4720 2a2a 612c 2063 6f6e 7374  9_SIG **a, const
0039b40: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
0039b50: 2a69 6e2c 206c 6f6e 6720 6c65 6e29 3b20  *in, long len); 
0039b60: 696e 7420 6932 645f 5835 3039 5f53 4947  int i2d_X509_SIG
0039b70: 2858 3530 395f 5349 4720 2a61 2c20 756e  (X509_SIG *a, un
0039b80: 7369 676e 6564 2063 6861 7220 2a2a 6f75  signed char **ou
0039b90: 7429 3b20 6578 7465 726e 2063 6f6e 7374  t); extern const
0039ba0: 2041 534e 315f 4954 454d 2058 3530 395f   ASN1_ITEM X509_
0039bb0: 5349 475f 6974 3b0a 5835 3039 5f52 4551  SIG_it;.X509_REQ
0039bc0: 5f49 4e46 4f20 2a58 3530 395f 5245 515f  _INFO *X509_REQ_
0039bd0: 494e 464f 5f6e 6577 2876 6f69 6429 3b20  INFO_new(void); 
0039be0: 766f 6964 2058 3530 395f 5245 515f 494e  void X509_REQ_IN
0039bf0: 464f 5f66 7265 6528 5835 3039 5f52 4551  FO_free(X509_REQ
0039c00: 5f49 4e46 4f20 2a61 293b 2058 3530 395f  _INFO *a); X509_
0039c10: 5245 515f 494e 464f 202a 6432 695f 5835  REQ_INFO *d2i_X5
0039c20: 3039 5f52 4551 5f49 4e46 4f28 5835 3039  09_REQ_INFO(X509
0039c30: 5f52 4551 5f49 4e46 4f20 2a2a 612c 2063  _REQ_INFO **a, c
0039c40: 6f6e 7374 2075 6e73 6967 6e65 6420 6368  onst unsigned ch
0039c50: 6172 202a 2a69 6e2c 206c 6f6e 6720 6c65  ar **in, long le
0039c60: 6e29 3b20 696e 7420 6932 645f 5835 3039  n); int i2d_X509
0039c70: 5f52 4551 5f49 4e46 4f28 5835 3039 5f52  _REQ_INFO(X509_R
0039c80: 4551 5f49 4e46 4f20 2a61 2c20 756e 7369  EQ_INFO *a, unsi
0039c90: 676e 6564 2063 6861 7220 2a2a 6f75 7429  gned char **out)
0039ca0: 3b20 6578 7465 726e 2063 6f6e 7374 2041  ; extern const A
0039cb0: 534e 315f 4954 454d 2058 3530 395f 5245  SN1_ITEM X509_RE
0039cc0: 515f 494e 464f 5f69 743b 0a58 3530 395f  Q_INFO_it;.X509_
0039cd0: 5245 5120 2a58 3530 395f 5245 515f 6e65  REQ *X509_REQ_ne
0039ce0: 7728 766f 6964 293b 2076 6f69 6420 5835  w(void); void X5
0039cf0: 3039 5f52 4551 5f66 7265 6528 5835 3039  09_REQ_free(X509
0039d00: 5f52 4551 202a 6129 3b20 5835 3039 5f52  _REQ *a); X509_R
0039d10: 4551 202a 6432 695f 5835 3039 5f52 4551  EQ *d2i_X509_REQ
0039d20: 2858 3530 395f 5245 5120 2a2a 612c 2063  (X509_REQ **a, c
0039d30: 6f6e 7374 2075 6e73 6967 6e65 6420 6368  onst unsigned ch
0039d40: 6172 202a 2a69 6e2c 206c 6f6e 6720 6c65  ar **in, long le
0039d50: 6e29 3b20 696e 7420 6932 645f 5835 3039  n); int i2d_X509
0039d60: 5f52 4551 2858 3530 395f 5245 5120 2a61  _REQ(X509_REQ *a
0039d70: 2c20 756e 7369 676e 6564 2063 6861 7220  , unsigned char 
0039d80: 2a2a 6f75 7429 3b20 6578 7465 726e 2063  **out); extern c
0039d90: 6f6e 7374 2041 534e 315f 4954 454d 2058  onst ASN1_ITEM X
0039da0: 3530 395f 5245 515f 6974 3b0a 0a58 3530  509_REQ_it;..X50
0039db0: 395f 4154 5452 4942 5554 4520 2a58 3530  9_ATTRIBUTE *X50
0039dc0: 395f 4154 5452 4942 5554 455f 6e65 7728  9_ATTRIBUTE_new(
0039dd0: 766f 6964 293b 2076 6f69 6420 5835 3039  void); void X509
0039de0: 5f41 5454 5249 4255 5445 5f66 7265 6528  _ATTRIBUTE_free(
0039df0: 5835 3039 5f41 5454 5249 4255 5445 202a  X509_ATTRIBUTE *
0039e00: 6129 3b20 5835 3039 5f41 5454 5249 4255  a); X509_ATTRIBU
0039e10: 5445 202a 6432 695f 5835 3039 5f41 5454  TE *d2i_X509_ATT
0039e20: 5249 4255 5445 2858 3530 395f 4154 5452  RIBUTE(X509_ATTR
0039e30: 4942 5554 4520 2a2a 612c 2063 6f6e 7374  IBUTE **a, const
0039e40: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
0039e50: 2a69 6e2c 206c 6f6e 6720 6c65 6e29 3b20  *in, long len); 
0039e60: 696e 7420 6932 645f 5835 3039 5f41 5454  int i2d_X509_ATT
0039e70: 5249 4255 5445 2858 3530 395f 4154 5452  RIBUTE(X509_ATTR
0039e80: 4942 5554 4520 2a61 2c20 756e 7369 676e  IBUTE *a, unsign
0039e90: 6564 2063 6861 7220 2a2a 6f75 7429 3b20  ed char **out); 
0039ea0: 6578 7465 726e 2063 6f6e 7374 2041 534e  extern const ASN
0039eb0: 315f 4954 454d 2058 3530 395f 4154 5452  1_ITEM X509_ATTR
0039ec0: 4942 5554 455f 6974 3b0a 5835 3039 5f41  IBUTE_it;.X509_A
0039ed0: 5454 5249 4255 5445 202a 5835 3039 5f41  TTRIBUTE *X509_A
0039ee0: 5454 5249 4255 5445 5f63 7265 6174 6528  TTRIBUTE_create(
0039ef0: 696e 7420 6e69 642c 2069 6e74 2061 7472  int nid, int atr
0039f00: 7479 7065 2c20 766f 6964 202a 7661 6c75  type, void *valu
0039f10: 6529 3b0a 0a58 3530 395f 4558 5445 4e53  e);..X509_EXTENS
0039f20: 494f 4e20 2a58 3530 395f 4558 5445 4e53  ION *X509_EXTENS
0039f30: 494f 4e5f 6e65 7728 766f 6964 293b 2076  ION_new(void); v
0039f40: 6f69 6420 5835 3039 5f45 5854 454e 5349  oid X509_EXTENSI
0039f50: 4f4e 5f66 7265 6528 5835 3039 5f45 5854  ON_free(X509_EXT
0039f60: 454e 5349 4f4e 202a 6129 3b20 5835 3039  ENSION *a); X509
0039f70: 5f45 5854 454e 5349 4f4e 202a 6432 695f  _EXTENSION *d2i_
0039f80: 5835 3039 5f45 5854 454e 5349 4f4e 2858  X509_EXTENSION(X
0039f90: 3530 395f 4558 5445 4e53 494f 4e20 2a2a  509_EXTENSION **
0039fa0: 612c 2063 6f6e 7374 2075 6e73 6967 6e65  a, const unsigne
0039fb0: 6420 6368 6172 202a 2a69 6e2c 206c 6f6e  d char **in, lon
0039fc0: 6720 6c65 6e29 3b20 696e 7420 6932 645f  g len); int i2d_
0039fd0: 5835 3039 5f45 5854 454e 5349 4f4e 2858  X509_EXTENSION(X
0039fe0: 3530 395f 4558 5445 4e53 494f 4e20 2a61  509_EXTENSION *a
0039ff0: 2c20 756e 7369 676e 6564 2063 6861 7220  , unsigned char 
003a000: 2a2a 6f75 7429 3b20 6578 7465 726e 2063  **out); extern c
003a010: 6f6e 7374 2041 534e 315f 4954 454d 2058  onst ASN1_ITEM X
003a020: 3530 395f 4558 5445 4e53 494f 4e5f 6974  509_EXTENSION_it
003a030: 3b0a 5835 3039 5f45 5854 454e 5349 4f4e  ;.X509_EXTENSION
003a040: 5320 2a64 3269 5f58 3530 395f 4558 5445  S *d2i_X509_EXTE
003a050: 4e53 494f 4e53 2858 3530 395f 4558 5445  NSIONS(X509_EXTE
003a060: 4e53 494f 4e53 202a 2a61 2c20 636f 6e73  NSIONS **a, cons
003a070: 7420 756e 7369 676e 6564 2063 6861 7220  t unsigned char 
003a080: 2a2a 696e 2c20 6c6f 6e67 206c 656e 293b  **in, long len);
003a090: 2069 6e74 2069 3264 5f58 3530 395f 4558   int i2d_X509_EX
003a0a0: 5445 4e53 494f 4e53 2858 3530 395f 4558  TENSIONS(X509_EX
003a0b0: 5445 4e53 494f 4e53 202a 612c 2075 6e73  TENSIONS *a, uns
003a0c0: 6967 6e65 6420 6368 6172 202a 2a6f 7574  igned char **out
003a0d0: 293b 2065 7874 6572 6e20 636f 6e73 7420  ); extern const 
003a0e0: 4153 4e31 5f49 5445 4d20 5835 3039 5f45  ASN1_ITEM X509_E
003a0f0: 5854 454e 5349 4f4e 535f 6974 3b0a 0a58  XTENSIONS_it;..X
003a100: 3530 395f 4e41 4d45 5f45 4e54 5259 202a  509_NAME_ENTRY *
003a110: 5835 3039 5f4e 414d 455f 454e 5452 595f  X509_NAME_ENTRY_
003a120: 6e65 7728 766f 6964 293b 2076 6f69 6420  new(void); void 
003a130: 5835 3039 5f4e 414d 455f 454e 5452 595f  X509_NAME_ENTRY_
003a140: 6672 6565 2858 3530 395f 4e41 4d45 5f45  free(X509_NAME_E
003a150: 4e54 5259 202a 6129 3b20 5835 3039 5f4e  NTRY *a); X509_N
003a160: 414d 455f 454e 5452 5920 2a64 3269 5f58  AME_ENTRY *d2i_X
003a170: 3530 395f 4e41 4d45 5f45 4e54 5259 2858  509_NAME_ENTRY(X
003a180: 3530 395f 4e41 4d45 5f45 4e54 5259 202a  509_NAME_ENTRY *
003a190: 2a61 2c20 636f 6e73 7420 756e 7369 676e  *a, const unsign
003a1a0: 6564 2063 6861 7220 2a2a 696e 2c20 6c6f  ed char **in, lo
003a1b0: 6e67 206c 656e 293b 2069 6e74 2069 3264  ng len); int i2d
003a1c0: 5f58 3530 395f 4e41 4d45 5f45 4e54 5259  _X509_NAME_ENTRY
003a1d0: 2858 3530 395f 4e41 4d45 5f45 4e54 5259  (X509_NAME_ENTRY
003a1e0: 202a 612c 2075 6e73 6967 6e65 6420 6368   *a, unsigned ch
003a1f0: 6172 202a 2a6f 7574 293b 2065 7874 6572  ar **out); exter
003a200: 6e20 636f 6e73 7420 4153 4e31 5f49 5445  n const ASN1_ITE
003a210: 4d20 5835 3039 5f4e 414d 455f 454e 5452  M X509_NAME_ENTR
003a220: 595f 6974 3b0a 0a58 3530 395f 4e41 4d45  Y_it;..X509_NAME
003a230: 202a 5835 3039 5f4e 414d 455f 6e65 7728   *X509_NAME_new(
003a240: 766f 6964 293b 2076 6f69 6420 5835 3039  void); void X509
003a250: 5f4e 414d 455f 6672 6565 2858 3530 395f  _NAME_free(X509_
003a260: 4e41 4d45 202a 6129 3b20 5835 3039 5f4e  NAME *a); X509_N
003a270: 414d 4520 2a64 3269 5f58 3530 395f 4e41  AME *d2i_X509_NA
003a280: 4d45 2858 3530 395f 4e41 4d45 202a 2a61  ME(X509_NAME **a
003a290: 2c20 636f 6e73 7420 756e 7369 676e 6564  , const unsigned
003a2a0: 2063 6861 7220 2a2a 696e 2c20 6c6f 6e67   char **in, long
003a2b0: 206c 656e 293b 2069 6e74 2069 3264 5f58   len); int i2d_X
003a2c0: 3530 395f 4e41 4d45 2858 3530 395f 4e41  509_NAME(X509_NA
003a2d0: 4d45 202a 612c 2075 6e73 6967 6e65 6420  ME *a, unsigned 
003a2e0: 6368 6172 202a 2a6f 7574 293b 2065 7874  char **out); ext
003a2f0: 6572 6e20 636f 6e73 7420 4153 4e31 5f49  ern const ASN1_I
003a300: 5445 4d20 5835 3039 5f4e 414d 455f 6974  TEM X509_NAME_it
003a310: 3b0a 0a69 6e74 2058 3530 395f 4e41 4d45  ;..int X509_NAME
003a320: 5f73 6574 2858 3530 395f 4e41 4d45 202a  _set(X509_NAME *
003a330: 2a78 6e2c 2058 3530 395f 4e41 4d45 202a  *xn, X509_NAME *
003a340: 6e61 6d65 293b 0a0a 5835 3039 5f43 494e  name);..X509_CIN
003a350: 4620 2a58 3530 395f 4349 4e46 5f6e 6577  F *X509_CINF_new
003a360: 2876 6f69 6429 3b20 766f 6964 2058 3530  (void); void X50
003a370: 395f 4349 4e46 5f66 7265 6528 5835 3039  9_CINF_free(X509
003a380: 5f43 494e 4620 2a61 293b 2058 3530 395f  _CINF *a); X509_
003a390: 4349 4e46 202a 6432 695f 5835 3039 5f43  CINF *d2i_X509_C
003a3a0: 494e 4628 5835 3039 5f43 494e 4620 2a2a  INF(X509_CINF **
003a3b0: 612c 2063 6f6e 7374 2075 6e73 6967 6e65  a, const unsigne
003a3c0: 6420 6368 6172 202a 2a69 6e2c 206c 6f6e  d char **in, lon
003a3d0: 6720 6c65 6e29 3b20 696e 7420 6932 645f  g len); int i2d_
003a3e0: 5835 3039 5f43 494e 4628 5835 3039 5f43  X509_CINF(X509_C
003a3f0: 494e 4620 2a61 2c20 756e 7369 676e 6564  INF *a, unsigned
003a400: 2063 6861 7220 2a2a 6f75 7429 3b20 6578   char **out); ex
003a410: 7465 726e 2063 6f6e 7374 2041 534e 315f  tern const ASN1_
003a420: 4954 454d 2058 3530 395f 4349 4e46 5f69  ITEM X509_CINF_i
003a430: 743b 0a0a 5835 3039 202a 5835 3039 5f6e  t;..X509 *X509_n
003a440: 6577 2876 6f69 6429 3b20 766f 6964 2058  ew(void); void X
003a450: 3530 395f 6672 6565 2858 3530 3920 2a61  509_free(X509 *a
003a460: 293b 2058 3530 3920 2a64 3269 5f58 3530  ); X509 *d2i_X50
003a470: 3928 5835 3039 202a 2a61 2c20 636f 6e73  9(X509 **a, cons
003a480: 7420 756e 7369 676e 6564 2063 6861 7220  t unsigned char 
003a490: 2a2a 696e 2c20 6c6f 6e67 206c 656e 293b  **in, long len);
003a4a0: 2069 6e74 2069 3264 5f58 3530 3928 5835   int i2d_X509(X5
003a4b0: 3039 202a 612c 2075 6e73 6967 6e65 6420  09 *a, unsigned 
003a4c0: 6368 6172 202a 2a6f 7574 293b 2065 7874  char **out); ext
003a4d0: 6572 6e20 636f 6e73 7420 4153 4e31 5f49  ern const ASN1_I
003a4e0: 5445 4d20 5835 3039 5f69 743b 0a58 3530  TEM X509_it;.X50
003a4f0: 395f 4345 5254 5f41 5558 202a 5835 3039  9_CERT_AUX *X509
003a500: 5f43 4552 545f 4155 585f 6e65 7728 766f  _CERT_AUX_new(vo
003a510: 6964 293b 2076 6f69 6420 5835 3039 5f43  id); void X509_C
003a520: 4552 545f 4155 585f 6672 6565 2858 3530  ERT_AUX_free(X50
003a530: 395f 4345 5254 5f41 5558 202a 6129 3b20  9_CERT_AUX *a); 
003a540: 5835 3039 5f43 4552 545f 4155 5820 2a64  X509_CERT_AUX *d
003a550: 3269 5f58 3530 395f 4345 5254 5f41 5558  2i_X509_CERT_AUX
003a560: 2858 3530 395f 4345 5254 5f41 5558 202a  (X509_CERT_AUX *
003a570: 2a61 2c20 636f 6e73 7420 756e 7369 676e  *a, const unsign
003a580: 6564 2063 6861 7220 2a2a 696e 2c20 6c6f  ed char **in, lo
003a590: 6e67 206c 656e 293b 2069 6e74 2069 3264  ng len); int i2d
003a5a0: 5f58 3530 395f 4345 5254 5f41 5558 2858  _X509_CERT_AUX(X
003a5b0: 3530 395f 4345 5254 5f41 5558 202a 612c  509_CERT_AUX *a,
003a5c0: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
003a5d0: 2a6f 7574 293b 2065 7874 6572 6e20 636f  *out); extern co
003a5e0: 6e73 7420 4153 4e31 5f49 5445 4d20 5835  nst ASN1_ITEM X5
003a5f0: 3039 5f43 4552 545f 4155 585f 6974 3b0a  09_CERT_AUX_it;.
003a600: 0a58 3530 395f 4345 5254 5f50 4149 5220  .X509_CERT_PAIR 
003a610: 2a58 3530 395f 4345 5254 5f50 4149 525f  *X509_CERT_PAIR_
003a620: 6e65 7728 766f 6964 293b 2076 6f69 6420  new(void); void 
003a630: 5835 3039 5f43 4552 545f 5041 4952 5f66  X509_CERT_PAIR_f
003a640: 7265 6528 5835 3039 5f43 4552 545f 5041  ree(X509_CERT_PA
003a650: 4952 202a 6129 3b20 5835 3039 5f43 4552  IR *a); X509_CER
003a660: 545f 5041 4952 202a 6432 695f 5835 3039  T_PAIR *d2i_X509
003a670: 5f43 4552 545f 5041 4952 2858 3530 395f  _CERT_PAIR(X509_
003a680: 4345 5254 5f50 4149 5220 2a2a 612c 2063  CERT_PAIR **a, c
003a690: 6f6e 7374 2075 6e73 6967 6e65 6420 6368  onst unsigned ch
003a6a0: 6172 202a 2a69 6e2c 206c 6f6e 6720 6c65  ar **in, long le
003a6b0: 6e29 3b20 696e 7420 6932 645f 5835 3039  n); int i2d_X509
003a6c0: 5f43 4552 545f 5041 4952 2858 3530 395f  _CERT_PAIR(X509_
003a6d0: 4345 5254 5f50 4149 5220 2a61 2c20 756e  CERT_PAIR *a, un
003a6e0: 7369 676e 6564 2063 6861 7220 2a2a 6f75  signed char **ou
003a6f0: 7429 3b20 6578 7465 726e 2063 6f6e 7374  t); extern const
003a700: 2041 534e 315f 4954 454d 2058 3530 395f   ASN1_ITEM X509_
003a710: 4345 5254 5f50 4149 525f 6974 3b0a 0a69  CERT_PAIR_it;..i
003a720: 6e74 2058 3530 395f 6765 745f 6578 5f6e  nt X509_get_ex_n
003a730: 6577 5f69 6e64 6578 286c 6f6e 6720 6172  ew_index(long ar
003a740: 676c 2c20 766f 6964 202a 6172 6770 2c20  gl, void *argp, 
003a750: 4352 5950 544f 5f45 585f 6e65 7720 2a6e  CRYPTO_EX_new *n
003a760: 6577 5f66 756e 632c 0a20 2020 2020 2043  ew_func,.      C
003a770: 5259 5054 4f5f 4558 5f64 7570 202a 6475  RYPTO_EX_dup *du
003a780: 705f 6675 6e63 2c20 4352 5950 544f 5f45  p_func, CRYPTO_E
003a790: 585f 6672 6565 202a 6672 6565 5f66 756e  X_free *free_fun
003a7a0: 6329 3b0a 696e 7420 5835 3039 5f73 6574  c);.int X509_set
003a7b0: 5f65 785f 6461 7461 2858 3530 3920 2a72  _ex_data(X509 *r
003a7c0: 2c20 696e 7420 6964 782c 2076 6f69 6420  , int idx, void 
003a7d0: 2a61 7267 293b 0a76 6f69 6420 2a58 3530  *arg);.void *X50
003a7e0: 395f 6765 745f 6578 5f64 6174 6128 5835  9_get_ex_data(X5
003a7f0: 3039 202a 722c 2069 6e74 2069 6478 293b  09 *r, int idx);
003a800: 0a69 6e74 2069 3264 5f58 3530 395f 4155  .int i2d_X509_AU
003a810: 5828 5835 3039 202a 612c 756e 7369 676e  X(X509 *a,unsign
003a820: 6564 2063 6861 7220 2a2a 7070 293b 0a58  ed char **pp);.X
003a830: 3530 3920 2a20 6432 695f 5835 3039 5f41  509 * d2i_X509_A
003a840: 5558 2858 3530 3920 2a2a 612c 636f 6e73  UX(X509 **a,cons
003a850: 7420 756e 7369 676e 6564 2063 6861 7220  t unsigned char 
003a860: 2a2a 7070 2c6c 6f6e 6720 6c65 6e67 7468  **pp,long length
003a870: 293b 0a0a 696e 7420 5835 3039 5f61 6c69  );..int X509_ali
003a880: 6173 5f73 6574 3128 5835 3039 202a 782c  as_set1(X509 *x,
003a890: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
003a8a0: 6e61 6d65 2c20 696e 7420 6c65 6e29 3b0a  name, int len);.
003a8b0: 696e 7420 5835 3039 5f6b 6579 6964 5f73  int X509_keyid_s
003a8c0: 6574 3128 5835 3039 202a 782c 2075 6e73  et1(X509 *x, uns
003a8d0: 6967 6e65 6420 6368 6172 202a 6964 2c20  igned char *id, 
003a8e0: 696e 7420 6c65 6e29 3b0a 756e 7369 676e  int len);.unsign
003a8f0: 6564 2063 6861 7220 2a20 5835 3039 5f61  ed char * X509_a
003a900: 6c69 6173 5f67 6574 3028 5835 3039 202a  lias_get0(X509 *
003a910: 782c 2069 6e74 202a 6c65 6e29 3b0a 756e  x, int *len);.un
003a920: 7369 676e 6564 2063 6861 7220 2a20 5835  signed char * X5
003a930: 3039 5f6b 6579 6964 5f67 6574 3028 5835  09_keyid_get0(X5
003a940: 3039 202a 782c 2069 6e74 202a 6c65 6e29  09 *x, int *len)
003a950: 3b0a 696e 7420 282a 5835 3039 5f54 5255  ;.int (*X509_TRU
003a960: 5354 5f73 6574 5f64 6566 6175 6c74 2869  ST_set_default(i
003a970: 6e74 2028 2a74 7275 7374 2928 696e 7420  nt (*trust)(int 
003a980: 2c20 5835 3039 202a 2c20 696e 7429 2929  , X509 *, int)))
003a990: 2869 6e74 2c20 5835 3039 202a 2c20 696e  (int, X509 *, in
003a9a0: 7429 3b0a 696e 7420 5835 3039 5f54 5255  t);.int X509_TRU
003a9b0: 5354 5f73 6574 2869 6e74 202a 742c 2069  ST_set(int *t, i
003a9c0: 6e74 2074 7275 7374 293b 0a69 6e74 2058  nt trust);.int X
003a9d0: 3530 395f 6164 6431 5f74 7275 7374 5f6f  509_add1_trust_o
003a9e0: 626a 6563 7428 5835 3039 202a 782c 2041  bject(X509 *x, A
003a9f0: 534e 315f 4f42 4a45 4354 202a 6f62 6a29  SN1_OBJECT *obj)
003aa00: 3b0a 696e 7420 5835 3039 5f61 6464 315f  ;.int X509_add1_
003aa10: 7265 6a65 6374 5f6f 626a 6563 7428 5835  reject_object(X5
003aa20: 3039 202a 782c 2041 534e 315f 4f42 4a45  09 *x, ASN1_OBJE
003aa30: 4354 202a 6f62 6a29 3b0a 766f 6964 2058  CT *obj);.void X
003aa40: 3530 395f 7472 7573 745f 636c 6561 7228  509_trust_clear(
003aa50: 5835 3039 202a 7829 3b0a 766f 6964 2058  X509 *x);.void X
003aa60: 3530 395f 7265 6a65 6374 5f63 6c65 6172  509_reject_clear
003aa70: 2858 3530 3920 2a78 293b 0a0a 5835 3039  (X509 *x);..X509
003aa80: 5f52 4556 4f4b 4544 202a 5835 3039 5f52  _REVOKED *X509_R
003aa90: 4556 4f4b 4544 5f6e 6577 2876 6f69 6429  EVOKED_new(void)
003aaa0: 3b20 766f 6964 2058 3530 395f 5245 564f  ; void X509_REVO
003aab0: 4b45 445f 6672 6565 2858 3530 395f 5245  KED_free(X509_RE
003aac0: 564f 4b45 4420 2a61 293b 2058 3530 395f  VOKED *a); X509_
003aad0: 5245 564f 4b45 4420 2a64 3269 5f58 3530  REVOKED *d2i_X50
003aae0: 395f 5245 564f 4b45 4428 5835 3039 5f52  9_REVOKED(X509_R
003aaf0: 4556 4f4b 4544 202a 2a61 2c20 636f 6e73  EVOKED **a, cons
003ab00: 7420 756e 7369 676e 6564 2063 6861 7220  t unsigned char 
003ab10: 2a2a 696e 2c20 6c6f 6e67 206c 656e 293b  **in, long len);
003ab20: 2069 6e74 2069 3264 5f58 3530 395f 5245   int i2d_X509_RE
003ab30: 564f 4b45 4428 5835 3039 5f52 4556 4f4b  VOKED(X509_REVOK
003ab40: 4544 202a 612c 2075 6e73 6967 6e65 6420  ED *a, unsigned 
003ab50: 6368 6172 202a 2a6f 7574 293b 2065 7874  char **out); ext
003ab60: 6572 6e20 636f 6e73 7420 4153 4e31 5f49  ern const ASN1_I
003ab70: 5445 4d20 5835 3039 5f52 4556 4f4b 4544  TEM X509_REVOKED
003ab80: 5f69 743b 0a58 3530 395f 4352 4c5f 494e  _it;.X509_CRL_IN
003ab90: 464f 202a 5835 3039 5f43 524c 5f49 4e46  FO *X509_CRL_INF
003aba0: 4f5f 6e65 7728 766f 6964 293b 2076 6f69  O_new(void); voi
003abb0: 6420 5835 3039 5f43 524c 5f49 4e46 4f5f  d X509_CRL_INFO_
003abc0: 6672 6565 2858 3530 395f 4352 4c5f 494e  free(X509_CRL_IN
003abd0: 464f 202a 6129 3b20 5835 3039 5f43 524c  FO *a); X509_CRL
003abe0: 5f49 4e46 4f20 2a64 3269 5f58 3530 395f  _INFO *d2i_X509_
003abf0: 4352 4c5f 494e 464f 2858 3530 395f 4352  CRL_INFO(X509_CR
003ac00: 4c5f 494e 464f 202a 2a61 2c20 636f 6e73  L_INFO **a, cons
003ac10: 7420 756e 7369 676e 6564 2063 6861 7220  t unsigned char 
003ac20: 2a2a 696e 2c20 6c6f 6e67 206c 656e 293b  **in, long len);
003ac30: 2069 6e74 2069 3264 5f58 3530 395f 4352   int i2d_X509_CR
003ac40: 4c5f 494e 464f 2858 3530 395f 4352 4c5f  L_INFO(X509_CRL_
003ac50: 494e 464f 202a 612c 2075 6e73 6967 6e65  INFO *a, unsigne
003ac60: 6420 6368 6172 202a 2a6f 7574 293b 2065  d char **out); e
003ac70: 7874 6572 6e20 636f 6e73 7420 4153 4e31  xtern const ASN1
003ac80: 5f49 5445 4d20 5835 3039 5f43 524c 5f49  _ITEM X509_CRL_I
003ac90: 4e46 4f5f 6974 3b0a 5835 3039 5f43 524c  NFO_it;.X509_CRL
003aca0: 202a 5835 3039 5f43 524c 5f6e 6577 2876   *X509_CRL_new(v
003acb0: 6f69 6429 3b20 766f 6964 2058 3530 395f  oid); void X509_
003acc0: 4352 4c5f 6672 6565 2858 3530 395f 4352  CRL_free(X509_CR
003acd0: 4c20 2a61 293b 2058 3530 395f 4352 4c20  L *a); X509_CRL 
003ace0: 2a64 3269 5f58 3530 395f 4352 4c28 5835  *d2i_X509_CRL(X5
003acf0: 3039 5f43 524c 202a 2a61 2c20 636f 6e73  09_CRL **a, cons
003ad00: 7420 756e 7369 676e 6564 2063 6861 7220  t unsigned char 
003ad10: 2a2a 696e 2c20 6c6f 6e67 206c 656e 293b  **in, long len);
003ad20: 2069 6e74 2069 3264 5f58 3530 395f 4352   int i2d_X509_CR
003ad30: 4c28 5835 3039 5f43 524c 202a 612c 2075  L(X509_CRL *a, u
003ad40: 6e73 6967 6e65 6420 6368 6172 202a 2a6f  nsigned char **o
003ad50: 7574 293b 2065 7874 6572 6e20 636f 6e73  ut); extern cons
003ad60: 7420 4153 4e31 5f49 5445 4d20 5835 3039  t ASN1_ITEM X509
003ad70: 5f43 524c 5f69 743b 0a0a 696e 7420 5835  _CRL_it;..int X5
003ad80: 3039 5f43 524c 5f61 6464 305f 7265 766f  09_CRL_add0_revo
003ad90: 6b65 6428 5835 3039 5f43 524c 202a 6372  ked(X509_CRL *cr
003ada0: 6c2c 2058 3530 395f 5245 564f 4b45 4420  l, X509_REVOKED 
003adb0: 2a72 6576 293b 0a69 6e74 2058 3530 395f  *rev);.int X509_
003adc0: 4352 4c5f 6765 7430 5f62 795f 7365 7269  CRL_get0_by_seri
003add0: 616c 2858 3530 395f 4352 4c20 2a63 726c  al(X509_CRL *crl
003ade0: 2c0a 2020 5835 3039 5f52 4556 4f4b 4544  ,.  X509_REVOKED
003adf0: 202a 2a72 6574 2c20 4153 4e31 5f49 4e54   **ret, ASN1_INT
003ae00: 4547 4552 202a 7365 7269 616c 293b 0a69  EGER *serial);.i
003ae10: 6e74 2058 3530 395f 4352 4c5f 6765 7430  nt X509_CRL_get0
003ae20: 5f62 795f 6365 7274 2858 3530 395f 4352  _by_cert(X509_CR
003ae30: 4c20 2a63 726c 2c20 5835 3039 5f52 4556  L *crl, X509_REV
003ae40: 4f4b 4544 202a 2a72 6574 2c20 5835 3039  OKED **ret, X509
003ae50: 202a 7829 3b0a 0a58 3530 395f 504b 4559   *x);..X509_PKEY
003ae60: 202a 2058 3530 395f 504b 4559 5f6e 6577   * X509_PKEY_new
003ae70: 2876 6f69 6420 293b 0a76 6f69 6420 5835  (void );.void X5
003ae80: 3039 5f50 4b45 595f 6672 6565 2858 3530  09_PKEY_free(X50
003ae90: 395f 504b 4559 202a 6129 3b0a 696e 7420  9_PKEY *a);.int 
003aea0: 6932 645f 5835 3039 5f50 4b45 5928 5835  i2d_X509_PKEY(X5
003aeb0: 3039 5f50 4b45 5920 2a61 2c75 6e73 6967  09_PKEY *a,unsig
003aec0: 6e65 6420 6368 6172 202a 2a70 7029 3b0a  ned char **pp);.
003aed0: 5835 3039 5f50 4b45 5920 2a20 6432 695f  X509_PKEY * d2i_
003aee0: 5835 3039 5f50 4b45 5928 5835 3039 5f50  X509_PKEY(X509_P
003aef0: 4b45 5920 2a2a 612c 636f 6e73 7420 756e  KEY **a,const un
003af00: 7369 676e 6564 2063 6861 7220 2a2a 7070  signed char **pp
003af10: 2c6c 6f6e 6720 6c65 6e67 7468 293b 0a0a  ,long length);..
003af20: 4e45 5453 4341 5045 5f53 504b 4920 2a4e  NETSCAPE_SPKI *N
003af30: 4554 5343 4150 455f 5350 4b49 5f6e 6577  ETSCAPE_SPKI_new
003af40: 2876 6f69 6429 3b20 766f 6964 204e 4554  (void); void NET
003af50: 5343 4150 455f 5350 4b49 5f66 7265 6528  SCAPE_SPKI_free(
003af60: 4e45 5453 4341 5045 5f53 504b 4920 2a61  NETSCAPE_SPKI *a
003af70: 293b 204e 4554 5343 4150 455f 5350 4b49  ); NETSCAPE_SPKI
003af80: 202a 6432 695f 4e45 5453 4341 5045 5f53   *d2i_NETSCAPE_S
003af90: 504b 4928 4e45 5453 4341 5045 5f53 504b  PKI(NETSCAPE_SPK
003afa0: 4920 2a2a 612c 2063 6f6e 7374 2075 6e73  I **a, const uns
003afb0: 6967 6e65 6420 6368 6172 202a 2a69 6e2c  igned char **in,
003afc0: 206c 6f6e 6720 6c65 6e29 3b20 696e 7420   long len); int 
003afd0: 6932 645f 4e45 5453 4341 5045 5f53 504b  i2d_NETSCAPE_SPK
003afe0: 4928 4e45 5453 4341 5045 5f53 504b 4920  I(NETSCAPE_SPKI 
003aff0: 2a61 2c20 756e 7369 676e 6564 2063 6861  *a, unsigned cha
003b000: 7220 2a2a 6f75 7429 3b20 6578 7465 726e  r **out); extern
003b010: 2063 6f6e 7374 2041 534e 315f 4954 454d   const ASN1_ITEM
003b020: 204e 4554 5343 4150 455f 5350 4b49 5f69   NETSCAPE_SPKI_i
003b030: 743b 0a4e 4554 5343 4150 455f 5350 4b41  t;.NETSCAPE_SPKA
003b040: 4320 2a4e 4554 5343 4150 455f 5350 4b41  C *NETSCAPE_SPKA
003b050: 435f 6e65 7728 766f 6964 293b 2076 6f69  C_new(void); voi
003b060: 6420 4e45 5453 4341 5045 5f53 504b 4143  d NETSCAPE_SPKAC
003b070: 5f66 7265 6528 4e45 5453 4341 5045 5f53  _free(NETSCAPE_S
003b080: 504b 4143 202a 6129 3b20 4e45 5453 4341  PKAC *a); NETSCA
003b090: 5045 5f53 504b 4143 202a 6432 695f 4e45  PE_SPKAC *d2i_NE
003b0a0: 5453 4341 5045 5f53 504b 4143 284e 4554  TSCAPE_SPKAC(NET
003b0b0: 5343 4150 455f 5350 4b41 4320 2a2a 612c  SCAPE_SPKAC **a,
003b0c0: 2063 6f6e 7374 2075 6e73 6967 6e65 6420   const unsigned 
003b0d0: 6368 6172 202a 2a69 6e2c 206c 6f6e 6720  char **in, long 
003b0e0: 6c65 6e29 3b20 696e 7420 6932 645f 4e45  len); int i2d_NE
003b0f0: 5453 4341 5045 5f53 504b 4143 284e 4554  TSCAPE_SPKAC(NET
003b100: 5343 4150 455f 5350 4b41 4320 2a61 2c20  SCAPE_SPKAC *a, 
003b110: 756e 7369 676e 6564 2063 6861 7220 2a2a  unsigned char **
003b120: 6f75 7429 3b20 6578 7465 726e 2063 6f6e  out); extern con
003b130: 7374 2041 534e 315f 4954 454d 204e 4554  st ASN1_ITEM NET
003b140: 5343 4150 455f 5350 4b41 435f 6974 3b0a  SCAPE_SPKAC_it;.
003b150: 4e45 5453 4341 5045 5f43 4552 545f 5345  NETSCAPE_CERT_SE
003b160: 5155 454e 4345 202a 4e45 5453 4341 5045  QUENCE *NETSCAPE
003b170: 5f43 4552 545f 5345 5155 454e 4345 5f6e  _CERT_SEQUENCE_n
003b180: 6577 2876 6f69 6429 3b20 766f 6964 204e  ew(void); void N
003b190: 4554 5343 4150 455f 4345 5254 5f53 4551  ETSCAPE_CERT_SEQ
003b1a0: 5545 4e43 455f 6672 6565 284e 4554 5343  UENCE_free(NETSC
003b1b0: 4150 455f 4345 5254 5f53 4551 5545 4e43  APE_CERT_SEQUENC
003b1c0: 4520 2a61 293b 204e 4554 5343 4150 455f  E *a); NETSCAPE_
003b1d0: 4345 5254 5f53 4551 5545 4e43 4520 2a64  CERT_SEQUENCE *d
003b1e0: 3269 5f4e 4554 5343 4150 455f 4345 5254  2i_NETSCAPE_CERT
003b1f0: 5f53 4551 5545 4e43 4528 4e45 5453 4341  _SEQUENCE(NETSCA
003b200: 5045 5f43 4552 545f 5345 5155 454e 4345  PE_CERT_SEQUENCE
003b210: 202a 2a61 2c20 636f 6e73 7420 756e 7369   **a, const unsi
003b220: 676e 6564 2063 6861 7220 2a2a 696e 2c20  gned char **in, 
003b230: 6c6f 6e67 206c 656e 293b 2069 6e74 2069  long len); int i
003b240: 3264 5f4e 4554 5343 4150 455f 4345 5254  2d_NETSCAPE_CERT
003b250: 5f53 4551 5545 4e43 4528 4e45 5453 4341  _SEQUENCE(NETSCA
003b260: 5045 5f43 4552 545f 5345 5155 454e 4345  PE_CERT_SEQUENCE
003b270: 202a 612c 2075 6e73 6967 6e65 6420 6368   *a, unsigned ch
003b280: 6172 202a 2a6f 7574 293b 2065 7874 6572  ar **out); exter
003b290: 6e20 636f 6e73 7420 4153 4e31 5f49 5445  n const ASN1_ITE
003b2a0: 4d20 4e45 5453 4341 5045 5f43 4552 545f  M NETSCAPE_CERT_
003b2b0: 5345 5155 454e 4345 5f69 743b 0a0a 0a58  SEQUENCE_it;...X
003b2c0: 3530 395f 494e 464f 202a 2058 3530 395f  509_INFO * X509_
003b2d0: 494e 464f 5f6e 6577 2876 6f69 6429 3b0a  INFO_new(void);.
003b2e0: 766f 6964 2058 3530 395f 494e 464f 5f66  void X509_INFO_f
003b2f0: 7265 6528 5835 3039 5f49 4e46 4f20 2a61  ree(X509_INFO *a
003b300: 293b 0a63 6861 7220 2a20 5835 3039 5f4e  );.char * X509_N
003b310: 414d 455f 6f6e 656c 696e 6528 5835 3039  AME_oneline(X509
003b320: 5f4e 414d 4520 2a61 2c63 6861 7220 2a62  _NAME *a,char *b
003b330: 7566 2c69 6e74 2073 697a 6529 3b0a 0a69  uf,int size);..i
003b340: 6e74 2041 534e 315f 7665 7269 6679 2869  nt ASN1_verify(i
003b350: 3264 5f6f 665f 766f 6964 202a 6932 642c  2d_of_void *i2d,
003b360: 2058 3530 395f 414c 474f 5220 2a61 6c67   X509_ALGOR *alg
003b370: 6f72 312c 0a20 2041 534e 315f 4249 545f  or1,.  ASN1_BIT_
003b380: 5354 5249 4e47 202a 7369 676e 6174 7572  STRING *signatur
003b390: 652c 6368 6172 202a 6461 7461 2c45 5650  e,char *data,EVP
003b3a0: 5f50 4b45 5920 2a70 6b65 7929 3b0a 0a69  _PKEY *pkey);..i
003b3b0: 6e74 2041 534e 315f 6469 6765 7374 2869  nt ASN1_digest(i
003b3c0: 3264 5f6f 665f 766f 6964 202a 6932 642c  2d_of_void *i2d,
003b3d0: 636f 6e73 7420 4556 505f 4d44 202a 7479  const EVP_MD *ty
003b3e0: 7065 2c63 6861 7220 2a64 6174 612c 0a20  pe,char *data,. 
003b3f0: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
003b400: 6d64 2c75 6e73 6967 6e65 6420 696e 7420  md,unsigned int 
003b410: 2a6c 656e 293b 0a0a 696e 7420 4153 4e31  *len);..int ASN1
003b420: 5f73 6967 6e28 6932 645f 6f66 5f76 6f69  _sign(i2d_of_voi
003b430: 6420 2a69 3264 2c20 5835 3039 5f41 4c47  d *i2d, X509_ALG
003b440: 4f52 202a 616c 676f 7231 2c0a 2020 2020  OR *algor1,.    
003b450: 2020 2058 3530 395f 414c 474f 5220 2a61     X509_ALGOR *a
003b460: 6c67 6f72 322c 2041 534e 315f 4249 545f  lgor2, ASN1_BIT_
003b470: 5354 5249 4e47 202a 7369 676e 6174 7572  STRING *signatur
003b480: 652c 0a20 2020 2020 2020 6368 6172 202a  e,.       char *
003b490: 6461 7461 2c45 5650 5f50 4b45 5920 2a70  data,EVP_PKEY *p
003b4a0: 6b65 792c 2063 6f6e 7374 2045 5650 5f4d  key, const EVP_M
003b4b0: 4420 2a74 7970 6529 3b0a 0a69 6e74 2041  D *type);..int A
003b4c0: 534e 315f 6974 656d 5f64 6967 6573 7428  SN1_item_digest(
003b4d0: 636f 6e73 7420 4153 4e31 5f49 5445 4d20  const ASN1_ITEM 
003b4e0: 2a69 742c 636f 6e73 7420 4556 505f 4d44  *it,const EVP_MD
003b4f0: 202a 7479 7065 2c76 6f69 6420 2a64 6174   *type,void *dat
003b500: 612c 0a20 756e 7369 676e 6564 2063 6861  a,. unsigned cha
003b510: 7220 2a6d 642c 756e 7369 676e 6564 2069  r *md,unsigned i
003b520: 6e74 202a 6c65 6e29 3b0a 0a69 6e74 2041  nt *len);..int A
003b530: 534e 315f 6974 656d 5f76 6572 6966 7928  SN1_item_verify(
003b540: 636f 6e73 7420 4153 4e31 5f49 5445 4d20  const ASN1_ITEM 
003b550: 2a69 742c 2058 3530 395f 414c 474f 5220  *it, X509_ALGOR 
003b560: 2a61 6c67 6f72 312c 0a20 4153 4e31 5f42  *algor1,. ASN1_B
003b570: 4954 5f53 5452 494e 4720 2a73 6967 6e61  IT_STRING *signa
003b580: 7475 7265 2c76 6f69 6420 2a64 6174 612c  ture,void *data,
003b590: 4556 505f 504b 4559 202a 706b 6579 293b  EVP_PKEY *pkey);
003b5a0: 0a0a 696e 7420 4153 4e31 5f69 7465 6d5f  ..int ASN1_item_
003b5b0: 7369 676e 2863 6f6e 7374 2041 534e 315f  sign(const ASN1_
003b5c0: 4954 454d 202a 6974 2c20 5835 3039 5f41  ITEM *it, X509_A
003b5d0: 4c47 4f52 202a 616c 676f 7231 2c20 5835  LGOR *algor1, X5
003b5e0: 3039 5f41 4c47 4f52 202a 616c 676f 7232  09_ALGOR *algor2
003b5f0: 2c0a 2041 534e 315f 4249 545f 5354 5249  ,. ASN1_BIT_STRI
003b600: 4e47 202a 7369 676e 6174 7572 652c 0a20  NG *signature,. 
003b610: 766f 6964 202a 6461 7461 2c20 4556 505f  void *data, EVP_
003b620: 504b 4559 202a 706b 6579 2c20 636f 6e73  PKEY *pkey, cons
003b630: 7420 4556 505f 4d44 202a 7479 7065 293b  t EVP_MD *type);
003b640: 0a69 6e74 2041 534e 315f 6974 656d 5f73  .int ASN1_item_s
003b650: 6967 6e5f 6374 7828 636f 6e73 7420 4153  ign_ctx(const AS
003b660: 4e31 5f49 5445 4d20 2a69 742c 0a20 2058  N1_ITEM *it,.  X
003b670: 3530 395f 414c 474f 5220 2a61 6c67 6f72  509_ALGOR *algor
003b680: 312c 2058 3530 395f 414c 474f 5220 2a61  1, X509_ALGOR *a
003b690: 6c67 6f72 322c 0a20 2020 2020 2020 4153  lgor2,.       AS
003b6a0: 4e31 5f42 4954 5f53 5452 494e 4720 2a73  N1_BIT_STRING *s
003b6b0: 6967 6e61 7475 7265 2c20 766f 6964 202a  ignature, void *
003b6c0: 6173 6e2c 2045 5650 5f4d 445f 4354 5820  asn, EVP_MD_CTX 
003b6d0: 2a63 7478 293b 0a0a 0a69 6e74 2058 3530  *ctx);...int X50
003b6e0: 395f 7365 745f 7665 7273 696f 6e28 5835  9_set_version(X5
003b6f0: 3039 202a 782c 6c6f 6e67 2076 6572 7369  09 *x,long versi
003b700: 6f6e 293b 0a69 6e74 2058 3530 395f 7365  on);.int X509_se
003b710: 745f 7365 7269 616c 4e75 6d62 6572 2858  t_serialNumber(X
003b720: 3530 3920 2a78 2c20 4153 4e31 5f49 4e54  509 *x, ASN1_INT
003b730: 4547 4552 202a 7365 7269 616c 293b 0a41  EGER *serial);.A
003b740: 534e 315f 494e 5445 4745 5220 2a20 5835  SN1_INTEGER * X5
003b750: 3039 5f67 6574 5f73 6572 6961 6c4e 756d  09_get_serialNum
003b760: 6265 7228 5835 3039 202a 7829 3b0a 696e  ber(X509 *x);.in
003b770: 7420 5835 3039 5f73 6574 5f69 7373 7565  t X509_set_issue
003b780: 725f 6e61 6d65 2858 3530 3920 2a78 2c20  r_name(X509 *x, 
003b790: 5835 3039 5f4e 414d 4520 2a6e 616d 6529  X509_NAME *name)
003b7a0: 3b0a 5835 3039 5f4e 414d 4520 2a20 5835  ;.X509_NAME * X5
003b7b0: 3039 5f67 6574 5f69 7373 7565 725f 6e61  09_get_issuer_na
003b7c0: 6d65 2858 3530 3920 2a61 293b 0a69 6e74  me(X509 *a);.int
003b7d0: 2058 3530 395f 7365 745f 7375 626a 6563   X509_set_subjec
003b7e0: 745f 6e61 6d65 2858 3530 3920 2a78 2c20  t_name(X509 *x, 
003b7f0: 5835 3039 5f4e 414d 4520 2a6e 616d 6529  X509_NAME *name)
003b800: 3b0a 5835 3039 5f4e 414d 4520 2a20 5835  ;.X509_NAME * X5
003b810: 3039 5f67 6574 5f73 7562 6a65 6374 5f6e  09_get_subject_n
003b820: 616d 6528 5835 3039 202a 6129 3b0a 696e  ame(X509 *a);.in
003b830: 7420 5835 3039 5f73 6574 5f6e 6f74 4265  t X509_set_notBe
003b840: 666f 7265 2858 3530 3920 2a78 2c20 636f  fore(X509 *x, co
003b850: 6e73 7420 4153 4e31 5f54 494d 4520 2a74  nst ASN1_TIME *t
003b860: 6d29 3b0a 696e 7420 5835 3039 5f73 6574  m);.int X509_set
003b870: 5f6e 6f74 4166 7465 7228 5835 3039 202a  _notAfter(X509 *
003b880: 782c 2063 6f6e 7374 2041 534e 315f 5449  x, const ASN1_TI
003b890: 4d45 202a 746d 293b 0a69 6e74 2058 3530  ME *tm);.int X50
003b8a0: 395f 7365 745f 7075 626b 6579 2858 3530  9_set_pubkey(X50
003b8b0: 3920 2a78 2c20 4556 505f 504b 4559 202a  9 *x, EVP_PKEY *
003b8c0: 706b 6579 293b 0a45 5650 5f50 4b45 5920  pkey);.EVP_PKEY 
003b8d0: 2a20 5835 3039 5f67 6574 5f70 7562 6b65  * X509_get_pubke
003b8e0: 7928 5835 3039 202a 7829 3b0a 4153 4e31  y(X509 *x);.ASN1
003b8f0: 5f42 4954 5f53 5452 494e 4720 2a20 5835  _BIT_STRING * X5
003b900: 3039 5f67 6574 305f 7075 626b 6579 5f62  09_get0_pubkey_b
003b910: 6974 7374 7228 636f 6e73 7420 5835 3039  itstr(const X509
003b920: 202a 7829 3b0a 696e 7420 5835 3039 5f63   *x);.int X509_c
003b930: 6572 7469 6669 6361 7465 5f74 7970 6528  ertificate_type(
003b940: 5835 3039 202a 782c 4556 505f 504b 4559  X509 *x,EVP_PKEY
003b950: 202a 7075 626b 6579 2029 3b0a 0a69 6e74   *pubkey );..int
003b960: 2058 3530 395f 5245 515f 7365 745f 7665   X509_REQ_set_ve
003b970: 7273 696f 6e28 5835 3039 5f52 4551 202a  rsion(X509_REQ *
003b980: 782c 6c6f 6e67 2076 6572 7369 6f6e 293b  x,long version);
003b990: 0a69 6e74 2058 3530 395f 5245 515f 7365  .int X509_REQ_se
003b9a0: 745f 7375 626a 6563 745f 6e61 6d65 2858  t_subject_name(X
003b9b0: 3530 395f 5245 5120 2a72 6571 2c58 3530  509_REQ *req,X50
003b9c0: 395f 4e41 4d45 202a 6e61 6d65 293b 0a69  9_NAME *name);.i
003b9d0: 6e74 2058 3530 395f 5245 515f 7365 745f  nt X509_REQ_set_
003b9e0: 7075 626b 6579 2858 3530 395f 5245 5120  pubkey(X509_REQ 
003b9f0: 2a78 2c20 4556 505f 504b 4559 202a 706b  *x, EVP_PKEY *pk
003ba00: 6579 293b 0a45 5650 5f50 4b45 5920 2a20  ey);.EVP_PKEY * 
003ba10: 5835 3039 5f52 4551 5f67 6574 5f70 7562  X509_REQ_get_pub
003ba20: 6b65 7928 5835 3039 5f52 4551 202a 7265  key(X509_REQ *re
003ba30: 7129 3b0a 696e 7420 5835 3039 5f52 4551  q);.int X509_REQ
003ba40: 5f65 7874 656e 7369 6f6e 5f6e 6964 2869  _extension_nid(i
003ba50: 6e74 206e 6964 293b 0a69 6e74 202a 2058  nt nid);.int * X
003ba60: 3530 395f 5245 515f 6765 745f 6578 7465  509_REQ_get_exte
003ba70: 6e73 696f 6e5f 6e69 6473 2876 6f69 6429  nsion_nids(void)
003ba80: 3b0a 766f 6964 2058 3530 395f 5245 515f  ;.void X509_REQ_
003ba90: 7365 745f 6578 7465 6e73 696f 6e5f 6e69  set_extension_ni
003baa0: 6473 2869 6e74 202a 6e69 6473 293b 0a73  ds(int *nids);.s
003bab0: 7472 7563 7420 7374 6163 6b5f 7374 5f58  truct stack_st_X
003bac0: 3530 395f 4558 5445 4e53 494f 4e20 2a58  509_EXTENSION *X
003bad0: 3530 395f 5245 515f 6765 745f 6578 7465  509_REQ_get_exte
003bae0: 6e73 696f 6e73 2858 3530 395f 5245 5120  nsions(X509_REQ 
003baf0: 2a72 6571 293b 0a69 6e74 2058 3530 395f  *req);.int X509_
003bb00: 5245 515f 6164 645f 6578 7465 6e73 696f  REQ_add_extensio
003bb10: 6e73 5f6e 6964 2858 3530 395f 5245 5120  ns_nid(X509_REQ 
003bb20: 2a72 6571 2c20 7374 7275 6374 2073 7461  *req, struct sta
003bb30: 636b 5f73 745f 5835 3039 5f45 5854 454e  ck_st_X509_EXTEN
003bb40: 5349 4f4e 202a 6578 7473 2c0a 2020 2020  SION *exts,.    
003bb50: 696e 7420 6e69 6429 3b0a 696e 7420 5835  int nid);.int X5
003bb60: 3039 5f52 4551 5f61 6464 5f65 7874 656e  09_REQ_add_exten
003bb70: 7369 6f6e 7328 5835 3039 5f52 4551 202a  sions(X509_REQ *
003bb80: 7265 712c 2073 7472 7563 7420 7374 6163  req, struct stac
003bb90: 6b5f 7374 5f58 3530 395f 4558 5445 4e53  k_st_X509_EXTENS
003bba0: 494f 4e20 2a65 7874 7329 3b0a 696e 7420  ION *exts);.int 
003bbb0: 5835 3039 5f52 4551 5f67 6574 5f61 7474  X509_REQ_get_att
003bbc0: 725f 636f 756e 7428 636f 6e73 7420 5835  r_count(const X5
003bbd0: 3039 5f52 4551 202a 7265 7129 3b0a 696e  09_REQ *req);.in
003bbe0: 7420 5835 3039 5f52 4551 5f67 6574 5f61  t X509_REQ_get_a
003bbf0: 7474 725f 6279 5f4e 4944 2863 6f6e 7374  ttr_by_NID(const
003bc00: 2058 3530 395f 5245 5120 2a72 6571 2c20   X509_REQ *req, 
003bc10: 696e 7420 6e69 642c 0a20 2020 2020 696e  int nid,.     in
003bc20: 7420 6c61 7374 706f 7329 3b0a 696e 7420  t lastpos);.int 
003bc30: 5835 3039 5f52 4551 5f67 6574 5f61 7474  X509_REQ_get_att
003bc40: 725f 6279 5f4f 424a 2863 6f6e 7374 2058  r_by_OBJ(const X
003bc50: 3530 395f 5245 5120 2a72 6571 2c20 4153  509_REQ *req, AS
003bc60: 4e31 5f4f 424a 4543 5420 2a6f 626a 2c0a  N1_OBJECT *obj,.
003bc70: 2020 2020 2069 6e74 206c 6173 7470 6f73       int lastpos
003bc80: 293b 0a58 3530 395f 4154 5452 4942 5554  );.X509_ATTRIBUT
003bc90: 4520 2a58 3530 395f 5245 515f 6765 745f  E *X509_REQ_get_
003bca0: 6174 7472 2863 6f6e 7374 2058 3530 395f  attr(const X509_
003bcb0: 5245 5120 2a72 6571 2c20 696e 7420 6c6f  REQ *req, int lo
003bcc0: 6329 3b0a 5835 3039 5f41 5454 5249 4255  c);.X509_ATTRIBU
003bcd0: 5445 202a 5835 3039 5f52 4551 5f64 656c  TE *X509_REQ_del
003bce0: 6574 655f 6174 7472 2858 3530 395f 5245  ete_attr(X509_RE
003bcf0: 5120 2a72 6571 2c20 696e 7420 6c6f 6329  Q *req, int loc)
003bd00: 3b0a 696e 7420 5835 3039 5f52 4551 5f61  ;.int X509_REQ_a
003bd10: 6464 315f 6174 7472 2858 3530 395f 5245  dd1_attr(X509_RE
003bd20: 5120 2a72 6571 2c20 5835 3039 5f41 5454  Q *req, X509_ATT
003bd30: 5249 4255 5445 202a 6174 7472 293b 0a69  RIBUTE *attr);.i
003bd40: 6e74 2058 3530 395f 5245 515f 6164 6431  nt X509_REQ_add1
003bd50: 5f61 7474 725f 6279 5f4f 424a 2858 3530  _attr_by_OBJ(X50
003bd60: 395f 5245 5120 2a72 6571 2c0a 2020 2063  9_REQ *req,.   c
003bd70: 6f6e 7374 2041 534e 315f 4f42 4a45 4354  onst ASN1_OBJECT
003bd80: 202a 6f62 6a2c 2069 6e74 2074 7970 652c   *obj, int type,
003bd90: 0a20 2020 636f 6e73 7420 756e 7369 676e  .   const unsign
003bda0: 6564 2063 6861 7220 2a62 7974 6573 2c20  ed char *bytes, 
003bdb0: 696e 7420 6c65 6e29 3b0a 696e 7420 5835  int len);.int X5
003bdc0: 3039 5f52 4551 5f61 6464 315f 6174 7472  09_REQ_add1_attr
003bdd0: 5f62 795f 4e49 4428 5835 3039 5f52 4551  _by_NID(X509_REQ
003bde0: 202a 7265 712c 0a20 2020 696e 7420 6e69   *req,.   int ni
003bdf0: 642c 2069 6e74 2074 7970 652c 0a20 2020  d, int type,.   
003be00: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
003be10: 6861 7220 2a62 7974 6573 2c20 696e 7420  har *bytes, int 
003be20: 6c65 6e29 3b0a 696e 7420 5835 3039 5f52  len);.int X509_R
003be30: 4551 5f61 6464 315f 6174 7472 5f62 795f  EQ_add1_attr_by_
003be40: 7478 7428 5835 3039 5f52 4551 202a 7265  txt(X509_REQ *re
003be50: 712c 0a20 2020 636f 6e73 7420 6368 6172  q,.   const char
003be60: 202a 6174 7472 6e61 6d65 2c20 696e 7420   *attrname, int 
003be70: 7479 7065 2c0a 2020 2063 6f6e 7374 2075  type,.   const u
003be80: 6e73 6967 6e65 6420 6368 6172 202a 6279  nsigned char *by
003be90: 7465 732c 2069 6e74 206c 656e 293b 0a0a  tes, int len);..
003bea0: 696e 7420 5835 3039 5f43 524c 5f73 6574  int X509_CRL_set
003beb0: 5f76 6572 7369 6f6e 2858 3530 395f 4352  _version(X509_CR
003bec0: 4c20 2a78 2c20 6c6f 6e67 2076 6572 7369  L *x, long versi
003bed0: 6f6e 293b 0a69 6e74 2058 3530 395f 4352  on);.int X509_CR
003bee0: 4c5f 7365 745f 6973 7375 6572 5f6e 616d  L_set_issuer_nam
003bef0: 6528 5835 3039 5f43 524c 202a 782c 2058  e(X509_CRL *x, X
003bf00: 3530 395f 4e41 4d45 202a 6e61 6d65 293b  509_NAME *name);
003bf10: 0a69 6e74 2058 3530 395f 4352 4c5f 7365  .int X509_CRL_se
003bf20: 745f 6c61 7374 5570 6461 7465 2858 3530  t_lastUpdate(X50
003bf30: 395f 4352 4c20 2a78 2c20 636f 6e73 7420  9_CRL *x, const 
003bf40: 4153 4e31 5f54 494d 4520 2a74 6d29 3b0a  ASN1_TIME *tm);.
003bf50: 696e 7420 5835 3039 5f43 524c 5f73 6574  int X509_CRL_set
003bf60: 5f6e 6578 7455 7064 6174 6528 5835 3039  _nextUpdate(X509
003bf70: 5f43 524c 202a 782c 2063 6f6e 7374 2041  _CRL *x, const A
003bf80: 534e 315f 5449 4d45 202a 746d 293b 0a69  SN1_TIME *tm);.i
003bf90: 6e74 2058 3530 395f 4352 4c5f 736f 7274  nt X509_CRL_sort
003bfa0: 2858 3530 395f 4352 4c20 2a63 726c 293b  (X509_CRL *crl);
003bfb0: 0a0a 696e 7420 5835 3039 5f52 4556 4f4b  ..int X509_REVOK
003bfc0: 4544 5f73 6574 5f73 6572 6961 6c4e 756d  ED_set_serialNum
003bfd0: 6265 7228 5835 3039 5f52 4556 4f4b 4544  ber(X509_REVOKED
003bfe0: 202a 782c 2041 534e 315f 494e 5445 4745   *x, ASN1_INTEGE
003bff0: 5220 2a73 6572 6961 6c29 3b0a 696e 7420  R *serial);.int 
003c000: 5835 3039 5f52 4556 4f4b 4544 5f73 6574  X509_REVOKED_set
003c010: 5f72 6576 6f63 6174 696f 6e44 6174 6528  _revocationDate(
003c020: 5835 3039 5f52 4556 4f4b 4544 202a 722c  X509_REVOKED *r,
003c030: 2041 534e 315f 5449 4d45 202a 746d 293b   ASN1_TIME *tm);
003c040: 0a0a 696e 7420 5835 3039 5f52 4551 5f63  ..int X509_REQ_c
003c050: 6865 636b 5f70 7269 7661 7465 5f6b 6579  heck_private_key
003c060: 2858 3530 395f 5245 5120 2a78 3530 392c  (X509_REQ *x509,
003c070: 4556 505f 504b 4559 202a 706b 6579 293b  EVP_PKEY *pkey);
003c080: 0a0a 696e 7420 5835 3039 5f63 6865 636b  ..int X509_check
003c090: 5f70 7269 7661 7465 5f6b 6579 2858 3530  _private_key(X50
003c0a0: 3920 2a78 3530 392c 4556 505f 504b 4559  9 *x509,EVP_PKEY
003c0b0: 202a 706b 6579 293b 0a0a 696e 7420 5835   *pkey);..int X5
003c0c0: 3039 5f69 7373 7565 725f 616e 645f 7365  09_issuer_and_se
003c0d0: 7269 616c 5f63 6d70 2863 6f6e 7374 2058  rial_cmp(const X
003c0e0: 3530 3920 2a61 2c20 636f 6e73 7420 5835  509 *a, const X5
003c0f0: 3039 202a 6229 3b0a 756e 7369 676e 6564  09 *b);.unsigned
003c100: 206c 6f6e 6720 5835 3039 5f69 7373 7565   long X509_issue
003c110: 725f 616e 645f 7365 7269 616c 5f68 6173  r_and_serial_has
003c120: 6828 5835 3039 202a 6129 3b0a 0a69 6e74  h(X509 *a);..int
003c130: 2058 3530 395f 6973 7375 6572 5f6e 616d   X509_issuer_nam
003c140: 655f 636d 7028 636f 6e73 7420 5835 3039  e_cmp(const X509
003c150: 202a 612c 2063 6f6e 7374 2058 3530 3920   *a, const X509 
003c160: 2a62 293b 0a75 6e73 6967 6e65 6420 6c6f  *b);.unsigned lo
003c170: 6e67 2058 3530 395f 6973 7375 6572 5f6e  ng X509_issuer_n
003c180: 616d 655f 6861 7368 2858 3530 3920 2a61  ame_hash(X509 *a
003c190: 293b 0a0a 696e 7420 5835 3039 5f73 7562  );..int X509_sub
003c1a0: 6a65 6374 5f6e 616d 655f 636d 7028 636f  ject_name_cmp(co
003c1b0: 6e73 7420 5835 3039 202a 612c 2063 6f6e  nst X509 *a, con
003c1c0: 7374 2058 3530 3920 2a62 293b 0a75 6e73  st X509 *b);.uns
003c1d0: 6967 6e65 6420 6c6f 6e67 2058 3530 395f  igned long X509_
003c1e0: 7375 626a 6563 745f 6e61 6d65 5f68 6173  subject_name_has
003c1f0: 6828 5835 3039 202a 7829 3b0a 0a0a 756e  h(X509 *x);...un
003c200: 7369 676e 6564 206c 6f6e 6720 5835 3039  signed long X509
003c210: 5f69 7373 7565 725f 6e61 6d65 5f68 6173  _issuer_name_has
003c220: 685f 6f6c 6428 5835 3039 202a 6129 3b0a  h_old(X509 *a);.
003c230: 756e 7369 676e 6564 206c 6f6e 6720 5835  unsigned long X5
003c240: 3039 5f73 7562 6a65 6374 5f6e 616d 655f  09_subject_name_
003c250: 6861 7368 5f6f 6c64 2858 3530 3920 2a78  hash_old(X509 *x
003c260: 293b 0a0a 0a69 6e74 2058 3530 395f 636d  );...int X509_cm
003c270: 7028 636f 6e73 7420 5835 3039 202a 612c  p(const X509 *a,
003c280: 2063 6f6e 7374 2058 3530 3920 2a62 293b   const X509 *b);
003c290: 0a69 6e74 2058 3530 395f 4e41 4d45 5f63  .int X509_NAME_c
003c2a0: 6d70 2863 6f6e 7374 2058 3530 395f 4e41  mp(const X509_NA
003c2b0: 4d45 202a 612c 2063 6f6e 7374 2058 3530  ME *a, const X50
003c2c0: 395f 4e41 4d45 202a 6229 3b0a 756e 7369  9_NAME *b);.unsi
003c2d0: 676e 6564 206c 6f6e 6720 5835 3039 5f4e  gned long X509_N
003c2e0: 414d 455f 6861 7368 2858 3530 395f 4e41  AME_hash(X509_NA
003c2f0: 4d45 202a 7829 3b0a 756e 7369 676e 6564  ME *x);.unsigned
003c300: 206c 6f6e 6720 5835 3039 5f4e 414d 455f   long X509_NAME_
003c310: 6861 7368 5f6f 6c64 2858 3530 395f 4e41  hash_old(X509_NA
003c320: 4d45 202a 7829 3b0a 0a69 6e74 2058 3530  ME *x);..int X50
003c330: 395f 4352 4c5f 636d 7028 636f 6e73 7420  9_CRL_cmp(const 
003c340: 5835 3039 5f43 524c 202a 612c 2063 6f6e  X509_CRL *a, con
003c350: 7374 2058 3530 395f 4352 4c20 2a62 293b  st X509_CRL *b);
003c360: 0a69 6e74 2058 3530 395f 4352 4c5f 6d61  .int X509_CRL_ma
003c370: 7463 6828 636f 6e73 7420 5835 3039 5f43  tch(const X509_C
003c380: 524c 202a 612c 2063 6f6e 7374 2058 3530  RL *a, const X50
003c390: 395f 4352 4c20 2a62 293b 0a0a 696e 7420  9_CRL *b);..int 
003c3a0: 5835 3039 5f70 7269 6e74 5f65 785f 6670  X509_print_ex_fp
003c3b0: 2846 494c 4520 2a62 702c 5835 3039 202a  (FILE *bp,X509 *
003c3c0: 782c 2075 6e73 6967 6e65 6420 6c6f 6e67  x, unsigned long
003c3d0: 206e 6d66 6c61 672c 2075 6e73 6967 6e65   nmflag, unsigne
003c3e0: 6420 6c6f 6e67 2063 666c 6167 293b 0a69  d long cflag);.i
003c3f0: 6e74 2058 3530 395f 7072 696e 745f 6670  nt X509_print_fp
003c400: 2846 494c 4520 2a62 702c 5835 3039 202a  (FILE *bp,X509 *
003c410: 7829 3b0a 696e 7420 5835 3039 5f43 524c  x);.int X509_CRL
003c420: 5f70 7269 6e74 5f66 7028 4649 4c45 202a  _print_fp(FILE *
003c430: 6270 2c58 3530 395f 4352 4c20 2a78 293b  bp,X509_CRL *x);
003c440: 0a69 6e74 2058 3530 395f 5245 515f 7072  .int X509_REQ_pr
003c450: 696e 745f 6670 2846 494c 4520 2a62 702c  int_fp(FILE *bp,
003c460: 5835 3039 5f52 4551 202a 7265 7129 3b0a  X509_REQ *req);.
003c470: 696e 7420 5835 3039 5f4e 414d 455f 7072  int X509_NAME_pr
003c480: 696e 745f 6578 5f66 7028 4649 4c45 202a  int_ex_fp(FILE *
003c490: 6670 2c20 5835 3039 5f4e 414d 4520 2a6e  fp, X509_NAME *n
003c4a0: 6d2c 2069 6e74 2069 6e64 656e 742c 2075  m, int indent, u
003c4b0: 6e73 6967 6e65 6420 6c6f 6e67 2066 6c61  nsigned long fla
003c4c0: 6773 293b 0a0a 0a0a 696e 7420 5835 3039  gs);....int X509
003c4d0: 5f4e 414d 455f 7072 696e 7428 4249 4f20  _NAME_print(BIO 
003c4e0: 2a62 702c 2058 3530 395f 4e41 4d45 202a  *bp, X509_NAME *
003c4f0: 6e61 6d65 2c20 696e 7420 6f62 6173 6529  name, int obase)
003c500: 3b0a 696e 7420 5835 3039 5f4e 414d 455f  ;.int X509_NAME_
003c510: 7072 696e 745f 6578 2842 494f 202a 6f75  print_ex(BIO *ou
003c520: 742c 2058 3530 395f 4e41 4d45 202a 6e6d  t, X509_NAME *nm
003c530: 2c20 696e 7420 696e 6465 6e74 2c20 756e  , int indent, un
003c540: 7369 676e 6564 206c 6f6e 6720 666c 6167  signed long flag
003c550: 7329 3b0a 696e 7420 5835 3039 5f70 7269  s);.int X509_pri
003c560: 6e74 5f65 7828 4249 4f20 2a62 702c 5835  nt_ex(BIO *bp,X5
003c570: 3039 202a 782c 2075 6e73 6967 6e65 6420  09 *x, unsigned 
003c580: 6c6f 6e67 206e 6d66 6c61 672c 2075 6e73  long nmflag, uns
003c590: 6967 6e65 6420 6c6f 6e67 2063 666c 6167  igned long cflag
003c5a0: 293b 0a69 6e74 2058 3530 395f 7072 696e  );.int X509_prin
003c5b0: 7428 4249 4f20 2a62 702c 5835 3039 202a  t(BIO *bp,X509 *
003c5c0: 7829 3b0a 696e 7420 5835 3039 5f6f 6373  x);.int X509_ocs
003c5d0: 7069 645f 7072 696e 7428 4249 4f20 2a62  pid_print(BIO *b
003c5e0: 702c 5835 3039 202a 7829 3b0a 696e 7420  p,X509 *x);.int 
003c5f0: 5835 3039 5f43 4552 545f 4155 585f 7072  X509_CERT_AUX_pr
003c600: 696e 7428 4249 4f20 2a62 702c 5835 3039  int(BIO *bp,X509
003c610: 5f43 4552 545f 4155 5820 2a78 2c20 696e  _CERT_AUX *x, in
003c620: 7420 696e 6465 6e74 293b 0a69 6e74 2058  t indent);.int X
003c630: 3530 395f 4352 4c5f 7072 696e 7428 4249  509_CRL_print(BI
003c640: 4f20 2a62 702c 5835 3039 5f43 524c 202a  O *bp,X509_CRL *
003c650: 7829 3b0a 696e 7420 5835 3039 5f52 4551  x);.int X509_REQ
003c660: 5f70 7269 6e74 5f65 7828 4249 4f20 2a62  _print_ex(BIO *b
003c670: 702c 2058 3530 395f 5245 5120 2a78 2c20  p, X509_REQ *x, 
003c680: 756e 7369 676e 6564 206c 6f6e 6720 6e6d  unsigned long nm
003c690: 666c 6167 2c20 756e 7369 676e 6564 206c  flag, unsigned l
003c6a0: 6f6e 6720 6366 6c61 6729 3b0a 696e 7420  ong cflag);.int 
003c6b0: 5835 3039 5f52 4551 5f70 7269 6e74 2842  X509_REQ_print(B
003c6c0: 494f 202a 6270 2c58 3530 395f 5245 5120  IO *bp,X509_REQ 
003c6d0: 2a72 6571 293b 0a0a 0a69 6e74 2058 3530  *req);...int X50
003c6e0: 395f 4e41 4d45 5f65 6e74 7279 5f63 6f75  9_NAME_entry_cou
003c6f0: 6e74 2858 3530 395f 4e41 4d45 202a 6e61  nt(X509_NAME *na
003c700: 6d65 293b 0a69 6e74 2058 3530 395f 4e41  me);.int X509_NA
003c710: 4d45 5f67 6574 5f74 6578 745f 6279 5f4e  ME_get_text_by_N
003c720: 4944 2858 3530 395f 4e41 4d45 202a 6e61  ID(X509_NAME *na
003c730: 6d65 2c20 696e 7420 6e69 642c 0a20 2020  me, int nid,.   
003c740: 6368 6172 202a 6275 662c 696e 7420 6c65  char *buf,int le
003c750: 6e29 3b0a 696e 7420 5835 3039 5f4e 414d  n);.int X509_NAM
003c760: 455f 6765 745f 7465 7874 5f62 795f 4f42  E_get_text_by_OB
003c770: 4a28 5835 3039 5f4e 414d 4520 2a6e 616d  J(X509_NAME *nam
003c780: 652c 2041 534e 315f 4f42 4a45 4354 202a  e, ASN1_OBJECT *
003c790: 6f62 6a2c 0a20 2020 6368 6172 202a 6275  obj,.   char *bu
003c7a0: 662c 696e 7420 6c65 6e29 3b0a 0a0a 0a69  f,int len);....i
003c7b0: 6e74 2058 3530 395f 4e41 4d45 5f67 6574  nt X509_NAME_get
003c7c0: 5f69 6e64 6578 5f62 795f 4e49 4428 5835  _index_by_NID(X5
003c7d0: 3039 5f4e 414d 4520 2a6e 616d 652c 696e  09_NAME *name,in
003c7e0: 7420 6e69 642c 696e 7420 6c61 7374 706f  t nid,int lastpo
003c7f0: 7329 3b0a 696e 7420 5835 3039 5f4e 414d  s);.int X509_NAM
003c800: 455f 6765 745f 696e 6465 785f 6279 5f4f  E_get_index_by_O
003c810: 424a 2858 3530 395f 4e41 4d45 202a 6e61  BJ(X509_NAME *na
003c820: 6d65 2c41 534e 315f 4f42 4a45 4354 202a  me,ASN1_OBJECT *
003c830: 6f62 6a2c 0a20 2020 696e 7420 6c61 7374  obj,.   int last
003c840: 706f 7329 3b0a 5835 3039 5f4e 414d 455f  pos);.X509_NAME_
003c850: 454e 5452 5920 2a58 3530 395f 4e41 4d45  ENTRY *X509_NAME
003c860: 5f67 6574 5f65 6e74 7279 2858 3530 395f  _get_entry(X509_
003c870: 4e41 4d45 202a 6e61 6d65 2c20 696e 7420  NAME *name, int 
003c880: 6c6f 6329 3b0a 5835 3039 5f4e 414d 455f  loc);.X509_NAME_
003c890: 454e 5452 5920 2a58 3530 395f 4e41 4d45  ENTRY *X509_NAME
003c8a0: 5f64 656c 6574 655f 656e 7472 7928 5835  _delete_entry(X5
003c8b0: 3039 5f4e 414d 4520 2a6e 616d 652c 2069  09_NAME *name, i
003c8c0: 6e74 206c 6f63 293b 0a69 6e74 2058 3530  nt loc);.int X50
003c8d0: 395f 4e41 4d45 5f61 6464 5f65 6e74 7279  9_NAME_add_entry
003c8e0: 2858 3530 395f 4e41 4d45 202a 6e61 6d65  (X509_NAME *name
003c8f0: 2c58 3530 395f 4e41 4d45 5f45 4e54 5259  ,X509_NAME_ENTRY
003c900: 202a 6e65 2c0a 2020 2069 6e74 206c 6f63   *ne,.   int loc
003c910: 2c20 696e 7420 7365 7429 3b0a 696e 7420  , int set);.int 
003c920: 5835 3039 5f4e 414d 455f 6164 645f 656e  X509_NAME_add_en
003c930: 7472 795f 6279 5f4f 424a 2858 3530 395f  try_by_OBJ(X509_
003c940: 4e41 4d45 202a 6e61 6d65 2c20 4153 4e31  NAME *name, ASN1
003c950: 5f4f 424a 4543 5420 2a6f 626a 2c20 696e  _OBJECT *obj, in
003c960: 7420 7479 7065 2c0a 2020 2075 6e73 6967  t type,.   unsig
003c970: 6e65 6420 6368 6172 202a 6279 7465 732c  ned char *bytes,
003c980: 2069 6e74 206c 656e 2c20 696e 7420 6c6f   int len, int lo
003c990: 632c 2069 6e74 2073 6574 293b 0a69 6e74  c, int set);.int
003c9a0: 2058 3530 395f 4e41 4d45 5f61 6464 5f65   X509_NAME_add_e
003c9b0: 6e74 7279 5f62 795f 4e49 4428 5835 3039  ntry_by_NID(X509
003c9c0: 5f4e 414d 4520 2a6e 616d 652c 2069 6e74  _NAME *name, int
003c9d0: 206e 6964 2c20 696e 7420 7479 7065 2c0a   nid, int type,.
003c9e0: 2020 2075 6e73 6967 6e65 6420 6368 6172     unsigned char
003c9f0: 202a 6279 7465 732c 2069 6e74 206c 656e   *bytes, int len
003ca00: 2c20 696e 7420 6c6f 632c 2069 6e74 2073  , int loc, int s
003ca10: 6574 293b 0a58 3530 395f 4e41 4d45 5f45  et);.X509_NAME_E
003ca20: 4e54 5259 202a 5835 3039 5f4e 414d 455f  NTRY *X509_NAME_
003ca30: 454e 5452 595f 6372 6561 7465 5f62 795f  ENTRY_create_by_
003ca40: 7478 7428 5835 3039 5f4e 414d 455f 454e  txt(X509_NAME_EN
003ca50: 5452 5920 2a2a 6e65 2c0a 2020 636f 6e73  TRY **ne,.  cons
003ca60: 7420 6368 6172 202a 6669 656c 642c 2069  t char *field, i
003ca70: 6e74 2074 7970 652c 2063 6f6e 7374 2075  nt type, const u
003ca80: 6e73 6967 6e65 6420 6368 6172 202a 6279  nsigned char *by
003ca90: 7465 732c 2069 6e74 206c 656e 293b 0a58  tes, int len);.X
003caa0: 3530 395f 4e41 4d45 5f45 4e54 5259 202a  509_NAME_ENTRY *
003cab0: 5835 3039 5f4e 414d 455f 454e 5452 595f  X509_NAME_ENTRY_
003cac0: 6372 6561 7465 5f62 795f 4e49 4428 5835  create_by_NID(X5
003cad0: 3039 5f4e 414d 455f 454e 5452 5920 2a2a  09_NAME_ENTRY **
003cae0: 6e65 2c20 696e 7420 6e69 642c 0a20 2020  ne, int nid,.   
003caf0: 696e 7420 7479 7065 2c75 6e73 6967 6e65  int type,unsigne
003cb00: 6420 6368 6172 202a 6279 7465 732c 2069  d char *bytes, i
003cb10: 6e74 206c 656e 293b 0a69 6e74 2058 3530  nt len);.int X50
003cb20: 395f 4e41 4d45 5f61 6464 5f65 6e74 7279  9_NAME_add_entry
003cb30: 5f62 795f 7478 7428 5835 3039 5f4e 414d  _by_txt(X509_NAM
003cb40: 4520 2a6e 616d 652c 2063 6f6e 7374 2063  E *name, const c
003cb50: 6861 7220 2a66 6965 6c64 2c20 696e 7420  har *field, int 
003cb60: 7479 7065 2c0a 2020 2063 6f6e 7374 2075  type,.   const u
003cb70: 6e73 6967 6e65 6420 6368 6172 202a 6279  nsigned char *by
003cb80: 7465 732c 2069 6e74 206c 656e 2c20 696e  tes, int len, in
003cb90: 7420 6c6f 632c 2069 6e74 2073 6574 293b  t loc, int set);
003cba0: 0a58 3530 395f 4e41 4d45 5f45 4e54 5259  .X509_NAME_ENTRY
003cbb0: 202a 5835 3039 5f4e 414d 455f 454e 5452   *X509_NAME_ENTR
003cbc0: 595f 6372 6561 7465 5f62 795f 4f42 4a28  Y_create_by_OBJ(
003cbd0: 5835 3039 5f4e 414d 455f 454e 5452 5920  X509_NAME_ENTRY 
003cbe0: 2a2a 6e65 2c0a 2020 2041 534e 315f 4f42  **ne,.   ASN1_OB
003cbf0: 4a45 4354 202a 6f62 6a2c 2069 6e74 2074  JECT *obj, int t
003cc00: 7970 652c 636f 6e73 7420 756e 7369 676e  ype,const unsign
003cc10: 6564 2063 6861 7220 2a62 7974 6573 2c0a  ed char *bytes,.
003cc20: 2020 2069 6e74 206c 656e 293b 0a69 6e74     int len);.int
003cc30: 2058 3530 395f 4e41 4d45 5f45 4e54 5259   X509_NAME_ENTRY
003cc40: 5f73 6574 5f6f 626a 6563 7428 5835 3039  _set_object(X509
003cc50: 5f4e 414d 455f 454e 5452 5920 2a6e 652c  _NAME_ENTRY *ne,
003cc60: 0a20 2020 4153 4e31 5f4f 424a 4543 5420  .   ASN1_OBJECT 
003cc70: 2a6f 626a 293b 0a69 6e74 2058 3530 395f  *obj);.int X509_
003cc80: 4e41 4d45 5f45 4e54 5259 5f73 6574 5f64  NAME_ENTRY_set_d
003cc90: 6174 6128 5835 3039 5f4e 414d 455f 454e  ata(X509_NAME_EN
003cca0: 5452 5920 2a6e 652c 2069 6e74 2074 7970  TRY *ne, int typ
003ccb0: 652c 0a20 2020 636f 6e73 7420 756e 7369  e,.   const unsi
003ccc0: 676e 6564 2063 6861 7220 2a62 7974 6573  gned char *bytes
003ccd0: 2c20 696e 7420 6c65 6e29 3b0a 4153 4e31  , int len);.ASN1
003cce0: 5f4f 424a 4543 5420 2a20 5835 3039 5f4e  _OBJECT * X509_N
003ccf0: 414d 455f 454e 5452 595f 6765 745f 6f62  AME_ENTRY_get_ob
003cd00: 6a65 6374 2858 3530 395f 4e41 4d45 5f45  ject(X509_NAME_E
003cd10: 4e54 5259 202a 6e65 293b 0a41 534e 315f  NTRY *ne);.ASN1_
003cd20: 5354 5249 4e47 202a 2058 3530 395f 4e41  STRING * X509_NA
003cd30: 4d45 5f45 4e54 5259 5f67 6574 5f64 6174  ME_ENTRY_get_dat
003cd40: 6128 5835 3039 5f4e 414d 455f 454e 5452  a(X509_NAME_ENTR
003cd50: 5920 2a6e 6529 3b0a 0a69 6e74 2058 3530  Y *ne);..int X50
003cd60: 3976 335f 6765 745f 6578 745f 636f 756e  9v3_get_ext_coun
003cd70: 7428 636f 6e73 7420 7374 7275 6374 2073  t(const struct s
003cd80: 7461 636b 5f73 745f 5835 3039 5f45 5854  tack_st_X509_EXT
003cd90: 454e 5349 4f4e 202a 7829 3b0a 696e 7420  ENSION *x);.int 
003cda0: 5835 3039 7633 5f67 6574 5f65 7874 5f62  X509v3_get_ext_b
003cdb0: 795f 4e49 4428 636f 6e73 7420 7374 7275  y_NID(const stru
003cdc0: 6374 2073 7461 636b 5f73 745f 5835 3039  ct stack_st_X509
003cdd0: 5f45 5854 454e 5349 4f4e 202a 782c 0a20  _EXTENSION *x,. 
003cde0: 2020 2020 2020 2020 2069 6e74 206e 6964           int nid
003cdf0: 2c20 696e 7420 6c61 7374 706f 7329 3b0a  , int lastpos);.
003ce00: 696e 7420 5835 3039 7633 5f67 6574 5f65  int X509v3_get_e
003ce10: 7874 5f62 795f 4f42 4a28 636f 6e73 7420  xt_by_OBJ(const 
003ce20: 7374 7275 6374 2073 7461 636b 5f73 745f  struct stack_st_
003ce30: 5835 3039 5f45 5854 454e 5349 4f4e 202a  X509_EXTENSION *
003ce40: 782c 0a20 2020 2020 2020 2020 2041 534e  x,.          ASN
003ce50: 315f 4f42 4a45 4354 202a 6f62 6a2c 696e  1_OBJECT *obj,in
003ce60: 7420 6c61 7374 706f 7329 3b0a 696e 7420  t lastpos);.int 
003ce70: 5835 3039 7633 5f67 6574 5f65 7874 5f62  X509v3_get_ext_b
003ce80: 795f 6372 6974 6963 616c 2863 6f6e 7374  y_critical(const
003ce90: 2073 7472 7563 7420 7374 6163 6b5f 7374   struct stack_st
003cea0: 5f58 3530 395f 4558 5445 4e53 494f 4e20  _X509_EXTENSION 
003ceb0: 2a78 2c0a 2020 2020 2020 2020 696e 7420  *x,.        int 
003cec0: 6372 6974 2c20 696e 7420 6c61 7374 706f  crit, int lastpo
003ced0: 7329 3b0a 5835 3039 5f45 5854 454e 5349  s);.X509_EXTENSI
003cee0: 4f4e 202a 5835 3039 7633 5f67 6574 5f65  ON *X509v3_get_e
003cef0: 7874 2863 6f6e 7374 2073 7472 7563 7420  xt(const struct 
003cf00: 7374 6163 6b5f 7374 5f58 3530 395f 4558  stack_st_X509_EX
003cf10: 5445 4e53 494f 4e20 2a78 2c20 696e 7420  TENSION *x, int 
003cf20: 6c6f 6329 3b0a 5835 3039 5f45 5854 454e  loc);.X509_EXTEN
003cf30: 5349 4f4e 202a 5835 3039 7633 5f64 656c  SION *X509v3_del
003cf40: 6574 655f 6578 7428 7374 7275 6374 2073  ete_ext(struct s
003cf50: 7461 636b 5f73 745f 5835 3039 5f45 5854  tack_st_X509_EXT
003cf60: 454e 5349 4f4e 202a 782c 2069 6e74 206c  ENSION *x, int l
003cf70: 6f63 293b 0a73 7472 7563 7420 7374 6163  oc);.struct stac
003cf80: 6b5f 7374 5f58 3530 395f 4558 5445 4e53  k_st_X509_EXTENS
003cf90: 494f 4e20 2a58 3530 3976 335f 6164 645f  ION *X509v3_add_
003cfa0: 6578 7428 7374 7275 6374 2073 7461 636b  ext(struct stack
003cfb0: 5f73 745f 5835 3039 5f45 5854 454e 5349  _st_X509_EXTENSI
003cfc0: 4f4e 202a 2a78 2c0a 2020 2020 2020 5835  ON **x,.      X5
003cfd0: 3039 5f45 5854 454e 5349 4f4e 202a 6578  09_EXTENSION *ex
003cfe0: 2c20 696e 7420 6c6f 6329 3b0a 0a69 6e74  , int loc);..int
003cff0: 2058 3530 395f 6765 745f 6578 745f 636f   X509_get_ext_co
003d000: 756e 7428 5835 3039 202a 7829 3b0a 696e  unt(X509 *x);.in
003d010: 7420 5835 3039 5f67 6574 5f65 7874 5f62  t X509_get_ext_b
003d020: 795f 4e49 4428 5835 3039 202a 782c 2069  y_NID(X509 *x, i
003d030: 6e74 206e 6964 2c20 696e 7420 6c61 7374  nt nid, int last
003d040: 706f 7329 3b0a 696e 7420 5835 3039 5f67  pos);.int X509_g
003d050: 6574 5f65 7874 5f62 795f 4f42 4a28 5835  et_ext_by_OBJ(X5
003d060: 3039 202a 782c 4153 4e31 5f4f 424a 4543  09 *x,ASN1_OBJEC
003d070: 5420 2a6f 626a 2c69 6e74 206c 6173 7470  T *obj,int lastp
003d080: 6f73 293b 0a69 6e74 2058 3530 395f 6765  os);.int X509_ge
003d090: 745f 6578 745f 6279 5f63 7269 7469 6361  t_ext_by_critica
003d0a0: 6c28 5835 3039 202a 782c 2069 6e74 2063  l(X509 *x, int c
003d0b0: 7269 742c 2069 6e74 206c 6173 7470 6f73  rit, int lastpos
003d0c0: 293b 0a58 3530 395f 4558 5445 4e53 494f  );.X509_EXTENSIO
003d0d0: 4e20 2a58 3530 395f 6765 745f 6578 7428  N *X509_get_ext(
003d0e0: 5835 3039 202a 782c 2069 6e74 206c 6f63  X509 *x, int loc
003d0f0: 293b 0a58 3530 395f 4558 5445 4e53 494f  );.X509_EXTENSIO
003d100: 4e20 2a58 3530 395f 6465 6c65 7465 5f65  N *X509_delete_e
003d110: 7874 2858 3530 3920 2a78 2c20 696e 7420  xt(X509 *x, int 
003d120: 6c6f 6329 3b0a 696e 7420 5835 3039 5f61  loc);.int X509_a
003d130: 6464 5f65 7874 2858 3530 3920 2a78 2c20  dd_ext(X509 *x, 
003d140: 5835 3039 5f45 5854 454e 5349 4f4e 202a  X509_EXTENSION *
003d150: 6578 2c20 696e 7420 6c6f 6329 3b0a 766f  ex, int loc);.vo
003d160: 6964 202a 2058 3530 395f 6765 745f 6578  id * X509_get_ex
003d170: 745f 6432 6928 5835 3039 202a 782c 2069  t_d2i(X509 *x, i
003d180: 6e74 206e 6964 2c20 696e 7420 2a63 7269  nt nid, int *cri
003d190: 742c 2069 6e74 202a 6964 7829 3b0a 696e  t, int *idx);.in
003d1a0: 7420 5835 3039 5f61 6464 315f 6578 745f  t X509_add1_ext_
003d1b0: 6932 6428 5835 3039 202a 782c 2069 6e74  i2d(X509 *x, int
003d1c0: 206e 6964 2c20 766f 6964 202a 7661 6c75   nid, void *valu
003d1d0: 652c 2069 6e74 2063 7269 742c 0a20 2020  e, int crit,.   
003d1e0: 2020 2020 756e 7369 676e 6564 206c 6f6e      unsigned lon
003d1f0: 6720 666c 6167 7329 3b0a 0a69 6e74 2058  g flags);..int X
003d200: 3530 395f 4352 4c5f 6765 745f 6578 745f  509_CRL_get_ext_
003d210: 636f 756e 7428 5835 3039 5f43 524c 202a  count(X509_CRL *
003d220: 7829 3b0a 696e 7420 5835 3039 5f43 524c  x);.int X509_CRL
003d230: 5f67 6574 5f65 7874 5f62 795f 4e49 4428  _get_ext_by_NID(
003d240: 5835 3039 5f43 524c 202a 782c 2069 6e74  X509_CRL *x, int
003d250: 206e 6964 2c20 696e 7420 6c61 7374 706f   nid, int lastpo
003d260: 7329 3b0a 696e 7420 5835 3039 5f43 524c  s);.int X509_CRL
003d270: 5f67 6574 5f65 7874 5f62 795f 4f42 4a28  _get_ext_by_OBJ(
003d280: 5835 3039 5f43 524c 202a 782c 4153 4e31  X509_CRL *x,ASN1
003d290: 5f4f 424a 4543 5420 2a6f 626a 2c69 6e74  _OBJECT *obj,int
003d2a0: 206c 6173 7470 6f73 293b 0a69 6e74 2058   lastpos);.int X
003d2b0: 3530 395f 4352 4c5f 6765 745f 6578 745f  509_CRL_get_ext_
003d2c0: 6279 5f63 7269 7469 6361 6c28 5835 3039  by_critical(X509
003d2d0: 5f43 524c 202a 782c 2069 6e74 2063 7269  _CRL *x, int cri
003d2e0: 742c 2069 6e74 206c 6173 7470 6f73 293b  t, int lastpos);
003d2f0: 0a58 3530 395f 4558 5445 4e53 494f 4e20  .X509_EXTENSION 
003d300: 2a58 3530 395f 4352 4c5f 6765 745f 6578  *X509_CRL_get_ex
003d310: 7428 5835 3039 5f43 524c 202a 782c 2069  t(X509_CRL *x, i
003d320: 6e74 206c 6f63 293b 0a58 3530 395f 4558  nt loc);.X509_EX
003d330: 5445 4e53 494f 4e20 2a58 3530 395f 4352  TENSION *X509_CR
003d340: 4c5f 6465 6c65 7465 5f65 7874 2858 3530  L_delete_ext(X50
003d350: 395f 4352 4c20 2a78 2c20 696e 7420 6c6f  9_CRL *x, int lo
003d360: 6329 3b0a 696e 7420 5835 3039 5f43 524c  c);.int X509_CRL
003d370: 5f61 6464 5f65 7874 2858 3530 395f 4352  _add_ext(X509_CR
003d380: 4c20 2a78 2c20 5835 3039 5f45 5854 454e  L *x, X509_EXTEN
003d390: 5349 4f4e 202a 6578 2c20 696e 7420 6c6f  SION *ex, int lo
003d3a0: 6329 3b0a 766f 6964 202a 2058 3530 395f  c);.void * X509_
003d3b0: 4352 4c5f 6765 745f 6578 745f 6432 6928  CRL_get_ext_d2i(
003d3c0: 5835 3039 5f43 524c 202a 782c 2069 6e74  X509_CRL *x, int
003d3d0: 206e 6964 2c20 696e 7420 2a63 7269 742c   nid, int *crit,
003d3e0: 2069 6e74 202a 6964 7829 3b0a 696e 7420   int *idx);.int 
003d3f0: 5835 3039 5f43 524c 5f61 6464 315f 6578  X509_CRL_add1_ex
003d400: 745f 6932 6428 5835 3039 5f43 524c 202a  t_i2d(X509_CRL *
003d410: 782c 2069 6e74 206e 6964 2c20 766f 6964  x, int nid, void
003d420: 202a 7661 6c75 652c 2069 6e74 2063 7269   *value, int cri
003d430: 742c 0a20 2020 2020 2020 756e 7369 676e  t,.       unsign
003d440: 6564 206c 6f6e 6720 666c 6167 7329 3b0a  ed long flags);.
003d450: 0a69 6e74 2058 3530 395f 5245 564f 4b45  .int X509_REVOKE
003d460: 445f 6765 745f 6578 745f 636f 756e 7428  D_get_ext_count(
003d470: 5835 3039 5f52 4556 4f4b 4544 202a 7829  X509_REVOKED *x)
003d480: 3b0a 696e 7420 5835 3039 5f52 4556 4f4b  ;.int X509_REVOK
003d490: 4544 5f67 6574 5f65 7874 5f62 795f 4e49  ED_get_ext_by_NI
003d4a0: 4428 5835 3039 5f52 4556 4f4b 4544 202a  D(X509_REVOKED *
003d4b0: 782c 2069 6e74 206e 6964 2c20 696e 7420  x, int nid, int 
003d4c0: 6c61 7374 706f 7329 3b0a 696e 7420 5835  lastpos);.int X5
003d4d0: 3039 5f52 4556 4f4b 4544 5f67 6574 5f65  09_REVOKED_get_e
003d4e0: 7874 5f62 795f 4f42 4a28 5835 3039 5f52  xt_by_OBJ(X509_R
003d4f0: 4556 4f4b 4544 202a 782c 4153 4e31 5f4f  EVOKED *x,ASN1_O
003d500: 424a 4543 5420 2a6f 626a 2c69 6e74 206c  BJECT *obj,int l
003d510: 6173 7470 6f73 293b 0a69 6e74 2058 3530  astpos);.int X50
003d520: 395f 5245 564f 4b45 445f 6765 745f 6578  9_REVOKED_get_ex
003d530: 745f 6279 5f63 7269 7469 6361 6c28 5835  t_by_critical(X5
003d540: 3039 5f52 4556 4f4b 4544 202a 782c 2069  09_REVOKED *x, i
003d550: 6e74 2063 7269 742c 2069 6e74 206c 6173  nt crit, int las
003d560: 7470 6f73 293b 0a58 3530 395f 4558 5445  tpos);.X509_EXTE
003d570: 4e53 494f 4e20 2a58 3530 395f 5245 564f  NSION *X509_REVO
003d580: 4b45 445f 6765 745f 6578 7428 5835 3039  KED_get_ext(X509
003d590: 5f52 4556 4f4b 4544 202a 782c 2069 6e74  _REVOKED *x, int
003d5a0: 206c 6f63 293b 0a58 3530 395f 4558 5445   loc);.X509_EXTE
003d5b0: 4e53 494f 4e20 2a58 3530 395f 5245 564f  NSION *X509_REVO
003d5c0: 4b45 445f 6465 6c65 7465 5f65 7874 2858  KED_delete_ext(X
003d5d0: 3530 395f 5245 564f 4b45 4420 2a78 2c20  509_REVOKED *x, 
003d5e0: 696e 7420 6c6f 6329 3b0a 696e 7420 5835  int loc);.int X5
003d5f0: 3039 5f52 4556 4f4b 4544 5f61 6464 5f65  09_REVOKED_add_e
003d600: 7874 2858 3530 395f 5245 564f 4b45 4420  xt(X509_REVOKED 
003d610: 2a78 2c20 5835 3039 5f45 5854 454e 5349  *x, X509_EXTENSI
003d620: 4f4e 202a 6578 2c20 696e 7420 6c6f 6329  ON *ex, int loc)
003d630: 3b0a 766f 6964 202a 2058 3530 395f 5245  ;.void * X509_RE
003d640: 564f 4b45 445f 6765 745f 6578 745f 6432  VOKED_get_ext_d2
003d650: 6928 5835 3039 5f52 4556 4f4b 4544 202a  i(X509_REVOKED *
003d660: 782c 2069 6e74 206e 6964 2c20 696e 7420  x, int nid, int 
003d670: 2a63 7269 742c 2069 6e74 202a 6964 7829  *crit, int *idx)
003d680: 3b0a 696e 7420 5835 3039 5f52 4556 4f4b  ;.int X509_REVOK
003d690: 4544 5f61 6464 315f 6578 745f 6932 6428  ED_add1_ext_i2d(
003d6a0: 5835 3039 5f52 4556 4f4b 4544 202a 782c  X509_REVOKED *x,
003d6b0: 2069 6e74 206e 6964 2c20 766f 6964 202a   int nid, void *
003d6c0: 7661 6c75 652c 2069 6e74 2063 7269 742c  value, int crit,
003d6d0: 0a20 2020 2020 2020 756e 7369 676e 6564  .       unsigned
003d6e0: 206c 6f6e 6720 666c 6167 7329 3b0a 0a58   long flags);..X
003d6f0: 3530 395f 4558 5445 4e53 494f 4e20 2a58  509_EXTENSION *X
003d700: 3530 395f 4558 5445 4e53 494f 4e5f 6372  509_EXTENSION_cr
003d710: 6561 7465 5f62 795f 4e49 4428 5835 3039  eate_by_NID(X509
003d720: 5f45 5854 454e 5349 4f4e 202a 2a65 782c  _EXTENSION **ex,
003d730: 0a20 2020 696e 7420 6e69 642c 2069 6e74  .   int nid, int
003d740: 2063 7269 742c 2041 534e 315f 4f43 5445   crit, ASN1_OCTE
003d750: 545f 5354 5249 4e47 202a 6461 7461 293b  T_STRING *data);
003d760: 0a58 3530 395f 4558 5445 4e53 494f 4e20  .X509_EXTENSION 
003d770: 2a58 3530 395f 4558 5445 4e53 494f 4e5f  *X509_EXTENSION_
003d780: 6372 6561 7465 5f62 795f 4f42 4a28 5835  create_by_OBJ(X5
003d790: 3039 5f45 5854 454e 5349 4f4e 202a 2a65  09_EXTENSION **e
003d7a0: 782c 0a20 2020 4153 4e31 5f4f 424a 4543  x,.   ASN1_OBJEC
003d7b0: 5420 2a6f 626a 2c69 6e74 2063 7269 742c  T *obj,int crit,
003d7c0: 4153 4e31 5f4f 4354 4554 5f53 5452 494e  ASN1_OCTET_STRIN
003d7d0: 4720 2a64 6174 6129 3b0a 696e 7420 5835  G *data);.int X5
003d7e0: 3039 5f45 5854 454e 5349 4f4e 5f73 6574  09_EXTENSION_set
003d7f0: 5f6f 626a 6563 7428 5835 3039 5f45 5854  _object(X509_EXT
003d800: 454e 5349 4f4e 202a 6578 2c41 534e 315f  ENSION *ex,ASN1_
003d810: 4f42 4a45 4354 202a 6f62 6a29 3b0a 696e  OBJECT *obj);.in
003d820: 7420 5835 3039 5f45 5854 454e 5349 4f4e  t X509_EXTENSION
003d830: 5f73 6574 5f63 7269 7469 6361 6c28 5835  _set_critical(X5
003d840: 3039 5f45 5854 454e 5349 4f4e 202a 6578  09_EXTENSION *ex
003d850: 2c20 696e 7420 6372 6974 293b 0a69 6e74  , int crit);.int
003d860: 2058 3530 395f 4558 5445 4e53 494f 4e5f   X509_EXTENSION_
003d870: 7365 745f 6461 7461 2858 3530 395f 4558  set_data(X509_EX
003d880: 5445 4e53 494f 4e20 2a65 782c 0a20 2020  TENSION *ex,.   
003d890: 4153 4e31 5f4f 4354 4554 5f53 5452 494e  ASN1_OCTET_STRIN
003d8a0: 4720 2a64 6174 6129 3b0a 4153 4e31 5f4f  G *data);.ASN1_O
003d8b0: 424a 4543 5420 2a20 5835 3039 5f45 5854  BJECT * X509_EXT
003d8c0: 454e 5349 4f4e 5f67 6574 5f6f 626a 6563  ENSION_get_objec
003d8d0: 7428 5835 3039 5f45 5854 454e 5349 4f4e  t(X509_EXTENSION
003d8e0: 202a 6578 293b 0a41 534e 315f 4f43 5445   *ex);.ASN1_OCTE
003d8f0: 545f 5354 5249 4e47 202a 5835 3039 5f45  T_STRING *X509_E
003d900: 5854 454e 5349 4f4e 5f67 6574 5f64 6174  XTENSION_get_dat
003d910: 6128 5835 3039 5f45 5854 454e 5349 4f4e  a(X509_EXTENSION
003d920: 202a 6e65 293b 0a69 6e74 2058 3530 395f   *ne);.int X509_
003d930: 4558 5445 4e53 494f 4e5f 6765 745f 6372  EXTENSION_get_cr
003d940: 6974 6963 616c 2858 3530 395f 4558 5445  itical(X509_EXTE
003d950: 4e53 494f 4e20 2a65 7829 3b0a 0a69 6e74  NSION *ex);..int
003d960: 2058 3530 3961 745f 6765 745f 6174 7472   X509at_get_attr
003d970: 5f63 6f75 6e74 2863 6f6e 7374 2073 7472  _count(const str
003d980: 7563 7420 7374 6163 6b5f 7374 5f58 3530  uct stack_st_X50
003d990: 395f 4154 5452 4942 5554 4520 2a78 293b  9_ATTRIBUTE *x);
003d9a0: 0a69 6e74 2058 3530 3961 745f 6765 745f  .int X509at_get_
003d9b0: 6174 7472 5f62 795f 4e49 4428 636f 6e73  attr_by_NID(cons
003d9c0: 7420 7374 7275 6374 2073 7461 636b 5f73  t struct stack_s
003d9d0: 745f 5835 3039 5f41 5454 5249 4255 5445  t_X509_ATTRIBUTE
003d9e0: 202a 782c 2069 6e74 206e 6964 2c0a 2020   *x, int nid,.  
003d9f0: 2020 2069 6e74 206c 6173 7470 6f73 293b     int lastpos);
003da00: 0a69 6e74 2058 3530 3961 745f 6765 745f  .int X509at_get_
003da10: 6174 7472 5f62 795f 4f42 4a28 636f 6e73  attr_by_OBJ(cons
003da20: 7420 7374 7275 6374 2073 7461 636b 5f73  t struct stack_s
003da30: 745f 5835 3039 5f41 5454 5249 4255 5445  t_X509_ATTRIBUTE
003da40: 202a 736b 2c20 4153 4e31 5f4f 424a 4543   *sk, ASN1_OBJEC
003da50: 5420 2a6f 626a 2c0a 2020 2020 2069 6e74  T *obj,.     int
003da60: 206c 6173 7470 6f73 293b 0a58 3530 395f   lastpos);.X509_
003da70: 4154 5452 4942 5554 4520 2a58 3530 3961  ATTRIBUTE *X509a
003da80: 745f 6765 745f 6174 7472 2863 6f6e 7374  t_get_attr(const
003da90: 2073 7472 7563 7420 7374 6163 6b5f 7374   struct stack_st
003daa0: 5f58 3530 395f 4154 5452 4942 5554 4520  _X509_ATTRIBUTE 
003dab0: 2a78 2c20 696e 7420 6c6f 6329 3b0a 5835  *x, int loc);.X5
003dac0: 3039 5f41 5454 5249 4255 5445 202a 5835  09_ATTRIBUTE *X5
003dad0: 3039 6174 5f64 656c 6574 655f 6174 7472  09at_delete_attr
003dae0: 2873 7472 7563 7420 7374 6163 6b5f 7374  (struct stack_st
003daf0: 5f58 3530 395f 4154 5452 4942 5554 4520  _X509_ATTRIBUTE 
003db00: 2a78 2c20 696e 7420 6c6f 6329 3b0a 7374  *x, int loc);.st
003db10: 7275 6374 2073 7461 636b 5f73 745f 5835  ruct stack_st_X5
003db20: 3039 5f41 5454 5249 4255 5445 202a 5835  09_ATTRIBUTE *X5
003db30: 3039 6174 5f61 6464 315f 6174 7472 2873  09at_add1_attr(s
003db40: 7472 7563 7420 7374 6163 6b5f 7374 5f58  truct stack_st_X
003db50: 3530 395f 4154 5452 4942 5554 4520 2a2a  509_ATTRIBUTE **
003db60: 782c 0a20 2020 2020 2058 3530 395f 4154  x,.      X509_AT
003db70: 5452 4942 5554 4520 2a61 7474 7229 3b0a  TRIBUTE *attr);.
003db80: 7374 7275 6374 2073 7461 636b 5f73 745f  struct stack_st_
003db90: 5835 3039 5f41 5454 5249 4255 5445 202a  X509_ATTRIBUTE *
003dba0: 5835 3039 6174 5f61 6464 315f 6174 7472  X509at_add1_attr
003dbb0: 5f62 795f 4f42 4a28 7374 7275 6374 2073  _by_OBJ(struct s
003dbc0: 7461 636b 5f73 745f 5835 3039 5f41 5454  tack_st_X509_ATT
003dbd0: 5249 4255 5445 202a 2a78 2c0a 2020 2063  RIBUTE **x,.   c
003dbe0: 6f6e 7374 2041 534e 315f 4f42 4a45 4354  onst ASN1_OBJECT
003dbf0: 202a 6f62 6a2c 2069 6e74 2074 7970 652c   *obj, int type,
003dc00: 0a20 2020 636f 6e73 7420 756e 7369 676e  .   const unsign
003dc10: 6564 2063 6861 7220 2a62 7974 6573 2c20  ed char *bytes, 
003dc20: 696e 7420 6c65 6e29 3b0a 7374 7275 6374  int len);.struct
003dc30: 2073 7461 636b 5f73 745f 5835 3039 5f41   stack_st_X509_A
003dc40: 5454 5249 4255 5445 202a 5835 3039 6174  TTRIBUTE *X509at
003dc50: 5f61 6464 315f 6174 7472 5f62 795f 4e49  _add1_attr_by_NI
003dc60: 4428 7374 7275 6374 2073 7461 636b 5f73  D(struct stack_s
003dc70: 745f 5835 3039 5f41 5454 5249 4255 5445  t_X509_ATTRIBUTE
003dc80: 202a 2a78 2c0a 2020 2069 6e74 206e 6964   **x,.   int nid
003dc90: 2c20 696e 7420 7479 7065 2c0a 2020 2063  , int type,.   c
003dca0: 6f6e 7374 2075 6e73 6967 6e65 6420 6368  onst unsigned ch
003dcb0: 6172 202a 6279 7465 732c 2069 6e74 206c  ar *bytes, int l
003dcc0: 656e 293b 0a73 7472 7563 7420 7374 6163  en);.struct stac
003dcd0: 6b5f 7374 5f58 3530 395f 4154 5452 4942  k_st_X509_ATTRIB
003dce0: 5554 4520 2a58 3530 3961 745f 6164 6431  UTE *X509at_add1
003dcf0: 5f61 7474 725f 6279 5f74 7874 2873 7472  _attr_by_txt(str
003dd00: 7563 7420 7374 6163 6b5f 7374 5f58 3530  uct stack_st_X50
003dd10: 395f 4154 5452 4942 5554 4520 2a2a 782c  9_ATTRIBUTE **x,
003dd20: 0a20 2020 636f 6e73 7420 6368 6172 202a  .   const char *
003dd30: 6174 7472 6e61 6d65 2c20 696e 7420 7479  attrname, int ty
003dd40: 7065 2c0a 2020 2063 6f6e 7374 2075 6e73  pe,.   const uns
003dd50: 6967 6e65 6420 6368 6172 202a 6279 7465  igned char *byte
003dd60: 732c 2069 6e74 206c 656e 293b 0a76 6f69  s, int len);.voi
003dd70: 6420 2a58 3530 3961 745f 6765 7430 5f64  d *X509at_get0_d
003dd80: 6174 615f 6279 5f4f 424a 2873 7472 7563  ata_by_OBJ(struc
003dd90: 7420 7374 6163 6b5f 7374 5f58 3530 395f  t stack_st_X509_
003dda0: 4154 5452 4942 5554 4520 2a78 2c0a 2020  ATTRIBUTE *x,.  
003ddb0: 2020 4153 4e31 5f4f 424a 4543 5420 2a6f    ASN1_OBJECT *o
003ddc0: 626a 2c20 696e 7420 6c61 7374 706f 732c  bj, int lastpos,
003ddd0: 2069 6e74 2074 7970 6529 3b0a 5835 3039   int type);.X509
003dde0: 5f41 5454 5249 4255 5445 202a 5835 3039  _ATTRIBUTE *X509
003ddf0: 5f41 5454 5249 4255 5445 5f63 7265 6174  _ATTRIBUTE_creat
003de00: 655f 6279 5f4e 4944 2858 3530 395f 4154  e_by_NID(X509_AT
003de10: 5452 4942 5554 4520 2a2a 6174 7472 2c20  TRIBUTE **attr, 
003de20: 696e 7420 6e69 642c 0a20 2020 2020 2069  int nid,.      i
003de30: 6e74 2061 7472 7479 7065 2c20 636f 6e73  nt atrtype, cons
003de40: 7420 766f 6964 202a 6461 7461 2c20 696e  t void *data, in
003de50: 7420 6c65 6e29 3b0a 5835 3039 5f41 5454  t len);.X509_ATT
003de60: 5249 4255 5445 202a 5835 3039 5f41 5454  RIBUTE *X509_ATT
003de70: 5249 4255 5445 5f63 7265 6174 655f 6279  RIBUTE_create_by
003de80: 5f4f 424a 2858 3530 395f 4154 5452 4942  _OBJ(X509_ATTRIB
003de90: 5554 4520 2a2a 6174 7472 2c0a 2020 2020  UTE **attr,.    
003dea0: 2020 636f 6e73 7420 4153 4e31 5f4f 424a    const ASN1_OBJ
003deb0: 4543 5420 2a6f 626a 2c20 696e 7420 6174  ECT *obj, int at
003dec0: 7274 7970 652c 2063 6f6e 7374 2076 6f69  rtype, const voi
003ded0: 6420 2a64 6174 612c 2069 6e74 206c 656e  d *data, int len
003dee0: 293b 0a58 3530 395f 4154 5452 4942 5554  );.X509_ATTRIBUT
003def0: 4520 2a58 3530 395f 4154 5452 4942 5554  E *X509_ATTRIBUT
003df00: 455f 6372 6561 7465 5f62 795f 7478 7428  E_create_by_txt(
003df10: 5835 3039 5f41 5454 5249 4255 5445 202a  X509_ATTRIBUTE *
003df20: 2a61 7474 722c 0a20 2063 6f6e 7374 2063  *attr,.  const c
003df30: 6861 7220 2a61 7472 6e61 6d65 2c20 696e  har *atrname, in
003df40: 7420 7479 7065 2c20 636f 6e73 7420 756e  t type, const un
003df50: 7369 676e 6564 2063 6861 7220 2a62 7974  signed char *byt
003df60: 6573 2c20 696e 7420 6c65 6e29 3b0a 696e  es, int len);.in
003df70: 7420 5835 3039 5f41 5454 5249 4255 5445  t X509_ATTRIBUTE
003df80: 5f73 6574 315f 6f62 6a65 6374 2858 3530  _set1_object(X50
003df90: 395f 4154 5452 4942 5554 4520 2a61 7474  9_ATTRIBUTE *att
003dfa0: 722c 2063 6f6e 7374 2041 534e 315f 4f42  r, const ASN1_OB
003dfb0: 4a45 4354 202a 6f62 6a29 3b0a 696e 7420  JECT *obj);.int 
003dfc0: 5835 3039 5f41 5454 5249 4255 5445 5f73  X509_ATTRIBUTE_s
003dfd0: 6574 315f 6461 7461 2858 3530 395f 4154  et1_data(X509_AT
003dfe0: 5452 4942 5554 4520 2a61 7474 722c 2069  TRIBUTE *attr, i
003dff0: 6e74 2061 7474 7274 7970 652c 2063 6f6e  nt attrtype, con
003e000: 7374 2076 6f69 6420 2a64 6174 612c 2069  st void *data, i
003e010: 6e74 206c 656e 293b 0a76 6f69 6420 2a58  nt len);.void *X
003e020: 3530 395f 4154 5452 4942 5554 455f 6765  509_ATTRIBUTE_ge
003e030: 7430 5f64 6174 6128 5835 3039 5f41 5454  t0_data(X509_ATT
003e040: 5249 4255 5445 202a 6174 7472 2c20 696e  RIBUTE *attr, in
003e050: 7420 6964 782c 0a20 2020 2020 696e 7420  t idx,.     int 
003e060: 6174 7274 7970 652c 2076 6f69 6420 2a64  atrtype, void *d
003e070: 6174 6129 3b0a 696e 7420 5835 3039 5f41  ata);.int X509_A
003e080: 5454 5249 4255 5445 5f63 6f75 6e74 2858  TTRIBUTE_count(X
003e090: 3530 395f 4154 5452 4942 5554 4520 2a61  509_ATTRIBUTE *a
003e0a0: 7474 7229 3b0a 4153 4e31 5f4f 424a 4543  ttr);.ASN1_OBJEC
003e0b0: 5420 2a58 3530 395f 4154 5452 4942 5554  T *X509_ATTRIBUT
003e0c0: 455f 6765 7430 5f6f 626a 6563 7428 5835  E_get0_object(X5
003e0d0: 3039 5f41 5454 5249 4255 5445 202a 6174  09_ATTRIBUTE *at
003e0e0: 7472 293b 0a41 534e 315f 5459 5045 202a  tr);.ASN1_TYPE *
003e0f0: 5835 3039 5f41 5454 5249 4255 5445 5f67  X509_ATTRIBUTE_g
003e100: 6574 305f 7479 7065 2858 3530 395f 4154  et0_type(X509_AT
003e110: 5452 4942 5554 4520 2a61 7474 722c 2069  TRIBUTE *attr, i
003e120: 6e74 2069 6478 293b 0a0a 696e 7420 4556  nt idx);..int EV
003e130: 505f 504b 4559 5f67 6574 5f61 7474 725f  P_PKEY_get_attr_
003e140: 636f 756e 7428 636f 6e73 7420 4556 505f  count(const EVP_
003e150: 504b 4559 202a 6b65 7929 3b0a 696e 7420  PKEY *key);.int 
003e160: 4556 505f 504b 4559 5f67 6574 5f61 7474  EVP_PKEY_get_att
003e170: 725f 6279 5f4e 4944 2863 6f6e 7374 2045  r_by_NID(const E
003e180: 5650 5f50 4b45 5920 2a6b 6579 2c20 696e  VP_PKEY *key, in
003e190: 7420 6e69 642c 0a20 2020 2020 696e 7420  t nid,.     int 
003e1a0: 6c61 7374 706f 7329 3b0a 696e 7420 4556  lastpos);.int EV
003e1b0: 505f 504b 4559 5f67 6574 5f61 7474 725f  P_PKEY_get_attr_
003e1c0: 6279 5f4f 424a 2863 6f6e 7374 2045 5650  by_OBJ(const EVP
003e1d0: 5f50 4b45 5920 2a6b 6579 2c20 4153 4e31  _PKEY *key, ASN1
003e1e0: 5f4f 424a 4543 5420 2a6f 626a 2c0a 2020  _OBJECT *obj,.  
003e1f0: 2020 2069 6e74 206c 6173 7470 6f73 293b     int lastpos);
003e200: 0a58 3530 395f 4154 5452 4942 5554 4520  .X509_ATTRIBUTE 
003e210: 2a45 5650 5f50 4b45 595f 6765 745f 6174  *EVP_PKEY_get_at
003e220: 7472 2863 6f6e 7374 2045 5650 5f50 4b45  tr(const EVP_PKE
003e230: 5920 2a6b 6579 2c20 696e 7420 6c6f 6329  Y *key, int loc)
003e240: 3b0a 5835 3039 5f41 5454 5249 4255 5445  ;.X509_ATTRIBUTE
003e250: 202a 4556 505f 504b 4559 5f64 656c 6574   *EVP_PKEY_delet
003e260: 655f 6174 7472 2845 5650 5f50 4b45 5920  e_attr(EVP_PKEY 
003e270: 2a6b 6579 2c20 696e 7420 6c6f 6329 3b0a  *key, int loc);.
003e280: 696e 7420 4556 505f 504b 4559 5f61 6464  int EVP_PKEY_add
003e290: 315f 6174 7472 2845 5650 5f50 4b45 5920  1_attr(EVP_PKEY 
003e2a0: 2a6b 6579 2c20 5835 3039 5f41 5454 5249  *key, X509_ATTRI
003e2b0: 4255 5445 202a 6174 7472 293b 0a69 6e74  BUTE *attr);.int
003e2c0: 2045 5650 5f50 4b45 595f 6164 6431 5f61   EVP_PKEY_add1_a
003e2d0: 7474 725f 6279 5f4f 424a 2845 5650 5f50  ttr_by_OBJ(EVP_P
003e2e0: 4b45 5920 2a6b 6579 2c0a 2020 2063 6f6e  KEY *key,.   con
003e2f0: 7374 2041 534e 315f 4f42 4a45 4354 202a  st ASN1_OBJECT *
003e300: 6f62 6a2c 2069 6e74 2074 7970 652c 0a20  obj, int type,. 
003e310: 2020 636f 6e73 7420 756e 7369 676e 6564    const unsigned
003e320: 2063 6861 7220 2a62 7974 6573 2c20 696e   char *bytes, in
003e330: 7420 6c65 6e29 3b0a 696e 7420 4556 505f  t len);.int EVP_
003e340: 504b 4559 5f61 6464 315f 6174 7472 5f62  PKEY_add1_attr_b
003e350: 795f 4e49 4428 4556 505f 504b 4559 202a  y_NID(EVP_PKEY *
003e360: 6b65 792c 0a20 2020 696e 7420 6e69 642c  key,.   int nid,
003e370: 2069 6e74 2074 7970 652c 0a20 2020 636f   int type,.   co
003e380: 6e73 7420 756e 7369 676e 6564 2063 6861  nst unsigned cha
003e390: 7220 2a62 7974 6573 2c20 696e 7420 6c65  r *bytes, int le
003e3a0: 6e29 3b0a 696e 7420 4556 505f 504b 4559  n);.int EVP_PKEY
003e3b0: 5f61 6464 315f 6174 7472 5f62 795f 7478  _add1_attr_by_tx
003e3c0: 7428 4556 505f 504b 4559 202a 6b65 792c  t(EVP_PKEY *key,
003e3d0: 0a20 2020 636f 6e73 7420 6368 6172 202a  .   const char *
003e3e0: 6174 7472 6e61 6d65 2c20 696e 7420 7479  attrname, int ty
003e3f0: 7065 2c0a 2020 2063 6f6e 7374 2075 6e73  pe,.   const uns
003e400: 6967 6e65 6420 6368 6172 202a 6279 7465  igned char *byte
003e410: 732c 2069 6e74 206c 656e 293b 0a0a 696e  s, int len);..in
003e420: 7420 5835 3039 5f76 6572 6966 795f 6365  t X509_verify_ce
003e430: 7274 2858 3530 395f 5354 4f52 455f 4354  rt(X509_STORE_CT
003e440: 5820 2a63 7478 293b 0a0a 0a58 3530 3920  X *ctx);...X509 
003e450: 2a58 3530 395f 6669 6e64 5f62 795f 6973  *X509_find_by_is
003e460: 7375 6572 5f61 6e64 5f73 6572 6961 6c28  suer_and_serial(
003e470: 7374 7275 6374 2073 7461 636b 5f73 745f  struct stack_st_
003e480: 5835 3039 202a 736b 2c58 3530 395f 4e41  X509 *sk,X509_NA
003e490: 4d45 202a 6e61 6d65 2c0a 2020 2020 2020  ME *name,.      
003e4a0: 2020 2041 534e 315f 494e 5445 4745 5220     ASN1_INTEGER 
003e4b0: 2a73 6572 6961 6c29 3b0a 5835 3039 202a  *serial);.X509 *
003e4c0: 5835 3039 5f66 696e 645f 6279 5f73 7562  X509_find_by_sub
003e4d0: 6a65 6374 2873 7472 7563 7420 7374 6163  ject(struct stac
003e4e0: 6b5f 7374 5f58 3530 3920 2a73 6b2c 5835  k_st_X509 *sk,X5
003e4f0: 3039 5f4e 414d 4520 2a6e 616d 6529 3b0a  09_NAME *name);.
003e500: 0a50 4245 5041 5241 4d20 2a50 4245 5041  .PBEPARAM *PBEPA
003e510: 5241 4d5f 6e65 7728 766f 6964 293b 2076  RAM_new(void); v
003e520: 6f69 6420 5042 4550 4152 414d 5f66 7265  oid PBEPARAM_fre
003e530: 6528 5042 4550 4152 414d 202a 6129 3b20  e(PBEPARAM *a); 
003e540: 5042 4550 4152 414d 202a 6432 695f 5042  PBEPARAM *d2i_PB
003e550: 4550 4152 414d 2850 4245 5041 5241 4d20  EPARAM(PBEPARAM 
003e560: 2a2a 612c 2063 6f6e 7374 2075 6e73 6967  **a, const unsig
003e570: 6e65 6420 6368 6172 202a 2a69 6e2c 206c  ned char **in, l
003e580: 6f6e 6720 6c65 6e29 3b20 696e 7420 6932  ong len); int i2
003e590: 645f 5042 4550 4152 414d 2850 4245 5041  d_PBEPARAM(PBEPA
003e5a0: 5241 4d20 2a61 2c20 756e 7369 676e 6564  RAM *a, unsigned
003e5b0: 2063 6861 7220 2a2a 6f75 7429 3b20 6578   char **out); ex
003e5c0: 7465 726e 2063 6f6e 7374 2041 534e 315f  tern const ASN1_
003e5d0: 4954 454d 2050 4245 5041 5241 4d5f 6974  ITEM PBEPARAM_it
003e5e0: 3b0a 5042 4532 5041 5241 4d20 2a50 4245  ;.PBE2PARAM *PBE
003e5f0: 3250 4152 414d 5f6e 6577 2876 6f69 6429  2PARAM_new(void)
003e600: 3b20 766f 6964 2050 4245 3250 4152 414d  ; void PBE2PARAM
003e610: 5f66 7265 6528 5042 4532 5041 5241 4d20  _free(PBE2PARAM 
003e620: 2a61 293b 2050 4245 3250 4152 414d 202a  *a); PBE2PARAM *
003e630: 6432 695f 5042 4532 5041 5241 4d28 5042  d2i_PBE2PARAM(PB
003e640: 4532 5041 5241 4d20 2a2a 612c 2063 6f6e  E2PARAM **a, con
003e650: 7374 2075 6e73 6967 6e65 6420 6368 6172  st unsigned char
003e660: 202a 2a69 6e2c 206c 6f6e 6720 6c65 6e29   **in, long len)
003e670: 3b20 696e 7420 6932 645f 5042 4532 5041  ; int i2d_PBE2PA
003e680: 5241 4d28 5042 4532 5041 5241 4d20 2a61  RAM(PBE2PARAM *a
003e690: 2c20 756e 7369 676e 6564 2063 6861 7220  , unsigned char 
003e6a0: 2a2a 6f75 7429 3b20 6578 7465 726e 2063  **out); extern c
003e6b0: 6f6e 7374 2041 534e 315f 4954 454d 2050  onst ASN1_ITEM P
003e6c0: 4245 3250 4152 414d 5f69 743b 0a50 424b  BE2PARAM_it;.PBK
003e6d0: 4446 3250 4152 414d 202a 5042 4b44 4632  DF2PARAM *PBKDF2
003e6e0: 5041 5241 4d5f 6e65 7728 766f 6964 293b  PARAM_new(void);
003e6f0: 2076 6f69 6420 5042 4b44 4632 5041 5241   void PBKDF2PARA
003e700: 4d5f 6672 6565 2850 424b 4446 3250 4152  M_free(PBKDF2PAR
003e710: 414d 202a 6129 3b20 5042 4b44 4632 5041  AM *a); PBKDF2PA
003e720: 5241 4d20 2a64 3269 5f50 424b 4446 3250  RAM *d2i_PBKDF2P
003e730: 4152 414d 2850 424b 4446 3250 4152 414d  ARAM(PBKDF2PARAM
003e740: 202a 2a61 2c20 636f 6e73 7420 756e 7369   **a, const unsi
003e750: 676e 6564 2063 6861 7220 2a2a 696e 2c20  gned char **in, 
003e760: 6c6f 6e67 206c 656e 293b 2069 6e74 2069  long len); int i
003e770: 3264 5f50 424b 4446 3250 4152 414d 2850  2d_PBKDF2PARAM(P
003e780: 424b 4446 3250 4152 414d 202a 612c 2075  BKDF2PARAM *a, u
003e790: 6e73 6967 6e65 6420 6368 6172 202a 2a6f  nsigned char **o
003e7a0: 7574 293b 2065 7874 6572 6e20 636f 6e73  ut); extern cons
003e7b0: 7420 4153 4e31 5f49 5445 4d20 5042 4b44  t ASN1_ITEM PBKD
003e7c0: 4632 5041 5241 4d5f 6974 3b0a 0a69 6e74  F2PARAM_it;..int
003e7d0: 2050 4b43 5335 5f70 6265 5f73 6574 305f   PKCS5_pbe_set0_
003e7e0: 616c 676f 7228 5835 3039 5f41 4c47 4f52  algor(X509_ALGOR
003e7f0: 202a 616c 676f 722c 2069 6e74 2061 6c67   *algor, int alg
003e800: 2c20 696e 7420 6974 6572 2c0a 2020 2020  , int iter,.    
003e810: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
003e820: 6861 7220 2a73 616c 742c 2069 6e74 2073  har *salt, int s
003e830: 616c 746c 656e 293b 0a0a 5835 3039 5f41  altlen);..X509_A
003e840: 4c47 4f52 202a 504b 4353 355f 7062 655f  LGOR *PKCS5_pbe_
003e850: 7365 7428 696e 7420 616c 672c 2069 6e74  set(int alg, int
003e860: 2069 7465 722c 0a20 2020 2063 6f6e 7374   iter,.    const
003e870: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
003e880: 7361 6c74 2c20 696e 7420 7361 6c74 6c65  salt, int saltle
003e890: 6e29 3b0a 5835 3039 5f41 4c47 4f52 202a  n);.X509_ALGOR *
003e8a0: 504b 4353 355f 7062 6532 5f73 6574 2863  PKCS5_pbe2_set(c
003e8b0: 6f6e 7374 2045 5650 5f43 4950 4845 5220  onst EVP_CIPHER 
003e8c0: 2a63 6970 6865 722c 2069 6e74 2069 7465  *cipher, int ite
003e8d0: 722c 0a20 2020 2020 2075 6e73 6967 6e65  r,.      unsigne
003e8e0: 6420 6368 6172 202a 7361 6c74 2c20 696e  d char *salt, in
003e8f0: 7420 7361 6c74 6c65 6e29 3b0a 5835 3039  t saltlen);.X509
003e900: 5f41 4c47 4f52 202a 504b 4353 355f 7062  _ALGOR *PKCS5_pb
003e910: 6532 5f73 6574 5f69 7628 636f 6e73 7420  e2_set_iv(const 
003e920: 4556 505f 4349 5048 4552 202a 6369 7068  EVP_CIPHER *ciph
003e930: 6572 2c20 696e 7420 6974 6572 2c0a 2020  er, int iter,.  
003e940: 2020 2075 6e73 6967 6e65 6420 6368 6172     unsigned char
003e950: 202a 7361 6c74 2c20 696e 7420 7361 6c74   *salt, int salt
003e960: 6c65 6e2c 0a20 2020 2020 756e 7369 676e  len,.     unsign
003e970: 6564 2063 6861 7220 2a61 6976 2c20 696e  ed char *aiv, in
003e980: 7420 7072 665f 6e69 6429 3b0a 0a58 3530  t prf_nid);..X50
003e990: 395f 414c 474f 5220 2a50 4b43 5335 5f70  9_ALGOR *PKCS5_p
003e9a0: 626b 6466 325f 7365 7428 696e 7420 6974  bkdf2_set(int it
003e9b0: 6572 2c20 756e 7369 676e 6564 2063 6861  er, unsigned cha
003e9c0: 7220 2a73 616c 742c 2069 6e74 2073 616c  r *salt, int sal
003e9d0: 746c 656e 2c0a 2020 2020 696e 7420 7072  tlen,.    int pr
003e9e0: 665f 6e69 642c 2069 6e74 206b 6579 6c65  f_nid, int keyle
003e9f0: 6e29 3b0a 0a0a 0a50 4b43 5338 5f50 5249  n);....PKCS8_PRI
003ea00: 565f 4b45 595f 494e 464f 202a 504b 4353  V_KEY_INFO *PKCS
003ea10: 385f 5052 4956 5f4b 4559 5f49 4e46 4f5f  8_PRIV_KEY_INFO_
003ea20: 6e65 7728 766f 6964 293b 2076 6f69 6420  new(void); void 
003ea30: 504b 4353 385f 5052 4956 5f4b 4559 5f49  PKCS8_PRIV_KEY_I
003ea40: 4e46 4f5f 6672 6565 2850 4b43 5338 5f50  NFO_free(PKCS8_P
003ea50: 5249 565f 4b45 595f 494e 464f 202a 6129  RIV_KEY_INFO *a)
003ea60: 3b20 504b 4353 385f 5052 4956 5f4b 4559  ; PKCS8_PRIV_KEY
003ea70: 5f49 4e46 4f20 2a64 3269 5f50 4b43 5338  _INFO *d2i_PKCS8
003ea80: 5f50 5249 565f 4b45 595f 494e 464f 2850  _PRIV_KEY_INFO(P
003ea90: 4b43 5338 5f50 5249 565f 4b45 595f 494e  KCS8_PRIV_KEY_IN
003eaa0: 464f 202a 2a61 2c20 636f 6e73 7420 756e  FO **a, const un
003eab0: 7369 676e 6564 2063 6861 7220 2a2a 696e  signed char **in
003eac0: 2c20 6c6f 6e67 206c 656e 293b 2069 6e74  , long len); int
003ead0: 2069 3264 5f50 4b43 5338 5f50 5249 565f   i2d_PKCS8_PRIV_
003eae0: 4b45 595f 494e 464f 2850 4b43 5338 5f50  KEY_INFO(PKCS8_P
003eaf0: 5249 565f 4b45 595f 494e 464f 202a 612c  RIV_KEY_INFO *a,
003eb00: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
003eb10: 2a6f 7574 293b 2065 7874 6572 6e20 636f  *out); extern co
003eb20: 6e73 7420 4153 4e31 5f49 5445 4d20 504b  nst ASN1_ITEM PK
003eb30: 4353 385f 5052 4956 5f4b 4559 5f49 4e46  CS8_PRIV_KEY_INF
003eb40: 4f5f 6974 3b0a 0a45 5650 5f50 4b45 5920  O_it;..EVP_PKEY 
003eb50: 2a45 5650 5f50 4b43 5338 3250 4b45 5928  *EVP_PKCS82PKEY(
003eb60: 504b 4353 385f 5052 4956 5f4b 4559 5f49  PKCS8_PRIV_KEY_I
003eb70: 4e46 4f20 2a70 3829 3b0a 504b 4353 385f  NFO *p8);.PKCS8_
003eb80: 5052 4956 5f4b 4559 5f49 4e46 4f20 2a45  PRIV_KEY_INFO *E
003eb90: 5650 5f50 4b45 5932 504b 4353 3828 4556  VP_PKEY2PKCS8(EV
003eba0: 505f 504b 4559 202a 706b 6579 293b 0a50  P_PKEY *pkey);.P
003ebb0: 4b43 5338 5f50 5249 565f 4b45 595f 494e  KCS8_PRIV_KEY_IN
003ebc0: 464f 202a 4556 505f 504b 4559 3250 4b43  FO *EVP_PKEY2PKC
003ebd0: 5338 5f62 726f 6b65 6e28 4556 505f 504b  S8_broken(EVP_PK
003ebe0: 4559 202a 706b 6579 2c20 696e 7420 6272  EY *pkey, int br
003ebf0: 6f6b 656e 293b 0a50 4b43 5338 5f50 5249  oken);.PKCS8_PRI
003ec00: 565f 4b45 595f 494e 464f 202a 504b 4353  V_KEY_INFO *PKCS
003ec10: 385f 7365 745f 6272 6f6b 656e 2850 4b43  8_set_broken(PKC
003ec20: 5338 5f50 5249 565f 4b45 595f 494e 464f  S8_PRIV_KEY_INFO
003ec30: 202a 7038 2c20 696e 7420 6272 6f6b 656e   *p8, int broken
003ec40: 293b 0a0a 696e 7420 504b 4353 385f 706b  );..int PKCS8_pk
003ec50: 6579 5f73 6574 3028 504b 4353 385f 5052  ey_set0(PKCS8_PR
003ec60: 4956 5f4b 4559 5f49 4e46 4f20 2a70 7269  IV_KEY_INFO *pri
003ec70: 762c 2041 534e 315f 4f42 4a45 4354 202a  v, ASN1_OBJECT *
003ec80: 616f 626a 2c0a 2020 2069 6e74 2076 6572  aobj,.   int ver
003ec90: 7369 6f6e 2c20 696e 7420 7074 7970 652c  sion, int ptype,
003eca0: 2076 6f69 6420 2a70 7661 6c2c 0a20 2020   void *pval,.   
003ecb0: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
003ecc0: 7065 6e63 2c20 696e 7420 7065 6e63 6c65  penc, int pencle
003ecd0: 6e29 3b0a 696e 7420 504b 4353 385f 706b  n);.int PKCS8_pk
003ece0: 6579 5f67 6574 3028 4153 4e31 5f4f 424a  ey_get0(ASN1_OBJ
003ecf0: 4543 5420 2a2a 7070 6b61 6c67 2c0a 2020  ECT **ppkalg,.  
003ed00: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
003ed10: 6861 7220 2a2a 706b 2c20 696e 7420 2a70  har **pk, int *p
003ed20: 706b 6c65 6e2c 0a20 2058 3530 395f 414c  pklen,.  X509_AL
003ed30: 474f 5220 2a2a 7061 2c0a 2020 504b 4353  GOR **pa,.  PKCS
003ed40: 385f 5052 4956 5f4b 4559 5f49 4e46 4f20  8_PRIV_KEY_INFO 
003ed50: 2a70 3829 3b0a 0a69 6e74 2058 3530 395f  *p8);..int X509_
003ed60: 5055 424b 4559 5f73 6574 305f 7061 7261  PUBKEY_set0_para
003ed70: 6d28 5835 3039 5f50 5542 4b45 5920 2a70  m(X509_PUBKEY *p
003ed80: 7562 2c20 4153 4e31 5f4f 424a 4543 5420  ub, ASN1_OBJECT 
003ed90: 2a61 6f62 6a2c 0a20 2020 2020 696e 7420  *aobj,.     int 
003eda0: 7074 7970 652c 2076 6f69 6420 2a70 7661  ptype, void *pva
003edb0: 6c2c 0a20 2020 2020 756e 7369 676e 6564  l,.     unsigned
003edc0: 2063 6861 7220 2a70 656e 632c 2069 6e74   char *penc, int
003edd0: 2070 656e 636c 656e 293b 0a69 6e74 2058   penclen);.int X
003ede0: 3530 395f 5055 424b 4559 5f67 6574 305f  509_PUBKEY_get0_
003edf0: 7061 7261 6d28 4153 4e31 5f4f 424a 4543  param(ASN1_OBJEC
003ee00: 5420 2a2a 7070 6b61 6c67 2c0a 2020 636f  T **ppkalg,.  co
003ee10: 6e73 7420 756e 7369 676e 6564 2063 6861  nst unsigned cha
003ee20: 7220 2a2a 706b 2c20 696e 7420 2a70 706b  r **pk, int *ppk
003ee30: 6c65 6e2c 0a20 2058 3530 395f 414c 474f  len,.  X509_ALGO
003ee40: 5220 2a2a 7061 2c0a 2020 5835 3039 5f50  R **pa,.  X509_P
003ee50: 5542 4b45 5920 2a70 7562 293b 0a0a 696e  UBKEY *pub);..in
003ee60: 7420 5835 3039 5f63 6865 636b 5f74 7275  t X509_check_tru
003ee70: 7374 2858 3530 3920 2a78 2c20 696e 7420  st(X509 *x, int 
003ee80: 6964 2c20 696e 7420 666c 6167 7329 3b0a  id, int flags);.
003ee90: 696e 7420 5835 3039 5f54 5255 5354 5f67  int X509_TRUST_g
003eea0: 6574 5f63 6f75 6e74 2876 6f69 6429 3b0a  et_count(void);.
003eeb0: 5835 3039 5f54 5255 5354 202a 2058 3530  X509_TRUST * X50
003eec0: 395f 5452 5553 545f 6765 7430 2869 6e74  9_TRUST_get0(int
003eed0: 2069 6478 293b 0a69 6e74 2058 3530 395f   idx);.int X509_
003eee0: 5452 5553 545f 6765 745f 6279 5f69 6428  TRUST_get_by_id(
003eef0: 696e 7420 6964 293b 0a69 6e74 2058 3530  int id);.int X50
003ef00: 395f 5452 5553 545f 6164 6428 696e 7420  9_TRUST_add(int 
003ef10: 6964 2c20 696e 7420 666c 6167 732c 2069  id, int flags, i
003ef20: 6e74 2028 2a63 6b29 2858 3530 395f 5452  nt (*ck)(X509_TR
003ef30: 5553 5420 2a2c 2058 3530 3920 2a2c 2069  UST *, X509 *, i
003ef40: 6e74 292c 0a20 2020 2020 6368 6172 202a  nt),.     char *
003ef50: 6e61 6d65 2c20 696e 7420 6172 6731 2c20  name, int arg1, 
003ef60: 766f 6964 202a 6172 6732 293b 0a76 6f69  void *arg2);.voi
003ef70: 6420 5835 3039 5f54 5255 5354 5f63 6c65  d X509_TRUST_cle
003ef80: 616e 7570 2876 6f69 6429 3b0a 696e 7420  anup(void);.int 
003ef90: 5835 3039 5f54 5255 5354 5f67 6574 5f66  X509_TRUST_get_f
003efa0: 6c61 6773 2858 3530 395f 5452 5553 5420  lags(X509_TRUST 
003efb0: 2a78 7029 3b0a 6368 6172 202a 5835 3039  *xp);.char *X509
003efc0: 5f54 5255 5354 5f67 6574 305f 6e61 6d65  _TRUST_get0_name
003efd0: 2858 3530 395f 5452 5553 5420 2a78 7029  (X509_TRUST *xp)
003efe0: 3b0a 696e 7420 5835 3039 5f54 5255 5354  ;.int X509_TRUST
003eff0: 5f67 6574 5f74 7275 7374 2858 3530 395f  _get_trust(X509_
003f000: 5452 5553 5420 2a78 7029 3b0a 0a0a 0a0a  TRUST *xp);.....
003f010: 0a76 6f69 6420 4552 525f 6c6f 6164 5f58  .void ERR_load_X
003f020: 3530 395f 7374 7269 6e67 7328 766f 6964  509_strings(void
003f030: 293b 0a23 2031 3537 2022 2f75 7372 2f69  );.# 157 "/usr/i
003f040: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f73  nclude/openssl/s
003f050: 736c 2e68 2220 3220 3320 340a 0a0a 0a0a  sl.h" 2 3 4.....
003f060: 0a23 2031 2022 2f75 7372 2f69 6e63 6c75  .# 1 "/usr/inclu
003f070: 6465 2f6f 7065 6e73 736c 2f70 656d 2e68  de/openssl/pem.h
003f080: 2220 3120 3320 340a 2320 3632 2022 2f75  " 1 3 4.# 62 "/u
003f090: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
003f0a0: 736c 2f70 656d 2e68 2220 3320 340a 2320  sl/pem.h" 3 4.# 
003f0b0: 3120 222f 7573 722f 696e 636c 7564 652f  1 "/usr/include/
003f0c0: 6f70 656e 7373 6c2f 655f 6f73 322e 6822  openssl/e_os2.h"
003f0d0: 2031 2033 2034 0a23 2035 3620 222f 7573   1 3 4.# 56 "/us
003f0e0: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
003f0f0: 6c2f 655f 6f73 322e 6822 2033 2034 0a23  l/e_os2.h" 3 4.#
003f100: 2031 2022 2f75 7372 2f69 6e63 6c75 6465   1 "/usr/include
003f110: 2f6f 7065 6e73 736c 2f6f 7065 6e73 736c  /openssl/openssl
003f120: 636f 6e66 2e68 2220 3120 3320 340a 2320  conf.h" 1 3 4.# 
003f130: 3334 2022 2f75 7372 2f69 6e63 6c75 6465  34 "/usr/include
003f140: 2f6f 7065 6e73 736c 2f6f 7065 6e73 736c  /openssl/openssl
003f150: 636f 6e66 2e68 2220 3320 340a 2320 3120  conf.h" 3 4.# 1 
003f160: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
003f170: 656e 7373 6c2f 6f70 656e 7373 6c63 6f6e  enssl/opensslcon
003f180: 662d 7838 365f 3634 2e68 2220 3120 3320  f-x86_64.h" 1 3 
003f190: 340a 2320 3335 2022 2f75 7372 2f69 6e63  4.# 35 "/usr/inc
003f1a0: 6c75 6465 2f6f 7065 6e73 736c 2f6f 7065  lude/openssl/ope
003f1b0: 6e73 736c 636f 6e66 2e68 2220 3220 3320  nsslconf.h" 2 3 
003f1c0: 340a 2320 3537 2022 2f75 7372 2f69 6e63  4.# 57 "/usr/inc
003f1d0: 6c75 6465 2f6f 7065 6e73 736c 2f65 5f6f  lude/openssl/e_o
003f1e0: 7332 2e68 2220 3220 3320 340a 2320 3633  s2.h" 2 3 4.# 63
003f1f0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
003f200: 7065 6e73 736c 2f70 656d 2e68 2220 3220  penssl/pem.h" 2 
003f210: 3320 340a 2320 3731 2022 2f75 7372 2f69  3 4.# 71 "/usr/i
003f220: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f70  nclude/openssl/p
003f230: 656d 2e68 2220 3320 340a 2320 3120 222f  em.h" 3 4.# 1 "/
003f240: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
003f250: 7373 6c2f 7065 6d32 2e68 2220 3120 3320  ssl/pem2.h" 1 3 
003f260: 340a 2320 3732 2022 2f75 7372 2f69 6e63  4.# 72 "/usr/inc
003f270: 6c75 6465 2f6f 7065 6e73 736c 2f70 656d  lude/openssl/pem
003f280: 2e68 2220 3220 3320 340a 2320 3134 3220  .h" 2 3 4.# 142 
003f290: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
003f2a0: 656e 7373 6c2f 7065 6d2e 6822 2033 2034  enssl/pem.h" 3 4
003f2b0: 0a74 7970 6564 6566 2073 7472 7563 7420  .typedef struct 
003f2c0: 5045 4d5f 456e 636f 6465 5f53 6561 6c5f  PEM_Encode_Seal_
003f2d0: 7374 0a20 7b0a 2045 5650 5f45 4e43 4f44  st. {. EVP_ENCOD
003f2e0: 455f 4354 5820 656e 636f 6465 3b0a 2045  E_CTX encode;. E
003f2f0: 5650 5f4d 445f 4354 5820 6d64 3b0a 2045  VP_MD_CTX md;. E
003f300: 5650 5f43 4950 4845 525f 4354 5820 6369  VP_CIPHER_CTX ci
003f310: 7068 6572 3b0a 207d 2050 454d 5f45 4e43  pher;. } PEM_ENC
003f320: 4f44 455f 5345 414c 5f43 5458 3b0a 0a0a  ODE_SEAL_CTX;...
003f330: 0a0a 0a0a 0a74 7970 6564 6566 2073 7472  .....typedef str
003f340: 7563 7420 7065 6d5f 7265 6369 705f 7374  uct pem_recip_st
003f350: 0a20 7b0a 2063 6861 7220 2a6e 616d 653b  . {. char *name;
003f360: 0a20 5835 3039 5f4e 414d 4520 2a64 6e3b  . X509_NAME *dn;
003f370: 0a0a 2069 6e74 2063 6970 6865 723b 0a20  .. int cipher;. 
003f380: 696e 7420 6b65 795f 656e 633b 0a0a 207d  int key_enc;.. }
003f390: 2050 454d 5f55 5345 523b 0a0a 7479 7065   PEM_USER;..type
003f3a0: 6465 6620 7374 7275 6374 2070 656d 5f63  def struct pem_c
003f3b0: 7478 5f73 740a 207b 0a20 696e 7420 7479  tx_st. {. int ty
003f3c0: 7065 3b0a 0a20 7374 7275 6374 207b 0a20  pe;.. struct {. 
003f3d0: 2069 6e74 2076 6572 7369 6f6e 3b0a 2020   int version;.  
003f3e0: 696e 7420 6d6f 6465 3b0a 2020 7d20 7072  int mode;.  } pr
003f3f0: 6f63 5f74 7970 653b 0a0a 2063 6861 7220  oc_type;.. char 
003f400: 2a64 6f6d 6169 6e3b 0a0a 2073 7472 7563  *domain;.. struc
003f410: 7420 7b0a 2020 696e 7420 6369 7068 6572  t {.  int cipher
003f420: 3b0a 0a0a 2020 7d20 4445 4b5f 696e 666f  ;...  } DEK_info
003f430: 3b0a 0a20 5045 4d5f 5553 4552 202a 6f72  ;.. PEM_USER *or
003f440: 6967 696e 6174 6f72 3b0a 0a20 696e 7420  iginator;.. int 
003f450: 6e75 6d5f 7265 6369 7069 656e 743b 0a20  num_recipient;. 
003f460: 5045 4d5f 5553 4552 202a 2a72 6563 6970  PEM_USER **recip
003f470: 6965 6e74 3b0a 0a0a 0a20 4556 505f 4d44  ient;.... EVP_MD
003f480: 202a 6d64 3b0a 0a20 696e 7420 6d64 5f65   *md;.. int md_e
003f490: 6e63 3b0a 2069 6e74 206d 645f 6c65 6e3b  nc;. int md_len;
003f4a0: 0a20 6368 6172 202a 6d64 5f64 6174 613b  . char *md_data;
003f4b0: 0a0a 2045 5650 5f43 4950 4845 5220 2a64  .. EVP_CIPHER *d
003f4c0: 6563 3b0a 2069 6e74 206b 6579 5f6c 656e  ec;. int key_len
003f4d0: 3b0a 2075 6e73 6967 6e65 6420 6368 6172  ;. unsigned char
003f4e0: 202a 6b65 793b 0a0a 0a0a 0a20 696e 7420   *key;..... int 
003f4f0: 6461 7461 5f65 6e63 3b0a 2069 6e74 2064  data_enc;. int d
003f500: 6174 615f 6c65 6e3b 0a20 756e 7369 676e  ata_len;. unsign
003f510: 6564 2063 6861 7220 2a64 6174 613b 0a20  ed char *data;. 
003f520: 7d20 5045 4d5f 4354 583b 0a23 2034 3030  } PEM_CTX;.# 400
003f530: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
003f540: 7065 6e73 736c 2f70 656d 2e68 2220 3320  penssl/pem.h" 3 
003f550: 340a 7479 7065 6465 6620 696e 7420 7065  4.typedef int pe
003f560: 6d5f 7061 7373 776f 7264 5f63 6228 6368  m_password_cb(ch
003f570: 6172 202a 6275 662c 2069 6e74 2073 697a  ar *buf, int siz
003f580: 652c 2069 6e74 2072 7766 6c61 672c 2076  e, int rwflag, v
003f590: 6f69 6420 2a75 7365 7264 6174 6129 3b0a  oid *userdata);.
003f5a0: 0a0a 0a0a 0a69 6e74 2050 454d 5f67 6574  .....int PEM_get
003f5b0: 5f45 5650 5f43 4950 4845 525f 494e 464f  _EVP_CIPHER_INFO
003f5c0: 2863 6861 7220 2a68 6561 6465 722c 2045  (char *header, E
003f5d0: 5650 5f43 4950 4845 525f 494e 464f 202a  VP_CIPHER_INFO *
003f5e0: 6369 7068 6572 293b 0a69 6e74 2050 454d  cipher);.int PEM
003f5f0: 5f64 6f5f 6865 6164 6572 2028 4556 505f  _do_header (EVP_
003f600: 4349 5048 4552 5f49 4e46 4f20 2a63 6970  CIPHER_INFO *cip
003f610: 6865 722c 2075 6e73 6967 6e65 6420 6368  her, unsigned ch
003f620: 6172 202a 6461 7461 2c6c 6f6e 6720 2a6c  ar *data,long *l
003f630: 656e 2c0a 2070 656d 5f70 6173 7377 6f72  en,. pem_passwor
003f640: 645f 6362 202a 6361 6c6c 6261 636b 2c76  d_cb *callback,v
003f650: 6f69 6420 2a75 293b 0a0a 0a69 6e74 2050  oid *u);...int P
003f660: 454d 5f72 6561 645f 6269 6f28 4249 4f20  EM_read_bio(BIO 
003f670: 2a62 702c 2063 6861 7220 2a2a 6e61 6d65  *bp, char **name
003f680: 2c20 6368 6172 202a 2a68 6561 6465 722c  , char **header,
003f690: 0a20 2075 6e73 6967 6e65 6420 6368 6172  .  unsigned char
003f6a0: 202a 2a64 6174 612c 6c6f 6e67 202a 6c65   **data,long *le
003f6b0: 6e29 3b0a 696e 7420 5045 4d5f 7772 6974  n);.int PEM_writ
003f6c0: 655f 6269 6f28 4249 4f20 2a62 702c 636f  e_bio(BIO *bp,co
003f6d0: 6e73 7420 6368 6172 202a 6e61 6d65 2c63  nst char *name,c
003f6e0: 6861 7220 2a68 6472 2c75 6e73 6967 6e65  har *hdr,unsigne
003f6f0: 6420 6368 6172 202a 6461 7461 2c0a 2020  d char *data,.  
003f700: 6c6f 6e67 206c 656e 293b 0a69 6e74 2050  long len);.int P
003f710: 454d 5f62 7974 6573 5f72 6561 645f 6269  EM_bytes_read_bi
003f720: 6f28 756e 7369 676e 6564 2063 6861 7220  o(unsigned char 
003f730: 2a2a 7064 6174 612c 206c 6f6e 6720 2a70  **pdata, long *p
003f740: 6c65 6e2c 2063 6861 7220 2a2a 706e 6d2c  len, char **pnm,
003f750: 2063 6f6e 7374 2063 6861 7220 2a6e 616d   const char *nam
003f760: 652c 2042 494f 202a 6270 2c0a 2020 2020  e, BIO *bp,.    
003f770: 2020 7065 6d5f 7061 7373 776f 7264 5f63    pem_password_c
003f780: 6220 2a63 622c 2076 6f69 6420 2a75 293b  b *cb, void *u);
003f790: 0a76 6f69 6420 2a20 5045 4d5f 4153 4e31  .void * PEM_ASN1
003f7a0: 5f72 6561 645f 6269 6f28 6432 695f 6f66  _read_bio(d2i_of
003f7b0: 5f76 6f69 6420 2a64 3269 2c20 636f 6e73  _void *d2i, cons
003f7c0: 7420 6368 6172 202a 6e61 6d65 2c20 4249  t char *name, BI
003f7d0: 4f20 2a62 702c 0a20 2020 2020 766f 6964  O *bp,.     void
003f7e0: 202a 2a78 2c20 7065 6d5f 7061 7373 776f   **x, pem_passwo
003f7f0: 7264 5f63 6220 2a63 622c 2076 6f69 6420  rd_cb *cb, void 
003f800: 2a75 293b 0a69 6e74 2050 454d 5f41 534e  *u);.int PEM_ASN
003f810: 315f 7772 6974 655f 6269 6f28 6932 645f  1_write_bio(i2d_
003f820: 6f66 5f76 6f69 6420 2a69 3264 2c63 6f6e  of_void *i2d,con
003f830: 7374 2063 6861 7220 2a6e 616d 652c 4249  st char *name,BI
003f840: 4f20 2a62 702c 2076 6f69 6420 2a78 2c0a  O *bp, void *x,.
003f850: 2020 2020 2020 636f 6e73 7420 4556 505f        const EVP_
003f860: 4349 5048 4552 202a 656e 632c 756e 7369  CIPHER *enc,unsi
003f870: 676e 6564 2063 6861 7220 2a6b 7374 722c  gned char *kstr,
003f880: 696e 7420 6b6c 656e 2c0a 2020 2020 2020  int klen,.      
003f890: 7065 6d5f 7061 7373 776f 7264 5f63 6220  pem_password_cb 
003f8a0: 2a63 622c 2076 6f69 6420 2a75 293b 0a0a  *cb, void *u);..
003f8b0: 7374 7275 6374 2073 7461 636b 5f73 745f  struct stack_st_
003f8c0: 5835 3039 5f49 4e46 4f20 2a20 5045 4d5f  X509_INFO * PEM_
003f8d0: 5835 3039 5f49 4e46 4f5f 7265 6164 5f62  X509_INFO_read_b
003f8e0: 696f 2842 494f 202a 6270 2c20 7374 7275  io(BIO *bp, stru
003f8f0: 6374 2073 7461 636b 5f73 745f 5835 3039  ct stack_st_X509
003f900: 5f49 4e46 4f20 2a73 6b2c 2070 656d 5f70  _INFO *sk, pem_p
003f910: 6173 7377 6f72 645f 6362 202a 6362 2c20  assword_cb *cb, 
003f920: 766f 6964 202a 7529 3b0a 696e 7420 5045  void *u);.int PE
003f930: 4d5f 5835 3039 5f49 4e46 4f5f 7772 6974  M_X509_INFO_writ
003f940: 655f 6269 6f28 4249 4f20 2a62 702c 5835  e_bio(BIO *bp,X5
003f950: 3039 5f49 4e46 4f20 2a78 692c 2045 5650  09_INFO *xi, EVP
003f960: 5f43 4950 4845 5220 2a65 6e63 2c0a 2020  _CIPHER *enc,.  
003f970: 756e 7369 676e 6564 2063 6861 7220 2a6b  unsigned char *k
003f980: 7374 722c 2069 6e74 206b 6c65 6e2c 2070  str, int klen, p
003f990: 656d 5f70 6173 7377 6f72 645f 6362 202a  em_password_cb *
003f9a0: 6364 2c20 766f 6964 202a 7529 3b0a 0a0a  cd, void *u);...
003f9b0: 696e 7420 5045 4d5f 7265 6164 2846 494c  int PEM_read(FIL
003f9c0: 4520 2a66 702c 2063 6861 7220 2a2a 6e61  E *fp, char **na
003f9d0: 6d65 2c20 6368 6172 202a 2a68 6561 6465  me, char **heade
003f9e0: 722c 0a20 2075 6e73 6967 6e65 6420 6368  r,.  unsigned ch
003f9f0: 6172 202a 2a64 6174 612c 6c6f 6e67 202a  ar **data,long *
003fa00: 6c65 6e29 3b0a 696e 7420 5045 4d5f 7772  len);.int PEM_wr
003fa10: 6974 6528 4649 4c45 202a 6670 2c63 6861  ite(FILE *fp,cha
003fa20: 7220 2a6e 616d 652c 6368 6172 202a 6864  r *name,char *hd
003fa30: 722c 756e 7369 676e 6564 2063 6861 7220  r,unsigned char 
003fa40: 2a64 6174 612c 6c6f 6e67 206c 656e 293b  *data,long len);
003fa50: 0a76 6f69 6420 2a20 5045 4d5f 4153 4e31  .void * PEM_ASN1
003fa60: 5f72 6561 6428 6432 695f 6f66 5f76 6f69  _read(d2i_of_voi
003fa70: 6420 2a64 3269 2c20 636f 6e73 7420 6368  d *d2i, const ch
003fa80: 6172 202a 6e61 6d65 2c20 4649 4c45 202a  ar *name, FILE *
003fa90: 6670 2c20 766f 6964 202a 2a78 2c0a 2020  fp, void **x,.  
003faa0: 2020 2020 2020 7065 6d5f 7061 7373 776f        pem_passwo
003fab0: 7264 5f63 6220 2a63 622c 2076 6f69 6420  rd_cb *cb, void 
003fac0: 2a75 293b 0a69 6e74 2050 454d 5f41 534e  *u);.int PEM_ASN
003fad0: 315f 7772 6974 6528 6932 645f 6f66 5f76  1_write(i2d_of_v
003fae0: 6f69 6420 2a69 3264 2c63 6f6e 7374 2063  oid *i2d,const c
003faf0: 6861 7220 2a6e 616d 652c 4649 4c45 202a  har *name,FILE *
003fb00: 6670 2c0a 2020 2020 2020 2020 2076 6f69  fp,.         voi
003fb10: 6420 2a78 2c63 6f6e 7374 2045 5650 5f43  d *x,const EVP_C
003fb20: 4950 4845 5220 2a65 6e63 2c75 6e73 6967  IPHER *enc,unsig
003fb30: 6e65 6420 6368 6172 202a 6b73 7472 2c0a  ned char *kstr,.
003fb40: 2020 2020 2020 2020 2069 6e74 206b 6c65           int kle
003fb50: 6e2c 7065 6d5f 7061 7373 776f 7264 5f63  n,pem_password_c
003fb60: 6220 2a63 616c 6c62 6163 6b2c 2076 6f69  b *callback, voi
003fb70: 6420 2a75 293b 0a73 7472 7563 7420 7374  d *u);.struct st
003fb80: 6163 6b5f 7374 5f58 3530 395f 494e 464f  ack_st_X509_INFO
003fb90: 202a 2050 454d 5f58 3530 395f 494e 464f   * PEM_X509_INFO
003fba0: 5f72 6561 6428 4649 4c45 202a 6670 2c20  _read(FILE *fp, 
003fbb0: 7374 7275 6374 2073 7461 636b 5f73 745f  struct stack_st_
003fbc0: 5835 3039 5f49 4e46 4f20 2a73 6b2c 0a20  X509_INFO *sk,. 
003fbd0: 7065 6d5f 7061 7373 776f 7264 5f63 6220  pem_password_cb 
003fbe0: 2a63 622c 2076 6f69 6420 2a75 293b 0a0a  *cb, void *u);..
003fbf0: 696e 7420 5045 4d5f 5365 616c 496e 6974  int PEM_SealInit
003fc00: 2850 454d 5f45 4e43 4f44 455f 5345 414c  (PEM_ENCODE_SEAL
003fc10: 5f43 5458 202a 6374 782c 2045 5650 5f43  _CTX *ctx, EVP_C
003fc20: 4950 4845 5220 2a74 7970 652c 0a20 2045  IPHER *type,.  E
003fc30: 5650 5f4d 4420 2a6d 645f 7479 7065 2c20  VP_MD *md_type, 
003fc40: 756e 7369 676e 6564 2063 6861 7220 2a2a  unsigned char **
003fc50: 656b 2c20 696e 7420 2a65 6b6c 2c0a 2020  ek, int *ekl,.  
003fc60: 756e 7369 676e 6564 2063 6861 7220 2a69  unsigned char *i
003fc70: 762c 2045 5650 5f50 4b45 5920 2a2a 7075  v, EVP_PKEY **pu
003fc80: 626b 2c20 696e 7420 6e70 7562 6b29 3b0a  bk, int npubk);.
003fc90: 766f 6964 2050 454d 5f53 6561 6c55 7064  void PEM_SealUpd
003fca0: 6174 6528 5045 4d5f 454e 434f 4445 5f53  ate(PEM_ENCODE_S
003fcb0: 4541 4c5f 4354 5820 2a63 7478 2c20 756e  EAL_CTX *ctx, un
003fcc0: 7369 676e 6564 2063 6861 7220 2a6f 7574  signed char *out
003fcd0: 2c20 696e 7420 2a6f 7574 6c2c 0a20 2075  , int *outl,.  u
003fce0: 6e73 6967 6e65 6420 6368 6172 202a 696e  nsigned char *in
003fcf0: 2c20 696e 7420 696e 6c29 3b0a 696e 7420  , int inl);.int 
003fd00: 5045 4d5f 5365 616c 4669 6e61 6c28 5045  PEM_SealFinal(PE
003fd10: 4d5f 454e 434f 4445 5f53 4541 4c5f 4354  M_ENCODE_SEAL_CT
003fd20: 5820 2a63 7478 2c20 756e 7369 676e 6564  X *ctx, unsigned
003fd30: 2063 6861 7220 2a73 6967 2c69 6e74 202a   char *sig,int *
003fd40: 7369 676c 2c0a 2020 756e 7369 676e 6564  sigl,.  unsigned
003fd50: 2063 6861 7220 2a6f 7574 2c20 696e 7420   char *out, int 
003fd60: 2a6f 7574 6c2c 2045 5650 5f50 4b45 5920  *outl, EVP_PKEY 
003fd70: 2a70 7269 7629 3b0a 0a76 6f69 6420 5045  *priv);..void PE
003fd80: 4d5f 5369 676e 496e 6974 2845 5650 5f4d  M_SignInit(EVP_M
003fd90: 445f 4354 5820 2a63 7478 2c20 4556 505f  D_CTX *ctx, EVP_
003fda0: 4d44 202a 7479 7065 293b 0a76 6f69 6420  MD *type);.void 
003fdb0: 5045 4d5f 5369 676e 5570 6461 7465 2845  PEM_SignUpdate(E
003fdc0: 5650 5f4d 445f 4354 5820 2a63 7478 2c75  VP_MD_CTX *ctx,u
003fdd0: 6e73 6967 6e65 6420 6368 6172 202a 642c  nsigned char *d,
003fde0: 756e 7369 676e 6564 2069 6e74 2063 6e74  unsigned int cnt
003fdf0: 293b 0a69 6e74 2050 454d 5f53 6967 6e46  );.int PEM_SignF
003fe00: 696e 616c 2845 5650 5f4d 445f 4354 5820  inal(EVP_MD_CTX 
003fe10: 2a63 7478 2c20 756e 7369 676e 6564 2063  *ctx, unsigned c
003fe20: 6861 7220 2a73 6967 7265 742c 0a20 2075  har *sigret,.  u
003fe30: 6e73 6967 6e65 6420 696e 7420 2a73 6967  nsigned int *sig
003fe40: 6c65 6e2c 2045 5650 5f50 4b45 5920 2a70  len, EVP_PKEY *p
003fe50: 6b65 7929 3b0a 0a69 6e74 2050 454d 5f64  key);..int PEM_d
003fe60: 6566 5f63 616c 6c62 6163 6b28 6368 6172  ef_callback(char
003fe70: 202a 6275 662c 2069 6e74 206e 756d 2c20   *buf, int num, 
003fe80: 696e 7420 772c 2076 6f69 6420 2a6b 6579  int w, void *key
003fe90: 293b 0a76 6f69 6420 5045 4d5f 7072 6f63  );.void PEM_proc
003fea0: 5f74 7970 6528 6368 6172 202a 6275 662c  _type(char *buf,
003feb0: 2069 6e74 2074 7970 6529 3b0a 766f 6964   int type);.void
003fec0: 2050 454d 5f64 656b 5f69 6e66 6f28 6368   PEM_dek_info(ch
003fed0: 6172 202a 6275 662c 2063 6f6e 7374 2063  ar *buf, const c
003fee0: 6861 7220 2a74 7970 652c 2069 6e74 206c  har *type, int l
003fef0: 656e 2c20 6368 6172 202a 7374 7229 3b0a  en, char *str);.
003ff00: 0a0a 0a0a 5835 3039 202a 5045 4d5f 7265  ....X509 *PEM_re
003ff10: 6164 5f62 696f 5f58 3530 3928 4249 4f20  ad_bio_X509(BIO 
003ff20: 2a62 702c 2058 3530 3920 2a2a 782c 2070  *bp, X509 **x, p
003ff30: 656d 5f70 6173 7377 6f72 645f 6362 202a  em_password_cb *
003ff40: 6362 2c20 766f 6964 202a 7529 3b20 5835  cb, void *u); X5
003ff50: 3039 202a 5045 4d5f 7265 6164 5f58 3530  09 *PEM_read_X50
003ff60: 3928 4649 4c45 202a 6670 2c20 5835 3039  9(FILE *fp, X509
003ff70: 202a 2a78 2c20 7065 6d5f 7061 7373 776f   **x, pem_passwo
003ff80: 7264 5f63 6220 2a63 622c 2076 6f69 6420  rd_cb *cb, void 
003ff90: 2a75 293b 2069 6e74 2050 454d 5f77 7269  *u); int PEM_wri
003ffa0: 7465 5f62 696f 5f58 3530 3928 4249 4f20  te_bio_X509(BIO 
003ffb0: 2a62 702c 2058 3530 3920 2a78 293b 2069  *bp, X509 *x); i
003ffc0: 6e74 2050 454d 5f77 7269 7465 5f58 3530  nt PEM_write_X50
003ffd0: 3928 4649 4c45 202a 6670 2c20 5835 3039  9(FILE *fp, X509
003ffe0: 202a 7829 3b0a 0a58 3530 3920 2a50 454d   *x);..X509 *PEM
003fff0: 5f72 6561 645f 6269 6f5f 5835 3039 5f41  _read_bio_X509_A
0040000: 5558 2842 494f 202a 6270 2c20 5835 3039  UX(BIO *bp, X509
0040010: 202a 2a78 2c20 7065 6d5f 7061 7373 776f   **x, pem_passwo
0040020: 7264 5f63 6220 2a63 622c 2076 6f69 6420  rd_cb *cb, void 
0040030: 2a75 293b 2058 3530 3920 2a50 454d 5f72  *u); X509 *PEM_r
0040040: 6561 645f 5835 3039 5f41 5558 2846 494c  ead_X509_AUX(FIL
0040050: 4520 2a66 702c 2058 3530 3920 2a2a 782c  E *fp, X509 **x,
0040060: 2070 656d 5f70 6173 7377 6f72 645f 6362   pem_password_cb
0040070: 202a 6362 2c20 766f 6964 202a 7529 3b20   *cb, void *u); 
0040080: 696e 7420 5045 4d5f 7772 6974 655f 6269  int PEM_write_bi
0040090: 6f5f 5835 3039 5f41 5558 2842 494f 202a  o_X509_AUX(BIO *
00400a0: 6270 2c20 5835 3039 202a 7829 3b20 696e  bp, X509 *x); in
00400b0: 7420 5045 4d5f 7772 6974 655f 5835 3039  t PEM_write_X509
00400c0: 5f41 5558 2846 494c 4520 2a66 702c 2058  _AUX(FILE *fp, X
00400d0: 3530 3920 2a78 293b 0a0a 5835 3039 5f43  509 *x);..X509_C
00400e0: 4552 545f 5041 4952 202a 5045 4d5f 7265  ERT_PAIR *PEM_re
00400f0: 6164 5f62 696f 5f58 3530 395f 4345 5254  ad_bio_X509_CERT
0040100: 5f50 4149 5228 4249 4f20 2a62 702c 2058  _PAIR(BIO *bp, X
0040110: 3530 395f 4345 5254 5f50 4149 5220 2a2a  509_CERT_PAIR **
0040120: 782c 2070 656d 5f70 6173 7377 6f72 645f  x, pem_password_
0040130: 6362 202a 6362 2c20 766f 6964 202a 7529  cb *cb, void *u)
0040140: 3b20 5835 3039 5f43 4552 545f 5041 4952  ; X509_CERT_PAIR
0040150: 202a 5045 4d5f 7265 6164 5f58 3530 395f   *PEM_read_X509_
0040160: 4345 5254 5f50 4149 5228 4649 4c45 202a  CERT_PAIR(FILE *
0040170: 6670 2c20 5835 3039 5f43 4552 545f 5041  fp, X509_CERT_PA
0040180: 4952 202a 2a78 2c20 7065 6d5f 7061 7373  IR **x, pem_pass
0040190: 776f 7264 5f63 6220 2a63 622c 2076 6f69  word_cb *cb, voi
00401a0: 6420 2a75 293b 2069 6e74 2050 454d 5f77  d *u); int PEM_w
00401b0: 7269 7465 5f62 696f 5f58 3530 395f 4345  rite_bio_X509_CE
00401c0: 5254 5f50 4149 5228 4249 4f20 2a62 702c  RT_PAIR(BIO *bp,
00401d0: 2058 3530 395f 4345 5254 5f50 4149 5220   X509_CERT_PAIR 
00401e0: 2a78 293b 2069 6e74 2050 454d 5f77 7269  *x); int PEM_wri
00401f0: 7465 5f58 3530 395f 4345 5254 5f50 4149  te_X509_CERT_PAI
0040200: 5228 4649 4c45 202a 6670 2c20 5835 3039  R(FILE *fp, X509
0040210: 5f43 4552 545f 5041 4952 202a 7829 3b0a  _CERT_PAIR *x);.
0040220: 0a58 3530 395f 5245 5120 2a50 454d 5f72  .X509_REQ *PEM_r
0040230: 6561 645f 6269 6f5f 5835 3039 5f52 4551  ead_bio_X509_REQ
0040240: 2842 494f 202a 6270 2c20 5835 3039 5f52  (BIO *bp, X509_R
0040250: 4551 202a 2a78 2c20 7065 6d5f 7061 7373  EQ **x, pem_pass
0040260: 776f 7264 5f63 6220 2a63 622c 2076 6f69  word_cb *cb, voi
0040270: 6420 2a75 293b 2058 3530 395f 5245 5120  d *u); X509_REQ 
0040280: 2a50 454d 5f72 6561 645f 5835 3039 5f52  *PEM_read_X509_R
0040290: 4551 2846 494c 4520 2a66 702c 2058 3530  EQ(FILE *fp, X50
00402a0: 395f 5245 5120 2a2a 782c 2070 656d 5f70  9_REQ **x, pem_p
00402b0: 6173 7377 6f72 645f 6362 202a 6362 2c20  assword_cb *cb, 
00402c0: 766f 6964 202a 7529 3b20 696e 7420 5045  void *u); int PE
00402d0: 4d5f 7772 6974 655f 6269 6f5f 5835 3039  M_write_bio_X509
00402e0: 5f52 4551 2842 494f 202a 6270 2c20 5835  _REQ(BIO *bp, X5
00402f0: 3039 5f52 4551 202a 7829 3b20 696e 7420  09_REQ *x); int 
0040300: 5045 4d5f 7772 6974 655f 5835 3039 5f52  PEM_write_X509_R
0040310: 4551 2846 494c 4520 2a66 702c 2058 3530  EQ(FILE *fp, X50
0040320: 395f 5245 5120 2a78 293b 0a69 6e74 2050  9_REQ *x);.int P
0040330: 454d 5f77 7269 7465 5f62 696f 5f58 3530  EM_write_bio_X50
0040340: 395f 5245 515f 4e45 5728 4249 4f20 2a62  9_REQ_NEW(BIO *b
0040350: 702c 2058 3530 395f 5245 5120 2a78 293b  p, X509_REQ *x);
0040360: 2069 6e74 2050 454d 5f77 7269 7465 5f58   int PEM_write_X
0040370: 3530 395f 5245 515f 4e45 5728 4649 4c45  509_REQ_NEW(FILE
0040380: 202a 6670 2c20 5835 3039 5f52 4551 202a   *fp, X509_REQ *
0040390: 7829 3b0a 0a58 3530 395f 4352 4c20 2a50  x);..X509_CRL *P
00403a0: 454d 5f72 6561 645f 6269 6f5f 5835 3039  EM_read_bio_X509
00403b0: 5f43 524c 2842 494f 202a 6270 2c20 5835  _CRL(BIO *bp, X5
00403c0: 3039 5f43 524c 202a 2a78 2c20 7065 6d5f  09_CRL **x, pem_
00403d0: 7061 7373 776f 7264 5f63 6220 2a63 622c  password_cb *cb,
00403e0: 2076 6f69 6420 2a75 293b 2058 3530 395f   void *u); X509_
00403f0: 4352 4c20 2a50 454d 5f72 6561 645f 5835  CRL *PEM_read_X5
0040400: 3039 5f43 524c 2846 494c 4520 2a66 702c  09_CRL(FILE *fp,
0040410: 2058 3530 395f 4352 4c20 2a2a 782c 2070   X509_CRL **x, p
0040420: 656d 5f70 6173 7377 6f72 645f 6362 202a  em_password_cb *
0040430: 6362 2c20 766f 6964 202a 7529 3b20 696e  cb, void *u); in
0040440: 7420 5045 4d5f 7772 6974 655f 6269 6f5f  t PEM_write_bio_
0040450: 5835 3039 5f43 524c 2842 494f 202a 6270  X509_CRL(BIO *bp
0040460: 2c20 5835 3039 5f43 524c 202a 7829 3b20  , X509_CRL *x); 
0040470: 696e 7420 5045 4d5f 7772 6974 655f 5835  int PEM_write_X5
0040480: 3039 5f43 524c 2846 494c 4520 2a66 702c  09_CRL(FILE *fp,
0040490: 2058 3530 395f 4352 4c20 2a78 293b 0a0a   X509_CRL *x);..
00404a0: 504b 4353 3720 2a50 454d 5f72 6561 645f  PKCS7 *PEM_read_
00404b0: 6269 6f5f 504b 4353 3728 4249 4f20 2a62  bio_PKCS7(BIO *b
00404c0: 702c 2050 4b43 5337 202a 2a78 2c20 7065  p, PKCS7 **x, pe
00404d0: 6d5f 7061 7373 776f 7264 5f63 6220 2a63  m_password_cb *c
00404e0: 622c 2076 6f69 6420 2a75 293b 2050 4b43  b, void *u); PKC
00404f0: 5337 202a 5045 4d5f 7265 6164 5f50 4b43  S7 *PEM_read_PKC
0040500: 5337 2846 494c 4520 2a66 702c 2050 4b43  S7(FILE *fp, PKC
0040510: 5337 202a 2a78 2c20 7065 6d5f 7061 7373  S7 **x, pem_pass
0040520: 776f 7264 5f63 6220 2a63 622c 2076 6f69  word_cb *cb, voi
0040530: 6420 2a75 293b 2069 6e74 2050 454d 5f77  d *u); int PEM_w
0040540: 7269 7465 5f62 696f 5f50 4b43 5337 2842  rite_bio_PKCS7(B
0040550: 494f 202a 6270 2c20 504b 4353 3720 2a78  IO *bp, PKCS7 *x
0040560: 293b 2069 6e74 2050 454d 5f77 7269 7465  ); int PEM_write
0040570: 5f50 4b43 5337 2846 494c 4520 2a66 702c  _PKCS7(FILE *fp,
0040580: 2050 4b43 5337 202a 7829 3b0a 0a4e 4554   PKCS7 *x);..NET
0040590: 5343 4150 455f 4345 5254 5f53 4551 5545  SCAPE_CERT_SEQUE
00405a0: 4e43 4520 2a50 454d 5f72 6561 645f 6269  NCE *PEM_read_bi
00405b0: 6f5f 4e45 5453 4341 5045 5f43 4552 545f  o_NETSCAPE_CERT_
00405c0: 5345 5155 454e 4345 2842 494f 202a 6270  SEQUENCE(BIO *bp
00405d0: 2c20 4e45 5453 4341 5045 5f43 4552 545f  , NETSCAPE_CERT_
00405e0: 5345 5155 454e 4345 202a 2a78 2c20 7065  SEQUENCE **x, pe
00405f0: 6d5f 7061 7373 776f 7264 5f63 6220 2a63  m_password_cb *c
0040600: 622c 2076 6f69 6420 2a75 293b 204e 4554  b, void *u); NET
0040610: 5343 4150 455f 4345 5254 5f53 4551 5545  SCAPE_CERT_SEQUE
0040620: 4e43 4520 2a50 454d 5f72 6561 645f 4e45  NCE *PEM_read_NE
0040630: 5453 4341 5045 5f43 4552 545f 5345 5155  TSCAPE_CERT_SEQU
0040640: 454e 4345 2846 494c 4520 2a66 702c 204e  ENCE(FILE *fp, N
0040650: 4554 5343 4150 455f 4345 5254 5f53 4551  ETSCAPE_CERT_SEQ
0040660: 5545 4e43 4520 2a2a 782c 2070 656d 5f70  UENCE **x, pem_p
0040670: 6173 7377 6f72 645f 6362 202a 6362 2c20  assword_cb *cb, 
0040680: 766f 6964 202a 7529 3b20 696e 7420 5045  void *u); int PE
0040690: 4d5f 7772 6974 655f 6269 6f5f 4e45 5453  M_write_bio_NETS
00406a0: 4341 5045 5f43 4552 545f 5345 5155 454e  CAPE_CERT_SEQUEN
00406b0: 4345 2842 494f 202a 6270 2c20 4e45 5453  CE(BIO *bp, NETS
00406c0: 4341 5045 5f43 4552 545f 5345 5155 454e  CAPE_CERT_SEQUEN
00406d0: 4345 202a 7829 3b20 696e 7420 5045 4d5f  CE *x); int PEM_
00406e0: 7772 6974 655f 4e45 5453 4341 5045 5f43  write_NETSCAPE_C
00406f0: 4552 545f 5345 5155 454e 4345 2846 494c  ERT_SEQUENCE(FIL
0040700: 4520 2a66 702c 204e 4554 5343 4150 455f  E *fp, NETSCAPE_
0040710: 4345 5254 5f53 4551 5545 4e43 4520 2a78  CERT_SEQUENCE *x
0040720: 293b 0a0a 5835 3039 5f53 4947 202a 5045  );..X509_SIG *PE
0040730: 4d5f 7265 6164 5f62 696f 5f50 4b43 5338  M_read_bio_PKCS8
0040740: 2842 494f 202a 6270 2c20 5835 3039 5f53  (BIO *bp, X509_S
0040750: 4947 202a 2a78 2c20 7065 6d5f 7061 7373  IG **x, pem_pass
0040760: 776f 7264 5f63 6220 2a63 622c 2076 6f69  word_cb *cb, voi
0040770: 6420 2a75 293b 2058 3530 395f 5349 4720  d *u); X509_SIG 
0040780: 2a50 454d 5f72 6561 645f 504b 4353 3828  *PEM_read_PKCS8(
0040790: 4649 4c45 202a 6670 2c20 5835 3039 5f53  FILE *fp, X509_S
00407a0: 4947 202a 2a78 2c20 7065 6d5f 7061 7373  IG **x, pem_pass
00407b0: 776f 7264 5f63 6220 2a63 622c 2076 6f69  word_cb *cb, voi
00407c0: 6420 2a75 293b 2069 6e74 2050 454d 5f77  d *u); int PEM_w
00407d0: 7269 7465 5f62 696f 5f50 4b43 5338 2842  rite_bio_PKCS8(B
00407e0: 494f 202a 6270 2c20 5835 3039 5f53 4947  IO *bp, X509_SIG
00407f0: 202a 7829 3b20 696e 7420 5045 4d5f 7772   *x); int PEM_wr
0040800: 6974 655f 504b 4353 3828 4649 4c45 202a  ite_PKCS8(FILE *
0040810: 6670 2c20 5835 3039 5f53 4947 202a 7829  fp, X509_SIG *x)
0040820: 3b0a 0a50 4b43 5338 5f50 5249 565f 4b45  ;..PKCS8_PRIV_KE
0040830: 595f 494e 464f 202a 5045 4d5f 7265 6164  Y_INFO *PEM_read
0040840: 5f62 696f 5f50 4b43 5338 5f50 5249 565f  _bio_PKCS8_PRIV_
0040850: 4b45 595f 494e 464f 2842 494f 202a 6270  KEY_INFO(BIO *bp
0040860: 2c20 504b 4353 385f 5052 4956 5f4b 4559  , PKCS8_PRIV_KEY
0040870: 5f49 4e46 4f20 2a2a 782c 2070 656d 5f70  _INFO **x, pem_p
0040880: 6173 7377 6f72 645f 6362 202a 6362 2c20  assword_cb *cb, 
0040890: 766f 6964 202a 7529 3b20 504b 4353 385f  void *u); PKCS8_
00408a0: 5052 4956 5f4b 4559 5f49 4e46 4f20 2a50  PRIV_KEY_INFO *P
00408b0: 454d 5f72 6561 645f 504b 4353 385f 5052  EM_read_PKCS8_PR
00408c0: 4956 5f4b 4559 5f49 4e46 4f28 4649 4c45  IV_KEY_INFO(FILE
00408d0: 202a 6670 2c20 504b 4353 385f 5052 4956   *fp, PKCS8_PRIV
00408e0: 5f4b 4559 5f49 4e46 4f20 2a2a 782c 2070  _KEY_INFO **x, p
00408f0: 656d 5f70 6173 7377 6f72 645f 6362 202a  em_password_cb *
0040900: 6362 2c20 766f 6964 202a 7529 3b20 696e  cb, void *u); in
0040910: 7420 5045 4d5f 7772 6974 655f 6269 6f5f  t PEM_write_bio_
0040920: 504b 4353 385f 5052 4956 5f4b 4559 5f49  PKCS8_PRIV_KEY_I
0040930: 4e46 4f28 4249 4f20 2a62 702c 2050 4b43  NFO(BIO *bp, PKC
0040940: 5338 5f50 5249 565f 4b45 595f 494e 464f  S8_PRIV_KEY_INFO
0040950: 202a 7829 3b20 696e 7420 5045 4d5f 7772   *x); int PEM_wr
0040960: 6974 655f 504b 4353 385f 5052 4956 5f4b  ite_PKCS8_PRIV_K
0040970: 4559 5f49 4e46 4f28 4649 4c45 202a 6670  EY_INFO(FILE *fp
0040980: 2c20 504b 4353 385f 5052 4956 5f4b 4559  , PKCS8_PRIV_KEY
0040990: 5f49 4e46 4f20 2a78 293b 0a0a 0a0a 5253  _INFO *x);....RS
00409a0: 4120 2a50 454d 5f72 6561 645f 6269 6f5f  A *PEM_read_bio_
00409b0: 5253 4150 7269 7661 7465 4b65 7928 4249  RSAPrivateKey(BI
00409c0: 4f20 2a62 702c 2052 5341 202a 2a78 2c20  O *bp, RSA **x, 
00409d0: 7065 6d5f 7061 7373 776f 7264 5f63 6220  pem_password_cb 
00409e0: 2a63 622c 2076 6f69 6420 2a75 293b 2052  *cb, void *u); R
00409f0: 5341 202a 5045 4d5f 7265 6164 5f52 5341  SA *PEM_read_RSA
0040a00: 5072 6976 6174 654b 6579 2846 494c 4520  PrivateKey(FILE 
0040a10: 2a66 702c 2052 5341 202a 2a78 2c20 7065  *fp, RSA **x, pe
0040a20: 6d5f 7061 7373 776f 7264 5f63 6220 2a63  m_password_cb *c
0040a30: 622c 2076 6f69 6420 2a75 293b 2069 6e74  b, void *u); int
0040a40: 2050 454d 5f77 7269 7465 5f62 696f 5f52   PEM_write_bio_R
0040a50: 5341 5072 6976 6174 654b 6579 2842 494f  SAPrivateKey(BIO
0040a60: 202a 6270 2c20 5253 4120 2a78 2c20 636f   *bp, RSA *x, co
0040a70: 6e73 7420 4556 505f 4349 5048 4552 202a  nst EVP_CIPHER *
0040a80: 656e 632c 2075 6e73 6967 6e65 6420 6368  enc, unsigned ch
0040a90: 6172 202a 6b73 7472 2c20 696e 7420 6b6c  ar *kstr, int kl
0040aa0: 656e 2c20 7065 6d5f 7061 7373 776f 7264  en, pem_password
0040ab0: 5f63 6220 2a63 622c 2076 6f69 6420 2a75  _cb *cb, void *u
0040ac0: 293b 2069 6e74 2050 454d 5f77 7269 7465  ); int PEM_write
0040ad0: 5f52 5341 5072 6976 6174 654b 6579 2846  _RSAPrivateKey(F
0040ae0: 494c 4520 2a66 702c 2052 5341 202a 782c  ILE *fp, RSA *x,
0040af0: 2063 6f6e 7374 2045 5650 5f43 4950 4845   const EVP_CIPHE
0040b00: 5220 2a65 6e63 2c20 756e 7369 676e 6564  R *enc, unsigned
0040b10: 2063 6861 7220 2a6b 7374 722c 2069 6e74   char *kstr, int
0040b20: 206b 6c65 6e2c 2070 656d 5f70 6173 7377   klen, pem_passw
0040b30: 6f72 645f 6362 202a 6362 2c20 766f 6964  ord_cb *cb, void
0040b40: 202a 7529 3b0a 0a52 5341 202a 5045 4d5f   *u);..RSA *PEM_
0040b50: 7265 6164 5f62 696f 5f52 5341 5075 626c  read_bio_RSAPubl
0040b60: 6963 4b65 7928 4249 4f20 2a62 702c 2052  icKey(BIO *bp, R
0040b70: 5341 202a 2a78 2c20 7065 6d5f 7061 7373  SA **x, pem_pass
0040b80: 776f 7264 5f63 6220 2a63 622c 2076 6f69  word_cb *cb, voi
0040b90: 6420 2a75 293b 2052 5341 202a 5045 4d5f  d *u); RSA *PEM_
0040ba0: 7265 6164 5f52 5341 5075 626c 6963 4b65  read_RSAPublicKe
0040bb0: 7928 4649 4c45 202a 6670 2c20 5253 4120  y(FILE *fp, RSA 
0040bc0: 2a2a 782c 2070 656d 5f70 6173 7377 6f72  **x, pem_passwor
0040bd0: 645f 6362 202a 6362 2c20 766f 6964 202a  d_cb *cb, void *
0040be0: 7529 3b20 696e 7420 5045 4d5f 7772 6974  u); int PEM_writ
0040bf0: 655f 6269 6f5f 5253 4150 7562 6c69 634b  e_bio_RSAPublicK
0040c00: 6579 2842 494f 202a 6270 2c20 636f 6e73  ey(BIO *bp, cons
0040c10: 7420 5253 4120 2a78 293b 2069 6e74 2050  t RSA *x); int P
0040c20: 454d 5f77 7269 7465 5f52 5341 5075 626c  EM_write_RSAPubl
0040c30: 6963 4b65 7928 4649 4c45 202a 6670 2c20  icKey(FILE *fp, 
0040c40: 636f 6e73 7420 5253 4120 2a78 293b 0a52  const RSA *x);.R
0040c50: 5341 202a 5045 4d5f 7265 6164 5f62 696f  SA *PEM_read_bio
0040c60: 5f52 5341 5f50 5542 4b45 5928 4249 4f20  _RSA_PUBKEY(BIO 
0040c70: 2a62 702c 2052 5341 202a 2a78 2c20 7065  *bp, RSA **x, pe
0040c80: 6d5f 7061 7373 776f 7264 5f63 6220 2a63  m_password_cb *c
0040c90: 622c 2076 6f69 6420 2a75 293b 2052 5341  b, void *u); RSA
0040ca0: 202a 5045 4d5f 7265 6164 5f52 5341 5f50   *PEM_read_RSA_P
0040cb0: 5542 4b45 5928 4649 4c45 202a 6670 2c20  UBKEY(FILE *fp, 
0040cc0: 5253 4120 2a2a 782c 2070 656d 5f70 6173  RSA **x, pem_pas
0040cd0: 7377 6f72 645f 6362 202a 6362 2c20 766f  sword_cb *cb, vo
0040ce0: 6964 202a 7529 3b20 696e 7420 5045 4d5f  id *u); int PEM_
0040cf0: 7772 6974 655f 6269 6f5f 5253 415f 5055  write_bio_RSA_PU
0040d00: 424b 4559 2842 494f 202a 6270 2c20 5253  BKEY(BIO *bp, RS
0040d10: 4120 2a78 293b 2069 6e74 2050 454d 5f77  A *x); int PEM_w
0040d20: 7269 7465 5f52 5341 5f50 5542 4b45 5928  rite_RSA_PUBKEY(
0040d30: 4649 4c45 202a 6670 2c20 5253 4120 2a78  FILE *fp, RSA *x
0040d40: 293b 0a0a 0a0a 0a0a 4453 4120 2a50 454d  );......DSA *PEM
0040d50: 5f72 6561 645f 6269 6f5f 4453 4150 7269  _read_bio_DSAPri
0040d60: 7661 7465 4b65 7928 4249 4f20 2a62 702c  vateKey(BIO *bp,
0040d70: 2044 5341 202a 2a78 2c20 7065 6d5f 7061   DSA **x, pem_pa
0040d80: 7373 776f 7264 5f63 6220 2a63 622c 2076  ssword_cb *cb, v
0040d90: 6f69 6420 2a75 293b 2044 5341 202a 5045  oid *u); DSA *PE
0040da0: 4d5f 7265 6164 5f44 5341 5072 6976 6174  M_read_DSAPrivat
0040db0: 654b 6579 2846 494c 4520 2a66 702c 2044  eKey(FILE *fp, D
0040dc0: 5341 202a 2a78 2c20 7065 6d5f 7061 7373  SA **x, pem_pass
0040dd0: 776f 7264 5f63 6220 2a63 622c 2076 6f69  word_cb *cb, voi
0040de0: 6420 2a75 293b 2069 6e74 2050 454d 5f77  d *u); int PEM_w
0040df0: 7269 7465 5f62 696f 5f44 5341 5072 6976  rite_bio_DSAPriv
0040e00: 6174 654b 6579 2842 494f 202a 6270 2c20  ateKey(BIO *bp, 
0040e10: 4453 4120 2a78 2c20 636f 6e73 7420 4556  DSA *x, const EV
0040e20: 505f 4349 5048 4552 202a 656e 632c 2075  P_CIPHER *enc, u
0040e30: 6e73 6967 6e65 6420 6368 6172 202a 6b73  nsigned char *ks
0040e40: 7472 2c20 696e 7420 6b6c 656e 2c20 7065  tr, int klen, pe
0040e50: 6d5f 7061 7373 776f 7264 5f63 6220 2a63  m_password_cb *c
0040e60: 622c 2076 6f69 6420 2a75 293b 2069 6e74  b, void *u); int
0040e70: 2050 454d 5f77 7269 7465 5f44 5341 5072   PEM_write_DSAPr
0040e80: 6976 6174 654b 6579 2846 494c 4520 2a66  ivateKey(FILE *f
0040e90: 702c 2044 5341 202a 782c 2063 6f6e 7374  p, DSA *x, const
0040ea0: 2045 5650 5f43 4950 4845 5220 2a65 6e63   EVP_CIPHER *enc
0040eb0: 2c20 756e 7369 676e 6564 2063 6861 7220  , unsigned char 
0040ec0: 2a6b 7374 722c 2069 6e74 206b 6c65 6e2c  *kstr, int klen,
0040ed0: 2070 656d 5f70 6173 7377 6f72 645f 6362   pem_password_cb
0040ee0: 202a 6362 2c20 766f 6964 202a 7529 3b0a   *cb, void *u);.
0040ef0: 0a44 5341 202a 5045 4d5f 7265 6164 5f62  .DSA *PEM_read_b
0040f00: 696f 5f44 5341 5f50 5542 4b45 5928 4249  io_DSA_PUBKEY(BI
0040f10: 4f20 2a62 702c 2044 5341 202a 2a78 2c20  O *bp, DSA **x, 
0040f20: 7065 6d5f 7061 7373 776f 7264 5f63 6220  pem_password_cb 
0040f30: 2a63 622c 2076 6f69 6420 2a75 293b 2044  *cb, void *u); D
0040f40: 5341 202a 5045 4d5f 7265 6164 5f44 5341  SA *PEM_read_DSA
0040f50: 5f50 5542 4b45 5928 4649 4c45 202a 6670  _PUBKEY(FILE *fp
0040f60: 2c20 4453 4120 2a2a 782c 2070 656d 5f70  , DSA **x, pem_p
0040f70: 6173 7377 6f72 645f 6362 202a 6362 2c20  assword_cb *cb, 
0040f80: 766f 6964 202a 7529 3b20 696e 7420 5045  void *u); int PE
0040f90: 4d5f 7772 6974 655f 6269 6f5f 4453 415f  M_write_bio_DSA_
0040fa0: 5055 424b 4559 2842 494f 202a 6270 2c20  PUBKEY(BIO *bp, 
0040fb0: 4453 4120 2a78 293b 2069 6e74 2050 454d  DSA *x); int PEM
0040fc0: 5f77 7269 7465 5f44 5341 5f50 5542 4b45  _write_DSA_PUBKE
0040fd0: 5928 4649 4c45 202a 6670 2c20 4453 4120  Y(FILE *fp, DSA 
0040fe0: 2a78 293b 0a0a 4453 4120 2a50 454d 5f72  *x);..DSA *PEM_r
0040ff0: 6561 645f 6269 6f5f 4453 4170 6172 616d  ead_bio_DSAparam
0041000: 7328 4249 4f20 2a62 702c 2044 5341 202a  s(BIO *bp, DSA *
0041010: 2a78 2c20 7065 6d5f 7061 7373 776f 7264  *x, pem_password
0041020: 5f63 6220 2a63 622c 2076 6f69 6420 2a75  _cb *cb, void *u
0041030: 293b 2044 5341 202a 5045 4d5f 7265 6164  ); DSA *PEM_read
0041040: 5f44 5341 7061 7261 6d73 2846 494c 4520  _DSAparams(FILE 
0041050: 2a66 702c 2044 5341 202a 2a78 2c20 7065  *fp, DSA **x, pe
0041060: 6d5f 7061 7373 776f 7264 5f63 6220 2a63  m_password_cb *c
0041070: 622c 2076 6f69 6420 2a75 293b 2069 6e74  b, void *u); int
0041080: 2050 454d 5f77 7269 7465 5f62 696f 5f44   PEM_write_bio_D
0041090: 5341 7061 7261 6d73 2842 494f 202a 6270  SAparams(BIO *bp
00410a0: 2c20 636f 6e73 7420 4453 4120 2a78 293b  , const DSA *x);
00410b0: 2069 6e74 2050 454d 5f77 7269 7465 5f44   int PEM_write_D
00410c0: 5341 7061 7261 6d73 2846 494c 4520 2a66  SAparams(FILE *f
00410d0: 702c 2063 6f6e 7374 2044 5341 202a 7829  p, const DSA *x)
00410e0: 3b0a 0a0a 0a0a 4543 5f47 524f 5550 202a  ;.....EC_GROUP *
00410f0: 5045 4d5f 7265 6164 5f62 696f 5f45 4350  PEM_read_bio_ECP
0041100: 4b50 6172 616d 6574 6572 7328 4249 4f20  KParameters(BIO 
0041110: 2a62 702c 2045 435f 4752 4f55 5020 2a2a  *bp, EC_GROUP **
0041120: 782c 2070 656d 5f70 6173 7377 6f72 645f  x, pem_password_
0041130: 6362 202a 6362 2c20 766f 6964 202a 7529  cb *cb, void *u)
0041140: 3b20 4543 5f47 524f 5550 202a 5045 4d5f  ; EC_GROUP *PEM_
0041150: 7265 6164 5f45 4350 4b50 6172 616d 6574  read_ECPKParamet
0041160: 6572 7328 4649 4c45 202a 6670 2c20 4543  ers(FILE *fp, EC
0041170: 5f47 524f 5550 202a 2a78 2c20 7065 6d5f  _GROUP **x, pem_
0041180: 7061 7373 776f 7264 5f63 6220 2a63 622c  password_cb *cb,
0041190: 2076 6f69 6420 2a75 293b 2069 6e74 2050   void *u); int P
00411a0: 454d 5f77 7269 7465 5f62 696f 5f45 4350  EM_write_bio_ECP
00411b0: 4b50 6172 616d 6574 6572 7328 4249 4f20  KParameters(BIO 
00411c0: 2a62 702c 2063 6f6e 7374 2045 435f 4752  *bp, const EC_GR
00411d0: 4f55 5020 2a78 293b 2069 6e74 2050 454d  OUP *x); int PEM
00411e0: 5f77 7269 7465 5f45 4350 4b50 6172 616d  _write_ECPKParam
00411f0: 6574 6572 7328 4649 4c45 202a 6670 2c20  eters(FILE *fp, 
0041200: 636f 6e73 7420 4543 5f47 524f 5550 202a  const EC_GROUP *
0041210: 7829 3b0a 4543 5f4b 4559 202a 5045 4d5f  x);.EC_KEY *PEM_
0041220: 7265 6164 5f62 696f 5f45 4350 7269 7661  read_bio_ECPriva
0041230: 7465 4b65 7928 4249 4f20 2a62 702c 2045  teKey(BIO *bp, E
0041240: 435f 4b45 5920 2a2a 782c 2070 656d 5f70  C_KEY **x, pem_p
0041250: 6173 7377 6f72 645f 6362 202a 6362 2c20  assword_cb *cb, 
0041260: 766f 6964 202a 7529 3b20 4543 5f4b 4559  void *u); EC_KEY
0041270: 202a 5045 4d5f 7265 6164 5f45 4350 7269   *PEM_read_ECPri
0041280: 7661 7465 4b65 7928 4649 4c45 202a 6670  vateKey(FILE *fp
0041290: 2c20 4543 5f4b 4559 202a 2a78 2c20 7065  , EC_KEY **x, pe
00412a0: 6d5f 7061 7373 776f 7264 5f63 6220 2a63  m_password_cb *c
00412b0: 622c 2076 6f69 6420 2a75 293b 2069 6e74  b, void *u); int
00412c0: 2050 454d 5f77 7269 7465 5f62 696f 5f45   PEM_write_bio_E
00412d0: 4350 7269 7661 7465 4b65 7928 4249 4f20  CPrivateKey(BIO 
00412e0: 2a62 702c 2045 435f 4b45 5920 2a78 2c20  *bp, EC_KEY *x, 
00412f0: 636f 6e73 7420 4556 505f 4349 5048 4552  const EVP_CIPHER
0041300: 202a 656e 632c 2075 6e73 6967 6e65 6420   *enc, unsigned 
0041310: 6368 6172 202a 6b73 7472 2c20 696e 7420  char *kstr, int 
0041320: 6b6c 656e 2c20 7065 6d5f 7061 7373 776f  klen, pem_passwo
0041330: 7264 5f63 6220 2a63 622c 2076 6f69 6420  rd_cb *cb, void 
0041340: 2a75 293b 2069 6e74 2050 454d 5f77 7269  *u); int PEM_wri
0041350: 7465 5f45 4350 7269 7661 7465 4b65 7928  te_ECPrivateKey(
0041360: 4649 4c45 202a 6670 2c20 4543 5f4b 4559  FILE *fp, EC_KEY
0041370: 202a 782c 2063 6f6e 7374 2045 5650 5f43   *x, const EVP_C
0041380: 4950 4845 5220 2a65 6e63 2c20 756e 7369  IPHER *enc, unsi
0041390: 676e 6564 2063 6861 7220 2a6b 7374 722c  gned char *kstr,
00413a0: 2069 6e74 206b 6c65 6e2c 2070 656d 5f70   int klen, pem_p
00413b0: 6173 7377 6f72 645f 6362 202a 6362 2c20  assword_cb *cb, 
00413c0: 766f 6964 202a 7529 3b0a 4543 5f4b 4559  void *u);.EC_KEY
00413d0: 202a 5045 4d5f 7265 6164 5f62 696f 5f45   *PEM_read_bio_E
00413e0: 435f 5055 424b 4559 2842 494f 202a 6270  C_PUBKEY(BIO *bp
00413f0: 2c20 4543 5f4b 4559 202a 2a78 2c20 7065  , EC_KEY **x, pe
0041400: 6d5f 7061 7373 776f 7264 5f63 6220 2a63  m_password_cb *c
0041410: 622c 2076 6f69 6420 2a75 293b 2045 435f  b, void *u); EC_
0041420: 4b45 5920 2a50 454d 5f72 6561 645f 4543  KEY *PEM_read_EC
0041430: 5f50 5542 4b45 5928 4649 4c45 202a 6670  _PUBKEY(FILE *fp
0041440: 2c20 4543 5f4b 4559 202a 2a78 2c20 7065  , EC_KEY **x, pe
0041450: 6d5f 7061 7373 776f 7264 5f63 6220 2a63  m_password_cb *c
0041460: 622c 2076 6f69 6420 2a75 293b 2069 6e74  b, void *u); int
0041470: 2050 454d 5f77 7269 7465 5f62 696f 5f45   PEM_write_bio_E
0041480: 435f 5055 424b 4559 2842 494f 202a 6270  C_PUBKEY(BIO *bp
0041490: 2c20 4543 5f4b 4559 202a 7829 3b20 696e  , EC_KEY *x); in
00414a0: 7420 5045 4d5f 7772 6974 655f 4543 5f50  t PEM_write_EC_P
00414b0: 5542 4b45 5928 4649 4c45 202a 6670 2c20  UBKEY(FILE *fp, 
00414c0: 4543 5f4b 4559 202a 7829 3b0a 0a0a 0a0a  EC_KEY *x);.....
00414d0: 4448 202a 5045 4d5f 7265 6164 5f62 696f  DH *PEM_read_bio
00414e0: 5f44 4870 6172 616d 7328 4249 4f20 2a62  _DHparams(BIO *b
00414f0: 702c 2044 4820 2a2a 782c 2070 656d 5f70  p, DH **x, pem_p
0041500: 6173 7377 6f72 645f 6362 202a 6362 2c20  assword_cb *cb, 
0041510: 766f 6964 202a 7529 3b20 4448 202a 5045  void *u); DH *PE
0041520: 4d5f 7265 6164 5f44 4870 6172 616d 7328  M_read_DHparams(
0041530: 4649 4c45 202a 6670 2c20 4448 202a 2a78  FILE *fp, DH **x
0041540: 2c20 7065 6d5f 7061 7373 776f 7264 5f63  , pem_password_c
0041550: 6220 2a63 622c 2076 6f69 6420 2a75 293b  b *cb, void *u);
0041560: 2069 6e74 2050 454d 5f77 7269 7465 5f62   int PEM_write_b
0041570: 696f 5f44 4870 6172 616d 7328 4249 4f20  io_DHparams(BIO 
0041580: 2a62 702c 2063 6f6e 7374 2044 4820 2a78  *bp, const DH *x
0041590: 293b 2069 6e74 2050 454d 5f77 7269 7465  ); int PEM_write
00415a0: 5f44 4870 6172 616d 7328 4649 4c45 202a  _DHparams(FILE *
00415b0: 6670 2c20 636f 6e73 7420 4448 202a 7829  fp, const DH *x)
00415c0: 3b0a 0a0a 0a45 5650 5f50 4b45 5920 2a50  ;....EVP_PKEY *P
00415d0: 454d 5f72 6561 645f 6269 6f5f 5072 6976  EM_read_bio_Priv
00415e0: 6174 654b 6579 2842 494f 202a 6270 2c20  ateKey(BIO *bp, 
00415f0: 4556 505f 504b 4559 202a 2a78 2c20 7065  EVP_PKEY **x, pe
0041600: 6d5f 7061 7373 776f 7264 5f63 6220 2a63  m_password_cb *c
0041610: 622c 2076 6f69 6420 2a75 293b 2045 5650  b, void *u); EVP
0041620: 5f50 4b45 5920 2a50 454d 5f72 6561 645f  _PKEY *PEM_read_
0041630: 5072 6976 6174 654b 6579 2846 494c 4520  PrivateKey(FILE 
0041640: 2a66 702c 2045 5650 5f50 4b45 5920 2a2a  *fp, EVP_PKEY **
0041650: 782c 2070 656d 5f70 6173 7377 6f72 645f  x, pem_password_
0041660: 6362 202a 6362 2c20 766f 6964 202a 7529  cb *cb, void *u)
0041670: 3b20 696e 7420 5045 4d5f 7772 6974 655f  ; int PEM_write_
0041680: 6269 6f5f 5072 6976 6174 654b 6579 2842  bio_PrivateKey(B
0041690: 494f 202a 6270 2c20 4556 505f 504b 4559  IO *bp, EVP_PKEY
00416a0: 202a 782c 2063 6f6e 7374 2045 5650 5f43   *x, const EVP_C
00416b0: 4950 4845 5220 2a65 6e63 2c20 756e 7369  IPHER *enc, unsi
00416c0: 676e 6564 2063 6861 7220 2a6b 7374 722c  gned char *kstr,
00416d0: 2069 6e74 206b 6c65 6e2c 2070 656d 5f70   int klen, pem_p
00416e0: 6173 7377 6f72 645f 6362 202a 6362 2c20  assword_cb *cb, 
00416f0: 766f 6964 202a 7529 3b20 696e 7420 5045  void *u); int PE
0041700: 4d5f 7772 6974 655f 5072 6976 6174 654b  M_write_PrivateK
0041710: 6579 2846 494c 4520 2a66 702c 2045 5650  ey(FILE *fp, EVP
0041720: 5f50 4b45 5920 2a78 2c20 636f 6e73 7420  _PKEY *x, const 
0041730: 4556 505f 4349 5048 4552 202a 656e 632c  EVP_CIPHER *enc,
0041740: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
0041750: 6b73 7472 2c20 696e 7420 6b6c 656e 2c20  kstr, int klen, 
0041760: 7065 6d5f 7061 7373 776f 7264 5f63 6220  pem_password_cb 
0041770: 2a63 622c 2076 6f69 6420 2a75 293b 0a0a  *cb, void *u);..
0041780: 4556 505f 504b 4559 202a 5045 4d5f 7265  EVP_PKEY *PEM_re
0041790: 6164 5f62 696f 5f50 5542 4b45 5928 4249  ad_bio_PUBKEY(BI
00417a0: 4f20 2a62 702c 2045 5650 5f50 4b45 5920  O *bp, EVP_PKEY 
00417b0: 2a2a 782c 2070 656d 5f70 6173 7377 6f72  **x, pem_passwor
00417c0: 645f 6362 202a 6362 2c20 766f 6964 202a  d_cb *cb, void *
00417d0: 7529 3b20 4556 505f 504b 4559 202a 5045  u); EVP_PKEY *PE
00417e0: 4d5f 7265 6164 5f50 5542 4b45 5928 4649  M_read_PUBKEY(FI
00417f0: 4c45 202a 6670 2c20 4556 505f 504b 4559  LE *fp, EVP_PKEY
0041800: 202a 2a78 2c20 7065 6d5f 7061 7373 776f   **x, pem_passwo
0041810: 7264 5f63 6220 2a63 622c 2076 6f69 6420  rd_cb *cb, void 
0041820: 2a75 293b 2069 6e74 2050 454d 5f77 7269  *u); int PEM_wri
0041830: 7465 5f62 696f 5f50 5542 4b45 5928 4249  te_bio_PUBKEY(BI
0041840: 4f20 2a62 702c 2045 5650 5f50 4b45 5920  O *bp, EVP_PKEY 
0041850: 2a78 293b 2069 6e74 2050 454d 5f77 7269  *x); int PEM_wri
0041860: 7465 5f50 5542 4b45 5928 4649 4c45 202a  te_PUBKEY(FILE *
0041870: 6670 2c20 4556 505f 504b 4559 202a 7829  fp, EVP_PKEY *x)
0041880: 3b0a 0a69 6e74 2050 454d 5f77 7269 7465  ;..int PEM_write
0041890: 5f62 696f 5f50 4b43 5338 5072 6976 6174  _bio_PKCS8Privat
00418a0: 654b 6579 5f6e 6964 2842 494f 202a 6270  eKey_nid(BIO *bp
00418b0: 2c20 4556 505f 504b 4559 202a 782c 2069  , EVP_PKEY *x, i
00418c0: 6e74 206e 6964 2c0a 2020 2020 2020 6368  nt nid,.      ch
00418d0: 6172 202a 6b73 7472 2c20 696e 7420 6b6c  ar *kstr, int kl
00418e0: 656e 2c0a 2020 2020 2020 7065 6d5f 7061  en,.      pem_pa
00418f0: 7373 776f 7264 5f63 6220 2a63 622c 2076  ssword_cb *cb, v
0041900: 6f69 6420 2a75 293b 0a69 6e74 2050 454d  oid *u);.int PEM
0041910: 5f77 7269 7465 5f62 696f 5f50 4b43 5338  _write_bio_PKCS8
0041920: 5072 6976 6174 654b 6579 2842 494f 202a  PrivateKey(BIO *
0041930: 2c20 4556 505f 504b 4559 202a 2c20 636f  , EVP_PKEY *, co
0041940: 6e73 7420 4556 505f 4349 5048 4552 202a  nst EVP_CIPHER *
0041950: 2c0a 2020 2020 2020 2020 2020 2020 2020  ,.              
0041960: 2020 2020 2020 2020 2020 2020 2020 2020                  
0041970: 2020 2020 6368 6172 202a 2c20 696e 742c      char *, int,
0041980: 2070 656d 5f70 6173 7377 6f72 645f 6362   pem_password_cb
0041990: 202a 2c20 766f 6964 202a 293b 0a69 6e74   *, void *);.int
00419a0: 2069 3264 5f50 4b43 5338 5072 6976 6174   i2d_PKCS8Privat
00419b0: 654b 6579 5f62 696f 2842 494f 202a 6270  eKey_bio(BIO *bp
00419c0: 2c20 4556 505f 504b 4559 202a 782c 2063  , EVP_PKEY *x, c
00419d0: 6f6e 7374 2045 5650 5f43 4950 4845 5220  onst EVP_CIPHER 
00419e0: 2a65 6e63 2c0a 2020 2020 2020 6368 6172  *enc,.      char
00419f0: 202a 6b73 7472 2c20 696e 7420 6b6c 656e   *kstr, int klen
0041a00: 2c0a 2020 2020 2020 7065 6d5f 7061 7373  ,.      pem_pass
0041a10: 776f 7264 5f63 6220 2a63 622c 2076 6f69  word_cb *cb, voi
0041a20: 6420 2a75 293b 0a69 6e74 2069 3264 5f50  d *u);.int i2d_P
0041a30: 4b43 5338 5072 6976 6174 654b 6579 5f6e  KCS8PrivateKey_n
0041a40: 6964 5f62 696f 2842 494f 202a 6270 2c20  id_bio(BIO *bp, 
0041a50: 4556 505f 504b 4559 202a 782c 2069 6e74  EVP_PKEY *x, int
0041a60: 206e 6964 2c0a 2020 2020 2020 6368 6172   nid,.      char
0041a70: 202a 6b73 7472 2c20 696e 7420 6b6c 656e   *kstr, int klen
0041a80: 2c0a 2020 2020 2020 7065 6d5f 7061 7373  ,.      pem_pass
0041a90: 776f 7264 5f63 6220 2a63 622c 2076 6f69  word_cb *cb, voi
0041aa0: 6420 2a75 293b 0a45 5650 5f50 4b45 5920  d *u);.EVP_PKEY 
0041ab0: 2a64 3269 5f50 4b43 5338 5072 6976 6174  *d2i_PKCS8Privat
0041ac0: 654b 6579 5f62 696f 2842 494f 202a 6270  eKey_bio(BIO *bp
0041ad0: 2c20 4556 505f 504b 4559 202a 2a78 2c20  , EVP_PKEY **x, 
0041ae0: 7065 6d5f 7061 7373 776f 7264 5f63 6220  pem_password_cb 
0041af0: 2a63 622c 2076 6f69 6420 2a75 293b 0a0a  *cb, void *u);..
0041b00: 696e 7420 6932 645f 504b 4353 3850 7269  int i2d_PKCS8Pri
0041b10: 7661 7465 4b65 795f 6670 2846 494c 4520  vateKey_fp(FILE 
0041b20: 2a66 702c 2045 5650 5f50 4b45 5920 2a78  *fp, EVP_PKEY *x
0041b30: 2c20 636f 6e73 7420 4556 505f 4349 5048  , const EVP_CIPH
0041b40: 4552 202a 656e 632c 0a20 2020 2020 2063  ER *enc,.      c
0041b50: 6861 7220 2a6b 7374 722c 2069 6e74 206b  har *kstr, int k
0041b60: 6c65 6e2c 0a20 2020 2020 2070 656d 5f70  len,.      pem_p
0041b70: 6173 7377 6f72 645f 6362 202a 6362 2c20  assword_cb *cb, 
0041b80: 766f 6964 202a 7529 3b0a 696e 7420 6932  void *u);.int i2
0041b90: 645f 504b 4353 3850 7269 7661 7465 4b65  d_PKCS8PrivateKe
0041ba0: 795f 6e69 645f 6670 2846 494c 4520 2a66  y_nid_fp(FILE *f
0041bb0: 702c 2045 5650 5f50 4b45 5920 2a78 2c20  p, EVP_PKEY *x, 
0041bc0: 696e 7420 6e69 642c 0a20 2020 2020 2063  int nid,.      c
0041bd0: 6861 7220 2a6b 7374 722c 2069 6e74 206b  har *kstr, int k
0041be0: 6c65 6e2c 0a20 2020 2020 2070 656d 5f70  len,.      pem_p
0041bf0: 6173 7377 6f72 645f 6362 202a 6362 2c20  assword_cb *cb, 
0041c00: 766f 6964 202a 7529 3b0a 696e 7420 5045  void *u);.int PE
0041c10: 4d5f 7772 6974 655f 504b 4353 3850 7269  M_write_PKCS8Pri
0041c20: 7661 7465 4b65 795f 6e69 6428 4649 4c45  vateKey_nid(FILE
0041c30: 202a 6670 2c20 4556 505f 504b 4559 202a   *fp, EVP_PKEY *
0041c40: 782c 2069 6e74 206e 6964 2c0a 2020 2020  x, int nid,.    
0041c50: 2020 6368 6172 202a 6b73 7472 2c20 696e    char *kstr, in
0041c60: 7420 6b6c 656e 2c0a 2020 2020 2020 7065  t klen,.      pe
0041c70: 6d5f 7061 7373 776f 7264 5f63 6220 2a63  m_password_cb *c
0041c80: 622c 2076 6f69 6420 2a75 293b 0a0a 4556  b, void *u);..EV
0041c90: 505f 504b 4559 202a 6432 695f 504b 4353  P_PKEY *d2i_PKCS
0041ca0: 3850 7269 7661 7465 4b65 795f 6670 2846  8PrivateKey_fp(F
0041cb0: 494c 4520 2a66 702c 2045 5650 5f50 4b45  ILE *fp, EVP_PKE
0041cc0: 5920 2a2a 782c 2070 656d 5f70 6173 7377  Y **x, pem_passw
0041cd0: 6f72 645f 6362 202a 6362 2c20 766f 6964  ord_cb *cb, void
0041ce0: 202a 7529 3b0a 0a69 6e74 2050 454d 5f77   *u);..int PEM_w
0041cf0: 7269 7465 5f50 4b43 5338 5072 6976 6174  rite_PKCS8Privat
0041d00: 654b 6579 2846 494c 4520 2a66 702c 4556  eKey(FILE *fp,EV
0041d10: 505f 504b 4559 202a 782c 636f 6e73 7420  P_PKEY *x,const 
0041d20: 4556 505f 4349 5048 4552 202a 656e 632c  EVP_CIPHER *enc,
0041d30: 0a20 2020 2020 2020 2020 6368 6172 202a  .         char *
0041d40: 6b73 7472 2c69 6e74 206b 6c65 6e2c 2070  kstr,int klen, p
0041d50: 656d 5f70 6173 7377 6f72 645f 6362 202a  em_password_cb *
0041d60: 6364 2c20 766f 6964 202a 7529 3b0a 0a45  cd, void *u);..E
0041d70: 5650 5f50 4b45 5920 2a50 454d 5f72 6561  VP_PKEY *PEM_rea
0041d80: 645f 6269 6f5f 5061 7261 6d65 7465 7273  d_bio_Parameters
0041d90: 2842 494f 202a 6270 2c20 4556 505f 504b  (BIO *bp, EVP_PK
0041da0: 4559 202a 2a78 293b 0a69 6e74 2050 454d  EY **x);.int PEM
0041db0: 5f77 7269 7465 5f62 696f 5f50 6172 616d  _write_bio_Param
0041dc0: 6574 6572 7328 4249 4f20 2a62 702c 2045  eters(BIO *bp, E
0041dd0: 5650 5f50 4b45 5920 2a78 293b 0a0a 0a45  VP_PKEY *x);...E
0041de0: 5650 5f50 4b45 5920 2a62 3269 5f50 7269  VP_PKEY *b2i_Pri
0041df0: 7661 7465 4b65 7928 636f 6e73 7420 756e  vateKey(const un
0041e00: 7369 676e 6564 2063 6861 7220 2a2a 696e  signed char **in
0041e10: 2c20 6c6f 6e67 206c 656e 6774 6829 3b0a  , long length);.
0041e20: 4556 505f 504b 4559 202a 6232 695f 5075  EVP_PKEY *b2i_Pu
0041e30: 626c 6963 4b65 7928 636f 6e73 7420 756e  blicKey(const un
0041e40: 7369 676e 6564 2063 6861 7220 2a2a 696e  signed char **in
0041e50: 2c20 6c6f 6e67 206c 656e 6774 6829 3b0a  , long length);.
0041e60: 4556 505f 504b 4559 202a 6232 695f 5072  EVP_PKEY *b2i_Pr
0041e70: 6976 6174 654b 6579 5f62 696f 2842 494f  ivateKey_bio(BIO
0041e80: 202a 696e 293b 0a45 5650 5f50 4b45 5920   *in);.EVP_PKEY 
0041e90: 2a62 3269 5f50 7562 6c69 634b 6579 5f62  *b2i_PublicKey_b
0041ea0: 696f 2842 494f 202a 696e 293b 0a69 6e74  io(BIO *in);.int
0041eb0: 2069 3262 5f50 7269 7661 7465 4b65 795f   i2b_PrivateKey_
0041ec0: 6269 6f28 4249 4f20 2a6f 7574 2c20 4556  bio(BIO *out, EV
0041ed0: 505f 504b 4559 202a 706b 293b 0a69 6e74  P_PKEY *pk);.int
0041ee0: 2069 3262 5f50 7562 6c69 634b 6579 5f62   i2b_PublicKey_b
0041ef0: 696f 2842 494f 202a 6f75 742c 2045 5650  io(BIO *out, EVP
0041f00: 5f50 4b45 5920 2a70 6b29 3b0a 0a45 5650  _PKEY *pk);..EVP
0041f10: 5f50 4b45 5920 2a62 3269 5f50 564b 5f62  _PKEY *b2i_PVK_b
0041f20: 696f 2842 494f 202a 696e 2c20 7065 6d5f  io(BIO *in, pem_
0041f30: 7061 7373 776f 7264 5f63 6220 2a63 622c  password_cb *cb,
0041f40: 2076 6f69 6420 2a75 293b 0a69 6e74 2069   void *u);.int i
0041f50: 3262 5f50 564b 5f62 696f 2842 494f 202a  2b_PVK_bio(BIO *
0041f60: 6f75 742c 2045 5650 5f50 4b45 5920 2a70  out, EVP_PKEY *p
0041f70: 6b2c 2069 6e74 2065 6e63 6c65 7665 6c2c  k, int enclevel,
0041f80: 0a20 2070 656d 5f70 6173 7377 6f72 645f  .  pem_password_
0041f90: 6362 202a 6362 2c20 766f 6964 202a 7529  cb *cb, void *u)
0041fa0: 3b0a 0a0a 0a0a 0a0a 0a76 6f69 6420 4552  ;........void ER
0041fb0: 525f 6c6f 6164 5f50 454d 5f73 7472 696e  R_load_PEM_strin
0041fc0: 6773 2876 6f69 6429 3b0a 2320 3136 3320  gs(void);.# 163 
0041fd0: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
0041fe0: 656e 7373 6c2f 7373 6c2e 6822 2032 2033  enssl/ssl.h" 2 3
0041ff0: 2034 0a23 2031 2022 2f75 7372 2f69 6e63   4.# 1 "/usr/inc
0042000: 6c75 6465 2f6f 7065 6e73 736c 2f68 6d61  lude/openssl/hma
0042010: 632e 6822 2031 2033 2034 0a23 2036 3120  c.h" 1 3 4.# 61 
0042020: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
0042030: 656e 7373 6c2f 686d 6163 2e68 2220 3320  enssl/hmac.h" 3 
0042040: 340a 2320 3120 222f 7573 722f 696e 636c  4.# 1 "/usr/incl
0042050: 7564 652f 6f70 656e 7373 6c2f 6f70 656e  ude/openssl/open
0042060: 7373 6c63 6f6e 662e 6822 2031 2033 2034  sslconf.h" 1 3 4
0042070: 0a23 2033 3420 222f 7573 722f 696e 636c  .# 34 "/usr/incl
0042080: 7564 652f 6f70 656e 7373 6c2f 6f70 656e  ude/openssl/open
0042090: 7373 6c63 6f6e 662e 6822 2033 2034 0a23  sslconf.h" 3 4.#
00420a0: 2031 2022 2f75 7372 2f69 6e63 6c75 6465   1 "/usr/include
00420b0: 2f6f 7065 6e73 736c 2f6f 7065 6e73 736c  /openssl/openssl
00420c0: 636f 6e66 2d78 3836 5f36 342e 6822 2031  conf-x86_64.h" 1
00420d0: 2033 2034 0a23 2033 3520 222f 7573 722f   3 4.# 35 "/usr/
00420e0: 696e 636c 7564 652f 6f70 656e 7373 6c2f  include/openssl/
00420f0: 6f70 656e 7373 6c63 6f6e 662e 6822 2032  opensslconf.h" 2
0042100: 2033 2034 0a23 2036 3220 222f 7573 722f   3 4.# 62 "/usr/
0042110: 696e 636c 7564 652f 6f70 656e 7373 6c2f  include/openssl/
0042120: 686d 6163 2e68 2220 3220 3320 340a 2320  hmac.h" 2 3 4.# 
0042130: 3735 2022 2f75 7372 2f69 6e63 6c75 6465  75 "/usr/include
0042140: 2f6f 7065 6e73 736c 2f68 6d61 632e 6822  /openssl/hmac.h"
0042150: 2033 2034 0a74 7970 6564 6566 2073 7472   3 4.typedef str
0042160: 7563 7420 686d 6163 5f63 7478 5f73 740a  uct hmac_ctx_st.
0042170: 207b 0a20 636f 6e73 7420 4556 505f 4d44   {. const EVP_MD
0042180: 202a 6d64 3b0a 2045 5650 5f4d 445f 4354   *md;. EVP_MD_CT
0042190: 5820 6d64 5f63 7478 3b0a 2045 5650 5f4d  X md_ctx;. EVP_M
00421a0: 445f 4354 5820 695f 6374 783b 0a20 4556  D_CTX i_ctx;. EV
00421b0: 505f 4d44 5f43 5458 206f 5f63 7478 3b0a  P_MD_CTX o_ctx;.
00421c0: 2075 6e73 6967 6e65 6420 696e 7420 6b65   unsigned int ke
00421d0: 795f 6c65 6e67 7468 3b0a 2075 6e73 6967  y_length;. unsig
00421e0: 6e65 6420 6368 6172 206b 6579 5b31 3238  ned char key[128
00421f0: 5d3b 0a20 7d20 484d 4143 5f43 5458 3b0a  ];. } HMAC_CTX;.
0042200: 0a0a 0a0a 766f 6964 2048 4d41 435f 4354  ....void HMAC_CT
0042210: 585f 696e 6974 2848 4d41 435f 4354 5820  X_init(HMAC_CTX 
0042220: 2a63 7478 293b 0a76 6f69 6420 484d 4143  *ctx);.void HMAC
0042230: 5f43 5458 5f63 6c65 616e 7570 2848 4d41  _CTX_cleanup(HMA
0042240: 435f 4354 5820 2a63 7478 293b 0a0a 0a0a  C_CTX *ctx);....
0042250: 696e 7420 484d 4143 5f49 6e69 7428 484d  int HMAC_Init(HM
0042260: 4143 5f43 5458 202a 6374 782c 2063 6f6e  AC_CTX *ctx, con
0042270: 7374 2076 6f69 6420 2a6b 6579 2c20 696e  st void *key, in
0042280: 7420 6c65 6e2c 0a20 2020 2020 2020 2063  t len,.        c
0042290: 6f6e 7374 2045 5650 5f4d 4420 2a6d 6429  onst EVP_MD *md)
00422a0: 3b0a 696e 7420 484d 4143 5f49 6e69 745f  ;.int HMAC_Init_
00422b0: 6578 2848 4d41 435f 4354 5820 2a63 7478  ex(HMAC_CTX *ctx
00422c0: 2c20 636f 6e73 7420 766f 6964 202a 6b65  , const void *ke
00422d0: 792c 2069 6e74 206c 656e 2c0a 2020 2020  y, int len,.    
00422e0: 636f 6e73 7420 4556 505f 4d44 202a 6d64  const EVP_MD *md
00422f0: 2c20 454e 4749 4e45 202a 696d 706c 293b  , ENGINE *impl);
0042300: 0a69 6e74 2048 4d41 435f 5570 6461 7465  .int HMAC_Update
0042310: 2848 4d41 435f 4354 5820 2a63 7478 2c20  (HMAC_CTX *ctx, 
0042320: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
0042330: 6861 7220 2a64 6174 612c 2073 697a 655f  har *data, size_
0042340: 7420 6c65 6e29 3b0a 696e 7420 484d 4143  t len);.int HMAC
0042350: 5f46 696e 616c 2848 4d41 435f 4354 5820  _Final(HMAC_CTX 
0042360: 2a63 7478 2c20 756e 7369 676e 6564 2063  *ctx, unsigned c
0042370: 6861 7220 2a6d 642c 2075 6e73 6967 6e65  har *md, unsigne
0042380: 6420 696e 7420 2a6c 656e 293b 0a75 6e73  d int *len);.uns
0042390: 6967 6e65 6420 6368 6172 202a 484d 4143  igned char *HMAC
00423a0: 2863 6f6e 7374 2045 5650 5f4d 4420 2a65  (const EVP_MD *e
00423b0: 7670 5f6d 642c 2063 6f6e 7374 2076 6f69  vp_md, const voi
00423c0: 6420 2a6b 6579 2c20 696e 7420 6b65 795f  d *key, int key_
00423d0: 6c65 6e2c 0a20 2020 2020 2063 6f6e 7374  len,.      const
00423e0: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
00423f0: 642c 2073 697a 655f 7420 6e2c 2075 6e73  d, size_t n, uns
0042400: 6967 6e65 6420 6368 6172 202a 6d64 2c0a  igned char *md,.
0042410: 2020 2020 2020 756e 7369 676e 6564 2069        unsigned i
0042420: 6e74 202a 6d64 5f6c 656e 293b 0a69 6e74  nt *md_len);.int
0042430: 2048 4d41 435f 4354 585f 636f 7079 2848   HMAC_CTX_copy(H
0042440: 4d41 435f 4354 5820 2a64 6374 782c 2048  MAC_CTX *dctx, H
0042450: 4d41 435f 4354 5820 2a73 6374 7829 3b0a  MAC_CTX *sctx);.
0042460: 0a76 6f69 6420 484d 4143 5f43 5458 5f73  .void HMAC_CTX_s
0042470: 6574 5f66 6c61 6773 2848 4d41 435f 4354  et_flags(HMAC_CT
0042480: 5820 2a63 7478 2c20 756e 7369 676e 6564  X *ctx, unsigned
0042490: 206c 6f6e 6720 666c 6167 7329 3b0a 2320   long flags);.# 
00424a0: 3136 3420 222f 7573 722f 696e 636c 7564  164 "/usr/includ
00424b0: 652f 6f70 656e 7373 6c2f 7373 6c2e 6822  e/openssl/ssl.h"
00424c0: 2032 2033 2034 0a0a 2320 3120 222f 7573   2 3 4..# 1 "/us
00424d0: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
00424e0: 6c2f 6b73 736c 2e68 2220 3120 3320 340a  l/kssl.h" 1 3 4.
00424f0: 2320 3636 2022 2f75 7372 2f69 6e63 6c75  # 66 "/usr/inclu
0042500: 6465 2f6f 7065 6e73 736c 2f6b 7373 6c2e  de/openssl/kssl.
0042510: 6822 2033 2034 0a23 2031 2022 2f75 7372  h" 3 4.# 1 "/usr
0042520: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
0042530: 2f6f 7065 6e73 736c 636f 6e66 2e68 2220  /opensslconf.h" 
0042540: 3120 3320 340a 2320 3334 2022 2f75 7372  1 3 4.# 34 "/usr
0042550: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
0042560: 2f6f 7065 6e73 736c 636f 6e66 2e68 2220  /opensslconf.h" 
0042570: 3320 340a 2320 3120 222f 7573 722f 696e  3 4.# 1 "/usr/in
0042580: 636c 7564 652f 6f70 656e 7373 6c2f 6f70  clude/openssl/op
0042590: 656e 7373 6c63 6f6e 662d 7838 365f 3634  ensslconf-x86_64
00425a0: 2e68 2220 3120 3320 340a 2320 3335 2022  .h" 1 3 4.# 35 "
00425b0: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
00425c0: 6e73 736c 2f6f 7065 6e73 736c 636f 6e66  nssl/opensslconf
00425d0: 2e68 2220 3220 3320 340a 2320 3637 2022  .h" 2 3 4.# 67 "
00425e0: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
00425f0: 6e73 736c 2f6b 7373 6c2e 6822 2032 2033  nssl/kssl.h" 2 3
0042600: 2034 0a0a 0a0a 0a23 2031 2022 2f75 7372   4.....# 1 "/usr
0042610: 2f69 6e63 6c75 6465 2f63 7479 7065 2e68  /include/ctype.h
0042620: 2220 3120 3320 340a 2320 3239 2022 2f75  " 1 3 4.# 29 "/u
0042630: 7372 2f69 6e63 6c75 6465 2f63 7479 7065  sr/include/ctype
0042640: 2e68 2220 3320 340a 0a23 2034 3720 222f  .h" 3 4..# 47 "/
0042650: 7573 722f 696e 636c 7564 652f 6374 7970  usr/include/ctyp
0042660: 652e 6822 2033 2034 0a65 6e75 6d0a 7b0a  e.h" 3 4.enum.{.
0042670: 2020 5f49 5375 7070 6572 203d 2028 2830    _ISupper = ((0
0042680: 2920 3c20 3820 3f20 2828 3120 3c3c 2028  ) < 8 ? ((1 << (
0042690: 3029 2920 3c3c 2038 2920 3a20 2828 3120  0)) << 8) : ((1 
00426a0: 3c3c 2028 3029 2920 3e3e 2038 2929 2c0a  << (0)) >> 8)),.
00426b0: 2020 5f49 536c 6f77 6572 203d 2028 2831    _ISlower = ((1
00426c0: 2920 3c20 3820 3f20 2828 3120 3c3c 2028  ) < 8 ? ((1 << (
00426d0: 3129 2920 3c3c 2038 2920 3a20 2828 3120  1)) << 8) : ((1 
00426e0: 3c3c 2028 3129 2920 3e3e 2038 2929 2c0a  << (1)) >> 8)),.
00426f0: 2020 5f49 5361 6c70 6861 203d 2028 2832    _ISalpha = ((2
0042700: 2920 3c20 3820 3f20 2828 3120 3c3c 2028  ) < 8 ? ((1 << (
0042710: 3229 2920 3c3c 2038 2920 3a20 2828 3120  2)) << 8) : ((1 
0042720: 3c3c 2028 3229 2920 3e3e 2038 2929 2c0a  << (2)) >> 8)),.
0042730: 2020 5f49 5364 6967 6974 203d 2028 2833    _ISdigit = ((3
0042740: 2920 3c20 3820 3f20 2828 3120 3c3c 2028  ) < 8 ? ((1 << (
0042750: 3329 2920 3c3c 2038 2920 3a20 2828 3120  3)) << 8) : ((1 
0042760: 3c3c 2028 3329 2920 3e3e 2038 2929 2c0a  << (3)) >> 8)),.
0042770: 2020 5f49 5378 6469 6769 7420 3d20 2828    _ISxdigit = ((
0042780: 3429 203c 2038 203f 2028 2831 203c 3c20  4) < 8 ? ((1 << 
0042790: 2834 2929 203c 3c20 3829 203a 2028 2831  (4)) << 8) : ((1
00427a0: 203c 3c20 2834 2929 203e 3e20 3829 292c   << (4)) >> 8)),
00427b0: 0a20 205f 4953 7370 6163 6520 3d20 2828  .  _ISspace = ((
00427c0: 3529 203c 2038 203f 2028 2831 203c 3c20  5) < 8 ? ((1 << 
00427d0: 2835 2929 203c 3c20 3829 203a 2028 2831  (5)) << 8) : ((1
00427e0: 203c 3c20 2835 2929 203e 3e20 3829 292c   << (5)) >> 8)),
00427f0: 0a20 205f 4953 7072 696e 7420 3d20 2828  .  _ISprint = ((
0042800: 3629 203c 2038 203f 2028 2831 203c 3c20  6) < 8 ? ((1 << 
0042810: 2836 2929 203c 3c20 3829 203a 2028 2831  (6)) << 8) : ((1
0042820: 203c 3c20 2836 2929 203e 3e20 3829 292c   << (6)) >> 8)),
0042830: 0a20 205f 4953 6772 6170 6820 3d20 2828  .  _ISgraph = ((
0042840: 3729 203c 2038 203f 2028 2831 203c 3c20  7) < 8 ? ((1 << 
0042850: 2837 2929 203c 3c20 3829 203a 2028 2831  (7)) << 8) : ((1
0042860: 203c 3c20 2837 2929 203e 3e20 3829 292c   << (7)) >> 8)),
0042870: 0a20 205f 4953 626c 616e 6b20 3d20 2828  .  _ISblank = ((
0042880: 3829 203c 2038 203f 2028 2831 203c 3c20  8) < 8 ? ((1 << 
0042890: 2838 2929 203c 3c20 3829 203a 2028 2831  (8)) << 8) : ((1
00428a0: 203c 3c20 2838 2929 203e 3e20 3829 292c   << (8)) >> 8)),
00428b0: 0a20 205f 4953 636e 7472 6c20 3d20 2828  .  _IScntrl = ((
00428c0: 3929 203c 2038 203f 2028 2831 203c 3c20  9) < 8 ? ((1 << 
00428d0: 2839 2929 203c 3c20 3829 203a 2028 2831  (9)) << 8) : ((1
00428e0: 203c 3c20 2839 2929 203e 3e20 3829 292c   << (9)) >> 8)),
00428f0: 0a20 205f 4953 7075 6e63 7420 3d20 2828  .  _ISpunct = ((
0042900: 3130 2920 3c20 3820 3f20 2828 3120 3c3c  10) < 8 ? ((1 <<
0042910: 2028 3130 2929 203c 3c20 3829 203a 2028   (10)) << 8) : (
0042920: 2831 203c 3c20 2831 3029 2920 3e3e 2038  (1 << (10)) >> 8
0042930: 2929 2c0a 2020 5f49 5361 6c6e 756d 203d  )),.  _ISalnum =
0042940: 2028 2831 3129 203c 2038 203f 2028 2831   ((11) < 8 ? ((1
0042950: 203c 3c20 2831 3129 2920 3c3c 2038 2920   << (11)) << 8) 
0042960: 3a20 2828 3120 3c3c 2028 3131 2929 203e  : ((1 << (11)) >
0042970: 3e20 3829 290a 7d3b 0a23 2038 3020 222f  > 8)).};.# 80 "/
0042980: 7573 722f 696e 636c 7564 652f 6374 7970  usr/include/ctyp
0042990: 652e 6822 2033 2034 0a65 7874 6572 6e20  e.h" 3 4.extern 
00429a0: 636f 6e73 7420 756e 7369 676e 6564 2073  const unsigned s
00429b0: 686f 7274 2069 6e74 202a 2a5f 5f63 7479  hort int **__cty
00429c0: 7065 5f62 5f6c 6f63 2028 766f 6964 290a  pe_b_loc (void).
00429d0: 2020 2020 205f 5f61 7474 7269 6275 7465       __attribute
00429e0: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
00429f0: 202c 205f 5f6c 6561 665f 5f29 2920 5f5f   , __leaf__)) __
0042a00: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
0042a10: 636f 6e73 745f 5f29 293b 0a65 7874 6572  const__));.exter
0042a20: 6e20 636f 6e73 7420 5f5f 696e 7433 325f  n const __int32_
0042a30: 7420 2a2a 5f5f 6374 7970 655f 746f 6c6f  t **__ctype_tolo
0042a40: 7765 725f 6c6f 6320 2876 6f69 6429 0a20  wer_loc (void). 
0042a50: 2020 2020 5f5f 6174 7472 6962 7574 655f      __attribute_
0042a60: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
0042a70: 2c20 5f5f 6c65 6166 5f5f 2929 205f 5f61  , __leaf__)) __a
0042a80: 7474 7269 6275 7465 5f5f 2028 285f 5f63  ttribute__ ((__c
0042a90: 6f6e 7374 5f5f 2929 3b0a 6578 7465 726e  onst__));.extern
0042aa0: 2063 6f6e 7374 205f 5f69 6e74 3332 5f74   const __int32_t
0042ab0: 202a 2a5f 5f63 7479 7065 5f74 6f75 7070   **__ctype_toupp
0042ac0: 6572 5f6c 6f63 2028 766f 6964 290a 2020  er_loc (void).  
0042ad0: 2020 205f 5f61 7474 7269 6275 7465 5f5f     __attribute__
0042ae0: 2028 285f 5f6e 6f74 6872 6f77 5f5f 202c   ((__nothrow__ ,
0042af0: 205f 5f6c 6561 665f 5f29 2920 5f5f 6174   __leaf__)) __at
0042b00: 7472 6962 7574 655f 5f20 2828 5f5f 636f  tribute__ ((__co
0042b10: 6e73 745f 5f29 293b 0a23 2031 3035 2022  nst__));.# 105 "
0042b20: 2f75 7372 2f69 6e63 6c75 6465 2f63 7479  /usr/include/cty
0042b30: 7065 2e68 2220 3320 340a 0a0a 0a0a 0a0a  pe.h" 3 4.......
0042b40: 6578 7465 726e 2069 6e74 2069 7361 6c6e  extern int isaln
0042b50: 756d 2028 696e 7429 205f 5f61 7474 7269  um (int) __attri
0042b60: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
0042b70: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
0042b80: 293b 0a65 7874 6572 6e20 696e 7420 6973  );.extern int is
0042b90: 616c 7068 6120 2869 6e74 2920 5f5f 6174  alpha (int) __at
0042ba0: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
0042bb0: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
0042bc0: 5f5f 2929 3b0a 6578 7465 726e 2069 6e74  __));.extern int
0042bd0: 2069 7363 6e74 726c 2028 696e 7429 205f   iscntrl (int) _
0042be0: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
0042bf0: 5f6e 6f74 6872 6f77 5f5f 202c 205f 5f6c  _nothrow__ , __l
0042c00: 6561 665f 5f29 293b 0a65 7874 6572 6e20  eaf__));.extern 
0042c10: 696e 7420 6973 6469 6769 7420 2869 6e74  int isdigit (int
0042c20: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
0042c30: 2828 5f5f 6e6f 7468 726f 775f 5f20 2c20  ((__nothrow__ , 
0042c40: 5f5f 6c65 6166 5f5f 2929 3b0a 6578 7465  __leaf__));.exte
0042c50: 726e 2069 6e74 2069 736c 6f77 6572 2028  rn int islower (
0042c60: 696e 7429 205f 5f61 7474 7269 6275 7465  int) __attribute
0042c70: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
0042c80: 202c 205f 5f6c 6561 665f 5f29 293b 0a65   , __leaf__));.e
0042c90: 7874 6572 6e20 696e 7420 6973 6772 6170  xtern int isgrap
0042ca0: 6820 2869 6e74 2920 5f5f 6174 7472 6962  h (int) __attrib
0042cb0: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
0042cc0: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
0042cd0: 3b0a 6578 7465 726e 2069 6e74 2069 7370  ;.extern int isp
0042ce0: 7269 6e74 2028 696e 7429 205f 5f61 7474  rint (int) __att
0042cf0: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
0042d00: 6872 6f77 5f5f 202c 205f 5f6c 6561 665f  hrow__ , __leaf_
0042d10: 5f29 293b 0a65 7874 6572 6e20 696e 7420  _));.extern int 
0042d20: 6973 7075 6e63 7420 2869 6e74 2920 5f5f  ispunct (int) __
0042d30: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
0042d40: 6e6f 7468 726f 775f 5f20 2c20 5f5f 6c65  nothrow__ , __le
0042d50: 6166 5f5f 2929 3b0a 6578 7465 726e 2069  af__));.extern i
0042d60: 6e74 2069 7373 7061 6365 2028 696e 7429  nt isspace (int)
0042d70: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0042d80: 285f 5f6e 6f74 6872 6f77 5f5f 202c 205f  (__nothrow__ , _
0042d90: 5f6c 6561 665f 5f29 293b 0a65 7874 6572  _leaf__));.exter
0042da0: 6e20 696e 7420 6973 7570 7065 7220 2869  n int isupper (i
0042db0: 6e74 2920 5f5f 6174 7472 6962 7574 655f  nt) __attribute_
0042dc0: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
0042dd0: 2c20 5f5f 6c65 6166 5f5f 2929 3b0a 6578  , __leaf__));.ex
0042de0: 7465 726e 2069 6e74 2069 7378 6469 6769  tern int isxdigi
0042df0: 7420 2869 6e74 2920 5f5f 6174 7472 6962  t (int) __attrib
0042e00: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
0042e10: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
0042e20: 3b0a 0a0a 0a65 7874 6572 6e20 696e 7420  ;....extern int 
0042e30: 746f 6c6f 7765 7220 2869 6e74 205f 5f63  tolower (int __c
0042e40: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
0042e50: 2828 5f5f 6e6f 7468 726f 775f 5f20 2c20  ((__nothrow__ , 
0042e60: 5f5f 6c65 6166 5f5f 2929 3b0a 0a0a 6578  __leaf__));...ex
0042e70: 7465 726e 2069 6e74 2074 6f75 7070 6572  tern int toupper
0042e80: 2028 696e 7420 5f5f 6329 205f 5f61 7474   (int __c) __att
0042e90: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
0042ea0: 6872 6f77 5f5f 202c 205f 5f6c 6561 665f  hrow__ , __leaf_
0042eb0: 5f29 293b 0a0a 0a0a 0a0a 0a0a 0a65 7874  _));.........ext
0042ec0: 6572 6e20 696e 7420 6973 626c 616e 6b20  ern int isblank 
0042ed0: 2869 6e74 2920 5f5f 6174 7472 6962 7574  (int) __attribut
0042ee0: 655f 5f20 2828 5f5f 6e6f 7468 726f 775f  e__ ((__nothrow_
0042ef0: 5f20 2c20 5f5f 6c65 6166 5f5f 2929 3b0a  _ , __leaf__));.
0042f00: 0a0a 2320 3135 3120 222f 7573 722f 696e  ..# 151 "/usr/in
0042f10: 636c 7564 652f 6374 7970 652e 6822 2033  clude/ctype.h" 3
0042f20: 2034 0a65 7874 6572 6e20 696e 7420 6973   4.extern int is
0042f30: 6173 6369 6920 2869 6e74 205f 5f63 2920  ascii (int __c) 
0042f40: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
0042f50: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
0042f60: 6c65 6166 5f5f 2929 3b0a 0a0a 0a65 7874  leaf__));....ext
0042f70: 6572 6e20 696e 7420 746f 6173 6369 6920  ern int toascii 
0042f80: 2869 6e74 205f 5f63 2920 5f5f 6174 7472  (int __c) __attr
0042f90: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
0042fa0: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
0042fb0: 2929 3b0a 0a0a 0a65 7874 6572 6e20 696e  ));....extern in
0042fc0: 7420 5f74 6f75 7070 6572 2028 696e 7429  t _toupper (int)
0042fd0: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0042fe0: 285f 5f6e 6f74 6872 6f77 5f5f 202c 205f  (__nothrow__ , _
0042ff0: 5f6c 6561 665f 5f29 293b 0a65 7874 6572  _leaf__));.exter
0043000: 6e20 696e 7420 5f74 6f6c 6f77 6572 2028  n int _tolower (
0043010: 696e 7429 205f 5f61 7474 7269 6275 7465  int) __attribute
0043020: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
0043030: 202c 205f 5f6c 6561 665f 5f29 293b 0a23   , __leaf__));.#
0043040: 2032 3732 2022 2f75 7372 2f69 6e63 6c75   272 "/usr/inclu
0043050: 6465 2f63 7479 7065 2e68 2220 3320 340a  de/ctype.h" 3 4.
0043060: 6578 7465 726e 2069 6e74 2069 7361 6c6e  extern int isaln
0043070: 756d 5f6c 2028 696e 742c 205f 5f6c 6f63  um_l (int, __loc
0043080: 616c 655f 7429 205f 5f61 7474 7269 6275  ale_t) __attribu
0043090: 7465 5f5f 2028 285f 5f6e 6f74 6872 6f77  te__ ((__nothrow
00430a0: 5f5f 202c 205f 5f6c 6561 665f 5f29 293b  __ , __leaf__));
00430b0: 0a65 7874 6572 6e20 696e 7420 6973 616c  .extern int isal
00430c0: 7068 615f 6c20 2869 6e74 2c20 5f5f 6c6f  pha_l (int, __lo
00430d0: 6361 6c65 5f74 2920 5f5f 6174 7472 6962  cale_t) __attrib
00430e0: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
00430f0: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
0043100: 3b0a 6578 7465 726e 2069 6e74 2069 7363  ;.extern int isc
0043110: 6e74 726c 5f6c 2028 696e 742c 205f 5f6c  ntrl_l (int, __l
0043120: 6f63 616c 655f 7429 205f 5f61 7474 7269  ocale_t) __attri
0043130: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
0043140: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
0043150: 293b 0a65 7874 6572 6e20 696e 7420 6973  );.extern int is
0043160: 6469 6769 745f 6c20 2869 6e74 2c20 5f5f  digit_l (int, __
0043170: 6c6f 6361 6c65 5f74 2920 5f5f 6174 7472  locale_t) __attr
0043180: 6962 7574 655f 5f20 2828 5f5f 6e6f 7468  ibute__ ((__noth
0043190: 726f 775f 5f20 2c20 5f5f 6c65 6166 5f5f  row__ , __leaf__
00431a0: 2929 3b0a 6578 7465 726e 2069 6e74 2069  ));.extern int i
00431b0: 736c 6f77 6572 5f6c 2028 696e 742c 205f  slower_l (int, _
00431c0: 5f6c 6f63 616c 655f 7429 205f 5f61 7474  _locale_t) __att
00431d0: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
00431e0: 6872 6f77 5f5f 202c 205f 5f6c 6561 665f  hrow__ , __leaf_
00431f0: 5f29 293b 0a65 7874 6572 6e20 696e 7420  _));.extern int 
0043200: 6973 6772 6170 685f 6c20 2869 6e74 2c20  isgraph_l (int, 
0043210: 5f5f 6c6f 6361 6c65 5f74 2920 5f5f 6174  __locale_t) __at
0043220: 7472 6962 7574 655f 5f20 2828 5f5f 6e6f  tribute__ ((__no
0043230: 7468 726f 775f 5f20 2c20 5f5f 6c65 6166  throw__ , __leaf
0043240: 5f5f 2929 3b0a 6578 7465 726e 2069 6e74  __));.extern int
0043250: 2069 7370 7269 6e74 5f6c 2028 696e 742c   isprint_l (int,
0043260: 205f 5f6c 6f63 616c 655f 7429 205f 5f61   __locale_t) __a
0043270: 7474 7269 6275 7465 5f5f 2028 285f 5f6e  ttribute__ ((__n
0043280: 6f74 6872 6f77 5f5f 202c 205f 5f6c 6561  othrow__ , __lea
0043290: 665f 5f29 293b 0a65 7874 6572 6e20 696e  f__));.extern in
00432a0: 7420 6973 7075 6e63 745f 6c20 2869 6e74  t ispunct_l (int
00432b0: 2c20 5f5f 6c6f 6361 6c65 5f74 2920 5f5f  , __locale_t) __
00432c0: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
00432d0: 6e6f 7468 726f 775f 5f20 2c20 5f5f 6c65  nothrow__ , __le
00432e0: 6166 5f5f 2929 3b0a 6578 7465 726e 2069  af__));.extern i
00432f0: 6e74 2069 7373 7061 6365 5f6c 2028 696e  nt isspace_l (in
0043300: 742c 205f 5f6c 6f63 616c 655f 7429 205f  t, __locale_t) _
0043310: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
0043320: 5f6e 6f74 6872 6f77 5f5f 202c 205f 5f6c  _nothrow__ , __l
0043330: 6561 665f 5f29 293b 0a65 7874 6572 6e20  eaf__));.extern 
0043340: 696e 7420 6973 7570 7065 725f 6c20 2869  int isupper_l (i
0043350: 6e74 2c20 5f5f 6c6f 6361 6c65 5f74 2920  nt, __locale_t) 
0043360: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
0043370: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
0043380: 6c65 6166 5f5f 2929 3b0a 6578 7465 726e  leaf__));.extern
0043390: 2069 6e74 2069 7378 6469 6769 745f 6c20   int isxdigit_l 
00433a0: 2869 6e74 2c20 5f5f 6c6f 6361 6c65 5f74  (int, __locale_t
00433b0: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
00433c0: 2828 5f5f 6e6f 7468 726f 775f 5f20 2c20  ((__nothrow__ , 
00433d0: 5f5f 6c65 6166 5f5f 2929 3b0a 0a65 7874  __leaf__));..ext
00433e0: 6572 6e20 696e 7420 6973 626c 616e 6b5f  ern int isblank_
00433f0: 6c20 2869 6e74 2c20 5f5f 6c6f 6361 6c65  l (int, __locale
0043400: 5f74 2920 5f5f 6174 7472 6962 7574 655f  _t) __attribute_
0043410: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
0043420: 2c20 5f5f 6c65 6166 5f5f 2929 3b0a 0a0a  , __leaf__));...
0043430: 0a65 7874 6572 6e20 696e 7420 5f5f 746f  .extern int __to
0043440: 6c6f 7765 725f 6c20 2869 6e74 205f 5f63  lower_l (int __c
0043450: 2c20 5f5f 6c6f 6361 6c65 5f74 205f 5f6c  , __locale_t __l
0043460: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
0043470: 2828 5f5f 6e6f 7468 726f 775f 5f20 2c20  ((__nothrow__ , 
0043480: 5f5f 6c65 6166 5f5f 2929 3b0a 6578 7465  __leaf__));.exte
0043490: 726e 2069 6e74 2074 6f6c 6f77 6572 5f6c  rn int tolower_l
00434a0: 2028 696e 7420 5f5f 632c 205f 5f6c 6f63   (int __c, __loc
00434b0: 616c 655f 7420 5f5f 6c29 205f 5f61 7474  ale_t __l) __att
00434c0: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
00434d0: 6872 6f77 5f5f 202c 205f 5f6c 6561 665f  hrow__ , __leaf_
00434e0: 5f29 293b 0a0a 0a65 7874 6572 6e20 696e  _));...extern in
00434f0: 7420 5f5f 746f 7570 7065 725f 6c20 2869  t __toupper_l (i
0043500: 6e74 205f 5f63 2c20 5f5f 6c6f 6361 6c65  nt __c, __locale
0043510: 5f74 205f 5f6c 2920 5f5f 6174 7472 6962  _t __l) __attrib
0043520: 7574 655f 5f20 2828 5f5f 6e6f 7468 726f  ute__ ((__nothro
0043530: 775f 5f20 2c20 5f5f 6c65 6166 5f5f 2929  w__ , __leaf__))
0043540: 3b0a 6578 7465 726e 2069 6e74 2074 6f75  ;.extern int tou
0043550: 7070 6572 5f6c 2028 696e 7420 5f5f 632c  pper_l (int __c,
0043560: 205f 5f6c 6f63 616c 655f 7420 5f5f 6c29   __locale_t __l)
0043570: 205f 5f61 7474 7269 6275 7465 5f5f 2028   __attribute__ (
0043580: 285f 5f6e 6f74 6872 6f77 5f5f 202c 205f  (__nothrow__ , _
0043590: 5f6c 6561 665f 5f29 293b 0a23 2033 3438  _leaf__));.# 348
00435a0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f63   "/usr/include/c
00435b0: 7479 7065 2e68 2220 3320 340a 0a23 2037  type.h" 3 4..# 7
00435c0: 3220 222f 7573 722f 696e 636c 7564 652f  2 "/usr/include/
00435d0: 6f70 656e 7373 6c2f 6b73 736c 2e68 2220  openssl/kssl.h" 
00435e0: 3220 3320 340a 2320 3120 222f 7573 722f  2 3 4.# 1 "/usr/
00435f0: 696e 636c 7564 652f 6b72 6235 2e68 2220  include/krb5.h" 
0043600: 3120 3320 340a 0a0a 0a0a 0a0a 0a23 2031  1 3 4........# 1
0043610: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
0043620: 7262 352f 6b72 6235 2e68 2220 3120 3320  rb5/krb5.h" 1 3 
0043630: 340a 2320 3130 3220 222f 7573 722f 696e  4.# 102 "/usr/in
0043640: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
0043650: 6822 2033 2034 0a23 2031 2022 2f75 7372  h" 3 4.# 1 "/usr
0043660: 2f6c 6962 2f67 6363 2f78 3836 5f36 342d  /lib/gcc/x86_64-
0043670: 7265 6468 6174 2d6c 696e 7578 2f34 2e38  redhat-linux/4.8
0043680: 2e33 2f69 6e63 6c75 6465 2f6c 696d 6974  .3/include/limit
0043690: 732e 6822 2031 2033 2034 0a23 2031 3033  s.h" 1 3 4.# 103
00436a0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
00436b0: 7262 352f 6b72 6235 2e68 2220 3220 3320  rb5/krb5.h" 2 3 
00436c0: 340a 2320 3131 3520 222f 7573 722f 696e  4.# 115 "/usr/in
00436d0: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
00436e0: 6822 2033 2034 0a0a 2320 3133 3020 222f  h" 3 4..# 130 "/
00436f0: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
0043700: 2f6b 7262 352e 6822 2033 2034 0a73 7472  /krb5.h" 3 4.str
0043710: 7563 7420 5f70 726f 6669 6c65 5f74 3b0a  uct _profile_t;.
0043720: 2320 3134 3120 222f 7573 722f 696e 636c  # 141 "/usr/incl
0043730: 7564 652f 6b72 6235 2f6b 7262 352e 6822  ude/krb5/krb5.h"
0043740: 2033 2034 0a74 7970 6564 6566 2075 6e73   3 4.typedef uns
0043750: 6967 6e65 6420 6368 6172 206b 7262 355f  igned char krb5_
0043760: 6f63 7465 743b 0a0a 0a0a 0a0a 7479 7065  octet;......type
0043770: 6465 6620 7368 6f72 7420 6b72 6235 5f69  def short krb5_i
0043780: 6e74 3136 3b0a 7479 7065 6465 6620 756e  nt16;.typedef un
0043790: 7369 676e 6564 2073 686f 7274 206b 7262  signed short krb
00437a0: 355f 7569 5f32 3b0a 0a0a 0a0a 0a74 7970  5_ui_2;......typ
00437b0: 6564 6566 2069 6e74 206b 7262 355f 696e  edef int krb5_in
00437c0: 7433 323b 0a74 7970 6564 6566 2075 6e73  t32;.typedef uns
00437d0: 6967 6e65 6420 696e 7420 6b72 6235 5f75  igned int krb5_u
00437e0: 695f 343b 0a23 2031 3938 2022 2f75 7372  i_4;.# 198 "/usr
00437f0: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
0043800: 6235 2e68 2220 3320 340a 7479 7065 6465  b5.h" 3 4.typede
0043810: 6620 756e 7369 676e 6564 2069 6e74 206b  f unsigned int k
0043820: 7262 355f 626f 6f6c 6561 6e3b 0a74 7970  rb5_boolean;.typ
0043830: 6564 6566 2075 6e73 6967 6e65 6420 696e  edef unsigned in
0043840: 7420 6b72 6235 5f6d 7367 7479 7065 3b0a  t krb5_msgtype;.
0043850: 7479 7065 6465 6620 756e 7369 676e 6564  typedef unsigned
0043860: 2069 6e74 206b 7262 355f 6b76 6e6f 3b0a   int krb5_kvno;.
0043870: 0a74 7970 6564 6566 206b 7262 355f 696e  .typedef krb5_in
0043880: 7433 3220 6b72 6235 5f61 6464 7274 7970  t32 krb5_addrtyp
0043890: 653b 0a74 7970 6564 6566 206b 7262 355f  e;.typedef krb5_
00438a0: 696e 7433 3220 6b72 6235 5f65 6e63 7479  int32 krb5_encty
00438b0: 7065 3b0a 7479 7065 6465 6620 6b72 6235  pe;.typedef krb5
00438c0: 5f69 6e74 3332 206b 7262 355f 636b 7375  _int32 krb5_cksu
00438d0: 6d74 7970 653b 0a74 7970 6564 6566 206b  mtype;.typedef k
00438e0: 7262 355f 696e 7433 3220 6b72 6235 5f61  rb5_int32 krb5_a
00438f0: 7574 6864 6174 6174 7970 653b 0a74 7970  uthdatatype;.typ
0043900: 6564 6566 206b 7262 355f 696e 7433 3220  edef krb5_int32 
0043910: 6b72 6235 5f6b 6579 7573 6167 653b 0a74  krb5_keyusage;.t
0043920: 7970 6564 6566 206b 7262 355f 696e 7433  ypedef krb5_int3
0043930: 3220 6b72 6235 5f63 7279 7074 6f74 7970  2 krb5_cryptotyp
0043940: 653b 0a0a 7479 7065 6465 6620 6b72 6235  e;..typedef krb5
0043950: 5f69 6e74 3332 206b 7262 355f 7072 6561  _int32 krb5_prea
0043960: 7574 6874 7970 653b 0a74 7970 6564 6566  uthtype;.typedef
0043970: 206b 7262 355f 696e 7433 3220 6b72 6235   krb5_int32 krb5
0043980: 5f66 6c61 6773 3b0a 7479 7065 6465 6620  _flags;.typedef 
0043990: 6b72 6235 5f69 6e74 3332 206b 7262 355f  krb5_int32 krb5_
00439a0: 7469 6d65 7374 616d 703b 0a74 7970 6564  timestamp;.typed
00439b0: 6566 206b 7262 355f 696e 7433 3220 6b72  ef krb5_int32 kr
00439c0: 6235 5f65 7272 6f72 5f63 6f64 653b 0a74  b5_error_code;.t
00439d0: 7970 6564 6566 206b 7262 355f 696e 7433  ypedef krb5_int3
00439e0: 3220 6b72 6235 5f64 656c 7461 743b 0a0a  2 krb5_deltat;..
00439f0: 7479 7065 6465 6620 6b72 6235 5f65 7272  typedef krb5_err
0043a00: 6f72 5f63 6f64 6520 6b72 6235 5f6d 6167  or_code krb5_mag
0043a10: 6963 3b0a 0a74 7970 6564 6566 2073 7472  ic;..typedef str
0043a20: 7563 7420 5f6b 7262 355f 6461 7461 207b  uct _krb5_data {
0043a30: 0a20 2020 206b 7262 355f 6d61 6769 6320  .    krb5_magic 
0043a40: 6d61 6769 633b 0a20 2020 2075 6e73 6967  magic;.    unsig
0043a50: 6e65 6420 696e 7420 6c65 6e67 7468 3b0a  ned int length;.
0043a60: 2020 2020 6368 6172 202a 6461 7461 3b0a      char *data;.
0043a70: 7d20 6b72 6235 5f64 6174 613b 0a0a 0a74  } krb5_data;...t
0043a80: 7970 6564 6566 2073 7472 7563 7420 5f6b  ypedef struct _k
0043a90: 7262 355f 6f63 7465 745f 6461 7461 207b  rb5_octet_data {
0043aa0: 0a20 2020 206b 7262 355f 6d61 6769 6320  .    krb5_magic 
0043ab0: 6d61 6769 633b 0a20 2020 2075 6e73 6967  magic;.    unsig
0043ac0: 6e65 6420 696e 7420 6c65 6e67 7468 3b0a  ned int length;.
0043ad0: 2020 2020 6b72 6235 5f6f 6374 6574 202a      krb5_octet *
0043ae0: 6461 7461 3b0a 7d20 6b72 6235 5f6f 6374  data;.} krb5_oct
0043af0: 6574 5f64 6174 613b 0a0a 0a0a 0a0a 7479  et_data;......ty
0043b00: 7065 6465 6620 766f 6964 202a 206b 7262  pedef void * krb
0043b10: 355f 706f 696e 7465 723b 0a74 7970 6564  5_pointer;.typed
0043b20: 6566 2076 6f69 6420 636f 6e73 7420 2a20  ef void const * 
0043b30: 6b72 6235 5f63 6f6e 7374 5f70 6f69 6e74  krb5_const_point
0043b40: 6572 3b0a 0a74 7970 6564 6566 2073 7472  er;..typedef str
0043b50: 7563 7420 6b72 6235 5f70 7269 6e63 6970  uct krb5_princip
0043b60: 616c 5f64 6174 6120 7b0a 2020 2020 6b72  al_data {.    kr
0043b70: 6235 5f6d 6167 6963 206d 6167 6963 3b0a  b5_magic magic;.
0043b80: 2020 2020 6b72 6235 5f64 6174 6120 7265      krb5_data re
0043b90: 616c 6d3b 0a20 2020 206b 7262 355f 6461  alm;.    krb5_da
0043ba0: 7461 202a 6461 7461 3b0a 2020 2020 6b72  ta *data;.    kr
0043bb0: 6235 5f69 6e74 3332 206c 656e 6774 683b  b5_int32 length;
0043bc0: 0a20 2020 206b 7262 355f 696e 7433 3220  .    krb5_int32 
0043bd0: 7479 7065 3b0a 7d20 6b72 6235 5f70 7269  type;.} krb5_pri
0043be0: 6e63 6970 616c 5f64 6174 613b 0a0a 7479  ncipal_data;..ty
0043bf0: 7065 6465 6620 6b72 6235 5f70 7269 6e63  pedef krb5_princ
0043c00: 6970 616c 5f64 6174 6120 2a20 6b72 6235  ipal_data * krb5
0043c10: 5f70 7269 6e63 6970 616c 3b0a 2320 3237  _principal;.# 27
0043c20: 3020 222f 7573 722f 696e 636c 7564 652f  0 "/usr/include/
0043c30: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
0043c40: 0a74 7970 6564 6566 2063 6f6e 7374 206b  .typedef const k
0043c50: 7262 355f 7072 696e 6369 7061 6c5f 6461  rb5_principal_da
0043c60: 7461 202a 6b72 6235 5f63 6f6e 7374 5f70  ta *krb5_const_p
0043c70: 7269 6e63 6970 616c 3b0a 2320 3239 3820  rincipal;.# 298 
0043c80: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
0043c90: 6235 2f6b 7262 352e 6822 2033 2034 0a6b  b5/krb5.h" 3 4.k
0043ca0: 7262 355f 626f 6f6c 6561 6e0a 6b72 6235  rb5_boolean.krb5
0043cb0: 5f69 735f 7265 6665 7272 616c 5f72 6561  _is_referral_rea
0043cc0: 6c6d 2863 6f6e 7374 206b 7262 355f 6461  lm(const krb5_da
0043cd0: 7461 202a 7229 3b0a 2320 3330 3820 222f  ta *r);.# 308 "/
0043ce0: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
0043cf0: 2f6b 7262 352e 6822 2033 2034 0a63 6f6e  /krb5.h" 3 4.con
0043d00: 7374 206b 7262 355f 6461 7461 202a 0a6b  st krb5_data *.k
0043d10: 7262 355f 616e 6f6e 796d 6f75 735f 7265  rb5_anonymous_re
0043d20: 616c 6d28 766f 6964 293b 0a23 2033 3138  alm(void);.# 318
0043d30: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
0043d40: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
0043d50: 6b72 6235 5f63 6f6e 7374 5f70 7269 6e63  krb5_const_princ
0043d60: 6970 616c 0a6b 7262 355f 616e 6f6e 796d  ipal.krb5_anonym
0043d70: 6f75 735f 7072 696e 6369 7061 6c28 766f  ous_principal(vo
0043d80: 6964 293b 0a23 2033 3332 2022 2f75 7372  id);.# 332 "/usr
0043d90: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
0043da0: 6235 2e68 2220 3320 340a 7479 7065 6465  b5.h" 3 4.typede
0043db0: 6620 7374 7275 6374 205f 6b72 6235 5f61  f struct _krb5_a
0043dc0: 6464 7265 7373 207b 0a20 2020 206b 7262  ddress {.    krb
0043dd0: 355f 6d61 6769 6320 6d61 6769 633b 0a20  5_magic magic;. 
0043de0: 2020 206b 7262 355f 6164 6472 7479 7065     krb5_addrtype
0043df0: 2061 6464 7274 7970 653b 0a20 2020 2075   addrtype;.    u
0043e00: 6e73 6967 6e65 6420 696e 7420 6c65 6e67  nsigned int leng
0043e10: 7468 3b0a 2020 2020 6b72 6235 5f6f 6374  th;.    krb5_oct
0043e20: 6574 202a 636f 6e74 656e 7473 3b0a 7d20  et *contents;.} 
0043e30: 6b72 6235 5f61 6464 7265 7373 3b0a 2320  krb5_address;.# 
0043e40: 3335 3920 222f 7573 722f 696e 636c 7564  359 "/usr/includ
0043e50: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
0043e60: 2034 0a73 7472 7563 7420 5f6b 7262 355f   4.struct _krb5_
0043e70: 636f 6e74 6578 743b 0a74 7970 6564 6566  context;.typedef
0043e80: 2073 7472 7563 7420 5f6b 7262 355f 636f   struct _krb5_co
0043e90: 6e74 6578 7420 2a20 6b72 6235 5f63 6f6e  ntext * krb5_con
0043ea0: 7465 7874 3b0a 0a73 7472 7563 7420 5f6b  text;..struct _k
0043eb0: 7262 355f 6175 7468 5f63 6f6e 7465 7874  rb5_auth_context
0043ec0: 3b0a 7479 7065 6465 6620 7374 7275 6374  ;.typedef struct
0043ed0: 205f 6b72 6235 5f61 7574 685f 636f 6e74   _krb5_auth_cont
0043ee0: 6578 7420 2a20 6b72 6235 5f61 7574 685f  ext * krb5_auth_
0043ef0: 636f 6e74 6578 743b 0a0a 7374 7275 6374  context;..struct
0043f00: 205f 6b72 6235 5f63 7279 7074 6f73 7973   _krb5_cryptosys
0043f10: 7465 6d5f 656e 7472 793b 0a0a 0a0a 0a0a  tem_entry;......
0043f20: 0a74 7970 6564 6566 2073 7472 7563 7420  .typedef struct 
0043f30: 5f6b 7262 355f 6b65 7962 6c6f 636b 207b  _krb5_keyblock {
0043f40: 0a20 2020 206b 7262 355f 6d61 6769 6320  .    krb5_magic 
0043f50: 6d61 6769 633b 0a20 2020 206b 7262 355f  magic;.    krb5_
0043f60: 656e 6374 7970 6520 656e 6374 7970 653b  enctype enctype;
0043f70: 0a20 2020 2075 6e73 6967 6e65 6420 696e  .    unsigned in
0043f80: 7420 6c65 6e67 7468 3b0a 2020 2020 6b72  t length;.    kr
0043f90: 6235 5f6f 6374 6574 202a 636f 6e74 656e  b5_octet *conten
0043fa0: 7473 3b0a 7d20 6b72 6235 5f6b 6579 626c  ts;.} krb5_keybl
0043fb0: 6f63 6b3b 0a0a 7374 7275 6374 206b 7262  ock;..struct krb
0043fc0: 355f 6b65 795f 7374 3b0a 2320 3338 3820  5_key_st;.# 388 
0043fd0: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
0043fe0: 6235 2f6b 7262 352e 6822 2033 2034 0a74  b5/krb5.h" 3 4.t
0043ff0: 7970 6564 6566 2073 7472 7563 7420 6b72  ypedef struct kr
0044000: 6235 5f6b 6579 5f73 7420 2a6b 7262 355f  b5_key_st *krb5_
0044010: 6b65 793b 0a0a 0a74 7970 6564 6566 2073  key;...typedef s
0044020: 7472 7563 7420 5f6b 7262 355f 656e 6372  truct _krb5_encr
0044030: 7970 745f 626c 6f63 6b20 7b0a 2020 2020  ypt_block {.    
0044040: 6b72 6235 5f6d 6167 6963 206d 6167 6963  krb5_magic magic
0044050: 3b0a 2020 2020 6b72 6235 5f65 6e63 7479  ;.    krb5_encty
0044060: 7065 2063 7279 7074 6f5f 656e 7472 793b  pe crypto_entry;
0044070: 0a0a 0a20 2020 206b 7262 355f 6b65 7962  ...    krb5_keyb
0044080: 6c6f 636b 202a 6b65 793b 0a7d 206b 7262  lock *key;.} krb
0044090: 355f 656e 6372 7970 745f 626c 6f63 6b3b  5_encrypt_block;
00440a0: 0a0a 0a74 7970 6564 6566 2073 7472 7563  ...typedef struc
00440b0: 7420 5f6b 7262 355f 6368 6563 6b73 756d  t _krb5_checksum
00440c0: 207b 0a20 2020 206b 7262 355f 6d61 6769   {.    krb5_magi
00440d0: 6320 6d61 6769 633b 0a20 2020 206b 7262  c magic;.    krb
00440e0: 355f 636b 7375 6d74 7970 6520 6368 6563  5_cksumtype chec
00440f0: 6b73 756d 5f74 7970 653b 0a20 2020 2075  ksum_type;.    u
0044100: 6e73 6967 6e65 6420 696e 7420 6c65 6e67  nsigned int leng
0044110: 7468 3b0a 2020 2020 6b72 6235 5f6f 6374  th;.    krb5_oct
0044120: 6574 202a 636f 6e74 656e 7473 3b0a 7d20  et *contents;.} 
0044130: 6b72 6235 5f63 6865 636b 7375 6d3b 0a0a  krb5_checksum;..
0044140: 7479 7065 6465 6620 7374 7275 6374 205f  typedef struct _
0044150: 6b72 6235 5f65 6e63 5f64 6174 6120 7b0a  krb5_enc_data {.
0044160: 2020 2020 6b72 6235 5f6d 6167 6963 206d      krb5_magic m
0044170: 6167 6963 3b0a 2020 2020 6b72 6235 5f65  agic;.    krb5_e
0044180: 6e63 7479 7065 2065 6e63 7479 7065 3b0a  nctype enctype;.
0044190: 2020 2020 6b72 6235 5f6b 766e 6f20 6b76      krb5_kvno kv
00441a0: 6e6f 3b0a 2020 2020 6b72 6235 5f64 6174  no;.    krb5_dat
00441b0: 6120 6369 7068 6572 7465 7874 3b0a 7d20  a ciphertext;.} 
00441c0: 6b72 6235 5f65 6e63 5f64 6174 613b 0a23  krb5_enc_data;.#
00441d0: 2034 3234 2022 2f75 7372 2f69 6e63 6c75   424 "/usr/inclu
00441e0: 6465 2f6b 7262 352f 6b72 6235 2e68 2220  de/krb5/krb5.h" 
00441f0: 3320 340a 7479 7065 6465 6620 7374 7275  3 4.typedef stru
0044200: 6374 205f 6b72 6235 5f63 7279 7074 6f5f  ct _krb5_crypto_
0044210: 696f 7620 7b0a 2020 2020 6b72 6235 5f63  iov {.    krb5_c
0044220: 7279 7074 6f74 7970 6520 666c 6167 733b  ryptotype flags;
0044230: 0a20 2020 206b 7262 355f 6461 7461 2064  .    krb5_data d
0044240: 6174 613b 0a7d 206b 7262 355f 6372 7970  ata;.} krb5_cryp
0044250: 746f 5f69 6f76 3b0a 2320 3438 3420 222f  to_iov;.# 484 "/
0044260: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
0044270: 2f6b 7262 352e 6822 2033 2034 0a65 6e75  /krb5.h" 3 4.enu
0044280: 6d20 7b0a 2020 2020 4b52 4235 5f43 5f52  m {.    KRB5_C_R
0044290: 414e 4453 4f55 5243 455f 4f4c 4441 5049  ANDSOURCE_OLDAPI
00442a0: 203d 2030 2c0a 2020 2020 4b52 4235 5f43   = 0,.    KRB5_C
00442b0: 5f52 414e 4453 4f55 5243 455f 4f53 5241  _RANDSOURCE_OSRA
00442c0: 4e44 203d 2031 2c0a 2020 2020 4b52 4235  ND = 1,.    KRB5
00442d0: 5f43 5f52 414e 4453 4f55 5243 455f 5452  _C_RANDSOURCE_TR
00442e0: 5553 5445 4450 4152 5459 203d 2032 2c0a  USTEDPARTY = 2,.
00442f0: 0a0a 0a0a 0a20 2020 204b 5242 355f 435f  .....    KRB5_C_
0044300: 5241 4e44 534f 5552 4345 5f54 494d 494e  RANDSOURCE_TIMIN
0044310: 4720 3d20 332c 0a20 2020 204b 5242 355f  G = 3,.    KRB5_
0044320: 435f 5241 4e44 534f 5552 4345 5f45 5854  C_RANDSOURCE_EXT
0044330: 4552 4e41 4c5f 5052 4f54 4f43 4f4c 203d  ERNAL_PROTOCOL =
0044340: 2034 2c0a 2020 2020 4b52 4235 5f43 5f52   4,.    KRB5_C_R
0044350: 414e 4453 4f55 5243 455f 4d41 5820 3d20  ANDSOURCE_MAX = 
0044360: 350a 7d3b 0a23 2035 3336 2022 2f75 7372  5.};.# 536 "/usr
0044370: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
0044380: 6235 2e68 2220 3320 340a 6b72 6235 5f65  b5.h" 3 4.krb5_e
0044390: 7272 6f72 5f63 6f64 650a 6b72 6235 5f63  rror_code.krb5_c
00443a0: 5f65 6e63 7279 7074 286b 7262 355f 636f  _encrypt(krb5_co
00443b0: 6e74 6578 7420 636f 6e74 6578 742c 2063  ntext context, c
00443c0: 6f6e 7374 206b 7262 355f 6b65 7962 6c6f  onst krb5_keyblo
00443d0: 636b 202a 6b65 792c 0a20 2020 2020 2020  ck *key,.       
00443e0: 2020 2020 2020 2020 6b72 6235 5f6b 6579          krb5_key
00443f0: 7573 6167 6520 7573 6167 652c 2063 6f6e  usage usage, con
0044400: 7374 206b 7262 355f 6461 7461 202a 6369  st krb5_data *ci
0044410: 7068 6572 5f73 7461 7465 2c0a 2020 2020  pher_state,.    
0044420: 2020 2020 2020 2020 2020 2063 6f6e 7374             const
0044430: 206b 7262 355f 6461 7461 202a 696e 7075   krb5_data *inpu
0044440: 742c 206b 7262 355f 656e 635f 6461 7461  t, krb5_enc_data
0044450: 202a 6f75 7470 7574 293b 0a23 2035 3635   *output);.# 565
0044460: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
0044470: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
0044480: 6b72 6235 5f65 7272 6f72 5f63 6f64 650a  krb5_error_code.
0044490: 6b72 6235 5f63 5f64 6563 7279 7074 286b  krb5_c_decrypt(k
00444a0: 7262 355f 636f 6e74 6578 7420 636f 6e74  rb5_context cont
00444b0: 6578 742c 2063 6f6e 7374 206b 7262 355f  ext, const krb5_
00444c0: 6b65 7962 6c6f 636b 202a 6b65 792c 0a20  keyblock *key,. 
00444d0: 2020 2020 2020 2020 2020 2020 2020 6b72                kr
00444e0: 6235 5f6b 6579 7573 6167 6520 7573 6167  b5_keyusage usag
00444f0: 652c 2063 6f6e 7374 206b 7262 355f 6461  e, const krb5_da
0044500: 7461 202a 6369 7068 6572 5f73 7461 7465  ta *cipher_state
0044510: 2c0a 2020 2020 2020 2020 2020 2020 2020  ,.              
0044520: 2063 6f6e 7374 206b 7262 355f 656e 635f   const krb5_enc_
0044530: 6461 7461 202a 696e 7075 742c 206b 7262  data *input, krb
0044540: 355f 6461 7461 202a 6f75 7470 7574 293b  5_data *output);
0044550: 0a23 2035 3833 2022 2f75 7372 2f69 6e63  .# 583 "/usr/inc
0044560: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
0044570: 2220 3320 340a 6b72 6235 5f65 7272 6f72  " 3 4.krb5_error
0044580: 5f63 6f64 650a 6b72 6235 5f63 5f65 6e63  _code.krb5_c_enc
0044590: 7279 7074 5f6c 656e 6774 6828 6b72 6235  rypt_length(krb5
00445a0: 5f63 6f6e 7465 7874 2063 6f6e 7465 7874  _context context
00445b0: 2c20 6b72 6235 5f65 6e63 7479 7065 2065  , krb5_enctype e
00445c0: 6e63 7479 7065 2c0a 2020 2020 2020 2020  nctype,.        
00445d0: 2020 2020 2020 2020 2020 2020 2020 7369                si
00445e0: 7a65 5f74 2069 6e70 7574 6c65 6e2c 2073  ze_t inputlen, s
00445f0: 697a 655f 7420 2a6c 656e 6774 6829 3b0a  ize_t *length);.
0044600: 2320 3539 3620 222f 7573 722f 696e 636c  # 596 "/usr/incl
0044610: 7564 652f 6b72 6235 2f6b 7262 352e 6822  ude/krb5/krb5.h"
0044620: 2033 2034 0a6b 7262 355f 6572 726f 725f   3 4.krb5_error_
0044630: 636f 6465 0a6b 7262 355f 635f 626c 6f63  code.krb5_c_bloc
0044640: 6b5f 7369 7a65 286b 7262 355f 636f 6e74  k_size(krb5_cont
0044650: 6578 7420 636f 6e74 6578 742c 206b 7262  ext context, krb
0044660: 355f 656e 6374 7970 6520 656e 6374 7970  5_enctype enctyp
0044670: 652c 0a20 2020 2020 2020 2020 2020 2020  e,.             
0044680: 2020 2020 2073 697a 655f 7420 2a62 6c6f       size_t *blo
0044690: 636b 7369 7a65 293b 0a23 2036 3130 2022  cksize);.# 610 "
00446a0: 2f75 7372 2f69 6e63 6c75 6465 2f6b 7262  /usr/include/krb
00446b0: 352f 6b72 6235 2e68 2220 3320 340a 6b72  5/krb5.h" 3 4.kr
00446c0: 6235 5f65 7272 6f72 5f63 6f64 650a 6b72  b5_error_code.kr
00446d0: 6235 5f63 5f6b 6579 6c65 6e67 7468 7328  b5_c_keylengths(
00446e0: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
00446f0: 7465 7874 2c20 6b72 6235 5f65 6e63 7479  text, krb5_encty
0044700: 7065 2065 6e63 7479 7065 2c0a 2020 2020  pe enctype,.    
0044710: 2020 2020 2020 2020 2020 2020 2020 7369                si
0044720: 7a65 5f74 202a 6b65 7962 7974 6573 2c20  ze_t *keybytes, 
0044730: 7369 7a65 5f74 202a 6b65 796c 656e 6774  size_t *keylengt
0044740: 6829 3b0a 2320 3632 3420 222f 7573 722f  h);.# 624 "/usr/
0044750: 696e 636c 7564 652f 6b72 6235 2f6b 7262  include/krb5/krb
0044760: 352e 6822 2033 2034 0a6b 7262 355f 6572  5.h" 3 4.krb5_er
0044770: 726f 725f 636f 6465 0a6b 7262 355f 635f  ror_code.krb5_c_
0044780: 696e 6974 5f73 7461 7465 286b 7262 355f  init_state(krb5_
0044790: 636f 6e74 6578 7420 636f 6e74 6578 742c  context context,
00447a0: 2063 6f6e 7374 206b 7262 355f 6b65 7962   const krb5_keyb
00447b0: 6c6f 636b 202a 6b65 792c 0a20 2020 2020  lock *key,.     
00447c0: 2020 2020 2020 2020 2020 2020 206b 7262               krb
00447d0: 355f 6b65 7975 7361 6765 2075 7361 6765  5_keyusage usage
00447e0: 2c20 6b72 6235 5f64 6174 6120 2a6e 6577  , krb5_data *new
00447f0: 5f73 7461 7465 293b 0a23 2036 3337 2022  _state);.# 637 "
0044800: 2f75 7372 2f69 6e63 6c75 6465 2f6b 7262  /usr/include/krb
0044810: 352f 6b72 6235 2e68 2220 3320 340a 6b72  5/krb5.h" 3 4.kr
0044820: 6235 5f65 7272 6f72 5f63 6f64 650a 6b72  b5_error_code.kr
0044830: 6235 5f63 5f66 7265 655f 7374 6174 6528  b5_c_free_state(
0044840: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
0044850: 7465 7874 2c20 636f 6e73 7420 6b72 6235  text, const krb5
0044860: 5f6b 6579 626c 6f63 6b20 2a6b 6579 2c0a  _keyblock *key,.
0044870: 2020 2020 2020 2020 2020 2020 2020 2020                  
0044880: 2020 6b72 6235 5f64 6174 6120 2a73 7461    krb5_data *sta
0044890: 7465 293b 0a23 2036 3536 2022 2f75 7372  te);.# 656 "/usr
00448a0: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
00448b0: 6235 2e68 2220 3320 340a 6b72 6235 5f65  b5.h" 3 4.krb5_e
00448c0: 7272 6f72 5f63 6f64 650a 6b72 6235 5f63  rror_code.krb5_c
00448d0: 5f70 7266 286b 7262 355f 636f 6e74 6578  _prf(krb5_contex
00448e0: 7420 636f 6e74 6578 742c 2063 6f6e 7374  t context, const
00448f0: 206b 7262 355f 6b65 7962 6c6f 636b 202a   krb5_keyblock *
0044900: 6b65 7962 6c6f 636b 2c0a 2020 2020 2020  keyblock,.      
0044910: 2020 2020 206b 7262 355f 6461 7461 202a       krb5_data *
0044920: 696e 7075 742c 206b 7262 355f 6461 7461  input, krb5_data
0044930: 202a 6f75 7470 7574 293b 0a23 2036 3639   *output);.# 669
0044940: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
0044950: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
0044960: 6b72 6235 5f65 7272 6f72 5f63 6f64 650a  krb5_error_code.
0044970: 6b72 6235 5f63 5f70 7266 5f6c 656e 6774  krb5_c_prf_lengt
0044980: 6828 6b72 6235 5f63 6f6e 7465 7874 2063  h(krb5_context c
0044990: 6f6e 7465 7874 2c20 6b72 6235 5f65 6e63  ontext, krb5_enc
00449a0: 7479 7065 2065 6e63 7479 7065 2c20 7369  type enctype, si
00449b0: 7a65 5f74 202a 6c65 6e29 3b0a 2320 3639  ze_t *len);.# 69
00449c0: 3020 222f 7573 722f 696e 636c 7564 652f  0 "/usr/include/
00449d0: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
00449e0: 0a6b 7262 355f 6572 726f 725f 636f 6465  .krb5_error_code
00449f0: 0a6b 7262 355f 635f 6678 5f63 6632 5f73  .krb5_c_fx_cf2_s
0044a00: 696d 706c 6528 6b72 6235 5f63 6f6e 7465  imple(krb5_conte
0044a10: 7874 2063 6f6e 7465 7874 2c0a 2020 2020  xt context,.    
0044a20: 2020 2020 2020 2020 2020 2020 2020 2020                  
0044a30: 206b 7262 355f 6b65 7962 6c6f 636b 202a   krb5_keyblock *
0044a40: 6b31 2c20 636f 6e73 7420 6368 6172 202a  k1, const char *
0044a50: 7065 7070 6572 312c 0a20 2020 2020 2020  pepper1,.       
0044a60: 2020 2020 2020 2020 2020 2020 2020 6b72                kr
0044a70: 6235 5f6b 6579 626c 6f63 6b20 2a6b 322c  b5_keyblock *k2,
0044a80: 2063 6f6e 7374 2063 6861 7220 2a70 6570   const char *pep
0044a90: 7065 7232 2c0a 2020 2020 2020 2020 2020  per2,.          
0044aa0: 2020 2020 2020 2020 2020 206b 7262 355f             krb5_
0044ab0: 6b65 7962 6c6f 636b 202a 2a6f 7574 293b  keyblock **out);
0044ac0: 0a23 2037 3038 2022 2f75 7372 2f69 6e63  .# 708 "/usr/inc
0044ad0: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
0044ae0: 2220 3320 340a 6b72 6235 5f65 7272 6f72  " 3 4.krb5_error
0044af0: 5f63 6f64 650a 6b72 6235 5f63 5f6d 616b  _code.krb5_c_mak
0044b00: 655f 7261 6e64 6f6d 5f6b 6579 286b 7262  e_random_key(krb
0044b10: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
0044b20: 742c 206b 7262 355f 656e 6374 7970 6520  t, krb5_enctype 
0044b30: 656e 6374 7970 652c 0a20 2020 2020 2020  enctype,.       
0044b40: 2020 2020 2020 2020 2020 2020 2020 2020                  
0044b50: 6b72 6235 5f6b 6579 626c 6f63 6b20 2a6b  krb5_keyblock *k
0044b60: 355f 7261 6e64 6f6d 5f6b 6579 293b 0a23  5_random_key);.#
0044b70: 2037 3330 2022 2f75 7372 2f69 6e63 6c75   730 "/usr/inclu
0044b80: 6465 2f6b 7262 352f 6b72 6235 2e68 2220  de/krb5/krb5.h" 
0044b90: 3320 340a 6b72 6235 5f65 7272 6f72 5f63  3 4.krb5_error_c
0044ba0: 6f64 650a 6b72 6235 5f63 5f72 616e 646f  ode.krb5_c_rando
0044bb0: 6d5f 746f 5f6b 6579 286b 7262 355f 636f  m_to_key(krb5_co
0044bc0: 6e74 6578 7420 636f 6e74 6578 742c 206b  ntext context, k
0044bd0: 7262 355f 656e 6374 7970 6520 656e 6374  rb5_enctype enct
0044be0: 7970 652c 0a20 2020 2020 2020 2020 2020  ype,.           
0044bf0: 2020 2020 2020 2020 2020 6b72 6235 5f64            krb5_d
0044c00: 6174 6120 2a72 616e 646f 6d5f 6461 7461  ata *random_data
0044c10: 2c20 6b72 6235 5f6b 6579 626c 6f63 6b20  , krb5_keyblock 
0044c20: 2a6b 355f 7261 6e64 6f6d 5f6b 6579 293b  *k5_random_key);
0044c30: 0a23 2037 3437 2022 2f75 7372 2f69 6e63  .# 747 "/usr/inc
0044c40: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
0044c50: 2220 3320 340a 6b72 6235 5f65 7272 6f72  " 3 4.krb5_error
0044c60: 5f63 6f64 650a 6b72 6235 5f63 5f72 616e  _code.krb5_c_ran
0044c70: 646f 6d5f 6164 645f 656e 7472 6f70 7928  dom_add_entropy(
0044c80: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
0044c90: 7465 7874 2c20 756e 7369 676e 6564 2069  text, unsigned i
0044ca0: 6e74 2072 616e 6473 6f75 7263 652c 0a20  nt randsource,. 
0044cb0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0044cc0: 2020 2020 2020 2020 2063 6f6e 7374 206b           const k
0044cd0: 7262 355f 6461 7461 202a 6461 7461 293b  rb5_data *data);
0044ce0: 0a23 2037 3633 2022 2f75 7372 2f69 6e63  .# 763 "/usr/inc
0044cf0: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
0044d00: 2220 3320 340a 6b72 6235 5f65 7272 6f72  " 3 4.krb5_error
0044d10: 5f63 6f64 650a 6b72 6235 5f63 5f72 616e  _code.krb5_c_ran
0044d20: 646f 6d5f 6d61 6b65 5f6f 6374 6574 7328  dom_make_octets(
0044d30: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
0044d40: 7465 7874 2c20 6b72 6235 5f64 6174 6120  text, krb5_data 
0044d50: 2a64 6174 6129 3b0a 2320 3738 3020 222f  *data);.# 780 "/
0044d60: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
0044d70: 2f6b 7262 352e 6822 2033 2034 0a6b 7262  /krb5.h" 3 4.krb
0044d80: 355f 6572 726f 725f 636f 6465 0a6b 7262  5_error_code.krb
0044d90: 355f 635f 7261 6e64 6f6d 5f6f 735f 656e  5_c_random_os_en
0044da0: 7472 6f70 7928 6b72 6235 5f63 6f6e 7465  tropy(krb5_conte
0044db0: 7874 2063 6f6e 7465 7874 2c20 696e 7420  xt context, int 
0044dc0: 7374 726f 6e67 2c20 696e 7420 2a73 7563  strong, int *suc
0044dd0: 6365 7373 293b 0a0a 0a6b 7262 355f 6572  cess);...krb5_er
0044de0: 726f 725f 636f 6465 0a6b 7262 355f 635f  ror_code.krb5_c_
0044df0: 7261 6e64 6f6d 5f73 6565 6428 6b72 6235  random_seed(krb5
0044e00: 5f63 6f6e 7465 7874 2063 6f6e 7465 7874  _context context
0044e10: 2c20 6b72 6235 5f64 6174 6120 2a64 6174  , krb5_data *dat
0044e20: 6129 3b0a 2320 3830 3220 222f 7573 722f  a);.# 802 "/usr/
0044e30: 696e 636c 7564 652f 6b72 6235 2f6b 7262  include/krb5/krb
0044e40: 352e 6822 2033 2034 0a6b 7262 355f 6572  5.h" 3 4.krb5_er
0044e50: 726f 725f 636f 6465 0a6b 7262 355f 635f  ror_code.krb5_c_
0044e60: 7374 7269 6e67 5f74 6f5f 6b65 7928 6b72  string_to_key(kr
0044e70: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
0044e80: 7874 2c20 6b72 6235 5f65 6e63 7479 7065  xt, krb5_enctype
0044e90: 2065 6e63 7479 7065 2c0a 2020 2020 2020   enctype,.      
0044ea0: 2020 2020 2020 2020 2020 2020 2020 2063                 c
0044eb0: 6f6e 7374 206b 7262 355f 6461 7461 202a  onst krb5_data *
0044ec0: 7374 7269 6e67 2c20 636f 6e73 7420 6b72  string, const kr
0044ed0: 6235 5f64 6174 6120 2a73 616c 742c 0a20  b5_data *salt,. 
0044ee0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0044ef0: 2020 2020 6b72 6235 5f6b 6579 626c 6f63      krb5_keybloc
0044f00: 6b20 2a6b 6579 293b 0a23 2038 3234 2022  k *key);.# 824 "
0044f10: 2f75 7372 2f69 6e63 6c75 6465 2f6b 7262  /usr/include/krb
0044f20: 352f 6b72 6235 2e68 2220 3320 340a 6b72  5/krb5.h" 3 4.kr
0044f30: 6235 5f65 7272 6f72 5f63 6f64 650a 6b72  b5_error_code.kr
0044f40: 6235 5f63 5f73 7472 696e 675f 746f 5f6b  b5_c_string_to_k
0044f50: 6579 5f77 6974 685f 7061 7261 6d73 286b  ey_with_params(k
0044f60: 7262 355f 636f 6e74 6578 7420 636f 6e74  rb5_context cont
0044f70: 6578 742c 0a20 2020 2020 2020 2020 2020  ext,.           
0044f80: 2020 2020 2020 2020 2020 2020 2020 2020                  
0044f90: 2020 2020 2020 6b72 6235 5f65 6e63 7479        krb5_encty
0044fa0: 7065 2065 6e63 7479 7065 2c0a 2020 2020  pe enctype,.    
0044fb0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0044fc0: 2020 2020 2020 2020 2020 2020 2063 6f6e               con
0044fd0: 7374 206b 7262 355f 6461 7461 202a 7374  st krb5_data *st
0044fe0: 7269 6e67 2c0a 2020 2020 2020 2020 2020  ring,.          
0044ff0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0045000: 2020 2020 2020 2063 6f6e 7374 206b 7262         const krb
0045010: 355f 6461 7461 202a 7361 6c74 2c0a 2020  5_data *salt,.  
0045020: 2020 2020 2020 2020 2020 2020 2020 2020                  
0045030: 2020 2020 2020 2020 2020 2020 2020 2063                 c
0045040: 6f6e 7374 206b 7262 355f 6461 7461 202a  onst krb5_data *
0045050: 7061 7261 6d73 2c0a 2020 2020 2020 2020  params,.        
0045060: 2020 2020 2020 2020 2020 2020 2020 2020                  
0045070: 2020 2020 2020 2020 206b 7262 355f 6b65           krb5_ke
0045080: 7962 6c6f 636b 202a 6b65 7929 3b0a 2320  yblock *key);.# 
0045090: 3834 3520 222f 7573 722f 696e 636c 7564  845 "/usr/includ
00450a0: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
00450b0: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
00450c0: 6465 0a6b 7262 355f 635f 656e 6374 7970  de.krb5_c_enctyp
00450d0: 655f 636f 6d70 6172 6528 6b72 6235 5f63  e_compare(krb5_c
00450e0: 6f6e 7465 7874 2063 6f6e 7465 7874 2c20  ontext context, 
00450f0: 6b72 6235 5f65 6e63 7479 7065 2065 312c  krb5_enctype e1,
0045100: 206b 7262 355f 656e 6374 7970 6520 6532   krb5_enctype e2
0045110: 2c0a 2020 2020 2020 2020 2020 2020 2020  ,.              
0045120: 2020 2020 2020 2020 206b 7262 355f 626f           krb5_bo
0045130: 6f6c 6561 6e20 2a73 696d 696c 6172 293b  olean *similar);
0045140: 0a23 2038 3734 2022 2f75 7372 2f69 6e63  .# 874 "/usr/inc
0045150: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
0045160: 2220 3320 340a 6b72 6235 5f65 7272 6f72  " 3 4.krb5_error
0045170: 5f63 6f64 650a 6b72 6235 5f63 5f6d 616b  _code.krb5_c_mak
0045180: 655f 6368 6563 6b73 756d 286b 7262 355f  e_checksum(krb5_
0045190: 636f 6e74 6578 7420 636f 6e74 6578 742c  context context,
00451a0: 206b 7262 355f 636b 7375 6d74 7970 6520   krb5_cksumtype 
00451b0: 636b 7375 6d74 7970 652c 0a20 2020 2020  cksumtype,.     
00451c0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00451d0: 636f 6e73 7420 6b72 6235 5f6b 6579 626c  const krb5_keybl
00451e0: 6f63 6b20 2a6b 6579 2c20 6b72 6235 5f6b  ock *key, krb5_k
00451f0: 6579 7573 6167 6520 7573 6167 652c 0a20  eyusage usage,. 
0045200: 2020 2020 2020 2020 2020 2020 2020 2020                  
0045210: 2020 2020 636f 6e73 7420 6b72 6235 5f64      const krb5_d
0045220: 6174 6120 2a69 6e70 7574 2c20 6b72 6235  ata *input, krb5
0045230: 5f63 6865 636b 7375 6d20 2a63 6b73 756d  _checksum *cksum
0045240: 293b 0a23 2039 3030 2022 2f75 7372 2f69  );.# 900 "/usr/i
0045250: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
0045260: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
0045270: 6f72 5f63 6f64 650a 6b72 6235 5f63 5f76  or_code.krb5_c_v
0045280: 6572 6966 795f 6368 6563 6b73 756d 286b  erify_checksum(k
0045290: 7262 355f 636f 6e74 6578 7420 636f 6e74  rb5_context cont
00452a0: 6578 742c 2063 6f6e 7374 206b 7262 355f  ext, const krb5_
00452b0: 6b65 7962 6c6f 636b 202a 6b65 792c 0a20  keyblock *key,. 
00452c0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00452d0: 2020 2020 2020 6b72 6235 5f6b 6579 7573        krb5_keyus
00452e0: 6167 6520 7573 6167 652c 2063 6f6e 7374  age usage, const
00452f0: 206b 7262 355f 6461 7461 202a 6461 7461   krb5_data *data
0045300: 2c0a 2020 2020 2020 2020 2020 2020 2020  ,.              
0045310: 2020 2020 2020 2020 2063 6f6e 7374 206b           const k
0045320: 7262 355f 6368 6563 6b73 756d 202a 636b  rb5_checksum *ck
0045330: 7375 6d2c 206b 7262 355f 626f 6f6c 6561  sum, krb5_boolea
0045340: 6e20 2a76 616c 6964 293b 0a23 2039 3134  n *valid);.# 914
0045350: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
0045360: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
0045370: 6b72 6235 5f65 7272 6f72 5f63 6f64 650a  krb5_error_code.
0045380: 6b72 6235 5f63 5f63 6865 636b 7375 6d5f  krb5_c_checksum_
0045390: 6c65 6e67 7468 286b 7262 355f 636f 6e74  length(krb5_cont
00453a0: 6578 7420 636f 6e74 6578 742c 206b 7262  ext context, krb
00453b0: 355f 636b 7375 6d74 7970 6520 636b 7375  5_cksumtype cksu
00453c0: 6d74 7970 652c 0a20 2020 2020 2020 2020  mtype,.         
00453d0: 2020 2020 2020 2020 2020 2020 2020 7369                si
00453e0: 7a65 5f74 202a 6c65 6e67 7468 293b 0a23  ze_t *length);.#
00453f0: 2039 3331 2022 2f75 7372 2f69 6e63 6c75   931 "/usr/inclu
0045400: 6465 2f6b 7262 352f 6b72 6235 2e68 2220  de/krb5/krb5.h" 
0045410: 3320 340a 6b72 6235 5f65 7272 6f72 5f63  3 4.krb5_error_c
0045420: 6f64 650a 6b72 6235 5f63 5f6b 6579 6564  ode.krb5_c_keyed
0045430: 5f63 6865 636b 7375 6d5f 7479 7065 7328  _checksum_types(
0045440: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
0045450: 7465 7874 2c20 6b72 6235 5f65 6e63 7479  text, krb5_encty
0045460: 7065 2065 6e63 7479 7065 2c0a 2020 2020  pe enctype,.    
0045470: 2020 2020 2020 2020 2020 2020 2020 2020                  
0045480: 2020 2020 2020 2020 756e 7369 676e 6564          unsigned
0045490: 2069 6e74 202a 636f 756e 742c 206b 7262   int *count, krb
00454a0: 355f 636b 7375 6d74 7970 6520 2a2a 636b  5_cksumtype **ck
00454b0: 7375 6d74 7970 6573 293b 0a23 2031 3030  sumtypes);.# 100
00454c0: 3320 222f 7573 722f 696e 636c 7564 652f  3 "/usr/include/
00454d0: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
00454e0: 0a6b 7262 355f 626f 6f6c 6561 6e0a 6b72  .krb5_boolean.kr
00454f0: 6235 5f63 5f76 616c 6964 5f65 6e63 7479  b5_c_valid_encty
0045500: 7065 286b 7262 355f 656e 6374 7970 6520  pe(krb5_enctype 
0045510: 6b74 7970 6529 3b0a 2320 3130 3133 2022  ktype);.# 1013 "
0045520: 2f75 7372 2f69 6e63 6c75 6465 2f6b 7262  /usr/include/krb
0045530: 352f 6b72 6235 2e68 2220 3320 340a 6b72  5/krb5.h" 3 4.kr
0045540: 6235 5f62 6f6f 6c65 616e 0a6b 7262 355f  b5_boolean.krb5_
0045550: 635f 7661 6c69 645f 636b 7375 6d74 7970  c_valid_cksumtyp
0045560: 6528 6b72 6235 5f63 6b73 756d 7479 7065  e(krb5_cksumtype
0045570: 2063 7479 7065 293b 0a23 2031 3032 3420   ctype);.# 1024 
0045580: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
0045590: 6235 2f6b 7262 352e 6822 2033 2034 0a6b  b5/krb5.h" 3 4.k
00455a0: 7262 355f 626f 6f6c 6561 6e0a 6b72 6235  rb5_boolean.krb5
00455b0: 5f63 5f69 735f 636f 6c6c 5f70 726f 6f66  _c_is_coll_proof
00455c0: 5f63 6b73 756d 286b 7262 355f 636b 7375  _cksum(krb5_cksu
00455d0: 6d74 7970 6520 6374 7970 6529 3b0a 2320  mtype ctype);.# 
00455e0: 3130 3334 2022 2f75 7372 2f69 6e63 6c75  1034 "/usr/inclu
00455f0: 6465 2f6b 7262 352f 6b72 6235 2e68 2220  de/krb5/krb5.h" 
0045600: 3320 340a 6b72 6235 5f62 6f6f 6c65 616e  3 4.krb5_boolean
0045610: 0a6b 7262 355f 635f 6973 5f6b 6579 6564  .krb5_c_is_keyed
0045620: 5f63 6b73 756d 286b 7262 355f 636b 7375  _cksum(krb5_cksu
0045630: 6d74 7970 6520 6374 7970 6529 3b0a 2320  mtype ctype);.# 
0045640: 3130 3734 2022 2f75 7372 2f69 6e63 6c75  1074 "/usr/inclu
0045650: 6465 2f6b 7262 352f 6b72 6235 2e68 2220  de/krb5/krb5.h" 
0045660: 3320 340a 6b72 6235 5f65 7272 6f72 5f63  3 4.krb5_error_c
0045670: 6f64 650a 6b72 6235 5f63 5f6d 616b 655f  ode.krb5_c_make_
0045680: 6368 6563 6b73 756d 5f69 6f76 286b 7262  checksum_iov(krb
0045690: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
00456a0: 742c 206b 7262 355f 636b 7375 6d74 7970  t, krb5_cksumtyp
00456b0: 6520 636b 7375 6d74 7970 652c 0a20 2020  e cksumtype,.   
00456c0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00456d0: 2020 2020 2020 636f 6e73 7420 6b72 6235        const krb5
00456e0: 5f6b 6579 626c 6f63 6b20 2a6b 6579 2c20  _keyblock *key, 
00456f0: 6b72 6235 5f6b 6579 7573 6167 6520 7573  krb5_keyusage us
0045700: 6167 652c 0a20 2020 2020 2020 2020 2020  age,.           
0045710: 2020 2020 2020 2020 2020 2020 2020 6b72                kr
0045720: 6235 5f63 7279 7074 6f5f 696f 7620 2a64  b5_crypto_iov *d
0045730: 6174 612c 2073 697a 655f 7420 6e75 6d5f  ata, size_t num_
0045740: 6461 7461 293b 0a23 2031 3130 3120 222f  data);.# 1101 "/
0045750: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
0045760: 2f6b 7262 352e 6822 2033 2034 0a6b 7262  /krb5.h" 3 4.krb
0045770: 355f 6572 726f 725f 636f 6465 0a6b 7262  5_error_code.krb
0045780: 355f 635f 7665 7269 6679 5f63 6865 636b  5_c_verify_check
0045790: 7375 6d5f 696f 7628 6b72 6235 5f63 6f6e  sum_iov(krb5_con
00457a0: 7465 7874 2063 6f6e 7465 7874 2c20 6b72  text context, kr
00457b0: 6235 5f63 6b73 756d 7479 7065 2063 6b73  b5_cksumtype cks
00457c0: 756d 7479 7065 2c0a 2020 2020 2020 2020  umtype,.        
00457d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00457e0: 2020 2063 6f6e 7374 206b 7262 355f 6b65     const krb5_ke
00457f0: 7962 6c6f 636b 202a 6b65 792c 206b 7262  yblock *key, krb
0045800: 355f 6b65 7975 7361 6765 2075 7361 6765  5_keyusage usage
0045810: 2c0a 2020 2020 2020 2020 2020 2020 2020  ,.              
0045820: 2020 2020 2020 2020 2020 2020 2063 6f6e               con
0045830: 7374 206b 7262 355f 6372 7970 746f 5f69  st krb5_crypto_i
0045840: 6f76 202a 6461 7461 2c20 7369 7a65 5f74  ov *data, size_t
0045850: 206e 756d 5f64 6174 612c 0a20 2020 2020   num_data,.     
0045860: 2020 2020 2020 2020 2020 2020 2020 2020                  
0045870: 2020 2020 2020 6b72 6235 5f62 6f6f 6c65        krb5_boole
0045880: 616e 202a 7661 6c69 6429 3b0a 2320 3131  an *valid);.# 11
0045890: 3337 2022 2f75 7372 2f69 6e63 6c75 6465  37 "/usr/include
00458a0: 2f6b 7262 352f 6b72 6235 2e68 2220 3320  /krb5/krb5.h" 3 
00458b0: 340a 6b72 6235 5f65 7272 6f72 5f63 6f64  4.krb5_error_cod
00458c0: 650a 6b72 6235 5f63 5f65 6e63 7279 7074  e.krb5_c_encrypt
00458d0: 5f69 6f76 286b 7262 355f 636f 6e74 6578  _iov(krb5_contex
00458e0: 7420 636f 6e74 6578 742c 2063 6f6e 7374  t context, const
00458f0: 206b 7262 355f 6b65 7962 6c6f 636b 202a   krb5_keyblock *
0045900: 6b65 7962 6c6f 636b 2c0a 2020 2020 2020  keyblock,.      
0045910: 2020 2020 2020 2020 2020 2020 206b 7262               krb
0045920: 355f 6b65 7975 7361 6765 2075 7361 6765  5_keyusage usage
0045930: 2c20 636f 6e73 7420 6b72 6235 5f64 6174  , const krb5_dat
0045940: 6120 2a63 6970 6865 725f 7374 6174 652c  a *cipher_state,
0045950: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
0045960: 2020 2020 6b72 6235 5f63 7279 7074 6f5f      krb5_crypto_
0045970: 696f 7620 2a64 6174 612c 2073 697a 655f  iov *data, size_
0045980: 7420 6e75 6d5f 6461 7461 293b 0a23 2031  t num_data);.# 1
0045990: 3137 3220 222f 7573 722f 696e 636c 7564  172 "/usr/includ
00459a0: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
00459b0: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
00459c0: 6465 0a6b 7262 355f 635f 6465 6372 7970  de.krb5_c_decryp
00459d0: 745f 696f 7628 6b72 6235 5f63 6f6e 7465  t_iov(krb5_conte
00459e0: 7874 2063 6f6e 7465 7874 2c20 636f 6e73  xt context, cons
00459f0: 7420 6b72 6235 5f6b 6579 626c 6f63 6b20  t krb5_keyblock 
0045a00: 2a6b 6579 626c 6f63 6b2c 0a20 2020 2020  *keyblock,.     
0045a10: 2020 2020 2020 2020 2020 2020 2020 6b72                kr
0045a20: 6235 5f6b 6579 7573 6167 6520 7573 6167  b5_keyusage usag
0045a30: 652c 2063 6f6e 7374 206b 7262 355f 6461  e, const krb5_da
0045a40: 7461 202a 6369 7068 6572 5f73 7461 7465  ta *cipher_state
0045a50: 2c0a 2020 2020 2020 2020 2020 2020 2020  ,.              
0045a60: 2020 2020 206b 7262 355f 6372 7970 746f       krb5_crypto
0045a70: 5f69 6f76 202a 6461 7461 2c20 7369 7a65  _iov *data, size
0045a80: 5f74 206e 756d 5f64 6174 6129 3b0a 2320  _t num_data);.# 
0045a90: 3131 3837 2022 2f75 7372 2f69 6e63 6c75  1187 "/usr/inclu
0045aa0: 6465 2f6b 7262 352f 6b72 6235 2e68 2220  de/krb5/krb5.h" 
0045ab0: 3320 340a 6b72 6235 5f65 7272 6f72 5f63  3 4.krb5_error_c
0045ac0: 6f64 650a 6b72 6235 5f63 5f63 7279 7074  ode.krb5_c_crypt
0045ad0: 6f5f 6c65 6e67 7468 286b 7262 355f 636f  o_length(krb5_co
0045ae0: 6e74 6578 7420 636f 6e74 6578 742c 206b  ntext context, k
0045af0: 7262 355f 656e 6374 7970 6520 656e 6374  rb5_enctype enct
0045b00: 7970 652c 0a20 2020 2020 2020 2020 2020  ype,.           
0045b10: 2020 2020 2020 2020 2020 6b72 6235 5f63            krb5_c
0045b20: 7279 7074 6f74 7970 6520 7479 7065 2c20  ryptotype type, 
0045b30: 756e 7369 676e 6564 2069 6e74 202a 7369  unsigned int *si
0045b40: 7a65 293b 0a23 2031 3230 3620 222f 7573  ze);.# 1206 "/us
0045b50: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
0045b60: 7262 352e 6822 2033 2034 0a6b 7262 355f  rb5.h" 3 4.krb5_
0045b70: 6572 726f 725f 636f 6465 0a6b 7262 355f  error_code.krb5_
0045b80: 635f 6372 7970 746f 5f6c 656e 6774 685f  c_crypto_length_
0045b90: 696f 7628 6b72 6235 5f63 6f6e 7465 7874  iov(krb5_context
0045ba0: 2063 6f6e 7465 7874 2c20 6b72 6235 5f65   context, krb5_e
0045bb0: 6e63 7479 7065 2065 6e63 7479 7065 2c0a  nctype enctype,.
0045bc0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0045bd0: 2020 2020 2020 2020 206b 7262 355f 6372           krb5_cr
0045be0: 7970 746f 5f69 6f76 202a 6461 7461 2c20  ypto_iov *data, 
0045bf0: 7369 7a65 5f74 206e 756d 5f64 6174 6129  size_t num_data)
0045c00: 3b0a 2320 3132 3233 2022 2f75 7372 2f69  ;.# 1223 "/usr/i
0045c10: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
0045c20: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
0045c30: 6f72 5f63 6f64 650a 6b72 6235 5f63 5f70  or_code.krb5_c_p
0045c40: 6164 6469 6e67 5f6c 656e 6774 6828 6b72  adding_length(kr
0045c50: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
0045c60: 7874 2c20 6b72 6235 5f65 6e63 7479 7065  xt, krb5_enctype
0045c70: 2065 6e63 7479 7065 2c0a 2020 2020 2020   enctype,.      
0045c80: 2020 2020 2020 2020 2020 2020 2020 2020                  
0045c90: 7369 7a65 5f74 2064 6174 615f 6c65 6e67  size_t data_leng
0045ca0: 7468 2c20 756e 7369 676e 6564 2069 6e74  th, unsigned int
0045cb0: 202a 7369 7a65 293b 0a23 2031 3233 3920   *size);.# 1239 
0045cc0: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
0045cd0: 6235 2f6b 7262 352e 6822 2033 2034 0a6b  b5/krb5.h" 3 4.k
0045ce0: 7262 355f 6572 726f 725f 636f 6465 0a6b  rb5_error_code.k
0045cf0: 7262 355f 6b5f 6372 6561 7465 5f6b 6579  rb5_k_create_key
0045d00: 286b 7262 355f 636f 6e74 6578 7420 636f  (krb5_context co
0045d10: 6e74 6578 742c 2063 6f6e 7374 206b 7262  ntext, const krb
0045d20: 355f 6b65 7962 6c6f 636b 202a 6b65 795f  5_keyblock *key_
0045d30: 6461 7461 2c0a 2020 2020 2020 2020 2020  data,.          
0045d40: 2020 2020 2020 2020 6b72 6235 5f6b 6579          krb5_key
0045d50: 202a 6f75 7429 3b0a 0a0a 766f 6964 0a6b   *out);...void.k
0045d60: 7262 355f 6b5f 7265 6665 7265 6e63 655f  rb5_k_reference_
0045d70: 6b65 7928 6b72 6235 5f63 6f6e 7465 7874  key(krb5_context
0045d80: 2063 6f6e 7465 7874 2c20 6b72 6235 5f6b   context, krb5_k
0045d90: 6579 206b 6579 293b 0a0a 0a76 6f69 640a  ey key);...void.
0045da0: 6b72 6235 5f6b 5f66 7265 655f 6b65 7928  krb5_k_free_key(
0045db0: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
0045dc0: 7465 7874 2c20 6b72 6235 5f6b 6579 206b  text, krb5_key k
0045dd0: 6579 293b 0a0a 0a6b 7262 355f 6572 726f  ey);...krb5_erro
0045de0: 725f 636f 6465 0a6b 7262 355f 6b5f 6b65  r_code.krb5_k_ke
0045df0: 795f 6b65 7962 6c6f 636b 286b 7262 355f  y_keyblock(krb5_
0045e00: 636f 6e74 6578 7420 636f 6e74 6578 742c  context context,
0045e10: 206b 7262 355f 6b65 7920 6b65 792c 0a20   krb5_key key,. 
0045e20: 2020 2020 2020 2020 2020 2020 2020 2020                  
0045e30: 2020 206b 7262 355f 6b65 7962 6c6f 636b     krb5_keyblock
0045e40: 202a 2a6b 6579 5f64 6174 6129 3b0a 0a0a   **key_data);...
0045e50: 6b72 6235 5f65 6e63 7479 7065 0a6b 7262  krb5_enctype.krb
0045e60: 355f 6b5f 6b65 795f 656e 6374 7970 6528  5_k_key_enctype(
0045e70: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
0045e80: 7465 7874 2c20 6b72 6235 5f6b 6579 206b  text, krb5_key k
0045e90: 6579 293b 0a23 2031 3238 3320 222f 7573  ey);.# 1283 "/us
0045ea0: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
0045eb0: 7262 352e 6822 2033 2034 0a6b 7262 355f  rb5.h" 3 4.krb5_
0045ec0: 6572 726f 725f 636f 6465 0a6b 7262 355f  error_code.krb5_
0045ed0: 6b5f 656e 6372 7970 7428 6b72 6235 5f63  k_encrypt(krb5_c
0045ee0: 6f6e 7465 7874 2063 6f6e 7465 7874 2c20  ontext context, 
0045ef0: 6b72 6235 5f6b 6579 206b 6579 2c20 6b72  krb5_key key, kr
0045f00: 6235 5f6b 6579 7573 6167 6520 7573 6167  b5_keyusage usag
0045f10: 652c 0a20 2020 2020 2020 2020 2020 2020  e,.             
0045f20: 2020 636f 6e73 7420 6b72 6235 5f64 6174    const krb5_dat
0045f30: 6120 2a63 6970 6865 725f 7374 6174 652c  a *cipher_state,
0045f40: 2063 6f6e 7374 206b 7262 355f 6461 7461   const krb5_data
0045f50: 202a 696e 7075 742c 0a20 2020 2020 2020   *input,.       
0045f60: 2020 2020 2020 2020 6b72 6235 5f65 6e63          krb5_enc
0045f70: 5f64 6174 6120 2a6f 7574 7075 7429 3b0a  _data *output);.
0045f80: 2320 3133 3138 2022 2f75 7372 2f69 6e63  # 1318 "/usr/inc
0045f90: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
0045fa0: 2220 3320 340a 6b72 6235 5f65 7272 6f72  " 3 4.krb5_error
0045fb0: 5f63 6f64 650a 6b72 6235 5f6b 5f65 6e63  _code.krb5_k_enc
0045fc0: 7279 7074 5f69 6f76 286b 7262 355f 636f  rypt_iov(krb5_co
0045fd0: 6e74 6578 7420 636f 6e74 6578 742c 206b  ntext context, k
0045fe0: 7262 355f 6b65 7920 6b65 792c 206b 7262  rb5_key key, krb
0045ff0: 355f 6b65 7975 7361 6765 2075 7361 6765  5_keyusage usage
0046000: 2c0a 2020 2020 2020 2020 2020 2020 2020  ,.              
0046010: 2020 2020 2063 6f6e 7374 206b 7262 355f       const krb5_
0046020: 6461 7461 202a 6369 7068 6572 5f73 7461  data *cipher_sta
0046030: 7465 2c20 6b72 6235 5f63 7279 7074 6f5f  te, krb5_crypto_
0046040: 696f 7620 2a64 6174 612c 0a20 2020 2020  iov *data,.     
0046050: 2020 2020 2020 2020 2020 2020 2020 7369                si
0046060: 7a65 5f74 206e 756d 5f64 6174 6129 3b0a  ze_t num_data);.
0046070: 2320 3133 3437 2022 2f75 7372 2f69 6e63  # 1347 "/usr/inc
0046080: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
0046090: 2220 3320 340a 6b72 6235 5f65 7272 6f72  " 3 4.krb5_error
00460a0: 5f63 6f64 650a 6b72 6235 5f6b 5f64 6563  _code.krb5_k_dec
00460b0: 7279 7074 286b 7262 355f 636f 6e74 6578  rypt(krb5_contex
00460c0: 7420 636f 6e74 6578 742c 206b 7262 355f  t context, krb5_
00460d0: 6b65 7920 6b65 792c 206b 7262 355f 6b65  key key, krb5_ke
00460e0: 7975 7361 6765 2075 7361 6765 2c0a 2020  yusage usage,.  
00460f0: 2020 2020 2020 2020 2020 2020 2063 6f6e               con
0046100: 7374 206b 7262 355f 6461 7461 202a 6369  st krb5_data *ci
0046110: 7068 6572 5f73 7461 7465 2c20 636f 6e73  pher_state, cons
0046120: 7420 6b72 6235 5f65 6e63 5f64 6174 6120  t krb5_enc_data 
0046130: 2a69 6e70 7574 2c0a 2020 2020 2020 2020  *input,.        
0046140: 2020 2020 2020 206b 7262 355f 6461 7461         krb5_data
0046150: 202a 6f75 7470 7574 293b 0a23 2031 3338   *output);.# 138
0046160: 3220 222f 7573 722f 696e 636c 7564 652f  2 "/usr/include/
0046170: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
0046180: 0a6b 7262 355f 6572 726f 725f 636f 6465  .krb5_error_code
0046190: 0a6b 7262 355f 6b5f 6465 6372 7970 745f  .krb5_k_decrypt_
00461a0: 696f 7628 6b72 6235 5f63 6f6e 7465 7874  iov(krb5_context
00461b0: 2063 6f6e 7465 7874 2c20 6b72 6235 5f6b   context, krb5_k
00461c0: 6579 206b 6579 2c20 6b72 6235 5f6b 6579  ey key, krb5_key
00461d0: 7573 6167 6520 7573 6167 652c 0a20 2020  usage usage,.   
00461e0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00461f0: 636f 6e73 7420 6b72 6235 5f64 6174 6120  const krb5_data 
0046200: 2a63 6970 6865 725f 7374 6174 652c 206b  *cipher_state, k
0046210: 7262 355f 6372 7970 746f 5f69 6f76 202a  rb5_crypto_iov *
0046220: 6461 7461 2c0a 2020 2020 2020 2020 2020  data,.          
0046230: 2020 2020 2020 2020 2073 697a 655f 7420           size_t 
0046240: 6e75 6d5f 6461 7461 293b 0a23 2031 3431  num_data);.# 141
0046250: 3120 222f 7573 722f 696e 636c 7564 652f  1 "/usr/include/
0046260: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
0046270: 0a6b 7262 355f 6572 726f 725f 636f 6465  .krb5_error_code
0046280: 0a6b 7262 355f 6b5f 6d61 6b65 5f63 6865  .krb5_k_make_che
0046290: 636b 7375 6d28 6b72 6235 5f63 6f6e 7465  cksum(krb5_conte
00462a0: 7874 2063 6f6e 7465 7874 2c20 6b72 6235  xt context, krb5
00462b0: 5f63 6b73 756d 7479 7065 2063 6b73 756d  _cksumtype cksum
00462c0: 7479 7065 2c0a 2020 2020 2020 2020 2020  type,.          
00462d0: 2020 2020 2020 2020 2020 206b 7262 355f             krb5_
00462e0: 6b65 7920 6b65 792c 206b 7262 355f 6b65  key key, krb5_ke
00462f0: 7975 7361 6765 2075 7361 6765 2c20 636f  yusage usage, co
0046300: 6e73 7420 6b72 6235 5f64 6174 6120 2a69  nst krb5_data *i
0046310: 6e70 7574 2c0a 2020 2020 2020 2020 2020  nput,.          
0046320: 2020 2020 2020 2020 2020 206b 7262 355f             krb5_
0046330: 6368 6563 6b73 756d 202a 636b 7375 6d29  checksum *cksum)
0046340: 3b0a 2320 3134 3337 2022 2f75 7372 2f69  ;.# 1437 "/usr/i
0046350: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
0046360: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
0046370: 6f72 5f63 6f64 650a 6b72 6235 5f6b 5f6d  or_code.krb5_k_m
0046380: 616b 655f 6368 6563 6b73 756d 5f69 6f76  ake_checksum_iov
0046390: 286b 7262 355f 636f 6e74 6578 7420 636f  (krb5_context co
00463a0: 6e74 6578 742c 206b 7262 355f 636b 7375  ntext, krb5_cksu
00463b0: 6d74 7970 6520 636b 7375 6d74 7970 652c  mtype cksumtype,
00463c0: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
00463d0: 2020 2020 2020 2020 2020 6b72 6235 5f6b            krb5_k
00463e0: 6579 206b 6579 2c20 6b72 6235 5f6b 6579  ey key, krb5_key
00463f0: 7573 6167 6520 7573 6167 652c 0a20 2020  usage usage,.   
0046400: 2020 2020 2020 2020 2020 2020 2020 2020                  
0046410: 2020 2020 2020 6b72 6235 5f63 7279 7074        krb5_crypt
0046420: 6f5f 696f 7620 2a64 6174 612c 2073 697a  o_iov *data, siz
0046430: 655f 7420 6e75 6d5f 6461 7461 293b 0a23  e_t num_data);.#
0046440: 2031 3436 3320 222f 7573 722f 696e 636c   1463 "/usr/incl
0046450: 7564 652f 6b72 6235 2f6b 7262 352e 6822  ude/krb5/krb5.h"
0046460: 2033 2034 0a6b 7262 355f 6572 726f 725f   3 4.krb5_error_
0046470: 636f 6465 0a6b 7262 355f 6b5f 7665 7269  code.krb5_k_veri
0046480: 6679 5f63 6865 636b 7375 6d28 6b72 6235  fy_checksum(krb5
0046490: 5f63 6f6e 7465 7874 2063 6f6e 7465 7874  _context context
00464a0: 2c20 6b72 6235 5f6b 6579 206b 6579 2c20  , krb5_key key, 
00464b0: 6b72 6235 5f6b 6579 7573 6167 6520 7573  krb5_keyusage us
00464c0: 6167 652c 0a20 2020 2020 2020 2020 2020  age,.           
00464d0: 2020 2020 2020 2020 2020 2020 636f 6e73              cons
00464e0: 7420 6b72 6235 5f64 6174 6120 2a64 6174  t krb5_data *dat
00464f0: 612c 2063 6f6e 7374 206b 7262 355f 6368  a, const krb5_ch
0046500: 6563 6b73 756d 202a 636b 7375 6d2c 0a20  ecksum *cksum,. 
0046510: 2020 2020 2020 2020 2020 2020 2020 2020                  
0046520: 2020 2020 2020 6b72 6235 5f62 6f6f 6c65        krb5_boole
0046530: 616e 202a 7661 6c69 6429 3b0a 2320 3134  an *valid);.# 14
0046540: 3930 2022 2f75 7372 2f69 6e63 6c75 6465  90 "/usr/include
0046550: 2f6b 7262 352f 6b72 6235 2e68 2220 3320  /krb5/krb5.h" 3 
0046560: 340a 6b72 6235 5f65 7272 6f72 5f63 6f64  4.krb5_error_cod
0046570: 650a 6b72 6235 5f6b 5f76 6572 6966 795f  e.krb5_k_verify_
0046580: 6368 6563 6b73 756d 5f69 6f76 286b 7262  checksum_iov(krb
0046590: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
00465a0: 742c 206b 7262 355f 636b 7375 6d74 7970  t, krb5_cksumtyp
00465b0: 6520 636b 7375 6d74 7970 652c 0a20 2020  e cksumtype,.   
00465c0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00465d0: 2020 2020 2020 2020 6b72 6235 5f6b 6579          krb5_key
00465e0: 206b 6579 2c20 6b72 6235 5f6b 6579 7573   key, krb5_keyus
00465f0: 6167 6520 7573 6167 652c 0a20 2020 2020  age usage,.     
0046600: 2020 2020 2020 2020 2020 2020 2020 2020                  
0046610: 2020 2020 2020 636f 6e73 7420 6b72 6235        const krb5
0046620: 5f63 7279 7074 6f5f 696f 7620 2a64 6174  _crypto_iov *dat
0046630: 612c 2073 697a 655f 7420 6e75 6d5f 6461  a, size_t num_da
0046640: 7461 2c0a 2020 2020 2020 2020 2020 2020  ta,.            
0046650: 2020 2020 2020 2020 2020 2020 2020 206b                 k
0046660: 7262 355f 626f 6f6c 6561 6e20 2a76 616c  rb5_boolean *val
0046670: 6964 293b 0a23 2031 3531 3420 222f 7573  id);.# 1514 "/us
0046680: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
0046690: 7262 352e 6822 2033 2034 0a6b 7262 355f  rb5.h" 3 4.krb5_
00466a0: 6572 726f 725f 636f 6465 0a6b 7262 355f  error_code.krb5_
00466b0: 6b5f 7072 6628 6b72 6235 5f63 6f6e 7465  k_prf(krb5_conte
00466c0: 7874 2063 6f6e 7465 7874 2c20 6b72 6235  xt context, krb5
00466d0: 5f6b 6579 206b 6579 2c20 6b72 6235 5f64  _key key, krb5_d
00466e0: 6174 6120 2a69 6e70 7574 2c20 6b72 6235  ata *input, krb5
00466f0: 5f64 6174 6120 2a6f 7574 7075 7429 3b0a  _data *output);.
0046700: 0a0a 0a0a 0a0a 0a6b 7262 355f 6572 726f  .......krb5_erro
0046710: 725f 636f 6465 0a6b 7262 355f 656e 6372  r_code.krb5_encr
0046720: 7970 7428 6b72 6235 5f63 6f6e 7465 7874  ypt(krb5_context
0046730: 2063 6f6e 7465 7874 2c20 6b72 6235 5f63   context, krb5_c
0046740: 6f6e 7374 5f70 6f69 6e74 6572 2069 6e70  onst_pointer inp
0046750: 7472 2c0a 2020 2020 2020 2020 2020 2020  tr,.            
0046760: 206b 7262 355f 706f 696e 7465 7220 6f75   krb5_pointer ou
0046770: 7470 7472 2c20 7369 7a65 5f74 2073 697a  tptr, size_t siz
0046780: 652c 206b 7262 355f 656e 6372 7970 745f  e, krb5_encrypt_
0046790: 626c 6f63 6b20 2a65 626c 6f63 6b2c 0a20  block *eblock,. 
00467a0: 2020 2020 2020 2020 2020 2020 6b72 6235              krb5
00467b0: 5f70 6f69 6e74 6572 2069 7665 6329 3b0a  _pointer ivec);.
00467c0: 0a0a 6b72 6235 5f65 7272 6f72 5f63 6f64  ..krb5_error_cod
00467d0: 650a 6b72 6235 5f64 6563 7279 7074 286b  e.krb5_decrypt(k
00467e0: 7262 355f 636f 6e74 6578 7420 636f 6e74  rb5_context cont
00467f0: 6578 742c 206b 7262 355f 636f 6e73 745f  ext, krb5_const_
0046800: 706f 696e 7465 7220 696e 7074 722c 0a20  pointer inptr,. 
0046810: 2020 2020 2020 2020 2020 2020 6b72 6235              krb5
0046820: 5f70 6f69 6e74 6572 206f 7574 7074 722c  _pointer outptr,
0046830: 2073 697a 655f 7420 7369 7a65 2c20 6b72   size_t size, kr
0046840: 6235 5f65 6e63 7279 7074 5f62 6c6f 636b  b5_encrypt_block
0046850: 202a 6562 6c6f 636b 2c0a 2020 2020 2020   *eblock,.      
0046860: 2020 2020 2020 206b 7262 355f 706f 696e         krb5_poin
0046870: 7465 7220 6976 6563 293b 0a0a 0a6b 7262  ter ivec);...krb
0046880: 355f 6572 726f 725f 636f 6465 0a6b 7262  5_error_code.krb
0046890: 355f 7072 6f63 6573 735f 6b65 7928 6b72  5_process_key(kr
00468a0: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
00468b0: 7874 2c20 6b72 6235 5f65 6e63 7279 7074  xt, krb5_encrypt
00468c0: 5f62 6c6f 636b 202a 6562 6c6f 636b 2c0a  _block *eblock,.
00468d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00468e0: 2063 6f6e 7374 206b 7262 355f 6b65 7962   const krb5_keyb
00468f0: 6c6f 636b 202a 206b 6579 293b 0a0a 0a6b  lock * key);...k
0046900: 7262 355f 6572 726f 725f 636f 6465 0a6b  rb5_error_code.k
0046910: 7262 355f 6669 6e69 7368 5f6b 6579 286b  rb5_finish_key(k
0046920: 7262 355f 636f 6e74 6578 7420 636f 6e74  rb5_context cont
0046930: 6578 742c 206b 7262 355f 656e 6372 7970  ext, krb5_encryp
0046940: 745f 626c 6f63 6b20 2a20 6562 6c6f 636b  t_block * eblock
0046950: 293b 0a0a 0a6b 7262 355f 6572 726f 725f  );...krb5_error_
0046960: 636f 6465 0a6b 7262 355f 7374 7269 6e67  code.krb5_string
0046970: 5f74 6f5f 6b65 7928 6b72 6235 5f63 6f6e  _to_key(krb5_con
0046980: 7465 7874 2063 6f6e 7465 7874 2c20 636f  text context, co
0046990: 6e73 7420 6b72 6235 5f65 6e63 7279 7074  nst krb5_encrypt
00469a0: 5f62 6c6f 636b 202a 6562 6c6f 636b 2c0a  _block *eblock,.
00469b0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00469c0: 2020 206b 7262 355f 6b65 7962 6c6f 636b     krb5_keyblock
00469d0: 202a 206b 6579 626c 6f63 6b2c 2063 6f6e   * keyblock, con
00469e0: 7374 206b 7262 355f 6461 7461 202a 6461  st krb5_data *da
00469f0: 7461 2c0a 2020 2020 2020 2020 2020 2020  ta,.            
0046a00: 2020 2020 2020 2063 6f6e 7374 206b 7262         const krb
0046a10: 355f 6461 7461 202a 7361 6c74 293b 0a0a  5_data *salt);..
0046a20: 0a6b 7262 355f 6572 726f 725f 636f 6465  .krb5_error_code
0046a30: 0a6b 7262 355f 696e 6974 5f72 616e 646f  .krb5_init_rando
0046a40: 6d5f 6b65 7928 6b72 6235 5f63 6f6e 7465  m_key(krb5_conte
0046a50: 7874 2063 6f6e 7465 7874 2c20 636f 6e73  xt context, cons
0046a60: 7420 6b72 6235 5f65 6e63 7279 7074 5f62  t krb5_encrypt_b
0046a70: 6c6f 636b 202a 6562 6c6f 636b 2c0a 2020  lock *eblock,.  
0046a80: 2020 2020 2020 2020 2020 2020 2020 2020                  
0046a90: 2020 2063 6f6e 7374 206b 7262 355f 6b65     const krb5_ke
0046aa0: 7962 6c6f 636b 202a 6b65 7962 6c6f 636b  yblock *keyblock
0046ab0: 2c20 6b72 6235 5f70 6f69 6e74 6572 202a  , krb5_pointer *
0046ac0: 7074 7229 3b0a 0a0a 6b72 6235 5f65 7272  ptr);...krb5_err
0046ad0: 6f72 5f63 6f64 650a 6b72 6235 5f66 696e  or_code.krb5_fin
0046ae0: 6973 685f 7261 6e64 6f6d 5f6b 6579 286b  ish_random_key(k
0046af0: 7262 355f 636f 6e74 6578 7420 636f 6e74  rb5_context cont
0046b00: 6578 742c 2063 6f6e 7374 206b 7262 355f  ext, const krb5_
0046b10: 656e 6372 7970 745f 626c 6f63 6b20 2a65  encrypt_block *e
0046b20: 626c 6f63 6b2c 0a20 2020 2020 2020 2020  block,.         
0046b30: 2020 2020 2020 2020 2020 2020 2020 6b72                kr
0046b40: 6235 5f70 6f69 6e74 6572 202a 7074 7229  b5_pointer *ptr)
0046b50: 3b0a 0a0a 6b72 6235 5f65 7272 6f72 5f63  ;...krb5_error_c
0046b60: 6f64 650a 6b72 6235 5f72 616e 646f 6d5f  ode.krb5_random_
0046b70: 6b65 7928 6b72 6235 5f63 6f6e 7465 7874  key(krb5_context
0046b80: 2063 6f6e 7465 7874 2c20 636f 6e73 7420   context, const 
0046b90: 6b72 6235 5f65 6e63 7279 7074 5f62 6c6f  krb5_encrypt_blo
0046ba0: 636b 202a 6562 6c6f 636b 2c0a 2020 2020  ck *eblock,.    
0046bb0: 2020 2020 2020 2020 2020 2020 6b72 6235              krb5
0046bc0: 5f70 6f69 6e74 6572 2070 7472 2c20 6b72  _pointer ptr, kr
0046bd0: 6235 5f6b 6579 626c 6f63 6b20 2a2a 6b65  b5_keyblock **ke
0046be0: 7962 6c6f 636b 293b 0a0a 0a6b 7262 355f  yblock);...krb5_
0046bf0: 656e 6374 7970 650a 6b72 6235 5f65 626c  enctype.krb5_ebl
0046c00: 6f63 6b5f 656e 6374 7970 6528 6b72 6235  ock_enctype(krb5
0046c10: 5f63 6f6e 7465 7874 2063 6f6e 7465 7874  _context context
0046c20: 2c20 636f 6e73 7420 6b72 6235 5f65 6e63  , const krb5_enc
0046c30: 7279 7074 5f62 6c6f 636b 202a 6562 6c6f  rypt_block *eblo
0046c40: 636b 293b 0a0a 0a6b 7262 355f 6572 726f  ck);...krb5_erro
0046c50: 725f 636f 6465 0a6b 7262 355f 7573 655f  r_code.krb5_use_
0046c60: 656e 6374 7970 6528 6b72 6235 5f63 6f6e  enctype(krb5_con
0046c70: 7465 7874 2063 6f6e 7465 7874 2c20 6b72  text context, kr
0046c80: 6235 5f65 6e63 7279 7074 5f62 6c6f 636b  b5_encrypt_block
0046c90: 202a 6562 6c6f 636b 2c0a 2020 2020 2020   *eblock,.      
0046ca0: 2020 2020 2020 2020 2020 206b 7262 355f             krb5_
0046cb0: 656e 6374 7970 6520 656e 6374 7970 6529  enctype enctype)
0046cc0: 3b0a 0a0a 7369 7a65 5f74 0a6b 7262 355f  ;...size_t.krb5_
0046cd0: 656e 6372 7970 745f 7369 7a65 2873 697a  encrypt_size(siz
0046ce0: 655f 7420 6c65 6e67 7468 2c20 6b72 6235  e_t length, krb5
0046cf0: 5f65 6e63 7479 7065 2063 7279 7074 6f29  _enctype crypto)
0046d00: 3b0a 0a0a 7369 7a65 5f74 0a6b 7262 355f  ;...size_t.krb5_
0046d10: 6368 6563 6b73 756d 5f73 697a 6528 6b72  checksum_size(kr
0046d20: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
0046d30: 7874 2c20 6b72 6235 5f63 6b73 756d 7479  xt, krb5_cksumty
0046d40: 7065 2063 7479 7065 293b 0a0a 0a6b 7262  pe ctype);...krb
0046d50: 355f 6572 726f 725f 636f 6465 0a6b 7262  5_error_code.krb
0046d60: 355f 6361 6c63 756c 6174 655f 6368 6563  5_calculate_chec
0046d70: 6b73 756d 286b 7262 355f 636f 6e74 6578  ksum(krb5_contex
0046d80: 7420 636f 6e74 6578 742c 206b 7262 355f  t context, krb5_
0046d90: 636b 7375 6d74 7970 6520 6374 7970 652c  cksumtype ctype,
0046da0: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
0046db0: 2020 2020 2020 2020 206b 7262 355f 636f           krb5_co
0046dc0: 6e73 745f 706f 696e 7465 7220 696e 2c20  nst_pointer in, 
0046dd0: 7369 7a65 5f74 2069 6e5f 6c65 6e67 7468  size_t in_length
0046de0: 2c0a 2020 2020 2020 2020 2020 2020 2020  ,.              
0046df0: 2020 2020 2020 2020 2020 6b72 6235 5f63            krb5_c
0046e00: 6f6e 7374 5f70 6f69 6e74 6572 2073 6565  onst_pointer see
0046e10: 642c 2073 697a 655f 7420 7365 6564 5f6c  d, size_t seed_l
0046e20: 656e 6774 682c 0a20 2020 2020 2020 2020  ength,.         
0046e30: 2020 2020 2020 2020 2020 2020 2020 206b                 k
0046e40: 7262 355f 6368 6563 6b73 756d 202a 206f  rb5_checksum * o
0046e50: 7574 636b 7375 6d29 3b0a 0a0a 6b72 6235  utcksum);...krb5
0046e60: 5f65 7272 6f72 5f63 6f64 650a 6b72 6235  _error_code.krb5
0046e70: 5f76 6572 6966 795f 6368 6563 6b73 756d  _verify_checksum
0046e80: 286b 7262 355f 636f 6e74 6578 7420 636f  (krb5_context co
0046e90: 6e74 6578 742c 206b 7262 355f 636b 7375  ntext, krb5_cksu
0046ea0: 6d74 7970 6520 6374 7970 652c 0a20 2020  mtype ctype,.   
0046eb0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0046ec0: 2020 636f 6e73 7420 6b72 6235 5f63 6865    const krb5_che
0046ed0: 636b 7375 6d20 2a20 636b 7375 6d2c 206b  cksum * cksum, k
0046ee0: 7262 355f 636f 6e73 745f 706f 696e 7465  rb5_const_pointe
0046ef0: 7220 696e 2c0a 2020 2020 2020 2020 2020  r in,.          
0046f00: 2020 2020 2020 2020 2020 2073 697a 655f             size_
0046f10: 7420 696e 5f6c 656e 6774 682c 206b 7262  t in_length, krb
0046f20: 355f 636f 6e73 745f 706f 696e 7465 7220  5_const_pointer 
0046f30: 7365 6564 2c0a 2020 2020 2020 2020 2020  seed,.          
0046f40: 2020 2020 2020 2020 2020 2073 697a 655f             size_
0046f50: 7420 7365 6564 5f6c 656e 6774 6829 3b0a  t seed_length);.
0046f60: 2320 3138 3833 2022 2f75 7372 2f69 6e63  # 1883 "/usr/inc
0046f70: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
0046f80: 2220 3320 340a 7479 7065 6465 6620 7374  " 3 4.typedef st
0046f90: 7275 6374 205f 6b72 6235 5f74 6963 6b65  ruct _krb5_ticke
0046fa0: 745f 7469 6d65 7320 7b0a 2020 2020 6b72  t_times {.    kr
0046fb0: 6235 5f74 696d 6573 7461 6d70 2061 7574  b5_timestamp aut
0046fc0: 6874 696d 653b 0a0a 0a20 2020 206b 7262  htime;...    krb
0046fd0: 355f 7469 6d65 7374 616d 7020 7374 6172  5_timestamp star
0046fe0: 7474 696d 653b 0a20 2020 206b 7262 355f  ttime;.    krb5_
0046ff0: 7469 6d65 7374 616d 7020 656e 6474 696d  timestamp endtim
0047000: 653b 0a20 2020 206b 7262 355f 7469 6d65  e;.    krb5_time
0047010: 7374 616d 7020 7265 6e65 775f 7469 6c6c  stamp renew_till
0047020: 3b0a 7d20 6b72 6235 5f74 6963 6b65 745f  ;.} krb5_ticket_
0047030: 7469 6d65 733b 0a0a 0a74 7970 6564 6566  times;...typedef
0047040: 2073 7472 7563 7420 5f6b 7262 355f 6175   struct _krb5_au
0047050: 7468 6461 7461 207b 0a20 2020 206b 7262  thdata {.    krb
0047060: 355f 6d61 6769 6320 6d61 6769 633b 0a20  5_magic magic;. 
0047070: 2020 206b 7262 355f 6175 7468 6461 7461     krb5_authdata
0047080: 7479 7065 2061 645f 7479 7065 3b0a 2020  type ad_type;.  
0047090: 2020 756e 7369 676e 6564 2069 6e74 206c    unsigned int l
00470a0: 656e 6774 683b 0a20 2020 206b 7262 355f  ength;.    krb5_
00470b0: 6f63 7465 7420 2a63 6f6e 7465 6e74 733b  octet *contents;
00470c0: 0a7d 206b 7262 355f 6175 7468 6461 7461  .} krb5_authdata
00470d0: 3b0a 0a0a 7479 7065 6465 6620 7374 7275  ;...typedef stru
00470e0: 6374 205f 6b72 6235 5f74 7261 6e73 6974  ct _krb5_transit
00470f0: 6564 207b 0a20 2020 206b 7262 355f 6d61  ed {.    krb5_ma
0047100: 6769 6320 6d61 6769 633b 0a20 2020 206b  gic magic;.    k
0047110: 7262 355f 6f63 7465 7420 7472 5f74 7970  rb5_octet tr_typ
0047120: 653b 0a20 2020 206b 7262 355f 6461 7461  e;.    krb5_data
0047130: 2074 725f 636f 6e74 656e 7473 3b0a 7d20   tr_contents;.} 
0047140: 6b72 6235 5f74 7261 6e73 6974 6564 3b0a  krb5_transited;.
0047150: 0a0a 7479 7065 6465 6620 7374 7275 6374  ..typedef struct
0047160: 205f 6b72 6235 5f65 6e63 5f74 6b74 5f70   _krb5_enc_tkt_p
0047170: 6172 7420 7b0a 2020 2020 6b72 6235 5f6d  art {.    krb5_m
0047180: 6167 6963 206d 6167 6963 3b0a 0a20 2020  agic magic;..   
0047190: 206b 7262 355f 666c 6167 7320 666c 6167   krb5_flags flag
00471a0: 733b 0a20 2020 206b 7262 355f 6b65 7962  s;.    krb5_keyb
00471b0: 6c6f 636b 202a 7365 7373 696f 6e3b 0a20  lock *session;. 
00471c0: 2020 206b 7262 355f 7072 696e 6369 7061     krb5_principa
00471d0: 6c20 636c 6965 6e74 3b0a 2020 2020 6b72  l client;.    kr
00471e0: 6235 5f74 7261 6e73 6974 6564 2074 7261  b5_transited tra
00471f0: 6e73 6974 6564 3b0a 2020 2020 6b72 6235  nsited;.    krb5
0047200: 5f74 6963 6b65 745f 7469 6d65 7320 7469  _ticket_times ti
0047210: 6d65 733b 0a20 2020 206b 7262 355f 6164  mes;.    krb5_ad
0047220: 6472 6573 7320 2a2a 6361 6464 7273 3b0a  dress **caddrs;.
0047230: 2020 2020 6b72 6235 5f61 7574 6864 6174      krb5_authdat
0047240: 6120 2a2a 6175 7468 6f72 697a 6174 696f  a **authorizatio
0047250: 6e5f 6461 7461 3b0a 7d20 6b72 6235 5f65  n_data;.} krb5_e
0047260: 6e63 5f74 6b74 5f70 6172 743b 0a0a 0a0a  nc_tkt_part;....
0047270: 0a0a 0a0a 7479 7065 6465 6620 7374 7275  ....typedef stru
0047280: 6374 205f 6b72 6235 5f74 6963 6b65 7420  ct _krb5_ticket 
0047290: 7b0a 2020 2020 6b72 6235 5f6d 6167 6963  {.    krb5_magic
00472a0: 206d 6167 6963 3b0a 0a20 2020 206b 7262   magic;..    krb
00472b0: 355f 7072 696e 6369 7061 6c20 7365 7276  5_principal serv
00472c0: 6572 3b0a 2020 2020 6b72 6235 5f65 6e63  er;.    krb5_enc
00472d0: 5f64 6174 6120 656e 635f 7061 7274 3b0a  _data enc_part;.
00472e0: 2020 2020 6b72 6235 5f65 6e63 5f74 6b74      krb5_enc_tkt
00472f0: 5f70 6172 7420 2a65 6e63 5f70 6172 7432  _part *enc_part2
0047300: 3b0a 7d20 6b72 6235 5f74 6963 6b65 743b  ;.} krb5_ticket;
0047310: 0a0a 0a0a 0a0a 0a0a 7479 7065 6465 6620  ........typedef 
0047320: 7374 7275 6374 205f 6b72 6235 5f61 7574  struct _krb5_aut
0047330: 6865 6e74 6963 6174 6f72 207b 0a20 2020  henticator {.   
0047340: 206b 7262 355f 6d61 6769 6320 6d61 6769   krb5_magic magi
0047350: 633b 0a20 2020 206b 7262 355f 7072 696e  c;.    krb5_prin
0047360: 6369 7061 6c20 636c 6965 6e74 3b0a 2020  cipal client;.  
0047370: 2020 6b72 6235 5f63 6865 636b 7375 6d20    krb5_checksum 
0047380: 2a63 6865 636b 7375 6d3b 0a20 2020 206b  *checksum;.    k
0047390: 7262 355f 696e 7433 3220 6375 7365 633b  rb5_int32 cusec;
00473a0: 0a20 2020 206b 7262 355f 7469 6d65 7374  .    krb5_timest
00473b0: 616d 7020 6374 696d 653b 0a20 2020 206b  amp ctime;.    k
00473c0: 7262 355f 6b65 7962 6c6f 636b 202a 7375  rb5_keyblock *su
00473d0: 626b 6579 3b0a 2020 2020 6b72 6235 5f75  bkey;.    krb5_u
00473e0: 695f 3420 7365 715f 6e75 6d62 6572 3b0a  i_4 seq_number;.
00473f0: 2020 2020 6b72 6235 5f61 7574 6864 6174      krb5_authdat
0047400: 6120 2a2a 6175 7468 6f72 697a 6174 696f  a **authorizatio
0047410: 6e5f 6461 7461 3b0a 7d20 6b72 6235 5f61  n_data;.} krb5_a
0047420: 7574 6865 6e74 6963 6174 6f72 3b0a 0a0a  uthenticator;...
0047430: 7479 7065 6465 6620 7374 7275 6374 205f  typedef struct _
0047440: 6b72 6235 5f74 6b74 5f61 7574 6865 6e74  krb5_tkt_authent
0047450: 207b 0a20 2020 206b 7262 355f 6d61 6769   {.    krb5_magi
0047460: 6320 6d61 6769 633b 0a20 2020 206b 7262  c magic;.    krb
0047470: 355f 7469 636b 6574 202a 7469 636b 6574  5_ticket *ticket
0047480: 3b0a 2020 2020 6b72 6235 5f61 7574 6865  ;.    krb5_authe
0047490: 6e74 6963 6174 6f72 202a 6175 7468 656e  nticator *authen
00474a0: 7469 6361 746f 723b 0a20 2020 206b 7262  ticator;.    krb
00474b0: 355f 666c 6167 7320 6170 5f6f 7074 696f  5_flags ap_optio
00474c0: 6e73 3b0a 7d20 6b72 6235 5f74 6b74 5f61  ns;.} krb5_tkt_a
00474d0: 7574 6865 6e74 3b0a 0a0a 7479 7065 6465  uthent;...typede
00474e0: 6620 7374 7275 6374 205f 6b72 6235 5f63  f struct _krb5_c
00474f0: 7265 6473 207b 0a20 2020 206b 7262 355f  reds {.    krb5_
0047500: 6d61 6769 6320 6d61 6769 633b 0a20 2020  magic magic;.   
0047510: 206b 7262 355f 7072 696e 6369 7061 6c20   krb5_principal 
0047520: 636c 6965 6e74 3b0a 2020 2020 6b72 6235  client;.    krb5
0047530: 5f70 7269 6e63 6970 616c 2073 6572 7665  _principal serve
0047540: 723b 0a20 2020 206b 7262 355f 6b65 7962  r;.    krb5_keyb
0047550: 6c6f 636b 206b 6579 626c 6f63 6b3b 0a20  lock keyblock;. 
0047560: 2020 206b 7262 355f 7469 636b 6574 5f74     krb5_ticket_t
0047570: 696d 6573 2074 696d 6573 3b0a 2020 2020  imes times;.    
0047580: 6b72 6235 5f62 6f6f 6c65 616e 2069 735f  krb5_boolean is_
0047590: 736b 6579 3b0a 0a20 2020 206b 7262 355f  skey;..    krb5_
00475a0: 666c 6167 7320 7469 636b 6574 5f66 6c61  flags ticket_fla
00475b0: 6773 3b0a 2020 2020 6b72 6235 5f61 6464  gs;.    krb5_add
00475c0: 7265 7373 202a 2a61 6464 7265 7373 6573  ress **addresses
00475d0: 3b0a 2020 2020 6b72 6235 5f64 6174 6120  ;.    krb5_data 
00475e0: 7469 636b 6574 3b0a 2020 2020 6b72 6235  ticket;.    krb5
00475f0: 5f64 6174 6120 7365 636f 6e64 5f74 6963  _data second_tic
0047600: 6b65 743b 0a0a 0a20 2020 206b 7262 355f  ket;...    krb5_
0047610: 6175 7468 6461 7461 202a 2a61 7574 6864  authdata **authd
0047620: 6174 613b 0a7d 206b 7262 355f 6372 6564  ata;.} krb5_cred
0047630: 733b 0a0a 0a74 7970 6564 6566 2073 7472  s;...typedef str
0047640: 7563 7420 5f6b 7262 355f 6c61 7374 5f72  uct _krb5_last_r
0047650: 6571 5f65 6e74 7279 207b 0a20 2020 206b  eq_entry {.    k
0047660: 7262 355f 6d61 6769 6320 6d61 6769 633b  rb5_magic magic;
0047670: 0a20 2020 206b 7262 355f 696e 7433 3220  .    krb5_int32 
0047680: 6c72 5f74 7970 653b 0a20 2020 206b 7262  lr_type;.    krb
0047690: 355f 7469 6d65 7374 616d 7020 7661 6c75  5_timestamp valu
00476a0: 653b 0a7d 206b 7262 355f 6c61 7374 5f72  e;.} krb5_last_r
00476b0: 6571 5f65 6e74 7279 3b0a 0a0a 7479 7065  eq_entry;...type
00476c0: 6465 6620 7374 7275 6374 205f 6b72 6235  def struct _krb5
00476d0: 5f70 615f 6461 7461 207b 0a20 2020 206b  _pa_data {.    k
00476e0: 7262 355f 6d61 6769 6320 6d61 6769 633b  rb5_magic magic;
00476f0: 0a20 2020 206b 7262 355f 7072 6561 7574  .    krb5_preaut
0047700: 6874 7970 6520 7061 5f74 7970 653b 0a20  htype pa_type;. 
0047710: 2020 2075 6e73 6967 6e65 6420 696e 7420     unsigned int 
0047720: 6c65 6e67 7468 3b0a 2020 2020 6b72 6235  length;.    krb5
0047730: 5f6f 6374 6574 202a 636f 6e74 656e 7473  _octet *contents
0047740: 3b0a 7d20 6b72 6235 5f70 615f 6461 7461  ;.} krb5_pa_data
0047750: 3b0a 0a0a 7479 7065 6465 6620 7374 7275  ;...typedef stru
0047760: 6374 205f 6b72 6235 5f74 7970 6564 5f64  ct _krb5_typed_d
0047770: 6174 6120 7b0a 2020 2020 6b72 6235 5f6d  ata {.    krb5_m
0047780: 6167 6963 206d 6167 6963 3b0a 2020 2020  agic magic;.    
0047790: 6b72 6235 5f69 6e74 3332 2074 7970 653b  krb5_int32 type;
00477a0: 0a20 2020 2075 6e73 6967 6e65 6420 696e  .    unsigned in
00477b0: 7420 6c65 6e67 7468 3b0a 2020 2020 6b72  t length;.    kr
00477c0: 6235 5f6f 6374 6574 202a 6461 7461 3b0a  b5_octet *data;.
00477d0: 7d20 6b72 6235 5f74 7970 6564 5f64 6174  } krb5_typed_dat
00477e0: 613b 0a0a 0a74 7970 6564 6566 2073 7472  a;...typedef str
00477f0: 7563 7420 5f6b 7262 355f 6b64 635f 7265  uct _krb5_kdc_re
0047800: 7120 7b0a 2020 2020 6b72 6235 5f6d 6167  q {.    krb5_mag
0047810: 6963 206d 6167 6963 3b0a 2020 2020 6b72  ic magic;.    kr
0047820: 6235 5f6d 7367 7479 7065 206d 7367 5f74  b5_msgtype msg_t
0047830: 7970 653b 0a20 2020 206b 7262 355f 7061  ype;.    krb5_pa
0047840: 5f64 6174 6120 2a2a 7061 6461 7461 3b0a  _data **padata;.
0047850: 0a20 2020 206b 7262 355f 666c 6167 7320  .    krb5_flags 
0047860: 6b64 635f 6f70 7469 6f6e 733b 0a20 2020  kdc_options;.   
0047870: 206b 7262 355f 7072 696e 6369 7061 6c20   krb5_principal 
0047880: 636c 6965 6e74 3b0a 2020 2020 6b72 6235  client;.    krb5
0047890: 5f70 7269 6e63 6970 616c 2073 6572 7665  _principal serve
00478a0: 723b 0a20 2020 206b 7262 355f 7469 6d65  r;.    krb5_time
00478b0: 7374 616d 7020 6672 6f6d 3b0a 2020 2020  stamp from;.    
00478c0: 6b72 6235 5f74 696d 6573 7461 6d70 2074  krb5_timestamp t
00478d0: 696c 6c3b 0a20 2020 206b 7262 355f 7469  ill;.    krb5_ti
00478e0: 6d65 7374 616d 7020 7274 696d 653b 0a20  mestamp rtime;. 
00478f0: 2020 206b 7262 355f 696e 7433 3220 6e6f     krb5_int32 no
0047900: 6e63 653b 0a20 2020 2069 6e74 206e 6b74  nce;.    int nkt
0047910: 7970 6573 3b0a 2020 2020 6b72 6235 5f65  ypes;.    krb5_e
0047920: 6e63 7479 7065 202a 6b74 7970 653b 0a20  nctype *ktype;. 
0047930: 2020 206b 7262 355f 6164 6472 6573 7320     krb5_address 
0047940: 2a2a 6164 6472 6573 7365 733b 0a20 2020  **addresses;.   
0047950: 206b 7262 355f 656e 635f 6461 7461 2061   krb5_enc_data a
0047960: 7574 686f 7269 7a61 7469 6f6e 5f64 6174  uthorization_dat
0047970: 613b 0a20 2020 206b 7262 355f 6175 7468  a;.    krb5_auth
0047980: 6461 7461 202a 2a75 6e65 6e63 5f61 7574  data **unenc_aut
0047990: 6864 6174 613b 0a20 2020 206b 7262 355f  hdata;.    krb5_
00479a0: 7469 636b 6574 202a 2a73 6563 6f6e 645f  ticket **second_
00479b0: 7469 636b 6574 3b0a 7d20 6b72 6235 5f6b  ticket;.} krb5_k
00479c0: 6463 5f72 6571 3b0a 0a0a 0a0a 0a0a 7479  dc_req;.......ty
00479d0: 7065 6465 6620 7374 7275 6374 205f 6b72  pedef struct _kr
00479e0: 6235 5f65 6e63 5f6b 6463 5f72 6570 5f70  b5_enc_kdc_rep_p
00479f0: 6172 7420 7b0a 2020 2020 6b72 6235 5f6d  art {.    krb5_m
0047a00: 6167 6963 206d 6167 6963 3b0a 0a20 2020  agic magic;..   
0047a10: 206b 7262 355f 6d73 6774 7970 6520 6d73   krb5_msgtype ms
0047a20: 675f 7479 7065 3b0a 2020 2020 6b72 6235  g_type;.    krb5
0047a30: 5f6b 6579 626c 6f63 6b20 2a73 6573 7369  _keyblock *sessi
0047a40: 6f6e 3b0a 2020 2020 6b72 6235 5f6c 6173  on;.    krb5_las
0047a50: 745f 7265 715f 656e 7472 7920 2a2a 6c61  t_req_entry **la
0047a60: 7374 5f72 6571 3b0a 2020 2020 6b72 6235  st_req;.    krb5
0047a70: 5f69 6e74 3332 206e 6f6e 6365 3b0a 2020  _int32 nonce;.  
0047a80: 2020 6b72 6235 5f74 696d 6573 7461 6d70    krb5_timestamp
0047a90: 206b 6579 5f65 7870 3b0a 2020 2020 6b72   key_exp;.    kr
0047aa0: 6235 5f66 6c61 6773 2066 6c61 6773 3b0a  b5_flags flags;.
0047ab0: 2020 2020 6b72 6235 5f74 6963 6b65 745f      krb5_ticket_
0047ac0: 7469 6d65 7320 7469 6d65 733b 0a20 2020  times times;.   
0047ad0: 206b 7262 355f 7072 696e 6369 7061 6c20   krb5_principal 
0047ae0: 7365 7276 6572 3b0a 2020 2020 6b72 6235  server;.    krb5
0047af0: 5f61 6464 7265 7373 202a 2a63 6164 6472  _address **caddr
0047b00: 733b 0a20 2020 206b 7262 355f 7061 5f64  s;.    krb5_pa_d
0047b10: 6174 6120 2a2a 656e 635f 7061 6461 7461  ata **enc_padata
0047b20: 3b0a 7d20 6b72 6235 5f65 6e63 5f6b 6463  ;.} krb5_enc_kdc
0047b30: 5f72 6570 5f70 6172 743b 0a0a 0a74 7970  _rep_part;...typ
0047b40: 6564 6566 2073 7472 7563 7420 5f6b 7262  edef struct _krb
0047b50: 355f 6b64 635f 7265 7020 7b0a 2020 2020  5_kdc_rep {.    
0047b60: 6b72 6235 5f6d 6167 6963 206d 6167 6963  krb5_magic magic
0047b70: 3b0a 0a20 2020 206b 7262 355f 6d73 6774  ;..    krb5_msgt
0047b80: 7970 6520 6d73 675f 7479 7065 3b0a 2020  ype msg_type;.  
0047b90: 2020 6b72 6235 5f70 615f 6461 7461 202a    krb5_pa_data *
0047ba0: 2a70 6164 6174 613b 0a20 2020 206b 7262  *padata;.    krb
0047bb0: 355f 7072 696e 6369 7061 6c20 636c 6965  5_principal clie
0047bc0: 6e74 3b0a 2020 2020 6b72 6235 5f74 6963  nt;.    krb5_tic
0047bd0: 6b65 7420 2a74 6963 6b65 743b 0a20 2020  ket *ticket;.   
0047be0: 206b 7262 355f 656e 635f 6461 7461 2065   krb5_enc_data e
0047bf0: 6e63 5f70 6172 743b 0a20 2020 206b 7262  nc_part;.    krb
0047c00: 355f 656e 635f 6b64 635f 7265 705f 7061  5_enc_kdc_rep_pa
0047c10: 7274 202a 656e 635f 7061 7274 323b 0a7d  rt *enc_part2;.}
0047c20: 206b 7262 355f 6b64 635f 7265 703b 0a0a   krb5_kdc_rep;..
0047c30: 0a74 7970 6564 6566 2073 7472 7563 7420  .typedef struct 
0047c40: 5f6b 7262 355f 6572 726f 7220 7b0a 2020  _krb5_error {.  
0047c50: 2020 6b72 6235 5f6d 6167 6963 206d 6167    krb5_magic mag
0047c60: 6963 3b0a 0a20 2020 206b 7262 355f 7469  ic;..    krb5_ti
0047c70: 6d65 7374 616d 7020 6374 696d 653b 0a20  mestamp ctime;. 
0047c80: 2020 206b 7262 355f 696e 7433 3220 6375     krb5_int32 cu
0047c90: 7365 633b 0a20 2020 206b 7262 355f 696e  sec;.    krb5_in
0047ca0: 7433 3220 7375 7365 633b 0a20 2020 206b  t32 susec;.    k
0047cb0: 7262 355f 7469 6d65 7374 616d 7020 7374  rb5_timestamp st
0047cc0: 696d 653b 0a20 2020 206b 7262 355f 7569  ime;.    krb5_ui
0047cd0: 5f34 2065 7272 6f72 3b0a 2020 2020 6b72  _4 error;.    kr
0047ce0: 6235 5f70 7269 6e63 6970 616c 2063 6c69  b5_principal cli
0047cf0: 656e 743b 0a20 2020 206b 7262 355f 7072  ent;.    krb5_pr
0047d00: 696e 6369 7061 6c20 7365 7276 6572 3b0a  incipal server;.
0047d10: 2020 2020 6b72 6235 5f64 6174 6120 7465      krb5_data te
0047d20: 7874 3b0a 2020 2020 6b72 6235 5f64 6174  xt;.    krb5_dat
0047d30: 6120 655f 6461 7461 3b0a 7d20 6b72 6235  a e_data;.} krb5
0047d40: 5f65 7272 6f72 3b0a 0a0a 7479 7065 6465  _error;...typede
0047d50: 6620 7374 7275 6374 205f 6b72 6235 5f61  f struct _krb5_a
0047d60: 705f 7265 7120 7b0a 2020 2020 6b72 6235  p_req {.    krb5
0047d70: 5f6d 6167 6963 206d 6167 6963 3b0a 2020  _magic magic;.  
0047d80: 2020 6b72 6235 5f66 6c61 6773 2061 705f    krb5_flags ap_
0047d90: 6f70 7469 6f6e 733b 0a20 2020 206b 7262  options;.    krb
0047da0: 355f 7469 636b 6574 202a 7469 636b 6574  5_ticket *ticket
0047db0: 3b0a 2020 2020 6b72 6235 5f65 6e63 5f64  ;.    krb5_enc_d
0047dc0: 6174 6120 6175 7468 656e 7469 6361 746f  ata authenticato
0047dd0: 723b 0a7d 206b 7262 355f 6170 5f72 6571  r;.} krb5_ap_req
0047de0: 3b0a 0a0a 0a0a 0a0a 7479 7065 6465 6620  ;.......typedef 
0047df0: 7374 7275 6374 205f 6b72 6235 5f61 705f  struct _krb5_ap_
0047e00: 7265 7020 7b0a 2020 2020 6b72 6235 5f6d  rep {.    krb5_m
0047e10: 6167 6963 206d 6167 6963 3b0a 2020 2020  agic magic;.    
0047e20: 6b72 6235 5f65 6e63 5f64 6174 6120 656e  krb5_enc_data en
0047e30: 635f 7061 7274 3b0a 7d20 6b72 6235 5f61  c_part;.} krb5_a
0047e40: 705f 7265 703b 0a0a 0a74 7970 6564 6566  p_rep;...typedef
0047e50: 2073 7472 7563 7420 5f6b 7262 355f 6170   struct _krb5_ap
0047e60: 5f72 6570 5f65 6e63 5f70 6172 7420 7b0a  _rep_enc_part {.
0047e70: 2020 2020 6b72 6235 5f6d 6167 6963 206d      krb5_magic m
0047e80: 6167 6963 3b0a 2020 2020 6b72 6235 5f74  agic;.    krb5_t
0047e90: 696d 6573 7461 6d70 2063 7469 6d65 3b0a  imestamp ctime;.
0047ea0: 2020 2020 6b72 6235 5f69 6e74 3332 2063      krb5_int32 c
0047eb0: 7573 6563 3b0a 2020 2020 6b72 6235 5f6b  usec;.    krb5_k
0047ec0: 6579 626c 6f63 6b20 2a73 7562 6b65 793b  eyblock *subkey;
0047ed0: 0a20 2020 206b 7262 355f 7569 5f34 2073  .    krb5_ui_4 s
0047ee0: 6571 5f6e 756d 6265 723b 0a7d 206b 7262  eq_number;.} krb
0047ef0: 355f 6170 5f72 6570 5f65 6e63 5f70 6172  5_ap_rep_enc_par
0047f00: 743b 0a0a 0a74 7970 6564 6566 2073 7472  t;...typedef str
0047f10: 7563 7420 5f6b 7262 355f 7265 7370 6f6e  uct _krb5_respon
0047f20: 7365 207b 0a20 2020 206b 7262 355f 6d61  se {.    krb5_ma
0047f30: 6769 6320 6d61 6769 633b 0a20 2020 206b  gic magic;.    k
0047f40: 7262 355f 6f63 7465 7420 6d65 7373 6167  rb5_octet messag
0047f50: 655f 7479 7065 3b0a 2020 2020 6b72 6235  e_type;.    krb5
0047f60: 5f64 6174 6120 7265 7370 6f6e 7365 3b0a  _data response;.
0047f70: 2020 2020 6b72 6235 5f69 6e74 3332 2065      krb5_int32 e
0047f80: 7870 6563 7465 645f 6e6f 6e63 653b 0a20  xpected_nonce;. 
0047f90: 2020 206b 7262 355f 7469 6d65 7374 616d     krb5_timestam
0047fa0: 7020 7265 7175 6573 745f 7469 6d65 3b0a  p request_time;.
0047fb0: 7d20 6b72 6235 5f72 6573 706f 6e73 653b  } krb5_response;
0047fc0: 0a0a 0a74 7970 6564 6566 2073 7472 7563  ...typedef struc
0047fd0: 7420 5f6b 7262 355f 6372 6564 5f69 6e66  t _krb5_cred_inf
0047fe0: 6f20 7b0a 2020 2020 6b72 6235 5f6d 6167  o {.    krb5_mag
0047ff0: 6963 206d 6167 6963 3b0a 2020 2020 6b72  ic magic;.    kr
0048000: 6235 5f6b 6579 626c 6f63 6b20 2a73 6573  b5_keyblock *ses
0048010: 7369 6f6e 3b0a 2020 2020 6b72 6235 5f70  sion;.    krb5_p
0048020: 7269 6e63 6970 616c 2063 6c69 656e 743b  rincipal client;
0048030: 0a20 2020 206b 7262 355f 7072 696e 6369  .    krb5_princi
0048040: 7061 6c20 7365 7276 6572 3b0a 2020 2020  pal server;.    
0048050: 6b72 6235 5f66 6c61 6773 2066 6c61 6773  krb5_flags flags
0048060: 3b0a 2020 2020 6b72 6235 5f74 6963 6b65  ;.    krb5_ticke
0048070: 745f 7469 6d65 7320 7469 6d65 733b 0a20  t_times times;. 
0048080: 2020 206b 7262 355f 6164 6472 6573 7320     krb5_address 
0048090: 2a2a 6361 6464 7273 3b0a 7d20 6b72 6235  **caddrs;.} krb5
00480a0: 5f63 7265 645f 696e 666f 3b0a 0a0a 7479  _cred_info;...ty
00480b0: 7065 6465 6620 7374 7275 6374 205f 6b72  pedef struct _kr
00480c0: 6235 5f63 7265 645f 656e 635f 7061 7274  b5_cred_enc_part
00480d0: 207b 0a20 2020 206b 7262 355f 6d61 6769   {.    krb5_magi
00480e0: 6320 6d61 6769 633b 0a20 2020 206b 7262  c magic;.    krb
00480f0: 355f 696e 7433 3220 6e6f 6e63 653b 0a20  5_int32 nonce;. 
0048100: 2020 206b 7262 355f 7469 6d65 7374 616d     krb5_timestam
0048110: 7020 7469 6d65 7374 616d 703b 0a20 2020  p timestamp;.   
0048120: 206b 7262 355f 696e 7433 3220 7573 6563   krb5_int32 usec
0048130: 3b0a 2020 2020 6b72 6235 5f61 6464 7265  ;.    krb5_addre
0048140: 7373 202a 735f 6164 6472 6573 733b 0a20  ss *s_address;. 
0048150: 2020 206b 7262 355f 6164 6472 6573 7320     krb5_address 
0048160: 2a72 5f61 6464 7265 7373 3b0a 2020 2020  *r_address;.    
0048170: 6b72 6235 5f63 7265 645f 696e 666f 202a  krb5_cred_info *
0048180: 2a74 6963 6b65 745f 696e 666f 3b0a 7d20  *ticket_info;.} 
0048190: 6b72 6235 5f63 7265 645f 656e 635f 7061  krb5_cred_enc_pa
00481a0: 7274 3b0a 0a0a 7479 7065 6465 6620 7374  rt;...typedef st
00481b0: 7275 6374 205f 6b72 6235 5f63 7265 6420  ruct _krb5_cred 
00481c0: 7b0a 2020 2020 6b72 6235 5f6d 6167 6963  {.    krb5_magic
00481d0: 206d 6167 6963 3b0a 2020 2020 6b72 6235   magic;.    krb5
00481e0: 5f74 6963 6b65 7420 2a2a 7469 636b 6574  _ticket **ticket
00481f0: 733b 0a20 2020 206b 7262 355f 656e 635f  s;.    krb5_enc_
0048200: 6461 7461 2065 6e63 5f70 6172 743b 0a20  data enc_part;. 
0048210: 2020 206b 7262 355f 6372 6564 5f65 6e63     krb5_cred_enc
0048220: 5f70 6172 7420 2a65 6e63 5f70 6172 7432  _part *enc_part2
0048230: 3b0a 7d20 6b72 6235 5f63 7265 643b 0a0a  ;.} krb5_cred;..
0048240: 0a74 7970 6564 6566 2073 7472 7563 7420  .typedef struct 
0048250: 5f70 6173 7377 645f 7068 7261 7365 5f65  _passwd_phrase_e
0048260: 6c65 6d65 6e74 207b 0a20 2020 206b 7262  lement {.    krb
0048270: 355f 6d61 6769 6320 6d61 6769 633b 0a20  5_magic magic;. 
0048280: 2020 206b 7262 355f 6461 7461 202a 7061     krb5_data *pa
0048290: 7373 7764 3b0a 2020 2020 6b72 6235 5f64  sswd;.    krb5_d
00482a0: 6174 6120 2a70 6872 6173 653b 0a7d 2070  ata *phrase;.} p
00482b0: 6173 7377 645f 7068 7261 7365 5f65 6c65  asswd_phrase_ele
00482c0: 6d65 6e74 3b0a 0a0a 7479 7065 6465 6620  ment;...typedef 
00482d0: 7374 7275 6374 205f 6b72 6235 5f70 7764  struct _krb5_pwd
00482e0: 5f64 6174 6120 7b0a 2020 2020 6b72 6235  _data {.    krb5
00482f0: 5f6d 6167 6963 206d 6167 6963 3b0a 2020  _magic magic;.  
0048300: 2020 696e 7420 7365 7175 656e 6365 5f63    int sequence_c
0048310: 6f75 6e74 3b0a 2020 2020 7061 7373 7764  ount;.    passwd
0048320: 5f70 6872 6173 655f 656c 656d 656e 7420  _phrase_element 
0048330: 2a2a 656c 656d 656e 743b 0a7d 206b 7262  **element;.} krb
0048340: 355f 7077 645f 6461 7461 3b0a 0a0a 7479  5_pwd_data;...ty
0048350: 7065 6465 6620 7374 7275 6374 205f 6b72  pedef struct _kr
0048360: 6235 5f70 615f 7376 725f 7265 6665 7272  b5_pa_svr_referr
0048370: 616c 5f64 6174 6120 7b0a 0a20 2020 206b  al_data {..    k
0048380: 7262 355f 7072 696e 6369 7061 6c20 7072  rb5_principal pr
0048390: 696e 6369 7061 6c3b 0a7d 206b 7262 355f  incipal;.} krb5_
00483a0: 7061 5f73 7672 5f72 6566 6572 7261 6c5f  pa_svr_referral_
00483b0: 6461 7461 3b0a 0a0a 7479 7065 6465 6620  data;...typedef 
00483c0: 7374 7275 6374 205f 6b72 6235 5f70 615f  struct _krb5_pa_
00483d0: 7365 7276 6572 5f72 6566 6572 7261 6c5f  server_referral_
00483e0: 6461 7461 207b 0a20 2020 206b 7262 355f  data {.    krb5_
00483f0: 6461 7461 202a 7265 6665 7272 6564 5f72  data *referred_r
0048400: 6561 6c6d 3b0a 2020 2020 6b72 6235 5f70  ealm;.    krb5_p
0048410: 7269 6e63 6970 616c 2074 7275 655f 7072  rincipal true_pr
0048420: 696e 6369 7061 6c5f 6e61 6d65 3b0a 2020  incipal_name;.  
0048430: 2020 6b72 6235 5f70 7269 6e63 6970 616c    krb5_principal
0048440: 2072 6571 7565 7374 6564 5f70 7269 6e63   requested_princ
0048450: 6970 616c 5f6e 616d 653b 0a20 2020 206b  ipal_name;.    k
0048460: 7262 355f 7469 6d65 7374 616d 7020 7265  rb5_timestamp re
0048470: 6665 7272 616c 5f76 616c 6964 5f75 6e74  ferral_valid_unt
0048480: 696c 3b0a 2020 2020 6b72 6235 5f63 6865  il;.    krb5_che
0048490: 636b 7375 6d20 7265 705f 636b 7375 6d3b  cksum rep_cksum;
00484a0: 0a7d 206b 7262 355f 7061 5f73 6572 7665  .} krb5_pa_serve
00484b0: 725f 7265 6665 7272 616c 5f64 6174 613b  r_referral_data;
00484c0: 0a0a 7479 7065 6465 6620 7374 7275 6374  ..typedef struct
00484d0: 205f 6b72 6235 5f70 615f 7061 635f 7265   _krb5_pa_pac_re
00484e0: 7120 7b0a 0a20 2020 206b 7262 355f 626f  q {..    krb5_bo
00484f0: 6f6c 6561 6e20 696e 636c 7564 655f 7061  olean include_pa
0048500: 633b 0a7d 206b 7262 355f 7061 5f70 6163  c;.} krb5_pa_pac
0048510: 5f72 6571 3b0a 2320 3231 3933 2022 2f75  _req;.# 2193 "/u
0048520: 7372 2f69 6e63 6c75 6465 2f6b 7262 352f  sr/include/krb5/
0048530: 6b72 6235 2e68 2220 3320 340a 7479 7065  krb5.h" 3 4.type
0048540: 6465 6620 7374 7275 6374 206b 7262 355f  def struct krb5_
0048550: 7265 706c 6179 5f64 6174 6120 7b0a 2020  replay_data {.  
0048560: 2020 6b72 6235 5f74 696d 6573 7461 6d70    krb5_timestamp
0048570: 2074 696d 6573 7461 6d70 3b0a 2020 2020   timestamp;.    
0048580: 6b72 6235 5f69 6e74 3332 2075 7365 633b  krb5_int32 usec;
0048590: 0a20 2020 206b 7262 355f 7569 5f34 2073  .    krb5_ui_4 s
00485a0: 6571 3b0a 7d20 6b72 6235 5f72 6570 6c61  eq;.} krb5_repla
00485b0: 795f 6461 7461 3b0a 2320 3232 3131 2022  y_data;.# 2211 "
00485c0: 2f75 7372 2f69 6e63 6c75 6465 2f6b 7262  /usr/include/krb
00485d0: 352f 6b72 6235 2e68 2220 3320 340a 7479  5/krb5.h" 3 4.ty
00485e0: 7065 6465 6620 6b72 6235 5f65 7272 6f72  pedef krb5_error
00485f0: 5f63 6f64 650a 2820 2a20 6b72 6235 5f6d  _code.( * krb5_m
0048600: 6b5f 7265 715f 6368 6563 6b73 756d 5f66  k_req_checksum_f
0048610: 756e 6329 286b 7262 355f 636f 6e74 6578  unc)(krb5_contex
0048620: 742c 206b 7262 355f 6175 7468 5f63 6f6e  t, krb5_auth_con
0048630: 7465 7874 2c0a 2020 2020 2020 2020 2020  text,.          
0048640: 2020 2020 2020 2020 2020 2020 2020 2020                  
0048650: 2020 2020 2020 2020 2020 2020 2020 2020                  
0048660: 2020 766f 6964 202a 2c20 6b72 6235 5f64    void *, krb5_d
0048670: 6174 6120 2a2a 293b 0a23 2032 3232 3520  ata **);.# 2225 
0048680: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
0048690: 6235 2f6b 7262 352e 6822 2033 2034 0a74  b5/krb5.h" 3 4.t
00486a0: 7970 6564 6566 206b 7262 355f 706f 696e  ypedef krb5_poin
00486b0: 7465 7220 6b72 6235 5f63 635f 6375 7273  ter krb5_cc_curs
00486c0: 6f72 3b0a 0a73 7472 7563 7420 5f6b 7262  or;..struct _krb
00486d0: 355f 6363 6163 6865 3b0a 7479 7065 6465  5_ccache;.typede
00486e0: 6620 7374 7275 6374 205f 6b72 6235 5f63  f struct _krb5_c
00486f0: 6361 6368 6520 2a6b 7262 355f 6363 6163  cache *krb5_ccac
0048700: 6865 3b0a 7374 7275 6374 205f 6b72 6235  he;.struct _krb5
0048710: 5f63 635f 6f70 733b 0a74 7970 6564 6566  _cc_ops;.typedef
0048720: 2073 7472 7563 7420 5f6b 7262 355f 6363   struct _krb5_cc
0048730: 5f6f 7073 206b 7262 355f 6363 5f6f 7073  _ops krb5_cc_ops
0048740: 3b0a 0a73 7472 7563 7420 5f6b 7262 355f  ;..struct _krb5_
0048750: 6363 636f 6c5f 6375 7273 6f72 3b0a 0a74  cccol_cursor;..t
0048760: 7970 6564 6566 2073 7472 7563 7420 5f6b  ypedef struct _k
0048770: 7262 355f 6363 636f 6c5f 6375 7273 6f72  rb5_cccol_cursor
0048780: 202a 6b72 6235 5f63 6363 6f6c 5f63 7572   *krb5_cccol_cur
0048790: 736f 723b 0a23 2032 3237 3720 222f 7573  sor;.# 2277 "/us
00487a0: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
00487b0: 7262 352e 6822 2033 2034 0a63 6f6e 7374  rb5.h" 3 4.const
00487c0: 2063 6861 7220 2a0a 6b72 6235 5f63 635f   char *.krb5_cc_
00487d0: 6765 745f 6e61 6d65 286b 7262 355f 636f  get_name(krb5_co
00487e0: 6e74 6578 7420 636f 6e74 6578 742c 206b  ntext context, k
00487f0: 7262 355f 6363 6163 6865 2063 6163 6865  rb5_ccache cache
0048800: 293b 0a23 2032 3239 3120 222f 7573 722f  );.# 2291 "/usr/
0048810: 696e 636c 7564 652f 6b72 6235 2f6b 7262  include/krb5/krb
0048820: 352e 6822 2033 2034 0a6b 7262 355f 6572  5.h" 3 4.krb5_er
0048830: 726f 725f 636f 6465 0a6b 7262 355f 6363  ror_code.krb5_cc
0048840: 5f67 6574 5f66 756c 6c5f 6e61 6d65 286b  _get_full_name(k
0048850: 7262 355f 636f 6e74 6578 7420 636f 6e74  rb5_context cont
0048860: 6578 742c 206b 7262 355f 6363 6163 6865  ext, krb5_ccache
0048870: 2063 6163 6865 2c0a 2020 2020 2020 2020   cache,.        
0048880: 2020 2020 2020 2020 2020 2020 2020 6368                ch
0048890: 6172 202a 2a66 756c 6c6e 616d 655f 6f75  ar **fullname_ou
00488a0: 7429 3b0a 2320 3233 3135 2022 2f75 7372  t);.# 2315 "/usr
00488b0: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
00488c0: 6235 2e68 2220 3320 340a 6b72 6235 5f65  b5.h" 3 4.krb5_e
00488d0: 7272 6f72 5f63 6f64 650a 6b72 6235 5f63  rror_code.krb5_c
00488e0: 635f 696e 6974 6961 6c69 7a65 286b 7262  c_initialize(krb
00488f0: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
0048900: 742c 206b 7262 355f 6363 6163 6865 2063  t, krb5_ccache c
0048910: 6163 6865 2c0a 2020 2020 2020 2020 2020  ache,.          
0048920: 2020 2020 2020 2020 206b 7262 355f 7072           krb5_pr
0048930: 696e 6369 7061 6c20 7072 696e 6369 7061  incipal principa
0048940: 6c29 3b0a 2320 3233 3333 2022 2f75 7372  l);.# 2333 "/usr
0048950: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
0048960: 6235 2e68 2220 3320 340a 6b72 6235 5f65  b5.h" 3 4.krb5_e
0048970: 7272 6f72 5f63 6f64 650a 6b72 6235 5f63  rror_code.krb5_c
0048980: 635f 6465 7374 726f 7928 6b72 6235 5f63  c_destroy(krb5_c
0048990: 6f6e 7465 7874 2063 6f6e 7465 7874 2c20  ontext context, 
00489a0: 6b72 6235 5f63 6361 6368 6520 6361 6368  krb5_ccache cach
00489b0: 6529 3b0a 2320 3233 3530 2022 2f75 7372  e);.# 2350 "/usr
00489c0: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
00489d0: 6235 2e68 2220 3320 340a 6b72 6235 5f65  b5.h" 3 4.krb5_e
00489e0: 7272 6f72 5f63 6f64 650a 6b72 6235 5f63  rror_code.krb5_c
00489f0: 635f 636c 6f73 6528 6b72 6235 5f63 6f6e  c_close(krb5_con
0048a00: 7465 7874 2063 6f6e 7465 7874 2c20 6b72  text context, kr
0048a10: 6235 5f63 6361 6368 6520 6361 6368 6529  b5_ccache cache)
0048a20: 3b0a 2320 3233 3638 2022 2f75 7372 2f69  ;.# 2368 "/usr/i
0048a30: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
0048a40: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
0048a50: 6f72 5f63 6f64 650a 6b72 6235 5f63 635f  or_code.krb5_cc_
0048a60: 7374 6f72 655f 6372 6564 286b 7262 355f  store_cred(krb5_
0048a70: 636f 6e74 6578 7420 636f 6e74 6578 742c  context context,
0048a80: 206b 7262 355f 6363 6163 6865 2063 6163   krb5_ccache cac
0048a90: 6865 2c20 6b72 6235 5f63 7265 6473 202a  he, krb5_creds *
0048aa0: 6372 6564 7329 3b0a 2320 3234 3034 2022  creds);.# 2404 "
0048ab0: 2f75 7372 2f69 6e63 6c75 6465 2f6b 7262  /usr/include/krb
0048ac0: 352f 6b72 6235 2e68 2220 3320 340a 6b72  5/krb5.h" 3 4.kr
0048ad0: 6235 5f65 7272 6f72 5f63 6f64 650a 6b72  b5_error_code.kr
0048ae0: 6235 5f63 635f 7265 7472 6965 7665 5f63  b5_cc_retrieve_c
0048af0: 7265 6428 6b72 6235 5f63 6f6e 7465 7874  red(krb5_context
0048b00: 2063 6f6e 7465 7874 2c20 6b72 6235 5f63   context, krb5_c
0048b10: 6361 6368 6520 6361 6368 652c 0a20 2020  cache cache,.   
0048b20: 2020 2020 2020 2020 2020 2020 2020 2020                  
0048b30: 2020 206b 7262 355f 666c 6167 7320 666c     krb5_flags fl
0048b40: 6167 732c 206b 7262 355f 6372 6564 7320  ags, krb5_creds 
0048b50: 2a6d 6372 6564 732c 0a20 2020 2020 2020  *mcreds,.       
0048b60: 2020 2020 2020 2020 2020 2020 2020 206b                 k
0048b70: 7262 355f 6372 6564 7320 2a63 7265 6473  rb5_creds *creds
0048b80: 293b 0a23 2032 3432 3620 222f 7573 722f  );.# 2426 "/usr/
0048b90: 696e 636c 7564 652f 6b72 6235 2f6b 7262  include/krb5/krb
0048ba0: 352e 6822 2033 2034 0a6b 7262 355f 6572  5.h" 3 4.krb5_er
0048bb0: 726f 725f 636f 6465 0a6b 7262 355f 6363  ror_code.krb5_cc
0048bc0: 5f67 6574 5f70 7269 6e63 6970 616c 286b  _get_principal(k
0048bd0: 7262 355f 636f 6e74 6578 7420 636f 6e74  rb5_context cont
0048be0: 6578 742c 206b 7262 355f 6363 6163 6865  ext, krb5_ccache
0048bf0: 2063 6163 6865 2c0a 2020 2020 2020 2020   cache,.        
0048c00: 2020 2020 2020 2020 2020 2020 2020 6b72                kr
0048c10: 6235 5f70 7269 6e63 6970 616c 202a 7072  b5_principal *pr
0048c20: 696e 6369 7061 6c29 3b0a 2320 3234 3434  incipal);.# 2444
0048c30: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
0048c40: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
0048c50: 6b72 6235 5f65 7272 6f72 5f63 6f64 650a  krb5_error_code.
0048c60: 6b72 6235 5f63 635f 7374 6172 745f 7365  krb5_cc_start_se
0048c70: 715f 6765 7428 6b72 6235 5f63 6f6e 7465  q_get(krb5_conte
0048c80: 7874 2063 6f6e 7465 7874 2c20 6b72 6235  xt context, krb5
0048c90: 5f63 6361 6368 6520 6361 6368 652c 0a20  _ccache cache,. 
0048ca0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0048cb0: 2020 2020 206b 7262 355f 6363 5f63 7572       krb5_cc_cur
0048cc0: 736f 7220 2a63 7572 736f 7229 3b0a 2320  sor *cursor);.# 
0048cd0: 3234 3635 2022 2f75 7372 2f69 6e63 6c75  2465 "/usr/inclu
0048ce0: 6465 2f6b 7262 352f 6b72 6235 2e68 2220  de/krb5/krb5.h" 
0048cf0: 3320 340a 6b72 6235 5f65 7272 6f72 5f63  3 4.krb5_error_c
0048d00: 6f64 650a 6b72 6235 5f63 635f 6e65 7874  ode.krb5_cc_next
0048d10: 5f63 7265 6428 6b72 6235 5f63 6f6e 7465  _cred(krb5_conte
0048d20: 7874 2063 6f6e 7465 7874 2c20 6b72 6235  xt context, krb5
0048d30: 5f63 6361 6368 6520 6361 6368 652c 0a20  _ccache cache,. 
0048d40: 2020 2020 2020 2020 2020 2020 2020 2020                  
0048d50: 206b 7262 355f 6363 5f63 7572 736f 7220   krb5_cc_cursor 
0048d60: 2a63 7572 736f 722c 206b 7262 355f 6372  *cursor, krb5_cr
0048d70: 6564 7320 2a63 7265 6473 293b 0a23 2032  eds *creds);.# 2
0048d80: 3438 3320 222f 7573 722f 696e 636c 7564  483 "/usr/includ
0048d90: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
0048da0: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
0048db0: 6465 0a6b 7262 355f 6363 5f65 6e64 5f73  de.krb5_cc_end_s
0048dc0: 6571 5f67 6574 286b 7262 355f 636f 6e74  eq_get(krb5_cont
0048dd0: 6578 7420 636f 6e74 6578 742c 206b 7262  ext context, krb
0048de0: 355f 6363 6163 6865 2063 6163 6865 2c0a  5_ccache cache,.
0048df0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0048e00: 2020 2020 6b72 6235 5f63 635f 6375 7273      krb5_cc_curs
0048e10: 6f72 202a 6375 7273 6f72 293b 0a23 2032  or *cursor);.# 2
0048e20: 3530 3220 222f 7573 722f 696e 636c 7564  502 "/usr/includ
0048e30: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
0048e40: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
0048e50: 6465 0a6b 7262 355f 6363 5f72 656d 6f76  de.krb5_cc_remov
0048e60: 655f 6372 6564 286b 7262 355f 636f 6e74  e_cred(krb5_cont
0048e70: 6578 7420 636f 6e74 6578 742c 206b 7262  ext context, krb
0048e80: 355f 6363 6163 6865 2063 6163 6865 2c20  5_ccache cache, 
0048e90: 6b72 6235 5f66 6c61 6773 2066 6c61 6773  krb5_flags flags
0048ea0: 2c0a 2020 2020 2020 2020 2020 2020 2020  ,.              
0048eb0: 2020 2020 2020 6b72 6235 5f63 7265 6473        krb5_creds
0048ec0: 202a 6372 6564 7329 3b0a 2320 3235 3137   *creds);.# 2517
0048ed0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
0048ee0: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
0048ef0: 6b72 6235 5f65 7272 6f72 5f63 6f64 650a  krb5_error_code.
0048f00: 6b72 6235 5f63 635f 7365 745f 666c 6167  krb5_cc_set_flag
0048f10: 7328 6b72 6235 5f63 6f6e 7465 7874 2063  s(krb5_context c
0048f20: 6f6e 7465 7874 2c20 6b72 6235 5f63 6361  ontext, krb5_cca
0048f30: 6368 6520 6361 6368 652c 206b 7262 355f  che cache, krb5_
0048f40: 666c 6167 7320 666c 6167 7329 3b0a 2320  flags flags);.# 
0048f50: 3235 3331 2022 2f75 7372 2f69 6e63 6c75  2531 "/usr/inclu
0048f60: 6465 2f6b 7262 352f 6b72 6235 2e68 2220  de/krb5/krb5.h" 
0048f70: 3320 340a 6b72 6235 5f65 7272 6f72 5f63  3 4.krb5_error_c
0048f80: 6f64 650a 6b72 6235 5f63 635f 6765 745f  ode.krb5_cc_get_
0048f90: 666c 6167 7328 6b72 6235 5f63 6f6e 7465  flags(krb5_conte
0048fa0: 7874 2063 6f6e 7465 7874 2c20 6b72 6235  xt context, krb5
0048fb0: 5f63 6361 6368 6520 6361 6368 652c 206b  _ccache cache, k
0048fc0: 7262 355f 666c 6167 7320 2a66 6c61 6773  rb5_flags *flags
0048fd0: 293b 0a23 2032 3534 3320 222f 7573 722f  );.# 2543 "/usr/
0048fe0: 696e 636c 7564 652f 6b72 6235 2f6b 7262  include/krb5/krb
0048ff0: 352e 6822 2033 2034 0a63 6f6e 7374 2063  5.h" 3 4.const c
0049000: 6861 7220 2a0a 6b72 6235 5f63 635f 6765  har *.krb5_cc_ge
0049010: 745f 7479 7065 286b 7262 355f 636f 6e74  t_type(krb5_cont
0049020: 6578 7420 636f 6e74 6578 742c 206b 7262  ext context, krb
0049030: 355f 6363 6163 6865 2063 6163 6865 293b  5_ccache cache);
0049040: 0a23 2032 3536 3120 222f 7573 722f 696e  .# 2561 "/usr/in
0049050: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
0049060: 6822 2033 2034 0a6b 7262 355f 6572 726f  h" 3 4.krb5_erro
0049070: 725f 636f 6465 0a6b 7262 355f 6363 5f6d  r_code.krb5_cc_m
0049080: 6f76 6528 6b72 6235 5f63 6f6e 7465 7874  ove(krb5_context
0049090: 2063 6f6e 7465 7874 2c20 6b72 6235 5f63   context, krb5_c
00490a0: 6361 6368 6520 7372 632c 206b 7262 355f  cache src, krb5_
00490b0: 6363 6163 6865 2064 7374 293b 0a23 2032  ccache dst);.# 2
00490c0: 3537 3320 222f 7573 722f 696e 636c 7564  573 "/usr/includ
00490d0: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
00490e0: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
00490f0: 6465 0a6b 7262 355f 6363 5f6c 6173 745f  de.krb5_cc_last_
0049100: 6368 616e 6765 5f74 696d 6528 6b72 6235  change_time(krb5
0049110: 5f63 6f6e 7465 7874 2063 6f6e 7465 7874  _context context
0049120: 2c20 6b72 6235 5f63 6361 6368 6520 6363  , krb5_ccache cc
0049130: 6163 6865 2c0a 2020 2020 2020 2020 2020  ache,.          
0049140: 2020 2020 2020 2020 2020 2020 2020 206b                 k
0049150: 7262 355f 7469 6d65 7374 616d 7020 2a63  rb5_timestamp *c
0049160: 6861 6e67 655f 7469 6d65 293b 0a23 2032  hange_time);.# 2
0049170: 3538 3720 222f 7573 722f 696e 636c 7564  587 "/usr/includ
0049180: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
0049190: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
00491a0: 6465 0a6b 7262 355f 6363 5f6c 6f63 6b28  de.krb5_cc_lock(
00491b0: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
00491c0: 7465 7874 2c20 6b72 6235 5f63 6361 6368  text, krb5_ccach
00491d0: 6520 6363 6163 6865 293b 0a23 2032 3630  e ccache);.# 260
00491e0: 3020 222f 7573 722f 696e 636c 7564 652f  0 "/usr/include/
00491f0: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
0049200: 0a6b 7262 355f 6572 726f 725f 636f 6465  .krb5_error_code
0049210: 0a6b 7262 355f 6363 5f75 6e6c 6f63 6b28  .krb5_cc_unlock(
0049220: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
0049230: 7465 7874 2c20 6b72 6235 5f63 6361 6368  text, krb5_ccach
0049240: 6520 6363 6163 6865 293b 0a23 2032 3631  e ccache);.# 261
0049250: 3920 222f 7573 722f 696e 636c 7564 652f  9 "/usr/include/
0049260: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
0049270: 0a6b 7262 355f 6572 726f 725f 636f 6465  .krb5_error_code
0049280: 0a6b 7262 355f 6363 636f 6c5f 6375 7273  .krb5_cccol_curs
0049290: 6f72 5f6e 6577 286b 7262 355f 636f 6e74  or_new(krb5_cont
00492a0: 6578 7420 636f 6e74 6578 742c 206b 7262  ext context, krb
00492b0: 355f 6363 636f 6c5f 6375 7273 6f72 202a  5_cccol_cursor *
00492c0: 6375 7273 6f72 293b 0a23 2032 3633 3820  cursor);.# 2638 
00492d0: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
00492e0: 6235 2f6b 7262 352e 6822 2033 2034 0a6b  b5/krb5.h" 3 4.k
00492f0: 7262 355f 6572 726f 725f 636f 6465 0a6b  rb5_error_code.k
0049300: 7262 355f 6363 636f 6c5f 6375 7273 6f72  rb5_cccol_cursor
0049310: 5f6e 6578 7428 6b72 6235 5f63 6f6e 7465  _next(krb5_conte
0049320: 7874 2063 6f6e 7465 7874 2c20 6b72 6235  xt context, krb5
0049330: 5f63 6363 6f6c 5f63 7572 736f 7220 6375  _cccol_cursor cu
0049340: 7273 6f72 2c0a 2020 2020 2020 2020 2020  rsor,.          
0049350: 2020 2020 2020 2020 2020 2020 206b 7262               krb
0049360: 355f 6363 6163 6865 202a 6363 6163 6865  5_ccache *ccache
0049370: 293b 0a23 2032 3635 3220 222f 7573 722f  );.# 2652 "/usr/
0049380: 696e 636c 7564 652f 6b72 6235 2f6b 7262  include/krb5/krb
0049390: 352e 6822 2033 2034 0a6b 7262 355f 6572  5.h" 3 4.krb5_er
00493a0: 726f 725f 636f 6465 0a6b 7262 355f 6363  ror_code.krb5_cc
00493b0: 636f 6c5f 6375 7273 6f72 5f66 7265 6528  col_cursor_free(
00493c0: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
00493d0: 7465 7874 2c20 6b72 6235 5f63 6363 6f6c  text, krb5_cccol
00493e0: 5f63 7572 736f 7220 2a63 7572 736f 7229  _cursor *cursor)
00493f0: 3b0a 2320 3236 3635 2022 2f75 7372 2f69  ;.# 2665 "/usr/i
0049400: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
0049410: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
0049420: 6f72 5f63 6f64 650a 6b72 6235 5f63 6363  or_code.krb5_ccc
0049430: 6f6c 5f68 6176 655f 636f 6e74 656e 7428  ol_have_content(
0049440: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
0049450: 7465 7874 293b 0a23 2032 3638 3220 222f  text);.# 2682 "/
0049460: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
0049470: 2f6b 7262 352e 6822 2033 2034 0a6b 7262  /krb5.h" 3 4.krb
0049480: 355f 6572 726f 725f 636f 6465 0a6b 7262  5_error_code.krb
0049490: 355f 6363 636f 6c5f 6c61 7374 5f63 6861  5_cccol_last_cha
00494a0: 6e67 655f 7469 6d65 286b 7262 355f 636f  nge_time(krb5_co
00494b0: 6e74 6578 7420 636f 6e74 6578 742c 206b  ntext context, k
00494c0: 7262 355f 7469 6d65 7374 616d 7020 2a63  rb5_timestamp *c
00494d0: 6861 6e67 655f 7469 6d65 293b 0a23 2032  hange_time);.# 2
00494e0: 3639 3920 222f 7573 722f 696e 636c 7564  699 "/usr/includ
00494f0: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
0049500: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
0049510: 6465 0a6b 7262 355f 6363 636f 6c5f 6c6f  de.krb5_cccol_lo
0049520: 636b 286b 7262 355f 636f 6e74 6578 7420  ck(krb5_context 
0049530: 636f 6e74 6578 7429 3b0a 2320 3237 3131  context);.# 2711
0049540: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
0049550: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
0049560: 6b72 6235 5f65 7272 6f72 5f63 6f64 650a  krb5_error_code.
0049570: 6b72 6235 5f63 6363 6f6c 5f75 6e6c 6f63  krb5_cccol_unloc
0049580: 6b28 6b72 6235 5f63 6f6e 7465 7874 2063  k(krb5_context c
0049590: 6f6e 7465 7874 293b 0a23 2032 3732 3720  ontext);.# 2727 
00495a0: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
00495b0: 6235 2f6b 7262 352e 6822 2033 2034 0a6b  b5/krb5.h" 3 4.k
00495c0: 7262 355f 6572 726f 725f 636f 6465 0a6b  rb5_error_code.k
00495d0: 7262 355f 6363 5f6e 6577 5f75 6e69 7175  rb5_cc_new_uniqu
00495e0: 6528 6b72 6235 5f63 6f6e 7465 7874 2063  e(krb5_context c
00495f0: 6f6e 7465 7874 2c20 636f 6e73 7420 6368  ontext, const ch
0049600: 6172 202a 7479 7065 2c20 636f 6e73 7420  ar *type, const 
0049610: 6368 6172 202a 6869 6e74 2c0a 2020 2020  char *hint,.    
0049620: 2020 2020 2020 2020 2020 2020 2020 206b                 k
0049630: 7262 355f 6363 6163 6865 202a 6964 293b  rb5_ccache *id);
0049640: 0a23 2032 3733 3920 222f 7573 722f 696e  .# 2739 "/usr/in
0049650: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
0049660: 6822 2033 2034 0a73 7472 7563 7420 6b72  h" 3 4.struct kr
0049670: 6235 5f72 635f 7374 3b0a 7479 7065 6465  b5_rc_st;.typede
0049680: 6620 7374 7275 6374 206b 7262 355f 7263  f struct krb5_rc
0049690: 5f73 7420 2a6b 7262 355f 7263 6163 6865  _st *krb5_rcache
00496a0: 3b0a 2320 3237 3534 2022 2f75 7372 2f69  ;.# 2754 "/usr/i
00496b0: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
00496c0: 2e68 2220 3320 340a 7479 7065 6465 6620  .h" 3 4.typedef 
00496d0: 6b72 6235 5f70 6f69 6e74 6572 206b 7262  krb5_pointer krb
00496e0: 355f 6b74 5f63 7572 736f 723b 0a0a 0a74  5_kt_cursor;...t
00496f0: 7970 6564 6566 2073 7472 7563 7420 6b72  ypedef struct kr
0049700: 6235 5f6b 6579 7461 625f 656e 7472 795f  b5_keytab_entry_
0049710: 7374 207b 0a20 2020 206b 7262 355f 6d61  st {.    krb5_ma
0049720: 6769 6320 6d61 6769 633b 0a20 2020 206b  gic magic;.    k
0049730: 7262 355f 7072 696e 6369 7061 6c20 7072  rb5_principal pr
0049740: 696e 6369 7061 6c3b 0a20 2020 206b 7262  incipal;.    krb
0049750: 355f 7469 6d65 7374 616d 7020 7469 6d65  5_timestamp time
0049760: 7374 616d 703b 0a20 2020 206b 7262 355f  stamp;.    krb5_
0049770: 6b76 6e6f 2076 6e6f 3b0a 2020 2020 6b72  kvno vno;.    kr
0049780: 6235 5f6b 6579 626c 6f63 6b20 6b65 793b  b5_keyblock key;
0049790: 0a7d 206b 7262 355f 6b65 7974 6162 5f65  .} krb5_keytab_e
00497a0: 6e74 7279 3b0a 0a73 7472 7563 7420 5f6b  ntry;..struct _k
00497b0: 7262 355f 6b74 3b0a 7479 7065 6465 6620  rb5_kt;.typedef 
00497c0: 7374 7275 6374 205f 6b72 6235 5f6b 7420  struct _krb5_kt 
00497d0: 2a6b 7262 355f 6b65 7974 6162 3b0a 2320  *krb5_keytab;.# 
00497e0: 3237 3737 2022 2f75 7372 2f69 6e63 6c75  2777 "/usr/inclu
00497f0: 6465 2f6b 7262 352f 6b72 6235 2e68 2220  de/krb5/krb5.h" 
0049800: 3320 340a 636f 6e73 7420 6368 6172 202a  3 4.const char *
0049810: 0a6b 7262 355f 6b74 5f67 6574 5f74 7970  .krb5_kt_get_typ
0049820: 6528 6b72 6235 5f63 6f6e 7465 7874 2063  e(krb5_context c
0049830: 6f6e 7465 7874 2c20 6b72 6235 5f6b 6579  ontext, krb5_key
0049840: 7461 6220 6b65 7974 6162 293b 0a23 2032  tab keytab);.# 2
0049850: 3830 3020 222f 7573 722f 696e 636c 7564  800 "/usr/includ
0049860: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
0049870: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
0049880: 6465 0a6b 7262 355f 6b74 5f67 6574 5f6e  de.krb5_kt_get_n
0049890: 616d 6528 6b72 6235 5f63 6f6e 7465 7874  ame(krb5_context
00498a0: 2063 6f6e 7465 7874 2c20 6b72 6235 5f6b   context, krb5_k
00498b0: 6579 7461 6220 6b65 7974 6162 2c20 6368  eytab keytab, ch
00498c0: 6172 202a 6e61 6d65 2c0a 2020 2020 2020  ar *name,.      
00498d0: 2020 2020 2020 2020 2020 2075 6e73 6967             unsig
00498e0: 6e65 6420 696e 7420 6e61 6d65 6c65 6e29  ned int namelen)
00498f0: 3b0a 2320 3238 3132 2022 2f75 7372 2f69  ;.# 2812 "/usr/i
0049900: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
0049910: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
0049920: 6f72 5f63 6f64 650a 6b72 6235 5f6b 745f  or_code.krb5_kt_
0049930: 636c 6f73 6528 6b72 6235 5f63 6f6e 7465  close(krb5_conte
0049940: 7874 2063 6f6e 7465 7874 2c20 6b72 6235  xt context, krb5
0049950: 5f6b 6579 7461 6220 6b65 7974 6162 293b  _keytab keytab);
0049960: 0a23 2032 3834 3120 222f 7573 722f 696e  .# 2841 "/usr/in
0049970: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
0049980: 6822 2033 2034 0a6b 7262 355f 6572 726f  h" 3 4.krb5_erro
0049990: 725f 636f 6465 0a6b 7262 355f 6b74 5f67  r_code.krb5_kt_g
00499a0: 6574 5f65 6e74 7279 286b 7262 355f 636f  et_entry(krb5_co
00499b0: 6e74 6578 7420 636f 6e74 6578 742c 206b  ntext context, k
00499c0: 7262 355f 6b65 7974 6162 206b 6579 7461  rb5_keytab keyta
00499d0: 622c 0a20 2020 2020 2020 2020 2020 2020  b,.             
00499e0: 2020 2020 206b 7262 355f 636f 6e73 745f       krb5_const_
00499f0: 7072 696e 6369 7061 6c20 7072 696e 6369  principal princi
0049a00: 7061 6c2c 206b 7262 355f 6b76 6e6f 2076  pal, krb5_kvno v
0049a10: 6e6f 2c0a 2020 2020 2020 2020 2020 2020  no,.            
0049a20: 2020 2020 2020 6b72 6235 5f65 6e63 7479        krb5_encty
0049a30: 7065 2065 6e63 7479 7065 2c20 6b72 6235  pe enctype, krb5
0049a40: 5f6b 6579 7461 625f 656e 7472 7920 2a65  _keytab_entry *e
0049a50: 6e74 7279 293b 0a23 2032 3836 3320 222f  ntry);.# 2863 "/
0049a60: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
0049a70: 2f6b 7262 352e 6822 2033 2034 0a6b 7262  /krb5.h" 3 4.krb
0049a80: 355f 6572 726f 725f 636f 6465 0a6b 7262  5_error_code.krb
0049a90: 355f 6b74 5f73 7461 7274 5f73 6571 5f67  5_kt_start_seq_g
0049aa0: 6574 286b 7262 355f 636f 6e74 6578 7420  et(krb5_context 
0049ab0: 636f 6e74 6578 742c 206b 7262 355f 6b65  context, krb5_ke
0049ac0: 7974 6162 206b 6579 7461 622c 0a20 2020  ytab keytab,.   
0049ad0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0049ae0: 2020 206b 7262 355f 6b74 5f63 7572 736f     krb5_kt_curso
0049af0: 7220 2a63 7572 736f 7229 3b0a 2320 3238  r *cursor);.# 28
0049b00: 3836 2022 2f75 7372 2f69 6e63 6c75 6465  86 "/usr/include
0049b10: 2f6b 7262 352f 6b72 6235 2e68 2220 3320  /krb5/krb5.h" 3 
0049b20: 340a 6b72 6235 5f65 7272 6f72 5f63 6f64  4.krb5_error_cod
0049b30: 650a 6b72 6235 5f6b 745f 6e65 7874 5f65  e.krb5_kt_next_e
0049b40: 6e74 7279 286b 7262 355f 636f 6e74 6578  ntry(krb5_contex
0049b50: 7420 636f 6e74 6578 742c 206b 7262 355f  t context, krb5_
0049b60: 6b65 7974 6162 206b 6579 7461 622c 0a20  keytab keytab,. 
0049b70: 2020 2020 2020 2020 2020 2020 2020 2020                  
0049b80: 2020 6b72 6235 5f6b 6579 7461 625f 656e    krb5_keytab_en
0049b90: 7472 7920 2a65 6e74 7279 2c20 6b72 6235  try *entry, krb5
0049ba0: 5f6b 745f 6375 7273 6f72 202a 6375 7273  _kt_cursor *curs
0049bb0: 6f72 293b 0a23 2032 3930 3520 222f 7573  or);.# 2905 "/us
0049bc0: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
0049bd0: 7262 352e 6822 2033 2034 0a6b 7262 355f  rb5.h" 3 4.krb5_
0049be0: 6572 726f 725f 636f 6465 0a6b 7262 355f  error_code.krb5_
0049bf0: 6b74 5f65 6e64 5f73 6571 5f67 6574 286b  kt_end_seq_get(k
0049c00: 7262 355f 636f 6e74 6578 7420 636f 6e74  rb5_context cont
0049c10: 6578 742c 206b 7262 355f 6b65 7974 6162  ext, krb5_keytab
0049c20: 206b 6579 7461 622c 0a20 2020 2020 2020   keytab,.       
0049c30: 2020 2020 2020 2020 2020 2020 206b 7262               krb
0049c40: 355f 6b74 5f63 7572 736f 7220 2a63 7572  5_kt_cursor *cur
0049c50: 736f 7229 3b0a 2320 3239 3230 2022 2f75  sor);.# 2920 "/u
0049c60: 7372 2f69 6e63 6c75 6465 2f6b 7262 352f  sr/include/krb5/
0049c70: 6b72 6235 2e68 2220 3320 340a 6b72 6235  krb5.h" 3 4.krb5
0049c80: 5f65 7272 6f72 5f63 6f64 650a 6b72 6235  _error_code.krb5
0049c90: 5f6b 745f 6861 7665 5f63 6f6e 7465 6e74  _kt_have_content
0049ca0: 286b 7262 355f 636f 6e74 6578 7420 636f  (krb5_context co
0049cb0: 6e74 6578 742c 206b 7262 355f 6b65 7974  ntext, krb5_keyt
0049cc0: 6162 206b 6579 7461 6229 3b0a 2320 3239  ab keytab);.# 29
0049cd0: 3531 2022 2f75 7372 2f69 6e63 6c75 6465  51 "/usr/include
0049ce0: 2f6b 7262 352f 6b72 6235 2e68 2220 3320  /krb5/krb5.h" 3 
0049cf0: 340a 6b72 6235 5f65 7272 6f72 5f63 6f64  4.krb5_error_cod
0049d00: 650a 6b72 6235 5f69 6e69 745f 636f 6e74  e.krb5_init_cont
0049d10: 6578 7428 6b72 6235 5f63 6f6e 7465 7874  ext(krb5_context
0049d20: 202a 636f 6e74 6578 7429 3b0a 2320 3239   *context);.# 29
0049d30: 3730 2022 2f75 7372 2f69 6e63 6c75 6465  70 "/usr/include
0049d40: 2f6b 7262 352f 6b72 6235 2e68 2220 3320  /krb5/krb5.h" 3 
0049d50: 340a 6b72 6235 5f65 7272 6f72 5f63 6f64  4.krb5_error_cod
0049d60: 650a 6b72 6235 5f69 6e69 745f 7365 6375  e.krb5_init_secu
0049d70: 7265 5f63 6f6e 7465 7874 286b 7262 355f  re_context(krb5_
0049d80: 636f 6e74 6578 7420 2a63 6f6e 7465 7874  context *context
0049d90: 293b 0a23 2032 3938 3920 222f 7573 722f  );.# 2989 "/usr/
0049da0: 696e 636c 7564 652f 6b72 6235 2f6b 7262  include/krb5/krb
0049db0: 352e 6822 2033 2034 0a6b 7262 355f 6572  5.h" 3 4.krb5_er
0049dc0: 726f 725f 636f 6465 0a6b 7262 355f 696e  ror_code.krb5_in
0049dd0: 6974 5f63 6f6e 7465 7874 5f70 726f 6669  it_context_profi
0049de0: 6c65 2873 7472 7563 7420 5f70 726f 6669  le(struct _profi
0049df0: 6c65 5f74 202a 7072 6f66 696c 652c 206b  le_t *profile, k
0049e00: 7262 355f 666c 6167 7320 666c 6167 732c  rb5_flags flags,
0049e10: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
0049e20: 2020 2020 2020 2020 2020 206b 7262 355f             krb5_
0049e30: 636f 6e74 6578 7420 2a63 6f6e 7465 7874  context *context
0049e40: 293b 0a23 2033 3030 3120 222f 7573 722f  );.# 3001 "/usr/
0049e50: 696e 636c 7564 652f 6b72 6235 2f6b 7262  include/krb5/krb
0049e60: 352e 6822 2033 2034 0a76 6f69 640a 6b72  5.h" 3 4.void.kr
0049e70: 6235 5f66 7265 655f 636f 6e74 6578 7428  b5_free_context(
0049e80: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
0049e90: 7465 7874 293b 0a23 2033 3031 3820 222f  text);.# 3018 "/
0049ea0: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
0049eb0: 2f6b 7262 352e 6822 2033 2034 0a6b 7262  /krb5.h" 3 4.krb
0049ec0: 355f 6572 726f 725f 636f 6465 0a6b 7262  5_error_code.krb
0049ed0: 355f 636f 7079 5f63 6f6e 7465 7874 286b  5_copy_context(k
0049ee0: 7262 355f 636f 6e74 6578 7420 6374 782c  rb5_context ctx,
0049ef0: 206b 7262 355f 636f 6e74 6578 7420 2a6e   krb5_context *n
0049f00: 6374 785f 6f75 7429 3b0a 2320 3330 3339  ctx_out);.# 3039
0049f10: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
0049f20: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
0049f30: 6b72 6235 5f65 7272 6f72 5f63 6f64 650a  krb5_error_code.
0049f40: 6b72 6235 5f73 6574 5f64 6566 6175 6c74  krb5_set_default
0049f50: 5f74 6773 5f65 6e63 7479 7065 7328 6b72  _tgs_enctypes(kr
0049f60: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
0049f70: 7874 2c20 636f 6e73 7420 6b72 6235 5f65  xt, const krb5_e
0049f80: 6e63 7479 7065 202a 6574 7970 6573 293b  nctype *etypes);
0049f90: 0a23 2033 3035 3620 222f 7573 722f 696e  .# 3056 "/usr/in
0049fa0: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
0049fb0: 6822 2033 2034 0a6b 7262 355f 6572 726f  h" 3 4.krb5_erro
0049fc0: 725f 636f 6465 0a6b 7262 355f 6765 745f  r_code.krb5_get_
0049fd0: 7065 726d 6974 7465 645f 656e 6374 7970  permitted_enctyp
0049fe0: 6573 286b 7262 355f 636f 6e74 6578 7420  es(krb5_context 
0049ff0: 636f 6e74 6578 742c 206b 7262 355f 656e  context, krb5_en
004a000: 6374 7970 6520 2a2a 6b74 7970 6573 293b  ctype **ktypes);
004a010: 0a0a 0a0a 0a0a 0a0a 6b72 6235 5f62 6f6f  ........krb5_boo
004a020: 6c65 616e 0a6b 7262 355f 6973 5f74 6872  lean.krb5_is_thr
004a030: 6561 645f 7361 6665 2876 6f69 6429 3b0a  ead_safe(void);.
004a040: 2320 3330 3832 2022 2f75 7372 2f69 6e63  # 3082 "/usr/inc
004a050: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
004a060: 2220 3320 340a 6b72 6235 5f65 7272 6f72  " 3 4.krb5_error
004a070: 5f63 6f64 650a 6b72 6235 5f73 6572 7665  _code.krb5_serve
004a080: 725f 6465 6372 7970 745f 7469 636b 6574  r_decrypt_ticket
004a090: 5f6b 6579 7461 6228 6b72 6235 5f63 6f6e  _keytab(krb5_con
004a0a0: 7465 7874 2063 6f6e 7465 7874 2c20 636f  text context, co
004a0b0: 6e73 7420 6b72 6235 5f6b 6579 7461 6220  nst krb5_keytab 
004a0c0: 6b74 2c0a 2020 2020 2020 2020 2020 2020  kt,.            
004a0d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004a0e0: 2020 2020 2020 6b72 6235 5f74 6963 6b65        krb5_ticke
004a0f0: 7420 2a74 6963 6b65 7429 3b0a 2320 3330  t *ticket);.# 30
004a100: 3934 2022 2f75 7372 2f69 6e63 6c75 6465  94 "/usr/include
004a110: 2f6b 7262 352f 6b72 6235 2e68 2220 3320  /krb5/krb5.h" 3 
004a120: 340a 766f 6964 0a6b 7262 355f 6672 6565  4.void.krb5_free
004a130: 5f74 6774 5f63 7265 6473 286b 7262 355f  _tgt_creds(krb5_
004a140: 636f 6e74 6578 7420 636f 6e74 6578 742c  context context,
004a150: 206b 7262 355f 6372 6564 7320 2a2a 7467   krb5_creds **tg
004a160: 7473 293b 0a23 2033 3134 3820 222f 7573  ts);.# 3148 "/us
004a170: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
004a180: 7262 352e 6822 2033 2034 0a6b 7262 355f  rb5.h" 3 4.krb5_
004a190: 6572 726f 725f 636f 6465 0a6b 7262 355f  error_code.krb5_
004a1a0: 6765 745f 6372 6564 656e 7469 616c 7328  get_credentials(
004a1b0: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
004a1c0: 7465 7874 2c20 6b72 6235 5f66 6c61 6773  text, krb5_flags
004a1d0: 206f 7074 696f 6e73 2c0a 2020 2020 2020   options,.      
004a1e0: 2020 2020 2020 2020 2020 2020 2020 206b                 k
004a1f0: 7262 355f 6363 6163 6865 2063 6361 6368  rb5_ccache ccach
004a200: 652c 206b 7262 355f 6372 6564 7320 2a69  e, krb5_creds *i
004a210: 6e5f 6372 6564 732c 0a20 2020 2020 2020  n_creds,.       
004a220: 2020 2020 2020 2020 2020 2020 2020 6b72                kr
004a230: 6235 5f63 7265 6473 202a 2a6f 7574 5f63  b5_creds **out_c
004a240: 7265 6473 293b 0a0a 0a6b 7262 355f 6572  reds);...krb5_er
004a250: 726f 725f 636f 6465 0a6b 7262 355f 6765  ror_code.krb5_ge
004a260: 745f 6372 6564 656e 7469 616c 735f 7661  t_credentials_va
004a270: 6c69 6461 7465 286b 7262 355f 636f 6e74  lidate(krb5_cont
004a280: 6578 7420 636f 6e74 6578 742c 206b 7262  ext context, krb
004a290: 355f 666c 6167 7320 6f70 7469 6f6e 732c  5_flags options,
004a2a0: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
004a2b0: 2020 2020 2020 2020 2020 2020 2020 206b                 k
004a2c0: 7262 355f 6363 6163 6865 2063 6361 6368  rb5_ccache ccach
004a2d0: 652c 206b 7262 355f 6372 6564 7320 2a69  e, krb5_creds *i
004a2e0: 6e5f 6372 6564 732c 0a20 2020 2020 2020  n_creds,.       
004a2f0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004a300: 2020 2020 2020 206b 7262 355f 6372 6564         krb5_cred
004a310: 7320 2a2a 6f75 745f 6372 6564 7329 3b0a  s **out_creds);.
004a320: 0a0a 6b72 6235 5f65 7272 6f72 5f63 6f64  ..krb5_error_cod
004a330: 650a 6b72 6235 5f67 6574 5f63 7265 6465  e.krb5_get_crede
004a340: 6e74 6961 6c73 5f72 656e 6577 286b 7262  ntials_renew(krb
004a350: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
004a360: 742c 206b 7262 355f 666c 6167 7320 6f70  t, krb5_flags op
004a370: 7469 6f6e 732c 0a20 2020 2020 2020 2020  tions,.         
004a380: 2020 2020 2020 2020 2020 2020 2020 2020                  
004a390: 2020 6b72 6235 5f63 6361 6368 6520 6363    krb5_ccache cc
004a3a0: 6163 6865 2c20 6b72 6235 5f63 7265 6473  ache, krb5_creds
004a3b0: 202a 696e 5f63 7265 6473 2c0a 2020 2020   *in_creds,.    
004a3c0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004a3d0: 2020 2020 2020 206b 7262 355f 6372 6564         krb5_cred
004a3e0: 7320 2a2a 6f75 745f 6372 6564 7329 3b0a  s **out_creds);.
004a3f0: 2320 3331 3837 2022 2f75 7372 2f69 6e63  # 3187 "/usr/inc
004a400: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
004a410: 2220 3320 340a 6b72 6235 5f65 7272 6f72  " 3 4.krb5_error
004a420: 5f63 6f64 650a 6b72 6235 5f6d 6b5f 7265  _code.krb5_mk_re
004a430: 7128 6b72 6235 5f63 6f6e 7465 7874 2063  q(krb5_context c
004a440: 6f6e 7465 7874 2c20 6b72 6235 5f61 7574  ontext, krb5_aut
004a450: 685f 636f 6e74 6578 7420 2a61 7574 685f  h_context *auth_
004a460: 636f 6e74 6578 742c 0a20 2020 2020 2020  context,.       
004a470: 2020 2020 206b 7262 355f 666c 6167 7320       krb5_flags 
004a480: 6170 5f72 6571 5f6f 7074 696f 6e73 2c20  ap_req_options, 
004a490: 6368 6172 202a 7365 7276 6963 652c 2063  char *service, c
004a4a0: 6861 7220 2a68 6f73 746e 616d 652c 0a20  har *hostname,. 
004a4b0: 2020 2020 2020 2020 2020 206b 7262 355f             krb5_
004a4c0: 6461 7461 202a 696e 5f64 6174 612c 206b  data *in_data, k
004a4d0: 7262 355f 6363 6163 6865 2063 6361 6368  rb5_ccache ccach
004a4e0: 652c 206b 7262 355f 6461 7461 202a 6f75  e, krb5_data *ou
004a4f0: 7462 7566 293b 0a23 2033 3232 3920 222f  tbuf);.# 3229 "/
004a500: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
004a510: 2f6b 7262 352e 6822 2033 2034 0a6b 7262  /krb5.h" 3 4.krb
004a520: 355f 6572 726f 725f 636f 6465 0a6b 7262  5_error_code.krb
004a530: 355f 6d6b 5f72 6571 5f65 7874 656e 6465  5_mk_req_extende
004a540: 6428 6b72 6235 5f63 6f6e 7465 7874 2063  d(krb5_context c
004a550: 6f6e 7465 7874 2c20 6b72 6235 5f61 7574  ontext, krb5_aut
004a560: 685f 636f 6e74 6578 7420 2a61 7574 685f  h_context *auth_
004a570: 636f 6e74 6578 742c 0a20 2020 2020 2020  context,.       
004a580: 2020 2020 2020 2020 2020 2020 2020 6b72                kr
004a590: 6235 5f66 6c61 6773 2061 705f 7265 715f  b5_flags ap_req_
004a5a0: 6f70 7469 6f6e 732c 206b 7262 355f 6461  options, krb5_da
004a5b0: 7461 202a 696e 5f64 6174 612c 0a20 2020  ta *in_data,.   
004a5c0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004a5d0: 2020 6b72 6235 5f63 7265 6473 202a 696e    krb5_creds *in
004a5e0: 5f63 7265 6473 2c20 6b72 6235 5f64 6174  _creds, krb5_dat
004a5f0: 6120 2a6f 7574 6275 6629 3b0a 2320 3332  a *outbuf);.# 32
004a600: 3534 2022 2f75 7372 2f69 6e63 6c75 6465  54 "/usr/include
004a610: 2f6b 7262 352f 6b72 6235 2e68 2220 3320  /krb5/krb5.h" 3 
004a620: 340a 6b72 6235 5f65 7272 6f72 5f63 6f64  4.krb5_error_cod
004a630: 650a 6b72 6235 5f6d 6b5f 7265 7028 6b72  e.krb5_mk_rep(kr
004a640: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
004a650: 7874 2c20 6b72 6235 5f61 7574 685f 636f  xt, krb5_auth_co
004a660: 6e74 6578 7420 6175 7468 5f63 6f6e 7465  ntext auth_conte
004a670: 7874 2c20 6b72 6235 5f64 6174 6120 2a6f  xt, krb5_data *o
004a680: 7574 6275 6629 3b0a 2320 3332 3638 2022  utbuf);.# 3268 "
004a690: 2f75 7372 2f69 6e63 6c75 6465 2f6b 7262  /usr/include/krb
004a6a0: 352f 6b72 6235 2e68 2220 3320 340a 6b72  5/krb5.h" 3 4.kr
004a6b0: 6235 5f65 7272 6f72 5f63 6f64 650a 6b72  b5_error_code.kr
004a6c0: 6235 5f6d 6b5f 7265 705f 6463 6528 6b72  b5_mk_rep_dce(kr
004a6d0: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
004a6e0: 7874 2c20 6b72 6235 5f61 7574 685f 636f  xt, krb5_auth_co
004a6f0: 6e74 6578 7420 6175 7468 5f63 6f6e 7465  ntext auth_conte
004a700: 7874 2c20 6b72 6235 5f64 6174 6120 2a6f  xt, krb5_data *o
004a710: 7574 6275 6629 3b0a 2320 3332 3837 2022  utbuf);.# 3287 "
004a720: 2f75 7372 2f69 6e63 6c75 6465 2f6b 7262  /usr/include/krb
004a730: 352f 6b72 6235 2e68 2220 3320 340a 6b72  5/krb5.h" 3 4.kr
004a740: 6235 5f65 7272 6f72 5f63 6f64 650a 6b72  b5_error_code.kr
004a750: 6235 5f72 645f 7265 7028 6b72 6235 5f63  b5_rd_rep(krb5_c
004a760: 6f6e 7465 7874 2063 6f6e 7465 7874 2c20  ontext context, 
004a770: 6b72 6235 5f61 7574 685f 636f 6e74 6578  krb5_auth_contex
004a780: 7420 6175 7468 5f63 6f6e 7465 7874 2c0a  t auth_context,.
004a790: 2020 2020 2020 2020 2020 2020 636f 6e73              cons
004a7a0: 7420 6b72 6235 5f64 6174 6120 2a69 6e62  t krb5_data *inb
004a7b0: 7566 2c20 6b72 6235 5f61 705f 7265 705f  uf, krb5_ap_rep_
004a7c0: 656e 635f 7061 7274 202a 2a72 6570 6c29  enc_part **repl)
004a7d0: 3b0a 2320 3333 3034 2022 2f75 7372 2f69  ;.# 3304 "/usr/i
004a7e0: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
004a7f0: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
004a800: 6f72 5f63 6f64 650a 6b72 6235 5f72 645f  or_code.krb5_rd_
004a810: 7265 705f 6463 6528 6b72 6235 5f63 6f6e  rep_dce(krb5_con
004a820: 7465 7874 2063 6f6e 7465 7874 2c20 6b72  text context, kr
004a830: 6235 5f61 7574 685f 636f 6e74 6578 7420  b5_auth_context 
004a840: 6175 7468 5f63 6f6e 7465 7874 2c0a 2020  auth_context,.  
004a850: 2020 2020 2020 2020 2020 2020 2020 636f                co
004a860: 6e73 7420 6b72 6235 5f64 6174 6120 2a69  nst krb5_data *i
004a870: 6e62 7566 2c20 6b72 6235 5f75 695f 3420  nbuf, krb5_ui_4 
004a880: 2a6e 6f6e 6365 293b 0a23 2033 3332 3020  *nonce);.# 3320 
004a890: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
004a8a0: 6235 2f6b 7262 352e 6822 2033 2034 0a6b  b5/krb5.h" 3 4.k
004a8b0: 7262 355f 6572 726f 725f 636f 6465 0a6b  rb5_error_code.k
004a8c0: 7262 355f 6d6b 5f65 7272 6f72 286b 7262  rb5_mk_error(krb
004a8d0: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
004a8e0: 742c 2063 6f6e 7374 206b 7262 355f 6572  t, const krb5_er
004a8f0: 726f 7220 2a64 6563 5f65 7272 2c0a 2020  ror *dec_err,.  
004a900: 2020 2020 2020 2020 2020 2020 6b72 6235              krb5
004a910: 5f64 6174 6120 2a65 6e63 5f65 7272 293b  _data *enc_err);
004a920: 0a23 2033 3333 3720 222f 7573 722f 696e  .# 3337 "/usr/in
004a930: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
004a940: 6822 2033 2034 0a6b 7262 355f 6572 726f  h" 3 4.krb5_erro
004a950: 725f 636f 6465 0a6b 7262 355f 7264 5f65  r_code.krb5_rd_e
004a960: 7272 6f72 286b 7262 355f 636f 6e74 6578  rror(krb5_contex
004a970: 7420 636f 6e74 6578 742c 2063 6f6e 7374  t context, const
004a980: 206b 7262 355f 6461 7461 202a 656e 635f   krb5_data *enc_
004a990: 6572 7262 7566 2c0a 2020 2020 2020 2020  errbuf,.        
004a9a0: 2020 2020 2020 6b72 6235 5f65 7272 6f72        krb5_error
004a9b0: 202a 2a64 6563 5f65 7272 6f72 293b 0a23   **dec_error);.#
004a9c0: 2033 3337 3720 222f 7573 722f 696e 636c   3377 "/usr/incl
004a9d0: 7564 652f 6b72 6235 2f6b 7262 352e 6822  ude/krb5/krb5.h"
004a9e0: 2033 2034 0a6b 7262 355f 6572 726f 725f   3 4.krb5_error_
004a9f0: 636f 6465 0a6b 7262 355f 7264 5f73 6166  code.krb5_rd_saf
004aa00: 6528 6b72 6235 5f63 6f6e 7465 7874 2063  e(krb5_context c
004aa10: 6f6e 7465 7874 2c20 6b72 6235 5f61 7574  ontext, krb5_aut
004aa20: 685f 636f 6e74 6578 7420 6175 7468 5f63  h_context auth_c
004aa30: 6f6e 7465 7874 2c0a 2020 2020 2020 2020  ontext,.        
004aa40: 2020 2020 2063 6f6e 7374 206b 7262 355f       const krb5_
004aa50: 6461 7461 202a 696e 6275 662c 206b 7262  data *inbuf, krb
004aa60: 355f 6461 7461 202a 6f75 7462 7566 2c0a  5_data *outbuf,.
004aa70: 2020 2020 2020 2020 2020 2020 206b 7262               krb
004aa80: 355f 7265 706c 6179 5f64 6174 6120 2a6f  5_replay_data *o
004aa90: 7574 6461 7461 293b 0a23 2033 3431 3720  utdata);.# 3417 
004aaa0: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
004aab0: 6235 2f6b 7262 352e 6822 2033 2034 0a6b  b5/krb5.h" 3 4.k
004aac0: 7262 355f 6572 726f 725f 636f 6465 0a6b  rb5_error_code.k
004aad0: 7262 355f 7264 5f70 7269 7628 6b72 6235  rb5_rd_priv(krb5
004aae0: 5f63 6f6e 7465 7874 2063 6f6e 7465 7874  _context context
004aaf0: 2c20 6b72 6235 5f61 7574 685f 636f 6e74  , krb5_auth_cont
004ab00: 6578 7420 6175 7468 5f63 6f6e 7465 7874  ext auth_context
004ab10: 2c0a 2020 2020 2020 2020 2020 2020 2063  ,.             c
004ab20: 6f6e 7374 206b 7262 355f 6461 7461 202a  onst krb5_data *
004ab30: 696e 6275 662c 206b 7262 355f 6461 7461  inbuf, krb5_data
004ab40: 202a 6f75 7462 7566 2c0a 2020 2020 2020   *outbuf,.      
004ab50: 2020 2020 2020 206b 7262 355f 7265 706c         krb5_repl
004ab60: 6179 5f64 6174 6120 2a6f 7574 6461 7461  ay_data *outdata
004ab70: 293b 0a23 2033 3435 3420 222f 7573 722f  );.# 3454 "/usr/
004ab80: 696e 636c 7564 652f 6b72 6235 2f6b 7262  include/krb5/krb
004ab90: 352e 6822 2033 2034 0a6b 7262 355f 6572  5.h" 3 4.krb5_er
004aba0: 726f 725f 636f 6465 0a6b 7262 355f 7061  ror_code.krb5_pa
004abb0: 7273 655f 6e61 6d65 286b 7262 355f 636f  rse_name(krb5_co
004abc0: 6e74 6578 7420 636f 6e74 6578 742c 2063  ntext context, c
004abd0: 6f6e 7374 2063 6861 7220 2a6e 616d 652c  onst char *name,
004abe0: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
004abf0: 206b 7262 355f 7072 696e 6369 7061 6c20   krb5_principal 
004ac00: 2a70 7269 6e63 6970 616c 5f6f 7574 293b  *principal_out);
004ac10: 0a23 2033 3439 3520 222f 7573 722f 696e  .# 3495 "/usr/in
004ac20: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
004ac30: 6822 2033 2034 0a6b 7262 355f 6572 726f  h" 3 4.krb5_erro
004ac40: 725f 636f 6465 0a6b 7262 355f 7061 7273  r_code.krb5_pars
004ac50: 655f 6e61 6d65 5f66 6c61 6773 286b 7262  e_name_flags(krb
004ac60: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
004ac70: 742c 2063 6f6e 7374 2063 6861 7220 2a6e  t, const char *n
004ac80: 616d 652c 0a20 2020 2020 2020 2020 2020  ame,.           
004ac90: 2020 2020 2020 2020 2020 2069 6e74 2066             int f
004aca0: 6c61 6773 2c20 6b72 6235 5f70 7269 6e63  lags, krb5_princ
004acb0: 6970 616c 202a 7072 696e 6369 7061 6c5f  ipal *principal_
004acc0: 6f75 7429 3b0a 2320 3335 3136 2022 2f75  out);.# 3516 "/u
004acd0: 7372 2f69 6e63 6c75 6465 2f6b 7262 352f  sr/include/krb5/
004ace0: 6b72 6235 2e68 2220 3320 340a 6b72 6235  krb5.h" 3 4.krb5
004acf0: 5f65 7272 6f72 5f63 6f64 650a 6b72 6235  _error_code.krb5
004ad00: 5f75 6e70 6172 7365 5f6e 616d 6528 6b72  _unparse_name(kr
004ad10: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
004ad20: 7874 2c20 6b72 6235 5f63 6f6e 7374 5f70  xt, krb5_const_p
004ad30: 7269 6e63 6970 616c 2070 7269 6e63 6970  rincipal princip
004ad40: 616c 2c0a 2020 2020 2020 2020 2020 2020  al,.            
004ad50: 2020 2020 2020 7265 6769 7374 6572 2063        register c
004ad60: 6861 7220 2a2a 6e61 6d65 293b 0a23 2033  har **name);.# 3
004ad70: 3534 3320 222f 7573 722f 696e 636c 7564  543 "/usr/includ
004ad80: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
004ad90: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
004ada0: 6465 0a6b 7262 355f 756e 7061 7273 655f  de.krb5_unparse_
004adb0: 6e61 6d65 5f65 7874 286b 7262 355f 636f  name_ext(krb5_co
004adc0: 6e74 6578 7420 636f 6e74 6578 742c 206b  ntext context, k
004add0: 7262 355f 636f 6e73 745f 7072 696e 6369  rb5_const_princi
004ade0: 7061 6c20 7072 696e 6369 7061 6c2c 0a20  pal principal,. 
004adf0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004ae00: 2020 2020 2063 6861 7220 2a2a 6e61 6d65       char **name
004ae10: 2c20 756e 7369 676e 6564 2069 6e74 202a  , unsigned int *
004ae20: 7369 7a65 293b 0a23 2033 3537 3420 222f  size);.# 3574 "/
004ae30: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
004ae40: 2f6b 7262 352e 6822 2033 2034 0a6b 7262  /krb5.h" 3 4.krb
004ae50: 355f 6572 726f 725f 636f 6465 0a6b 7262  5_error_code.krb
004ae60: 355f 756e 7061 7273 655f 6e61 6d65 5f66  5_unparse_name_f
004ae70: 6c61 6773 286b 7262 355f 636f 6e74 6578  lags(krb5_contex
004ae80: 7420 636f 6e74 6578 742c 206b 7262 355f  t context, krb5_
004ae90: 636f 6e73 745f 7072 696e 6369 7061 6c20  const_principal 
004aea0: 7072 696e 6369 7061 6c2c 0a20 2020 2020  principal,.     
004aeb0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004aec0: 2020 2069 6e74 2066 6c61 6773 2c20 6368     int flags, ch
004aed0: 6172 202a 2a6e 616d 6529 3b0a 2320 3335  ar **name);.# 35
004aee0: 3934 2022 2f75 7372 2f69 6e63 6c75 6465  94 "/usr/include
004aef0: 2f6b 7262 352f 6b72 6235 2e68 2220 3320  /krb5/krb5.h" 3 
004af00: 340a 6b72 6235 5f65 7272 6f72 5f63 6f64  4.krb5_error_cod
004af10: 650a 6b72 6235 5f75 6e70 6172 7365 5f6e  e.krb5_unparse_n
004af20: 616d 655f 666c 6167 735f 6578 7428 6b72  ame_flags_ext(kr
004af30: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
004af40: 7874 2c20 6b72 6235 5f63 6f6e 7374 5f70  xt, krb5_const_p
004af50: 7269 6e63 6970 616c 2070 7269 6e63 6970  rincipal princip
004af60: 616c 2c0a 2020 2020 2020 2020 2020 2020  al,.            
004af70: 2020 2020 2020 2020 2020 2020 2020 2020                  
004af80: 696e 7420 666c 6167 732c 2063 6861 7220  int flags, char 
004af90: 2a2a 6e61 6d65 2c20 756e 7369 676e 6564  **name, unsigned
004afa0: 2069 6e74 202a 7369 7a65 293b 0a23 2033   int *size);.# 3
004afb0: 3631 3320 222f 7573 722f 696e 636c 7564  613 "/usr/includ
004afc0: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
004afd0: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
004afe0: 6465 0a6b 7262 355f 7365 745f 7072 696e  de.krb5_set_prin
004aff0: 6369 7061 6c5f 7265 616c 6d28 6b72 6235  cipal_realm(krb5
004b000: 5f63 6f6e 7465 7874 2063 6f6e 7465 7874  _context context
004b010: 2c20 6b72 6235 5f70 7269 6e63 6970 616c  , krb5_principal
004b020: 2070 7269 6e63 6970 616c 2c0a 2020 2020   principal,.    
004b030: 2020 2020 2020 2020 2020 2020 2020 2020                  
004b040: 2020 2020 2063 6f6e 7374 2063 6861 7220       const char 
004b050: 2a72 6561 6c6d 293b 0a23 2033 3633 3120  *realm);.# 3631 
004b060: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
004b070: 6235 2f6b 7262 352e 6822 2033 2034 0a6b  b5/krb5.h" 3 4.k
004b080: 7262 355f 626f 6f6c 6561 6e0a 6b72 6235  rb5_boolean.krb5
004b090: 5f61 6464 7265 7373 5f73 6561 7263 6828  _address_search(
004b0a0: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
004b0b0: 7465 7874 2c20 636f 6e73 7420 6b72 6235  text, const krb5
004b0c0: 5f61 6464 7265 7373 202a 6164 6472 2c0a  _address *addr,.
004b0d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004b0e0: 2020 2020 6b72 6235 5f61 6464 7265 7373      krb5_address
004b0f0: 202a 636f 6e73 7420 2a61 6464 726c 6973   *const *addrlis
004b100: 7429 3b0a 2320 3336 3435 2022 2f75 7372  t);.# 3645 "/usr
004b110: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
004b120: 6235 2e68 2220 3320 340a 6b72 6235 5f62  b5.h" 3 4.krb5_b
004b130: 6f6f 6c65 616e 0a6b 7262 355f 6164 6472  oolean.krb5_addr
004b140: 6573 735f 636f 6d70 6172 6528 6b72 6235  ess_compare(krb5
004b150: 5f63 6f6e 7465 7874 2063 6f6e 7465 7874  _context context
004b160: 2c20 636f 6e73 7420 6b72 6235 5f61 6464  , const krb5_add
004b170: 7265 7373 202a 6164 6472 312c 0a20 2020  ress *addr1,.   
004b180: 2020 2020 2020 2020 2020 2020 2020 2020                  
004b190: 2020 636f 6e73 7420 6b72 6235 5f61 6464    const krb5_add
004b1a0: 7265 7373 202a 6164 6472 3229 3b0a 2320  ress *addr2);.# 
004b1b0: 3336 3633 2022 2f75 7372 2f69 6e63 6c75  3663 "/usr/inclu
004b1c0: 6465 2f6b 7262 352f 6b72 6235 2e68 2220  de/krb5/krb5.h" 
004b1d0: 3320 340a 696e 740a 6b72 6235 5f61 6464  3 4.int.krb5_add
004b1e0: 7265 7373 5f6f 7264 6572 286b 7262 355f  ress_order(krb5_
004b1f0: 636f 6e74 6578 7420 636f 6e74 6578 742c  context context,
004b200: 2063 6f6e 7374 206b 7262 355f 6164 6472   const krb5_addr
004b210: 6573 7320 2a61 6464 7231 2c0a 2020 2020  ess *addr1,.    
004b220: 2020 2020 2020 2020 2020 2020 2020 2063                 c
004b230: 6f6e 7374 206b 7262 355f 6164 6472 6573  onst krb5_addres
004b240: 7320 2a61 6464 7232 293b 0a23 2033 3637  s *addr2);.# 367
004b250: 3720 222f 7573 722f 696e 636c 7564 652f  7 "/usr/include/
004b260: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
004b270: 0a6b 7262 355f 626f 6f6c 6561 6e0a 6b72  .krb5_boolean.kr
004b280: 6235 5f72 6561 6c6d 5f63 6f6d 7061 7265  b5_realm_compare
004b290: 286b 7262 355f 636f 6e74 6578 7420 636f  (krb5_context co
004b2a0: 6e74 6578 742c 206b 7262 355f 636f 6e73  ntext, krb5_cons
004b2b0: 745f 7072 696e 6369 7061 6c20 7072 696e  t_principal prin
004b2c0: 6331 2c0a 2020 2020 2020 2020 2020 2020  c1,.            
004b2d0: 2020 2020 2020 206b 7262 355f 636f 6e73         krb5_cons
004b2e0: 745f 7072 696e 6369 7061 6c20 7072 696e  t_principal prin
004b2f0: 6332 293b 0a23 2033 3639 3120 222f 7573  c2);.# 3691 "/us
004b300: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
004b310: 7262 352e 6822 2033 2034 0a6b 7262 355f  rb5.h" 3 4.krb5_
004b320: 626f 6f6c 6561 6e0a 6b72 6235 5f70 7269  boolean.krb5_pri
004b330: 6e63 6970 616c 5f63 6f6d 7061 7265 286b  ncipal_compare(k
004b340: 7262 355f 636f 6e74 6578 7420 636f 6e74  rb5_context cont
004b350: 6578 742c 0a20 2020 2020 2020 2020 2020  ext,.           
004b360: 2020 2020 2020 2020 2020 2020 6b72 6235              krb5
004b370: 5f63 6f6e 7374 5f70 7269 6e63 6970 616c  _const_principal
004b380: 2070 7269 6e63 312c 0a20 2020 2020 2020   princ1,.       
004b390: 2020 2020 2020 2020 2020 2020 2020 2020                  
004b3a0: 6b72 6235 5f63 6f6e 7374 5f70 7269 6e63  krb5_const_princ
004b3b0: 6970 616c 2070 7269 6e63 3229 3b0a 2320  ipal princ2);.# 
004b3c0: 3337 3039 2022 2f75 7372 2f69 6e63 6c75  3709 "/usr/inclu
004b3d0: 6465 2f6b 7262 352f 6b72 6235 2e68 2220  de/krb5/krb5.h" 
004b3e0: 3320 340a 6b72 6235 5f62 6f6f 6c65 616e  3 4.krb5_boolean
004b3f0: 0a6b 7262 355f 7072 696e 6369 7061 6c5f  .krb5_principal_
004b400: 636f 6d70 6172 655f 616e 795f 7265 616c  compare_any_real
004b410: 6d28 6b72 6235 5f63 6f6e 7465 7874 2063  m(krb5_context c
004b420: 6f6e 7465 7874 2c0a 2020 2020 2020 2020  ontext,.        
004b430: 2020 2020 2020 2020 2020 2020 2020 2020                  
004b440: 2020 2020 2020 2020 206b 7262 355f 636f           krb5_co
004b450: 6e73 745f 7072 696e 6369 7061 6c20 7072  nst_principal pr
004b460: 696e 6331 2c0a 2020 2020 2020 2020 2020  inc1,.          
004b470: 2020 2020 2020 2020 2020 2020 2020 2020                  
004b480: 2020 2020 2020 206b 7262 355f 636f 6e73         krb5_cons
004b490: 745f 7072 696e 6369 7061 6c20 7072 696e  t_principal prin
004b4a0: 6332 293b 0a23 2033 3733 3820 222f 7573  c2);.# 3738 "/us
004b4b0: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
004b4c0: 7262 352e 6822 2033 2034 0a6b 7262 355f  rb5.h" 3 4.krb5_
004b4d0: 626f 6f6c 6561 6e0a 6b72 6235 5f70 7269  boolean.krb5_pri
004b4e0: 6e63 6970 616c 5f63 6f6d 7061 7265 5f66  ncipal_compare_f
004b4f0: 6c61 6773 286b 7262 355f 636f 6e74 6578  lags(krb5_contex
004b500: 7420 636f 6e74 6578 742c 0a20 2020 2020  t context,.     
004b510: 2020 2020 2020 2020 2020 2020 2020 2020                  
004b520: 2020 2020 2020 2020 6b72 6235 5f63 6f6e          krb5_con
004b530: 7374 5f70 7269 6e63 6970 616c 2070 7269  st_principal pri
004b540: 6e63 312c 0a20 2020 2020 2020 2020 2020  nc1,.           
004b550: 2020 2020 2020 2020 2020 2020 2020 2020                  
004b560: 2020 6b72 6235 5f63 6f6e 7374 5f70 7269    krb5_const_pri
004b570: 6e63 6970 616c 2070 7269 6e63 322c 0a20  ncipal princ2,. 
004b580: 2020 2020 2020 2020 2020 2020 2020 2020                  
004b590: 2020 2020 2020 2020 2020 2020 696e 7420              int 
004b5a0: 666c 6167 7329 3b0a 2320 3337 3631 2022  flags);.# 3761 "
004b5b0: 2f75 7372 2f69 6e63 6c75 6465 2f6b 7262  /usr/include/krb
004b5c0: 352f 6b72 6235 2e68 2220 3320 340a 6b72  5/krb5.h" 3 4.kr
004b5d0: 6235 5f65 7272 6f72 5f63 6f64 650a 6b72  b5_error_code.kr
004b5e0: 6235 5f69 6e69 745f 6b65 7962 6c6f 636b  b5_init_keyblock
004b5f0: 286b 7262 355f 636f 6e74 6578 7420 636f  (krb5_context co
004b600: 6e74 6578 742c 206b 7262 355f 656e 6374  ntext, krb5_enct
004b610: 7970 6520 656e 6374 7970 652c 0a20 2020  ype enctype,.   
004b620: 2020 2020 2020 2020 2020 2020 2020 2020                  
004b630: 7369 7a65 5f74 206c 656e 6774 682c 206b  size_t length, k
004b640: 7262 355f 6b65 7962 6c6f 636b 202a 2a6f  rb5_keyblock **o
004b650: 7574 293b 0a23 2033 3737 3720 222f 7573  ut);.# 3777 "/us
004b660: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
004b670: 7262 352e 6822 2033 2034 0a6b 7262 355f  rb5.h" 3 4.krb5_
004b680: 6572 726f 725f 636f 6465 0a6b 7262 355f  error_code.krb5_
004b690: 636f 7079 5f6b 6579 626c 6f63 6b28 6b72  copy_keyblock(kr
004b6a0: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
004b6b0: 7874 2c20 636f 6e73 7420 6b72 6235 5f6b  xt, const krb5_k
004b6c0: 6579 626c 6f63 6b20 2a66 726f 6d2c 0a20  eyblock *from,. 
004b6d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004b6e0: 2020 6b72 6235 5f6b 6579 626c 6f63 6b20    krb5_keyblock 
004b6f0: 2a2a 746f 293b 0a23 2033 3739 3320 222f  **to);.# 3793 "/
004b700: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
004b710: 2f6b 7262 352e 6822 2033 2034 0a6b 7262  /krb5.h" 3 4.krb
004b720: 355f 6572 726f 725f 636f 6465 0a6b 7262  5_error_code.krb
004b730: 355f 636f 7079 5f6b 6579 626c 6f63 6b5f  5_copy_keyblock_
004b740: 636f 6e74 656e 7473 286b 7262 355f 636f  contents(krb5_co
004b750: 6e74 6578 7420 636f 6e74 6578 742c 2063  ntext context, c
004b760: 6f6e 7374 206b 7262 355f 6b65 7962 6c6f  onst krb5_keyblo
004b770: 636b 202a 6672 6f6d 2c0a 2020 2020 2020  ck *from,.      
004b780: 2020 2020 2020 2020 2020 2020 2020 2020                  
004b790: 2020 2020 2020 6b72 6235 5f6b 6579 626c        krb5_keybl
004b7a0: 6f63 6b20 2a74 6f29 3b0a 2320 3338 3039  ock *to);.# 3809
004b7b0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
004b7c0: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
004b7d0: 6b72 6235 5f65 7272 6f72 5f63 6f64 650a  krb5_error_code.
004b7e0: 6b72 6235 5f63 6f70 795f 6372 6564 7328  krb5_copy_creds(
004b7f0: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
004b800: 7465 7874 2c20 636f 6e73 7420 6b72 6235  text, const krb5
004b810: 5f63 7265 6473 202a 696e 6372 6564 2c20  _creds *incred, 
004b820: 6b72 6235 5f63 7265 6473 202a 2a6f 7574  krb5_creds **out
004b830: 6372 6564 293b 0a23 2033 3832 3420 222f  cred);.# 3824 "/
004b840: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
004b850: 2f6b 7262 352e 6822 2033 2034 0a6b 7262  /krb5.h" 3 4.krb
004b860: 355f 6572 726f 725f 636f 6465 0a6b 7262  5_error_code.krb
004b870: 355f 636f 7079 5f64 6174 6128 6b72 6235  5_copy_data(krb5
004b880: 5f63 6f6e 7465 7874 2063 6f6e 7465 7874  _context context
004b890: 2c20 636f 6e73 7420 6b72 6235 5f64 6174  , const krb5_dat
004b8a0: 6120 2a69 6e64 6174 612c 206b 7262 355f  a *indata, krb5_
004b8b0: 6461 7461 202a 2a6f 7574 6461 7461 293b  data **outdata);
004b8c0: 0a23 2033 3834 3020 222f 7573 722f 696e  .# 3840 "/usr/in
004b8d0: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
004b8e0: 6822 2033 2034 0a6b 7262 355f 6572 726f  h" 3 4.krb5_erro
004b8f0: 725f 636f 6465 0a6b 7262 355f 636f 7079  r_code.krb5_copy
004b900: 5f70 7269 6e63 6970 616c 286b 7262 355f  _principal(krb5_
004b910: 636f 6e74 6578 7420 636f 6e74 6578 742c  context context,
004b920: 206b 7262 355f 636f 6e73 745f 7072 696e   krb5_const_prin
004b930: 6369 7061 6c20 696e 7072 696e 632c 0a20  cipal inprinc,. 
004b940: 2020 2020 2020 2020 2020 2020 2020 2020                  
004b950: 2020 206b 7262 355f 7072 696e 6369 7061     krb5_principa
004b960: 6c20 2a6f 7574 7072 696e 6329 3b0a 2320  l *outprinc);.# 
004b970: 3338 3536 2022 2f75 7372 2f69 6e63 6c75  3856 "/usr/inclu
004b980: 6465 2f6b 7262 352f 6b72 6235 2e68 2220  de/krb5/krb5.h" 
004b990: 3320 340a 6b72 6235 5f65 7272 6f72 5f63  3 4.krb5_error_c
004b9a0: 6f64 650a 6b72 6235 5f63 6f70 795f 6164  ode.krb5_copy_ad
004b9b0: 6472 6573 7365 7328 6b72 6235 5f63 6f6e  dresses(krb5_con
004b9c0: 7465 7874 2063 6f6e 7465 7874 2c20 6b72  text context, kr
004b9d0: 6235 5f61 6464 7265 7373 202a 636f 6e73  b5_address *cons
004b9e0: 7420 2a69 6e61 6464 722c 0a20 2020 2020  t *inaddr,.     
004b9f0: 2020 2020 2020 2020 2020 2020 2020 206b                 k
004ba00: 7262 355f 6164 6472 6573 7320 2a2a 2a6f  rb5_address ***o
004ba10: 7574 6164 6472 293b 0a23 2033 3837 3220  utaddr);.# 3872 
004ba20: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
004ba30: 6235 2f6b 7262 352e 6822 2033 2034 0a6b  b5/krb5.h" 3 4.k
004ba40: 7262 355f 6572 726f 725f 636f 6465 0a6b  rb5_error_code.k
004ba50: 7262 355f 636f 7079 5f74 6963 6b65 7428  rb5_copy_ticket(
004ba60: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
004ba70: 7465 7874 2c20 636f 6e73 7420 6b72 6235  text, const krb5
004ba80: 5f74 6963 6b65 7420 2a66 726f 6d2c 206b  _ticket *from, k
004ba90: 7262 355f 7469 636b 6574 202a 2a70 746f  rb5_ticket **pto
004baa0: 293b 0a23 2033 3839 3020 222f 7573 722f  );.# 3890 "/usr/
004bab0: 696e 636c 7564 652f 6b72 6235 2f6b 7262  include/krb5/krb
004bac0: 352e 6822 2033 2034 0a6b 7262 355f 6572  5.h" 3 4.krb5_er
004bad0: 726f 725f 636f 6465 0a6b 7262 355f 636f  ror_code.krb5_co
004bae0: 7079 5f61 7574 6864 6174 6128 6b72 6235  py_authdata(krb5
004baf0: 5f63 6f6e 7465 7874 2063 6f6e 7465 7874  _context context
004bb00: 2c0a 2020 2020 2020 2020 2020 2020 2020  ,.              
004bb10: 2020 2020 206b 7262 355f 6175 7468 6461       krb5_authda
004bb20: 7461 202a 636f 6e73 7420 2a69 6e5f 6175  ta *const *in_au
004bb30: 7468 6461 742c 206b 7262 355f 6175 7468  thdat, krb5_auth
004bb40: 6461 7461 202a 2a2a 6f75 7429 3b0a 2320  data ***out);.# 
004bb50: 3339 3132 2022 2f75 7372 2f69 6e63 6c75  3912 "/usr/inclu
004bb60: 6465 2f6b 7262 352f 6b72 6235 2e68 2220  de/krb5/krb5.h" 
004bb70: 3320 340a 6b72 6235 5f65 7272 6f72 5f63  3 4.krb5_error_c
004bb80: 6f64 650a 6b72 6235 5f66 696e 645f 6175  ode.krb5_find_au
004bb90: 7468 6461 7461 286b 7262 355f 636f 6e74  thdata(krb5_cont
004bba0: 6578 7420 636f 6e74 6578 742c 206b 7262  ext context, krb
004bbb0: 355f 6175 7468 6461 7461 202a 636f 6e73  5_authdata *cons
004bbc0: 7420 2a74 6963 6b65 745f 6175 7468 6461  t *ticket_authda
004bbd0: 7461 2c0a 2020 2020 2020 2020 2020 2020  ta,.            
004bbe0: 2020 2020 2020 206b 7262 355f 6175 7468         krb5_auth
004bbf0: 6461 7461 202a 636f 6e73 7420 2a61 705f  data *const *ap_
004bc00: 7265 715f 6175 7468 6461 7461 2c0a 2020  req_authdata,.  
004bc10: 2020 2020 2020 2020 2020 2020 2020 2020                  
004bc20: 206b 7262 355f 6175 7468 6461 7461 7479   krb5_authdataty
004bc30: 7065 2061 645f 7479 7065 2c20 6b72 6235  pe ad_type, krb5
004bc40: 5f61 7574 6864 6174 6120 2a2a 2a72 6573  _authdata ***res
004bc50: 756c 7473 293b 0a23 2033 3933 3420 222f  ults);.# 3934 "/
004bc60: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
004bc70: 2f6b 7262 352e 6822 2033 2034 0a6b 7262  /krb5.h" 3 4.krb
004bc80: 355f 6572 726f 725f 636f 6465 0a6b 7262  5_error_code.krb
004bc90: 355f 6d65 7267 655f 6175 7468 6461 7461  5_merge_authdata
004bca0: 286b 7262 355f 636f 6e74 6578 7420 636f  (krb5_context co
004bcb0: 6e74 6578 742c 0a20 2020 2020 2020 2020  ntext,.         
004bcc0: 2020 2020 2020 2020 2020 206b 7262 355f             krb5_
004bcd0: 6175 7468 6461 7461 202a 636f 6e73 7420  authdata *const 
004bce0: 2a69 6e61 7574 6864 6174 312c 0a20 2020  *inauthdat1,.   
004bcf0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004bd00: 206b 7262 355f 6175 7468 6461 7461 202a   krb5_authdata *
004bd10: 2063 6f6e 7374 202a 696e 6175 7468 6461   const *inauthda
004bd20: 7432 2c0a 2020 2020 2020 2020 2020 2020  t2,.            
004bd30: 2020 2020 2020 2020 6b72 6235 5f61 7574          krb5_aut
004bd40: 6864 6174 6120 2a2a 2a6f 7574 6175 7468  hdata ***outauth
004bd50: 6461 7429 3b0a 2320 3339 3533 2022 2f75  dat);.# 3953 "/u
004bd60: 7372 2f69 6e63 6c75 6465 2f6b 7262 352f  sr/include/krb5/
004bd70: 6b72 6235 2e68 2220 3320 340a 6b72 6235  krb5.h" 3 4.krb5
004bd80: 5f65 7272 6f72 5f63 6f64 650a 6b72 6235  _error_code.krb5
004bd90: 5f63 6f70 795f 6175 7468 656e 7469 6361  _copy_authentica
004bda0: 746f 7228 6b72 6235 5f63 6f6e 7465 7874  tor(krb5_context
004bdb0: 2063 6f6e 7465 7874 2c20 636f 6e73 7420   context, const 
004bdc0: 6b72 6235 5f61 7574 6865 6e74 6963 6174  krb5_authenticat
004bdd0: 6f72 202a 6175 7468 6672 6f6d 2c0a 2020  or *authfrom,.  
004bde0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004bdf0: 2020 2020 2020 6b72 6235 5f61 7574 6865        krb5_authe
004be00: 6e74 6963 6174 6f72 202a 2a61 7574 6874  nticator **autht
004be10: 6f29 3b0a 2320 3339 3730 2022 2f75 7372  o);.# 3970 "/usr
004be20: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
004be30: 6235 2e68 2220 3320 340a 6b72 6235 5f65  b5.h" 3 4.krb5_e
004be40: 7272 6f72 5f63 6f64 650a 6b72 6235 5f63  rror_code.krb5_c
004be50: 6f70 795f 6368 6563 6b73 756d 286b 7262  opy_checksum(krb
004be60: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
004be70: 742c 2063 6f6e 7374 206b 7262 355f 6368  t, const krb5_ch
004be80: 6563 6b73 756d 202a 636b 6672 6f6d 2c0a  ecksum *ckfrom,.
004be90: 2020 2020 2020 2020 2020 2020 2020 2020                  
004bea0: 2020 206b 7262 355f 6368 6563 6b73 756d     krb5_checksum
004beb0: 202a 2a63 6b74 6f29 3b0a 2320 3339 3838   **ckto);.# 3988
004bec0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
004bed0: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
004bee0: 6b72 6235 5f65 7272 6f72 5f63 6f64 650a  krb5_error_code.
004bef0: 6b72 6235 5f67 6574 5f73 6572 7665 725f  krb5_get_server_
004bf00: 7263 6163 6865 286b 7262 355f 636f 6e74  rcache(krb5_cont
004bf10: 6578 7420 636f 6e74 6578 742c 2063 6f6e  ext context, con
004bf20: 7374 206b 7262 355f 6461 7461 202a 7069  st krb5_data *pi
004bf30: 6563 652c 0a20 2020 2020 2020 2020 2020  ece,.           
004bf40: 2020 2020 2020 2020 2020 2020 6b72 6235              krb5
004bf50: 5f72 6361 6368 6520 2a72 6370 7472 293b  _rcache *rcptr);
004bf60: 0a23 2034 3032 3120 222f 7573 722f 696e  .# 4021 "/usr/in
004bf70: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
004bf80: 6822 2033 2034 0a6b 7262 355f 6572 726f  h" 3 4.krb5_erro
004bf90: 725f 636f 6465 0a6b 7262 355f 6275 696c  r_code.krb5_buil
004bfa0: 645f 7072 696e 6369 7061 6c5f 6578 7428  d_principal_ext(
004bfb0: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
004bfc0: 7465 7874 2c20 6b72 6235 5f70 7269 6e63  text, krb5_princ
004bfd0: 6970 616c 202a 2070 7269 6e63 2c0a 2020  ipal * princ,.  
004bfe0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004bff0: 2020 2020 2020 2075 6e73 6967 6e65 6420         unsigned 
004c000: 696e 7420 726c 656e 2c20 636f 6e73 7420  int rlen, const 
004c010: 6368 6172 202a 2072 6561 6c6d 2c20 2e2e  char * realm, ..
004c020: 2e29 3b0a 2320 3430 3531 2022 2f75 7372  .);.# 4051 "/usr
004c030: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
004c040: 6235 2e68 2220 3320 340a 6b72 6235 5f65  b5.h" 3 4.krb5_e
004c050: 7272 6f72 5f63 6f64 650a 6b72 6235 5f62  rror_code.krb5_b
004c060: 7569 6c64 5f70 7269 6e63 6970 616c 286b  uild_principal(k
004c070: 7262 355f 636f 6e74 6578 7420 636f 6e74  rb5_context cont
004c080: 6578 742c 0a20 2020 2020 2020 2020 2020  ext,.           
004c090: 2020 2020 2020 2020 2020 6b72 6235 5f70            krb5_p
004c0a0: 7269 6e63 6970 616c 202a 2070 7269 6e63  rincipal * princ
004c0b0: 2c0a 2020 2020 2020 2020 2020 2020 2020  ,.              
004c0c0: 2020 2020 2020 2075 6e73 6967 6e65 6420         unsigned 
004c0d0: 696e 7420 726c 656e 2c0a 2020 2020 2020  int rlen,.      
004c0e0: 2020 2020 2020 2020 2020 2020 2020 2063                 c
004c0f0: 6f6e 7374 2063 6861 7220 2a20 7265 616c  onst char * real
004c100: 6d2c 202e 2e2e 290a 0a20 2020 205f 5f61  m, ...)..    __a
004c110: 7474 7269 6275 7465 5f5f 2028 2873 656e  ttribute__ ((sen
004c120: 7469 6e65 6c29 290a 0a20 2020 203b 0a23  tinel))..    ;.#
004c130: 2034 3039 3820 222f 7573 722f 696e 636c   4098 "/usr/incl
004c140: 7564 652f 6b72 6235 2f6b 7262 352e 6822  ude/krb5/krb5.h"
004c150: 2033 2034 0a6b 7262 355f 6572 726f 725f   3 4.krb5_error_
004c160: 636f 6465 0a6b 7262 355f 6275 696c 645f  code.krb5_build_
004c170: 7072 696e 6369 7061 6c5f 616c 6c6f 635f  principal_alloc_
004c180: 7661 286b 7262 355f 636f 6e74 6578 7420  va(krb5_context 
004c190: 636f 6e74 6578 742c 0a20 2020 2020 2020  context,.       
004c1a0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004c1b0: 2020 2020 2020 206b 7262 355f 7072 696e         krb5_prin
004c1c0: 6369 7061 6c20 2a70 7269 6e63 2c0a 2020  cipal *princ,.  
004c1d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004c1e0: 2020 2020 2020 2020 2020 2020 756e 7369              unsi
004c1f0: 676e 6564 2069 6e74 2072 6c65 6e2c 0a20  gned int rlen,. 
004c200: 2020 2020 2020 2020 2020 2020 2020 2020                  
004c210: 2020 2020 2020 2020 2020 2020 2063 6f6e               con
004c220: 7374 2063 6861 7220 2a72 6561 6c6d 2c0a  st char *realm,.
004c230: 2020 2020 2020 2020 2020 2020 2020 2020                  
004c240: 2020 2020 2020 2020 2020 2020 2020 7661                va
004c250: 5f6c 6973 7420 6170 293b 0a23 2034 3132  _list ap);.# 412
004c260: 3120 222f 7573 722f 696e 636c 7564 652f  1 "/usr/include/
004c270: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
004c280: 0a6b 7262 355f 6572 726f 725f 636f 6465  .krb5_error_code
004c290: 0a6b 7262 355f 3432 355f 636f 6e76 5f70  .krb5_425_conv_p
004c2a0: 7269 6e63 6970 616c 286b 7262 355f 636f  rincipal(krb5_co
004c2b0: 6e74 6578 7420 636f 6e74 6578 742c 2063  ntext context, c
004c2c0: 6f6e 7374 2063 6861 7220 2a6e 616d 652c  onst char *name,
004c2d0: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
004c2e0: 2020 2020 2020 2020 2063 6f6e 7374 2063           const c
004c2f0: 6861 7220 2a69 6e73 7461 6e63 652c 2063  har *instance, c
004c300: 6f6e 7374 2063 6861 7220 2a72 6561 6c6d  onst char *realm
004c310: 2c0a 2020 2020 2020 2020 2020 2020 2020  ,.              
004c320: 2020 2020 2020 2020 2020 6b72 6235 5f70            krb5_p
004c330: 7269 6e63 6970 616c 202a 7072 696e 6329  rincipal *princ)
004c340: 3b0a 2320 3431 3437 2022 2f75 7372 2f69  ;.# 4147 "/usr/i
004c350: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
004c360: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
004c370: 6f72 5f63 6f64 650a 6b72 6235 5f35 3234  or_code.krb5_524
004c380: 5f63 6f6e 765f 7072 696e 6369 7061 6c28  _conv_principal(
004c390: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
004c3a0: 7465 7874 2c20 6b72 6235 5f63 6f6e 7374  text, krb5_const
004c3b0: 5f70 7269 6e63 6970 616c 2070 7269 6e63  _principal princ
004c3c0: 2c0a 2020 2020 2020 2020 2020 2020 2020  ,.              
004c3d0: 2020 2020 2020 2020 2020 6368 6172 202a            char *
004c3e0: 6e61 6d65 2c20 6368 6172 202a 696e 7374  name, char *inst
004c3f0: 2c20 6368 6172 202a 7265 616c 6d29 3b0a  , char *realm);.
004c400: 0a0a 0a73 7472 7563 7420 6372 6564 656e  ...struct creden
004c410: 7469 616c 733b 0a23 2034 3136 3220 222f  tials;.# 4162 "/
004c420: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
004c430: 2f6b 7262 352e 6822 2033 2034 0a69 6e74  /krb5.h" 3 4.int
004c440: 0a6b 7262 355f 3532 345f 636f 6e76 6572  .krb5_524_conver
004c450: 745f 6372 6564 7328 6b72 6235 5f63 6f6e  t_creds(krb5_con
004c460: 7465 7874 2063 6f6e 7465 7874 2c20 6b72  text context, kr
004c470: 6235 5f63 7265 6473 202a 7635 6372 6564  b5_creds *v5cred
004c480: 732c 0a20 2020 2020 2020 2020 2020 2020  s,.             
004c490: 2020 2020 2020 2020 2020 7374 7275 6374            struct
004c4a0: 2063 7265 6465 6e74 6961 6c73 202a 7634   credentials *v4
004c4b0: 6372 6564 7329 3b0a 2320 3431 3938 2022  creds);.# 4198 "
004c4c0: 2f75 7372 2f69 6e63 6c75 6465 2f6b 7262  /usr/include/krb
004c4d0: 352f 6b72 6235 2e68 2220 3320 340a 6b72  5/krb5.h" 3 4.kr
004c4e0: 6235 5f65 7272 6f72 5f63 6f64 650a 6b72  b5_error_code.kr
004c4f0: 6235 5f6b 745f 7265 736f 6c76 6528 6b72  b5_kt_resolve(kr
004c500: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
004c510: 7874 2c20 636f 6e73 7420 6368 6172 202a  xt, const char *
004c520: 6e61 6d65 2c20 6b72 6235 5f6b 6579 7461  name, krb5_keyta
004c530: 6220 2a6b 7469 6429 3b0a 2320 3432 3133  b *ktid);.# 4213
004c540: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
004c550: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
004c560: 6b72 6235 5f65 7272 6f72 5f63 6f64 650a  krb5_error_code.
004c570: 6b72 6235 5f6b 745f 6475 7028 6b72 6235  krb5_kt_dup(krb5
004c580: 5f63 6f6e 7465 7874 2063 6f6e 7465 7874  _context context
004c590: 2c20 6b72 6235 5f6b 6579 7461 6220 696e  , krb5_keytab in
004c5a0: 2c20 6b72 6235 5f6b 6579 7461 6220 2a6f  , krb5_keytab *o
004c5b0: 7574 293b 0a23 2034 3233 3420 222f 7573  ut);.# 4234 "/us
004c5c0: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
004c5d0: 7262 352e 6822 2033 2034 0a6b 7262 355f  rb5.h" 3 4.krb5_
004c5e0: 6572 726f 725f 636f 6465 0a6b 7262 355f  error_code.krb5_
004c5f0: 6b74 5f64 6566 6175 6c74 5f6e 616d 6528  kt_default_name(
004c600: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
004c610: 7465 7874 2c20 6368 6172 202a 6e61 6d65  text, char *name
004c620: 2c20 696e 7420 6e61 6d65 5f73 697a 6529  , int name_size)
004c630: 3b0a 2320 3432 3531 2022 2f75 7372 2f69  ;.# 4251 "/usr/i
004c640: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
004c650: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
004c660: 6f72 5f63 6f64 650a 6b72 6235 5f6b 745f  or_code.krb5_kt_
004c670: 6465 6661 756c 7428 6b72 6235 5f63 6f6e  default(krb5_con
004c680: 7465 7874 2063 6f6e 7465 7874 2c20 6b72  text context, kr
004c690: 6235 5f6b 6579 7461 6220 2a69 6429 3b0a  b5_keytab *id);.
004c6a0: 2320 3432 3639 2022 2f75 7372 2f69 6e63  # 4269 "/usr/inc
004c6b0: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
004c6c0: 2220 3320 340a 6b72 6235 5f65 7272 6f72  " 3 4.krb5_error
004c6d0: 5f63 6f64 650a 6b72 6235 5f6b 745f 636c  _code.krb5_kt_cl
004c6e0: 6965 6e74 5f64 6566 6175 6c74 286b 7262  ient_default(krb
004c6f0: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
004c700: 742c 206b 7262 355f 6b65 7974 6162 202a  t, krb5_keytab *
004c710: 6b65 7974 6162 5f6f 7574 293b 0a23 2034  keytab_out);.# 4
004c720: 3238 3220 222f 7573 722f 696e 636c 7564  282 "/usr/includ
004c730: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
004c740: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
004c750: 6465 0a6b 7262 355f 6672 6565 5f6b 6579  de.krb5_free_key
004c760: 7461 625f 656e 7472 795f 636f 6e74 656e  tab_entry_conten
004c770: 7473 286b 7262 355f 636f 6e74 6578 7420  ts(krb5_context 
004c780: 636f 6e74 6578 742c 206b 7262 355f 6b65  context, krb5_ke
004c790: 7974 6162 5f65 6e74 7279 202a 656e 7472  ytab_entry *entr
004c7a0: 7929 3b0a 0a0a 6b72 6235 5f65 7272 6f72  y);...krb5_error
004c7b0: 5f63 6f64 650a 6b72 6235 5f6b 745f 6672  _code.krb5_kt_fr
004c7c0: 6565 5f65 6e74 7279 286b 7262 355f 636f  ee_entry(krb5_co
004c7d0: 6e74 6578 7420 636f 6e74 6578 742c 206b  ntext context, k
004c7e0: 7262 355f 6b65 7974 6162 5f65 6e74 7279  rb5_keytab_entry
004c7f0: 202a 656e 7472 7929 3b0a 2320 3433 3037   *entry);.# 4307
004c800: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
004c810: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
004c820: 6b72 6235 5f65 7272 6f72 5f63 6f64 650a  krb5_error_code.
004c830: 6b72 6235 5f6b 745f 7265 6d6f 7665 5f65  krb5_kt_remove_e
004c840: 6e74 7279 286b 7262 355f 636f 6e74 6578  ntry(krb5_contex
004c850: 7420 636f 6e74 6578 742c 206b 7262 355f  t context, krb5_
004c860: 6b65 7974 6162 2069 642c 206b 7262 355f  keytab id, krb5_
004c870: 6b65 7974 6162 5f65 6e74 7279 202a 656e  keytab_entry *en
004c880: 7472 7929 3b0a 2320 3433 3236 2022 2f75  try);.# 4326 "/u
004c890: 7372 2f69 6e63 6c75 6465 2f6b 7262 352f  sr/include/krb5/
004c8a0: 6b72 6235 2e68 2220 3320 340a 6b72 6235  krb5.h" 3 4.krb5
004c8b0: 5f65 7272 6f72 5f63 6f64 650a 6b72 6235  _error_code.krb5
004c8c0: 5f6b 745f 6164 645f 656e 7472 7928 6b72  _kt_add_entry(kr
004c8d0: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
004c8e0: 7874 2c20 6b72 6235 5f6b 6579 7461 6220  xt, krb5_keytab 
004c8f0: 6964 2c20 6b72 6235 5f6b 6579 7461 625f  id, krb5_keytab_
004c900: 656e 7472 7920 2a65 6e74 7279 293b 0a23  entry *entry);.#
004c910: 2034 3333 3820 222f 7573 722f 696e 636c   4338 "/usr/incl
004c920: 7564 652f 6b72 6235 2f6b 7262 352e 6822  ude/krb5/krb5.h"
004c930: 2033 2034 0a6b 7262 355f 6572 726f 725f   3 4.krb5_error_
004c940: 636f 6465 0a6b 7262 355f 7072 696e 6369  code.krb5_princi
004c950: 7061 6c32 7361 6c74 286b 7262 355f 636f  pal2salt(krb5_co
004c960: 6e74 6578 7420 636f 6e74 6578 742c 0a20  ntext context,. 
004c970: 2020 2020 2020 2020 2020 2020 2020 2020                  
004c980: 2020 2072 6567 6973 7465 7220 6b72 6235     register krb5
004c990: 5f63 6f6e 7374 5f70 7269 6e63 6970 616c  _const_principal
004c9a0: 2070 722c 206b 7262 355f 6461 7461 202a   pr, krb5_data *
004c9b0: 7265 7429 3b0a 2320 3433 3636 2022 2f75  ret);.# 4366 "/u
004c9c0: 7372 2f69 6e63 6c75 6465 2f6b 7262 352f  sr/include/krb5/
004c9d0: 6b72 6235 2e68 2220 3320 340a 6b72 6235  krb5.h" 3 4.krb5
004c9e0: 5f65 7272 6f72 5f63 6f64 650a 6b72 6235  _error_code.krb5
004c9f0: 5f63 635f 7265 736f 6c76 6528 6b72 6235  _cc_resolve(krb5
004ca00: 5f63 6f6e 7465 7874 2063 6f6e 7465 7874  _context context
004ca10: 2c20 636f 6e73 7420 6368 6172 202a 6e61  , const char *na
004ca20: 6d65 2c20 6b72 6235 5f63 6361 6368 6520  me, krb5_ccache 
004ca30: 2a63 6163 6865 293b 0a23 2034 3337 3920  *cache);.# 4379 
004ca40: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
004ca50: 6235 2f6b 7262 352e 6822 2033 2034 0a6b  b5/krb5.h" 3 4.k
004ca60: 7262 355f 6572 726f 725f 636f 6465 0a6b  rb5_error_code.k
004ca70: 7262 355f 6363 5f64 7570 286b 7262 355f  rb5_cc_dup(krb5_
004ca80: 636f 6e74 6578 7420 636f 6e74 6578 742c  context context,
004ca90: 206b 7262 355f 6363 6163 6865 2069 6e2c   krb5_ccache in,
004caa0: 206b 7262 355f 6363 6163 6865 202a 6f75   krb5_ccache *ou
004cab0: 7429 3b0a 2320 3434 3035 2022 2f75 7372  t);.# 4405 "/usr
004cac0: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
004cad0: 6235 2e68 2220 3320 340a 636f 6e73 7420  b5.h" 3 4.const 
004cae0: 6368 6172 202a 0a6b 7262 355f 6363 5f64  char *.krb5_cc_d
004caf0: 6566 6175 6c74 5f6e 616d 6528 6b72 6235  efault_name(krb5
004cb00: 5f63 6f6e 7465 7874 2063 6f6e 7465 7874  _context context
004cb10: 293b 0a23 2034 3432 3820 222f 7573 722f  );.# 4428 "/usr/
004cb20: 696e 636c 7564 652f 6b72 6235 2f6b 7262  include/krb5/krb
004cb30: 352e 6822 2033 2034 0a6b 7262 355f 6572  5.h" 3 4.krb5_er
004cb40: 726f 725f 636f 6465 0a6b 7262 355f 6363  ror_code.krb5_cc
004cb50: 5f73 6574 5f64 6566 6175 6c74 5f6e 616d  _set_default_nam
004cb60: 6528 6b72 6235 5f63 6f6e 7465 7874 2063  e(krb5_context c
004cb70: 6f6e 7465 7874 2c20 636f 6e73 7420 6368  ontext, const ch
004cb80: 6172 202a 6e61 6d65 293b 0a23 2034 3435  ar *name);.# 445
004cb90: 3020 222f 7573 722f 696e 636c 7564 652f  0 "/usr/include/
004cba0: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
004cbb0: 0a6b 7262 355f 6572 726f 725f 636f 6465  .krb5_error_code
004cbc0: 0a6b 7262 355f 6363 5f64 6566 6175 6c74  .krb5_cc_default
004cbd0: 286b 7262 355f 636f 6e74 6578 7420 636f  (krb5_context co
004cbe0: 6e74 6578 742c 206b 7262 355f 6363 6163  ntext, krb5_ccac
004cbf0: 6865 202a 6363 6163 6865 293b 0a23 2034  he *ccache);.# 4
004cc00: 3436 3220 222f 7573 722f 696e 636c 7564  462 "/usr/includ
004cc10: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
004cc20: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
004cc30: 6465 0a6b 7262 355f 6363 5f63 6f70 795f  de.krb5_cc_copy_
004cc40: 6372 6564 7328 6b72 6235 5f63 6f6e 7465  creds(krb5_conte
004cc50: 7874 2063 6f6e 7465 7874 2c20 6b72 6235  xt context, krb5
004cc60: 5f63 6361 6368 6520 696e 6363 2c20 6b72  _ccache incc, kr
004cc70: 6235 5f63 6361 6368 6520 6f75 7463 6329  b5_ccache outcc)
004cc80: 3b0a 2320 3434 3832 2022 2f75 7372 2f69  ;.# 4482 "/usr/i
004cc90: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
004cca0: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
004ccb0: 6f72 5f63 6f64 650a 6b72 6235 5f63 635f  or_code.krb5_cc_
004ccc0: 6765 745f 636f 6e66 6967 286b 7262 355f  get_config(krb5_
004ccd0: 636f 6e74 6578 7420 636f 6e74 6578 742c  context context,
004cce0: 206b 7262 355f 6363 6163 6865 2069 642c   krb5_ccache id,
004ccf0: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
004cd00: 2020 2020 6b72 6235 5f63 6f6e 7374 5f70      krb5_const_p
004cd10: 7269 6e63 6970 616c 2070 7269 6e63 6970  rincipal princip
004cd20: 616c 2c0a 2020 2020 2020 2020 2020 2020  al,.            
004cd30: 2020 2020 2020 2063 6f6e 7374 2063 6861         const cha
004cd40: 7220 2a6b 6579 2c20 6b72 6235 5f64 6174  r *key, krb5_dat
004cd50: 6120 2a64 6174 6129 3b0a 2320 3435 3036  a *data);.# 4506
004cd60: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
004cd70: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
004cd80: 6b72 6235 5f65 7272 6f72 5f63 6f64 650a  krb5_error_code.
004cd90: 6b72 6235 5f63 635f 7365 745f 636f 6e66  krb5_cc_set_conf
004cda0: 6967 286b 7262 355f 636f 6e74 6578 7420  ig(krb5_context 
004cdb0: 636f 6e74 6578 742c 206b 7262 355f 6363  context, krb5_cc
004cdc0: 6163 6865 2069 642c 0a20 2020 2020 2020  ache id,.       
004cdd0: 2020 2020 2020 2020 2020 2020 6b72 6235              krb5
004cde0: 5f63 6f6e 7374 5f70 7269 6e63 6970 616c  _const_principal
004cdf0: 2070 7269 6e63 6970 616c 2c0a 2020 2020   principal,.    
004ce00: 2020 2020 2020 2020 2020 2020 2020 2063                 c
004ce10: 6f6e 7374 2063 6861 7220 2a6b 6579 2c20  onst char *key, 
004ce20: 6b72 6235 5f64 6174 6120 2a64 6174 6129  krb5_data *data)
004ce30: 3b0a 2320 3435 3231 2022 2f75 7372 2f69  ;.# 4521 "/usr/i
004ce40: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
004ce50: 2e68 2220 3320 340a 6b72 6235 5f62 6f6f  .h" 3 4.krb5_boo
004ce60: 6c65 616e 0a6b 7262 355f 6973 5f63 6f6e  lean.krb5_is_con
004ce70: 6669 675f 7072 696e 6369 7061 6c28 6b72  fig_principal(kr
004ce80: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
004ce90: 7874 2c20 6b72 6235 5f63 6f6e 7374 5f70  xt, krb5_const_p
004cea0: 7269 6e63 6970 616c 2070 7269 6e63 6970  rincipal princip
004ceb0: 616c 293b 0a23 2034 3533 3820 222f 7573  al);.# 4538 "/us
004cec0: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
004ced0: 7262 352e 6822 2033 2034 0a6b 7262 355f  rb5.h" 3 4.krb5_
004cee0: 6572 726f 725f 636f 6465 0a6b 7262 355f  error_code.krb5_
004cef0: 6363 5f73 7769 7463 6828 6b72 6235 5f63  cc_switch(krb5_c
004cf00: 6f6e 7465 7874 2063 6f6e 7465 7874 2c20  ontext context, 
004cf10: 6b72 6235 5f63 6361 6368 6520 6361 6368  krb5_ccache cach
004cf20: 6529 3b0a 2320 3435 3532 2022 2f75 7372  e);.# 4552 "/usr
004cf30: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
004cf40: 6235 2e68 2220 3320 340a 6b72 6235 5f62  b5.h" 3 4.krb5_b
004cf50: 6f6f 6c65 616e 0a6b 7262 355f 6363 5f73  oolean.krb5_cc_s
004cf60: 7570 706f 7274 5f73 7769 7463 6828 6b72  upport_switch(kr
004cf70: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
004cf80: 7874 2c20 636f 6e73 7420 6368 6172 202a  xt, const char *
004cf90: 7479 7065 293b 0a23 2034 3537 3220 222f  type);.# 4572 "/
004cfa0: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
004cfb0: 2f6b 7262 352e 6822 2033 2034 0a6b 7262  /krb5.h" 3 4.krb
004cfc0: 355f 6572 726f 725f 636f 6465 0a6b 7262  5_error_code.krb
004cfd0: 355f 6363 5f63 6163 6865 5f6d 6174 6368  5_cc_cache_match
004cfe0: 286b 7262 355f 636f 6e74 6578 7420 636f  (krb5_context co
004cff0: 6e74 6578 742c 206b 7262 355f 7072 696e  ntext, krb5_prin
004d000: 6369 7061 6c20 636c 6965 6e74 2c0a 2020  cipal client,.  
004d010: 2020 2020 2020 2020 2020 2020 2020 2020                  
004d020: 2020 6b72 6235 5f63 6361 6368 6520 2a63    krb5_ccache *c
004d030: 6163 6865 5f6f 7574 293b 0a23 2034 3631  ache_out);.# 461
004d040: 3020 222f 7573 722f 696e 636c 7564 652f  0 "/usr/include/
004d050: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
004d060: 0a6b 7262 355f 6572 726f 725f 636f 6465  .krb5_error_code
004d070: 0a6b 7262 355f 6363 5f73 656c 6563 7428  .krb5_cc_select(
004d080: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
004d090: 7465 7874 2c20 6b72 6235 5f70 7269 6e63  text, krb5_princ
004d0a0: 6970 616c 2073 6572 7665 722c 0a20 2020  ipal server,.   
004d0b0: 2020 2020 2020 2020 2020 2020 6b72 6235              krb5
004d0c0: 5f63 6361 6368 6520 2a63 6163 6865 5f6f  _ccache *cache_o
004d0d0: 7574 2c20 6b72 6235 5f70 7269 6e63 6970  ut, krb5_princip
004d0e0: 616c 202a 7072 696e 635f 6f75 7429 3b0a  al *princ_out);.
004d0f0: 2320 3436 3231 2022 2f75 7372 2f69 6e63  # 4621 "/usr/inc
004d100: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
004d110: 2220 3320 340a 766f 6964 0a6b 7262 355f  " 3 4.void.krb5_
004d120: 6672 6565 5f70 7269 6e63 6970 616c 286b  free_principal(k
004d130: 7262 355f 636f 6e74 6578 7420 636f 6e74  rb5_context cont
004d140: 6578 742c 206b 7262 355f 7072 696e 6369  ext, krb5_princi
004d150: 7061 6c20 7661 6c29 3b0a 2320 3436 3332  pal val);.# 4632
004d160: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
004d170: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
004d180: 766f 6964 0a6b 7262 355f 6672 6565 5f61  void.krb5_free_a
004d190: 7574 6865 6e74 6963 6174 6f72 286b 7262  uthenticator(krb
004d1a0: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
004d1b0: 742c 206b 7262 355f 6175 7468 656e 7469  t, krb5_authenti
004d1c0: 6361 746f 7220 2a76 616c 293b 0a23 2034  cator *val);.# 4
004d1d0: 3634 3520 222f 7573 722f 696e 636c 7564  645 "/usr/includ
004d1e0: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
004d1f0: 2034 0a76 6f69 640a 6b72 6235 5f66 7265   4.void.krb5_fre
004d200: 655f 6164 6472 6573 7365 7328 6b72 6235  e_addresses(krb5
004d210: 5f63 6f6e 7465 7874 2063 6f6e 7465 7874  _context context
004d220: 2c20 6b72 6235 5f61 6464 7265 7373 202a  , krb5_address *
004d230: 2a76 616c 293b 0a23 2034 3635 3820 222f  *val);.# 4658 "/
004d240: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
004d250: 2f6b 7262 352e 6822 2033 2034 0a76 6f69  /krb5.h" 3 4.voi
004d260: 640a 6b72 6235 5f66 7265 655f 6175 7468  d.krb5_free_auth
004d270: 6461 7461 286b 7262 355f 636f 6e74 6578  data(krb5_contex
004d280: 7420 636f 6e74 6578 742c 206b 7262 355f  t context, krb5_
004d290: 6175 7468 6461 7461 202a 2a76 616c 293b  authdata **val);
004d2a0: 0a23 2034 3636 3920 222f 7573 722f 696e  .# 4669 "/usr/in
004d2b0: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
004d2c0: 6822 2033 2034 0a76 6f69 640a 6b72 6235  h" 3 4.void.krb5
004d2d0: 5f66 7265 655f 7469 636b 6574 286b 7262  _free_ticket(krb
004d2e0: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
004d2f0: 742c 206b 7262 355f 7469 636b 6574 202a  t, krb5_ticket *
004d300: 7661 6c29 3b0a 2320 3436 3830 2022 2f75  val);.# 4680 "/u
004d310: 7372 2f69 6e63 6c75 6465 2f6b 7262 352f  sr/include/krb5/
004d320: 6b72 6235 2e68 2220 3320 340a 766f 6964  krb5.h" 3 4.void
004d330: 0a6b 7262 355f 6672 6565 5f65 7272 6f72  .krb5_free_error
004d340: 286b 7262 355f 636f 6e74 6578 7420 636f  (krb5_context co
004d350: 6e74 6578 742c 2072 6567 6973 7465 7220  ntext, register 
004d360: 6b72 6235 5f65 7272 6f72 202a 7661 6c29  krb5_error *val)
004d370: 3b0a 2320 3436 3931 2022 2f75 7372 2f69  ;.# 4691 "/usr/i
004d380: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
004d390: 2e68 2220 3320 340a 766f 6964 0a6b 7262  .h" 3 4.void.krb
004d3a0: 355f 6672 6565 5f63 7265 6473 286b 7262  5_free_creds(krb
004d3b0: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
004d3c0: 742c 206b 7262 355f 6372 6564 7320 2a76  t, krb5_creds *v
004d3d0: 616c 293b 0a23 2034 3730 3220 222f 7573  al);.# 4702 "/us
004d3e0: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
004d3f0: 7262 352e 6822 2033 2034 0a76 6f69 640a  rb5.h" 3 4.void.
004d400: 6b72 6235 5f66 7265 655f 6372 6564 5f63  krb5_free_cred_c
004d410: 6f6e 7465 6e74 7328 6b72 6235 5f63 6f6e  ontents(krb5_con
004d420: 7465 7874 2063 6f6e 7465 7874 2c20 6b72  text context, kr
004d430: 6235 5f63 7265 6473 202a 7661 6c29 3b0a  b5_creds *val);.
004d440: 2320 3437 3133 2022 2f75 7372 2f69 6e63  # 4713 "/usr/inc
004d450: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
004d460: 2220 3320 340a 766f 6964 0a6b 7262 355f  " 3 4.void.krb5_
004d470: 6672 6565 5f63 6865 636b 7375 6d28 6b72  free_checksum(kr
004d480: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
004d490: 7874 2c20 7265 6769 7374 6572 206b 7262  xt, register krb
004d4a0: 355f 6368 6563 6b73 756d 202a 7661 6c29  5_checksum *val)
004d4b0: 3b0a 2320 3437 3234 2022 2f75 7372 2f69  ;.# 4724 "/usr/i
004d4c0: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
004d4d0: 2e68 2220 3320 340a 766f 6964 0a6b 7262  .h" 3 4.void.krb
004d4e0: 355f 6672 6565 5f63 6865 636b 7375 6d5f  5_free_checksum_
004d4f0: 636f 6e74 656e 7473 286b 7262 355f 636f  contents(krb5_co
004d500: 6e74 6578 7420 636f 6e74 6578 742c 2072  ntext context, r
004d510: 6567 6973 7465 7220 6b72 6235 5f63 6865  egister krb5_che
004d520: 636b 7375 6d20 2a76 616c 293b 0a23 2034  cksum *val);.# 4
004d530: 3733 3520 222f 7573 722f 696e 636c 7564  735 "/usr/includ
004d540: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
004d550: 2034 0a76 6f69 640a 6b72 6235 5f66 7265   4.void.krb5_fre
004d560: 655f 6b65 7962 6c6f 636b 286b 7262 355f  e_keyblock(krb5_
004d570: 636f 6e74 6578 7420 636f 6e74 6578 742c  context context,
004d580: 2072 6567 6973 7465 7220 6b72 6235 5f6b   register krb5_k
004d590: 6579 626c 6f63 6b20 2a76 616c 293b 0a23  eyblock *val);.#
004d5a0: 2034 3734 3620 222f 7573 722f 696e 636c   4746 "/usr/incl
004d5b0: 7564 652f 6b72 6235 2f6b 7262 352e 6822  ude/krb5/krb5.h"
004d5c0: 2033 2034 0a76 6f69 640a 6b72 6235 5f66   3 4.void.krb5_f
004d5d0: 7265 655f 6b65 7962 6c6f 636b 5f63 6f6e  ree_keyblock_con
004d5e0: 7465 6e74 7328 6b72 6235 5f63 6f6e 7465  tents(krb5_conte
004d5f0: 7874 2063 6f6e 7465 7874 2c20 7265 6769  xt context, regi
004d600: 7374 6572 206b 7262 355f 6b65 7962 6c6f  ster krb5_keyblo
004d610: 636b 202a 6b65 7929 3b0a 2320 3437 3537  ck *key);.# 4757
004d620: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
004d630: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
004d640: 766f 6964 0a6b 7262 355f 6672 6565 5f61  void.krb5_free_a
004d650: 705f 7265 705f 656e 635f 7061 7274 286b  p_rep_enc_part(k
004d660: 7262 355f 636f 6e74 6578 7420 636f 6e74  rb5_context cont
004d670: 6578 742c 206b 7262 355f 6170 5f72 6570  ext, krb5_ap_rep
004d680: 5f65 6e63 5f70 6172 7420 2a76 616c 293b  _enc_part *val);
004d690: 0a23 2034 3736 3820 222f 7573 722f 696e  .# 4768 "/usr/in
004d6a0: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
004d6b0: 6822 2033 2034 0a76 6f69 640a 6b72 6235  h" 3 4.void.krb5
004d6c0: 5f66 7265 655f 6461 7461 286b 7262 355f  _free_data(krb5_
004d6d0: 636f 6e74 6578 7420 636f 6e74 6578 742c  context context,
004d6e0: 206b 7262 355f 6461 7461 202a 7661 6c29   krb5_data *val)
004d6f0: 3b0a 0a0a 766f 6964 0a6b 7262 355f 6672  ;...void.krb5_fr
004d700: 6565 5f6f 6374 6574 5f64 6174 6128 6b72  ee_octet_data(kr
004d710: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
004d720: 7874 2c20 6b72 6235 5f6f 6374 6574 5f64  xt, krb5_octet_d
004d730: 6174 6120 2a76 616c 293b 0a23 2034 3738  ata *val);.# 478
004d740: 3320 222f 7573 722f 696e 636c 7564 652f  3 "/usr/include/
004d750: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
004d760: 0a76 6f69 640a 6b72 6235 5f66 7265 655f  .void.krb5_free_
004d770: 6461 7461 5f63 6f6e 7465 6e74 7328 6b72  data_contents(kr
004d780: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
004d790: 7874 2c20 6b72 6235 5f64 6174 6120 2a76  xt, krb5_data *v
004d7a0: 616c 293b 0a0a 0a0a 0a0a 0a0a 766f 6964  al);........void
004d7b0: 0a6b 7262 355f 6672 6565 5f75 6e70 6172  .krb5_free_unpar
004d7c0: 7365 645f 6e61 6d65 286b 7262 355f 636f  sed_name(krb5_co
004d7d0: 6e74 6578 7420 636f 6e74 6578 742c 2063  ntext context, c
004d7e0: 6861 7220 2a76 616c 293b 0a23 2034 3830  har *val);.# 480
004d7f0: 3320 222f 7573 722f 696e 636c 7564 652f  3 "/usr/include/
004d800: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
004d810: 0a76 6f69 640a 6b72 6235 5f66 7265 655f  .void.krb5_free_
004d820: 7374 7269 6e67 286b 7262 355f 636f 6e74  string(krb5_cont
004d830: 6578 7420 636f 6e74 6578 742c 2063 6861  ext context, cha
004d840: 7220 2a76 616c 293b 0a23 2034 3831 3420  r *val);.# 4814 
004d850: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
004d860: 6235 2f6b 7262 352e 6822 2033 2034 0a76  b5/krb5.h" 3 4.v
004d870: 6f69 640a 6b72 6235 5f66 7265 655f 656e  oid.krb5_free_en
004d880: 6374 7970 6573 286b 7262 355f 636f 6e74  ctypes(krb5_cont
004d890: 6578 7420 636f 6e74 6578 742c 206b 7262  ext context, krb
004d8a0: 355f 656e 6374 7970 6520 2a76 616c 293b  5_enctype *val);
004d8b0: 0a0a 0a0a 0a0a 0a0a 766f 6964 0a6b 7262  ........void.krb
004d8c0: 355f 6672 6565 5f63 6b73 756d 7479 7065  5_free_cksumtype
004d8d0: 7328 6b72 6235 5f63 6f6e 7465 7874 2063  s(krb5_context c
004d8e0: 6f6e 7465 7874 2c20 6b72 6235 5f63 6b73  ontext, krb5_cks
004d8f0: 756d 7479 7065 202a 7661 6c29 3b0a 2320  umtype *val);.# 
004d900: 3438 3434 2022 2f75 7372 2f69 6e63 6c75  4844 "/usr/inclu
004d910: 6465 2f6b 7262 352f 6b72 6235 2e68 2220  de/krb5/krb5.h" 
004d920: 3320 340a 6b72 6235 5f65 7272 6f72 5f63  3 4.krb5_error_c
004d930: 6f64 650a 6b72 6235 5f75 735f 7469 6d65  ode.krb5_us_time
004d940: 6f66 6461 7928 6b72 6235 5f63 6f6e 7465  ofday(krb5_conte
004d950: 7874 2063 6f6e 7465 7874 2c0a 2020 2020  xt context,.    
004d960: 2020 2020 2020 2020 2020 2020 2020 6b72                kr
004d970: 6235 5f74 696d 6573 7461 6d70 202a 7365  b5_timestamp *se
004d980: 636f 6e64 732c 206b 7262 355f 696e 7433  conds, krb5_int3
004d990: 3220 2a6d 6963 726f 7365 636f 6e64 7329  2 *microseconds)
004d9a0: 3b0a 2320 3438 3632 2022 2f75 7372 2f69  ;.# 4862 "/usr/i
004d9b0: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
004d9c0: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
004d9d0: 6f72 5f63 6f64 650a 6b72 6235 5f74 696d  or_code.krb5_tim
004d9e0: 656f 6664 6179 286b 7262 355f 636f 6e74  eofday(krb5_cont
004d9f0: 6578 7420 636f 6e74 6578 742c 2072 6567  ext context, reg
004da00: 6973 7465 7220 6b72 6235 5f74 696d 6573  ister krb5_times
004da10: 7461 6d70 202a 7469 6d65 7265 7429 3b0a  tamp *timeret);.
004da20: 2320 3438 3739 2022 2f75 7372 2f69 6e63  # 4879 "/usr/inc
004da30: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
004da40: 2220 3320 340a 6b72 6235 5f65 7272 6f72  " 3 4.krb5_error
004da50: 5f63 6f64 650a 6b72 6235 5f63 6865 636b  _code.krb5_check
004da60: 5f63 6c6f 636b 736b 6577 286b 7262 355f  _clockskew(krb5_
004da70: 636f 6e74 6578 7420 636f 6e74 6578 742c  context context,
004da80: 206b 7262 355f 7469 6d65 7374 616d 7020   krb5_timestamp 
004da90: 6461 7465 293b 0a23 2034 3839 3320 222f  date);.# 4893 "/
004daa0: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
004dab0: 2f6b 7262 352e 6822 2033 2034 0a6b 7262  /krb5.h" 3 4.krb
004dac0: 355f 6572 726f 725f 636f 6465 0a6b 7262  5_error_code.krb
004dad0: 355f 6f73 5f6c 6f63 616c 6164 6472 286b  5_os_localaddr(k
004dae0: 7262 355f 636f 6e74 6578 7420 636f 6e74  rb5_context cont
004daf0: 6578 742c 206b 7262 355f 6164 6472 6573  ext, krb5_addres
004db00: 7320 2a2a 2a61 6464 7229 3b0a 2320 3439  s ***addr);.# 49
004db10: 3132 2022 2f75 7372 2f69 6e63 6c75 6465  12 "/usr/include
004db20: 2f6b 7262 352f 6b72 6235 2e68 2220 3320  /krb5/krb5.h" 3 
004db30: 340a 6b72 6235 5f65 7272 6f72 5f63 6f64  4.krb5_error_cod
004db40: 650a 6b72 6235 5f67 6574 5f64 6566 6175  e.krb5_get_defau
004db50: 6c74 5f72 6561 6c6d 286b 7262 355f 636f  lt_realm(krb5_co
004db60: 6e74 6578 7420 636f 6e74 6578 742c 2063  ntext context, c
004db70: 6861 7220 2a2a 6c72 6561 6c6d 293b 0a23  har **lrealm);.#
004db80: 2034 3932 3820 222f 7573 722f 696e 636c   4928 "/usr/incl
004db90: 7564 652f 6b72 6235 2f6b 7262 352e 6822  ude/krb5/krb5.h"
004dba0: 2033 2034 0a6b 7262 355f 6572 726f 725f   3 4.krb5_error_
004dbb0: 636f 6465 0a6b 7262 355f 7365 745f 6465  code.krb5_set_de
004dbc0: 6661 756c 745f 7265 616c 6d28 6b72 6235  fault_realm(krb5
004dbd0: 5f63 6f6e 7465 7874 2063 6f6e 7465 7874  _context context
004dbe0: 2c20 636f 6e73 7420 6368 6172 202a 6c72  , const char *lr
004dbf0: 6561 6c6d 293b 0a0a 0a0a 0a0a 0a0a 766f  ealm);........vo
004dc00: 6964 0a6b 7262 355f 6672 6565 5f64 6566  id.krb5_free_def
004dc10: 6175 6c74 5f72 6561 6c6d 286b 7262 355f  ault_realm(krb5_
004dc20: 636f 6e74 6578 7420 636f 6e74 6578 742c  context context,
004dc30: 2063 6861 7220 2a6c 7265 616c 6d29 3b0a   char *lrealm);.
004dc40: 2320 3439 3639 2022 2f75 7372 2f69 6e63  # 4969 "/usr/inc
004dc50: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
004dc60: 2220 3320 340a 6b72 6235 5f65 7272 6f72  " 3 4.krb5_error
004dc70: 5f63 6f64 650a 6b72 6235 5f73 6e61 6d65  _code.krb5_sname
004dc80: 5f74 6f5f 7072 696e 6369 7061 6c28 6b72  _to_principal(kr
004dc90: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
004dca0: 7874 2c20 636f 6e73 7420 6368 6172 202a  xt, const char *
004dcb0: 686f 7374 6e61 6d65 2c20 636f 6e73 7420  hostname, const 
004dcc0: 6368 6172 202a 736e 616d 652c 0a20 2020  char *sname,.   
004dcd0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004dce0: 2020 2020 206b 7262 355f 696e 7433 3220       krb5_int32 
004dcf0: 7479 7065 2c20 6b72 6235 5f70 7269 6e63  type, krb5_princ
004dd00: 6970 616c 202a 7265 745f 7072 696e 6329  ipal *ret_princ)
004dd10: 3b0a 2320 3439 3933 2022 2f75 7372 2f69  ;.# 4993 "/usr/i
004dd20: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
004dd30: 2e68 2220 3320 340a 6b72 6235 5f62 6f6f  .h" 3 4.krb5_boo
004dd40: 6c65 616e 0a6b 7262 355f 736e 616d 655f  lean.krb5_sname_
004dd50: 6d61 7463 6828 6b72 6235 5f63 6f6e 7465  match(krb5_conte
004dd60: 7874 2063 6f6e 7465 7874 2c20 6b72 6235  xt context, krb5
004dd70: 5f63 6f6e 7374 5f70 7269 6e63 6970 616c  _const_principal
004dd80: 206d 6174 6368 696e 672c 0a20 2020 2020   matching,.     
004dd90: 2020 2020 2020 2020 2020 2020 6b72 6235              krb5
004dda0: 5f63 6f6e 7374 5f70 7269 6e63 6970 616c  _const_principal
004ddb0: 2070 7269 6e63 293b 0a23 2035 3031 3920   princ);.# 5019 
004ddc0: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
004ddd0: 6235 2f6b 7262 352e 6822 2033 2034 0a6b  b5/krb5.h" 3 4.k
004dde0: 7262 355f 6572 726f 725f 636f 6465 0a6b  rb5_error_code.k
004ddf0: 7262 355f 6368 616e 6765 5f70 6173 7377  rb5_change_passw
004de00: 6f72 6428 6b72 6235 5f63 6f6e 7465 7874  ord(krb5_context
004de10: 2063 6f6e 7465 7874 2c20 6b72 6235 5f63   context, krb5_c
004de20: 7265 6473 202a 6372 6564 732c 2063 6861  reds *creds, cha
004de30: 7220 2a6e 6577 7077 2c0a 2020 2020 2020  r *newpw,.      
004de40: 2020 2020 2020 2020 2020 2020 2020 2069                 i
004de50: 6e74 202a 7265 7375 6c74 5f63 6f64 652c  nt *result_code,
004de60: 206b 7262 355f 6461 7461 202a 7265 7375   krb5_data *resu
004de70: 6c74 5f63 6f64 655f 7374 7269 6e67 2c0a  lt_code_string,.
004de80: 2020 2020 2020 2020 2020 2020 2020 2020                  
004de90: 2020 2020 206b 7262 355f 6461 7461 202a       krb5_data *
004dea0: 7265 7375 6c74 5f73 7472 696e 6729 3b0a  result_string);.
004deb0: 2320 3530 3534 2022 2f75 7372 2f69 6e63  # 5054 "/usr/inc
004dec0: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
004ded0: 2220 3320 340a 6b72 6235 5f65 7272 6f72  " 3 4.krb5_error
004dee0: 5f63 6f64 650a 6b72 6235 5f73 6574 5f70  _code.krb5_set_p
004def0: 6173 7377 6f72 6428 6b72 6235 5f63 6f6e  assword(krb5_con
004df00: 7465 7874 2063 6f6e 7465 7874 2c20 6b72  text context, kr
004df10: 6235 5f63 7265 6473 202a 6372 6564 732c  b5_creds *creds,
004df20: 2063 6861 7220 2a6e 6577 7077 2c0a 2020   char *newpw,.  
004df30: 2020 2020 2020 2020 2020 2020 2020 2020                  
004df40: 6b72 6235 5f70 7269 6e63 6970 616c 2063  krb5_principal c
004df50: 6861 6e67 655f 7061 7373 776f 7264 5f66  hange_password_f
004df60: 6f72 2c20 696e 7420 2a72 6573 756c 745f  or, int *result_
004df70: 636f 6465 2c0a 2020 2020 2020 2020 2020  code,.          
004df80: 2020 2020 2020 2020 6b72 6235 5f64 6174          krb5_dat
004df90: 6120 2a72 6573 756c 745f 636f 6465 5f73  a *result_code_s
004dfa0: 7472 696e 672c 206b 7262 355f 6461 7461  tring, krb5_data
004dfb0: 202a 7265 7375 6c74 5f73 7472 696e 6729   *result_string)
004dfc0: 3b0a 2320 3530 3839 2022 2f75 7372 2f69  ;.# 5089 "/usr/i
004dfd0: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
004dfe0: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
004dff0: 6f72 5f63 6f64 650a 6b72 6235 5f73 6574  or_code.krb5_set
004e000: 5f70 6173 7377 6f72 645f 7573 696e 675f  _password_using_
004e010: 6363 6163 6865 286b 7262 355f 636f 6e74  ccache(krb5_cont
004e020: 6578 7420 636f 6e74 6578 742c 206b 7262  ext context, krb
004e030: 355f 6363 6163 6865 2063 6361 6368 652c  5_ccache ccache,
004e040: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
004e050: 2020 2020 2020 2020 2020 2020 2020 2020                  
004e060: 6368 6172 202a 6e65 7770 772c 206b 7262  char *newpw, krb
004e070: 355f 7072 696e 6369 7061 6c20 6368 616e  5_principal chan
004e080: 6765 5f70 6173 7377 6f72 645f 666f 722c  ge_password_for,
004e090: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
004e0a0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004e0b0: 696e 7420 2a72 6573 756c 745f 636f 6465  int *result_code
004e0c0: 2c20 6b72 6235 5f64 6174 6120 2a72 6573  , krb5_data *res
004e0d0: 756c 745f 636f 6465 5f73 7472 696e 672c  ult_code_string,
004e0e0: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
004e0f0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004e100: 6b72 6235 5f64 6174 6120 2a72 6573 756c  krb5_data *resul
004e110: 745f 7374 7269 6e67 293b 0a23 2035 3131  t_string);.# 511
004e120: 3720 222f 7573 722f 696e 636c 7564 652f  7 "/usr/include/
004e130: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
004e140: 0a6b 7262 355f 6572 726f 725f 636f 6465  .krb5_error_code
004e150: 0a6b 7262 355f 6368 7077 5f6d 6573 7361  .krb5_chpw_messa
004e160: 6765 286b 7262 355f 636f 6e74 6578 7420  ge(krb5_context 
004e170: 636f 6e74 6578 742c 2063 6f6e 7374 206b  context, const k
004e180: 7262 355f 6461 7461 202a 7365 7276 6572  rb5_data *server
004e190: 5f73 7472 696e 672c 0a20 2020 2020 2020  _string,.       
004e1a0: 2020 2020 2020 2020 2020 2063 6861 7220             char 
004e1b0: 2a2a 6d65 7373 6167 655f 6f75 7429 3b0a  **message_out);.
004e1c0: 2320 3531 3338 2022 2f75 7372 2f69 6e63  # 5138 "/usr/inc
004e1d0: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
004e1e0: 2220 3320 340a 6b72 6235 5f65 7272 6f72  " 3 4.krb5_error
004e1f0: 5f63 6f64 650a 6b72 6235 5f67 6574 5f70  _code.krb5_get_p
004e200: 726f 6669 6c65 286b 7262 355f 636f 6e74  rofile(krb5_cont
004e210: 6578 7420 636f 6e74 6578 742c 2073 7472  ext context, str
004e220: 7563 7420 5f70 726f 6669 6c65 5f74 202a  uct _profile_t *
004e230: 2a20 7072 6f66 696c 6529 3b0a 2320 3532  * profile);.# 52
004e240: 3234 2022 2f75 7372 2f69 6e63 6c75 6465  24 "/usr/include
004e250: 2f6b 7262 352f 6b72 6235 2e68 2220 3320  /krb5/krb5.h" 3 
004e260: 340a 6b72 6235 5f65 7272 6f72 5f63 6f64  4.krb5_error_cod
004e270: 650a 6b72 6235 5f72 645f 7265 7128 6b72  e.krb5_rd_req(kr
004e280: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
004e290: 7874 2c20 6b72 6235 5f61 7574 685f 636f  xt, krb5_auth_co
004e2a0: 6e74 6578 7420 2a61 7574 685f 636f 6e74  ntext *auth_cont
004e2b0: 6578 742c 0a20 2020 2020 2020 2020 2020  ext,.           
004e2c0: 2063 6f6e 7374 206b 7262 355f 6461 7461   const krb5_data
004e2d0: 202a 696e 6275 662c 206b 7262 355f 636f   *inbuf, krb5_co
004e2e0: 6e73 745f 7072 696e 6369 7061 6c20 7365  nst_principal se
004e2f0: 7276 6572 2c0a 2020 2020 2020 2020 2020  rver,.          
004e300: 2020 6b72 6235 5f6b 6579 7461 6220 6b65    krb5_keytab ke
004e310: 7974 6162 2c20 6b72 6235 5f66 6c61 6773  ytab, krb5_flags
004e320: 202a 6170 5f72 6571 5f6f 7074 696f 6e73   *ap_req_options
004e330: 2c0a 2020 2020 2020 2020 2020 2020 6b72  ,.            kr
004e340: 6235 5f74 6963 6b65 7420 2a2a 7469 636b  b5_ticket **tick
004e350: 6574 293b 0a23 2035 3235 3220 222f 7573  et);.# 5252 "/us
004e360: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
004e370: 7262 352e 6822 2033 2034 0a6b 7262 355f  rb5.h" 3 4.krb5_
004e380: 6572 726f 725f 636f 6465 0a6b 7262 355f  error_code.krb5_
004e390: 6b74 5f72 6561 645f 7365 7276 6963 655f  kt_read_service_
004e3a0: 6b65 7928 6b72 6235 5f63 6f6e 7465 7874  key(krb5_context
004e3b0: 2063 6f6e 7465 7874 2c20 6b72 6235 5f70   context, krb5_p
004e3c0: 6f69 6e74 6572 206b 6579 7072 6f63 6172  ointer keyprocar
004e3d0: 672c 0a20 2020 2020 2020 2020 2020 2020  g,.             
004e3e0: 2020 2020 2020 2020 2020 2020 6b72 6235              krb5
004e3f0: 5f70 7269 6e63 6970 616c 2070 7269 6e63  _principal princ
004e400: 6970 616c 2c20 6b72 6235 5f6b 766e 6f20  ipal, krb5_kvno 
004e410: 766e 6f2c 0a20 2020 2020 2020 2020 2020  vno,.           
004e420: 2020 2020 2020 2020 2020 2020 2020 6b72                kr
004e430: 6235 5f65 6e63 7479 7065 2065 6e63 7479  b5_enctype encty
004e440: 7065 2c20 6b72 6235 5f6b 6579 626c 6f63  pe, krb5_keybloc
004e450: 6b20 2a2a 6b65 7929 3b0a 2320 3532 3935  k **key);.# 5295
004e460: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
004e470: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
004e480: 6b72 6235 5f65 7272 6f72 5f63 6f64 650a  krb5_error_code.
004e490: 6b72 6235 5f6d 6b5f 7361 6665 286b 7262  krb5_mk_safe(krb
004e4a0: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
004e4b0: 742c 206b 7262 355f 6175 7468 5f63 6f6e  t, krb5_auth_con
004e4c0: 7465 7874 2061 7574 685f 636f 6e74 6578  text auth_contex
004e4d0: 742c 0a20 2020 2020 2020 2020 2020 2020  t,.             
004e4e0: 636f 6e73 7420 6b72 6235 5f64 6174 6120  const krb5_data 
004e4f0: 2a75 7365 7264 6174 612c 206b 7262 355f  *userdata, krb5_
004e500: 6461 7461 202a 6f75 7462 7566 2c0a 2020  data *outbuf,.  
004e510: 2020 2020 2020 2020 2020 206b 7262 355f             krb5_
004e520: 7265 706c 6179 5f64 6174 6120 2a6f 7574  replay_data *out
004e530: 6461 7461 293b 0a23 2035 3333 3420 222f  data);.# 5334 "/
004e540: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
004e550: 2f6b 7262 352e 6822 2033 2034 0a6b 7262  /krb5.h" 3 4.krb
004e560: 355f 6572 726f 725f 636f 6465 0a6b 7262  5_error_code.krb
004e570: 355f 6d6b 5f70 7269 7628 6b72 6235 5f63  5_mk_priv(krb5_c
004e580: 6f6e 7465 7874 2063 6f6e 7465 7874 2c20  ontext context, 
004e590: 6b72 6235 5f61 7574 685f 636f 6e74 6578  krb5_auth_contex
004e5a0: 7420 6175 7468 5f63 6f6e 7465 7874 2c0a  t auth_context,.
004e5b0: 2020 2020 2020 2020 2020 2020 2063 6f6e               con
004e5c0: 7374 206b 7262 355f 6461 7461 202a 7573  st krb5_data *us
004e5d0: 6572 6461 7461 2c20 6b72 6235 5f64 6174  erdata, krb5_dat
004e5e0: 6120 2a6f 7574 6275 662c 0a20 2020 2020  a *outbuf,.     
004e5f0: 2020 2020 2020 2020 6b72 6235 5f72 6570          krb5_rep
004e600: 6c61 795f 6461 7461 202a 6f75 7464 6174  lay_data *outdat
004e610: 6129 3b0a 2320 3533 3838 2022 2f75 7372  a);.# 5388 "/usr
004e620: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
004e630: 6235 2e68 2220 3320 340a 6b72 6235 5f65  b5.h" 3 4.krb5_e
004e640: 7272 6f72 5f63 6f64 650a 6b72 6235 5f73  rror_code.krb5_s
004e650: 656e 6461 7574 6828 6b72 6235 5f63 6f6e  endauth(krb5_con
004e660: 7465 7874 2063 6f6e 7465 7874 2c20 6b72  text context, kr
004e670: 6235 5f61 7574 685f 636f 6e74 6578 7420  b5_auth_context 
004e680: 2a61 7574 685f 636f 6e74 6578 742c 0a20  *auth_context,. 
004e690: 2020 2020 2020 2020 2020 2020 206b 7262               krb
004e6a0: 355f 706f 696e 7465 7220 6664 2c20 6368  5_pointer fd, ch
004e6b0: 6172 202a 6170 706c 5f76 6572 7369 6f6e  ar *appl_version
004e6c0: 2c20 6b72 6235 5f70 7269 6e63 6970 616c  , krb5_principal
004e6d0: 2063 6c69 656e 742c 0a20 2020 2020 2020   client,.       
004e6e0: 2020 2020 2020 206b 7262 355f 7072 696e         krb5_prin
004e6f0: 6369 7061 6c20 7365 7276 6572 2c20 6b72  cipal server, kr
004e700: 6235 5f66 6c61 6773 2061 705f 7265 715f  b5_flags ap_req_
004e710: 6f70 7469 6f6e 732c 0a20 2020 2020 2020  options,.       
004e720: 2020 2020 2020 206b 7262 355f 6461 7461         krb5_data
004e730: 202a 696e 5f64 6174 612c 206b 7262 355f   *in_data, krb5_
004e740: 6372 6564 7320 2a69 6e5f 6372 6564 732c  creds *in_creds,
004e750: 206b 7262 355f 6363 6163 6865 2063 6361   krb5_ccache cca
004e760: 6368 652c 0a20 2020 2020 2020 2020 2020  che,.           
004e770: 2020 206b 7262 355f 6572 726f 7220 2a2a     krb5_error **
004e780: 6572 726f 722c 206b 7262 355f 6170 5f72  error, krb5_ap_r
004e790: 6570 5f65 6e63 5f70 6172 7420 2a2a 7265  ep_enc_part **re
004e7a0: 705f 7265 7375 6c74 2c0a 2020 2020 2020  p_result,.      
004e7b0: 2020 2020 2020 2020 6b72 6235 5f63 7265          krb5_cre
004e7c0: 6473 202a 2a6f 7574 5f63 7265 6473 293b  ds **out_creds);
004e7d0: 0a23 2035 3431 3820 222f 7573 722f 696e  .# 5418 "/usr/in
004e7e0: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
004e7f0: 6822 2033 2034 0a6b 7262 355f 6572 726f  h" 3 4.krb5_erro
004e800: 725f 636f 6465 0a6b 7262 355f 7265 6376  r_code.krb5_recv
004e810: 6175 7468 286b 7262 355f 636f 6e74 6578  auth(krb5_contex
004e820: 7420 636f 6e74 6578 742c 206b 7262 355f  t context, krb5_
004e830: 6175 7468 5f63 6f6e 7465 7874 202a 6175  auth_context *au
004e840: 7468 5f63 6f6e 7465 7874 2c0a 2020 2020  th_context,.    
004e850: 2020 2020 2020 2020 2020 6b72 6235 5f70            krb5_p
004e860: 6f69 6e74 6572 2066 642c 2063 6861 7220  ointer fd, char 
004e870: 2a61 7070 6c5f 7665 7273 696f 6e2c 206b  *appl_version, k
004e880: 7262 355f 7072 696e 6369 7061 6c20 7365  rb5_principal se
004e890: 7276 6572 2c0a 2020 2020 2020 2020 2020  rver,.          
004e8a0: 2020 2020 6b72 6235 5f69 6e74 3332 2066      krb5_int32 f
004e8b0: 6c61 6773 2c20 6b72 6235 5f6b 6579 7461  lags, krb5_keyta
004e8c0: 6220 6b65 7974 6162 2c20 6b72 6235 5f74  b keytab, krb5_t
004e8d0: 6963 6b65 7420 2a2a 7469 636b 6574 293b  icket **ticket);
004e8e0: 0a23 2035 3434 3020 222f 7573 722f 696e  .# 5440 "/usr/in
004e8f0: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
004e900: 6822 2033 2034 0a6b 7262 355f 6572 726f  h" 3 4.krb5_erro
004e910: 725f 636f 6465 0a6b 7262 355f 7265 6376  r_code.krb5_recv
004e920: 6175 7468 5f76 6572 7369 6f6e 286b 7262  auth_version(krb
004e930: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
004e940: 742c 0a20 2020 2020 2020 2020 2020 2020  t,.             
004e950: 2020 2020 2020 2020 206b 7262 355f 6175           krb5_au
004e960: 7468 5f63 6f6e 7465 7874 202a 6175 7468  th_context *auth
004e970: 5f63 6f6e 7465 7874 2c0a 2020 2020 2020  _context,.      
004e980: 2020 2020 2020 2020 2020 2020 2020 2020                  
004e990: 6b72 6235 5f70 6f69 6e74 6572 2066 642c  krb5_pointer fd,
004e9a0: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
004e9b0: 2020 2020 2020 206b 7262 355f 7072 696e         krb5_prin
004e9c0: 6369 7061 6c20 7365 7276 6572 2c0a 2020  cipal server,.  
004e9d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004e9e0: 2020 2020 6b72 6235 5f69 6e74 3332 2066      krb5_int32 f
004e9f0: 6c61 6773 2c0a 2020 2020 2020 2020 2020  lags,.          
004ea00: 2020 2020 2020 2020 2020 2020 6b72 6235              krb5
004ea10: 5f6b 6579 7461 6220 6b65 7974 6162 2c0a  _keytab keytab,.
004ea20: 2020 2020 2020 2020 2020 2020 2020 2020                  
004ea30: 2020 2020 2020 6b72 6235 5f74 6963 6b65        krb5_ticke
004ea40: 7420 2a2a 7469 636b 6574 2c0a 2020 2020  t **ticket,.    
004ea50: 2020 2020 2020 2020 2020 2020 2020 2020                  
004ea60: 2020 6b72 6235 5f64 6174 6120 2a76 6572    krb5_data *ver
004ea70: 7369 6f6e 293b 0a23 2035 3437 3720 222f  sion);.# 5477 "/
004ea80: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
004ea90: 2f6b 7262 352e 6822 2033 2034 0a6b 7262  /krb5.h" 3 4.krb
004eaa0: 355f 6572 726f 725f 636f 6465 0a6b 7262  5_error_code.krb
004eab0: 355f 6d6b 5f6e 6372 6564 286b 7262 355f  5_mk_ncred(krb5_
004eac0: 636f 6e74 6578 7420 636f 6e74 6578 742c  context context,
004ead0: 206b 7262 355f 6175 7468 5f63 6f6e 7465   krb5_auth_conte
004eae0: 7874 2061 7574 685f 636f 6e74 6578 742c  xt auth_context,
004eaf0: 0a20 2020 2020 2020 2020 2020 2020 206b  .              k
004eb00: 7262 355f 6372 6564 7320 2a2a 7070 6372  rb5_creds **ppcr
004eb10: 6564 732c 206b 7262 355f 6461 7461 202a  eds, krb5_data *
004eb20: 2a70 7064 6174 612c 0a20 2020 2020 2020  *ppdata,.       
004eb30: 2020 2020 2020 206b 7262 355f 7265 706c         krb5_repl
004eb40: 6179 5f64 6174 6120 2a6f 7574 6461 7461  ay_data *outdata
004eb50: 293b 0a23 2035 3530 3320 222f 7573 722f  );.# 5503 "/usr/
004eb60: 696e 636c 7564 652f 6b72 6235 2f6b 7262  include/krb5/krb
004eb70: 352e 6822 2033 2034 0a6b 7262 355f 6572  5.h" 3 4.krb5_er
004eb80: 726f 725f 636f 6465 0a6b 7262 355f 6d6b  ror_code.krb5_mk
004eb90: 5f31 6372 6564 286b 7262 355f 636f 6e74  _1cred(krb5_cont
004eba0: 6578 7420 636f 6e74 6578 742c 206b 7262  ext context, krb
004ebb0: 355f 6175 7468 5f63 6f6e 7465 7874 2061  5_auth_context a
004ebc0: 7574 685f 636f 6e74 6578 742c 0a20 2020  uth_context,.   
004ebd0: 2020 2020 2020 2020 2020 206b 7262 355f             krb5_
004ebe0: 6372 6564 7320 2a70 6372 6564 732c 206b  creds *pcreds, k
004ebf0: 7262 355f 6461 7461 202a 2a70 7064 6174  rb5_data **ppdat
004ec00: 612c 0a20 2020 2020 2020 2020 2020 2020  a,.             
004ec10: 206b 7262 355f 7265 706c 6179 5f64 6174   krb5_replay_dat
004ec20: 6120 2a6f 7574 6461 7461 293b 0a23 2035  a *outdata);.# 5
004ec30: 3532 3820 222f 7573 722f 696e 636c 7564  528 "/usr/includ
004ec40: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
004ec50: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
004ec60: 6465 0a6b 7262 355f 7264 5f63 7265 6428  de.krb5_rd_cred(
004ec70: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
004ec80: 7465 7874 2c20 6b72 6235 5f61 7574 685f  text, krb5_auth_
004ec90: 636f 6e74 6578 7420 6175 7468 5f63 6f6e  context auth_con
004eca0: 7465 7874 2c0a 2020 2020 2020 2020 2020  text,.          
004ecb0: 2020 206b 7262 355f 6461 7461 202a 7063     krb5_data *pc
004ecc0: 7265 6464 6174 612c 206b 7262 355f 6372  reddata, krb5_cr
004ecd0: 6564 7320 2a2a 2a70 7070 6372 6564 732c  eds ***pppcreds,
004ece0: 0a20 2020 2020 2020 2020 2020 2020 6b72  .             kr
004ecf0: 6235 5f72 6570 6c61 795f 6461 7461 202a  b5_replay_data *
004ed00: 6f75 7464 6174 6129 3b0a 2320 3535 3632  outdata);.# 5562
004ed10: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
004ed20: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
004ed30: 6b72 6235 5f65 7272 6f72 5f63 6f64 650a  krb5_error_code.
004ed40: 6b72 6235 5f66 7764 5f74 6774 5f63 7265  krb5_fwd_tgt_cre
004ed50: 6473 286b 7262 355f 636f 6e74 6578 7420  ds(krb5_context 
004ed60: 636f 6e74 6578 742c 206b 7262 355f 6175  context, krb5_au
004ed70: 7468 5f63 6f6e 7465 7874 2061 7574 685f  th_context auth_
004ed80: 636f 6e74 6578 742c 0a20 2020 2020 2020  context,.       
004ed90: 2020 2020 2020 2020 2020 2020 6368 6172              char
004eda0: 202a 7268 6f73 742c 206b 7262 355f 7072   *rhost, krb5_pr
004edb0: 696e 6369 7061 6c20 636c 6965 6e74 2c20  incipal client, 
004edc0: 6b72 6235 5f70 7269 6e63 6970 616c 2073  krb5_principal s
004edd0: 6572 7665 722c 0a20 2020 2020 2020 2020  erver,.         
004ede0: 2020 2020 2020 2020 2020 6b72 6235 5f63            krb5_c
004edf0: 6361 6368 6520 6363 2c20 696e 7420 666f  cache cc, int fo
004ee00: 7277 6172 6461 626c 652c 206b 7262 355f  rwardable, krb5_
004ee10: 6461 7461 202a 6f75 7462 7566 293b 0a23  data *outbuf);.#
004ee20: 2035 3538 3620 222f 7573 722f 696e 636c   5586 "/usr/incl
004ee30: 7564 652f 6b72 6235 2f6b 7262 352e 6822  ude/krb5/krb5.h"
004ee40: 2033 2034 0a6b 7262 355f 6572 726f 725f   3 4.krb5_error_
004ee50: 636f 6465 0a6b 7262 355f 6175 7468 5f63  code.krb5_auth_c
004ee60: 6f6e 5f69 6e69 7428 6b72 6235 5f63 6f6e  on_init(krb5_con
004ee70: 7465 7874 2063 6f6e 7465 7874 2c20 6b72  text context, kr
004ee80: 6235 5f61 7574 685f 636f 6e74 6578 7420  b5_auth_context 
004ee90: 2a61 7574 685f 636f 6e74 6578 7429 3b0a  *auth_context);.
004eea0: 2320 3535 3939 2022 2f75 7372 2f69 6e63  # 5599 "/usr/inc
004eeb0: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
004eec0: 2220 3320 340a 6b72 6235 5f65 7272 6f72  " 3 4.krb5_error
004eed0: 5f63 6f64 650a 6b72 6235 5f61 7574 685f  _code.krb5_auth_
004eee0: 636f 6e5f 6672 6565 286b 7262 355f 636f  con_free(krb5_co
004eef0: 6e74 6578 7420 636f 6e74 6578 742c 206b  ntext context, k
004ef00: 7262 355f 6175 7468 5f63 6f6e 7465 7874  rb5_auth_context
004ef10: 2061 7574 685f 636f 6e74 6578 7429 3b0a   auth_context);.
004ef20: 2320 3536 3137 2022 2f75 7372 2f69 6e63  # 5617 "/usr/inc
004ef30: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
004ef40: 2220 3320 340a 6b72 6235 5f65 7272 6f72  " 3 4.krb5_error
004ef50: 5f63 6f64 650a 6b72 6235 5f61 7574 685f  _code.krb5_auth_
004ef60: 636f 6e5f 7365 7466 6c61 6773 286b 7262  con_setflags(krb
004ef70: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
004ef80: 742c 206b 7262 355f 6175 7468 5f63 6f6e  t, krb5_auth_con
004ef90: 7465 7874 2061 7574 685f 636f 6e74 6578  text auth_contex
004efa0: 742c 206b 7262 355f 696e 7433 3220 666c  t, krb5_int32 fl
004efb0: 6167 7329 3b0a 2320 3536 3335 2022 2f75  ags);.# 5635 "/u
004efc0: 7372 2f69 6e63 6c75 6465 2f6b 7262 352f  sr/include/krb5/
004efd0: 6b72 6235 2e68 2220 3320 340a 6b72 6235  krb5.h" 3 4.krb5
004efe0: 5f65 7272 6f72 5f63 6f64 650a 6b72 6235  _error_code.krb5
004eff0: 5f61 7574 685f 636f 6e5f 6765 7466 6c61  _auth_con_getfla
004f000: 6773 286b 7262 355f 636f 6e74 6578 7420  gs(krb5_context 
004f010: 636f 6e74 6578 742c 206b 7262 355f 6175  context, krb5_au
004f020: 7468 5f63 6f6e 7465 7874 2061 7574 685f  th_context auth_
004f030: 636f 6e74 6578 742c 0a20 2020 2020 2020  context,.       
004f040: 2020 2020 2020 2020 2020 2020 2020 2020                  
004f050: 6b72 6235 5f69 6e74 3332 202a 666c 6167  krb5_int32 *flag
004f060: 7329 3b0a 2320 3536 3533 2022 2f75 7372  s);.# 5653 "/usr
004f070: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
004f080: 6235 2e68 2220 3320 340a 6b72 6235 5f65  b5.h" 3 4.krb5_e
004f090: 7272 6f72 5f63 6f64 650a 6b72 6235 5f61  rror_code.krb5_a
004f0a0: 7574 685f 636f 6e5f 7365 745f 6368 6563  uth_con_set_chec
004f0b0: 6b73 756d 5f66 756e 6328 206b 7262 355f  ksum_func( krb5_
004f0c0: 636f 6e74 6578 7420 636f 6e74 6578 742c  context context,
004f0d0: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
004f0e0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004f0f0: 2020 6b72 6235 5f61 7574 685f 636f 6e74    krb5_auth_cont
004f100: 6578 7420 6175 7468 5f63 6f6e 7465 7874  ext auth_context
004f110: 2c0a 2020 2020 2020 2020 2020 2020 2020  ,.              
004f120: 2020 2020 2020 2020 2020 2020 2020 2020                  
004f130: 2020 206b 7262 355f 6d6b 5f72 6571 5f63     krb5_mk_req_c
004f140: 6865 636b 7375 6d5f 6675 6e63 2066 756e  hecksum_func fun
004f150: 632c 0a20 2020 2020 2020 2020 2020 2020  c,.             
004f160: 2020 2020 2020 2020 2020 2020 2020 2020                  
004f170: 2020 2020 766f 6964 202a 6461 7461 293b      void *data);
004f180: 0a23 2035 3636 3920 222f 7573 722f 696e  .# 5669 "/usr/in
004f190: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
004f1a0: 6822 2033 2034 0a6b 7262 355f 6572 726f  h" 3 4.krb5_erro
004f1b0: 725f 636f 6465 0a6b 7262 355f 6175 7468  r_code.krb5_auth
004f1c0: 5f63 6f6e 5f67 6574 5f63 6865 636b 7375  _con_get_checksu
004f1d0: 6d5f 6675 6e63 2820 6b72 6235 5f63 6f6e  m_func( krb5_con
004f1e0: 7465 7874 2063 6f6e 7465 7874 2c0a 2020  text context,.  
004f1f0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004f200: 2020 2020 2020 2020 2020 2020 2020 206b                 k
004f210: 7262 355f 6175 7468 5f63 6f6e 7465 7874  rb5_auth_context
004f220: 2061 7574 685f 636f 6e74 6578 742c 0a20   auth_context,. 
004f230: 2020 2020 2020 2020 2020 2020 2020 2020                  
004f240: 2020 2020 2020 2020 2020 2020 2020 2020                  
004f250: 6b72 6235 5f6d 6b5f 7265 715f 6368 6563  krb5_mk_req_chec
004f260: 6b73 756d 5f66 756e 6320 2a66 756e 632c  ksum_func *func,
004f270: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
004f280: 2020 2020 2020 2020 2020 2020 2020 2020                  
004f290: 2020 766f 6964 202a 2a64 6174 6129 3b0a    void **data);.
004f2a0: 2320 3536 3931 2022 2f75 7372 2f69 6e63  # 5691 "/usr/inc
004f2b0: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
004f2c0: 2220 3320 340a 6b72 6235 5f65 7272 6f72  " 3 4.krb5_error
004f2d0: 5f63 6f64 650a 6b72 6235 5f61 7574 685f  _code.krb5_auth_
004f2e0: 636f 6e5f 7365 7461 6464 7273 286b 7262  con_setaddrs(krb
004f2f0: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
004f300: 742c 206b 7262 355f 6175 7468 5f63 6f6e  t, krb5_auth_con
004f310: 7465 7874 2061 7574 685f 636f 6e74 6578  text auth_contex
004f320: 742c 0a20 2020 2020 2020 2020 2020 2020  t,.             
004f330: 2020 2020 2020 2020 2020 6b72 6235 5f61            krb5_a
004f340: 6464 7265 7373 202a 6c6f 6361 6c5f 6164  ddress *local_ad
004f350: 6472 2c20 6b72 6235 5f61 6464 7265 7373  dr, krb5_address
004f360: 202a 7265 6d6f 7465 5f61 6464 7229 3b0a   *remote_addr);.
004f370: 2320 3537 3035 2022 2f75 7372 2f69 6e63  # 5705 "/usr/inc
004f380: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
004f390: 2220 3320 340a 6b72 6235 5f65 7272 6f72  " 3 4.krb5_error
004f3a0: 5f63 6f64 650a 6b72 6235 5f61 7574 685f  _code.krb5_auth_
004f3b0: 636f 6e5f 6765 7461 6464 7273 286b 7262  con_getaddrs(krb
004f3c0: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
004f3d0: 742c 206b 7262 355f 6175 7468 5f63 6f6e  t, krb5_auth_con
004f3e0: 7465 7874 2061 7574 685f 636f 6e74 6578  text auth_contex
004f3f0: 742c 0a20 2020 2020 2020 2020 2020 2020  t,.             
004f400: 2020 2020 2020 2020 2020 6b72 6235 5f61            krb5_a
004f410: 6464 7265 7373 202a 2a6c 6f63 616c 5f61  ddress **local_a
004f420: 6464 722c 206b 7262 355f 6164 6472 6573  ddr, krb5_addres
004f430: 7320 2a2a 7265 6d6f 7465 5f61 6464 7229  s **remote_addr)
004f440: 3b0a 2320 3537 3235 2022 2f75 7372 2f69  ;.# 5725 "/usr/i
004f450: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
004f460: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
004f470: 6f72 5f63 6f64 650a 6b72 6235 5f61 7574  or_code.krb5_aut
004f480: 685f 636f 6e5f 7365 7470 6f72 7473 286b  h_con_setports(k
004f490: 7262 355f 636f 6e74 6578 7420 636f 6e74  rb5_context cont
004f4a0: 6578 742c 206b 7262 355f 6175 7468 5f63  ext, krb5_auth_c
004f4b0: 6f6e 7465 7874 2061 7574 685f 636f 6e74  ontext auth_cont
004f4c0: 6578 742c 0a20 2020 2020 2020 2020 2020  ext,.           
004f4d0: 2020 2020 2020 2020 2020 2020 6b72 6235              krb5
004f4e0: 5f61 6464 7265 7373 202a 6c6f 6361 6c5f  _address *local_
004f4f0: 706f 7274 2c20 6b72 6235 5f61 6464 7265  port, krb5_addre
004f500: 7373 202a 7265 6d6f 7465 5f70 6f72 7429  ss *remote_port)
004f510: 3b0a 2320 3537 3338 2022 2f75 7372 2f69  ;.# 5738 "/usr/i
004f520: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
004f530: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
004f540: 6f72 5f63 6f64 650a 6b72 6235 5f61 7574  or_code.krb5_aut
004f550: 685f 636f 6e5f 7365 7475 7365 7275 7365  h_con_setuseruse
004f560: 726b 6579 286b 7262 355f 636f 6e74 6578  rkey(krb5_contex
004f570: 7420 636f 6e74 6578 742c 206b 7262 355f  t context, krb5_
004f580: 6175 7468 5f63 6f6e 7465 7874 2061 7574  auth_context aut
004f590: 685f 636f 6e74 6578 742c 0a20 2020 2020  h_context,.     
004f5a0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004f5b0: 2020 2020 2020 2020 6b72 6235 5f6b 6579          krb5_key
004f5c0: 626c 6f63 6b20 2a6b 6579 626c 6f63 6b29  block *keyblock)
004f5d0: 3b0a 2320 3537 3535 2022 2f75 7372 2f69  ;.# 5755 "/usr/i
004f5e0: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
004f5f0: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
004f600: 6f72 5f63 6f64 650a 6b72 6235 5f61 7574  or_code.krb5_aut
004f610: 685f 636f 6e5f 6765 746b 6579 286b 7262  h_con_getkey(krb
004f620: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
004f630: 742c 206b 7262 355f 6175 7468 5f63 6f6e  t, krb5_auth_con
004f640: 7465 7874 2061 7574 685f 636f 6e74 6578  text auth_contex
004f650: 742c 0a20 2020 2020 2020 2020 2020 2020  t,.             
004f660: 2020 2020 2020 2020 6b72 6235 5f6b 6579          krb5_key
004f670: 626c 6f63 6b20 2a2a 6b65 7962 6c6f 636b  block **keyblock
004f680: 293b 0a23 2035 3737 3120 222f 7573 722f  );.# 5771 "/usr/
004f690: 696e 636c 7564 652f 6b72 6235 2f6b 7262  include/krb5/krb
004f6a0: 352e 6822 2033 2034 0a6b 7262 355f 6572  5.h" 3 4.krb5_er
004f6b0: 726f 725f 636f 6465 0a6b 7262 355f 6175  ror_code.krb5_au
004f6c0: 7468 5f63 6f6e 5f67 6574 6b65 795f 6b28  th_con_getkey_k(
004f6d0: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
004f6e0: 7465 7874 2c20 6b72 6235 5f61 7574 685f  text, krb5_auth_
004f6f0: 636f 6e74 6578 7420 6175 7468 5f63 6f6e  context auth_con
004f700: 7465 7874 2c0a 2020 2020 2020 2020 2020  text,.          
004f710: 2020 2020 2020 2020 2020 2020 206b 7262               krb
004f720: 355f 6b65 7920 2a6b 6579 293b 0a23 2035  5_key *key);.# 5
004f730: 3738 3820 222f 7573 722f 696e 636c 7564  788 "/usr/includ
004f740: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
004f750: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
004f760: 6465 0a6b 7262 355f 6175 7468 5f63 6f6e  de.krb5_auth_con
004f770: 5f67 6574 7365 6e64 7375 626b 6579 286b  _getsendsubkey(k
004f780: 7262 355f 636f 6e74 6578 7420 6374 782c  rb5_context ctx,
004f790: 206b 7262 355f 6175 7468 5f63 6f6e 7465   krb5_auth_conte
004f7a0: 7874 2061 632c 206b 7262 355f 6b65 7962  xt ac, krb5_keyb
004f7b0: 6c6f 636b 202a 2a6b 6579 626c 6f63 6b29  lock **keyblock)
004f7c0: 3b0a 2320 3538 3033 2022 2f75 7372 2f69  ;.# 5803 "/usr/i
004f7d0: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
004f7e0: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
004f7f0: 6f72 5f63 6f64 650a 6b72 6235 5f61 7574  or_code.krb5_aut
004f800: 685f 636f 6e5f 6765 7473 656e 6473 7562  h_con_getsendsub
004f810: 6b65 795f 6b28 6b72 6235 5f63 6f6e 7465  key_k(krb5_conte
004f820: 7874 2063 7478 2c20 6b72 6235 5f61 7574  xt ctx, krb5_aut
004f830: 685f 636f 6e74 6578 7420 6163 2c0a 2020  h_context ac,.  
004f840: 2020 2020 2020 2020 2020 2020 2020 2020                  
004f850: 2020 2020 2020 2020 2020 2020 6b72 6235              krb5
004f860: 5f6b 6579 202a 6b65 7929 3b0a 2320 3538  _key *key);.# 58
004f870: 3230 2022 2f75 7372 2f69 6e63 6c75 6465  20 "/usr/include
004f880: 2f6b 7262 352f 6b72 6235 2e68 2220 3320  /krb5/krb5.h" 3 
004f890: 340a 6b72 6235 5f65 7272 6f72 5f63 6f64  4.krb5_error_cod
004f8a0: 650a 6b72 6235 5f61 7574 685f 636f 6e5f  e.krb5_auth_con_
004f8b0: 6765 7472 6563 7673 7562 6b65 7928 6b72  getrecvsubkey(kr
004f8c0: 6235 5f63 6f6e 7465 7874 2063 7478 2c20  b5_context ctx, 
004f8d0: 6b72 6235 5f61 7574 685f 636f 6e74 6578  krb5_auth_contex
004f8e0: 7420 6163 2c20 6b72 6235 5f6b 6579 626c  t ac, krb5_keybl
004f8f0: 6f63 6b20 2a2a 6b65 7962 6c6f 636b 293b  ock **keyblock);
004f900: 0a23 2035 3833 3520 222f 7573 722f 696e  .# 5835 "/usr/in
004f910: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
004f920: 6822 2033 2034 0a6b 7262 355f 6572 726f  h" 3 4.krb5_erro
004f930: 725f 636f 6465 0a6b 7262 355f 6175 7468  r_code.krb5_auth
004f940: 5f63 6f6e 5f67 6574 7265 6376 7375 626b  _con_getrecvsubk
004f950: 6579 5f6b 286b 7262 355f 636f 6e74 6578  ey_k(krb5_contex
004f960: 7420 6374 782c 206b 7262 355f 6175 7468  t ctx, krb5_auth
004f970: 5f63 6f6e 7465 7874 2061 632c 206b 7262  _context ac, krb
004f980: 355f 6b65 7920 2a6b 6579 293b 0a23 2035  5_key *key);.# 5
004f990: 3834 3920 222f 7573 722f 696e 636c 7564  849 "/usr/includ
004f9a0: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
004f9b0: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
004f9c0: 6465 0a6b 7262 355f 6175 7468 5f63 6f6e  de.krb5_auth_con
004f9d0: 5f73 6574 7365 6e64 7375 626b 6579 286b  _setsendsubkey(k
004f9e0: 7262 355f 636f 6e74 6578 7420 6374 782c  rb5_context ctx,
004f9f0: 206b 7262 355f 6175 7468 5f63 6f6e 7465   krb5_auth_conte
004fa00: 7874 2061 632c 0a20 2020 2020 2020 2020  xt ac,.         
004fa10: 2020 2020 2020 2020 2020 2020 2020 2020                  
004fa20: 2020 206b 7262 355f 6b65 7962 6c6f 636b     krb5_keyblock
004fa30: 202a 6b65 7962 6c6f 636b 293b 0a23 2035   *keyblock);.# 5
004fa40: 3836 3720 222f 7573 722f 696e 636c 7564  867 "/usr/includ
004fa50: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
004fa60: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
004fa70: 6465 0a6b 7262 355f 6175 7468 5f63 6f6e  de.krb5_auth_con
004fa80: 5f73 6574 7365 6e64 7375 626b 6579 5f6b  _setsendsubkey_k
004fa90: 286b 7262 355f 636f 6e74 6578 7420 6374  (krb5_context ct
004faa0: 782c 206b 7262 355f 6175 7468 5f63 6f6e  x, krb5_auth_con
004fab0: 7465 7874 2061 632c 206b 7262 355f 6b65  text ac, krb5_ke
004fac0: 7920 6b65 7929 3b0a 2320 3538 3831 2022  y key);.# 5881 "
004fad0: 2f75 7372 2f69 6e63 6c75 6465 2f6b 7262  /usr/include/krb
004fae0: 352f 6b72 6235 2e68 2220 3320 340a 6b72  5/krb5.h" 3 4.kr
004faf0: 6235 5f65 7272 6f72 5f63 6f64 650a 6b72  b5_error_code.kr
004fb00: 6235 5f61 7574 685f 636f 6e5f 7365 7472  b5_auth_con_setr
004fb10: 6563 7673 7562 6b65 7928 6b72 6235 5f63  ecvsubkey(krb5_c
004fb20: 6f6e 7465 7874 2063 7478 2c20 6b72 6235  ontext ctx, krb5
004fb30: 5f61 7574 685f 636f 6e74 6578 7420 6163  _auth_context ac
004fb40: 2c0a 2020 2020 2020 2020 2020 2020 2020  ,.              
004fb50: 2020 2020 2020 2020 2020 2020 2020 6b72                kr
004fb60: 6235 5f6b 6579 626c 6f63 6b20 2a6b 6579  b5_keyblock *key
004fb70: 626c 6f63 6b29 3b0a 2320 3538 3939 2022  block);.# 5899 "
004fb80: 2f75 7372 2f69 6e63 6c75 6465 2f6b 7262  /usr/include/krb
004fb90: 352f 6b72 6235 2e68 2220 3320 340a 6b72  5/krb5.h" 3 4.kr
004fba0: 6235 5f65 7272 6f72 5f63 6f64 650a 6b72  b5_error_code.kr
004fbb0: 6235 5f61 7574 685f 636f 6e5f 7365 7472  b5_auth_con_setr
004fbc0: 6563 7673 7562 6b65 795f 6b28 6b72 6235  ecvsubkey_k(krb5
004fbd0: 5f63 6f6e 7465 7874 2063 7478 2c20 6b72  _context ctx, kr
004fbe0: 6235 5f61 7574 685f 636f 6e74 6578 7420  b5_auth_context 
004fbf0: 6163 2c0a 2020 2020 2020 2020 2020 2020  ac,.            
004fc00: 2020 2020 2020 2020 2020 2020 2020 2020                  
004fc10: 2020 6b72 6235 5f6b 6579 206b 6579 293b    krb5_key key);
004fc20: 0a23 2035 3932 3820 222f 7573 722f 696e  .# 5928 "/usr/in
004fc30: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
004fc40: 6822 2033 2034 0a6b 7262 355f 6572 726f  h" 3 4.krb5_erro
004fc50: 725f 636f 6465 0a6b 7262 355f 6175 7468  r_code.krb5_auth
004fc60: 5f63 6f6e 5f67 6574 6c6f 6361 6c73 6571  _con_getlocalseq
004fc70: 6e75 6d62 6572 286b 7262 355f 636f 6e74  number(krb5_cont
004fc80: 6578 7420 636f 6e74 6578 742c 206b 7262  ext context, krb
004fc90: 355f 6175 7468 5f63 6f6e 7465 7874 2061  5_auth_context a
004fca0: 7574 685f 636f 6e74 6578 742c 0a20 2020  uth_context,.   
004fcb0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004fcc0: 2020 2020 2020 2020 2020 2020 206b 7262               krb
004fcd0: 355f 696e 7433 3220 2a73 6571 6e75 6d62  5_int32 *seqnumb
004fce0: 6572 293b 0a23 2035 3934 3520 222f 7573  er);.# 5945 "/us
004fcf0: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
004fd00: 7262 352e 6822 2033 2034 0a6b 7262 355f  rb5.h" 3 4.krb5_
004fd10: 6572 726f 725f 636f 6465 0a6b 7262 355f  error_code.krb5_
004fd20: 6175 7468 5f63 6f6e 5f67 6574 7265 6d6f  auth_con_getremo
004fd30: 7465 7365 716e 756d 6265 7228 6b72 6235  teseqnumber(krb5
004fd40: 5f63 6f6e 7465 7874 2063 6f6e 7465 7874  _context context
004fd50: 2c20 6b72 6235 5f61 7574 685f 636f 6e74  , krb5_auth_cont
004fd60: 6578 7420 6175 7468 5f63 6f6e 7465 7874  ext auth_context
004fd70: 2c0a 2020 2020 2020 2020 2020 2020 2020  ,.              
004fd80: 2020 2020 2020 2020 2020 2020 2020 2020                  
004fd90: 2020 206b 7262 355f 696e 7433 3220 2a73     krb5_int32 *s
004fda0: 6571 6e75 6d62 6572 293b 0a23 2035 3937  eqnumber);.# 597
004fdb0: 3220 222f 7573 722f 696e 636c 7564 652f  2 "/usr/include/
004fdc0: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
004fdd0: 0a6b 7262 355f 6572 726f 725f 636f 6465  .krb5_error_code
004fde0: 0a6b 7262 355f 6175 7468 5f63 6f6e 5f73  .krb5_auth_con_s
004fdf0: 6574 7263 6163 6865 286b 7262 355f 636f  etrcache(krb5_co
004fe00: 6e74 6578 7420 636f 6e74 6578 742c 206b  ntext context, k
004fe10: 7262 355f 6175 7468 5f63 6f6e 7465 7874  rb5_auth_context
004fe20: 2061 7574 685f 636f 6e74 6578 742c 0a20   auth_context,. 
004fe30: 2020 2020 2020 2020 2020 2020 2020 2020                  
004fe40: 2020 2020 2020 206b 7262 355f 7263 6163         krb5_rcac
004fe50: 6865 2072 6361 6368 6529 3b0a 2320 3539  he rcache);.# 59
004fe60: 3838 2022 2f75 7372 2f69 6e63 6c75 6465  88 "/usr/include
004fe70: 2f6b 7262 352f 6b72 6235 2e68 2220 3320  /krb5/krb5.h" 3 
004fe80: 340a 6b72 6235 5f65 7272 6f72 5f63 6f64  4.krb5_error_cod
004fe90: 650a 6b72 6235 5f61 7574 685f 636f 6e5f  e.krb5_auth_con_
004fea0: 6765 7472 6361 6368 6528 6b72 6235 5f63  getrcache(krb5_c
004feb0: 6f6e 7465 7874 2063 6f6e 7465 7874 2c20  ontext context, 
004fec0: 6b72 6235 5f61 7574 685f 636f 6e74 6578  krb5_auth_contex
004fed0: 7420 6175 7468 5f63 6f6e 7465 7874 2c0a  t auth_context,.
004fee0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004fef0: 2020 2020 2020 2020 6b72 6235 5f72 6361          krb5_rca
004ff00: 6368 6520 2a72 6361 6368 6529 3b0a 2320  che *rcache);.# 
004ff10: 3630 3034 2022 2f75 7372 2f69 6e63 6c75  6004 "/usr/inclu
004ff20: 6465 2f6b 7262 352f 6b72 6235 2e68 2220  de/krb5/krb5.h" 
004ff30: 3320 340a 6b72 6235 5f65 7272 6f72 5f63  3 4.krb5_error_c
004ff40: 6f64 650a 6b72 6235 5f61 7574 685f 636f  ode.krb5_auth_co
004ff50: 6e5f 6765 7461 7574 6865 6e74 6963 6174  n_getauthenticat
004ff60: 6f72 286b 7262 355f 636f 6e74 6578 7420  or(krb5_context 
004ff70: 636f 6e74 6578 742c 206b 7262 355f 6175  context, krb5_au
004ff80: 7468 5f63 6f6e 7465 7874 2061 7574 685f  th_context auth_
004ff90: 636f 6e74 6578 742c 0a20 2020 2020 2020  context,.       
004ffa0: 2020 2020 2020 2020 2020 2020 2020 2020                  
004ffb0: 2020 2020 2020 2020 6b72 6235 5f61 7574          krb5_aut
004ffc0: 6865 6e74 6963 6174 6f72 202a 2a61 7574  henticator **aut
004ffd0: 6865 6e74 6963 6174 6f72 293b 0a23 2036  henticator);.# 6
004ffe0: 3032 3020 222f 7573 722f 696e 636c 7564  020 "/usr/includ
004fff0: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
0050000: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
0050010: 6465 0a6b 7262 355f 6175 7468 5f63 6f6e  de.krb5_auth_con
0050020: 5f73 6574 5f72 6571 5f63 6b73 756d 7479  _set_req_cksumty
0050030: 7065 286b 7262 355f 636f 6e74 6578 7420  pe(krb5_context 
0050040: 636f 6e74 6578 742c 206b 7262 355f 6175  context, krb5_au
0050050: 7468 5f63 6f6e 7465 7874 2061 7574 685f  th_context auth_
0050060: 636f 6e74 6578 742c 0a20 2020 2020 2020  context,.       
0050070: 2020 2020 2020 2020 2020 2020 2020 2020                  
0050080: 2020 2020 2020 2020 206b 7262 355f 636b           krb5_ck
0050090: 7375 6d74 7970 6520 636b 7375 6d74 7970  sumtype cksumtyp
00500a0: 6529 3b0a 2320 3630 3635 2022 2f75 7372  e);.# 6065 "/usr
00500b0: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
00500c0: 6235 2e68 2220 3320 340a 6b72 6235 5f65  b5.h" 3 4.krb5_e
00500d0: 7272 6f72 5f63 6f64 650a 6b72 6235 5f72  rror_code.krb5_r
00500e0: 6561 645f 7061 7373 776f 7264 286b 7262  ead_password(krb
00500f0: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
0050100: 742c 0a20 2020 2020 2020 2020 2020 2020  t,.             
0050110: 2020 2020 2020 636f 6e73 7420 6368 6172        const char
0050120: 202a 7072 6f6d 7074 2c20 636f 6e73 7420   *prompt, const 
0050130: 6368 6172 202a 7072 6f6d 7074 322c 0a20  char *prompt2,. 
0050140: 2020 2020 2020 2020 2020 2020 2020 2020                  
0050150: 2020 6368 6172 202a 7265 7475 726e 5f70    char *return_p
0050160: 7764 2c20 756e 7369 676e 6564 2069 6e74  wd, unsigned int
0050170: 202a 7369 7a65 5f72 6574 7572 6e29 3b0a   *size_return);.
0050180: 2320 3630 3933 2022 2f75 7372 2f69 6e63  # 6093 "/usr/inc
0050190: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
00501a0: 2220 3320 340a 6b72 6235 5f65 7272 6f72  " 3 4.krb5_error
00501b0: 5f63 6f64 650a 6b72 6235 5f61 6e61 6d65  _code.krb5_aname
00501c0: 5f74 6f5f 6c6f 6361 6c6e 616d 6528 6b72  _to_localname(kr
00501d0: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
00501e0: 7874 2c20 6b72 6235 5f63 6f6e 7374 5f70  xt, krb5_const_p
00501f0: 7269 6e63 6970 616c 2061 6e61 6d65 2c0a  rincipal aname,.
0050200: 2020 2020 2020 2020 2020 2020 2020 2020                  
0050210: 2020 2020 2020 2020 696e 7420 6c6e 7369          int lnsi
0050220: 7a65 5f69 6e2c 2063 6861 7220 2a6c 6e61  ze_in, char *lna
0050230: 6d65 293b 0a23 2036 3132 3020 222f 7573  me);.# 6120 "/us
0050240: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
0050250: 7262 352e 6822 2033 2034 0a6b 7262 355f  rb5.h" 3 4.krb5_
0050260: 6572 726f 725f 636f 6465 0a6b 7262 355f  error_code.krb5_
0050270: 6765 745f 686f 7374 5f72 6561 6c6d 286b  get_host_realm(k
0050280: 7262 355f 636f 6e74 6578 7420 636f 6e74  rb5_context cont
0050290: 6578 742c 2063 6f6e 7374 2063 6861 7220  ext, const char 
00502a0: 2a68 6f73 742c 2063 6861 7220 2a2a 2a72  *host, char ***r
00502b0: 6561 6c6d 7370 293b 0a23 2036 3133 3820  ealmsp);.# 6138 
00502c0: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
00502d0: 6235 2f6b 7262 352e 6822 2033 2034 0a6b  b5/krb5.h" 3 4.k
00502e0: 7262 355f 6572 726f 725f 636f 6465 0a6b  rb5_error_code.k
00502f0: 7262 355f 6765 745f 6661 6c6c 6261 636b  rb5_get_fallback
0050300: 5f68 6f73 745f 7265 616c 6d28 6b72 6235  _host_realm(krb5
0050310: 5f63 6f6e 7465 7874 2063 6f6e 7465 7874  _context context
0050320: 2c0a 2020 2020 2020 2020 2020 2020 2020  ,.              
0050330: 2020 2020 2020 2020 2020 2020 2020 206b                 k
0050340: 7262 355f 6461 7461 202a 6864 6174 612c  rb5_data *hdata,
0050350: 2063 6861 7220 2a2a 2a72 6561 6c6d 7370   char ***realmsp
0050360: 293b 0a23 2036 3135 3320 222f 7573 722f  );.# 6153 "/usr/
0050370: 696e 636c 7564 652f 6b72 6235 2f6b 7262  include/krb5/krb
0050380: 352e 6822 2033 2034 0a6b 7262 355f 6572  5.h" 3 4.krb5_er
0050390: 726f 725f 636f 6465 0a6b 7262 355f 6672  ror_code.krb5_fr
00503a0: 6565 5f68 6f73 745f 7265 616c 6d28 6b72  ee_host_realm(kr
00503b0: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
00503c0: 7874 2c20 6368 6172 202a 636f 6e73 7420  xt, char *const 
00503d0: 2a72 6561 6c6d 6c69 7374 293b 0a23 2036  *realmlist);.# 6
00503e0: 3136 3920 222f 7573 722f 696e 636c 7564  169 "/usr/includ
00503f0: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
0050400: 2034 0a6b 7262 355f 626f 6f6c 6561 6e0a   4.krb5_boolean.
0050410: 6b72 6235 5f6b 7573 6572 6f6b 286b 7262  krb5_kuserok(krb
0050420: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
0050430: 742c 206b 7262 355f 7072 696e 6369 7061  t, krb5_principa
0050440: 6c20 7072 696e 6369 7061 6c2c 2063 6f6e  l principal, con
0050450: 7374 2063 6861 7220 2a6c 7573 6572 293b  st char *luser);
0050460: 0a23 2036 3139 3120 222f 7573 722f 696e  .# 6191 "/usr/in
0050470: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
0050480: 6822 2033 2034 0a6b 7262 355f 6572 726f  h" 3 4.krb5_erro
0050490: 725f 636f 6465 0a6b 7262 355f 6175 7468  r_code.krb5_auth
00504a0: 5f63 6f6e 5f67 656e 6164 6472 7328 6b72  _con_genaddrs(kr
00504b0: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
00504c0: 7874 2c20 6b72 6235 5f61 7574 685f 636f  xt, krb5_auth_co
00504d0: 6e74 6578 7420 6175 7468 5f63 6f6e 7465  ntext auth_conte
00504e0: 7874 2c0a 2020 2020 2020 2020 2020 2020  xt,.            
00504f0: 2020 2020 2020 2020 2020 2069 6e74 2069             int i
0050500: 6e66 642c 2069 6e74 2066 6c61 6773 293b  nfd, int flags);
0050510: 0a23 2036 3230 3820 222f 7573 722f 696e  .# 6208 "/usr/in
0050520: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
0050530: 6822 2033 2034 0a6b 7262 355f 6572 726f  h" 3 4.krb5_erro
0050540: 725f 636f 6465 0a6b 7262 355f 7365 745f  r_code.krb5_set_
0050550: 7265 616c 5f74 696d 6528 6b72 6235 5f63  real_time(krb5_c
0050560: 6f6e 7465 7874 2063 6f6e 7465 7874 2c20  ontext context, 
0050570: 6b72 6235 5f74 696d 6573 7461 6d70 2073  krb5_timestamp s
0050580: 6563 6f6e 6473 2c0a 2020 2020 2020 2020  econds,.        
0050590: 2020 2020 2020 2020 2020 206b 7262 355f             krb5_
00505a0: 696e 7433 3220 6d69 6372 6f73 6563 6f6e  int32 microsecon
00505b0: 6473 293b 0a23 2036 3232 3320 222f 7573  ds);.# 6223 "/us
00505c0: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
00505d0: 7262 352e 6822 2033 2034 0a6b 7262 355f  rb5.h" 3 4.krb5_
00505e0: 6572 726f 725f 636f 6465 0a6b 7262 355f  error_code.krb5_
00505f0: 6765 745f 7469 6d65 5f6f 6666 7365 7473  get_time_offsets
0050600: 286b 7262 355f 636f 6e74 6578 7420 636f  (krb5_context co
0050610: 6e74 6578 742c 206b 7262 355f 7469 6d65  ntext, krb5_time
0050620: 7374 616d 7020 2a73 6563 6f6e 6473 2c20  stamp *seconds, 
0050630: 6b72 6235 5f69 6e74 3332 202a 6d69 6372  krb5_int32 *micr
0050640: 6f73 6563 6f6e 6473 293b 0a23 2036 3233  oseconds);.# 623
0050650: 3520 222f 7573 722f 696e 636c 7564 652f  5 "/usr/include/
0050660: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
0050670: 0a6b 7262 355f 6572 726f 725f 636f 6465  .krb5_error_code
0050680: 0a6b 7262 355f 7374 7269 6e67 5f74 6f5f  .krb5_string_to_
0050690: 656e 6374 7970 6528 6368 6172 202a 7374  enctype(char *st
00506a0: 7269 6e67 2c20 6b72 6235 5f65 6e63 7479  ring, krb5_encty
00506b0: 7065 202a 656e 6374 7970 6570 293b 0a23  pe *enctypep);.#
00506c0: 2036 3234 3620 222f 7573 722f 696e 636c   6246 "/usr/incl
00506d0: 7564 652f 6b72 6235 2f6b 7262 352e 6822  ude/krb5/krb5.h"
00506e0: 2033 2034 0a6b 7262 355f 6572 726f 725f   3 4.krb5_error_
00506f0: 636f 6465 0a6b 7262 355f 7374 7269 6e67  code.krb5_string
0050700: 5f74 6f5f 7361 6c74 7479 7065 2863 6861  _to_salttype(cha
0050710: 7220 2a73 7472 696e 672c 206b 7262 355f  r *string, krb5_
0050720: 696e 7433 3220 2a73 616c 7474 7970 6570  int32 *salttypep
0050730: 293b 0a23 2036 3235 3720 222f 7573 722f  );.# 6257 "/usr/
0050740: 696e 636c 7564 652f 6b72 6235 2f6b 7262  include/krb5/krb
0050750: 352e 6822 2033 2034 0a6b 7262 355f 6572  5.h" 3 4.krb5_er
0050760: 726f 725f 636f 6465 0a6b 7262 355f 7374  ror_code.krb5_st
0050770: 7269 6e67 5f74 6f5f 636b 7375 6d74 7970  ring_to_cksumtyp
0050780: 6528 6368 6172 202a 7374 7269 6e67 2c20  e(char *string, 
0050790: 6b72 6235 5f63 6b73 756d 7479 7065 202a  krb5_cksumtype *
00507a0: 636b 7375 6d74 7970 6570 293b 0a23 2036  cksumtypep);.# 6
00507b0: 3236 3820 222f 7573 722f 696e 636c 7564  268 "/usr/includ
00507c0: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
00507d0: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
00507e0: 6465 0a6b 7262 355f 7374 7269 6e67 5f74  de.krb5_string_t
00507f0: 6f5f 7469 6d65 7374 616d 7028 6368 6172  o_timestamp(char
0050800: 202a 7374 7269 6e67 2c20 6b72 6235 5f74   *string, krb5_t
0050810: 696d 6573 7461 6d70 202a 7469 6d65 7374  imestamp *timest
0050820: 616d 7070 293b 0a23 2036 3237 3920 222f  ampp);.# 6279 "/
0050830: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
0050840: 2f6b 7262 352e 6822 2033 2034 0a6b 7262  /krb5.h" 3 4.krb
0050850: 355f 6572 726f 725f 636f 6465 0a6b 7262  5_error_code.krb
0050860: 355f 7374 7269 6e67 5f74 6f5f 6465 6c74  5_string_to_delt
0050870: 6174 2863 6861 7220 2a73 7472 696e 672c  at(char *string,
0050880: 206b 7262 355f 6465 6c74 6174 202a 6465   krb5_deltat *de
0050890: 6c74 6174 7029 3b0a 2320 3632 3931 2022  ltatp);.# 6291 "
00508a0: 2f75 7372 2f69 6e63 6c75 6465 2f6b 7262  /usr/include/krb
00508b0: 352f 6b72 6235 2e68 2220 3320 340a 6b72  5/krb5.h" 3 4.kr
00508c0: 6235 5f65 7272 6f72 5f63 6f64 650a 6b72  b5_error_code.kr
00508d0: 6235 5f65 6e63 7479 7065 5f74 6f5f 7374  b5_enctype_to_st
00508e0: 7269 6e67 286b 7262 355f 656e 6374 7970  ring(krb5_enctyp
00508f0: 6520 656e 6374 7970 652c 2063 6861 7220  e enctype, char 
0050900: 2a62 7566 6665 722c 2073 697a 655f 7420  *buffer, size_t 
0050910: 6275 666c 656e 293b 0a23 2036 3331 3020  buflen);.# 6310 
0050920: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
0050930: 6235 2f6b 7262 352e 6822 2033 2034 0a6b  b5/krb5.h" 3 4.k
0050940: 7262 355f 6572 726f 725f 636f 6465 0a6b  rb5_error_code.k
0050950: 7262 355f 656e 6374 7970 655f 746f 5f6e  rb5_enctype_to_n
0050960: 616d 6528 6b72 6235 5f65 6e63 7479 7065  ame(krb5_enctype
0050970: 2065 6e63 7479 7065 2c20 6b72 6235 5f62   enctype, krb5_b
0050980: 6f6f 6c65 616e 2073 686f 7274 6573 742c  oolean shortest,
0050990: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
00509a0: 2020 2020 2020 6368 6172 202a 6275 6666        char *buff
00509b0: 6572 2c20 7369 7a65 5f74 2062 7566 6c65  er, size_t bufle
00509c0: 6e29 3b0a 2320 3633 3233 2022 2f75 7372  n);.# 6323 "/usr
00509d0: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
00509e0: 6235 2e68 2220 3320 340a 6b72 6235 5f65  b5.h" 3 4.krb5_e
00509f0: 7272 6f72 5f63 6f64 650a 6b72 6235 5f73  rror_code.krb5_s
0050a00: 616c 7474 7970 655f 746f 5f73 7472 696e  alttype_to_strin
0050a10: 6728 6b72 6235 5f69 6e74 3332 2073 616c  g(krb5_int32 sal
0050a20: 7474 7970 652c 2063 6861 7220 2a62 7566  ttype, char *buf
0050a30: 6665 722c 2073 697a 655f 7420 6275 666c  fer, size_t bufl
0050a40: 656e 293b 0a23 2036 3333 3520 222f 7573  en);.# 6335 "/us
0050a50: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
0050a60: 7262 352e 6822 2033 2034 0a6b 7262 355f  rb5.h" 3 4.krb5_
0050a70: 6572 726f 725f 636f 6465 0a6b 7262 355f  error_code.krb5_
0050a80: 636b 7375 6d74 7970 655f 746f 5f73 7472  cksumtype_to_str
0050a90: 696e 6728 6b72 6235 5f63 6b73 756d 7479  ing(krb5_cksumty
0050aa0: 7065 2063 6b73 756d 7479 7065 2c20 6368  pe cksumtype, ch
0050ab0: 6172 202a 6275 6666 6572 2c20 7369 7a65  ar *buffer, size
0050ac0: 5f74 2062 7566 6c65 6e29 3b0a 2320 3633  _t buflen);.# 63
0050ad0: 3530 2022 2f75 7372 2f69 6e63 6c75 6465  50 "/usr/include
0050ae0: 2f6b 7262 352f 6b72 6235 2e68 2220 3320  /krb5/krb5.h" 3 
0050af0: 340a 6b72 6235 5f65 7272 6f72 5f63 6f64  4.krb5_error_cod
0050b00: 650a 6b72 6235 5f74 696d 6573 7461 6d70  e.krb5_timestamp
0050b10: 5f74 6f5f 7374 7269 6e67 286b 7262 355f  _to_string(krb5_
0050b20: 7469 6d65 7374 616d 7020 7469 6d65 7374  timestamp timest
0050b30: 616d 702c 2063 6861 7220 2a62 7566 6665  amp, char *buffe
0050b40: 722c 2073 697a 655f 7420 6275 666c 656e  r, size_t buflen
0050b50: 293b 0a23 2036 3336 3720 222f 7573 722f  );.# 6367 "/usr/
0050b60: 696e 636c 7564 652f 6b72 6235 2f6b 7262  include/krb5/krb
0050b70: 352e 6822 2033 2034 0a6b 7262 355f 6572  5.h" 3 4.krb5_er
0050b80: 726f 725f 636f 6465 0a6b 7262 355f 7469  ror_code.krb5_ti
0050b90: 6d65 7374 616d 705f 746f 5f73 6673 7472  mestamp_to_sfstr
0050ba0: 696e 6728 6b72 6235 5f74 696d 6573 7461  ing(krb5_timesta
0050bb0: 6d70 2074 696d 6573 7461 6d70 2c20 6368  mp timestamp, ch
0050bc0: 6172 202a 6275 6666 6572 2c0a 2020 2020  ar *buffer,.    
0050bd0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0050be0: 2020 2020 2020 2073 697a 655f 7420 6275         size_t bu
0050bf0: 666c 656e 2c20 6368 6172 202a 7061 6429  flen, char *pad)
0050c00: 3b0a 2320 3633 3830 2022 2f75 7372 2f69  ;.# 6380 "/usr/i
0050c10: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
0050c20: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
0050c30: 6f72 5f63 6f64 650a 6b72 6235 5f64 656c  or_code.krb5_del
0050c40: 7461 745f 746f 5f73 7472 696e 6728 6b72  tat_to_string(kr
0050c50: 6235 5f64 656c 7461 7420 6465 6c74 6174  b5_deltat deltat
0050c60: 2c20 6368 6172 202a 6275 6666 6572 2c20  , char *buffer, 
0050c70: 7369 7a65 5f74 2062 7566 6c65 6e29 3b0a  size_t buflen);.
0050c80: 2320 3633 3933 2022 2f75 7372 2f69 6e63  # 6393 "/usr/inc
0050c90: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
0050ca0: 2220 3320 340a 7479 7065 6465 6620 7374  " 3 4.typedef st
0050cb0: 7275 6374 205f 6b72 6235 5f70 726f 6d70  ruct _krb5_promp
0050cc0: 7420 7b0a 2020 2020 6368 6172 202a 7072  t {.    char *pr
0050cd0: 6f6d 7074 3b0a 2020 2020 696e 7420 6869  ompt;.    int hi
0050ce0: 6464 656e 3b0a 2020 2020 6b72 6235 5f64  dden;.    krb5_d
0050cf0: 6174 6120 2a72 6570 6c79 3b0a 7d20 6b72  ata *reply;.} kr
0050d00: 6235 5f70 726f 6d70 743b 0a0a 0a74 7970  b5_prompt;...typ
0050d10: 6564 6566 206b 7262 355f 6572 726f 725f  edef krb5_error_
0050d20: 636f 6465 0a28 202a 6b72 6235 5f70 726f  code.( *krb5_pro
0050d30: 6d70 7465 725f 6663 7429 286b 7262 355f  mpter_fct)(krb5_
0050d40: 636f 6e74 6578 7420 636f 6e74 6578 742c  context context,
0050d50: 2076 6f69 6420 2a64 6174 612c 0a20 2020   void *data,.   
0050d60: 2020 2020 2020 2020 2020 2020 2020 2020                  
0050d70: 2020 2020 2020 2020 2020 2020 2020 2020                  
0050d80: 636f 6e73 7420 6368 6172 202a 6e61 6d65  const char *name
0050d90: 2c20 636f 6e73 7420 6368 6172 202a 6261  , const char *ba
0050da0: 6e6e 6572 2c0a 2020 2020 2020 2020 2020  nner,.          
0050db0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0050dc0: 2020 2020 2020 2020 2069 6e74 206e 756d           int num
0050dd0: 5f70 726f 6d70 7473 2c20 6b72 6235 5f70  _prompts, krb5_p
0050de0: 726f 6d70 7420 7072 6f6d 7074 735b 5d29  rompt prompts[])
0050df0: 3b0a 2320 3634 3330 2022 2f75 7372 2f69  ;.# 6430 "/usr/i
0050e00: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
0050e10: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
0050e20: 6f72 5f63 6f64 650a 6b72 6235 5f70 726f  or_code.krb5_pro
0050e30: 6d70 7465 725f 706f 7369 7828 6b72 6235  mpter_posix(krb5
0050e40: 5f63 6f6e 7465 7874 2063 6f6e 7465 7874  _context context
0050e50: 2c20 766f 6964 202a 6461 7461 2c20 636f  , void *data, co
0050e60: 6e73 7420 6368 6172 202a 6e61 6d65 2c0a  nst char *name,.
0050e70: 2020 2020 2020 2020 2020 2020 2020 2020                  
0050e80: 2020 2020 636f 6e73 7420 6368 6172 202a      const char *
0050e90: 6261 6e6e 6572 2c20 696e 7420 6e75 6d5f  banner, int num_
0050ea0: 7072 6f6d 7074 732c 0a20 2020 2020 2020  prompts,.       
0050eb0: 2020 2020 2020 2020 2020 2020 206b 7262               krb
0050ec0: 355f 7072 6f6d 7074 2070 726f 6d70 7473  5_prompt prompts
0050ed0: 5b5d 293b 0a23 2036 3537 3220 222f 7573  []);.# 6572 "/us
0050ee0: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
0050ef0: 7262 352e 6822 2033 2034 0a74 7970 6564  rb5.h" 3 4.typed
0050f00: 6566 2073 7472 7563 7420 6b72 6235 5f72  ef struct krb5_r
0050f10: 6573 706f 6e64 6572 5f63 6f6e 7465 7874  esponder_context
0050f20: 5f73 7420 2a6b 7262 355f 7265 7370 6f6e  _st *krb5_respon
0050f30: 6465 725f 636f 6e74 6578 743b 0a23 2036  der_context;.# 6
0050f40: 3538 3820 222f 7573 722f 696e 636c 7564  588 "/usr/includ
0050f50: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
0050f60: 2034 0a63 6f6e 7374 2063 6861 7220 2a20   4.const char * 
0050f70: 636f 6e73 7420 2a0a 6b72 6235 5f72 6573  const *.krb5_res
0050f80: 706f 6e64 6572 5f6c 6973 745f 7175 6573  ponder_list_ques
0050f90: 7469 6f6e 7328 6b72 6235 5f63 6f6e 7465  tions(krb5_conte
0050fa0: 7874 2063 7478 2c20 6b72 6235 5f72 6573  xt ctx, krb5_res
0050fb0: 706f 6e64 6572 5f63 6f6e 7465 7874 2072  ponder_context r
0050fc0: 6374 7829 3b0a 2320 3636 3037 2022 2f75  ctx);.# 6607 "/u
0050fd0: 7372 2f69 6e63 6c75 6465 2f6b 7262 352f  sr/include/krb5/
0050fe0: 6b72 6235 2e68 2220 3320 340a 636f 6e73  krb5.h" 3 4.cons
0050ff0: 7420 6368 6172 202a 0a6b 7262 355f 7265  t char *.krb5_re
0051000: 7370 6f6e 6465 725f 6765 745f 6368 616c  sponder_get_chal
0051010: 6c65 6e67 6528 6b72 6235 5f63 6f6e 7465  lenge(krb5_conte
0051020: 7874 2063 7478 2c20 6b72 6235 5f72 6573  xt ctx, krb5_res
0051030: 706f 6e64 6572 5f63 6f6e 7465 7874 2072  ponder_context r
0051040: 6374 782c 0a20 2020 2020 2020 2020 2020  ctx,.           
0051050: 2020 2020 2020 2020 2020 2020 2020 2020                  
0051060: 2020 636f 6e73 7420 6368 6172 202a 7175    const char *qu
0051070: 6573 7469 6f6e 293b 0a23 2036 3632 3620  estion);.# 6626 
0051080: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
0051090: 6235 2f6b 7262 352e 6822 2033 2034 0a6b  b5/krb5.h" 3 4.k
00510a0: 7262 355f 6572 726f 725f 636f 6465 0a6b  rb5_error_code.k
00510b0: 7262 355f 7265 7370 6f6e 6465 725f 7365  rb5_responder_se
00510c0: 745f 616e 7377 6572 286b 7262 355f 636f  t_answer(krb5_co
00510d0: 6e74 6578 7420 6374 782c 206b 7262 355f  ntext ctx, krb5_
00510e0: 7265 7370 6f6e 6465 725f 636f 6e74 6578  responder_contex
00510f0: 7420 7263 7478 2c0a 2020 2020 2020 2020  t rctx,.        
0051100: 2020 2020 2020 2020 2020 2020 2020 2020                  
0051110: 2020 636f 6e73 7420 6368 6172 202a 7175    const char *qu
0051120: 6573 7469 6f6e 2c20 636f 6e73 7420 6368  estion, const ch
0051130: 6172 202a 616e 7377 6572 293b 0a23 2036  ar *answer);.# 6
0051140: 3635 3020 222f 7573 722f 696e 636c 7564  650 "/usr/includ
0051150: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
0051160: 2034 0a74 7970 6564 6566 206b 7262 355f   4.typedef krb5_
0051170: 6572 726f 725f 636f 6465 0a28 202a 6b72  error_code.( *kr
0051180: 6235 5f72 6573 706f 6e64 6572 5f66 6e29  b5_responder_fn)
0051190: 286b 7262 355f 636f 6e74 6578 7420 6374  (krb5_context ct
00511a0: 782c 2076 6f69 6420 2a64 6174 612c 0a20  x, void *data,. 
00511b0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00511c0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00511d0: 2020 6b72 6235 5f72 6573 706f 6e64 6572    krb5_responder
00511e0: 5f63 6f6e 7465 7874 2072 6374 7829 3b0a  _context rctx);.
00511f0: 0a74 7970 6564 6566 2073 7472 7563 7420  .typedef struct 
0051200: 5f6b 7262 355f 7265 7370 6f6e 6465 725f  _krb5_responder_
0051210: 6f74 705f 746f 6b65 6e69 6e66 6f20 7b0a  otp_tokeninfo {.
0051220: 2020 2020 6b72 6235 5f66 6c61 6773 2066      krb5_flags f
0051230: 6c61 6773 3b0a 2020 2020 6b72 6235 5f69  lags;.    krb5_i
0051240: 6e74 3332 2066 6f72 6d61 743b 0a20 2020  nt32 format;.   
0051250: 206b 7262 355f 696e 7433 3220 6c65 6e67   krb5_int32 leng
0051260: 7468 3b0a 2020 2020 6368 6172 202a 7665  th;.    char *ve
0051270: 6e64 6f72 3b0a 2020 2020 6368 6172 202a  ndor;.    char *
0051280: 6368 616c 6c65 6e67 653b 0a20 2020 2063  challenge;.    c
0051290: 6861 7220 2a74 6f6b 656e 5f69 643b 0a20  har *token_id;. 
00512a0: 2020 2063 6861 7220 2a61 6c67 5f69 643b     char *alg_id;
00512b0: 0a7d 206b 7262 355f 7265 7370 6f6e 6465  .} krb5_responde
00512c0: 725f 6f74 705f 746f 6b65 6e69 6e66 6f3b  r_otp_tokeninfo;
00512d0: 0a0a 7479 7065 6465 6620 7374 7275 6374  ..typedef struct
00512e0: 205f 6b72 6235 5f72 6573 706f 6e64 6572   _krb5_responder
00512f0: 5f6f 7470 5f63 6861 6c6c 656e 6765 207b  _otp_challenge {
0051300: 0a20 2020 2063 6861 7220 2a73 6572 7669  .    char *servi
0051310: 6365 3b0a 2020 2020 6b72 6235 5f72 6573  ce;.    krb5_res
0051320: 706f 6e64 6572 5f6f 7470 5f74 6f6b 656e  ponder_otp_token
0051330: 696e 666f 202a 2a74 6f6b 656e 696e 666f  info **tokeninfo
0051340: 3b0a 7d20 6b72 6235 5f72 6573 706f 6e64  ;.} krb5_respond
0051350: 6572 5f6f 7470 5f63 6861 6c6c 656e 6765  er_otp_challenge
0051360: 3b0a 2320 3636 3836 2022 2f75 7372 2f69  ;.# 6686 "/usr/i
0051370: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
0051380: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
0051390: 6f72 5f63 6f64 650a 6b72 6235 5f72 6573  or_code.krb5_res
00513a0: 706f 6e64 6572 5f6f 7470 5f67 6574 5f63  ponder_otp_get_c
00513b0: 6861 6c6c 656e 6765 286b 7262 355f 636f  hallenge(krb5_co
00513c0: 6e74 6578 7420 6374 782c 0a20 2020 2020  ntext ctx,.     
00513d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00513e0: 2020 2020 2020 2020 2020 2020 6b72 6235              krb5
00513f0: 5f72 6573 706f 6e64 6572 5f63 6f6e 7465  _responder_conte
0051400: 7874 2072 6374 782c 0a20 2020 2020 2020  xt rctx,.       
0051410: 2020 2020 2020 2020 2020 2020 2020 2020                  
0051420: 2020 2020 2020 2020 2020 6b72 6235 5f72            krb5_r
0051430: 6573 706f 6e64 6572 5f6f 7470 5f63 6861  esponder_otp_cha
0051440: 6c6c 656e 6765 202a 2a63 686c 293b 0a23  llenge **chl);.#
0051450: 2036 3730 3220 222f 7573 722f 696e 636c   6702 "/usr/incl
0051460: 7564 652f 6b72 6235 2f6b 7262 352e 6822  ude/krb5/krb5.h"
0051470: 2033 2034 0a6b 7262 355f 6572 726f 725f   3 4.krb5_error_
0051480: 636f 6465 0a6b 7262 355f 7265 7370 6f6e  code.krb5_respon
0051490: 6465 725f 6f74 705f 7365 745f 616e 7377  der_otp_set_answ
00514a0: 6572 286b 7262 355f 636f 6e74 6578 7420  er(krb5_context 
00514b0: 6374 782c 206b 7262 355f 7265 7370 6f6e  ctx, krb5_respon
00514c0: 6465 725f 636f 6e74 6578 7420 7263 7478  der_context rctx
00514d0: 2c0a 2020 2020 2020 2020 2020 2020 2020  ,.              
00514e0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00514f0: 7369 7a65 5f74 2074 692c 2063 6f6e 7374  size_t ti, const
0051500: 2063 6861 7220 2a76 616c 7565 2c20 636f   char *value, co
0051510: 6e73 7420 6368 6172 202a 7069 6e29 3b0a  nst char *pin);.
0051520: 2320 3637 3135 2022 2f75 7372 2f69 6e63  # 6715 "/usr/inc
0051530: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
0051540: 2220 3320 340a 766f 6964 0a6b 7262 355f  " 3 4.void.krb5_
0051550: 7265 7370 6f6e 6465 725f 6f74 705f 6368  responder_otp_ch
0051560: 616c 6c65 6e67 655f 6672 6565 286b 7262  allenge_free(krb
0051570: 355f 636f 6e74 6578 7420 6374 782c 0a20  5_context ctx,. 
0051580: 2020 2020 2020 2020 2020 2020 2020 2020                  
0051590: 2020 2020 2020 2020 2020 2020 2020 2020                  
00515a0: 206b 7262 355f 7265 7370 6f6e 6465 725f   krb5_responder_
00515b0: 636f 6e74 6578 7420 7263 7478 2c0a 2020  context rctx,.  
00515c0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00515d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00515e0: 6b72 6235 5f72 6573 706f 6e64 6572 5f6f  krb5_responder_o
00515f0: 7470 5f63 6861 6c6c 656e 6765 202a 6368  tp_challenge *ch
0051600: 6c29 3b0a 0a74 7970 6564 6566 2073 7472  l);..typedef str
0051610: 7563 7420 5f6b 7262 355f 7265 7370 6f6e  uct _krb5_respon
0051620: 6465 725f 706b 696e 6974 5f69 6465 6e74  der_pkinit_ident
0051630: 6974 7920 7b0a 2020 2020 6368 6172 202a  ity {.    char *
0051640: 6964 656e 7469 7479 3b0a 2020 2020 6b72  identity;.    kr
0051650: 6235 5f69 6e74 3332 2074 6f6b 656e 5f66  b5_int32 token_f
0051660: 6c61 6773 3b0a 7d20 6b72 6235 5f72 6573  lags;.} krb5_res
0051670: 706f 6e64 6572 5f70 6b69 6e69 745f 6964  ponder_pkinit_id
0051680: 656e 7469 7479 3b0a 0a74 7970 6564 6566  entity;..typedef
0051690: 2073 7472 7563 7420 5f6b 7262 355f 7265   struct _krb5_re
00516a0: 7370 6f6e 6465 725f 706b 696e 6974 5f63  sponder_pkinit_c
00516b0: 6861 6c6c 656e 6765 207b 0a20 2020 206b  hallenge {.    k
00516c0: 7262 355f 7265 7370 6f6e 6465 725f 706b  rb5_responder_pk
00516d0: 696e 6974 5f69 6465 6e74 6974 7920 2a2a  init_identity **
00516e0: 6964 656e 7469 7469 6573 3b0a 7d20 6b72  identities;.} kr
00516f0: 6235 5f72 6573 706f 6e64 6572 5f70 6b69  b5_responder_pki
0051700: 6e69 745f 6368 616c 6c65 6e67 653b 0a23  nit_challenge;.#
0051710: 2036 3734 3620 222f 7573 722f 696e 636c   6746 "/usr/incl
0051720: 7564 652f 6b72 6235 2f6b 7262 352e 6822  ude/krb5/krb5.h"
0051730: 2033 2034 0a6b 7262 355f 6572 726f 725f   3 4.krb5_error_
0051740: 636f 6465 0a6b 7262 355f 7265 7370 6f6e  code.krb5_respon
0051750: 6465 725f 706b 696e 6974 5f67 6574 5f63  der_pkinit_get_c
0051760: 6861 6c6c 656e 6765 286b 7262 355f 636f  hallenge(krb5_co
0051770: 6e74 6578 7420 6374 782c 0a20 2020 2020  ntext ctx,.     
0051780: 2020 2020 2020 2020 2020 2020 2020 2020                  
0051790: 2020 2020 2020 2020 2020 2020 2020 206b                 k
00517a0: 7262 355f 7265 7370 6f6e 6465 725f 636f  rb5_responder_co
00517b0: 6e74 6578 7420 7263 7478 2c0a 2020 2020  ntext rctx,.    
00517c0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00517d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00517e0: 6b72 6235 5f72 6573 706f 6e64 6572 5f70  krb5_responder_p
00517f0: 6b69 6e69 745f 6368 616c 6c65 6e67 6520  kinit_challenge 
0051800: 2a2a 6368 6c5f 6f75 7429 3b0a 2320 3637  **chl_out);.# 67
0051810: 3631 2022 2f75 7372 2f69 6e63 6c75 6465  61 "/usr/include
0051820: 2f6b 7262 352f 6b72 6235 2e68 2220 3320  /krb5/krb5.h" 3 
0051830: 340a 6b72 6235 5f65 7272 6f72 5f63 6f64  4.krb5_error_cod
0051840: 650a 6b72 6235 5f72 6573 706f 6e64 6572  e.krb5_responder
0051850: 5f70 6b69 6e69 745f 7365 745f 616e 7377  _pkinit_set_answ
0051860: 6572 286b 7262 355f 636f 6e74 6578 7420  er(krb5_context 
0051870: 6374 782c 206b 7262 355f 7265 7370 6f6e  ctx, krb5_respon
0051880: 6465 725f 636f 6e74 6578 7420 7263 7478  der_context rctx
0051890: 2c0a 2020 2020 2020 2020 2020 2020 2020  ,.              
00518a0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00518b0: 2020 2063 6f6e 7374 2063 6861 7220 2a69     const char *i
00518c0: 6465 6e74 6974 792c 2063 6f6e 7374 2063  dentity, const c
00518d0: 6861 7220 2a70 696e 293b 0a23 2036 3737  har *pin);.# 677
00518e0: 3420 222f 7573 722f 696e 636c 7564 652f  4 "/usr/include/
00518f0: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
0051900: 0a76 6f69 640a 6b72 6235 5f72 6573 706f  .void.krb5_respo
0051910: 6e64 6572 5f70 6b69 6e69 745f 6368 616c  nder_pkinit_chal
0051920: 6c65 6e67 655f 6672 6565 286b 7262 355f  lenge_free(krb5_
0051930: 636f 6e74 6578 7420 6374 782c 0a20 2020  context ctx,.   
0051940: 2020 2020 2020 2020 2020 2020 2020 2020                  
0051950: 2020 2020 2020 2020 2020 2020 2020 2020                  
0051960: 2020 6b72 6235 5f72 6573 706f 6e64 6572    krb5_responder
0051970: 5f63 6f6e 7465 7874 2072 6374 782c 0a20  _context rctx,. 
0051980: 2020 2020 2020 2020 2020 2020 2020 2020                  
0051990: 2020 2020 2020 2020 2020 2020 2020 2020                  
00519a0: 2020 2020 6b72 6235 5f72 6573 706f 6e64      krb5_respond
00519b0: 6572 5f70 6b69 6e69 745f 6368 616c 6c65  er_pkinit_challe
00519c0: 6e67 6520 2a63 686c 293b 0a0a 0a74 7970  nge *chl);...typ
00519d0: 6564 6566 2073 7472 7563 7420 5f6b 7262  edef struct _krb
00519e0: 355f 6765 745f 696e 6974 5f63 7265 6473  5_get_init_creds
00519f0: 5f6f 7074 207b 0a20 2020 206b 7262 355f  _opt {.    krb5_
0051a00: 666c 6167 7320 666c 6167 733b 0a20 2020  flags flags;.   
0051a10: 206b 7262 355f 6465 6c74 6174 2074 6b74   krb5_deltat tkt
0051a20: 5f6c 6966 653b 0a20 2020 206b 7262 355f  _life;.    krb5_
0051a30: 6465 6c74 6174 2072 656e 6577 5f6c 6966  deltat renew_lif
0051a40: 653b 0a20 2020 2069 6e74 2066 6f72 7761  e;.    int forwa
0051a50: 7264 6162 6c65 3b0a 2020 2020 696e 7420  rdable;.    int 
0051a60: 7072 6f78 6961 626c 653b 0a20 2020 206b  proxiable;.    k
0051a70: 7262 355f 656e 6374 7970 6520 2a65 7479  rb5_enctype *ety
0051a80: 7065 5f6c 6973 743b 0a20 2020 2069 6e74  pe_list;.    int
0051a90: 2065 7479 7065 5f6c 6973 745f 6c65 6e67   etype_list_leng
0051aa0: 7468 3b0a 2020 2020 6b72 6235 5f61 6464  th;.    krb5_add
0051ab0: 7265 7373 202a 2a61 6464 7265 7373 5f6c  ress **address_l
0051ac0: 6973 743b 0a20 2020 206b 7262 355f 7072  ist;.    krb5_pr
0051ad0: 6561 7574 6874 7970 6520 2a70 7265 6175  eauthtype *preau
0051ae0: 7468 5f6c 6973 743b 0a20 2020 2069 6e74  th_list;.    int
0051af0: 2070 7265 6175 7468 5f6c 6973 745f 6c65   preauth_list_le
0051b00: 6e67 7468 3b0a 2020 2020 6b72 6235 5f64  ngth;.    krb5_d
0051b10: 6174 6120 2a73 616c 743b 0a7d 206b 7262  ata *salt;.} krb
0051b20: 355f 6765 745f 696e 6974 5f63 7265 6473  5_get_init_creds
0051b30: 5f6f 7074 3b0a 2320 3638 3230 2022 2f75  _opt;.# 6820 "/u
0051b40: 7372 2f69 6e63 6c75 6465 2f6b 7262 352f  sr/include/krb5/
0051b50: 6b72 6235 2e68 2220 3320 340a 6b72 6235  krb5.h" 3 4.krb5
0051b60: 5f65 7272 6f72 5f63 6f64 650a 6b72 6235  _error_code.krb5
0051b70: 5f67 6574 5f69 6e69 745f 6372 6564 735f  _get_init_creds_
0051b80: 6f70 745f 616c 6c6f 6328 6b72 6235 5f63  opt_alloc(krb5_c
0051b90: 6f6e 7465 7874 2063 6f6e 7465 7874 2c0a  ontext context,.
0051ba0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0051bb0: 2020 2020 2020 2020 2020 2020 2020 6b72                kr
0051bc0: 6235 5f67 6574 5f69 6e69 745f 6372 6564  b5_get_init_cred
0051bd0: 735f 6f70 7420 2a2a 6f70 7429 3b0a 2320  s_opt **opt);.# 
0051be0: 3638 3332 2022 2f75 7372 2f69 6e63 6c75  6832 "/usr/inclu
0051bf0: 6465 2f6b 7262 352f 6b72 6235 2e68 2220  de/krb5/krb5.h" 
0051c00: 3320 340a 766f 6964 0a6b 7262 355f 6765  3 4.void.krb5_ge
0051c10: 745f 696e 6974 5f63 7265 6473 5f6f 7074  t_init_creds_opt
0051c20: 5f66 7265 6528 6b72 6235 5f63 6f6e 7465  _free(krb5_conte
0051c30: 7874 2063 6f6e 7465 7874 2c0a 2020 2020  xt context,.    
0051c40: 2020 2020 2020 2020 2020 2020 2020 2020                  
0051c50: 2020 2020 2020 2020 206b 7262 355f 6765           krb5_ge
0051c60: 745f 696e 6974 5f63 7265 6473 5f6f 7074  t_init_creds_opt
0051c70: 202a 6f70 7429 3b0a 0a0a 766f 6964 0a6b   *opt);...void.k
0051c80: 7262 355f 6765 745f 696e 6974 5f63 7265  rb5_get_init_cre
0051c90: 6473 5f6f 7074 5f69 6e69 7428 6b72 6235  ds_opt_init(krb5
0051ca0: 5f67 6574 5f69 6e69 745f 6372 6564 735f  _get_init_creds_
0051cb0: 6f70 7420 2a6f 7074 293b 0a0a 0a0a 0a0a  opt *opt);......
0051cc0: 0a0a 766f 6964 0a6b 7262 355f 6765 745f  ..void.krb5_get_
0051cd0: 696e 6974 5f63 7265 6473 5f6f 7074 5f73  init_creds_opt_s
0051ce0: 6574 5f74 6b74 5f6c 6966 6528 6b72 6235  et_tkt_life(krb5
0051cf0: 5f67 6574 5f69 6e69 745f 6372 6564 735f  _get_init_creds_
0051d00: 6f70 7420 2a6f 7074 2c0a 2020 2020 2020  opt *opt,.      
0051d10: 2020 2020 2020 2020 2020 2020 2020 2020                  
0051d20: 2020 2020 2020 2020 2020 2020 2020 206b                 k
0051d30: 7262 355f 6465 6c74 6174 2074 6b74 5f6c  rb5_deltat tkt_l
0051d40: 6966 6529 3b0a 0a0a 0a0a 0a0a 0a76 6f69  ife);........voi
0051d50: 640a 6b72 6235 5f67 6574 5f69 6e69 745f  d.krb5_get_init_
0051d60: 6372 6564 735f 6f70 745f 7365 745f 7265  creds_opt_set_re
0051d70: 6e65 775f 6c69 6665 286b 7262 355f 6765  new_life(krb5_ge
0051d80: 745f 696e 6974 5f63 7265 6473 5f6f 7074  t_init_creds_opt
0051d90: 202a 6f70 742c 0a20 2020 2020 2020 2020   *opt,.         
0051da0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0051db0: 2020 2020 2020 2020 2020 2020 2020 6b72                kr
0051dc0: 6235 5f64 656c 7461 7420 7265 6e65 775f  b5_deltat renew_
0051dd0: 6c69 6665 293b 0a0a 0a0a 0a0a 0a0a 766f  life);........vo
0051de0: 6964 0a6b 7262 355f 6765 745f 696e 6974  id.krb5_get_init
0051df0: 5f63 7265 6473 5f6f 7074 5f73 6574 5f66  _creds_opt_set_f
0051e00: 6f72 7761 7264 6162 6c65 286b 7262 355f  orwardable(krb5_
0051e10: 6765 745f 696e 6974 5f63 7265 6473 5f6f  get_init_creds_o
0051e20: 7074 202a 6f70 742c 0a20 2020 2020 2020  pt *opt,.       
0051e30: 2020 2020 2020 2020 2020 2020 2020 2020                  
0051e40: 2020 2020 2020 2020 2020 2020 2020 2020                  
0051e50: 2069 6e74 2066 6f72 7761 7264 6162 6c65   int forwardable
0051e60: 293b 0a0a 0a0a 0a0a 0a0a 766f 6964 0a6b  );........void.k
0051e70: 7262 355f 6765 745f 696e 6974 5f63 7265  rb5_get_init_cre
0051e80: 6473 5f6f 7074 5f73 6574 5f70 726f 7869  ds_opt_set_proxi
0051e90: 6162 6c65 286b 7262 355f 6765 745f 696e  able(krb5_get_in
0051ea0: 6974 5f63 7265 6473 5f6f 7074 202a 6f70  it_creds_opt *op
0051eb0: 742c 0a20 2020 2020 2020 2020 2020 2020  t,.             
0051ec0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0051ed0: 2020 2020 2020 2020 2069 6e74 2070 726f           int pro
0051ee0: 7869 6162 6c65 293b 0a0a 0a0a 0a0a 0a0a  xiable);........
0051ef0: 766f 6964 0a6b 7262 355f 6765 745f 696e  void.krb5_get_in
0051f00: 6974 5f63 7265 6473 5f6f 7074 5f73 6574  it_creds_opt_set
0051f10: 5f63 616e 6f6e 6963 616c 697a 6528 6b72  _canonicalize(kr
0051f20: 6235 5f67 6574 5f69 6e69 745f 6372 6564  b5_get_init_cred
0051f30: 735f 6f70 7420 2a6f 7074 2c0a 2020 2020  s_opt *opt,.    
0051f40: 2020 2020 2020 2020 2020 2020 2020 2020                  
0051f50: 2020 2020 2020 2020 2020 2020 2020 2020                  
0051f60: 2020 2020 2069 6e74 2063 616e 6f6e 6963       int canonic
0051f70: 616c 697a 6529 3b0a 2320 3639 3031 2022  alize);.# 6901 "
0051f80: 2f75 7372 2f69 6e63 6c75 6465 2f6b 7262  /usr/include/krb
0051f90: 352f 6b72 6235 2e68 2220 3320 340a 766f  5/krb5.h" 3 4.vo
0051fa0: 6964 0a6b 7262 355f 6765 745f 696e 6974  id.krb5_get_init
0051fb0: 5f63 7265 6473 5f6f 7074 5f73 6574 5f61  _creds_opt_set_a
0051fc0: 6e6f 6e79 6d6f 7573 286b 7262 355f 6765  nonymous(krb5_ge
0051fd0: 745f 696e 6974 5f63 7265 6473 5f6f 7074  t_init_creds_opt
0051fe0: 202a 6f70 742c 0a20 2020 2020 2020 2020   *opt,.         
0051ff0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052000: 2020 2020 2020 2020 2020 2020 2069 6e74               int
0052010: 2061 6e6f 6e79 6d6f 7573 293b 0a23 2036   anonymous);.# 6
0052020: 3931 3220 222f 7573 722f 696e 636c 7564  912 "/usr/includ
0052030: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
0052040: 2034 0a76 6f69 640a 6b72 6235 5f67 6574   4.void.krb5_get
0052050: 5f69 6e69 745f 6372 6564 735f 6f70 745f  _init_creds_opt_
0052060: 7365 745f 6574 7970 655f 6c69 7374 286b  set_etype_list(k
0052070: 7262 355f 6765 745f 696e 6974 5f63 7265  rb5_get_init_cre
0052080: 6473 5f6f 7074 202a 6f70 742c 0a20 2020  ds_opt *opt,.   
0052090: 2020 2020 2020 2020 2020 2020 2020 2020                  
00520a0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00520b0: 2020 2020 6b72 6235 5f65 6e63 7479 7065      krb5_enctype
00520c0: 202a 6574 7970 655f 6c69 7374 2c0a 2020   *etype_list,.  
00520d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00520e0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00520f0: 2020 2020 2069 6e74 2065 7479 7065 5f6c       int etype_l
0052100: 6973 745f 6c65 6e67 7468 293b 0a0a 0a0a  ist_length);....
0052110: 0a0a 0a0a 766f 6964 0a6b 7262 355f 6765  ....void.krb5_ge
0052120: 745f 696e 6974 5f63 7265 6473 5f6f 7074  t_init_creds_opt
0052130: 5f73 6574 5f61 6464 7265 7373 5f6c 6973  _set_address_lis
0052140: 7428 6b72 6235 5f67 6574 5f69 6e69 745f  t(krb5_get_init_
0052150: 6372 6564 735f 6f70 7420 2a6f 7074 2c0a  creds_opt *opt,.
0052160: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052170: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052180: 2020 2020 2020 2020 206b 7262 355f 6164           krb5_ad
0052190: 6472 6573 7320 2a2a 6164 6472 6573 7365  dress **addresse
00521a0: 7329 3b0a 2320 3639 3338 2022 2f75 7372  s);.# 6938 "/usr
00521b0: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
00521c0: 6235 2e68 2220 3320 340a 766f 6964 0a6b  b5.h" 3 4.void.k
00521d0: 7262 355f 6765 745f 696e 6974 5f63 7265  rb5_get_init_cre
00521e0: 6473 5f6f 7074 5f73 6574 5f70 7265 6175  ds_opt_set_preau
00521f0: 7468 5f6c 6973 7428 6b72 6235 5f67 6574  th_list(krb5_get
0052200: 5f69 6e69 745f 6372 6564 735f 6f70 7420  _init_creds_opt 
0052210: 2a6f 7074 2c0a 2020 2020 2020 2020 2020  *opt,.          
0052220: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052230: 2020 2020 2020 2020 2020 2020 2020 206b                 k
0052240: 7262 355f 7072 6561 7574 6874 7970 6520  rb5_preauthtype 
0052250: 2a70 7265 6175 7468 5f6c 6973 742c 0a20  *preauth_list,. 
0052260: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052270: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052280: 2020 2020 2020 2020 696e 7420 7072 6561          int prea
0052290: 7574 685f 6c69 7374 5f6c 656e 6774 6829  uth_list_length)
00522a0: 3b0a 2320 3639 3534 2022 2f75 7372 2f69  ;.# 6954 "/usr/i
00522b0: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
00522c0: 2e68 2220 3320 340a 766f 6964 0a6b 7262  .h" 3 4.void.krb
00522d0: 355f 6765 745f 696e 6974 5f63 7265 6473  5_get_init_creds
00522e0: 5f6f 7074 5f73 6574 5f73 616c 7428 6b72  _opt_set_salt(kr
00522f0: 6235 5f67 6574 5f69 6e69 745f 6372 6564  b5_get_init_cred
0052300: 735f 6f70 7420 2a6f 7074 2c0a 2020 2020  s_opt *opt,.    
0052310: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052320: 2020 2020 2020 2020 2020 2020 206b 7262               krb
0052330: 355f 6461 7461 202a 7361 6c74 293b 0a23  5_data *salt);.#
0052340: 2036 3936 3820 222f 7573 722f 696e 636c   6968 "/usr/incl
0052350: 7564 652f 6b72 6235 2f6b 7262 352e 6822  ude/krb5/krb5.h"
0052360: 2033 2034 0a76 6f69 640a 6b72 6235 5f67   3 4.void.krb5_g
0052370: 6574 5f69 6e69 745f 6372 6564 735f 6f70  et_init_creds_op
0052380: 745f 7365 745f 6368 616e 6765 5f70 6173  t_set_change_pas
0052390: 7377 6f72 645f 7072 6f6d 7074 286b 7262  sword_prompt(krb
00523a0: 355f 6765 745f 696e 6974 5f63 7265 6473  5_get_init_creds
00523b0: 5f6f 7074 202a 6f70 742c 0a20 2020 2020  _opt *opt,.     
00523c0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00523d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00523e0: 2020 2020 2020 2020 2020 2020 2020 696e                in
00523f0: 7420 7072 6f6d 7074 293b 0a0a 0a74 7970  t prompt);...typ
0052400: 6564 6566 2073 7472 7563 7420 5f6b 7262  edef struct _krb
0052410: 355f 6769 635f 6f70 745f 7061 5f64 6174  5_gic_opt_pa_dat
0052420: 6120 7b0a 2020 2020 6368 6172 202a 6174  a {.    char *at
0052430: 7472 3b0a 2020 2020 6368 6172 202a 7661  tr;.    char *va
0052440: 6c75 653b 0a7d 206b 7262 355f 6769 635f  lue;.} krb5_gic_
0052450: 6f70 745f 7061 5f64 6174 613b 0a23 2036  opt_pa_data;.# 6
0052460: 3939 3020 222f 7573 722f 696e 636c 7564  990 "/usr/includ
0052470: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
0052480: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
0052490: 6465 0a6b 7262 355f 6765 745f 696e 6974  de.krb5_get_init
00524a0: 5f63 7265 6473 5f6f 7074 5f73 6574 5f70  _creds_opt_set_p
00524b0: 6128 6b72 6235 5f63 6f6e 7465 7874 2063  a(krb5_context c
00524c0: 6f6e 7465 7874 2c0a 2020 2020 2020 2020  ontext,.        
00524d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00524e0: 2020 2020 2020 206b 7262 355f 6765 745f         krb5_get_
00524f0: 696e 6974 5f63 7265 6473 5f6f 7074 202a  init_creds_opt *
0052500: 6f70 742c 2063 6f6e 7374 2063 6861 7220  opt, const char 
0052510: 2a61 7474 722c 0a20 2020 2020 2020 2020  *attr,.         
0052520: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052530: 2020 2020 2020 636f 6e73 7420 6368 6172        const char
0052540: 202a 7661 6c75 6529 3b0a 2320 3730 3130   *value);.# 7010
0052550: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
0052560: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
0052570: 6b72 6235 5f65 7272 6f72 5f63 6f64 650a  krb5_error_code.
0052580: 6b72 6235 5f67 6574 5f69 6e69 745f 6372  krb5_get_init_cr
0052590: 6564 735f 6f70 745f 7365 745f 6661 7374  eds_opt_set_fast
00525a0: 5f63 6361 6368 655f 6e61 6d65 286b 7262  _ccache_name(krb
00525b0: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
00525c0: 742c 0a20 2020 2020 2020 2020 2020 2020  t,.             
00525d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00525e0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00525f0: 6b72 6235 5f67 6574 5f69 6e69 745f 6372  krb5_get_init_cr
0052600: 6564 735f 6f70 7420 2a6f 7074 2c0a 2020  eds_opt *opt,.  
0052610: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052620: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052630: 2020 2020 2020 2020 2020 2063 6f6e 7374             const
0052640: 2063 6861 7220 2a66 6173 745f 6363 6163   char *fast_ccac
0052650: 6865 5f6e 616d 6529 3b0a 2320 3730 3237  he_name);.# 7027
0052660: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
0052670: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
0052680: 6b72 6235 5f65 7272 6f72 5f63 6f64 650a  krb5_error_code.
0052690: 6b72 6235 5f67 6574 5f69 6e69 745f 6372  krb5_get_init_cr
00526a0: 6564 735f 6f70 745f 7365 745f 6661 7374  eds_opt_set_fast
00526b0: 5f63 6361 6368 6528 6b72 6235 5f63 6f6e  _ccache(krb5_con
00526c0: 7465 7874 2063 6f6e 7465 7874 2c0a 2020  text context,.  
00526d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00526e0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00526f0: 2020 2020 2020 6b72 6235 5f67 6574 5f69        krb5_get_i
0052700: 6e69 745f 6372 6564 735f 6f70 7420 2a6f  nit_creds_opt *o
0052710: 7074 2c0a 2020 2020 2020 2020 2020 2020  pt,.            
0052720: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052730: 2020 2020 2020 2020 2020 2020 6b72 6235              krb5
0052740: 5f63 6361 6368 6520 6363 6163 6865 293b  _ccache ccache);
0052750: 0a23 2037 3034 3820 222f 7573 722f 696e  .# 7048 "/usr/in
0052760: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
0052770: 6822 2033 2034 0a6b 7262 355f 6572 726f  h" 3 4.krb5_erro
0052780: 725f 636f 6465 0a6b 7262 355f 6765 745f  r_code.krb5_get_
0052790: 696e 6974 5f63 7265 6473 5f6f 7074 5f73  init_creds_opt_s
00527a0: 6574 5f69 6e5f 6363 6163 6865 286b 7262  et_in_ccache(krb
00527b0: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
00527c0: 742c 0a20 2020 2020 2020 2020 2020 2020  t,.             
00527d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00527e0: 2020 2020 2020 2020 206b 7262 355f 6765           krb5_ge
00527f0: 745f 696e 6974 5f63 7265 6473 5f6f 7074  t_init_creds_opt
0052800: 202a 6f70 742c 0a20 2020 2020 2020 2020   *opt,.         
0052810: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052820: 2020 2020 2020 2020 2020 2020 206b 7262               krb
0052830: 355f 6363 6163 6865 2063 6361 6368 6529  5_ccache ccache)
0052840: 3b0a 2320 3730 3636 2022 2f75 7372 2f69  ;.# 7066 "/usr/i
0052850: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
0052860: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
0052870: 6f72 5f63 6f64 650a 6b72 6235 5f67 6574  or_code.krb5_get
0052880: 5f69 6e69 745f 6372 6564 735f 6f70 745f  _init_creds_opt_
0052890: 7365 745f 6f75 745f 6363 6163 6865 286b  set_out_ccache(k
00528a0: 7262 355f 636f 6e74 6578 7420 636f 6e74  rb5_context cont
00528b0: 6578 742c 0a20 2020 2020 2020 2020 2020  ext,.           
00528c0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00528d0: 2020 2020 2020 2020 2020 2020 6b72 6235              krb5
00528e0: 5f67 6574 5f69 6e69 745f 6372 6564 735f  _get_init_creds_
00528f0: 6f70 7420 2a6f 7074 2c0a 2020 2020 2020  opt *opt,.      
0052900: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052910: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052920: 206b 7262 355f 6363 6163 6865 2063 6361   krb5_ccache cca
0052930: 6368 6529 3b0a 2320 3730 3834 2022 2f75  che);.# 7084 "/u
0052940: 7372 2f69 6e63 6c75 6465 2f6b 7262 352f  sr/include/krb5/
0052950: 6b72 6235 2e68 2220 3320 340a 6b72 6235  krb5.h" 3 4.krb5
0052960: 5f65 7272 6f72 5f63 6f64 650a 6b72 6235  _error_code.krb5
0052970: 5f67 6574 5f69 6e69 745f 6372 6564 735f  _get_init_creds_
0052980: 6f70 745f 7365 745f 6661 7374 5f66 6c61  opt_set_fast_fla
0052990: 6773 286b 7262 355f 636f 6e74 6578 7420  gs(krb5_context 
00529a0: 636f 6e74 6578 742c 0a20 2020 2020 2020  context,.       
00529b0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00529c0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00529d0: 6b72 6235 5f67 6574 5f69 6e69 745f 6372  krb5_get_init_cr
00529e0: 6564 735f 6f70 7420 2a6f 7074 2c0a 2020  eds_opt *opt,.  
00529f0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052a00: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052a10: 2020 2020 206b 7262 355f 666c 6167 7320       krb5_flags 
0052a20: 666c 6167 7329 3b0a 2320 3730 3939 2022  flags);.# 7099 "
0052a30: 2f75 7372 2f69 6e63 6c75 6465 2f6b 7262  /usr/include/krb
0052a40: 352f 6b72 6235 2e68 2220 3320 340a 6b72  5/krb5.h" 3 4.kr
0052a50: 6235 5f65 7272 6f72 5f63 6f64 650a 6b72  b5_error_code.kr
0052a60: 6235 5f67 6574 5f69 6e69 745f 6372 6564  b5_get_init_cred
0052a70: 735f 6f70 745f 6765 745f 6661 7374 5f66  s_opt_get_fast_f
0052a80: 6c61 6773 286b 7262 355f 636f 6e74 6578  lags(krb5_contex
0052a90: 7420 636f 6e74 6578 742c 0a20 2020 2020  t context,.     
0052aa0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052ab0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052ac0: 2020 6b72 6235 5f67 6574 5f69 6e69 745f    krb5_get_init_
0052ad0: 6372 6564 735f 6f70 7420 2a6f 7074 2c0a  creds_opt *opt,.
0052ae0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052af0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052b00: 2020 2020 2020 206b 7262 355f 666c 6167         krb5_flag
0052b10: 7320 2a6f 7574 5f66 6c61 6773 293b 0a0a  s *out_flags);..
0052b20: 0a0a 0a74 7970 6564 6566 2076 6f69 640a  ...typedef void.
0052b30: 2820 2a6b 7262 355f 6578 7069 7265 5f63  ( *krb5_expire_c
0052b40: 616c 6c62 6163 6b5f 6675 6e63 2928 6b72  allback_func)(kr
0052b50: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
0052b60: 7874 2c20 766f 6964 202a 6461 7461 2c0a  xt, void *data,.
0052b70: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052b80: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052b90: 2020 2020 2020 2020 2020 206b 7262 355f             krb5_
0052ba0: 7469 6d65 7374 616d 7020 7061 7373 776f  timestamp passwo
0052bb0: 7264 5f65 7870 6972 6174 696f 6e2c 0a20  rd_expiration,. 
0052bc0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052bd0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052be0: 2020 2020 2020 2020 2020 6b72 6235 5f74            krb5_t
0052bf0: 696d 6573 7461 6d70 2061 6363 6f75 6e74  imestamp account
0052c00: 5f65 7870 6972 6174 696f 6e2c 0a20 2020  _expiration,.   
0052c10: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052c20: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052c30: 2020 2020 2020 2020 6b72 6235 5f62 6f6f          krb5_boo
0052c40: 6c65 616e 2069 735f 6c61 7374 5f72 6571  lean is_last_req
0052c50: 293b 0a23 2037 3135 3220 222f 7573 722f  );.# 7152 "/usr/
0052c60: 696e 636c 7564 652f 6b72 6235 2f6b 7262  include/krb5/krb
0052c70: 352e 6822 2033 2034 0a6b 7262 355f 6572  5.h" 3 4.krb5_er
0052c80: 726f 725f 636f 6465 0a6b 7262 355f 6765  ror_code.krb5_ge
0052c90: 745f 696e 6974 5f63 7265 6473 5f6f 7074  t_init_creds_opt
0052ca0: 5f73 6574 5f65 7870 6972 655f 6361 6c6c  _set_expire_call
0052cb0: 6261 636b 286b 7262 355f 636f 6e74 6578  back(krb5_contex
0052cc0: 7420 636f 6e74 6578 742c 0a20 2020 2020  t context,.     
0052cd0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052ce0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052cf0: 2020 2020 2020 206b 7262 355f 6765 745f         krb5_get_
0052d00: 696e 6974 5f63 7265 6473 5f6f 7074 202a  init_creds_opt *
0052d10: 6f70 742c 0a20 2020 2020 2020 2020 2020  opt,.           
0052d20: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052d30: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052d40: 206b 7262 355f 6578 7069 7265 5f63 616c   krb5_expire_cal
0052d50: 6c62 6163 6b5f 6675 6e63 2063 622c 0a20  lback_func cb,. 
0052d60: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052d70: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052d80: 2020 2020 2020 2020 2020 2076 6f69 6420             void 
0052d90: 2a64 6174 6129 3b0a 2320 3731 3638 2022  *data);.# 7168 "
0052da0: 2f75 7372 2f69 6e63 6c75 6465 2f6b 7262  /usr/include/krb
0052db0: 352f 6b72 6235 2e68 2220 3320 340a 6b72  5/krb5.h" 3 4.kr
0052dc0: 6235 5f65 7272 6f72 5f63 6f64 650a 6b72  b5_error_code.kr
0052dd0: 6235 5f67 6574 5f69 6e69 745f 6372 6564  b5_get_init_cred
0052de0: 735f 6f70 745f 7365 745f 7265 7370 6f6e  s_opt_set_respon
0052df0: 6465 7228 6b72 6235 5f63 6f6e 7465 7874  der(krb5_context
0052e00: 2063 6f6e 7465 7874 2c0a 2020 2020 2020   context,.      
0052e10: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052e20: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052e30: 6b72 6235 5f67 6574 5f69 6e69 745f 6372  krb5_get_init_cr
0052e40: 6564 735f 6f70 7420 2a6f 7074 2c0a 2020  eds_opt *opt,.  
0052e50: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052e60: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052e70: 2020 2020 6b72 6235 5f72 6573 706f 6e64      krb5_respond
0052e80: 6572 5f66 6e20 7265 7370 6f6e 6465 722c  er_fn responder,
0052e90: 2076 6f69 6420 2a64 6174 6129 3b0a 2320   void *data);.# 
0052ea0: 3732 3137 2022 2f75 7372 2f69 6e63 6c75  7217 "/usr/inclu
0052eb0: 6465 2f6b 7262 352f 6b72 6235 2e68 2220  de/krb5/krb5.h" 
0052ec0: 3320 340a 6b72 6235 5f65 7272 6f72 5f63  3 4.krb5_error_c
0052ed0: 6f64 650a 6b72 6235 5f67 6574 5f69 6e69  ode.krb5_get_ini
0052ee0: 745f 6372 6564 735f 7061 7373 776f 7264  t_creds_password
0052ef0: 286b 7262 355f 636f 6e74 6578 7420 636f  (krb5_context co
0052f00: 6e74 6578 742c 206b 7262 355f 6372 6564  ntext, krb5_cred
0052f10: 7320 2a63 7265 6473 2c0a 2020 2020 2020  s *creds,.      
0052f20: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052f30: 2020 2020 2020 206b 7262 355f 7072 696e         krb5_prin
0052f40: 6369 7061 6c20 636c 6965 6e74 2c20 636f  cipal client, co
0052f50: 6e73 7420 6368 6172 202a 7061 7373 776f  nst char *passwo
0052f60: 7264 2c0a 2020 2020 2020 2020 2020 2020  rd,.            
0052f70: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052f80: 206b 7262 355f 7072 6f6d 7074 6572 5f66   krb5_prompter_f
0052f90: 6374 2070 726f 6d70 7465 722c 2076 6f69  ct prompter, voi
0052fa0: 6420 2a64 6174 612c 0a20 2020 2020 2020  d *data,.       
0052fb0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052fc0: 2020 2020 2020 6b72 6235 5f64 656c 7461        krb5_delta
0052fd0: 7420 7374 6172 745f 7469 6d65 2c0a 2020  t start_time,.  
0052fe0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0052ff0: 2020 2020 2020 2020 2020 2063 6f6e 7374             const
0053000: 2063 6861 7220 2a69 6e5f 746b 745f 7365   char *in_tkt_se
0053010: 7276 6963 652c 0a20 2020 2020 2020 2020  rvice,.         
0053020: 2020 2020 2020 2020 2020 2020 2020 2020                  
0053030: 2020 2020 6b72 6235 5f67 6574 5f69 6e69      krb5_get_ini
0053040: 745f 6372 6564 735f 6f70 7420 2a6b 355f  t_creds_opt *k5_
0053050: 6769 635f 6f70 7469 6f6e 7329 3b0a 0a73  gic_options);..s
0053060: 7472 7563 7420 5f6b 7262 355f 696e 6974  truct _krb5_init
0053070: 5f63 7265 6473 5f63 6f6e 7465 7874 3b0a  _creds_context;.
0053080: 7479 7065 6465 6620 7374 7275 6374 205f  typedef struct _
0053090: 6b72 6235 5f69 6e69 745f 6372 6564 735f  krb5_init_creds_
00530a0: 636f 6e74 6578 7420 2a6b 7262 355f 696e  context *krb5_in
00530b0: 6974 5f63 7265 6473 5f63 6f6e 7465 7874  it_creds_context
00530c0: 3b0a 2320 3732 3336 2022 2f75 7372 2f69  ;.# 7236 "/usr/i
00530d0: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
00530e0: 2e68 2220 3320 340a 766f 6964 0a6b 7262  .h" 3 4.void.krb
00530f0: 355f 696e 6974 5f63 7265 6473 5f66 7265  5_init_creds_fre
0053100: 6528 6b72 6235 5f63 6f6e 7465 7874 2063  e(krb5_context c
0053110: 6f6e 7465 7874 2c20 6b72 6235 5f69 6e69  ontext, krb5_ini
0053120: 745f 6372 6564 735f 636f 6e74 6578 7420  t_creds_context 
0053130: 6374 7829 3b0a 2320 3732 3531 2022 2f75  ctx);.# 7251 "/u
0053140: 7372 2f69 6e63 6c75 6465 2f6b 7262 352f  sr/include/krb5/
0053150: 6b72 6235 2e68 2220 3320 340a 6b72 6235  krb5.h" 3 4.krb5
0053160: 5f65 7272 6f72 5f63 6f64 650a 6b72 6235  _error_code.krb5
0053170: 5f69 6e69 745f 6372 6564 735f 6765 7428  _init_creds_get(
0053180: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
0053190: 7465 7874 2c20 6b72 6235 5f69 6e69 745f  text, krb5_init_
00531a0: 6372 6564 735f 636f 6e74 6578 7420 6374  creds_context ct
00531b0: 7829 3b0a 2320 3732 3638 2022 2f75 7372  x);.# 7268 "/usr
00531c0: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
00531d0: 6235 2e68 2220 3320 340a 6b72 6235 5f65  b5.h" 3 4.krb5_e
00531e0: 7272 6f72 5f63 6f64 650a 6b72 6235 5f69  rror_code.krb5_i
00531f0: 6e69 745f 6372 6564 735f 6765 745f 6372  nit_creds_get_cr
0053200: 6564 7328 6b72 6235 5f63 6f6e 7465 7874  eds(krb5_context
0053210: 2063 6f6e 7465 7874 2c20 6b72 6235 5f69   context, krb5_i
0053220: 6e69 745f 6372 6564 735f 636f 6e74 6578  nit_creds_contex
0053230: 7420 6374 782c 0a20 2020 2020 2020 2020  t ctx,.         
0053240: 2020 2020 2020 2020 2020 2020 2020 2020                  
0053250: 206b 7262 355f 6372 6564 7320 2a63 7265   krb5_creds *cre
0053260: 6473 293b 0a23 2037 3238 3120 222f 7573  ds);.# 7281 "/us
0053270: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
0053280: 7262 352e 6822 2033 2034 0a6b 7262 355f  rb5.h" 3 4.krb5_
0053290: 6572 726f 725f 636f 6465 0a6b 7262 355f  error_code.krb5_
00532a0: 696e 6974 5f63 7265 6473 5f67 6574 5f65  init_creds_get_e
00532b0: 7272 6f72 286b 7262 355f 636f 6e74 6578  rror(krb5_contex
00532c0: 7420 636f 6e74 6578 742c 206b 7262 355f  t context, krb5_
00532d0: 696e 6974 5f63 7265 6473 5f63 6f6e 7465  init_creds_conte
00532e0: 7874 2063 7478 2c0a 2020 2020 2020 2020  xt ctx,.        
00532f0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0053300: 2020 6b72 6235 5f65 7272 6f72 202a 2a65    krb5_error **e
0053310: 7272 6f72 293b 0a23 2037 3330 3120 222f  rror);.# 7301 "/
0053320: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
0053330: 2f6b 7262 352e 6822 2033 2034 0a6b 7262  /krb5.h" 3 4.krb
0053340: 355f 6572 726f 725f 636f 6465 0a6b 7262  5_error_code.krb
0053350: 355f 696e 6974 5f63 7265 6473 5f69 6e69  5_init_creds_ini
0053360: 7428 6b72 6235 5f63 6f6e 7465 7874 2063  t(krb5_context c
0053370: 6f6e 7465 7874 2c20 6b72 6235 5f70 7269  ontext, krb5_pri
0053380: 6e63 6970 616c 2063 6c69 656e 742c 0a20  ncipal client,. 
0053390: 2020 2020 2020 2020 2020 2020 2020 2020                  
00533a0: 2020 2020 6b72 6235 5f70 726f 6d70 7465      krb5_prompte
00533b0: 725f 6663 7420 7072 6f6d 7074 6572 2c20  r_fct prompter, 
00533c0: 766f 6964 202a 6461 7461 2c0a 2020 2020  void *data,.    
00533d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00533e0: 206b 7262 355f 6465 6c74 6174 2073 7461   krb5_deltat sta
00533f0: 7274 5f74 696d 652c 206b 7262 355f 6765  rt_time, krb5_ge
0053400: 745f 696e 6974 5f63 7265 6473 5f6f 7074  t_init_creds_opt
0053410: 202a 6f70 7469 6f6e 732c 0a20 2020 2020   *options,.     
0053420: 2020 2020 2020 2020 2020 2020 2020 2020                  
0053430: 6b72 6235 5f69 6e69 745f 6372 6564 735f  krb5_init_creds_
0053440: 636f 6e74 6578 7420 2a63 7478 293b 0a23  context *ctx);.#
0053450: 2037 3331 3920 222f 7573 722f 696e 636c   7319 "/usr/incl
0053460: 7564 652f 6b72 6235 2f6b 7262 352e 6822  ude/krb5/krb5.h"
0053470: 2033 2034 0a6b 7262 355f 6572 726f 725f   3 4.krb5_error_
0053480: 636f 6465 0a6b 7262 355f 696e 6974 5f63  code.krb5_init_c
0053490: 7265 6473 5f73 6574 5f6b 6579 7461 6228  reds_set_keytab(
00534a0: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
00534b0: 7465 7874 2c20 6b72 6235 5f69 6e69 745f  text, krb5_init_
00534c0: 6372 6564 735f 636f 6e74 6578 7420 6374  creds_context ct
00534d0: 782c 0a20 2020 2020 2020 2020 2020 2020  x,.             
00534e0: 2020 2020 2020 2020 2020 2020 2020 6b72                kr
00534f0: 6235 5f6b 6579 7461 6220 6b65 7974 6162  b5_keytab keytab
0053500: 293b 0a23 2037 3335 3020 222f 7573 722f  );.# 7350 "/usr/
0053510: 696e 636c 7564 652f 6b72 6235 2f6b 7262  include/krb5/krb
0053520: 352e 6822 2033 2034 0a6b 7262 355f 6572  5.h" 3 4.krb5_er
0053530: 726f 725f 636f 6465 0a6b 7262 355f 696e  ror_code.krb5_in
0053540: 6974 5f63 7265 6473 5f73 7465 7028 6b72  it_creds_step(kr
0053550: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
0053560: 7874 2c20 6b72 6235 5f69 6e69 745f 6372  xt, krb5_init_cr
0053570: 6564 735f 636f 6e74 6578 7420 6374 782c  eds_context ctx,
0053580: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
0053590: 2020 2020 2020 6b72 6235 5f64 6174 6120        krb5_data 
00535a0: 2a69 6e2c 206b 7262 355f 6461 7461 202a  *in, krb5_data *
00535b0: 6f75 742c 206b 7262 355f 6461 7461 202a  out, krb5_data *
00535c0: 7265 616c 6d2c 0a20 2020 2020 2020 2020  realm,.         
00535d0: 2020 2020 2020 2020 2020 2020 756e 7369              unsi
00535e0: 676e 6564 2069 6e74 202a 666c 6167 7329  gned int *flags)
00535f0: 3b0a 2320 3733 3637 2022 2f75 7372 2f69  ;.# 7367 "/usr/i
0053600: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
0053610: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
0053620: 6f72 5f63 6f64 650a 6b72 6235 5f69 6e69  or_code.krb5_ini
0053630: 745f 6372 6564 735f 7365 745f 7061 7373  t_creds_set_pass
0053640: 776f 7264 286b 7262 355f 636f 6e74 6578  word(krb5_contex
0053650: 7420 636f 6e74 6578 742c 206b 7262 355f  t context, krb5_
0053660: 696e 6974 5f63 7265 6473 5f63 6f6e 7465  init_creds_conte
0053670: 7874 2063 7478 2c0a 2020 2020 2020 2020  xt ctx,.        
0053680: 2020 2020 2020 2020 2020 2020 2020 2020                  
0053690: 2020 2020 2063 6f6e 7374 2063 6861 7220       const char 
00536a0: 2a70 6173 7377 6f72 6429 3b0a 2320 3733  *password);.# 73
00536b0: 3834 2022 2f75 7372 2f69 6e63 6c75 6465  84 "/usr/include
00536c0: 2f6b 7262 352f 6b72 6235 2e68 2220 3320  /krb5/krb5.h" 3 
00536d0: 340a 6b72 6235 5f65 7272 6f72 5f63 6f64  4.krb5_error_cod
00536e0: 650a 6b72 6235 5f69 6e69 745f 6372 6564  e.krb5_init_cred
00536f0: 735f 7365 745f 7365 7276 6963 6528 6b72  s_set_service(kr
0053700: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
0053710: 7874 2c20 6b72 6235 5f69 6e69 745f 6372  xt, krb5_init_cr
0053720: 6564 735f 636f 6e74 6578 7420 6374 782c  eds_context ctx,
0053730: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
0053740: 2020 2020 2020 2020 2020 2020 2063 6f6e               con
0053750: 7374 2063 6861 7220 2a73 6572 7669 6365  st char *service
0053760: 293b 0a23 2037 3430 3020 222f 7573 722f  );.# 7400 "/usr/
0053770: 696e 636c 7564 652f 6b72 6235 2f6b 7262  include/krb5/krb
0053780: 352e 6822 2033 2034 0a6b 7262 355f 6572  5.h" 3 4.krb5_er
0053790: 726f 725f 636f 6465 0a6b 7262 355f 696e  ror_code.krb5_in
00537a0: 6974 5f63 7265 6473 5f67 6574 5f74 696d  it_creds_get_tim
00537b0: 6573 286b 7262 355f 636f 6e74 6578 7420  es(krb5_context 
00537c0: 636f 6e74 6578 742c 206b 7262 355f 696e  context, krb5_in
00537d0: 6974 5f63 7265 6473 5f63 6f6e 7465 7874  it_creds_context
00537e0: 2063 7478 2c0a 2020 2020 2020 2020 2020   ctx,.          
00537f0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0053800: 6b72 6235 5f74 6963 6b65 745f 7469 6d65  krb5_ticket_time
0053810: 7320 2a74 696d 6573 293b 0a0a 7374 7275  s *times);..stru
0053820: 6374 205f 6b72 6235 5f74 6b74 5f63 7265  ct _krb5_tkt_cre
0053830: 6473 5f63 6f6e 7465 7874 3b0a 7479 7065  ds_context;.type
0053840: 6465 6620 7374 7275 6374 205f 6b72 6235  def struct _krb5
0053850: 5f74 6b74 5f63 7265 6473 5f63 6f6e 7465  _tkt_creds_conte
0053860: 7874 202a 6b72 6235 5f74 6b74 5f63 7265  xt *krb5_tkt_cre
0053870: 6473 5f63 6f6e 7465 7874 3b0a 2320 3734  ds_context;.# 74
0053880: 3331 2022 2f75 7372 2f69 6e63 6c75 6465  31 "/usr/include
0053890: 2f6b 7262 352f 6b72 6235 2e68 2220 3320  /krb5/krb5.h" 3 
00538a0: 340a 6b72 6235 5f65 7272 6f72 5f63 6f64  4.krb5_error_cod
00538b0: 650a 6b72 6235 5f74 6b74 5f63 7265 6473  e.krb5_tkt_creds
00538c0: 5f69 6e69 7428 6b72 6235 5f63 6f6e 7465  _init(krb5_conte
00538d0: 7874 2063 6f6e 7465 7874 2c20 6b72 6235  xt context, krb5
00538e0: 5f63 6361 6368 6520 6363 6163 6865 2c0a  _ccache ccache,.
00538f0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0053900: 2020 2020 6b72 6235 5f63 7265 6473 202a      krb5_creds *
0053910: 6372 6564 732c 206b 7262 355f 666c 6167  creds, krb5_flag
0053920: 7320 6f70 7469 6f6e 732c 0a20 2020 2020  s options,.     
0053930: 2020 2020 2020 2020 2020 2020 2020 206b                 k
0053940: 7262 355f 746b 745f 6372 6564 735f 636f  rb5_tkt_creds_co
0053950: 6e74 6578 7420 2a63 7478 293b 0a23 2037  ntext *ctx);.# 7
0053960: 3435 3020 222f 7573 722f 696e 636c 7564  450 "/usr/includ
0053970: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
0053980: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
0053990: 6465 0a6b 7262 355f 746b 745f 6372 6564  de.krb5_tkt_cred
00539a0: 735f 6765 7428 6b72 6235 5f63 6f6e 7465  s_get(krb5_conte
00539b0: 7874 2063 6f6e 7465 7874 2c20 6b72 6235  xt context, krb5
00539c0: 5f74 6b74 5f63 7265 6473 5f63 6f6e 7465  _tkt_creds_conte
00539d0: 7874 2063 7478 293b 0a23 2037 3436 3920  xt ctx);.# 7469 
00539e0: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
00539f0: 6235 2f6b 7262 352e 6822 2033 2034 0a6b  b5/krb5.h" 3 4.k
0053a00: 7262 355f 6572 726f 725f 636f 6465 0a6b  rb5_error_code.k
0053a10: 7262 355f 746b 745f 6372 6564 735f 6765  rb5_tkt_creds_ge
0053a20: 745f 6372 6564 7328 6b72 6235 5f63 6f6e  t_creds(krb5_con
0053a30: 7465 7874 2063 6f6e 7465 7874 2c20 6b72  text context, kr
0053a40: 6235 5f74 6b74 5f63 7265 6473 5f63 6f6e  b5_tkt_creds_con
0053a50: 7465 7874 2063 7478 2c0a 2020 2020 2020  text ctx,.      
0053a60: 2020 2020 2020 2020 2020 2020 2020 2020                  
0053a70: 2020 206b 7262 355f 6372 6564 7320 2a63     krb5_creds *c
0053a80: 7265 6473 293b 0a23 2037 3438 3120 222f  reds);.# 7481 "/
0053a90: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
0053aa0: 2f6b 7262 352e 6822 2033 2034 0a76 6f69  /krb5.h" 3 4.voi
0053ab0: 640a 6b72 6235 5f74 6b74 5f63 7265 6473  d.krb5_tkt_creds
0053ac0: 5f66 7265 6528 6b72 6235 5f63 6f6e 7465  _free(krb5_conte
0053ad0: 7874 2063 6f6e 7465 7874 2c20 6b72 6235  xt context, krb5
0053ae0: 5f74 6b74 5f63 7265 6473 5f63 6f6e 7465  _tkt_creds_conte
0053af0: 7874 2063 7478 293b 0a23 2037 3531 3420  xt ctx);.# 7514 
0053b00: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
0053b10: 6235 2f6b 7262 352e 6822 2033 2034 0a6b  b5/krb5.h" 3 4.k
0053b20: 7262 355f 6572 726f 725f 636f 6465 0a6b  rb5_error_code.k
0053b30: 7262 355f 746b 745f 6372 6564 735f 7374  rb5_tkt_creds_st
0053b40: 6570 286b 7262 355f 636f 6e74 6578 7420  ep(krb5_context 
0053b50: 636f 6e74 6578 742c 206b 7262 355f 746b  context, krb5_tk
0053b60: 745f 6372 6564 735f 636f 6e74 6578 7420  t_creds_context 
0053b70: 6374 782c 0a20 2020 2020 2020 2020 2020  ctx,.           
0053b80: 2020 2020 2020 2020 206b 7262 355f 6461           krb5_da
0053b90: 7461 202a 696e 2c20 6b72 6235 5f64 6174  ta *in, krb5_dat
0053ba0: 6120 2a6f 7574 2c20 6b72 6235 5f64 6174  a *out, krb5_dat
0053bb0: 6120 2a72 6561 6c6d 2c0a 2020 2020 2020  a *realm,.      
0053bc0: 2020 2020 2020 2020 2020 2020 2020 756e                un
0053bd0: 7369 676e 6564 2069 6e74 202a 666c 6167  signed int *flag
0053be0: 7329 3b0a 2320 3735 3333 2022 2f75 7372  s);.# 7533 "/usr
0053bf0: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
0053c00: 6235 2e68 2220 3320 340a 6b72 6235 5f65  b5.h" 3 4.krb5_e
0053c10: 7272 6f72 5f63 6f64 650a 6b72 6235 5f74  rror_code.krb5_t
0053c20: 6b74 5f63 7265 6473 5f67 6574 5f74 696d  kt_creds_get_tim
0053c30: 6573 286b 7262 355f 636f 6e74 6578 7420  es(krb5_context 
0053c40: 636f 6e74 6578 742c 206b 7262 355f 746b  context, krb5_tk
0053c50: 745f 6372 6564 735f 636f 6e74 6578 7420  t_creds_context 
0053c60: 6374 782c 0a20 2020 2020 2020 2020 2020  ctx,.           
0053c70: 2020 2020 2020 2020 2020 2020 2020 6b72                kr
0053c80: 6235 5f74 6963 6b65 745f 7469 6d65 7320  b5_ticket_times 
0053c90: 2a74 696d 6573 293b 0a23 2037 3536 3120  *times);.# 7561 
0053ca0: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
0053cb0: 6235 2f6b 7262 352e 6822 2033 2034 0a6b  b5/krb5.h" 3 4.k
0053cc0: 7262 355f 6572 726f 725f 636f 6465 0a6b  rb5_error_code.k
0053cd0: 7262 355f 6765 745f 696e 6974 5f63 7265  rb5_get_init_cre
0053ce0: 6473 5f6b 6579 7461 6228 6b72 6235 5f63  ds_keytab(krb5_c
0053cf0: 6f6e 7465 7874 2063 6f6e 7465 7874 2c20  ontext context, 
0053d00: 6b72 6235 5f63 7265 6473 202a 6372 6564  krb5_creds *cred
0053d10: 732c 0a20 2020 2020 2020 2020 2020 2020  s,.             
0053d20: 2020 2020 2020 2020 2020 2020 2020 6b72                kr
0053d30: 6235 5f70 7269 6e63 6970 616c 2063 6c69  b5_principal cli
0053d40: 656e 742c 206b 7262 355f 6b65 7974 6162  ent, krb5_keytab
0053d50: 2061 7267 5f6b 6579 7461 622c 0a20 2020   arg_keytab,.   
0053d60: 2020 2020 2020 2020 2020 2020 2020 2020                  
0053d70: 2020 2020 2020 2020 6b72 6235 5f64 656c          krb5_del
0053d80: 7461 7420 7374 6172 745f 7469 6d65 2c20  tat start_time, 
0053d90: 636f 6e73 7420 6368 6172 202a 696e 5f74  const char *in_t
0053da0: 6b74 5f73 6572 7669 6365 2c0a 2020 2020  kt_service,.    
0053db0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0053dc0: 2020 2020 2020 206b 7262 355f 6765 745f         krb5_get_
0053dd0: 696e 6974 5f63 7265 6473 5f6f 7074 202a  init_creds_opt *
0053de0: 6b35 5f67 6963 5f6f 7074 696f 6e73 293b  k5_gic_options);
0053df0: 0a0a 7479 7065 6465 6620 7374 7275 6374  ..typedef struct
0053e00: 205f 6b72 6235 5f76 6572 6966 795f 696e   _krb5_verify_in
0053e10: 6974 5f63 7265 6473 5f6f 7074 207b 0a20  it_creds_opt {. 
0053e20: 2020 206b 7262 355f 666c 6167 7320 666c     krb5_flags fl
0053e30: 6167 733b 0a20 2020 2069 6e74 2061 705f  ags;.    int ap_
0053e40: 7265 715f 6e6f 6661 696c 3b0a 7d20 6b72  req_nofail;.} kr
0053e50: 6235 5f76 6572 6966 795f 696e 6974 5f63  b5_verify_init_c
0053e60: 7265 6473 5f6f 7074 3b0a 2320 3735 3739  reds_opt;.# 7579
0053e70: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
0053e80: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
0053e90: 766f 6964 0a6b 7262 355f 7665 7269 6679  void.krb5_verify
0053ea0: 5f69 6e69 745f 6372 6564 735f 6f70 745f  _init_creds_opt_
0053eb0: 696e 6974 286b 7262 355f 7665 7269 6679  init(krb5_verify
0053ec0: 5f69 6e69 745f 6372 6564 735f 6f70 7420  _init_creds_opt 
0053ed0: 2a6b 355f 7669 635f 6f70 7469 6f6e 7329  *k5_vic_options)
0053ee0: 3b0a 2320 3735 3937 2022 2f75 7372 2f69  ;.# 7597 "/usr/i
0053ef0: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
0053f00: 2e68 2220 3320 340a 766f 6964 0a6b 7262  .h" 3 4.void.krb
0053f10: 355f 7665 7269 6679 5f69 6e69 745f 6372  5_verify_init_cr
0053f20: 6564 735f 6f70 745f 7365 745f 6170 5f72  eds_opt_set_ap_r
0053f30: 6571 5f6e 6f66 6169 6c28 6b72 6235 5f76  eq_nofail(krb5_v
0053f40: 6572 6966 795f 696e 6974 5f63 7265 6473  erify_init_creds
0053f50: 5f6f 7074 202a 206b 355f 7669 635f 6f70  _opt * k5_vic_op
0053f60: 7469 6f6e 732c 0a20 2020 2020 2020 2020  tions,.         
0053f70: 2020 2020 2020 2020 2020 2020 2020 2020                  
0053f80: 2020 2020 2020 2020 2020 2020 2020 2020                  
0053f90: 2020 2020 696e 7420 6170 5f72 6571 5f6e      int ap_req_n
0053fa0: 6f66 6169 6c29 3b0a 2320 3736 3332 2022  ofail);.# 7632 "
0053fb0: 2f75 7372 2f69 6e63 6c75 6465 2f6b 7262  /usr/include/krb
0053fc0: 352f 6b72 6235 2e68 2220 3320 340a 6b72  5/krb5.h" 3 4.kr
0053fd0: 6235 5f65 7272 6f72 5f63 6f64 650a 6b72  b5_error_code.kr
0053fe0: 6235 5f76 6572 6966 795f 696e 6974 5f63  b5_verify_init_c
0053ff0: 7265 6473 286b 7262 355f 636f 6e74 6578  reds(krb5_contex
0054000: 7420 636f 6e74 6578 742c 206b 7262 355f  t context, krb5_
0054010: 6372 6564 7320 2a63 7265 6473 2c0a 2020  creds *creds,.  
0054020: 2020 2020 2020 2020 2020 2020 2020 2020                  
0054030: 2020 2020 206b 7262 355f 7072 696e 6369       krb5_princi
0054040: 7061 6c20 7365 7276 6572 2c20 6b72 6235  pal server, krb5
0054050: 5f6b 6579 7461 6220 6b65 7974 6162 2c0a  _keytab keytab,.
0054060: 2020 2020 2020 2020 2020 2020 2020 2020                  
0054070: 2020 2020 2020 206b 7262 355f 6363 6163         krb5_ccac
0054080: 6865 202a 6363 6163 6865 2c0a 2020 2020  he *ccache,.    
0054090: 2020 2020 2020 2020 2020 2020 2020 2020                  
00540a0: 2020 206b 7262 355f 7665 7269 6679 5f69     krb5_verify_i
00540b0: 6e69 745f 6372 6564 735f 6f70 7420 2a6f  nit_creds_opt *o
00540c0: 7074 696f 6e73 293b 0a23 2037 3637 3120  ptions);.# 7671 
00540d0: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
00540e0: 6235 2f6b 7262 352e 6822 2033 2034 0a6b  b5/krb5.h" 3 4.k
00540f0: 7262 355f 6572 726f 725f 636f 6465 0a6b  rb5_error_code.k
0054100: 7262 355f 6765 745f 7661 6c69 6461 7465  rb5_get_validate
0054110: 645f 6372 6564 7328 6b72 6235 5f63 6f6e  d_creds(krb5_con
0054120: 7465 7874 2063 6f6e 7465 7874 2c20 6b72  text context, kr
0054130: 6235 5f63 7265 6473 202a 6372 6564 732c  b5_creds *creds,
0054140: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
0054150: 2020 2020 2020 2020 2020 6b72 6235 5f70            krb5_p
0054160: 7269 6e63 6970 616c 2063 6c69 656e 742c  rincipal client,
0054170: 206b 7262 355f 6363 6163 6865 2063 6361   krb5_ccache cca
0054180: 6368 652c 0a20 2020 2020 2020 2020 2020  che,.           
0054190: 2020 2020 2020 2020 2020 2020 2020 636f                co
00541a0: 6e73 7420 6368 6172 202a 696e 5f74 6b74  nst char *in_tkt
00541b0: 5f73 6572 7669 6365 293b 0a23 2037 3639  _service);.# 769
00541c0: 3720 222f 7573 722f 696e 636c 7564 652f  7 "/usr/include/
00541d0: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
00541e0: 0a6b 7262 355f 6572 726f 725f 636f 6465  .krb5_error_code
00541f0: 0a6b 7262 355f 6765 745f 7265 6e65 7765  .krb5_get_renewe
0054200: 645f 6372 6564 7328 6b72 6235 5f63 6f6e  d_creds(krb5_con
0054210: 7465 7874 2063 6f6e 7465 7874 2c20 6b72  text context, kr
0054220: 6235 5f63 7265 6473 202a 6372 6564 732c  b5_creds *creds,
0054230: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
0054240: 2020 2020 2020 2020 6b72 6235 5f70 7269          krb5_pri
0054250: 6e63 6970 616c 2063 6c69 656e 742c 206b  ncipal client, k
0054260: 7262 355f 6363 6163 6865 2063 6361 6368  rb5_ccache ccach
0054270: 652c 0a20 2020 2020 2020 2020 2020 2020  e,.             
0054280: 2020 2020 2020 2020 2020 636f 6e73 7420            const 
0054290: 6368 6172 202a 696e 5f74 6b74 5f73 6572  char *in_tkt_ser
00542a0: 7669 6365 293b 0a23 2037 3731 3020 222f  vice);.# 7710 "/
00542b0: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
00542c0: 2f6b 7262 352e 6822 2033 2034 0a6b 7262  /krb5.h" 3 4.krb
00542d0: 355f 6572 726f 725f 636f 6465 0a6b 7262  5_error_code.krb
00542e0: 355f 6465 636f 6465 5f74 6963 6b65 7428  5_decode_ticket(
00542f0: 636f 6e73 7420 6b72 6235 5f64 6174 6120  const krb5_data 
0054300: 2a63 6f64 652c 206b 7262 355f 7469 636b  *code, krb5_tick
0054310: 6574 202a 2a72 6570 293b 0a23 2037 3732  et **rep);.# 772
0054320: 3820 222f 7573 722f 696e 636c 7564 652f  8 "/usr/include/
0054330: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
0054340: 0a76 6f69 640a 6b72 6235 5f61 7070 6465  .void.krb5_appde
0054350: 6661 756c 745f 7374 7269 6e67 286b 7262  fault_string(krb
0054360: 355f 636f 6e74 6578 7420 636f 6e74 6578  5_context contex
0054370: 742c 2063 6f6e 7374 2063 6861 7220 2a61  t, const char *a
0054380: 7070 6e61 6d65 2c0a 2020 2020 2020 2020  ppname,.        
0054390: 2020 2020 2020 2020 2020 2020 2020 2063                 c
00543a0: 6f6e 7374 206b 7262 355f 6461 7461 202a  onst krb5_data *
00543b0: 7265 616c 6d2c 2063 6f6e 7374 2063 6861  realm, const cha
00543c0: 7220 2a6f 7074 696f 6e2c 0a20 2020 2020  r *option,.     
00543d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00543e0: 2020 636f 6e73 7420 6368 6172 202a 6465    const char *de
00543f0: 6661 756c 745f 7661 6c75 652c 2063 6861  fault_value, cha
0054400: 7220 2a2a 2072 6574 5f76 616c 7565 293b  r ** ret_value);
0054410: 0a23 2037 3734 3820 222f 7573 722f 696e  .# 7748 "/usr/in
0054420: 636c 7564 652f 6b72 6235 2f6b 7262 352e  clude/krb5/krb5.
0054430: 6822 2033 2034 0a76 6f69 640a 6b72 6235  h" 3 4.void.krb5
0054440: 5f61 7070 6465 6661 756c 745f 626f 6f6c  _appdefault_bool
0054450: 6561 6e28 6b72 6235 5f63 6f6e 7465 7874  ean(krb5_context
0054460: 2063 6f6e 7465 7874 2c20 636f 6e73 7420   context, const 
0054470: 6368 6172 202a 6170 706e 616d 652c 0a20  char *appname,. 
0054480: 2020 2020 2020 2020 2020 2020 2020 2020                  
0054490: 2020 2020 2020 2063 6f6e 7374 206b 7262         const krb
00544a0: 355f 6461 7461 202a 7265 616c 6d2c 2063  5_data *realm, c
00544b0: 6f6e 7374 2063 6861 7220 2a6f 7074 696f  onst char *optio
00544c0: 6e2c 0a20 2020 2020 2020 2020 2020 2020  n,.             
00544d0: 2020 2020 2020 2020 2020 2069 6e74 2064             int d
00544e0: 6566 6175 6c74 5f76 616c 7565 2c20 696e  efault_value, in
00544f0: 7420 2a72 6574 5f76 616c 7565 293b 0a23  t *ret_value);.#
0054500: 2037 3736 3520 222f 7573 722f 696e 636c   7765 "/usr/incl
0054510: 7564 652f 6b72 6235 2f6b 7262 352e 6822  ude/krb5/krb5.h"
0054520: 2033 2034 0a74 7970 6564 6566 206b 7262   3 4.typedef krb
0054530: 355f 696e 7433 3220 6b72 6235 5f70 726f  5_int32 krb5_pro
0054540: 6d70 745f 7479 7065 3b0a 2320 3737 3830  mpt_type;.# 7780
0054550: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
0054560: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
0054570: 6b72 6235 5f70 726f 6d70 745f 7479 7065  krb5_prompt_type
0054580: 2a0a 6b72 6235 5f67 6574 5f70 726f 6d70  *.krb5_get_promp
0054590: 745f 7479 7065 7328 6b72 6235 5f63 6f6e  t_types(krb5_con
00545a0: 7465 7874 2063 6f6e 7465 7874 293b 0a23  text context);.#
00545b0: 2037 3739 3220 222f 7573 722f 696e 636c   7792 "/usr/incl
00545c0: 7564 652f 6b72 6235 2f6b 7262 352e 6822  ude/krb5/krb5.h"
00545d0: 2033 2034 0a76 6f69 640a 6b72 6235 5f73   3 4.void.krb5_s
00545e0: 6574 5f65 7272 6f72 5f6d 6573 7361 6765  et_error_message
00545f0: 286b 7262 355f 636f 6e74 6578 7420 6374  (krb5_context ct
0054600: 782c 206b 7262 355f 6572 726f 725f 636f  x, krb5_error_co
0054610: 6465 2063 6f64 652c 2063 6f6e 7374 2063  de code, const c
0054620: 6861 7220 2a66 6d74 2c20 2e2e 2e29 0a0a  har *fmt, ...)..
0054630: 2020 2020 5f5f 6174 7472 6962 7574 655f      __attribute_
0054640: 5f28 285f 5f66 6f72 6d61 745f 5f28 5f5f  _((__format__(__
0054650: 7072 696e 7466 5f5f 2c20 332c 2034 2929  printf__, 3, 4))
0054660: 290a 0a20 2020 203b 0a23 2037 3830 3720  )..    ;.# 7807 
0054670: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
0054680: 6235 2f6b 7262 352e 6822 2033 2034 0a76  b5/krb5.h" 3 4.v
0054690: 6f69 640a 6b72 6235 5f76 7365 745f 6572  oid.krb5_vset_er
00546a0: 726f 725f 6d65 7373 6167 6528 6b72 6235  ror_message(krb5
00546b0: 5f63 6f6e 7465 7874 2063 7478 2c20 6b72  _context ctx, kr
00546c0: 6235 5f65 7272 6f72 5f63 6f64 6520 636f  b5_error_code co
00546d0: 6465 2c0a 2020 2020 2020 2020 2020 2020  de,.            
00546e0: 2020 2020 2020 2020 2020 2020 636f 6e73              cons
00546f0: 7420 6368 6172 202a 666d 742c 2076 615f  t char *fmt, va_
0054700: 6c69 7374 2061 7267 7329 0a0a 2020 2020  list args)..    
0054710: 5f5f 6174 7472 6962 7574 655f 5f28 285f  __attribute__((_
0054720: 5f66 6f72 6d61 745f 5f28 5f5f 7072 696e  _format__(__prin
0054730: 7466 5f5f 2c20 332c 2030 2929 290a 0a20  tf__, 3, 0))).. 
0054740: 2020 203b 0a0a 0a0a 0a0a 0a0a 766f 6964     ;........void
0054750: 0a6b 7262 355f 636f 7079 5f65 7272 6f72  .krb5_copy_error
0054760: 5f6d 6573 7361 6765 286b 7262 355f 636f  _message(krb5_co
0054770: 6e74 6578 7420 6465 7374 5f63 7478 2c20  ntext dest_ctx, 
0054780: 6b72 6235 5f63 6f6e 7465 7874 2073 7263  krb5_context src
0054790: 5f63 7478 293b 0a23 2037 3834 3420 222f  _ctx);.# 7844 "/
00547a0: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
00547b0: 2f6b 7262 352e 6822 2033 2034 0a63 6f6e  /krb5.h" 3 4.con
00547c0: 7374 2063 6861 7220 2a0a 6b72 6235 5f67  st char *.krb5_g
00547d0: 6574 5f65 7272 6f72 5f6d 6573 7361 6765  et_error_message
00547e0: 286b 7262 355f 636f 6e74 6578 7420 6374  (krb5_context ct
00547f0: 782c 206b 7262 355f 6572 726f 725f 636f  x, krb5_error_co
0054800: 6465 2063 6f64 6529 3b0a 0a0a 0a0a 0a0a  de code);.......
0054810: 0a76 6f69 640a 6b72 6235 5f66 7265 655f  .void.krb5_free_
0054820: 6572 726f 725f 6d65 7373 6167 6528 6b72  error_message(kr
0054830: 6235 5f63 6f6e 7465 7874 2063 7478 2c20  b5_context ctx, 
0054840: 636f 6e73 7420 6368 6172 202a 6d73 6729  const char *msg)
0054850: 3b0a 2320 3738 3634 2022 2f75 7372 2f69  ;.# 7864 "/usr/i
0054860: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
0054870: 2e68 2220 3320 340a 766f 6964 0a6b 7262  .h" 3 4.void.krb
0054880: 355f 636c 6561 725f 6572 726f 725f 6d65  5_clear_error_me
0054890: 7373 6167 6528 6b72 6235 5f63 6f6e 7465  ssage(krb5_conte
00548a0: 7874 2063 7478 293b 0a23 2037 3837 3920  xt ctx);.# 7879 
00548b0: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
00548c0: 6235 2f6b 7262 352e 6822 2033 2034 0a6b  b5/krb5.h" 3 4.k
00548d0: 7262 355f 6572 726f 725f 636f 6465 0a6b  rb5_error_code.k
00548e0: 7262 355f 6465 636f 6465 5f61 7574 6864  rb5_decode_authd
00548f0: 6174 615f 636f 6e74 6169 6e65 7228 6b72  ata_container(kr
0054900: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
0054910: 7874 2c0a 2020 2020 2020 2020 2020 2020  xt,.            
0054920: 2020 2020 2020 2020 2020 2020 2020 2020                  
0054930: 2020 206b 7262 355f 6175 7468 6461 7461     krb5_authdata
0054940: 7479 7065 2074 7970 652c 0a20 2020 2020  type type,.     
0054950: 2020 2020 2020 2020 2020 2020 2020 2020                  
0054960: 2020 2020 2020 2020 2020 636f 6e73 7420            const 
0054970: 6b72 6235 5f61 7574 6864 6174 6120 2a63  krb5_authdata *c
0054980: 6f6e 7461 696e 6572 2c0a 2020 2020 2020  ontainer,.      
0054990: 2020 2020 2020 2020 2020 2020 2020 2020                  
00549a0: 2020 2020 2020 2020 206b 7262 355f 6175           krb5_au
00549b0: 7468 6461 7461 202a 2a2a 6175 7468 6461  thdata ***authda
00549c0: 7461 293b 0a23 2037 3839 3820 222f 7573  ta);.# 7898 "/us
00549d0: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
00549e0: 7262 352e 6822 2033 2034 0a6b 7262 355f  rb5.h" 3 4.krb5_
00549f0: 6572 726f 725f 636f 6465 0a6b 7262 355f  error_code.krb5_
0054a00: 656e 636f 6465 5f61 7574 6864 6174 615f  encode_authdata_
0054a10: 636f 6e74 6169 6e65 7228 6b72 6235 5f63  container(krb5_c
0054a20: 6f6e 7465 7874 2063 6f6e 7465 7874 2c0a  ontext context,.
0054a30: 2020 2020 2020 2020 2020 2020 2020 2020                  
0054a40: 2020 2020 2020 2020 2020 2020 2020 206b                 k
0054a50: 7262 355f 6175 7468 6461 7461 7479 7065  rb5_authdatatype
0054a60: 2074 7970 652c 0a20 2020 2020 2020 2020   type,.         
0054a70: 2020 2020 2020 2020 2020 2020 2020 2020                  
0054a80: 2020 2020 2020 6b72 6235 5f61 7574 6864        krb5_authd
0054a90: 6174 6120 2a20 636f 6e73 742a 6175 7468  ata * const*auth
0054aa0: 6461 7461 2c0a 2020 2020 2020 2020 2020  data,.          
0054ab0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0054ac0: 2020 2020 206b 7262 355f 6175 7468 6461       krb5_authda
0054ad0: 7461 202a 2a2a 636f 6e74 6169 6e65 7229  ta ***container)
0054ae0: 3b0a 2320 3739 3230 2022 2f75 7372 2f69  ;.# 7920 "/usr/i
0054af0: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
0054b00: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
0054b10: 6f72 5f63 6f64 650a 6b72 6235 5f6d 616b  or_code.krb5_mak
0054b20: 655f 6175 7468 6461 7461 5f6b 6463 5f69  e_authdata_kdc_i
0054b30: 7373 7565 6428 6b72 6235 5f63 6f6e 7465  ssued(krb5_conte
0054b40: 7874 2063 6f6e 7465 7874 2c0a 2020 2020  xt context,.    
0054b50: 2020 2020 2020 2020 2020 2020 2020 2020                  
0054b60: 2020 2020 2020 2020 2020 636f 6e73 7420            const 
0054b70: 6b72 6235 5f6b 6579 626c 6f63 6b20 2a6b  krb5_keyblock *k
0054b80: 6579 2c0a 2020 2020 2020 2020 2020 2020  ey,.            
0054b90: 2020 2020 2020 2020 2020 2020 2020 2020                  
0054ba0: 2020 6b72 6235 5f63 6f6e 7374 5f70 7269    krb5_const_pri
0054bb0: 6e63 6970 616c 2069 7373 7565 722c 0a20  ncipal issuer,. 
0054bc0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0054bd0: 2020 2020 2020 2020 2020 2020 206b 7262               krb
0054be0: 355f 6175 7468 6461 7461 202a 636f 6e73  5_authdata *cons
0054bf0: 7420 2a61 7574 6864 6174 612c 0a20 2020  t *authdata,.   
0054c00: 2020 2020 2020 2020 2020 2020 2020 2020                  
0054c10: 2020 2020 2020 2020 2020 206b 7262 355f             krb5_
0054c20: 6175 7468 6461 7461 202a 2a2a 6164 5f6b  authdata ***ad_k
0054c30: 6463 6973 7375 6564 293b 0a23 2037 3934  dcissued);.# 794
0054c40: 3120 222f 7573 722f 696e 636c 7564 652f  1 "/usr/include/
0054c50: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
0054c60: 0a6b 7262 355f 6572 726f 725f 636f 6465  .krb5_error_code
0054c70: 0a6b 7262 355f 7665 7269 6679 5f61 7574  .krb5_verify_aut
0054c80: 6864 6174 615f 6b64 635f 6973 7375 6564  hdata_kdc_issued
0054c90: 286b 7262 355f 636f 6e74 6578 7420 636f  (krb5_context co
0054ca0: 6e74 6578 742c 0a20 2020 2020 2020 2020  ntext,.         
0054cb0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0054cc0: 2020 2020 2020 2063 6f6e 7374 206b 7262         const krb
0054cd0: 355f 6b65 7962 6c6f 636b 202a 6b65 792c  5_keyblock *key,
0054ce0: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
0054cf0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0054d00: 2063 6f6e 7374 206b 7262 355f 6175 7468   const krb5_auth
0054d10: 6461 7461 202a 6164 5f6b 6463 6973 7375  data *ad_kdcissu
0054d20: 6564 2c0a 2020 2020 2020 2020 2020 2020  ed,.            
0054d30: 2020 2020 2020 2020 2020 2020 2020 2020                  
0054d40: 2020 2020 6b72 6235 5f70 7269 6e63 6970      krb5_princip
0054d50: 616c 202a 6973 7375 6572 2c0a 2020 2020  al *issuer,.    
0054d60: 2020 2020 2020 2020 2020 2020 2020 2020                  
0054d70: 2020 2020 2020 2020 2020 2020 6b72 6235              krb5
0054d80: 5f61 7574 6864 6174 6120 2a2a 2a61 7574  _authdata ***aut
0054d90: 6864 6174 6129 3b0a 2320 3739 3631 2022  hdata);.# 7961 "
0054da0: 2f75 7372 2f69 6e63 6c75 6465 2f6b 7262  /usr/include/krb
0054db0: 352f 6b72 6235 2e68 2220 3320 340a 7374  5/krb5.h" 3 4.st
0054dc0: 7275 6374 206b 7262 355f 7061 635f 6461  ruct krb5_pac_da
0054dd0: 7461 3b0a 0a74 7970 6564 6566 2073 7472  ta;..typedef str
0054de0: 7563 7420 6b72 6235 5f70 6163 5f64 6174  uct krb5_pac_dat
0054df0: 6120 2a6b 7262 355f 7061 633b 0a23 2037  a *krb5_pac;.# 7
0054e00: 3938 3720 222f 7573 722f 696e 636c 7564  987 "/usr/includ
0054e10: 652f 6b72 6235 2f6b 7262 352e 6822 2033  e/krb5/krb5.h" 3
0054e20: 2034 0a6b 7262 355f 6572 726f 725f 636f   4.krb5_error_co
0054e30: 6465 0a6b 7262 355f 7061 635f 6164 645f  de.krb5_pac_add_
0054e40: 6275 6666 6572 286b 7262 355f 636f 6e74  buffer(krb5_cont
0054e50: 6578 7420 636f 6e74 6578 742c 206b 7262  ext context, krb
0054e60: 355f 7061 6320 7061 632c 206b 7262 355f  5_pac pac, krb5_
0054e70: 7569 5f34 2074 7970 652c 0a20 2020 2020  ui_4 type,.     
0054e80: 2020 2020 2020 2020 2020 2020 2020 2063                 c
0054e90: 6f6e 7374 206b 7262 355f 6461 7461 202a  onst krb5_data *
0054ea0: 6461 7461 293b 0a23 2037 3939 3920 222f  data);.# 7999 "/
0054eb0: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
0054ec0: 2f6b 7262 352e 6822 2033 2034 0a76 6f69  /krb5.h" 3 4.voi
0054ed0: 640a 6b72 6235 5f70 6163 5f66 7265 6528  d.krb5_pac_free(
0054ee0: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
0054ef0: 7465 7874 2c20 6b72 6235 5f70 6163 2070  text, krb5_pac p
0054f00: 6163 293b 0a23 2038 3031 3420 222f 7573  ac);.# 8014 "/us
0054f10: 722f 696e 636c 7564 652f 6b72 6235 2f6b  r/include/krb5/k
0054f20: 7262 352e 6822 2033 2034 0a6b 7262 355f  rb5.h" 3 4.krb5_
0054f30: 6572 726f 725f 636f 6465 0a6b 7262 355f  error_code.krb5_
0054f40: 7061 635f 6765 745f 6275 6666 6572 286b  pac_get_buffer(k
0054f50: 7262 355f 636f 6e74 6578 7420 636f 6e74  rb5_context cont
0054f60: 6578 742c 206b 7262 355f 7061 6320 7061  ext, krb5_pac pa
0054f70: 632c 206b 7262 355f 7569 5f34 2074 7970  c, krb5_ui_4 typ
0054f80: 652c 0a20 2020 2020 2020 2020 2020 2020  e,.             
0054f90: 2020 2020 2020 206b 7262 355f 6461 7461         krb5_data
0054fa0: 202a 6461 7461 293b 0a23 2038 3032 3820   *data);.# 8028 
0054fb0: 222f 7573 722f 696e 636c 7564 652f 6b72  "/usr/include/kr
0054fc0: 6235 2f6b 7262 352e 6822 2033 2034 0a6b  b5/krb5.h" 3 4.k
0054fd0: 7262 355f 6572 726f 725f 636f 6465 0a6b  rb5_error_code.k
0054fe0: 7262 355f 7061 635f 6765 745f 7479 7065  rb5_pac_get_type
0054ff0: 7328 6b72 6235 5f63 6f6e 7465 7874 2063  s(krb5_context c
0055000: 6f6e 7465 7874 2c20 6b72 6235 5f70 6163  ontext, krb5_pac
0055010: 2070 6163 2c20 7369 7a65 5f74 202a 6c65   pac, size_t *le
0055020: 6e2c 0a20 2020 2020 2020 2020 2020 2020  n,.             
0055030: 2020 2020 2020 6b72 6235 5f75 695f 3420        krb5_ui_4 
0055040: 2a2a 7479 7065 7329 3b0a 2320 3830 3432  **types);.# 8042
0055050: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
0055060: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
0055070: 6b72 6235 5f65 7272 6f72 5f63 6f64 650a  krb5_error_code.
0055080: 6b72 6235 5f70 6163 5f69 6e69 7428 6b72  krb5_pac_init(kr
0055090: 6235 5f63 6f6e 7465 7874 2063 6f6e 7465  b5_context conte
00550a0: 7874 2c20 6b72 6235 5f70 6163 202a 7061  xt, krb5_pac *pa
00550b0: 6329 3b0a 2320 3830 3537 2022 2f75 7372  c);.# 8057 "/usr
00550c0: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
00550d0: 6235 2e68 2220 3320 340a 6b72 6235 5f65  b5.h" 3 4.krb5_e
00550e0: 7272 6f72 5f63 6f64 650a 6b72 6235 5f70  rror_code.krb5_p
00550f0: 6163 5f70 6172 7365 286b 7262 355f 636f  ac_parse(krb5_co
0055100: 6e74 6578 7420 636f 6e74 6578 742c 2063  ntext context, c
0055110: 6f6e 7374 2076 6f69 6420 2a70 7472 2c20  onst void *ptr, 
0055120: 7369 7a65 5f74 206c 656e 2c0a 2020 2020  size_t len,.    
0055130: 2020 2020 2020 2020 2020 206b 7262 355f             krb5_
0055140: 7061 6320 2a70 6163 293b 0a23 2038 3038  pac *pac);.# 808
0055150: 3720 222f 7573 722f 696e 636c 7564 652f  7 "/usr/include/
0055160: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
0055170: 0a6b 7262 355f 6572 726f 725f 636f 6465  .krb5_error_code
0055180: 0a6b 7262 355f 7061 635f 7665 7269 6679  .krb5_pac_verify
0055190: 286b 7262 355f 636f 6e74 6578 7420 636f  (krb5_context co
00551a0: 6e74 6578 742c 2063 6f6e 7374 206b 7262  ntext, const krb
00551b0: 355f 7061 6320 7061 632c 0a20 2020 2020  5_pac pac,.     
00551c0: 2020 2020 2020 2020 2020 206b 7262 355f             krb5_
00551d0: 7469 6d65 7374 616d 7020 6175 7468 7469  timestamp authti
00551e0: 6d65 2c20 6b72 6235 5f63 6f6e 7374 5f70  me, krb5_const_p
00551f0: 7269 6e63 6970 616c 2070 7269 6e63 6970  rincipal princip
0055200: 616c 2c0a 2020 2020 2020 2020 2020 2020  al,.            
0055210: 2020 2020 636f 6e73 7420 6b72 6235 5f6b      const krb5_k
0055220: 6579 626c 6f63 6b20 2a73 6572 7665 722c  eyblock *server,
0055230: 2063 6f6e 7374 206b 7262 355f 6b65 7962   const krb5_keyb
0055240: 6c6f 636b 202a 7072 6976 7376 7229 3b0a  lock *privsvr);.
0055250: 2320 3831 3130 2022 2f75 7372 2f69 6e63  # 8110 "/usr/inc
0055260: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
0055270: 2220 3320 340a 6b72 6235 5f65 7272 6f72  " 3 4.krb5_error
0055280: 5f63 6f64 650a 6b72 6235 5f70 6163 5f73  _code.krb5_pac_s
0055290: 6967 6e28 6b72 6235 5f63 6f6e 7465 7874  ign(krb5_context
00552a0: 2063 6f6e 7465 7874 2c20 6b72 6235 5f70   context, krb5_p
00552b0: 6163 2070 6163 2c20 6b72 6235 5f74 696d  ac pac, krb5_tim
00552c0: 6573 7461 6d70 2061 7574 6874 696d 652c  estamp authtime,
00552d0: 0a20 2020 2020 2020 2020 2020 2020 206b  .              k
00552e0: 7262 355f 636f 6e73 745f 7072 696e 6369  rb5_const_princi
00552f0: 7061 6c20 7072 696e 6369 7061 6c2c 2063  pal principal, c
0055300: 6f6e 7374 206b 7262 355f 6b65 7962 6c6f  onst krb5_keyblo
0055310: 636b 202a 7365 7276 6572 5f6b 6579 2c0a  ck *server_key,.
0055320: 2020 2020 2020 2020 2020 2020 2020 636f                co
0055330: 6e73 7420 6b72 6235 5f6b 6579 626c 6f63  nst krb5_keybloc
0055340: 6b20 2a70 7269 7673 7672 5f6b 6579 2c20  k *privsvr_key, 
0055350: 6b72 6235 5f64 6174 6120 2a64 6174 6129  krb5_data *data)
0055360: 3b0a 2320 3831 3236 2022 2f75 7372 2f69  ;.# 8126 "/usr/i
0055370: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
0055380: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
0055390: 6f72 5f63 6f64 650a 6b72 6235 5f61 6c6c  or_code.krb5_all
00553a0: 6f77 5f77 6561 6b5f 6372 7970 746f 286b  ow_weak_crypto(k
00553b0: 7262 355f 636f 6e74 6578 7420 636f 6e74  rb5_context cont
00553c0: 6578 742c 206b 7262 355f 626f 6f6c 6561  ext, krb5_boolea
00553d0: 6e20 656e 6162 6c65 293b 0a23 2038 3133  n enable);.# 813
00553e0: 3620 222f 7573 722f 696e 636c 7564 652f  6 "/usr/include/
00553f0: 6b72 6235 2f6b 7262 352e 6822 2033 2034  krb5/krb5.h" 3 4
0055400: 0a74 7970 6564 6566 2073 7472 7563 7420  .typedef struct 
0055410: 5f6b 7262 355f 7472 6163 655f 696e 666f  _krb5_trace_info
0055420: 207b 0a20 2020 2063 6f6e 7374 2063 6861   {.    const cha
0055430: 7220 2a6d 6573 7361 6765 3b0a 7d20 6b72  r *message;.} kr
0055440: 6235 5f74 7261 6365 5f69 6e66 6f3b 0a0a  b5_trace_info;..
0055450: 7479 7065 6465 6620 766f 6964 0a28 202a  typedef void.( *
0055460: 6b72 6235 5f74 7261 6365 5f63 616c 6c62  krb5_trace_callb
0055470: 6163 6b29 286b 7262 355f 636f 6e74 6578  ack)(krb5_contex
0055480: 7420 636f 6e74 6578 742c 0a20 2020 2020  t context,.     
0055490: 2020 2020 2020 2020 2020 2020 2020 2020                  
00554a0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00554b0: 636f 6e73 7420 6b72 6235 5f74 7261 6365  const krb5_trace
00554c0: 5f69 6e66 6f20 2a69 6e66 6f2c 0a20 2020  _info *info,.   
00554d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00554e0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00554f0: 2020 766f 6964 202a 6362 5f64 6174 6129    void *cb_data)
0055500: 3b0a 2320 3831 3638 2022 2f75 7372 2f69  ;.# 8168 "/usr/i
0055510: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
0055520: 2e68 2220 3320 340a 6b72 6235 5f65 7272  .h" 3 4.krb5_err
0055530: 6f72 5f63 6f64 650a 6b72 6235 5f73 6574  or_code.krb5_set
0055540: 5f74 7261 6365 5f63 616c 6c62 6163 6b28  _trace_callback(
0055550: 6b72 6235 5f63 6f6e 7465 7874 2063 6f6e  krb5_context con
0055560: 7465 7874 2c20 6b72 6235 5f74 7261 6365  text, krb5_trace
0055570: 5f63 616c 6c62 6163 6b20 666e 2c0a 2020  _callback fn,.  
0055580: 2020 2020 2020 2020 2020 2020 2020 2020                  
0055590: 2020 2020 2020 766f 6964 202a 6362 5f64        void *cb_d
00555a0: 6174 6129 3b0a 2320 3831 3838 2022 2f75  ata);.# 8188 "/u
00555b0: 7372 2f69 6e63 6c75 6465 2f6b 7262 352f  sr/include/krb5/
00555c0: 6b72 6235 2e68 2220 3320 340a 6b72 6235  krb5.h" 3 4.krb5
00555d0: 5f65 7272 6f72 5f63 6f64 650a 6b72 6235  _error_code.krb5
00555e0: 5f73 6574 5f74 7261 6365 5f66 696c 656e  _set_trace_filen
00555f0: 616d 6528 6b72 6235 5f63 6f6e 7465 7874  ame(krb5_context
0055600: 2063 6f6e 7465 7874 2c20 636f 6e73 7420   context, const 
0055610: 6368 6172 202a 6669 6c65 6e61 6d65 293b  char *filename);
0055620: 0a0a 0a0a 0a0a 0a23 2038 3231 3120 222f  .......# 8211 "/
0055630: 7573 722f 696e 636c 7564 652f 6b72 6235  usr/include/krb5
0055640: 2f6b 7262 352e 6822 2033 2034 0a23 2031  /krb5.h" 3 4.# 1
0055650: 2022 2f75 7372 2f69 6e63 6c75 6465 2f65   "/usr/include/e
0055660: 742f 636f 6d5f 6572 722e 6822 2031 2033  t/com_err.h" 1 3
0055670: 2034 0a23 2031 3920 222f 7573 722f 696e   4.# 19 "/usr/in
0055680: 636c 7564 652f 6574 2f63 6f6d 5f65 7272  clude/et/com_err
0055690: 2e68 2220 3320 340a 2320 3120 222f 7573  .h" 3 4.# 1 "/us
00556a0: 722f 6c69 622f 6763 632f 7838 365f 3634  r/lib/gcc/x86_64
00556b0: 2d72 6564 6861 742d 6c69 6e75 782f 342e  -redhat-linux/4.
00556c0: 382e 332f 696e 636c 7564 652f 7374 6464  8.3/include/stdd
00556d0: 6566 2e68 2220 3120 3320 340a 2320 3230  ef.h" 1 3 4.# 20
00556e0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f65   "/usr/include/e
00556f0: 742f 636f 6d5f 6572 722e 6822 2032 2033  t/com_err.h" 2 3
0055700: 2034 0a0a 0a74 7970 6564 6566 206c 6f6e   4...typedef lon
0055710: 6720 6572 7263 6f64 655f 743b 0a0a 7374  g errcode_t;..st
0055720: 7275 6374 2065 7272 6f72 5f74 6162 6c65  ruct error_table
0055730: 207b 0a20 6368 6172 2063 6f6e 7374 202a   {. char const *
0055740: 2063 6f6e 7374 202a 206d 7367 733b 0a20   const * msgs;. 
0055750: 6c6f 6e67 2062 6173 653b 0a20 696e 7420  long base;. int 
0055760: 6e5f 6d73 6773 3b0a 7d3b 0a73 7472 7563  n_msgs;.};.struc
0055770: 7420 6574 5f6c 6973 743b 0a0a 6578 7465  t et_list;..exte
0055780: 726e 2076 6f69 6420 636f 6d5f 6572 7220  rn void com_err 
0055790: 2863 6f6e 7374 2063 6861 7220 2a2c 206c  (const char *, l
00557a0: 6f6e 672c 2063 6f6e 7374 2063 6861 7220  ong, const char 
00557b0: 2a2c 202e 2e2e 290a 205f 5f61 7474 7269  *, ...). __attri
00557c0: 6275 7465 5f5f 2828 666f 726d 6174 2870  bute__((format(p
00557d0: 7269 6e74 662c 2033 2c20 3429 2929 3b0a  rintf, 3, 4)));.
00557e0: 0a65 7874 6572 6e20 766f 6964 2063 6f6d  .extern void com
00557f0: 5f65 7272 5f76 6120 2863 6f6e 7374 2063  _err_va (const c
0055800: 6861 7220 2a77 686f 616d 692c 2065 7272  har *whoami, err
0055810: 636f 6465 5f74 2063 6f64 652c 2063 6f6e  code_t code, con
0055820: 7374 2063 6861 7220 2a66 6d74 2c0a 2020  st char *fmt,.  
0055830: 2076 615f 6c69 7374 2061 7267 7329 0a20   va_list args). 
0055840: 5f5f 6174 7472 6962 7574 655f 5f28 2866  __attribute__((f
0055850: 6f72 6d61 7428 7072 696e 7466 2c20 332c  ormat(printf, 3,
0055860: 2030 2929 293b 0a0a 6578 7465 726e 2063   0)));..extern c
0055870: 6861 7220 636f 6e73 7420 2a65 7272 6f72  har const *error
0055880: 5f6d 6573 7361 6765 2028 6c6f 6e67 293b  _message (long);
0055890: 0a65 7874 6572 6e20 766f 6964 2028 2a63  .extern void (*c
00558a0: 6f6d 5f65 7272 5f68 6f6f 6b29 2028 636f  om_err_hook) (co
00558b0: 6e73 7420 6368 6172 202a 2c20 6c6f 6e67  nst char *, long
00558c0: 2c20 636f 6e73 7420 6368 6172 202a 2c20  , const char *, 
00558d0: 7661 5f6c 6973 7429 3b0a 6578 7465 726e  va_list);.extern
00558e0: 2076 6f69 6420 282a 7365 745f 636f 6d5f   void (*set_com_
00558f0: 6572 725f 686f 6f6b 2028 766f 6964 2028  err_hook (void (
0055900: 2a29 2028 636f 6e73 7420 6368 6172 202a  *) (const char *
0055910: 2c20 6c6f 6e67 2c0a 2020 2020 2020 2063  , long,.       c
0055920: 6f6e 7374 2063 6861 7220 2a2c 2076 615f  onst char *, va_
0055930: 6c69 7374 2929 290a 2028 636f 6e73 7420  list))). (const 
0055940: 6368 6172 202a 2c20 6c6f 6e67 2c20 636f  char *, long, co
0055950: 6e73 7420 6368 6172 202a 2c20 7661 5f6c  nst char *, va_l
0055960: 6973 7429 3b0a 6578 7465 726e 2076 6f69  ist);.extern voi
0055970: 6420 282a 7265 7365 745f 636f 6d5f 6572  d (*reset_com_er
0055980: 725f 686f 6f6b 2028 766f 6964 2929 2028  r_hook (void)) (
0055990: 636f 6e73 7420 6368 6172 202a 2c20 6c6f  const char *, lo
00559a0: 6e67 2c0a 2020 2020 2020 2063 6f6e 7374  ng,.       const
00559b0: 2063 6861 7220 2a2c 2076 615f 6c69 7374   char *, va_list
00559c0: 293b 0a65 7874 6572 6e20 696e 7420 696e  );.extern int in
00559d0: 6974 5f65 7272 6f72 5f74 6162 6c65 2863  it_error_table(c
00559e0: 6f6e 7374 2063 6861 7220 2a20 636f 6e73  onst char * cons
00559f0: 7420 2a6d 7367 732c 206c 6f6e 6720 6261  t *msgs, long ba
0055a00: 7365 2c20 696e 7420 636f 756e 7429 3b0a  se, int count);.
0055a10: 6578 7465 726e 2063 6861 7220 2a28 2a73  extern char *(*s
0055a20: 6574 5f63 6f6d 5f65 7272 5f67 6574 7465  et_com_err_gette
0055a30: 7874 2028 6368 6172 202a 282a 2920 2863  xt (char *(*) (c
0055a40: 6f6e 7374 2063 6861 7220 2a29 2929 0a20  onst char *))). 
0055a50: 2863 6f6e 7374 2063 6861 7220 2a29 3b0a  (const char *);.
0055a60: 0a65 7874 6572 6e20 6572 7263 6f64 655f  .extern errcode_
0055a70: 7420 6164 645f 6572 726f 725f 7461 626c  t add_error_tabl
0055a80: 6528 636f 6e73 7420 7374 7275 6374 2065  e(const struct e
0055a90: 7272 6f72 5f74 6162 6c65 202a 2065 7429  rror_table * et)
0055aa0: 3b0a 6578 7465 726e 2065 7272 636f 6465  ;.extern errcode
0055ab0: 5f74 2072 656d 6f76 655f 6572 726f 725f  _t remove_error_
0055ac0: 7461 626c 6528 636f 6e73 7420 7374 7275  table(const stru
0055ad0: 6374 2065 7272 6f72 5f74 6162 6c65 202a  ct error_table *
0055ae0: 2065 7429 3b0a 6578 7465 726e 2076 6f69   et);.extern voi
0055af0: 6420 6164 645f 746f 5f65 7272 6f72 5f74  d add_to_error_t
0055b00: 6162 6c65 2873 7472 7563 7420 6574 5f6c  able(struct et_l
0055b10: 6973 7420 2a6e 6577 5f74 6162 6c65 293b  ist *new_table);
0055b20: 0a0a 0a65 7874 6572 6e20 636f 6e73 7420  ...extern const 
0055b30: 6368 6172 202a 636f 6d5f 7269 6768 7428  char *com_right(
0055b40: 7374 7275 6374 2065 745f 6c69 7374 202a  struct et_list *
0055b50: 6c69 7374 2c20 6c6f 6e67 2063 6f64 6529  list, long code)
0055b60: 3b0a 6578 7465 726e 2063 6f6e 7374 2063  ;.extern const c
0055b70: 6861 7220 2a63 6f6d 5f72 6967 6874 5f72  har *com_right_r
0055b80: 2873 7472 7563 7420 6574 5f6c 6973 7420  (struct et_list 
0055b90: 2a6c 6973 742c 206c 6f6e 6720 636f 6465  *list, long code
0055ba0: 2c20 6368 6172 202a 7374 722c 2073 697a  , char *str, siz
0055bb0: 655f 7420 6c65 6e29 3b0a 6578 7465 726e  e_t len);.extern
0055bc0: 2076 6f69 6420 696e 6974 6961 6c69 7a65   void initialize
0055bd0: 5f65 7272 6f72 5f74 6162 6c65 5f72 2873  _error_table_r(s
0055be0: 7472 7563 7420 6574 5f6c 6973 7420 2a2a  truct et_list **
0055bf0: 6c69 7374 2c0a 2020 2020 2020 2020 2063  list,.         c
0055c00: 6f6e 7374 2063 6861 7220 2a2a 6d65 7373  onst char **mess
0055c10: 6167 6573 2c0a 2020 2020 2020 2020 2069  ages,.         i
0055c20: 6e74 206e 756d 5f65 7272 6f72 732c 0a20  nt num_errors,. 
0055c30: 2020 2020 2020 2020 6c6f 6e67 2062 6173          long bas
0055c40: 6529 3b0a 6578 7465 726e 2076 6f69 6420  e);.extern void 
0055c50: 6672 6565 5f65 7272 6f72 5f74 6162 6c65  free_error_table
0055c60: 2873 7472 7563 7420 6574 5f6c 6973 7420  (struct et_list 
0055c70: 2a65 7429 3b0a 0a0a 6578 7465 726e 2069  *et);...extern i
0055c80: 6e74 2065 745f 6c69 7374 5f6c 6f63 6b28  nt et_list_lock(
0055c90: 766f 6964 293b 0a65 7874 6572 6e20 696e  void);.extern in
0055ca0: 7420 6574 5f6c 6973 745f 756e 6c6f 636b  t et_list_unlock
0055cb0: 2876 6f69 6429 3b0a 2320 3832 3132 2022  (void);.# 8212 "
0055cc0: 2f75 7372 2f69 6e63 6c75 6465 2f6b 7262  /usr/include/krb
0055cd0: 352f 6b72 6235 2e68 2220 3220 3320 340a  5/krb5.h" 2 3 4.
0055ce0: 2320 3834 3639 2022 2f75 7372 2f69 6e63  # 8469 "/usr/inc
0055cf0: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
0055d00: 2220 3320 340a 6578 7465 726e 2063 6f6e  " 3 4.extern con
0055d10: 7374 2073 7472 7563 7420 6572 726f 725f  st struct error_
0055d20: 7461 626c 6520 6574 5f6b 7262 355f 6572  table et_krb5_er
0055d30: 726f 725f 7461 626c 653b 0a65 7874 6572  ror_table;.exter
0055d40: 6e20 766f 6964 2069 6e69 7469 616c 697a  n void initializ
0055d50: 655f 6b72 6235 5f65 7272 6f72 5f74 6162  e_krb5_error_tab
0055d60: 6c65 2876 6f69 6429 3b0a 0a0a 6578 7465  le(void);...exte
0055d70: 726e 2076 6f69 6420 696e 6974 6961 6c69  rn void initiali
0055d80: 7a65 5f6b 7262 355f 6572 726f 725f 7461  ze_krb5_error_ta
0055d90: 626c 655f 7228 7374 7275 6374 2065 745f  ble_r(struct et_
0055da0: 6c69 7374 202a 2a6c 6973 7429 3b0a 2320  list **list);.# 
0055db0: 3834 3835 2022 2f75 7372 2f69 6e63 6c75  8485 "/usr/inclu
0055dc0: 6465 2f6b 7262 352f 6b72 6235 2e68 2220  de/krb5/krb5.h" 
0055dd0: 3320 340a 2320 3120 222f 7573 722f 696e  3 4.# 1 "/usr/in
0055de0: 636c 7564 652f 6574 2f63 6f6d 5f65 7272  clude/et/com_err
0055df0: 2e68 2220 3120 3320 340a 2320 3834 3836  .h" 1 3 4.# 8486
0055e00: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
0055e10: 7262 352f 6b72 6235 2e68 2220 3220 3320  rb5/krb5.h" 2 3 
0055e20: 340a 2320 3834 3935 2022 2f75 7372 2f69  4.# 8495 "/usr/i
0055e30: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
0055e40: 2e68 2220 3320 340a 6578 7465 726e 2063  .h" 3 4.extern c
0055e50: 6f6e 7374 2073 7472 7563 7420 6572 726f  onst struct erro
0055e60: 725f 7461 626c 6520 6574 5f6b 3565 315f  r_table et_k5e1_
0055e70: 6572 726f 725f 7461 626c 653b 0a65 7874  error_table;.ext
0055e80: 6572 6e20 766f 6964 2069 6e69 7469 616c  ern void initial
0055e90: 697a 655f 6b35 6531 5f65 7272 6f72 5f74  ize_k5e1_error_t
0055ea0: 6162 6c65 2876 6f69 6429 3b0a 0a0a 6578  able(void);...ex
0055eb0: 7465 726e 2076 6f69 6420 696e 6974 6961  tern void initia
0055ec0: 6c69 7a65 5f6b 3565 315f 6572 726f 725f  lize_k5e1_error_
0055ed0: 7461 626c 655f 7228 7374 7275 6374 2065  table_r(struct e
0055ee0: 745f 6c69 7374 202a 2a6c 6973 7429 3b0a  t_list **list);.
0055ef0: 2320 3835 3131 2022 2f75 7372 2f69 6e63  # 8511 "/usr/inc
0055f00: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
0055f10: 2220 3320 340a 2320 3120 222f 7573 722f  " 3 4.# 1 "/usr/
0055f20: 696e 636c 7564 652f 6574 2f63 6f6d 5f65  include/et/com_e
0055f30: 7272 2e68 2220 3120 3320 340a 2320 3835  rr.h" 1 3 4.# 85
0055f40: 3132 2022 2f75 7372 2f69 6e63 6c75 6465  12 "/usr/include
0055f50: 2f6b 7262 352f 6b72 6235 2e68 2220 3220  /krb5/krb5.h" 2 
0055f60: 3320 340a 2320 3835 3539 2022 2f75 7372  3 4.# 8559 "/usr
0055f70: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
0055f80: 6235 2e68 2220 3320 340a 6578 7465 726e  b5.h" 3 4.extern
0055f90: 2063 6f6e 7374 2073 7472 7563 7420 6572   const struct er
0055fa0: 726f 725f 7461 626c 6520 6574 5f6b 6462  ror_table et_kdb
0055fb0: 355f 6572 726f 725f 7461 626c 653b 0a65  5_error_table;.e
0055fc0: 7874 6572 6e20 766f 6964 2069 6e69 7469  xtern void initi
0055fd0: 616c 697a 655f 6b64 6235 5f65 7272 6f72  alize_kdb5_error
0055fe0: 5f74 6162 6c65 2876 6f69 6429 3b0a 0a0a  _table(void);...
0055ff0: 6578 7465 726e 2076 6f69 6420 696e 6974  extern void init
0056000: 6961 6c69 7a65 5f6b 6462 355f 6572 726f  ialize_kdb5_erro
0056010: 725f 7461 626c 655f 7228 7374 7275 6374  r_table_r(struct
0056020: 2065 745f 6c69 7374 202a 2a6c 6973 7429   et_list **list)
0056030: 3b0a 2320 3835 3735 2022 2f75 7372 2f69  ;.# 8575 "/usr/i
0056040: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
0056050: 2e68 2220 3320 340a 2320 3120 222f 7573  .h" 3 4.# 1 "/us
0056060: 722f 696e 636c 7564 652f 6574 2f63 6f6d  r/include/et/com
0056070: 5f65 7272 2e68 2220 3120 3320 340a 2320  _err.h" 1 3 4.# 
0056080: 3835 3736 2022 2f75 7372 2f69 6e63 6c75  8576 "/usr/inclu
0056090: 6465 2f6b 7262 352f 6b72 6235 2e68 2220  de/krb5/krb5.h" 
00560a0: 3220 3320 340a 2320 3836 3338 2022 2f75  2 3 4.# 8638 "/u
00560b0: 7372 2f69 6e63 6c75 6465 2f6b 7262 352f  sr/include/krb5/
00560c0: 6b72 6235 2e68 2220 3320 340a 6578 7465  krb5.h" 3 4.exte
00560d0: 726e 2063 6f6e 7374 2073 7472 7563 7420  rn const struct 
00560e0: 6572 726f 725f 7461 626c 6520 6574 5f6b  error_table et_k
00560f0: 7635 6d5f 6572 726f 725f 7461 626c 653b  v5m_error_table;
0056100: 0a65 7874 6572 6e20 766f 6964 2069 6e69  .extern void ini
0056110: 7469 616c 697a 655f 6b76 356d 5f65 7272  tialize_kv5m_err
0056120: 6f72 5f74 6162 6c65 2876 6f69 6429 3b0a  or_table(void);.
0056130: 0a0a 6578 7465 726e 2076 6f69 6420 696e  ..extern void in
0056140: 6974 6961 6c69 7a65 5f6b 7635 6d5f 6572  itialize_kv5m_er
0056150: 726f 725f 7461 626c 655f 7228 7374 7275  ror_table_r(stru
0056160: 6374 2065 745f 6c69 7374 202a 2a6c 6973  ct et_list **lis
0056170: 7429 3b0a 2320 3836 3534 2022 2f75 7372  t);.# 8654 "/usr
0056180: 2f69 6e63 6c75 6465 2f6b 7262 352f 6b72  /include/krb5/kr
0056190: 6235 2e68 2220 3320 340a 2320 3120 222f  b5.h" 3 4.# 1 "/
00561a0: 7573 722f 696e 636c 7564 652f 6574 2f63  usr/include/et/c
00561b0: 6f6d 5f65 7272 2e68 2220 3120 3320 340a  om_err.h" 1 3 4.
00561c0: 2320 3836 3535 2022 2f75 7372 2f69 6e63  # 8655 "/usr/inc
00561d0: 6c75 6465 2f6b 7262 352f 6b72 6235 2e68  lude/krb5/krb5.h
00561e0: 2220 3220 3320 340a 2320 3836 3635 2022  " 2 3 4.# 8665 "
00561f0: 2f75 7372 2f69 6e63 6c75 6465 2f6b 7262  /usr/include/krb
0056200: 352f 6b72 6235 2e68 2220 3320 340a 6578  5/krb5.h" 3 4.ex
0056210: 7465 726e 2063 6f6e 7374 2073 7472 7563  tern const struc
0056220: 7420 6572 726f 725f 7461 626c 6520 6574  t error_table et
0056230: 5f6b 3532 345f 6572 726f 725f 7461 626c  _k524_error_tabl
0056240: 653b 0a65 7874 6572 6e20 766f 6964 2069  e;.extern void i
0056250: 6e69 7469 616c 697a 655f 6b35 3234 5f65  nitialize_k524_e
0056260: 7272 6f72 5f74 6162 6c65 2876 6f69 6429  rror_table(void)
0056270: 3b0a 0a0a 6578 7465 726e 2076 6f69 6420  ;...extern void 
0056280: 696e 6974 6961 6c69 7a65 5f6b 3532 345f  initialize_k524_
0056290: 6572 726f 725f 7461 626c 655f 7228 7374  error_table_r(st
00562a0: 7275 6374 2065 745f 6c69 7374 202a 2a6c  ruct et_list **l
00562b0: 6973 7429 3b0a 2320 3836 3831 2022 2f75  ist);.# 8681 "/u
00562c0: 7372 2f69 6e63 6c75 6465 2f6b 7262 352f  sr/include/krb5/
00562d0: 6b72 6235 2e68 2220 3320 340a 2320 3120  krb5.h" 3 4.# 1 
00562e0: 222f 7573 722f 696e 636c 7564 652f 6574  "/usr/include/et
00562f0: 2f63 6f6d 5f65 7272 2e68 2220 3120 3320  /com_err.h" 1 3 
0056300: 340a 2320 3836 3832 2022 2f75 7372 2f69  4.# 8682 "/usr/i
0056310: 6e63 6c75 6465 2f6b 7262 352f 6b72 6235  nclude/krb5/krb5
0056320: 2e68 2220 3220 3320 340a 2320 3836 3937  .h" 2 3 4.# 8697
0056330: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6b   "/usr/include/k
0056340: 7262 352f 6b72 6235 2e68 2220 3320 340a  rb5/krb5.h" 3 4.
0056350: 6578 7465 726e 2063 6f6e 7374 2073 7472  extern const str
0056360: 7563 7420 6572 726f 725f 7461 626c 6520  uct error_table 
0056370: 6574 5f61 736e 315f 6572 726f 725f 7461  et_asn1_error_ta
0056380: 626c 653b 0a65 7874 6572 6e20 766f 6964  ble;.extern void
0056390: 2069 6e69 7469 616c 697a 655f 6173 6e31   initialize_asn1
00563a0: 5f65 7272 6f72 5f74 6162 6c65 2876 6f69  _error_table(voi
00563b0: 6429 3b0a 0a0a 6578 7465 726e 2076 6f69  d);...extern voi
00563c0: 6420 696e 6974 6961 6c69 7a65 5f61 736e  d initialize_asn
00563d0: 315f 6572 726f 725f 7461 626c 655f 7228  1_error_table_r(
00563e0: 7374 7275 6374 2065 745f 6c69 7374 202a  struct et_list *
00563f0: 2a6c 6973 7429 3b0a 2320 3820 222f 7573  *list);.# 8 "/us
0056400: 722f 696e 636c 7564 652f 6b72 6235 2e68  r/include/krb5.h
0056410: 2220 3220 3320 340a 2320 3733 2022 2f75  " 2 3 4.# 73 "/u
0056420: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
0056430: 736c 2f6b 7373 6c2e 6822 2032 2033 2034  sl/kssl.h" 2 3 4
0056440: 0a23 2031 3230 2022 2f75 7372 2f69 6e63  .# 120 "/usr/inc
0056450: 6c75 6465 2f6f 7065 6e73 736c 2f6b 7373  lude/openssl/kss
0056460: 6c2e 6822 2033 2034 0a74 7970 6564 6566  l.h" 3 4.typedef
0056470: 2073 7472 7563 7420 6b73 736c 5f65 7272   struct kssl_err
0056480: 5f73 7420 7b0a 2069 6e74 2072 6561 736f  _st {. int reaso
0056490: 6e3b 0a20 6368 6172 2074 6578 745b 3235  n;. char text[25
00564a0: 3520 2b31 5d3b 0a20 7d20 4b53 534c 5f45  5 +1];. } KSSL_E
00564b0: 5252 3b0a 0a0a 0a0a 0a0a 7479 7065 6465  RR;.......typede
00564c0: 6620 7374 7275 6374 206b 7373 6c5f 6374  f struct kssl_ct
00564d0: 785f 7374 0a20 2020 2020 2020 207b 0a0a  x_st.        {..
00564e0: 2063 6861 7220 2a73 6572 7669 6365 5f6e   char *service_n
00564f0: 616d 653b 0a20 6368 6172 202a 7365 7276  ame;. char *serv
0056500: 6963 655f 686f 7374 3b0a 2063 6861 7220  ice_host;. char 
0056510: 2a63 6c69 656e 745f 7072 696e 633b 0a20  *client_princ;. 
0056520: 6368 6172 202a 6b65 7974 6162 5f66 696c  char *keytab_fil
0056530: 653b 0a20 6368 6172 202a 6372 6564 5f63  e;. char *cred_c
0056540: 6163 6865 3b0a 206b 7262 355f 656e 6374  ache;. krb5_enct
0056550: 7970 6520 656e 6374 7970 653b 0a20 696e  ype enctype;. in
0056560: 7420 6c65 6e67 7468 3b0a 206b 7262 355f  t length;. krb5_
0056570: 6f63 7465 7420 2a6b 6579 3b0a 207d 204b  octet *key;. } K
0056580: 5353 4c5f 4354 583b 0a23 2031 3533 2022  SSL_CTX;.# 153 "
0056590: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
00565a0: 6e73 736c 2f6b 7373 6c2e 6822 2033 2034  nssl/kssl.h" 3 4
00565b0: 0a6b 7262 355f 6572 726f 725f 636f 6465  .krb5_error_code
00565c0: 206b 7373 6c5f 6374 785f 7365 7473 7472   kssl_ctx_setstr
00565d0: 696e 6728 4b53 534c 5f43 5458 202a 6b73  ing(KSSL_CTX *ks
00565e0: 736c 5f63 7478 2c20 696e 7420 7768 6963  sl_ctx, int whic
00565f0: 682c 2063 6861 7220 2a74 6578 7429 3b0a  h, char *text);.
0056600: 4b53 534c 5f43 5458 202a 6b73 736c 5f63  KSSL_CTX *kssl_c
0056610: 7478 5f6e 6577 2876 6f69 6429 3b0a 4b53  tx_new(void);.KS
0056620: 534c 5f43 5458 202a 6b73 736c 5f63 7478  SL_CTX *kssl_ctx
0056630: 5f66 7265 6528 4b53 534c 5f43 5458 202a  _free(KSSL_CTX *
0056640: 6b73 736c 5f63 7478 293b 0a76 6f69 6420  kssl_ctx);.void 
0056650: 6b73 736c 5f63 7478 5f73 686f 7728 4b53  kssl_ctx_show(KS
0056660: 534c 5f43 5458 202a 6b73 736c 5f63 7478  SL_CTX *kssl_ctx
0056670: 293b 0a6b 7262 355f 6572 726f 725f 636f  );.krb5_error_co
0056680: 6465 206b 7373 6c5f 6374 785f 7365 7470  de kssl_ctx_setp
0056690: 7269 6e63 284b 5353 4c5f 4354 5820 2a6b  rinc(KSSL_CTX *k
00566a0: 7373 6c5f 6374 782c 2069 6e74 2077 6869  ssl_ctx, int whi
00566b0: 6368 2c0a 2020 2020 2020 2020 6b72 6235  ch,.        krb5
00566c0: 5f64 6174 6120 2a72 6561 6c6d 2c20 6b72  _data *realm, kr
00566d0: 6235 5f64 6174 6120 2a65 6e74 6974 792c  b5_data *entity,
00566e0: 2069 6e74 206e 656e 7469 7469 6573 293b   int nentities);
00566f0: 0a6b 7262 355f 6572 726f 725f 636f 6465  .krb5_error_code
0056700: 206b 7373 6c5f 6367 6574 5f74 6b74 284b   kssl_cget_tkt(K
0056710: 5353 4c5f 4354 5820 2a6b 7373 6c5f 6374  SSL_CTX *kssl_ct
0056720: 782c 206b 7262 355f 6461 7461 202a 2a65  x, krb5_data **e
0056730: 6e63 5f74 6b74 702c 0a20 2020 2020 2020  nc_tktp,.       
0056740: 206b 7262 355f 6461 7461 202a 6175 7468   krb5_data *auth
0056750: 656e 702c 204b 5353 4c5f 4552 5220 2a6b  enp, KSSL_ERR *k
0056760: 7373 6c5f 6572 7229 3b0a 6b72 6235 5f65  ssl_err);.krb5_e
0056770: 7272 6f72 5f63 6f64 6520 6b73 736c 5f73  rror_code kssl_s
0056780: 6765 745f 746b 7428 4b53 534c 5f43 5458  get_tkt(KSSL_CTX
0056790: 202a 6b73 736c 5f63 7478 2c20 6b72 6235   *kssl_ctx, krb5
00567a0: 5f64 6174 6120 2a69 6e64 6174 612c 0a20  _data *indata,. 
00567b0: 2020 2020 2020 206b 7262 355f 7469 636b         krb5_tick
00567c0: 6574 5f74 696d 6573 202a 7474 696d 6573  et_times *ttimes
00567d0: 2c20 4b53 534c 5f45 5252 202a 6b73 736c  , KSSL_ERR *kssl
00567e0: 5f65 7272 293b 0a6b 7262 355f 6572 726f  _err);.krb5_erro
00567f0: 725f 636f 6465 206b 7373 6c5f 6374 785f  r_code kssl_ctx_
0056800: 7365 746b 6579 284b 5353 4c5f 4354 5820  setkey(KSSL_CTX 
0056810: 2a6b 7373 6c5f 6374 782c 206b 7262 355f  *kssl_ctx, krb5_
0056820: 6b65 7962 6c6f 636b 202a 7365 7373 696f  keyblock *sessio
0056830: 6e29 3b0a 766f 6964 206b 7373 6c5f 6572  n);.void kssl_er
0056840: 725f 7365 7428 4b53 534c 5f45 5252 202a  r_set(KSSL_ERR *
0056850: 6b73 736c 5f65 7272 2c20 696e 7420 7265  kssl_err, int re
0056860: 6173 6f6e 2c20 6368 6172 202a 7465 7874  ason, char *text
0056870: 293b 0a76 6f69 6420 6b73 736c 5f6b 7262  );.void kssl_krb
0056880: 355f 6672 6565 5f64 6174 615f 636f 6e74  5_free_data_cont
0056890: 656e 7473 286b 7262 355f 636f 6e74 6578  ents(krb5_contex
00568a0: 7420 636f 6e74 6578 742c 206b 7262 355f  t context, krb5_
00568b0: 6461 7461 202a 6461 7461 293b 0a6b 7262  data *data);.krb
00568c0: 355f 6572 726f 725f 636f 6465 206b 7373  5_error_code kss
00568d0: 6c5f 6275 696c 645f 7072 696e 6369 7061  l_build_principa
00568e0: 6c5f 3228 6b72 6235 5f63 6f6e 7465 7874  l_2(krb5_context
00568f0: 2063 6f6e 7465 7874 2c0a 2020 206b 7262   context,.   krb
0056900: 355f 7072 696e 6369 7061 6c20 2a70 7269  5_principal *pri
0056910: 6e63 2c20 696e 7420 726c 656e 2c20 636f  nc, int rlen, co
0056920: 6e73 7420 6368 6172 202a 7265 616c 6d2c  nst char *realm,
0056930: 0a20 2020 696e 7420 736c 656e 2c20 636f  .   int slen, co
0056940: 6e73 7420 6368 6172 202a 7376 632c 2069  nst char *svc, i
0056950: 6e74 2068 6c65 6e2c 2063 6f6e 7374 2063  nt hlen, const c
0056960: 6861 7220 2a68 6f73 7429 3b0a 6b72 6235  har *host);.krb5
0056970: 5f65 7272 6f72 5f63 6f64 6520 6b73 736c  _error_code kssl
0056980: 5f76 616c 6964 6174 655f 7469 6d65 7328  _validate_times(
0056990: 6b72 6235 5f74 696d 6573 7461 6d70 2061  krb5_timestamp a
00569a0: 7469 6d65 2c0a 2020 2020 206b 7262 355f  time,.     krb5_
00569b0: 7469 636b 6574 5f74 696d 6573 202a 7474  ticket_times *tt
00569c0: 696d 6573 293b 0a6b 7262 355f 6572 726f  imes);.krb5_erro
00569d0: 725f 636f 6465 206b 7373 6c5f 6368 6563  r_code kssl_chec
00569e0: 6b5f 6175 7468 656e 7428 4b53 534c 5f43  k_authent(KSSL_C
00569f0: 5458 202a 6b73 736c 5f63 7478 2c20 6b72  TX *kssl_ctx, kr
0056a00: 6235 5f64 6174 6120 2a61 7574 6865 6e74  b5_data *authent
0056a10: 702c 0a20 2020 2020 2020 2020 2020 2020  p,.             
0056a20: 2020 6b72 6235 5f74 696d 6573 7461 6d70    krb5_timestamp
0056a30: 202a 6174 696d 6570 2c20 4b53 534c 5f45   *atimep, KSSL_E
0056a40: 5252 202a 6b73 736c 5f65 7272 293b 0a75  RR *kssl_err);.u
0056a50: 6e73 6967 6e65 6420 6368 6172 202a 6b73  nsigned char *ks
0056a60: 736c 5f73 6b69 705f 636f 6e66 6f75 6e64  sl_skip_confound
0056a70: 286b 7262 355f 656e 6374 7970 6520 656e  (krb5_enctype en
0056a80: 6374 7970 652c 2075 6e73 6967 6e65 6420  ctype, unsigned 
0056a90: 6368 6172 202a 6175 7468 6e29 3b0a 0a76  char *authn);..v
0056aa0: 6f69 6420 5353 4c5f 7365 7430 5f6b 7373  oid SSL_set0_kss
0056ab0: 6c5f 6374 7828 5353 4c20 2a73 2c20 4b53  l_ctx(SSL *s, KS
0056ac0: 534c 5f43 5458 202a 6b63 7478 293b 0a4b  SL_CTX *kctx);.K
0056ad0: 5353 4c5f 4354 5820 2a20 5353 4c5f 6765  SSL_CTX * SSL_ge
0056ae0: 7430 5f6b 7373 6c5f 6374 7828 5353 4c20  t0_kssl_ctx(SSL 
0056af0: 2a73 293b 0a63 6861 7220 2a6b 7373 6c5f  *s);.char *kssl_
0056b00: 6374 785f 6765 7430 5f63 6c69 656e 745f  ctx_get0_client_
0056b10: 7072 696e 6328 4b53 534c 5f43 5458 202a  princ(KSSL_CTX *
0056b20: 6b63 7478 293b 0a23 2031 3636 2022 2f75  kctx);.# 166 "/u
0056b30: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
0056b40: 736c 2f73 736c 2e68 2220 3220 3320 340a  sl/ssl.h" 2 3 4.
0056b50: 2320 3336 3420 222f 7573 722f 696e 636c  # 364 "/usr/incl
0056b60: 7564 652f 6f70 656e 7373 6c2f 7373 6c2e  ude/openssl/ssl.
0056b70: 6822 2033 2034 0a74 7970 6564 6566 2073  h" 3 4.typedef s
0056b80: 7472 7563 7420 7373 6c5f 7374 202a 7373  truct ssl_st *ss
0056b90: 6c5f 6372 6f63 6b5f 7374 3b0a 7479 7065  l_crock_st;.type
0056ba0: 6465 6620 7374 7275 6374 2074 6c73 5f73  def struct tls_s
0056bb0: 6573 7369 6f6e 5f74 6963 6b65 745f 6578  ession_ticket_ex
0056bc0: 745f 7374 2054 4c53 5f53 4553 5349 4f4e  t_st TLS_SESSION
0056bd0: 5f54 4943 4b45 545f 4558 543b 0a74 7970  _TICKET_EXT;.typ
0056be0: 6564 6566 2073 7472 7563 7420 7373 6c5f  edef struct ssl_
0056bf0: 6d65 7468 6f64 5f73 7420 5353 4c5f 4d45  method_st SSL_ME
0056c00: 5448 4f44 3b0a 7479 7065 6465 6620 7374  THOD;.typedef st
0056c10: 7275 6374 2073 736c 5f63 6970 6865 725f  ruct ssl_cipher_
0056c20: 7374 2053 534c 5f43 4950 4845 523b 0a74  st SSL_CIPHER;.t
0056c30: 7970 6564 6566 2073 7472 7563 7420 7373  ypedef struct ss
0056c40: 6c5f 7365 7373 696f 6e5f 7374 2053 534c  l_session_st SSL
0056c50: 5f53 4553 5349 4f4e 3b0a 0a73 7472 7563  _SESSION;..struc
0056c60: 7420 7374 6163 6b5f 7374 5f53 534c 5f43  t stack_st_SSL_C
0056c70: 4950 4845 5220 7b20 5f53 5441 434b 2073  IPHER { _STACK s
0056c80: 7461 636b 3b20 7d3b 0a0a 0a74 7970 6564  tack; };...typed
0056c90: 6566 2073 7472 7563 7420 7372 7470 5f70  ef struct srtp_p
0056ca0: 726f 7465 6374 696f 6e5f 7072 6f66 696c  rotection_profil
0056cb0: 655f 7374 0a20 2020 2020 2020 7b0a 2020  e_st.       {.  
0056cc0: 2020 2020 2063 6f6e 7374 2063 6861 7220       const char 
0056cd0: 2a6e 616d 653b 0a20 2020 2020 2020 756e  *name;.       un
0056ce0: 7369 676e 6564 206c 6f6e 6720 6964 3b0a  signed long id;.
0056cf0: 2020 2020 2020 207d 2053 5254 505f 5052         } SRTP_PR
0056d00: 4f54 4543 5449 4f4e 5f50 524f 4649 4c45  OTECTION_PROFILE
0056d10: 3b0a 0a73 7472 7563 7420 7374 6163 6b5f  ;..struct stack_
0056d20: 7374 5f53 5254 505f 5052 4f54 4543 5449  st_SRTP_PROTECTI
0056d30: 4f4e 5f50 524f 4649 4c45 207b 205f 5354  ON_PROFILE { _ST
0056d40: 4143 4b20 7374 6163 6b3b 207d 3b0a 0a74  ACK stack; };..t
0056d50: 7970 6564 6566 2069 6e74 2028 2a74 6c73  ypedef int (*tls
0056d60: 5f73 6573 7369 6f6e 5f74 6963 6b65 745f  _session_ticket_
0056d70: 6578 745f 6362 5f66 6e29 2853 534c 202a  ext_cb_fn)(SSL *
0056d80: 732c 2063 6f6e 7374 2075 6e73 6967 6e65  s, const unsigne
0056d90: 6420 6368 6172 202a 6461 7461 2c20 696e  d char *data, in
0056da0: 7420 6c65 6e2c 2076 6f69 6420 2a61 7267  t len, void *arg
0056db0: 293b 0a74 7970 6564 6566 2069 6e74 2028  );.typedef int (
0056dc0: 2a74 6c73 5f73 6573 7369 6f6e 5f73 6563  *tls_session_sec
0056dd0: 7265 745f 6362 5f66 6e29 2853 534c 202a  ret_cb_fn)(SSL *
0056de0: 732c 2076 6f69 6420 2a73 6563 7265 742c  s, void *secret,
0056df0: 2069 6e74 202a 7365 6372 6574 5f6c 656e   int *secret_len
0056e00: 2c20 7374 7275 6374 2073 7461 636b 5f73  , struct stack_s
0056e10: 745f 5353 4c5f 4349 5048 4552 202a 7065  t_SSL_CIPHER *pe
0056e20: 6572 5f63 6970 6865 7273 2c20 5353 4c5f  er_ciphers, SSL_
0056e30: 4349 5048 4552 202a 2a63 6970 6865 722c  CIPHER **cipher,
0056e40: 2076 6f69 6420 2a61 7267 293b 0a0a 0a0a   void *arg);....
0056e50: 0a0a 7374 7275 6374 2073 736c 5f63 6970  ..struct ssl_cip
0056e60: 6865 725f 7374 0a20 7b0a 2069 6e74 2076  her_st. {. int v
0056e70: 616c 6964 3b0a 2063 6f6e 7374 2063 6861  alid;. const cha
0056e80: 7220 2a6e 616d 653b 0a20 756e 7369 676e  r *name;. unsign
0056e90: 6564 206c 6f6e 6720 6964 3b0a 0a0a 2075  ed long id;... u
0056ea0: 6e73 6967 6e65 6420 6c6f 6e67 2061 6c67  nsigned long alg
0056eb0: 6f72 6974 686d 5f6d 6b65 793b 0a20 756e  orithm_mkey;. un
0056ec0: 7369 676e 6564 206c 6f6e 6720 616c 676f  signed long algo
0056ed0: 7269 7468 6d5f 6175 7468 3b0a 2075 6e73  rithm_auth;. uns
0056ee0: 6967 6e65 6420 6c6f 6e67 2061 6c67 6f72  igned long algor
0056ef0: 6974 686d 5f65 6e63 3b0a 2075 6e73 6967  ithm_enc;. unsig
0056f00: 6e65 6420 6c6f 6e67 2061 6c67 6f72 6974  ned long algorit
0056f10: 686d 5f6d 6163 3b0a 2075 6e73 6967 6e65  hm_mac;. unsigne
0056f20: 6420 6c6f 6e67 2061 6c67 6f72 6974 686d  d long algorithm
0056f30: 5f73 736c 3b0a 0a20 756e 7369 676e 6564  _ssl;.. unsigned
0056f40: 206c 6f6e 6720 616c 676f 5f73 7472 656e   long algo_stren
0056f50: 6774 683b 0a20 756e 7369 676e 6564 206c  gth;. unsigned l
0056f60: 6f6e 6720 616c 676f 7269 7468 6d32 3b0a  ong algorithm2;.
0056f70: 2069 6e74 2073 7472 656e 6774 685f 6269   int strength_bi
0056f80: 7473 3b0a 2069 6e74 2061 6c67 5f62 6974  ts;. int alg_bit
0056f90: 733b 0a20 7d3b 0a0a 0a0a 7374 7275 6374  s;. };....struct
0056fa0: 2073 736c 5f6d 6574 686f 645f 7374 0a20   ssl_method_st. 
0056fb0: 7b0a 2069 6e74 2076 6572 7369 6f6e 3b0a  {. int version;.
0056fc0: 2069 6e74 2028 2a73 736c 5f6e 6577 2928   int (*ssl_new)(
0056fd0: 5353 4c20 2a73 293b 0a20 766f 6964 2028  SSL *s);. void (
0056fe0: 2a73 736c 5f63 6c65 6172 2928 5353 4c20  *ssl_clear)(SSL 
0056ff0: 2a73 293b 0a20 766f 6964 2028 2a73 736c  *s);. void (*ssl
0057000: 5f66 7265 6529 2853 534c 202a 7329 3b0a  _free)(SSL *s);.
0057010: 2069 6e74 2028 2a73 736c 5f61 6363 6570   int (*ssl_accep
0057020: 7429 2853 534c 202a 7329 3b0a 2069 6e74  t)(SSL *s);. int
0057030: 2028 2a73 736c 5f63 6f6e 6e65 6374 2928   (*ssl_connect)(
0057040: 5353 4c20 2a73 293b 0a20 696e 7420 282a  SSL *s);. int (*
0057050: 7373 6c5f 7265 6164 2928 5353 4c20 2a73  ssl_read)(SSL *s
0057060: 2c76 6f69 6420 2a62 7566 2c69 6e74 206c  ,void *buf,int l
0057070: 656e 293b 0a20 696e 7420 282a 7373 6c5f  en);. int (*ssl_
0057080: 7065 656b 2928 5353 4c20 2a73 2c76 6f69  peek)(SSL *s,voi
0057090: 6420 2a62 7566 2c69 6e74 206c 656e 293b  d *buf,int len);
00570a0: 0a20 696e 7420 282a 7373 6c5f 7772 6974  . int (*ssl_writ
00570b0: 6529 2853 534c 202a 732c 636f 6e73 7420  e)(SSL *s,const 
00570c0: 766f 6964 202a 6275 662c 696e 7420 6c65  void *buf,int le
00570d0: 6e29 3b0a 2069 6e74 2028 2a73 736c 5f73  n);. int (*ssl_s
00570e0: 6875 7464 6f77 6e29 2853 534c 202a 7329  hutdown)(SSL *s)
00570f0: 3b0a 2069 6e74 2028 2a73 736c 5f72 656e  ;. int (*ssl_ren
0057100: 6567 6f74 6961 7465 2928 5353 4c20 2a73  egotiate)(SSL *s
0057110: 293b 0a20 696e 7420 282a 7373 6c5f 7265  );. int (*ssl_re
0057120: 6e65 676f 7469 6174 655f 6368 6563 6b29  negotiate_check)
0057130: 2853 534c 202a 7329 3b0a 206c 6f6e 6720  (SSL *s);. long 
0057140: 282a 7373 6c5f 6765 745f 6d65 7373 6167  (*ssl_get_messag
0057150: 6529 2853 534c 202a 732c 2069 6e74 2073  e)(SSL *s, int s
0057160: 7431 2c20 696e 7420 7374 6e2c 2069 6e74  t1, int stn, int
0057170: 206d 742c 206c 6f6e 670a 2020 6d61 782c   mt, long.  max,
0057180: 2069 6e74 202a 6f6b 293b 0a20 696e 7420   int *ok);. int 
0057190: 282a 7373 6c5f 7265 6164 5f62 7974 6573  (*ssl_read_bytes
00571a0: 2928 5353 4c20 2a73 2c20 696e 7420 7479  )(SSL *s, int ty
00571b0: 7065 2c20 756e 7369 676e 6564 2063 6861  pe, unsigned cha
00571c0: 7220 2a62 7566 2c20 696e 7420 6c65 6e2c  r *buf, int len,
00571d0: 0a20 2069 6e74 2070 6565 6b29 3b0a 2069  .  int peek);. i
00571e0: 6e74 2028 2a73 736c 5f77 7269 7465 5f62  nt (*ssl_write_b
00571f0: 7974 6573 2928 5353 4c20 2a73 2c20 696e  ytes)(SSL *s, in
0057200: 7420 7479 7065 2c20 636f 6e73 7420 766f  t type, const vo
0057210: 6964 202a 6275 665f 2c20 696e 7420 6c65  id *buf_, int le
0057220: 6e29 3b0a 2069 6e74 2028 2a73 736c 5f64  n);. int (*ssl_d
0057230: 6973 7061 7463 685f 616c 6572 7429 2853  ispatch_alert)(S
0057240: 534c 202a 7329 3b0a 206c 6f6e 6720 282a  SL *s);. long (*
0057250: 7373 6c5f 6374 726c 2928 5353 4c20 2a73  ssl_ctrl)(SSL *s
0057260: 2c69 6e74 2063 6d64 2c6c 6f6e 6720 6c61  ,int cmd,long la
0057270: 7267 2c76 6f69 6420 2a70 6172 6729 3b0a  rg,void *parg);.
0057280: 206c 6f6e 6720 282a 7373 6c5f 6374 785f   long (*ssl_ctx_
0057290: 6374 726c 2928 5353 4c5f 4354 5820 2a63  ctrl)(SSL_CTX *c
00572a0: 7478 2c69 6e74 2063 6d64 2c6c 6f6e 6720  tx,int cmd,long 
00572b0: 6c61 7267 2c76 6f69 6420 2a70 6172 6729  larg,void *parg)
00572c0: 3b0a 2063 6f6e 7374 2053 534c 5f43 4950  ;. const SSL_CIP
00572d0: 4845 5220 2a28 2a67 6574 5f63 6970 6865  HER *(*get_ciphe
00572e0: 725f 6279 5f63 6861 7229 2863 6f6e 7374  r_by_char)(const
00572f0: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
0057300: 7074 7229 3b0a 2069 6e74 2028 2a70 7574  ptr);. int (*put
0057310: 5f63 6970 6865 725f 6279 5f63 6861 7229  _cipher_by_char)
0057320: 2863 6f6e 7374 2053 534c 5f43 4950 4845  (const SSL_CIPHE
0057330: 5220 2a63 6970 6865 722c 756e 7369 676e  R *cipher,unsign
0057340: 6564 2063 6861 7220 2a70 7472 293b 0a20  ed char *ptr);. 
0057350: 696e 7420 282a 7373 6c5f 7065 6e64 696e  int (*ssl_pendin
0057360: 6729 2863 6f6e 7374 2053 534c 202a 7329  g)(const SSL *s)
0057370: 3b0a 2069 6e74 2028 2a6e 756d 5f63 6970  ;. int (*num_cip
0057380: 6865 7273 2928 766f 6964 293b 0a20 636f  hers)(void);. co
0057390: 6e73 7420 5353 4c5f 4349 5048 4552 202a  nst SSL_CIPHER *
00573a0: 282a 6765 745f 6369 7068 6572 2928 756e  (*get_cipher)(un
00573b0: 7369 676e 6564 206e 6369 7068 6572 293b  signed ncipher);
00573c0: 0a20 636f 6e73 7420 7374 7275 6374 2073  . const struct s
00573d0: 736c 5f6d 6574 686f 645f 7374 202a 282a  sl_method_st *(*
00573e0: 6765 745f 7373 6c5f 6d65 7468 6f64 2928  get_ssl_method)(
00573f0: 696e 7420 7665 7273 696f 6e29 3b0a 206c  int version);. l
0057400: 6f6e 6720 282a 6765 745f 7469 6d65 6f75  ong (*get_timeou
0057410: 7429 2876 6f69 6429 3b0a 2073 7472 7563  t)(void);. struc
0057420: 7420 7373 6c33 5f65 6e63 5f6d 6574 686f  t ssl3_enc_metho
0057430: 6420 2a73 736c 335f 656e 633b 0a20 696e  d *ssl3_enc;. in
0057440: 7420 282a 7373 6c5f 7665 7273 696f 6e29  t (*ssl_version)
0057450: 2876 6f69 6429 3b0a 206c 6f6e 6720 282a  (void);. long (*
0057460: 7373 6c5f 6361 6c6c 6261 636b 5f63 7472  ssl_callback_ctr
0057470: 6c29 2853 534c 202a 732c 2069 6e74 2063  l)(SSL *s, int c
0057480: 625f 6964 2c20 766f 6964 2028 2a66 7029  b_id, void (*fp)
0057490: 2876 6f69 6429 293b 0a20 6c6f 6e67 2028  (void));. long (
00574a0: 2a73 736c 5f63 7478 5f63 616c 6c62 6163  *ssl_ctx_callbac
00574b0: 6b5f 6374 726c 2928 5353 4c5f 4354 5820  k_ctrl)(SSL_CTX 
00574c0: 2a73 2c20 696e 7420 6362 5f69 642c 2076  *s, int cb_id, v
00574d0: 6f69 6420 282a 6670 2928 766f 6964 2929  oid (*fp)(void))
00574e0: 3b0a 207d 3b0a 2320 3436 3920 222f 7573  ;. };.# 469 "/us
00574f0: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
0057500: 6c2f 7373 6c2e 6822 2033 2034 0a73 7472  l/ssl.h" 3 4.str
0057510: 7563 7420 7373 6c5f 7365 7373 696f 6e5f  uct ssl_session_
0057520: 7374 0a20 7b0a 2069 6e74 2073 736c 5f76  st. {. int ssl_v
0057530: 6572 7369 6f6e 3b0a 0a0a 0a20 756e 7369  ersion;.... unsi
0057540: 676e 6564 2069 6e74 206b 6579 5f61 7267  gned int key_arg
0057550: 5f6c 656e 6774 683b 0a20 756e 7369 676e  _length;. unsign
0057560: 6564 2063 6861 7220 6b65 795f 6172 675b  ed char key_arg[
0057570: 385d 3b0a 2069 6e74 206d 6173 7465 725f  8];. int master_
0057580: 6b65 795f 6c65 6e67 7468 3b0a 2075 6e73  key_length;. uns
0057590: 6967 6e65 6420 6368 6172 206d 6173 7465  igned char maste
00575a0: 725f 6b65 795b 3438 5d3b 0a0a 2075 6e73  r_key[48];.. uns
00575b0: 6967 6e65 6420 696e 7420 7365 7373 696f  igned int sessio
00575c0: 6e5f 6964 5f6c 656e 6774 683b 0a20 756e  n_id_length;. un
00575d0: 7369 676e 6564 2063 6861 7220 7365 7373  signed char sess
00575e0: 696f 6e5f 6964 5b33 325d 3b0a 0a0a 0a20  ion_id[32];.... 
00575f0: 756e 7369 676e 6564 2069 6e74 2073 6964  unsigned int sid
0057600: 5f63 7478 5f6c 656e 6774 683b 0a20 756e  _ctx_length;. un
0057610: 7369 676e 6564 2063 6861 7220 7369 645f  signed char sid_
0057620: 6374 785b 3332 5d3b 0a0a 0a20 2020 2020  ctx[32];...     
0057630: 2020 2075 6e73 6967 6e65 6420 696e 7420     unsigned int 
0057640: 6b72 6235 5f63 6c69 656e 745f 7072 696e  krb5_client_prin
0057650: 635f 6c65 6e3b 0a20 2020 2020 2020 2075  c_len;.        u
0057660: 6e73 6967 6e65 6420 6368 6172 206b 7262  nsigned char krb
0057670: 355f 636c 6965 6e74 5f70 7269 6e63 5b32  5_client_princ[2
0057680: 3536 5d3b 0a0a 0a20 6368 6172 202a 7073  56];... char *ps
0057690: 6b5f 6964 656e 7469 7479 5f68 696e 743b  k_identity_hint;
00576a0: 0a20 6368 6172 202a 7073 6b5f 6964 656e  . char *psk_iden
00576b0: 7469 7479 3b0a 0a0a 0a0a 2069 6e74 206e  tity;..... int n
00576c0: 6f74 5f72 6573 756d 6162 6c65 3b0a 0a0a  ot_resumable;...
00576d0: 2073 7472 7563 7420 7365 7373 5f63 6572   struct sess_cer
00576e0: 745f 7374 202a 7365 7373 5f63 6572 743b  t_st *sess_cert;
00576f0: 0a0a 0a0a 0a0a 2058 3530 3920 2a70 6565  ...... X509 *pee
0057700: 723b 0a0a 0a20 6c6f 6e67 2076 6572 6966  r;... long verif
0057710: 795f 7265 7375 6c74 3b0a 0a20 696e 7420  y_result;.. int 
0057720: 7265 6665 7265 6e63 6573 3b0a 206c 6f6e  references;. lon
0057730: 6720 7469 6d65 6f75 743b 0a20 6c6f 6e67  g timeout;. long
0057740: 2074 696d 653b 0a0a 2075 6e73 6967 6e65   time;.. unsigne
0057750: 6420 696e 7420 636f 6d70 7265 7373 5f6d  d int compress_m
0057760: 6574 683b 0a0a 2063 6f6e 7374 2053 534c  eth;.. const SSL
0057770: 5f43 4950 4845 5220 2a63 6970 6865 723b  _CIPHER *cipher;
0057780: 0a20 756e 7369 676e 6564 206c 6f6e 6720  . unsigned long 
0057790: 6369 7068 6572 5f69 643b 0a0a 0a0a 2073  cipher_id;.... s
00577a0: 7472 7563 7420 7374 6163 6b5f 7374 5f53  truct stack_st_S
00577b0: 534c 5f43 4950 4845 5220 2a63 6970 6865  SL_CIPHER *ciphe
00577c0: 7273 3b0a 0a20 4352 5950 544f 5f45 585f  rs;.. CRYPTO_EX_
00577d0: 4441 5441 2065 785f 6461 7461 3b0a 0a0a  DATA ex_data;...
00577e0: 0a20 7374 7275 6374 2073 736c 5f73 6573  . struct ssl_ses
00577f0: 7369 6f6e 5f73 7420 2a70 7265 762c 2a6e  sion_st *prev,*n
0057800: 6578 743b 0a0a 2063 6861 7220 2a74 6c73  ext;.. char *tls
0057810: 6578 745f 686f 7374 6e61 6d65 3b0a 0a20  ext_hostname;.. 
0057820: 7369 7a65 5f74 2074 6c73 6578 745f 6563  size_t tlsext_ec
0057830: 706f 696e 7466 6f72 6d61 746c 6973 745f  pointformatlist_
0057840: 6c65 6e67 7468 3b0a 2075 6e73 6967 6e65  length;. unsigne
0057850: 6420 6368 6172 202a 746c 7365 7874 5f65  d char *tlsext_e
0057860: 6370 6f69 6e74 666f 726d 6174 6c69 7374  cpointformatlist
0057870: 3b0a 2073 697a 655f 7420 746c 7365 7874  ;. size_t tlsext
0057880: 5f65 6c6c 6970 7469 6363 7572 7665 6c69  _ellipticcurveli
0057890: 7374 5f6c 656e 6774 683b 0a20 756e 7369  st_length;. unsi
00578a0: 676e 6564 2063 6861 7220 2a74 6c73 6578  gned char *tlsex
00578b0: 745f 656c 6c69 7074 6963 6375 7276 656c  t_ellipticcurvel
00578c0: 6973 743b 0a0a 0a20 756e 7369 676e 6564  ist;... unsigned
00578d0: 2063 6861 7220 2a74 6c73 6578 745f 7469   char *tlsext_ti
00578e0: 636b 3b0a 2073 697a 655f 7420 746c 7365  ck;. size_t tlse
00578f0: 7874 5f74 6963 6b6c 656e 3b0a 206c 6f6e  xt_ticklen;. lon
0057900: 6720 746c 7365 7874 5f74 6963 6b5f 6c69  g tlsext_tick_li
0057910: 6665 7469 6d65 5f68 696e 743b 0a0a 207d  fetime_hint;.. }
0057920: 3b0a 2320 3638 3420 222f 7573 722f 696e  ;.# 684 "/usr/in
0057930: 636c 7564 652f 6f70 656e 7373 6c2f 7373  clude/openssl/ss
0057940: 6c2e 6822 2033 2034 0a76 6f69 6420 5353  l.h" 3 4.void SS
0057950: 4c5f 4354 585f 7365 745f 6d73 675f 6361  L_CTX_set_msg_ca
0057960: 6c6c 6261 636b 2853 534c 5f43 5458 202a  llback(SSL_CTX *
0057970: 6374 782c 2076 6f69 6420 282a 6362 2928  ctx, void (*cb)(
0057980: 696e 7420 7772 6974 655f 702c 2069 6e74  int write_p, int
0057990: 2076 6572 7369 6f6e 2c20 696e 7420 636f   version, int co
00579a0: 6e74 656e 745f 7479 7065 2c20 636f 6e73  ntent_type, cons
00579b0: 7420 766f 6964 202a 6275 662c 2073 697a  t void *buf, siz
00579c0: 655f 7420 6c65 6e2c 2053 534c 202a 7373  e_t len, SSL *ss
00579d0: 6c2c 2076 6f69 6420 2a61 7267 2929 3b0a  l, void *arg));.
00579e0: 766f 6964 2053 534c 5f73 6574 5f6d 7367  void SSL_set_msg
00579f0: 5f63 616c 6c62 6163 6b28 5353 4c20 2a73  _callback(SSL *s
0057a00: 736c 2c20 766f 6964 2028 2a63 6229 2869  sl, void (*cb)(i
0057a10: 6e74 2077 7269 7465 5f70 2c20 696e 7420  nt write_p, int 
0057a20: 7665 7273 696f 6e2c 2069 6e74 2063 6f6e  version, int con
0057a30: 7465 6e74 5f74 7970 652c 2063 6f6e 7374  tent_type, const
0057a40: 2076 6f69 6420 2a62 7566 2c20 7369 7a65   void *buf, size
0057a50: 5f74 206c 656e 2c20 5353 4c20 2a73 736c  _t len, SSL *ssl
0057a60: 2c20 766f 6964 202a 6172 6729 293b 0a23  , void *arg));.#
0057a70: 2037 3131 2022 2f75 7372 2f69 6e63 6c75   711 "/usr/inclu
0057a80: 6465 2f6f 7065 6e73 736c 2f73 736c 2e68  de/openssl/ssl.h
0057a90: 2220 3320 340a 7479 7065 6465 6620 696e  " 3 4.typedef in
0057aa0: 7420 282a 4745 4e5f 5345 5353 494f 4e5f  t (*GEN_SESSION_
0057ab0: 4342 2928 636f 6e73 7420 5353 4c20 2a73  CB)(const SSL *s
0057ac0: 736c 2c20 756e 7369 676e 6564 2063 6861  sl, unsigned cha
0057ad0: 7220 2a69 642c 0a20 2020 2075 6e73 6967  r *id,.    unsig
0057ae0: 6e65 6420 696e 7420 2a69 645f 6c65 6e29  ned int *id_len)
0057af0: 3b0a 0a74 7970 6564 6566 2073 7472 7563  ;..typedef struc
0057b00: 7420 7373 6c5f 636f 6d70 5f73 7420 5353  t ssl_comp_st SS
0057b10: 4c5f 434f 4d50 3b0a 0a0a 0a73 7472 7563  L_COMP;....struc
0057b20: 7420 7373 6c5f 636f 6d70 5f73 740a 207b  t ssl_comp_st. {
0057b30: 0a20 696e 7420 6964 3b0a 2063 6f6e 7374  . int id;. const
0057b40: 2063 6861 7220 2a6e 616d 653b 0a0a 2043   char *name;.. C
0057b50: 4f4d 505f 4d45 5448 4f44 202a 6d65 7468  OMP_METHOD *meth
0057b60: 6f64 3b0a 0a0a 0a20 7d3b 0a0a 7374 7275  od;.... };..stru
0057b70: 6374 2073 7461 636b 5f73 745f 5353 4c5f  ct stack_st_SSL_
0057b80: 434f 4d50 207b 205f 5354 4143 4b20 7374  COMP { _STACK st
0057b90: 6163 6b3b 207d 3b0a 7374 7275 6374 206c  ack; };.struct l
0057ba0: 6861 7368 5f73 745f 5353 4c5f 5345 5353  hash_st_SSL_SESS
0057bb0: 494f 4e20 7b20 696e 7420 6475 6d6d 793b  ION { int dummy;
0057bc0: 207d 3b0a 0a73 7472 7563 7420 7373 6c5f   };..struct ssl_
0057bd0: 6374 785f 7374 0a20 7b0a 2063 6f6e 7374  ctx_st. {. const
0057be0: 2053 534c 5f4d 4554 484f 4420 2a6d 6574   SSL_METHOD *met
0057bf0: 686f 643b 0a0a 2073 7472 7563 7420 7374  hod;.. struct st
0057c00: 6163 6b5f 7374 5f53 534c 5f43 4950 4845  ack_st_SSL_CIPHE
0057c10: 5220 2a63 6970 6865 725f 6c69 7374 3b0a  R *cipher_list;.
0057c20: 0a20 7374 7275 6374 2073 7461 636b 5f73  . struct stack_s
0057c30: 745f 5353 4c5f 4349 5048 4552 202a 6369  t_SSL_CIPHER *ci
0057c40: 7068 6572 5f6c 6973 745f 6279 5f69 643b  pher_list_by_id;
0057c50: 0a0a 2073 7472 7563 7420 7835 3039 5f73  .. struct x509_s
0057c60: 746f 7265 5f73 7420 2a63 6572 745f 7374  tore_st *cert_st
0057c70: 6f72 653b 0a20 7374 7275 6374 206c 6861  ore;. struct lha
0057c80: 7368 5f73 745f 5353 4c5f 5345 5353 494f  sh_st_SSL_SESSIO
0057c90: 4e20 2a73 6573 7369 6f6e 733b 0a0a 0a20  N *sessions;... 
0057ca0: 756e 7369 676e 6564 206c 6f6e 6720 7365  unsigned long se
0057cb0: 7373 696f 6e5f 6361 6368 655f 7369 7a65  ssion_cache_size
0057cc0: 3b0a 2073 7472 7563 7420 7373 6c5f 7365  ;. struct ssl_se
0057cd0: 7373 696f 6e5f 7374 202a 7365 7373 696f  ssion_st *sessio
0057ce0: 6e5f 6361 6368 655f 6865 6164 3b0a 2073  n_cache_head;. s
0057cf0: 7472 7563 7420 7373 6c5f 7365 7373 696f  truct ssl_sessio
0057d00: 6e5f 7374 202a 7365 7373 696f 6e5f 6361  n_st *session_ca
0057d10: 6368 655f 7461 696c 3b0a 0a0a 0a0a 0a0a  che_tail;.......
0057d20: 2069 6e74 2073 6573 7369 6f6e 5f63 6163   int session_cac
0057d30: 6865 5f6d 6f64 653b 0a0a 0a0a 0a20 6c6f  he_mode;..... lo
0057d40: 6e67 2073 6573 7369 6f6e 5f74 696d 656f  ng session_timeo
0057d50: 7574 3b0a 2320 3736 3820 222f 7573 722f  ut;.# 768 "/usr/
0057d60: 696e 636c 7564 652f 6f70 656e 7373 6c2f  include/openssl/
0057d70: 7373 6c2e 6822 2033 2034 0a20 696e 7420  ssl.h" 3 4. int 
0057d80: 282a 6e65 775f 7365 7373 696f 6e5f 6362  (*new_session_cb
0057d90: 2928 7374 7275 6374 2073 736c 5f73 7420  )(struct ssl_st 
0057da0: 2a73 736c 2c53 534c 5f53 4553 5349 4f4e  *ssl,SSL_SESSION
0057db0: 202a 7365 7373 293b 0a20 766f 6964 2028   *sess);. void (
0057dc0: 2a72 656d 6f76 655f 7365 7373 696f 6e5f  *remove_session_
0057dd0: 6362 2928 7374 7275 6374 2073 736c 5f63  cb)(struct ssl_c
0057de0: 7478 5f73 7420 2a63 7478 2c53 534c 5f53  tx_st *ctx,SSL_S
0057df0: 4553 5349 4f4e 202a 7365 7373 293b 0a20  ESSION *sess);. 
0057e00: 5353 4c5f 5345 5353 494f 4e20 2a28 2a67  SSL_SESSION *(*g
0057e10: 6574 5f73 6573 7369 6f6e 5f63 6229 2873  et_session_cb)(s
0057e20: 7472 7563 7420 7373 6c5f 7374 202a 7373  truct ssl_st *ss
0057e30: 6c2c 0a20 2075 6e73 6967 6e65 6420 6368  l,.  unsigned ch
0057e40: 6172 202a 6461 7461 2c69 6e74 206c 656e  ar *data,int len
0057e50: 2c69 6e74 202a 636f 7079 293b 0a0a 2073  ,int *copy);.. s
0057e60: 7472 7563 740a 2020 7b0a 2020 696e 7420  truct.  {.  int 
0057e70: 7365 7373 5f63 6f6e 6e65 6374 3b0a 2020  sess_connect;.  
0057e80: 696e 7420 7365 7373 5f63 6f6e 6e65 6374  int sess_connect
0057e90: 5f72 656e 6567 6f74 6961 7465 3b0a 2020  _renegotiate;.  
0057ea0: 696e 7420 7365 7373 5f63 6f6e 6e65 6374  int sess_connect
0057eb0: 5f67 6f6f 643b 0a20 2069 6e74 2073 6573  _good;.  int ses
0057ec0: 735f 6163 6365 7074 3b0a 2020 696e 7420  s_accept;.  int 
0057ed0: 7365 7373 5f61 6363 6570 745f 7265 6e65  sess_accept_rene
0057ee0: 676f 7469 6174 653b 0a20 2069 6e74 2073  gotiate;.  int s
0057ef0: 6573 735f 6163 6365 7074 5f67 6f6f 643b  ess_accept_good;
0057f00: 0a20 2069 6e74 2073 6573 735f 6d69 7373  .  int sess_miss
0057f10: 3b0a 2020 696e 7420 7365 7373 5f74 696d  ;.  int sess_tim
0057f20: 656f 7574 3b0a 2020 696e 7420 7365 7373  eout;.  int sess
0057f30: 5f63 6163 6865 5f66 756c 6c3b 0a20 2069  _cache_full;.  i
0057f40: 6e74 2073 6573 735f 6869 743b 0a20 2069  nt sess_hit;.  i
0057f50: 6e74 2073 6573 735f 6362 5f68 6974 3b0a  nt sess_cb_hit;.
0057f60: 0a0a 0a0a 0a20 207d 2073 7461 7473 3b0a  .....  } stats;.
0057f70: 0a20 696e 7420 7265 6665 7265 6e63 6573  . int references
0057f80: 3b0a 0a0a 2069 6e74 2028 2a61 7070 5f76  ;... int (*app_v
0057f90: 6572 6966 795f 6361 6c6c 6261 636b 2928  erify_callback)(
0057fa0: 5835 3039 5f53 544f 5245 5f43 5458 202a  X509_STORE_CTX *
0057fb0: 2c20 766f 6964 202a 293b 0a20 766f 6964  , void *);. void
0057fc0: 202a 6170 705f 7665 7269 6679 5f61 7267   *app_verify_arg
0057fd0: 3b0a 0a0a 0a0a 2070 656d 5f70 6173 7377  ;..... pem_passw
0057fe0: 6f72 645f 6362 202a 6465 6661 756c 745f  ord_cb *default_
0057ff0: 7061 7373 7764 5f63 616c 6c62 6163 6b3b  passwd_callback;
0058000: 0a0a 0a20 766f 6964 202a 6465 6661 756c  ... void *defaul
0058010: 745f 7061 7373 7764 5f63 616c 6c62 6163  t_passwd_callbac
0058020: 6b5f 7573 6572 6461 7461 3b0a 0a0a 2069  k_userdata;... i
0058030: 6e74 2028 2a63 6c69 656e 745f 6365 7274  nt (*client_cert
0058040: 5f63 6229 2853 534c 202a 7373 6c2c 2058  _cb)(SSL *ssl, X
0058050: 3530 3920 2a2a 7835 3039 2c20 4556 505f  509 **x509, EVP_
0058060: 504b 4559 202a 2a70 6b65 7929 3b0a 0a0a  PKEY **pkey);...
0058070: 2020 2020 696e 7420 282a 6170 705f 6765      int (*app_ge
0058080: 6e5f 636f 6f6b 6965 5f63 6229 2853 534c  n_cookie_cb)(SSL
0058090: 202a 7373 6c2c 2075 6e73 6967 6e65 6420   *ssl, unsigned 
00580a0: 6368 6172 202a 636f 6f6b 6965 2c0a 2020  char *cookie,.  
00580b0: 2020 2020 2020 756e 7369 676e 6564 2069        unsigned i
00580c0: 6e74 202a 636f 6f6b 6965 5f6c 656e 293b  nt *cookie_len);
00580d0: 0a0a 0a20 2020 2069 6e74 2028 2a61 7070  ...    int (*app
00580e0: 5f76 6572 6966 795f 636f 6f6b 6965 5f63  _verify_cookie_c
00580f0: 6229 2853 534c 202a 7373 6c2c 2075 6e73  b)(SSL *ssl, uns
0058100: 6967 6e65 6420 6368 6172 202a 636f 6f6b  igned char *cook
0058110: 6965 2c0a 2020 2020 2020 2020 756e 7369  ie,.        unsi
0058120: 676e 6564 2069 6e74 2063 6f6f 6b69 655f  gned int cookie_
0058130: 6c65 6e29 3b0a 0a20 4352 5950 544f 5f45  len);.. CRYPTO_E
0058140: 585f 4441 5441 2065 785f 6461 7461 3b0a  X_DATA ex_data;.
0058150: 0a20 636f 6e73 7420 4556 505f 4d44 202a  . const EVP_MD *
0058160: 7273 615f 6d64 353b 0a20 636f 6e73 7420  rsa_md5;. const 
0058170: 4556 505f 4d44 202a 6d64 353b 0a20 636f  EVP_MD *md5;. co
0058180: 6e73 7420 4556 505f 4d44 202a 7368 6131  nst EVP_MD *sha1
0058190: 3b0a 0a20 7374 7275 6374 2073 7461 636b  ;.. struct stack
00581a0: 5f73 745f 5835 3039 202a 6578 7472 615f  _st_X509 *extra_
00581b0: 6365 7274 733b 0a20 7374 7275 6374 2073  certs;. struct s
00581c0: 7461 636b 5f73 745f 5353 4c5f 434f 4d50  tack_st_SSL_COMP
00581d0: 202a 636f 6d70 5f6d 6574 686f 6473 3b0a   *comp_methods;.
00581e0: 0a0a 0a0a 2076 6f69 6420 282a 696e 666f  .... void (*info
00581f0: 5f63 616c 6c62 6163 6b29 2863 6f6e 7374  _callback)(const
0058200: 2053 534c 202a 7373 6c2c 696e 7420 7479   SSL *ssl,int ty
0058210: 7065 2c69 6e74 2076 616c 293b 0a0a 0a20  pe,int val);... 
0058220: 7374 7275 6374 2073 7461 636b 5f73 745f  struct stack_st_
0058230: 5835 3039 5f4e 414d 4520 2a63 6c69 656e  X509_NAME *clien
0058240: 745f 4341 3b0a 0a0a 0a0a 2075 6e73 6967  t_CA;..... unsig
0058250: 6e65 6420 6c6f 6e67 206f 7074 696f 6e73  ned long options
0058260: 3b0a 2075 6e73 6967 6e65 6420 6c6f 6e67  ;. unsigned long
0058270: 206d 6f64 653b 0a20 6c6f 6e67 206d 6178   mode;. long max
0058280: 5f63 6572 745f 6c69 7374 3b0a 0a20 7374  _cert_list;.. st
0058290: 7275 6374 2063 6572 745f 7374 202a 6365  ruct cert_st *ce
00582a0: 7274 3b0a 2069 6e74 2072 6561 645f 6168  rt;. int read_ah
00582b0: 6561 643b 0a0a 0a20 766f 6964 2028 2a6d  ead;... void (*m
00582c0: 7367 5f63 616c 6c62 6163 6b29 2869 6e74  sg_callback)(int
00582d0: 2077 7269 7465 5f70 2c20 696e 7420 7665   write_p, int ve
00582e0: 7273 696f 6e2c 2069 6e74 2063 6f6e 7465  rsion, int conte
00582f0: 6e74 5f74 7970 652c 2063 6f6e 7374 2076  nt_type, const v
0058300: 6f69 6420 2a62 7566 2c20 7369 7a65 5f74  oid *buf, size_t
0058310: 206c 656e 2c20 5353 4c20 2a73 736c 2c20   len, SSL *ssl, 
0058320: 766f 6964 202a 6172 6729 3b0a 2076 6f69  void *arg);. voi
0058330: 6420 2a6d 7367 5f63 616c 6c62 6163 6b5f  d *msg_callback_
0058340: 6172 673b 0a0a 2069 6e74 2076 6572 6966  arg;.. int verif
0058350: 795f 6d6f 6465 3b0a 2075 6e73 6967 6e65  y_mode;. unsigne
0058360: 6420 696e 7420 7369 645f 6374 785f 6c65  d int sid_ctx_le
0058370: 6e67 7468 3b0a 2075 6e73 6967 6e65 6420  ngth;. unsigned 
0058380: 6368 6172 2073 6964 5f63 7478 5b33 325d  char sid_ctx[32]
0058390: 3b0a 2069 6e74 2028 2a64 6566 6175 6c74  ;. int (*default
00583a0: 5f76 6572 6966 795f 6361 6c6c 6261 636b  _verify_callback
00583b0: 2928 696e 7420 6f6b 2c58 3530 395f 5354  )(int ok,X509_ST
00583c0: 4f52 455f 4354 5820 2a63 7478 293b 0a0a  ORE_CTX *ctx);..
00583d0: 0a20 4745 4e5f 5345 5353 494f 4e5f 4342  . GEN_SESSION_CB
00583e0: 2067 656e 6572 6174 655f 7365 7373 696f   generate_sessio
00583f0: 6e5f 6964 3b0a 0a20 5835 3039 5f56 4552  n_id;.. X509_VER
0058400: 4946 595f 5041 5241 4d20 2a70 6172 616d  IFY_PARAM *param
0058410: 3b0a 0a0a 0a0a 0a0a 2069 6e74 2071 7569  ;....... int qui
0058420: 6574 5f73 6875 7464 6f77 6e3b 0a0a 0a0a  et_shutdown;....
0058430: 0a0a 2075 6e73 6967 6e65 6420 696e 7420  .. unsigned int 
0058440: 6d61 785f 7365 6e64 5f66 7261 676d 656e  max_send_fragmen
0058450: 743b 0a0a 0a0a 0a20 454e 4749 4e45 202a  t;..... ENGINE *
0058460: 636c 6965 6e74 5f63 6572 745f 656e 6769  client_cert_engi
0058470: 6e65 3b0a 0a0a 0a0a 2069 6e74 2028 2a74  ne;..... int (*t
0058480: 6c73 6578 745f 7365 7276 6572 6e61 6d65  lsext_servername
0058490: 5f63 616c 6c62 6163 6b29 2853 534c 2a2c  _callback)(SSL*,
00584a0: 2069 6e74 202a 2c20 766f 6964 202a 293b   int *, void *);
00584b0: 0a20 766f 6964 202a 746c 7365 7874 5f73  . void *tlsext_s
00584c0: 6572 7665 726e 616d 655f 6172 673b 0a0a  ervername_arg;..
00584d0: 2075 6e73 6967 6e65 6420 6368 6172 2074   unsigned char t
00584e0: 6c73 6578 745f 7469 636b 5f6b 6579 5f6e  lsext_tick_key_n
00584f0: 616d 655b 3136 5d3b 0a20 756e 7369 676e  ame[16];. unsign
0058500: 6564 2063 6861 7220 746c 7365 7874 5f74  ed char tlsext_t
0058510: 6963 6b5f 686d 6163 5f6b 6579 5b31 365d  ick_hmac_key[16]
0058520: 3b0a 2075 6e73 6967 6e65 6420 6368 6172  ;. unsigned char
0058530: 2074 6c73 6578 745f 7469 636b 5f61 6573   tlsext_tick_aes
0058540: 5f6b 6579 5b31 365d 3b0a 0a20 696e 7420  _key[16];.. int 
0058550: 282a 746c 7365 7874 5f74 6963 6b65 745f  (*tlsext_ticket_
0058560: 6b65 795f 6362 2928 5353 4c20 2a73 736c  key_cb)(SSL *ssl
0058570: 2c0a 2020 2020 2075 6e73 6967 6e65 6420  ,.     unsigned 
0058580: 6368 6172 202a 6e61 6d65 2c20 756e 7369  char *name, unsi
0058590: 676e 6564 2063 6861 7220 2a69 762c 0a20  gned char *iv,. 
00585a0: 2020 2020 4556 505f 4349 5048 4552 5f43      EVP_CIPHER_C
00585b0: 5458 202a 6563 7478 2c0a 2020 2020 2020  TX *ectx,.      
00585c0: 484d 4143 5f43 5458 202a 6863 7478 2c20  HMAC_CTX *hctx, 
00585d0: 696e 7420 656e 6329 3b0a 0a0a 0a20 696e  int enc);.... in
00585e0: 7420 282a 746c 7365 7874 5f73 7461 7475  t (*tlsext_statu
00585f0: 735f 6362 2928 5353 4c20 2a73 736c 2c20  s_cb)(SSL *ssl, 
0058600: 766f 6964 202a 6172 6729 3b0a 2076 6f69  void *arg);. voi
0058610: 6420 2a74 6c73 6578 745f 7374 6174 7573  d *tlsext_status
0058620: 5f61 7267 3b0a 0a0a 2069 6e74 2028 2a74  _arg;... int (*t
0058630: 6c73 6578 745f 6f70 6171 7565 5f70 7266  lsext_opaque_prf
0058640: 5f69 6e70 7574 5f63 616c 6c62 6163 6b29  _input_callback)
0058650: 2853 534c 202a 2c20 766f 6964 202a 7065  (SSL *, void *pe
0058660: 6572 696e 7075 742c 2073 697a 655f 7420  erinput, size_t 
0058670: 6c65 6e2c 2076 6f69 6420 2a61 7267 293b  len, void *arg);
0058680: 0a20 766f 6964 202a 746c 7365 7874 5f6f  . void *tlsext_o
0058690: 7061 7175 655f 7072 665f 696e 7075 745f  paque_prf_input_
00586a0: 6361 6c6c 6261 636b 5f61 7267 3b0a 0a0a  callback_arg;...
00586b0: 0a20 6368 6172 202a 7073 6b5f 6964 656e  . char *psk_iden
00586c0: 7469 7479 5f68 696e 743b 0a20 756e 7369  tity_hint;. unsi
00586d0: 676e 6564 2069 6e74 2028 2a70 736b 5f63  gned int (*psk_c
00586e0: 6c69 656e 745f 6361 6c6c 6261 636b 2928  lient_callback)(
00586f0: 5353 4c20 2a73 736c 2c20 636f 6e73 7420  SSL *ssl, const 
0058700: 6368 6172 202a 6869 6e74 2c20 6368 6172  char *hint, char
0058710: 202a 6964 656e 7469 7479 2c0a 2020 756e   *identity,.  un
0058720: 7369 676e 6564 2069 6e74 206d 6178 5f69  signed int max_i
0058730: 6465 6e74 6974 795f 6c65 6e2c 2075 6e73  dentity_len, uns
0058740: 6967 6e65 6420 6368 6172 202a 7073 6b2c  igned char *psk,
0058750: 0a20 2075 6e73 6967 6e65 6420 696e 7420  .  unsigned int 
0058760: 6d61 785f 7073 6b5f 6c65 6e29 3b0a 2075  max_psk_len);. u
0058770: 6e73 6967 6e65 6420 696e 7420 282a 7073  nsigned int (*ps
0058780: 6b5f 7365 7276 6572 5f63 616c 6c62 6163  k_server_callbac
0058790: 6b29 2853 534c 202a 7373 6c2c 2063 6f6e  k)(SSL *ssl, con
00587a0: 7374 2063 6861 7220 2a69 6465 6e74 6974  st char *identit
00587b0: 792c 0a20 2075 6e73 6967 6e65 6420 6368  y,.  unsigned ch
00587c0: 6172 202a 7073 6b2c 2075 6e73 6967 6e65  ar *psk, unsigne
00587d0: 6420 696e 7420 6d61 785f 7073 6b5f 6c65  d int max_psk_le
00587e0: 6e29 3b0a 0a0a 0a0a 2075 6e73 6967 6e65  n);..... unsigne
00587f0: 6420 696e 7420 6672 6565 6c69 7374 5f6d  d int freelist_m
0058800: 6178 5f6c 656e 3b0a 2073 7472 7563 7420  ax_len;. struct 
0058810: 7373 6c33 5f62 7566 5f66 7265 656c 6973  ssl3_buf_freelis
0058820: 745f 7374 202a 7762 7566 5f66 7265 656c  t_st *wbuf_freel
0058830: 6973 743b 0a20 7374 7275 6374 2073 736c  ist;. struct ssl
0058840: 335f 6275 665f 6672 6565 6c69 7374 5f73  3_buf_freelist_s
0058850: 7420 2a72 6275 665f 6672 6565 6c69 7374  t *rbuf_freelist
0058860: 3b0a 2320 3932 3620 222f 7573 722f 696e  ;.# 926 "/usr/in
0058870: 636c 7564 652f 6f70 656e 7373 6c2f 7373  clude/openssl/ss
0058880: 6c2e 6822 2033 2034 0a20 696e 7420 282a  l.h" 3 4. int (*
0058890: 6e65 7874 5f70 726f 746f 735f 6164 7665  next_protos_adve
00588a0: 7274 6973 6564 5f63 6229 2853 534c 202a  rtised_cb)(SSL *
00588b0: 732c 2063 6f6e 7374 2075 6e73 6967 6e65  s, const unsigne
00588c0: 6420 6368 6172 202a 2a62 7566 2c0a 2020  d char **buf,.  
00588d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00588e0: 2020 756e 7369 676e 6564 2069 6e74 202a    unsigned int *
00588f0: 6c65 6e2c 2076 6f69 6420 2a61 7267 293b  len, void *arg);
0058900: 0a20 766f 6964 202a 6e65 7874 5f70 726f  . void *next_pro
0058910: 746f 735f 6164 7665 7274 6973 6564 5f63  tos_advertised_c
0058920: 625f 6172 673b 0a0a 0a20 696e 7420 282a  b_arg;... int (*
0058930: 6e65 7874 5f70 726f 746f 5f73 656c 6563  next_proto_selec
0058940: 745f 6362 2928 5353 4c20 2a73 2c20 756e  t_cb)(SSL *s, un
0058950: 7369 676e 6564 2063 6861 7220 2a2a 6f75  signed char **ou
0058960: 742c 0a20 2020 2020 2020 2075 6e73 6967  t,.        unsig
0058970: 6e65 6420 6368 6172 202a 6f75 746c 656e  ned char *outlen
0058980: 2c0a 2020 2020 2020 2020 636f 6e73 7420  ,.        const 
0058990: 756e 7369 676e 6564 2063 6861 7220 2a69  unsigned char *i
00589a0: 6e2c 0a20 2020 2020 2020 2075 6e73 6967  n,.        unsig
00589b0: 6e65 6420 696e 7420 696e 6c65 6e2c 0a20  ned int inlen,. 
00589c0: 2020 2020 2020 2076 6f69 6420 2a61 7267         void *arg
00589d0: 293b 0a20 766f 6964 202a 6e65 7874 5f70  );. void *next_p
00589e0: 726f 746f 5f73 656c 6563 745f 6362 5f61  roto_select_cb_a
00589f0: 7267 3b0a 0a0a 2020 2020 2020 2020 7374  rg;...        st
0058a00: 7275 6374 2073 7461 636b 5f73 745f 5352  ruct stack_st_SR
0058a10: 5450 5f50 524f 5445 4354 494f 4e5f 5052  TP_PROTECTION_PR
0058a20: 4f46 494c 4520 2a73 7274 705f 7072 6f66  OFILE *srtp_prof
0058a30: 696c 6573 3b0a 0a20 7d3b 0a23 2039 3536  iles;.. };.# 956
0058a40: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
0058a50: 7065 6e73 736c 2f73 736c 2e68 2220 3320  penssl/ssl.h" 3 
0058a60: 340a 7374 7275 6374 206c 6861 7368 5f73  4.struct lhash_s
0058a70: 745f 5353 4c5f 5345 5353 494f 4e20 2a53  t_SSL_SESSION *S
0058a80: 534c 5f43 5458 5f73 6573 7369 6f6e 7328  SL_CTX_sessions(
0058a90: 5353 4c5f 4354 5820 2a63 7478 293b 0a23  SSL_CTX *ctx);.#
0058aa0: 2039 3832 2022 2f75 7372 2f69 6e63 6c75   982 "/usr/inclu
0058ab0: 6465 2f6f 7065 6e73 736c 2f73 736c 2e68  de/openssl/ssl.h
0058ac0: 2220 3320 340a 766f 6964 2053 534c 5f43  " 3 4.void SSL_C
0058ad0: 5458 5f73 6573 735f 7365 745f 6e65 775f  TX_sess_set_new_
0058ae0: 6362 2853 534c 5f43 5458 202a 6374 782c  cb(SSL_CTX *ctx,
0058af0: 2069 6e74 2028 2a6e 6577 5f73 6573 7369   int (*new_sessi
0058b00: 6f6e 5f63 6229 2873 7472 7563 7420 7373  on_cb)(struct ss
0058b10: 6c5f 7374 202a 7373 6c2c 5353 4c5f 5345  l_st *ssl,SSL_SE
0058b20: 5353 494f 4e20 2a73 6573 7329 293b 0a69  SSION *sess));.i
0058b30: 6e74 2028 2a53 534c 5f43 5458 5f73 6573  nt (*SSL_CTX_ses
0058b40: 735f 6765 745f 6e65 775f 6362 2853 534c  s_get_new_cb(SSL
0058b50: 5f43 5458 202a 6374 7829 2928 7374 7275  _CTX *ctx))(stru
0058b60: 6374 2073 736c 5f73 7420 2a73 736c 2c20  ct ssl_st *ssl, 
0058b70: 5353 4c5f 5345 5353 494f 4e20 2a73 6573  SSL_SESSION *ses
0058b80: 7329 3b0a 766f 6964 2053 534c 5f43 5458  s);.void SSL_CTX
0058b90: 5f73 6573 735f 7365 745f 7265 6d6f 7665  _sess_set_remove
0058ba0: 5f63 6228 5353 4c5f 4354 5820 2a63 7478  _cb(SSL_CTX *ctx
0058bb0: 2c20 766f 6964 2028 2a72 656d 6f76 655f  , void (*remove_
0058bc0: 7365 7373 696f 6e5f 6362 2928 7374 7275  session_cb)(stru
0058bd0: 6374 2073 736c 5f63 7478 5f73 7420 2a63  ct ssl_ctx_st *c
0058be0: 7478 2c53 534c 5f53 4553 5349 4f4e 202a  tx,SSL_SESSION *
0058bf0: 7365 7373 2929 3b0a 766f 6964 2028 2a53  sess));.void (*S
0058c00: 534c 5f43 5458 5f73 6573 735f 6765 745f  SL_CTX_sess_get_
0058c10: 7265 6d6f 7665 5f63 6228 5353 4c5f 4354  remove_cb(SSL_CT
0058c20: 5820 2a63 7478 2929 2873 7472 7563 7420  X *ctx))(struct 
0058c30: 7373 6c5f 6374 785f 7374 202a 6374 782c  ssl_ctx_st *ctx,
0058c40: 2053 534c 5f53 4553 5349 4f4e 202a 7365   SSL_SESSION *se
0058c50: 7373 293b 0a76 6f69 6420 5353 4c5f 4354  ss);.void SSL_CT
0058c60: 585f 7365 7373 5f73 6574 5f67 6574 5f63  X_sess_set_get_c
0058c70: 6228 5353 4c5f 4354 5820 2a63 7478 2c20  b(SSL_CTX *ctx, 
0058c80: 5353 4c5f 5345 5353 494f 4e20 2a28 2a67  SSL_SESSION *(*g
0058c90: 6574 5f73 6573 7369 6f6e 5f63 6229 2873  et_session_cb)(s
0058ca0: 7472 7563 7420 7373 6c5f 7374 202a 7373  truct ssl_st *ss
0058cb0: 6c2c 2075 6e73 6967 6e65 6420 6368 6172  l, unsigned char
0058cc0: 202a 6461 7461 2c69 6e74 206c 656e 2c69   *data,int len,i
0058cd0: 6e74 202a 636f 7079 2929 3b0a 5353 4c5f  nt *copy));.SSL_
0058ce0: 5345 5353 494f 4e20 2a28 2a53 534c 5f43  SESSION *(*SSL_C
0058cf0: 5458 5f73 6573 735f 6765 745f 6765 745f  TX_sess_get_get_
0058d00: 6362 2853 534c 5f43 5458 202a 6374 7829  cb(SSL_CTX *ctx)
0058d10: 2928 7374 7275 6374 2073 736c 5f73 7420  )(struct ssl_st 
0058d20: 2a73 736c 2c20 756e 7369 676e 6564 2063  *ssl, unsigned c
0058d30: 6861 7220 2a44 6174 612c 2069 6e74 206c  har *Data, int l
0058d40: 656e 2c20 696e 7420 2a63 6f70 7929 3b0a  en, int *copy);.
0058d50: 766f 6964 2053 534c 5f43 5458 5f73 6574  void SSL_CTX_set
0058d60: 5f69 6e66 6f5f 6361 6c6c 6261 636b 2853  _info_callback(S
0058d70: 534c 5f43 5458 202a 6374 782c 2076 6f69  SL_CTX *ctx, voi
0058d80: 6420 282a 6362 2928 636f 6e73 7420 5353  d (*cb)(const SS
0058d90: 4c20 2a73 736c 2c69 6e74 2074 7970 652c  L *ssl,int type,
0058da0: 696e 7420 7661 6c29 293b 0a76 6f69 6420  int val));.void 
0058db0: 282a 5353 4c5f 4354 585f 6765 745f 696e  (*SSL_CTX_get_in
0058dc0: 666f 5f63 616c 6c62 6163 6b28 5353 4c5f  fo_callback(SSL_
0058dd0: 4354 5820 2a63 7478 2929 2863 6f6e 7374  CTX *ctx))(const
0058de0: 2053 534c 202a 7373 6c2c 696e 7420 7479   SSL *ssl,int ty
0058df0: 7065 2c69 6e74 2076 616c 293b 0a76 6f69  pe,int val);.voi
0058e00: 6420 5353 4c5f 4354 585f 7365 745f 636c  d SSL_CTX_set_cl
0058e10: 6965 6e74 5f63 6572 745f 6362 2853 534c  ient_cert_cb(SSL
0058e20: 5f43 5458 202a 6374 782c 2069 6e74 2028  _CTX *ctx, int (
0058e30: 2a63 6c69 656e 745f 6365 7274 5f63 6229  *client_cert_cb)
0058e40: 2853 534c 202a 7373 6c2c 2058 3530 3920  (SSL *ssl, X509 
0058e50: 2a2a 7835 3039 2c20 4556 505f 504b 4559  **x509, EVP_PKEY
0058e60: 202a 2a70 6b65 7929 293b 0a69 6e74 2028   **pkey));.int (
0058e70: 2a53 534c 5f43 5458 5f67 6574 5f63 6c69  *SSL_CTX_get_cli
0058e80: 656e 745f 6365 7274 5f63 6228 5353 4c5f  ent_cert_cb(SSL_
0058e90: 4354 5820 2a63 7478 2929 2853 534c 202a  CTX *ctx))(SSL *
0058ea0: 7373 6c2c 2058 3530 3920 2a2a 7835 3039  ssl, X509 **x509
0058eb0: 2c20 4556 505f 504b 4559 202a 2a70 6b65  , EVP_PKEY **pke
0058ec0: 7929 3b0a 0a69 6e74 2053 534c 5f43 5458  y);..int SSL_CTX
0058ed0: 5f73 6574 5f63 6c69 656e 745f 6365 7274  _set_client_cert
0058ee0: 5f65 6e67 696e 6528 5353 4c5f 4354 5820  _engine(SSL_CTX 
0058ef0: 2a63 7478 2c20 454e 4749 4e45 202a 6529  *ctx, ENGINE *e)
0058f00: 3b0a 0a76 6f69 6420 5353 4c5f 4354 585f  ;..void SSL_CTX_
0058f10: 7365 745f 636f 6f6b 6965 5f67 656e 6572  set_cookie_gener
0058f20: 6174 655f 6362 2853 534c 5f43 5458 202a  ate_cb(SSL_CTX *
0058f30: 6374 782c 2069 6e74 2028 2a61 7070 5f67  ctx, int (*app_g
0058f40: 656e 5f63 6f6f 6b69 655f 6362 2928 5353  en_cookie_cb)(SS
0058f50: 4c20 2a73 736c 2c20 756e 7369 676e 6564  L *ssl, unsigned
0058f60: 2063 6861 7220 2a63 6f6f 6b69 652c 2075   char *cookie, u
0058f70: 6e73 6967 6e65 6420 696e 7420 2a63 6f6f  nsigned int *coo
0058f80: 6b69 655f 6c65 6e29 293b 0a76 6f69 6420  kie_len));.void 
0058f90: 5353 4c5f 4354 585f 7365 745f 636f 6f6b  SSL_CTX_set_cook
0058fa0: 6965 5f76 6572 6966 795f 6362 2853 534c  ie_verify_cb(SSL
0058fb0: 5f43 5458 202a 6374 782c 2069 6e74 2028  _CTX *ctx, int (
0058fc0: 2a61 7070 5f76 6572 6966 795f 636f 6f6b  *app_verify_cook
0058fd0: 6965 5f63 6229 2853 534c 202a 7373 6c2c  ie_cb)(SSL *ssl,
0058fe0: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
0058ff0: 636f 6f6b 6965 2c20 756e 7369 676e 6564  cookie, unsigned
0059000: 2069 6e74 2063 6f6f 6b69 655f 6c65 6e29   int cookie_len)
0059010: 293b 0a0a 766f 6964 2053 534c 5f43 5458  );..void SSL_CTX
0059020: 5f73 6574 5f6e 6578 745f 7072 6f74 6f73  _set_next_protos
0059030: 5f61 6476 6572 7469 7365 645f 6362 2853  _advertised_cb(S
0059040: 534c 5f43 5458 202a 732c 0a20 2020 2020  SL_CTX *s,.     
0059050: 2020 2069 6e74 2028 2a63 6229 2028 5353     int (*cb) (SS
0059060: 4c20 2a73 736c 2c0a 2020 2020 2020 2020  L *ssl,.        
0059070: 2020 2020 636f 6e73 7420 756e 7369 676e      const unsign
0059080: 6564 2063 6861 7220 2a2a 6f75 742c 0a20  ed char **out,. 
0059090: 2020 2020 2020 2020 2020 2075 6e73 6967             unsig
00590a0: 6e65 6420 696e 7420 2a6f 7574 6c65 6e2c  ned int *outlen,
00590b0: 0a20 2020 2020 2020 2020 2020 2076 6f69  .            voi
00590c0: 6420 2a61 7267 292c 0a20 2020 2020 2020  d *arg),.       
00590d0: 2076 6f69 6420 2a61 7267 293b 0a76 6f69   void *arg);.voi
00590e0: 6420 5353 4c5f 4354 585f 7365 745f 6e65  d SSL_CTX_set_ne
00590f0: 7874 5f70 726f 746f 5f73 656c 6563 745f  xt_proto_select_
0059100: 6362 2853 534c 5f43 5458 202a 732c 0a20  cb(SSL_CTX *s,. 
0059110: 2020 2020 2020 2020 2069 6e74 2028 2a63           int (*c
0059120: 6229 2028 5353 4c20 2a73 736c 2c0a 2020  b) (SSL *ssl,.  
0059130: 2020 2020 2075 6e73 6967 6e65 6420 6368       unsigned ch
0059140: 6172 202a 2a6f 7574 2c0a 2020 2020 2020  ar **out,.      
0059150: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
0059160: 6f75 746c 656e 2c0a 2020 2020 2020 2063  outlen,.       c
0059170: 6f6e 7374 2075 6e73 6967 6e65 6420 6368  onst unsigned ch
0059180: 6172 202a 696e 2c0a 2020 2020 2020 2075  ar *in,.       u
0059190: 6e73 6967 6e65 6420 696e 7420 696e 6c65  nsigned int inle
00591a0: 6e2c 0a20 2020 2020 2020 766f 6964 202a  n,.       void *
00591b0: 6172 6729 2c0a 2020 2020 2020 2020 2020  arg),.          
00591c0: 766f 6964 202a 6172 6729 3b0a 0a69 6e74  void *arg);..int
00591d0: 2053 534c 5f73 656c 6563 745f 6e65 7874   SSL_select_next
00591e0: 5f70 726f 746f 2875 6e73 6967 6e65 6420  _proto(unsigned 
00591f0: 6368 6172 202a 2a6f 7574 2c20 756e 7369  char **out, unsi
0059200: 676e 6564 2063 6861 7220 2a6f 7574 6c65  gned char *outle
0059210: 6e2c 0a20 2020 2020 636f 6e73 7420 756e  n,.     const un
0059220: 7369 676e 6564 2063 6861 7220 2a69 6e2c  signed char *in,
0059230: 2075 6e73 6967 6e65 6420 696e 7420 696e   unsigned int in
0059240: 6c65 6e2c 0a20 2020 2020 636f 6e73 7420  len,.     const 
0059250: 756e 7369 676e 6564 2063 6861 7220 2a63  unsigned char *c
0059260: 6c69 656e 742c 2075 6e73 6967 6e65 6420  lient, unsigned 
0059270: 696e 7420 636c 6965 6e74 5f6c 656e 293b  int client_len);
0059280: 0a76 6f69 6420 5353 4c5f 6765 7430 5f6e  .void SSL_get0_n
0059290: 6578 745f 7072 6f74 6f5f 6e65 676f 7469  ext_proto_negoti
00592a0: 6174 6564 2863 6f6e 7374 2053 534c 202a  ated(const SSL *
00592b0: 732c 0a20 2020 2020 2020 2063 6f6e 7374  s,.        const
00592c0: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
00592d0: 2a64 6174 612c 2075 6e73 6967 6e65 6420  *data, unsigned 
00592e0: 2a6c 656e 293b 0a23 2031 3032 3920 222f  *len);.# 1029 "/
00592f0: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
0059300: 7373 6c2f 7373 6c2e 6822 2033 2034 0a76  ssl/ssl.h" 3 4.v
0059310: 6f69 6420 5353 4c5f 4354 585f 7365 745f  oid SSL_CTX_set_
0059320: 7073 6b5f 636c 6965 6e74 5f63 616c 6c62  psk_client_callb
0059330: 6163 6b28 5353 4c5f 4354 5820 2a63 7478  ack(SSL_CTX *ctx
0059340: 2c0a 2075 6e73 6967 6e65 6420 696e 7420  ,. unsigned int 
0059350: 282a 7073 6b5f 636c 6965 6e74 5f63 616c  (*psk_client_cal
0059360: 6c62 6163 6b29 2853 534c 202a 7373 6c2c  lback)(SSL *ssl,
0059370: 2063 6f6e 7374 2063 6861 7220 2a68 696e   const char *hin
0059380: 742c 0a20 2063 6861 7220 2a69 6465 6e74  t,.  char *ident
0059390: 6974 792c 2075 6e73 6967 6e65 6420 696e  ity, unsigned in
00593a0: 7420 6d61 785f 6964 656e 7469 7479 5f6c  t max_identity_l
00593b0: 656e 2c20 756e 7369 676e 6564 2063 6861  en, unsigned cha
00593c0: 7220 2a70 736b 2c0a 2020 756e 7369 676e  r *psk,.  unsign
00593d0: 6564 2069 6e74 206d 6178 5f70 736b 5f6c  ed int max_psk_l
00593e0: 656e 2929 3b0a 766f 6964 2053 534c 5f73  en));.void SSL_s
00593f0: 6574 5f70 736b 5f63 6c69 656e 745f 6361  et_psk_client_ca
0059400: 6c6c 6261 636b 2853 534c 202a 7373 6c2c  llback(SSL *ssl,
0059410: 0a20 756e 7369 676e 6564 2069 6e74 2028  . unsigned int (
0059420: 2a70 736b 5f63 6c69 656e 745f 6361 6c6c  *psk_client_call
0059430: 6261 636b 2928 5353 4c20 2a73 736c 2c20  back)(SSL *ssl, 
0059440: 636f 6e73 7420 6368 6172 202a 6869 6e74  const char *hint
0059450: 2c0a 2020 6368 6172 202a 6964 656e 7469  ,.  char *identi
0059460: 7479 2c20 756e 7369 676e 6564 2069 6e74  ty, unsigned int
0059470: 206d 6178 5f69 6465 6e74 6974 795f 6c65   max_identity_le
0059480: 6e2c 2075 6e73 6967 6e65 6420 6368 6172  n, unsigned char
0059490: 202a 7073 6b2c 0a20 2075 6e73 6967 6e65   *psk,.  unsigne
00594a0: 6420 696e 7420 6d61 785f 7073 6b5f 6c65  d int max_psk_le
00594b0: 6e29 293b 0a76 6f69 6420 5353 4c5f 4354  n));.void SSL_CT
00594c0: 585f 7365 745f 7073 6b5f 7365 7276 6572  X_set_psk_server
00594d0: 5f63 616c 6c62 6163 6b28 5353 4c5f 4354  _callback(SSL_CT
00594e0: 5820 2a63 7478 2c0a 2075 6e73 6967 6e65  X *ctx,. unsigne
00594f0: 6420 696e 7420 282a 7073 6b5f 7365 7276  d int (*psk_serv
0059500: 6572 5f63 616c 6c62 6163 6b29 2853 534c  er_callback)(SSL
0059510: 202a 7373 6c2c 2063 6f6e 7374 2063 6861   *ssl, const cha
0059520: 7220 2a69 6465 6e74 6974 792c 0a20 2075  r *identity,.  u
0059530: 6e73 6967 6e65 6420 6368 6172 202a 7073  nsigned char *ps
0059540: 6b2c 2075 6e73 6967 6e65 6420 696e 7420  k, unsigned int 
0059550: 6d61 785f 7073 6b5f 6c65 6e29 293b 0a76  max_psk_len));.v
0059560: 6f69 6420 5353 4c5f 7365 745f 7073 6b5f  oid SSL_set_psk_
0059570: 7365 7276 6572 5f63 616c 6c62 6163 6b28  server_callback(
0059580: 5353 4c20 2a73 736c 2c0a 2075 6e73 6967  SSL *ssl,. unsig
0059590: 6e65 6420 696e 7420 282a 7073 6b5f 7365  ned int (*psk_se
00595a0: 7276 6572 5f63 616c 6c62 6163 6b29 2853  rver_callback)(S
00595b0: 534c 202a 7373 6c2c 2063 6f6e 7374 2063  SL *ssl, const c
00595c0: 6861 7220 2a69 6465 6e74 6974 792c 0a20  har *identity,. 
00595d0: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
00595e0: 7073 6b2c 2075 6e73 6967 6e65 6420 696e  psk, unsigned in
00595f0: 7420 6d61 785f 7073 6b5f 6c65 6e29 293b  t max_psk_len));
0059600: 0a69 6e74 2053 534c 5f43 5458 5f75 7365  .int SSL_CTX_use
0059610: 5f70 736b 5f69 6465 6e74 6974 795f 6869  _psk_identity_hi
0059620: 6e74 2853 534c 5f43 5458 202a 6374 782c  nt(SSL_CTX *ctx,
0059630: 2063 6f6e 7374 2063 6861 7220 2a69 6465   const char *ide
0059640: 6e74 6974 795f 6869 6e74 293b 0a69 6e74  ntity_hint);.int
0059650: 2053 534c 5f75 7365 5f70 736b 5f69 6465   SSL_use_psk_ide
0059660: 6e74 6974 795f 6869 6e74 2853 534c 202a  ntity_hint(SSL *
0059670: 732c 2063 6f6e 7374 2063 6861 7220 2a69  s, const char *i
0059680: 6465 6e74 6974 795f 6869 6e74 293b 0a63  dentity_hint);.c
0059690: 6f6e 7374 2063 6861 7220 2a53 534c 5f67  onst char *SSL_g
00596a0: 6574 5f70 736b 5f69 6465 6e74 6974 795f  et_psk_identity_
00596b0: 6869 6e74 2863 6f6e 7374 2053 534c 202a  hint(const SSL *
00596c0: 7329 3b0a 636f 6e73 7420 6368 6172 202a  s);.const char *
00596d0: 5353 4c5f 6765 745f 7073 6b5f 6964 656e  SSL_get_psk_iden
00596e0: 7469 7479 2863 6f6e 7374 2053 534c 202a  tity(const SSL *
00596f0: 7329 3b0a 2320 3130 3635 2022 2f75 7372  s);.# 1065 "/usr
0059700: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
0059710: 2f73 736c 2e68 2220 3320 340a 7374 7275  /ssl.h" 3 4.stru
0059720: 6374 2073 736c 5f73 740a 207b 0a0a 0a0a  ct ssl_st. {....
0059730: 2069 6e74 2076 6572 7369 6f6e 3b0a 2069   int version;. i
0059740: 6e74 2074 7970 653b 0a0a 2063 6f6e 7374  nt type;.. const
0059750: 2053 534c 5f4d 4554 484f 4420 2a6d 6574   SSL_METHOD *met
0059760: 686f 643b 0a0a 0a0a 0a0a 0a20 4249 4f20  hod;....... BIO 
0059770: 2a72 6269 6f3b 0a20 4249 4f20 2a77 6269  *rbio;. BIO *wbi
0059780: 6f3b 0a20 4249 4f20 2a62 6269 6f3b 0a23  o;. BIO *bbio;.#
0059790: 2031 3039 3320 222f 7573 722f 696e 636c   1093 "/usr/incl
00597a0: 7564 652f 6f70 656e 7373 6c2f 7373 6c2e  ude/openssl/ssl.
00597b0: 6822 2033 2034 0a20 696e 7420 7277 7374  h" 3 4. int rwst
00597c0: 6174 653b 0a0a 0a20 696e 7420 696e 5f68  ate;... int in_h
00597d0: 616e 6473 6861 6b65 3b0a 2069 6e74 2028  andshake;. int (
00597e0: 2a68 616e 6473 6861 6b65 5f66 756e 6329  *handshake_func)
00597f0: 2853 534c 202a 293b 0a23 2031 3130 3720  (SSL *);.# 1107 
0059800: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
0059810: 656e 7373 6c2f 7373 6c2e 6822 2033 2034  enssl/ssl.h" 3 4
0059820: 0a20 696e 7420 7365 7276 6572 3b0a 0a20  . int server;.. 
0059830: 696e 7420 6e65 775f 7365 7373 696f 6e3b  int new_session;
0059840: 0a0a 0a0a 2069 6e74 2071 7569 6574 5f73  .... int quiet_s
0059850: 6875 7464 6f77 6e3b 0a20 696e 7420 7368  hutdown;. int sh
0059860: 7574 646f 776e 3b0a 0a20 696e 7420 7374  utdown;.. int st
0059870: 6174 653b 0a20 696e 7420 7273 7461 7465  ate;. int rstate
0059880: 3b0a 0a20 4255 465f 4d45 4d20 2a69 6e69  ;.. BUF_MEM *ini
0059890: 745f 6275 663b 0a20 766f 6964 202a 696e  t_buf;. void *in
00598a0: 6974 5f6d 7367 3b0a 2069 6e74 2069 6e69  it_msg;. int ini
00598b0: 745f 6e75 6d3b 0a20 696e 7420 696e 6974  t_num;. int init
00598c0: 5f6f 6666 3b0a 0a0a 2075 6e73 6967 6e65  _off;... unsigne
00598d0: 6420 6368 6172 202a 7061 636b 6574 3b0a  d char *packet;.
00598e0: 2075 6e73 6967 6e65 6420 696e 7420 7061   unsigned int pa
00598f0: 636b 6574 5f6c 656e 6774 683b 0a0a 2073  cket_length;.. s
0059900: 7472 7563 7420 7373 6c32 5f73 7461 7465  truct ssl2_state
0059910: 5f73 7420 2a73 323b 0a20 7374 7275 6374  _st *s2;. struct
0059920: 2073 736c 335f 7374 6174 655f 7374 202a   ssl3_state_st *
0059930: 7333 3b0a 2073 7472 7563 7420 6474 6c73  s3;. struct dtls
0059940: 315f 7374 6174 655f 7374 202a 6431 3b0a  1_state_st *d1;.
0059950: 0a20 696e 7420 7265 6164 5f61 6865 6164  . int read_ahead
0059960: 3b0a 0a0a 0a20 766f 6964 2028 2a6d 7367  ;.... void (*msg
0059970: 5f63 616c 6c62 6163 6b29 2869 6e74 2077  _callback)(int w
0059980: 7269 7465 5f70 2c20 696e 7420 7665 7273  rite_p, int vers
0059990: 696f 6e2c 2069 6e74 2063 6f6e 7465 6e74  ion, int content
00599a0: 5f74 7970 652c 2063 6f6e 7374 2076 6f69  _type, const voi
00599b0: 6420 2a62 7566 2c20 7369 7a65 5f74 206c  d *buf, size_t l
00599c0: 656e 2c20 5353 4c20 2a73 736c 2c20 766f  en, SSL *ssl, vo
00599d0: 6964 202a 6172 6729 3b0a 2076 6f69 6420  id *arg);. void 
00599e0: 2a6d 7367 5f63 616c 6c62 6163 6b5f 6172  *msg_callback_ar
00599f0: 673b 0a0a 2069 6e74 2068 6974 3b0a 0a20  g;.. int hit;.. 
0059a00: 5835 3039 5f56 4552 4946 595f 5041 5241  X509_VERIFY_PARA
0059a10: 4d20 2a70 6172 616d 3b0a 0a0a 0a0a 0a0a  M *param;.......
0059a20: 0a20 7374 7275 6374 2073 7461 636b 5f73  . struct stack_s
0059a30: 745f 5353 4c5f 4349 5048 4552 202a 6369  t_SSL_CIPHER *ci
0059a40: 7068 6572 5f6c 6973 743b 0a20 7374 7275  pher_list;. stru
0059a50: 6374 2073 7461 636b 5f73 745f 5353 4c5f  ct stack_st_SSL_
0059a60: 4349 5048 4552 202a 6369 7068 6572 5f6c  CIPHER *cipher_l
0059a70: 6973 745f 6279 5f69 643b 0a0a 0a0a 2069  ist_by_id;.... i
0059a80: 6e74 206d 6163 5f66 6c61 6773 3b0a 2045  nt mac_flags;. E
0059a90: 5650 5f43 4950 4845 525f 4354 5820 2a65  VP_CIPHER_CTX *e
0059aa0: 6e63 5f72 6561 645f 6374 783b 0a20 4556  nc_read_ctx;. EV
0059ab0: 505f 4d44 5f43 5458 202a 7265 6164 5f68  P_MD_CTX *read_h
0059ac0: 6173 683b 0a0a 2043 4f4d 505f 4354 5820  ash;.. COMP_CTX 
0059ad0: 2a65 7870 616e 643b 0a0a 0a0a 0a20 4556  *expand;..... EV
0059ae0: 505f 4349 5048 4552 5f43 5458 202a 656e  P_CIPHER_CTX *en
0059af0: 635f 7772 6974 655f 6374 783b 0a20 4556  c_write_ctx;. EV
0059b00: 505f 4d44 5f43 5458 202a 7772 6974 655f  P_MD_CTX *write_
0059b10: 6861 7368 3b0a 0a20 434f 4d50 5f43 5458  hash;.. COMP_CTX
0059b20: 202a 636f 6d70 7265 7373 3b0a 2320 3131   *compress;.# 11
0059b30: 3735 2022 2f75 7372 2f69 6e63 6c75 6465  75 "/usr/include
0059b40: 2f6f 7065 6e73 736c 2f73 736c 2e68 2220  /openssl/ssl.h" 
0059b50: 3320 340a 2073 7472 7563 7420 6365 7274  3 4. struct cert
0059b60: 5f73 7420 2a63 6572 743b 0a0a 0a0a 2075  _st *cert;.... u
0059b70: 6e73 6967 6e65 6420 696e 7420 7369 645f  nsigned int sid_
0059b80: 6374 785f 6c65 6e67 7468 3b0a 2075 6e73  ctx_length;. uns
0059b90: 6967 6e65 6420 6368 6172 2073 6964 5f63  igned char sid_c
0059ba0: 7478 5b33 325d 3b0a 0a0a 2053 534c 5f53  tx[32];... SSL_S
0059bb0: 4553 5349 4f4e 202a 7365 7373 696f 6e3b  ESSION *session;
0059bc0: 0a0a 0a20 4745 4e5f 5345 5353 494f 4e5f  ... GEN_SESSION_
0059bd0: 4342 2067 656e 6572 6174 655f 7365 7373  CB generate_sess
0059be0: 696f 6e5f 6964 3b0a 0a0a 2069 6e74 2076  ion_id;... int v
0059bf0: 6572 6966 795f 6d6f 6465 3b0a 0a20 696e  erify_mode;.. in
0059c00: 7420 282a 7665 7269 6679 5f63 616c 6c62  t (*verify_callb
0059c10: 6163 6b29 2869 6e74 206f 6b2c 5835 3039  ack)(int ok,X509
0059c20: 5f53 544f 5245 5f43 5458 202a 6374 7829  _STORE_CTX *ctx)
0059c30: 3b0a 0a20 766f 6964 2028 2a69 6e66 6f5f  ;.. void (*info_
0059c40: 6361 6c6c 6261 636b 2928 636f 6e73 7420  callback)(const 
0059c50: 5353 4c20 2a73 736c 2c69 6e74 2074 7970  SSL *ssl,int typ
0059c60: 652c 696e 7420 7661 6c29 3b0a 0a20 696e  e,int val);.. in
0059c70: 7420 6572 726f 723b 0a20 696e 7420 6572  t error;. int er
0059c80: 726f 725f 636f 6465 3b0a 0a0a 204b 5353  ror_code;... KSS
0059c90: 4c5f 4354 5820 2a6b 7373 6c5f 6374 783b  L_CTX *kssl_ctx;
0059ca0: 0a0a 0a0a 2075 6e73 6967 6e65 6420 696e  .... unsigned in
0059cb0: 7420 282a 7073 6b5f 636c 6965 6e74 5f63  t (*psk_client_c
0059cc0: 616c 6c62 6163 6b29 2853 534c 202a 7373  allback)(SSL *ss
0059cd0: 6c2c 2063 6f6e 7374 2063 6861 7220 2a68  l, const char *h
0059ce0: 696e 742c 2063 6861 7220 2a69 6465 6e74  int, char *ident
0059cf0: 6974 792c 0a20 2075 6e73 6967 6e65 6420  ity,.  unsigned 
0059d00: 696e 7420 6d61 785f 6964 656e 7469 7479  int max_identity
0059d10: 5f6c 656e 2c20 756e 7369 676e 6564 2063  _len, unsigned c
0059d20: 6861 7220 2a70 736b 2c0a 2020 756e 7369  har *psk,.  unsi
0059d30: 676e 6564 2069 6e74 206d 6178 5f70 736b  gned int max_psk
0059d40: 5f6c 656e 293b 0a20 756e 7369 676e 6564  _len);. unsigned
0059d50: 2069 6e74 2028 2a70 736b 5f73 6572 7665   int (*psk_serve
0059d60: 725f 6361 6c6c 6261 636b 2928 5353 4c20  r_callback)(SSL 
0059d70: 2a73 736c 2c20 636f 6e73 7420 6368 6172  *ssl, const char
0059d80: 202a 6964 656e 7469 7479 2c0a 2020 756e   *identity,.  un
0059d90: 7369 676e 6564 2063 6861 7220 2a70 736b  signed char *psk
0059da0: 2c20 756e 7369 676e 6564 2069 6e74 206d  , unsigned int m
0059db0: 6178 5f70 736b 5f6c 656e 293b 0a0a 0a20  ax_psk_len);... 
0059dc0: 5353 4c5f 4354 5820 2a63 7478 3b0a 0a0a  SSL_CTX *ctx;...
0059dd0: 2069 6e74 2064 6562 7567 3b0a 0a0a 206c   int debug;... l
0059de0: 6f6e 6720 7665 7269 6679 5f72 6573 756c  ong verify_resul
0059df0: 743b 0a20 4352 5950 544f 5f45 585f 4441  t;. CRYPTO_EX_DA
0059e00: 5441 2065 785f 6461 7461 3b0a 0a0a 2073  TA ex_data;... s
0059e10: 7472 7563 7420 7374 6163 6b5f 7374 5f58  truct stack_st_X
0059e20: 3530 395f 4e41 4d45 202a 636c 6965 6e74  509_NAME *client
0059e30: 5f43 413b 0a0a 2069 6e74 2072 6566 6572  _CA;.. int refer
0059e40: 656e 6365 733b 0a20 756e 7369 676e 6564  ences;. unsigned
0059e50: 206c 6f6e 6720 6f70 7469 6f6e 733b 0a20   long options;. 
0059e60: 756e 7369 676e 6564 206c 6f6e 6720 6d6f  unsigned long mo
0059e70: 6465 3b0a 206c 6f6e 6720 6d61 785f 6365  de;. long max_ce
0059e80: 7274 5f6c 6973 743b 0a20 696e 7420 6669  rt_list;. int fi
0059e90: 7273 745f 7061 636b 6574 3b0a 2069 6e74  rst_packet;. int
0059ea0: 2063 6c69 656e 745f 7665 7273 696f 6e3b   client_version;
0059eb0: 0a0a 2075 6e73 6967 6e65 6420 696e 7420  .. unsigned int 
0059ec0: 6d61 785f 7365 6e64 5f66 7261 676d 656e  max_send_fragmen
0059ed0: 743b 0a0a 0a20 766f 6964 2028 2a74 6c73  t;... void (*tls
0059ee0: 6578 745f 6465 6275 675f 6362 2928 5353  ext_debug_cb)(SS
0059ef0: 4c20 2a73 2c20 696e 7420 636c 6965 6e74  L *s, int client
0059f00: 5f73 6572 7665 722c 2069 6e74 2074 7970  _server, int typ
0059f10: 652c 0a20 2020 2020 756e 7369 676e 6564  e,.     unsigned
0059f20: 2063 6861 7220 2a64 6174 612c 2069 6e74   char *data, int
0059f30: 206c 656e 2c0a 2020 2020 2076 6f69 6420   len,.     void 
0059f40: 2a61 7267 293b 0a20 766f 6964 202a 746c  *arg);. void *tl
0059f50: 7365 7874 5f64 6562 7567 5f61 7267 3b0a  sext_debug_arg;.
0059f60: 2063 6861 7220 2a74 6c73 6578 745f 686f   char *tlsext_ho
0059f70: 7374 6e61 6d65 3b0a 2069 6e74 2073 6572  stname;. int ser
0059f80: 7665 726e 616d 655f 646f 6e65 3b0a 0a0a  vername_done;...
0059f90: 0a0a 0a0a 2069 6e74 2074 6c73 6578 745f  .... int tlsext_
0059fa0: 7374 6174 7573 5f74 7970 653b 0a0a 2069  status_type;.. i
0059fb0: 6e74 2074 6c73 6578 745f 7374 6174 7573  nt tlsext_status
0059fc0: 5f65 7870 6563 7465 643b 0a0a 2073 7472  _expected;.. str
0059fd0: 7563 7420 7374 6163 6b5f 7374 5f4f 4353  uct stack_st_OCS
0059fe0: 505f 5245 5350 4944 202a 746c 7365 7874  P_RESPID *tlsext
0059ff0: 5f6f 6373 705f 6964 733b 0a20 5835 3039  _ocsp_ids;. X509
005a000: 5f45 5854 454e 5349 4f4e 5320 2a74 6c73  _EXTENSIONS *tls
005a010: 6578 745f 6f63 7370 5f65 7874 733b 0a0a  ext_ocsp_exts;..
005a020: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
005a030: 746c 7365 7874 5f6f 6373 705f 7265 7370  tlsext_ocsp_resp
005a040: 3b0a 2069 6e74 2074 6c73 6578 745f 6f63  ;. int tlsext_oc
005a050: 7370 5f72 6573 706c 656e 3b0a 0a0a 2069  sp_resplen;... i
005a060: 6e74 2074 6c73 6578 745f 7469 636b 6574  nt tlsext_ticket
005a070: 5f65 7870 6563 7465 643b 0a0a 2073 697a  _expected;.. siz
005a080: 655f 7420 746c 7365 7874 5f65 6370 6f69  e_t tlsext_ecpoi
005a090: 6e74 666f 726d 6174 6c69 7374 5f6c 656e  ntformatlist_len
005a0a0: 6774 683b 0a20 756e 7369 676e 6564 2063  gth;. unsigned c
005a0b0: 6861 7220 2a74 6c73 6578 745f 6563 706f  har *tlsext_ecpo
005a0c0: 696e 7466 6f72 6d61 746c 6973 743b 0a20  intformatlist;. 
005a0d0: 7369 7a65 5f74 2074 6c73 6578 745f 656c  size_t tlsext_el
005a0e0: 6c69 7074 6963 6375 7276 656c 6973 745f  lipticcurvelist_
005a0f0: 6c65 6e67 7468 3b0a 2075 6e73 6967 6e65  length;. unsigne
005a100: 6420 6368 6172 202a 746c 7365 7874 5f65  d char *tlsext_e
005a110: 6c6c 6970 7469 6363 7572 7665 6c69 7374  llipticcurvelist
005a120: 3b0a 0a0a 0a20 766f 6964 202a 746c 7365  ;.... void *tlse
005a130: 7874 5f6f 7061 7175 655f 7072 665f 696e  xt_opaque_prf_in
005a140: 7075 743b 0a20 7369 7a65 5f74 2074 6c73  put;. size_t tls
005a150: 6578 745f 6f70 6171 7565 5f70 7266 5f69  ext_opaque_prf_i
005a160: 6e70 7574 5f6c 656e 3b0a 0a0a 2054 4c53  nput_len;... TLS
005a170: 5f53 4553 5349 4f4e 5f54 4943 4b45 545f  _SESSION_TICKET_
005a180: 4558 5420 2a74 6c73 6578 745f 7365 7373  EXT *tlsext_sess
005a190: 696f 6e5f 7469 636b 6574 3b0a 0a0a 2074  ion_ticket;... t
005a1a0: 6c73 5f73 6573 7369 6f6e 5f74 6963 6b65  ls_session_ticke
005a1b0: 745f 6578 745f 6362 5f66 6e20 746c 735f  t_ext_cb_fn tls_
005a1c0: 7365 7373 696f 6e5f 7469 636b 6574 5f65  session_ticket_e
005a1d0: 7874 5f63 623b 0a20 766f 6964 202a 746c  xt_cb;. void *tl
005a1e0: 735f 7365 7373 696f 6e5f 7469 636b 6574  s_session_ticket
005a1f0: 5f65 7874 5f63 625f 6172 673b 0a0a 0a20  _ext_cb_arg;... 
005a200: 746c 735f 7365 7373 696f 6e5f 7365 6372  tls_session_secr
005a210: 6574 5f63 625f 666e 2074 6c73 5f73 6573  et_cb_fn tls_ses
005a220: 7369 6f6e 5f73 6563 7265 745f 6362 3b0a  sion_secret_cb;.
005a230: 2076 6f69 6420 2a74 6c73 5f73 6573 7369   void *tls_sessi
005a240: 6f6e 5f73 6563 7265 745f 6362 5f61 7267  on_secret_cb_arg
005a250: 3b0a 0a20 5353 4c5f 4354 5820 2a20 696e  ;.. SSL_CTX * in
005a260: 6974 6961 6c5f 6374 783b 0a23 2031 3238  itial_ctx;.# 128
005a270: 3820 222f 7573 722f 696e 636c 7564 652f  8 "/usr/include/
005a280: 6f70 656e 7373 6c2f 7373 6c2e 6822 2033  openssl/ssl.h" 3
005a290: 2034 0a20 756e 7369 676e 6564 2063 6861   4. unsigned cha
005a2a0: 7220 2a6e 6578 745f 7072 6f74 6f5f 6e65  r *next_proto_ne
005a2b0: 676f 7469 6174 6564 3b0a 2075 6e73 6967  gotiated;. unsig
005a2c0: 6e65 6420 6368 6172 206e 6578 745f 7072  ned char next_pr
005a2d0: 6f74 6f5f 6e65 676f 7469 6174 6564 5f6c  oto_negotiated_l
005a2e0: 656e 3b0a 0a0a 0a0a 2073 7472 7563 7420  en;..... struct 
005a2f0: 7374 6163 6b5f 7374 5f53 5254 505f 5052  stack_st_SRTP_PR
005a300: 4f54 4543 5449 4f4e 5f50 524f 4649 4c45  OTECTION_PROFILE
005a310: 202a 7372 7470 5f70 726f 6669 6c65 733b   *srtp_profiles;
005a320: 0a20 5352 5450 5f50 524f 5445 4354 494f  . SRTP_PROTECTIO
005a330: 4e5f 5052 4f46 494c 4520 2a73 7274 705f  N_PROFILE *srtp_
005a340: 7072 6f66 696c 653b 0a0a 2075 6e73 6967  profile;.. unsig
005a350: 6e65 6420 696e 7420 746c 7365 7874 5f68  ned int tlsext_h
005a360: 6561 7274 6265 6174 3b0a 0a0a 0a0a 2075  eartbeat;..... u
005a370: 6e73 6967 6e65 6420 696e 7420 746c 7365  nsigned int tlse
005a380: 7874 5f68 625f 7065 6e64 696e 673b 0a20  xt_hb_pending;. 
005a390: 756e 7369 676e 6564 2069 6e74 2074 6c73  unsigned int tls
005a3a0: 6578 745f 6862 5f73 6571 3b0a 0a0a 0a0a  ext_hb_seq;.....
005a3b0: 2069 6e74 2072 656e 6567 6f74 6961 7465   int renegotiate
005a3c0: 3b0a 0a0a 0a20 7d3b 0a0a 0a0a 0a0a 0a0a  ;.... };........
005a3d0: 2320 3120 222f 7573 722f 696e 636c 7564  # 1 "/usr/includ
005a3e0: 652f 6f70 656e 7373 6c2f 7373 6c32 2e68  e/openssl/ssl2.h
005a3f0: 2220 3120 3320 340a 2320 3136 3020 222f  " 1 3 4.# 160 "/
005a400: 7573 722f 696e 636c 7564 652f 6f70 656e  usr/include/open
005a410: 7373 6c2f 7373 6c32 2e68 2220 3320 340a  ssl/ssl2.h" 3 4.
005a420: 7479 7065 6465 6620 7374 7275 6374 2073  typedef struct s
005a430: 736c 325f 7374 6174 655f 7374 0a20 7b0a  sl2_state_st. {.
005a440: 2069 6e74 2074 6872 6565 5f62 7974 655f   int three_byte_
005a450: 6865 6164 6572 3b0a 2069 6e74 2063 6c65  header;. int cle
005a460: 6172 5f74 6578 743b 0a20 696e 7420 6573  ar_text;. int es
005a470: 6361 7065 3b0a 2069 6e74 2073 736c 325f  cape;. int ssl2_
005a480: 726f 6c6c 6261 636b 3b0a 0a0a 0a20 756e  rollback;.... un
005a490: 7369 676e 6564 2069 6e74 2077 6e75 6d3b  signed int wnum;
005a4a0: 0a20 696e 7420 7770 656e 645f 746f 743b  . int wpend_tot;
005a4b0: 0a20 636f 6e73 7420 756e 7369 676e 6564  . const unsigned
005a4c0: 2063 6861 7220 2a77 7065 6e64 5f62 7566   char *wpend_buf
005a4d0: 3b0a 0a20 696e 7420 7770 656e 645f 6f66  ;.. int wpend_of
005a4e0: 663b 0a20 696e 7420 7770 656e 645f 6c65  f;. int wpend_le
005a4f0: 6e3b 0a20 696e 7420 7770 656e 645f 7265  n;. int wpend_re
005a500: 743b 0a0a 0a20 696e 7420 7262 7566 5f6c  t;... int rbuf_l
005a510: 6566 743b 0a20 696e 7420 7262 7566 5f6f  eft;. int rbuf_o
005a520: 6666 733b 0a20 756e 7369 676e 6564 2063  ffs;. unsigned c
005a530: 6861 7220 2a72 6275 663b 0a20 756e 7369  har *rbuf;. unsi
005a540: 676e 6564 2063 6861 7220 2a77 6275 663b  gned char *wbuf;
005a550: 0a0a 2075 6e73 6967 6e65 6420 6368 6172  .. unsigned char
005a560: 202a 7772 6974 655f 7074 723b 0a0a 0a20   *write_ptr;... 
005a570: 756e 7369 676e 6564 2069 6e74 2070 6164  unsigned int pad
005a580: 6469 6e67 3b0a 2075 6e73 6967 6e65 6420  ding;. unsigned 
005a590: 696e 7420 726c 656e 6774 683b 0a20 696e  int rlength;. in
005a5a0: 7420 7261 6374 5f64 6174 615f 6c65 6e67  t ract_data_leng
005a5b0: 7468 3b0a 2075 6e73 6967 6e65 6420 696e  th;. unsigned in
005a5c0: 7420 776c 656e 6774 683b 0a20 696e 7420  t wlength;. int 
005a5d0: 7761 6374 5f64 6174 615f 6c65 6e67 7468  wact_data_length
005a5e0: 3b0a 2075 6e73 6967 6e65 6420 6368 6172  ;. unsigned char
005a5f0: 202a 7261 6374 5f64 6174 613b 0a20 756e   *ract_data;. un
005a600: 7369 676e 6564 2063 6861 7220 2a77 6163  signed char *wac
005a610: 745f 6461 7461 3b0a 2075 6e73 6967 6e65  t_data;. unsigne
005a620: 6420 6368 6172 202a 6d61 635f 6461 7461  d char *mac_data
005a630: 3b0a 0a20 756e 7369 676e 6564 2063 6861  ;.. unsigned cha
005a640: 7220 2a72 6561 645f 6b65 793b 0a20 756e  r *read_key;. un
005a650: 7369 676e 6564 2063 6861 7220 2a77 7269  signed char *wri
005a660: 7465 5f6b 6579 3b0a 0a0a 2075 6e73 6967  te_key;... unsig
005a670: 6e65 6420 696e 7420 6368 616c 6c65 6e67  ned int challeng
005a680: 655f 6c65 6e67 7468 3b0a 2075 6e73 6967  e_length;. unsig
005a690: 6e65 6420 6368 6172 2063 6861 6c6c 656e  ned char challen
005a6a0: 6765 5b33 325d 3b0a 2075 6e73 6967 6e65  ge[32];. unsigne
005a6b0: 6420 696e 7420 636f 6e6e 5f69 645f 6c65  d int conn_id_le
005a6c0: 6e67 7468 3b0a 2075 6e73 6967 6e65 6420  ngth;. unsigned 
005a6d0: 6368 6172 2063 6f6e 6e5f 6964 5b31 365d  char conn_id[16]
005a6e0: 3b0a 2075 6e73 6967 6e65 6420 696e 7420  ;. unsigned int 
005a6f0: 6b65 795f 6d61 7465 7269 616c 5f6c 656e  key_material_len
005a700: 6774 683b 0a20 756e 7369 676e 6564 2063  gth;. unsigned c
005a710: 6861 7220 6b65 795f 6d61 7465 7269 616c  har key_material
005a720: 5b32 342a 325d 3b0a 0a20 756e 7369 676e  [24*2];.. unsign
005a730: 6564 206c 6f6e 6720 7265 6164 5f73 6571  ed long read_seq
005a740: 7565 6e63 653b 0a20 756e 7369 676e 6564  uence;. unsigned
005a750: 206c 6f6e 6720 7772 6974 655f 7365 7175   long write_sequ
005a760: 656e 6365 3b0a 0a20 7374 7275 6374 207b  ence;.. struct {
005a770: 0a20 2075 6e73 6967 6e65 6420 696e 7420  .  unsigned int 
005a780: 636f 6e6e 5f69 645f 6c65 6e67 7468 3b0a  conn_id_length;.
005a790: 2020 756e 7369 676e 6564 2069 6e74 2063    unsigned int c
005a7a0: 6572 745f 7479 7065 3b0a 2020 756e 7369  ert_type;.  unsi
005a7b0: 676e 6564 2069 6e74 2063 6572 745f 6c65  gned int cert_le
005a7c0: 6e67 7468 3b0a 2020 756e 7369 676e 6564  ngth;.  unsigned
005a7d0: 2069 6e74 2063 736c 3b0a 2020 756e 7369   int csl;.  unsi
005a7e0: 676e 6564 2069 6e74 2063 6c65 6172 3b0a  gned int clear;.
005a7f0: 2020 756e 7369 676e 6564 2069 6e74 2065    unsigned int e
005a800: 6e63 3b0a 2020 756e 7369 676e 6564 2063  nc;.  unsigned c
005a810: 6861 7220 6363 6c5b 3332 5d3b 0a20 2075  har ccl[32];.  u
005a820: 6e73 6967 6e65 6420 696e 7420 6369 7068  nsigned int ciph
005a830: 6572 5f73 7065 635f 6c65 6e67 7468 3b0a  er_spec_length;.
005a840: 2020 756e 7369 676e 6564 2069 6e74 2073    unsigned int s
005a850: 6573 7369 6f6e 5f69 645f 6c65 6e67 7468  ession_id_length
005a860: 3b0a 2020 756e 7369 676e 6564 2069 6e74  ;.  unsigned int
005a870: 2063 6c65 6e3b 0a20 2075 6e73 6967 6e65   clen;.  unsigne
005a880: 6420 696e 7420 726c 656e 3b0a 2020 7d20  d int rlen;.  } 
005a890: 746d 703b 0a20 7d20 5353 4c32 5f53 5441  tmp;. } SSL2_STA
005a8a0: 5445 3b0a 2320 3133 3231 2022 2f75 7372  TE;.# 1321 "/usr
005a8b0: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
005a8c0: 2f73 736c 2e68 2220 3220 3320 340a 2320  /ssl.h" 2 3 4.# 
005a8d0: 3120 222f 7573 722f 696e 636c 7564 652f  1 "/usr/include/
005a8e0: 6f70 656e 7373 6c2f 7373 6c33 2e68 2220  openssl/ssl3.h" 
005a8f0: 3120 3320 340a 2320 3132 3520 222f 7573  1 3 4.# 125 "/us
005a900: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
005a910: 6c2f 7373 6c33 2e68 2220 3320 340a 2320  l/ssl3.h" 3 4.# 
005a920: 3120 222f 7573 722f 696e 636c 7564 652f  1 "/usr/include/
005a930: 6f70 656e 7373 6c2f 7373 6c2e 6822 2031  openssl/ssl.h" 1
005a940: 2033 2034 0a23 2031 3236 2022 2f75 7372   3 4.# 126 "/usr
005a950: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
005a960: 2f73 736c 332e 6822 2032 2033 2034 0a23  /ssl3.h" 2 3 4.#
005a970: 2033 3533 2022 2f75 7372 2f69 6e63 6c75   353 "/usr/inclu
005a980: 6465 2f6f 7065 6e73 736c 2f73 736c 332e  de/openssl/ssl3.
005a990: 6822 2033 2034 0a74 7970 6564 6566 2073  h" 3 4.typedef s
005a9a0: 7472 7563 7420 7373 6c33 5f72 6563 6f72  truct ssl3_recor
005a9b0: 645f 7374 0a20 7b0a 2020 2020 2020 2069  d_st. {.       i
005a9c0: 6e74 2074 7970 653b 0a20 2020 2020 2020  nt type;.       
005a9d0: 756e 7369 676e 6564 2069 6e74 206c 656e  unsigned int len
005a9e0: 6774 683b 0a20 2020 2020 2020 756e 7369  gth;.       unsi
005a9f0: 676e 6564 2069 6e74 206f 6666 3b0a 2020  gned int off;.  
005aa00: 2020 2020 2075 6e73 6967 6e65 6420 6368       unsigned ch
005aa10: 6172 202a 6461 7461 3b0a 2020 2020 2020  ar *data;.      
005aa20: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
005aa30: 696e 7075 743b 0a20 2020 2020 2020 756e  input;.       un
005aa40: 7369 676e 6564 2063 6861 7220 2a63 6f6d  signed char *com
005aa50: 703b 0a20 2020 2020 2020 2075 6e73 6967  p;.        unsig
005aa60: 6e65 6420 6c6f 6e67 2065 706f 6368 3b0a  ned long epoch;.
005aa70: 2020 2020 2020 2020 756e 7369 676e 6564          unsigned
005aa80: 2063 6861 7220 7365 715f 6e75 6d5b 385d   char seq_num[8]
005aa90: 3b0a 207d 2053 534c 335f 5245 434f 5244  ;. } SSL3_RECORD
005aaa0: 3b0a 0a74 7970 6564 6566 2073 7472 7563  ;..typedef struc
005aab0: 7420 7373 6c33 5f62 7566 6665 725f 7374  t ssl3_buffer_st
005aac0: 0a20 7b0a 2075 6e73 6967 6e65 6420 6368  . {. unsigned ch
005aad0: 6172 202a 6275 663b 0a0a 2073 697a 655f  ar *buf;.. size_
005aae0: 7420 6c65 6e3b 0a20 696e 7420 6f66 6673  t len;. int offs
005aaf0: 6574 3b0a 2069 6e74 206c 6566 743b 0a20  et;. int left;. 
005ab00: 7d20 5353 4c33 5f42 5546 4645 523b 0a23  } SSL3_BUFFER;.#
005ab10: 2034 3131 2022 2f75 7372 2f69 6e63 6c75   411 "/usr/inclu
005ab20: 6465 2f6f 7065 6e73 736c 2f73 736c 332e  de/openssl/ssl3.
005ab30: 6822 2033 2034 0a74 7970 6564 6566 2073  h" 3 4.typedef s
005ab40: 7472 7563 7420 7373 6c33 5f73 7461 7465  truct ssl3_state
005ab50: 5f73 740a 207b 0a20 6c6f 6e67 2066 6c61  _st. {. long fla
005ab60: 6773 3b0a 2069 6e74 2064 656c 6179 5f62  gs;. int delay_b
005ab70: 7566 5f70 6f70 5f72 6574 3b0a 0a20 756e  uf_pop_ret;.. un
005ab80: 7369 676e 6564 2063 6861 7220 7265 6164  signed char read
005ab90: 5f73 6571 7565 6e63 655b 385d 3b0a 2069  _sequence[8];. i
005aba0: 6e74 2072 6561 645f 6d61 635f 7365 6372  nt read_mac_secr
005abb0: 6574 5f73 697a 653b 0a20 756e 7369 676e  et_size;. unsign
005abc0: 6564 2063 6861 7220 7265 6164 5f6d 6163  ed char read_mac
005abd0: 5f73 6563 7265 745b 3634 5d3b 0a20 756e  _secret[64];. un
005abe0: 7369 676e 6564 2063 6861 7220 7772 6974  signed char writ
005abf0: 655f 7365 7175 656e 6365 5b38 5d3b 0a20  e_sequence[8];. 
005ac00: 696e 7420 7772 6974 655f 6d61 635f 7365  int write_mac_se
005ac10: 6372 6574 5f73 697a 653b 0a20 756e 7369  cret_size;. unsi
005ac20: 676e 6564 2063 6861 7220 7772 6974 655f  gned char write_
005ac30: 6d61 635f 7365 6372 6574 5b36 345d 3b0a  mac_secret[64];.
005ac40: 0a20 756e 7369 676e 6564 2063 6861 7220  . unsigned char 
005ac50: 7365 7276 6572 5f72 616e 646f 6d5b 3332  server_random[32
005ac60: 5d3b 0a20 756e 7369 676e 6564 2063 6861  ];. unsigned cha
005ac70: 7220 636c 6965 6e74 5f72 616e 646f 6d5b  r client_random[
005ac80: 3332 5d3b 0a0a 0a20 696e 7420 6e65 6564  32];... int need
005ac90: 5f65 6d70 7479 5f66 7261 676d 656e 7473  _empty_fragments
005aca0: 3b0a 2069 6e74 2065 6d70 7479 5f66 7261  ;. int empty_fra
005acb0: 676d 656e 745f 646f 6e65 3b0a 0a0a 2069  gment_done;... i
005acc0: 6e74 2069 6e69 745f 6578 7472 613b 0a0a  nt init_extra;..
005acd0: 2053 534c 335f 4255 4646 4552 2072 6275   SSL3_BUFFER rbu
005ace0: 663b 0a20 5353 4c33 5f42 5546 4645 5220  f;. SSL3_BUFFER 
005acf0: 7762 7566 3b0a 0a20 5353 4c33 5f52 4543  wbuf;.. SSL3_REC
005ad00: 4f52 4420 7272 6563 3b0a 2053 534c 335f  ORD rrec;. SSL3_
005ad10: 5245 434f 5244 2077 7265 633b 0a0a 0a0a  RECORD wrec;....
005ad20: 2075 6e73 6967 6e65 6420 6368 6172 2061   unsigned char a
005ad30: 6c65 7274 5f66 7261 676d 656e 745b 325d  lert_fragment[2]
005ad40: 3b0a 2075 6e73 6967 6e65 6420 696e 7420  ;. unsigned int 
005ad50: 616c 6572 745f 6672 6167 6d65 6e74 5f6c  alert_fragment_l
005ad60: 656e 3b0a 2075 6e73 6967 6e65 6420 6368  en;. unsigned ch
005ad70: 6172 2068 616e 6473 6861 6b65 5f66 7261  ar handshake_fra
005ad80: 676d 656e 745b 345d 3b0a 2075 6e73 6967  gment[4];. unsig
005ad90: 6e65 6420 696e 7420 6861 6e64 7368 616b  ned int handshak
005ada0: 655f 6672 6167 6d65 6e74 5f6c 656e 3b0a  e_fragment_len;.
005adb0: 0a0a 2075 6e73 6967 6e65 6420 696e 7420  .. unsigned int 
005adc0: 776e 756d 3b0a 2069 6e74 2077 7065 6e64  wnum;. int wpend
005add0: 5f74 6f74 3b0a 2069 6e74 2077 7065 6e64  _tot;. int wpend
005ade0: 5f74 7970 653b 0a20 696e 7420 7770 656e  _type;. int wpen
005adf0: 645f 7265 743b 0a20 636f 6e73 7420 756e  d_ret;. const un
005ae00: 7369 676e 6564 2063 6861 7220 2a77 7065  signed char *wpe
005ae10: 6e64 5f62 7566 3b0a 0a0a 2042 494f 202a  nd_buf;... BIO *
005ae20: 6861 6e64 7368 616b 655f 6275 6666 6572  handshake_buffer
005ae30: 3b0a 0a0a 0a20 4556 505f 4d44 5f43 5458  ;.... EVP_MD_CTX
005ae40: 202a 2a68 616e 6473 6861 6b65 5f64 6773   **handshake_dgs
005ae50: 743b 0a0a 0a20 696e 7420 6368 616e 6765  t;... int change
005ae60: 5f63 6970 6865 725f 7370 6563 3b0a 0a20  _cipher_spec;.. 
005ae70: 696e 7420 7761 726e 5f61 6c65 7274 3b0a  int warn_alert;.
005ae80: 2069 6e74 2066 6174 616c 5f61 6c65 7274   int fatal_alert
005ae90: 3b0a 0a0a 2069 6e74 2061 6c65 7274 5f64  ;... int alert_d
005aea0: 6973 7061 7463 683b 0a20 756e 7369 676e  ispatch;. unsign
005aeb0: 6564 2063 6861 7220 7365 6e64 5f61 6c65  ed char send_ale
005aec0: 7274 5b32 5d3b 0a0a 0a0a 2069 6e74 2072  rt[2];.... int r
005aed0: 656e 6567 6f74 6961 7465 3b0a 2069 6e74  enegotiate;. int
005aee0: 2074 6f74 616c 5f72 656e 6567 6f74 6961   total_renegotia
005aef0: 7469 6f6e 733b 0a20 696e 7420 6e75 6d5f  tions;. int num_
005af00: 7265 6e65 676f 7469 6174 696f 6e73 3b0a  renegotiations;.
005af10: 0a20 696e 7420 696e 5f72 6561 645f 6170  . int in_read_ap
005af20: 705f 6461 7461 3b0a 0a0a 0a0a 2076 6f69  p_data;..... voi
005af30: 6420 2a63 6c69 656e 745f 6f70 6171 7565  d *client_opaque
005af40: 5f70 7266 5f69 6e70 7574 3b0a 2073 697a  _prf_input;. siz
005af50: 655f 7420 636c 6965 6e74 5f6f 7061 7175  e_t client_opaqu
005af60: 655f 7072 665f 696e 7075 745f 6c65 6e3b  e_prf_input_len;
005af70: 0a20 766f 6964 202a 7365 7276 6572 5f6f  . void *server_o
005af80: 7061 7175 655f 7072 665f 696e 7075 743b  paque_prf_input;
005af90: 0a20 7369 7a65 5f74 2073 6572 7665 725f  . size_t server_
005afa0: 6f70 6171 7565 5f70 7266 5f69 6e70 7574  opaque_prf_input
005afb0: 5f6c 656e 3b0a 0a20 7374 7275 6374 207b  _len;.. struct {
005afc0: 0a0a 2020 756e 7369 676e 6564 2063 6861  ..  unsigned cha
005afd0: 7220 6365 7274 5f76 6572 6966 795f 6d64  r cert_verify_md
005afe0: 5b36 342a 325d 3b0a 0a0a 2020 756e 7369  [64*2];...  unsi
005aff0: 676e 6564 2063 6861 7220 6669 6e69 7368  gned char finish
005b000: 5f6d 645b 3634 2a32 5d3b 0a20 2069 6e74  _md[64*2];.  int
005b010: 2066 696e 6973 685f 6d64 5f6c 656e 3b0a   finish_md_len;.
005b020: 2020 756e 7369 676e 6564 2063 6861 7220    unsigned char 
005b030: 7065 6572 5f66 696e 6973 685f 6d64 5b36  peer_finish_md[6
005b040: 342a 325d 3b0a 2020 696e 7420 7065 6572  4*2];.  int peer
005b050: 5f66 696e 6973 685f 6d64 5f6c 656e 3b0a  _finish_md_len;.
005b060: 0a20 2075 6e73 6967 6e65 6420 6c6f 6e67  .  unsigned long
005b070: 206d 6573 7361 6765 5f73 697a 653b 0a20   message_size;. 
005b080: 2069 6e74 206d 6573 7361 6765 5f74 7970   int message_typ
005b090: 653b 0a0a 0a20 2063 6f6e 7374 2053 534c  e;...  const SSL
005b0a0: 5f43 4950 4845 5220 2a6e 6577 5f63 6970  _CIPHER *new_cip
005b0b0: 6865 723b 0a0a 2020 4448 202a 6468 3b0a  her;..  DH *dh;.
005b0c0: 0a0a 0a20 2045 435f 4b45 5920 2a65 6364  ...  EC_KEY *ecd
005b0d0: 683b 0a0a 0a0a 2020 696e 7420 6e65 7874  h;....  int next
005b0e0: 5f73 7461 7465 3b0a 0a20 2069 6e74 2072  _state;..  int r
005b0f0: 6575 7365 5f6d 6573 7361 6765 3b0a 0a0a  euse_message;...
005b100: 2020 696e 7420 6365 7274 5f72 6571 3b0a    int cert_req;.
005b110: 2020 696e 7420 6374 7970 655f 6e75 6d3b    int ctype_num;
005b120: 0a20 2063 6861 7220 6374 7970 655b 395d  .  char ctype[9]
005b130: 3b0a 2020 7374 7275 6374 2073 7461 636b  ;.  struct stack
005b140: 5f73 745f 5835 3039 5f4e 414d 4520 2a63  _st_X509_NAME *c
005b150: 615f 6e61 6d65 733b 0a0a 2020 696e 7420  a_names;..  int 
005b160: 7573 655f 7273 615f 746d 703b 0a0a 2020  use_rsa_tmp;..  
005b170: 696e 7420 6b65 795f 626c 6f63 6b5f 6c65  int key_block_le
005b180: 6e67 7468 3b0a 2020 756e 7369 676e 6564  ngth;.  unsigned
005b190: 2063 6861 7220 2a6b 6579 5f62 6c6f 636b   char *key_block
005b1a0: 3b0a 0a20 2063 6f6e 7374 2045 5650 5f43  ;..  const EVP_C
005b1b0: 4950 4845 5220 2a6e 6577 5f73 796d 5f65  IPHER *new_sym_e
005b1c0: 6e63 3b0a 2020 636f 6e73 7420 4556 505f  nc;.  const EVP_
005b1d0: 4d44 202a 6e65 775f 6861 7368 3b0a 2020  MD *new_hash;.  
005b1e0: 696e 7420 6e65 775f 6d61 635f 706b 6579  int new_mac_pkey
005b1f0: 5f74 7970 653b 0a20 2069 6e74 206e 6577  _type;.  int new
005b200: 5f6d 6163 5f73 6563 7265 745f 7369 7a65  _mac_secret_size
005b210: 3b0a 0a20 2063 6f6e 7374 2053 534c 5f43  ;..  const SSL_C
005b220: 4f4d 5020 2a6e 6577 5f63 6f6d 7072 6573  OMP *new_compres
005b230: 7369 6f6e 3b0a 0a0a 0a20 2069 6e74 2063  sion;....  int c
005b240: 6572 745f 7265 7175 6573 743b 0a20 207d  ert_request;.  }
005b250: 2074 6d70 3b0a 0a0a 2020 2020 2020 2020   tmp;...        
005b260: 756e 7369 676e 6564 2063 6861 7220 7072  unsigned char pr
005b270: 6576 696f 7573 5f63 6c69 656e 745f 6669  evious_client_fi
005b280: 6e69 7368 6564 5b36 345d 3b0a 2020 2020  nished[64];.    
005b290: 2020 2020 756e 7369 676e 6564 2063 6861      unsigned cha
005b2a0: 7220 7072 6576 696f 7573 5f63 6c69 656e  r previous_clien
005b2b0: 745f 6669 6e69 7368 6564 5f6c 656e 3b0a  t_finished_len;.
005b2c0: 2020 2020 2020 2020 756e 7369 676e 6564          unsigned
005b2d0: 2063 6861 7220 7072 6576 696f 7573 5f73   char previous_s
005b2e0: 6572 7665 725f 6669 6e69 7368 6564 5b36  erver_finished[6
005b2f0: 345d 3b0a 2020 2020 2020 2020 756e 7369  4];.        unsi
005b300: 676e 6564 2063 6861 7220 7072 6576 696f  gned char previo
005b310: 7573 5f73 6572 7665 725f 6669 6e69 7368  us_server_finish
005b320: 6564 5f6c 656e 3b0a 2020 2020 2020 2020  ed_len;.        
005b330: 696e 7420 7365 6e64 5f63 6f6e 6e65 6374  int send_connect
005b340: 696f 6e5f 6269 6e64 696e 673b 0a0a 0a0a  ion_binding;....
005b350: 2069 6e74 206e 6578 745f 7072 6f74 6f5f   int next_proto_
005b360: 6e65 675f 7365 656e 3b0a 0a20 7d20 5353  neg_seen;.. } SS
005b370: 4c33 5f53 5441 5445 3b0a 2320 3133 3232  L3_STATE;.# 1322
005b380: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
005b390: 7065 6e73 736c 2f73 736c 2e68 2220 3220  penssl/ssl.h" 2 
005b3a0: 3320 340a 2320 3120 222f 7573 722f 696e  3 4.# 1 "/usr/in
005b3b0: 636c 7564 652f 6f70 656e 7373 6c2f 746c  clude/openssl/tl
005b3c0: 7331 2e68 2220 3120 3320 340a 2320 3238  s1.h" 1 3 4.# 28
005b3d0: 3520 222f 7573 722f 696e 636c 7564 652f  5 "/usr/include/
005b3e0: 6f70 656e 7373 6c2f 746c 7331 2e68 2220  openssl/tls1.h" 
005b3f0: 3320 340a 636f 6e73 7420 6368 6172 202a  3 4.const char *
005b400: 5353 4c5f 6765 745f 7365 7276 6572 6e61  SSL_get_serverna
005b410: 6d65 2863 6f6e 7374 2053 534c 202a 732c  me(const SSL *s,
005b420: 2063 6f6e 7374 2069 6e74 2074 7970 6529   const int type)
005b430: 3b0a 696e 7420 5353 4c5f 6765 745f 7365  ;.int SSL_get_se
005b440: 7276 6572 6e61 6d65 5f74 7970 6528 636f  rvername_type(co
005b450: 6e73 7420 5353 4c20 2a73 293b 0a0a 0a0a  nst SSL *s);....
005b460: 0a0a 0a0a 696e 7420 5353 4c5f 6578 706f  ....int SSL_expo
005b470: 7274 5f6b 6579 696e 675f 6d61 7465 7269  rt_keying_materi
005b480: 616c 2853 534c 202a 732c 2075 6e73 6967  al(SSL *s, unsig
005b490: 6e65 6420 6368 6172 202a 6f75 742c 2073  ned char *out, s
005b4a0: 697a 655f 7420 6f6c 656e 2c0a 2063 6f6e  ize_t olen,. con
005b4b0: 7374 2063 6861 7220 2a6c 6162 656c 2c20  st char *label, 
005b4c0: 7369 7a65 5f74 206c 6c65 6e2c 2063 6f6e  size_t llen, con
005b4d0: 7374 2075 6e73 6967 6e65 6420 6368 6172  st unsigned char
005b4e0: 202a 702c 2073 697a 655f 7420 706c 656e   *p, size_t plen
005b4f0: 2c0a 2069 6e74 2075 7365 5f63 6f6e 7465  ,. int use_conte
005b500: 7874 293b 0a23 2037 3239 2022 2f75 7372  xt);.# 729 "/usr
005b510: 2f69 6e63 6c75 6465 2f6f 7065 6e73 736c  /include/openssl
005b520: 2f74 6c73 312e 6822 2033 2034 0a73 7472  /tls1.h" 3 4.str
005b530: 7563 7420 746c 735f 7365 7373 696f 6e5f  uct tls_session_
005b540: 7469 636b 6574 5f65 7874 5f73 740a 207b  ticket_ext_st. {
005b550: 0a20 756e 7369 676e 6564 2073 686f 7274  . unsigned short
005b560: 206c 656e 6774 683b 0a20 766f 6964 202a   length;. void *
005b570: 6461 7461 3b0a 207d 3b0a 2320 3133 3233  data;. };.# 1323
005b580: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
005b590: 7065 6e73 736c 2f73 736c 2e68 2220 3220  penssl/ssl.h" 2 
005b5a0: 3320 340a 2320 3120 222f 7573 722f 696e  3 4.# 1 "/usr/in
005b5b0: 636c 7564 652f 6f70 656e 7373 6c2f 6474  clude/openssl/dt
005b5c0: 6c73 312e 6822 2031 2033 2034 0a23 2036  ls1.h" 1 3 4.# 6
005b5d0: 3420 222f 7573 722f 696e 636c 7564 652f  4 "/usr/include/
005b5e0: 6f70 656e 7373 6c2f 6474 6c73 312e 6822  openssl/dtls1.h"
005b5f0: 2033 2034 0a23 2031 2022 2f75 7372 2f69   3 4.# 1 "/usr/i
005b600: 6e63 6c75 6465 2f6f 7065 6e73 736c 2f70  nclude/openssl/p
005b610: 7175 6575 652e 6822 2031 2033 2034 0a23  queue.h" 1 3 4.#
005b620: 2036 3720 222f 7573 722f 696e 636c 7564   67 "/usr/includ
005b630: 652f 6f70 656e 7373 6c2f 7071 7565 7565  e/openssl/pqueue
005b640: 2e68 2220 3320 340a 7479 7065 6465 6620  .h" 3 4.typedef 
005b650: 7374 7275 6374 205f 7071 7565 7565 202a  struct _pqueue *
005b660: 7071 7565 7565 3b0a 0a74 7970 6564 6566  pqueue;..typedef
005b670: 2073 7472 7563 7420 5f70 6974 656d 0a20   struct _pitem. 
005b680: 7b0a 2075 6e73 6967 6e65 6420 6368 6172  {. unsigned char
005b690: 2070 7269 6f72 6974 795b 385d 3b0a 2076   priority[8];. v
005b6a0: 6f69 6420 2a64 6174 613b 0a20 7374 7275  oid *data;. stru
005b6b0: 6374 205f 7069 7465 6d20 2a6e 6578 743b  ct _pitem *next;
005b6c0: 0a20 7d20 7069 7465 6d3b 0a0a 7479 7065  . } pitem;..type
005b6d0: 6465 6620 7374 7275 6374 205f 7069 7465  def struct _pite
005b6e0: 6d20 2a70 6974 6572 6174 6f72 3b0a 0a70  m *piterator;..p
005b6f0: 6974 656d 202a 7069 7465 6d5f 6e65 7728  item *pitem_new(
005b700: 756e 7369 676e 6564 2063 6861 7220 2a70  unsigned char *p
005b710: 7269 6f36 3462 652c 2076 6f69 6420 2a64  rio64be, void *d
005b720: 6174 6129 3b0a 766f 6964 2070 6974 656d  ata);.void pitem
005b730: 5f66 7265 6528 7069 7465 6d20 2a69 7465  _free(pitem *ite
005b740: 6d29 3b0a 0a70 7175 6575 6520 7071 7565  m);..pqueue pque
005b750: 7565 5f6e 6577 2876 6f69 6429 3b0a 766f  ue_new(void);.vo
005b760: 6964 2070 7175 6575 655f 6672 6565 2870  id pqueue_free(p
005b770: 7175 6575 6520 7071 293b 0a0a 7069 7465  queue pq);..pite
005b780: 6d20 2a70 7175 6575 655f 696e 7365 7274  m *pqueue_insert
005b790: 2870 7175 6575 6520 7071 2c20 7069 7465  (pqueue pq, pite
005b7a0: 6d20 2a69 7465 6d29 3b0a 7069 7465 6d20  m *item);.pitem 
005b7b0: 2a70 7175 6575 655f 7065 656b 2870 7175  *pqueue_peek(pqu
005b7c0: 6575 6520 7071 293b 0a70 6974 656d 202a  eue pq);.pitem *
005b7d0: 7071 7565 7565 5f70 6f70 2870 7175 6575  pqueue_pop(pqueu
005b7e0: 6520 7071 293b 0a70 6974 656d 202a 7071  e pq);.pitem *pq
005b7f0: 7565 7565 5f66 696e 6428 7071 7565 7565  ueue_find(pqueue
005b800: 2070 712c 2075 6e73 6967 6e65 6420 6368   pq, unsigned ch
005b810: 6172 202a 7072 696f 3634 6265 293b 0a70  ar *prio64be);.p
005b820: 6974 656d 202a 7071 7565 7565 5f69 7465  item *pqueue_ite
005b830: 7261 746f 7228 7071 7565 7565 2070 7129  rator(pqueue pq)
005b840: 3b0a 7069 7465 6d20 2a70 7175 6575 655f  ;.pitem *pqueue_
005b850: 6e65 7874 2870 6974 6572 6174 6f72 202a  next(piterator *
005b860: 6974 6572 293b 0a0a 766f 6964 2070 7175  iter);..void pqu
005b870: 6575 655f 7072 696e 7428 7071 7565 7565  eue_print(pqueue
005b880: 2070 7129 3b0a 696e 7420 7071 7565 7565   pq);.int pqueue
005b890: 5f73 697a 6528 7071 7565 7565 2070 7129  _size(pqueue pq)
005b8a0: 3b0a 2320 3635 2022 2f75 7372 2f69 6e63  ;.# 65 "/usr/inc
005b8b0: 6c75 6465 2f6f 7065 6e73 736c 2f64 746c  lude/openssl/dtl
005b8c0: 7331 2e68 2220 3220 3320 340a 2320 3738  s1.h" 2 3 4.# 78
005b8d0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
005b8e0: 7065 6e73 736c 2f64 746c 7331 2e68 2220  penssl/dtls1.h" 
005b8f0: 3320 340a 2320 3120 222f 7573 722f 696e  3 4.# 1 "/usr/in
005b900: 636c 7564 652f 7379 732f 7469 6d65 2e68  clude/sys/time.h
005b910: 2220 3120 3320 340a 2320 3238 2022 2f75  " 1 3 4.# 28 "/u
005b920: 7372 2f69 6e63 6c75 6465 2f73 7973 2f74  sr/include/sys/t
005b930: 696d 652e 6822 2033 2034 0a23 2031 2022  ime.h" 3 4.# 1 "
005b940: 2f75 7372 2f69 6e63 6c75 6465 2f62 6974  /usr/include/bit
005b950: 732f 7469 6d65 2e68 2220 3120 3320 340a  s/time.h" 1 3 4.
005b960: 2320 3239 2022 2f75 7372 2f69 6e63 6c75  # 29 "/usr/inclu
005b970: 6465 2f73 7973 2f74 696d 652e 6822 2032  de/sys/time.h" 2
005b980: 2033 2034 0a23 2033 3820 222f 7573 722f   3 4.# 38 "/usr/
005b990: 696e 636c 7564 652f 7379 732f 7469 6d65  include/sys/time
005b9a0: 2e68 2220 3320 340a 0a23 2035 3620 222f  .h" 3 4..# 56 "/
005b9b0: 7573 722f 696e 636c 7564 652f 7379 732f  usr/include/sys/
005b9c0: 7469 6d65 2e68 2220 3320 340a 7374 7275  time.h" 3 4.stru
005b9d0: 6374 2074 696d 657a 6f6e 650a 2020 7b0a  ct timezone.  {.
005b9e0: 2020 2020 696e 7420 747a 5f6d 696e 7574      int tz_minut
005b9f0: 6573 7765 7374 3b0a 2020 2020 696e 7420  eswest;.    int 
005ba00: 747a 5f64 7374 7469 6d65 3b0a 2020 7d3b  tz_dsttime;.  };
005ba10: 0a0a 7479 7065 6465 6620 7374 7275 6374  ..typedef struct
005ba20: 2074 696d 657a 6f6e 6520 2a5f 5f72 6573   timezone *__res
005ba30: 7472 6963 7420 5f5f 7469 6d65 7a6f 6e65  trict __timezone
005ba40: 5f70 7472 5f74 3b0a 2320 3732 2022 2f75  _ptr_t;.# 72 "/u
005ba50: 7372 2f69 6e63 6c75 6465 2f73 7973 2f74  sr/include/sys/t
005ba60: 696d 652e 6822 2033 2034 0a65 7874 6572  ime.h" 3 4.exter
005ba70: 6e20 696e 7420 6765 7474 696d 656f 6664  n int gettimeofd
005ba80: 6179 2028 7374 7275 6374 2074 696d 6576  ay (struct timev
005ba90: 616c 202a 5f5f 7265 7374 7269 6374 205f  al *__restrict _
005baa0: 5f74 762c 0a20 2020 205f 5f74 696d 657a  _tv,.    __timez
005bab0: 6f6e 655f 7074 725f 7420 5f5f 747a 2920  one_ptr_t __tz) 
005bac0: 5f5f 6174 7472 6962 7574 655f 5f20 2828  __attribute__ ((
005bad0: 5f5f 6e6f 7468 726f 775f 5f20 2c20 5f5f  __nothrow__ , __
005bae0: 6c65 6166 5f5f 2929 205f 5f61 7474 7269  leaf__)) __attri
005baf0: 6275 7465 5f5f 2028 285f 5f6e 6f6e 6e75  bute__ ((__nonnu
005bb00: 6c6c 5f5f 2028 3129 2929 3b0a 0a0a 0a0a  ll__ (1)));.....
005bb10: 6578 7465 726e 2069 6e74 2073 6574 7469  extern int setti
005bb20: 6d65 6f66 6461 7920 2863 6f6e 7374 2073  meofday (const s
005bb30: 7472 7563 7420 7469 6d65 7661 6c20 2a5f  truct timeval *_
005bb40: 5f74 762c 0a20 2020 2063 6f6e 7374 2073  _tv,.    const s
005bb50: 7472 7563 7420 7469 6d65 7a6f 6e65 202a  truct timezone *
005bb60: 5f5f 747a 290a 2020 2020 205f 5f61 7474  __tz).     __att
005bb70: 7269 6275 7465 5f5f 2028 285f 5f6e 6f74  ribute__ ((__not
005bb80: 6872 6f77 5f5f 202c 205f 5f6c 6561 665f  hrow__ , __leaf_
005bb90: 5f29 293b 0a0a 0a0a 0a0a 6578 7465 726e  _));......extern
005bba0: 2069 6e74 2061 646a 7469 6d65 2028 636f   int adjtime (co
005bbb0: 6e73 7420 7374 7275 6374 2074 696d 6576  nst struct timev
005bbc0: 616c 202a 5f5f 6465 6c74 612c 0a20 2020  al *__delta,.   
005bbd0: 2020 2073 7472 7563 7420 7469 6d65 7661     struct timeva
005bbe0: 6c20 2a5f 5f6f 6c64 6465 6c74 6129 205f  l *__olddelta) _
005bbf0: 5f61 7474 7269 6275 7465 5f5f 2028 285f  _attribute__ ((_
005bc00: 5f6e 6f74 6872 6f77 5f5f 202c 205f 5f6c  _nothrow__ , __l
005bc10: 6561 665f 5f29 293b 0a0a 0a0a 0a65 6e75  eaf__));.....enu
005bc20: 6d20 5f5f 6974 696d 6572 5f77 6869 6368  m __itimer_which
005bc30: 0a20 207b 0a0a 2020 2020 4954 494d 4552  .  {..    ITIMER
005bc40: 5f52 4541 4c20 3d20 302c 0a0a 0a20 2020  _REAL = 0,...   
005bc50: 2049 5449 4d45 525f 5649 5254 5541 4c20   ITIMER_VIRTUAL 
005bc60: 3d20 312c 0a0a 0a0a 2020 2020 4954 494d  = 1,....    ITIM
005bc70: 4552 5f50 524f 4620 3d20 320a 0a20 207d  ER_PROF = 2..  }
005bc80: 3b0a 0a0a 0a73 7472 7563 7420 6974 696d  ;....struct itim
005bc90: 6572 7661 6c0a 2020 7b0a 0a20 2020 2073  erval.  {..    s
005bca0: 7472 7563 7420 7469 6d65 7661 6c20 6974  truct timeval it
005bcb0: 5f69 6e74 6572 7661 6c3b 0a0a 2020 2020  _interval;..    
005bcc0: 7374 7275 6374 2074 696d 6576 616c 2069  struct timeval i
005bcd0: 745f 7661 6c75 653b 0a20 207d 3b0a 0a0a  t_value;.  };...
005bce0: 0a0a 0a0a 7479 7065 6465 6620 696e 7420  ....typedef int 
005bcf0: 5f5f 6974 696d 6572 5f77 6869 6368 5f74  __itimer_which_t
005bd00: 3b0a 0a0a 0a0a 6578 7465 726e 2069 6e74  ;.....extern int
005bd10: 2067 6574 6974 696d 6572 2028 5f5f 6974   getitimer (__it
005bd20: 696d 6572 5f77 6869 6368 5f74 205f 5f77  imer_which_t __w
005bd30: 6869 6368 2c0a 2020 2020 2020 2020 7374  hich,.        st
005bd40: 7275 6374 2069 7469 6d65 7276 616c 202a  ruct itimerval *
005bd50: 5f5f 7661 6c75 6529 205f 5f61 7474 7269  __value) __attri
005bd60: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
005bd70: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
005bd80: 293b 0a0a 0a0a 0a65 7874 6572 6e20 696e  );.....extern in
005bd90: 7420 7365 7469 7469 6d65 7220 285f 5f69  t setitimer (__i
005bda0: 7469 6d65 725f 7768 6963 685f 7420 5f5f  timer_which_t __
005bdb0: 7768 6963 682c 0a20 2020 2020 2020 2063  which,.        c
005bdc0: 6f6e 7374 2073 7472 7563 7420 6974 696d  onst struct itim
005bdd0: 6572 7661 6c20 2a5f 5f72 6573 7472 6963  erval *__restric
005bde0: 7420 5f5f 6e65 772c 0a20 2020 2020 2020  t __new,.       
005bdf0: 2073 7472 7563 7420 6974 696d 6572 7661   struct itimerva
005be00: 6c20 2a5f 5f72 6573 7472 6963 7420 5f5f  l *__restrict __
005be10: 6f6c 6429 205f 5f61 7474 7269 6275 7465  old) __attribute
005be20: 5f5f 2028 285f 5f6e 6f74 6872 6f77 5f5f  __ ((__nothrow__
005be30: 202c 205f 5f6c 6561 665f 5f29 293b 0a0a   , __leaf__));..
005be40: 0a0a 0a65 7874 6572 6e20 696e 7420 7574  ...extern int ut
005be50: 696d 6573 2028 636f 6e73 7420 6368 6172  imes (const char
005be60: 202a 5f5f 6669 6c65 2c20 636f 6e73 7420   *__file, const 
005be70: 7374 7275 6374 2074 696d 6576 616c 205f  struct timeval _
005be80: 5f74 7670 5b32 5d29 0a20 2020 2020 5f5f  _tvp[2]).     __
005be90: 6174 7472 6962 7574 655f 5f20 2828 5f5f  attribute__ ((__
005bea0: 6e6f 7468 726f 775f 5f20 2c20 5f5f 6c65  nothrow__ , __le
005beb0: 6166 5f5f 2929 205f 5f61 7474 7269 6275  af__)) __attribu
005bec0: 7465 5f5f 2028 285f 5f6e 6f6e 6e75 6c6c  te__ ((__nonnull
005bed0: 5f5f 2028 3129 2929 3b0a 0a0a 0a65 7874  __ (1)));....ext
005bee0: 6572 6e20 696e 7420 6c75 7469 6d65 7320  ern int lutimes 
005bef0: 2863 6f6e 7374 2063 6861 7220 2a5f 5f66  (const char *__f
005bf00: 696c 652c 2063 6f6e 7374 2073 7472 7563  ile, const struc
005bf10: 7420 7469 6d65 7661 6c20 5f5f 7476 705b  t timeval __tvp[
005bf20: 325d 290a 2020 2020 205f 5f61 7474 7269  2]).     __attri
005bf30: 6275 7465 5f5f 2028 285f 5f6e 6f74 6872  bute__ ((__nothr
005bf40: 6f77 5f5f 202c 205f 5f6c 6561 665f 5f29  ow__ , __leaf__)
005bf50: 2920 5f5f 6174 7472 6962 7574 655f 5f20  ) __attribute__ 
005bf60: 2828 5f5f 6e6f 6e6e 756c 6c5f 5f20 2831  ((__nonnull__ (1
005bf70: 2929 293b 0a0a 0a65 7874 6572 6e20 696e  )));...extern in
005bf80: 7420 6675 7469 6d65 7320 2869 6e74 205f  t futimes (int _
005bf90: 5f66 642c 2063 6f6e 7374 2073 7472 7563  _fd, const struc
005bfa0: 7420 7469 6d65 7661 6c20 5f5f 7476 705b  t timeval __tvp[
005bfb0: 325d 2920 5f5f 6174 7472 6962 7574 655f  2]) __attribute_
005bfc0: 5f20 2828 5f5f 6e6f 7468 726f 775f 5f20  _ ((__nothrow__ 
005bfd0: 2c20 5f5f 6c65 6166 5f5f 2929 3b0a 2320  , __leaf__));.# 
005bfe0: 3139 3020 222f 7573 722f 696e 636c 7564  190 "/usr/includ
005bff0: 652f 7379 732f 7469 6d65 2e68 2220 3320  e/sys/time.h" 3 
005c000: 340a 0a23 2037 3920 222f 7573 722f 696e  4..# 79 "/usr/in
005c010: 636c 7564 652f 6f70 656e 7373 6c2f 6474  clude/openssl/dt
005c020: 6c73 312e 6822 2032 2033 2034 0a23 2031  ls1.h" 2 3 4.# 1
005c030: 3230 2022 2f75 7372 2f69 6e63 6c75 6465  20 "/usr/include
005c040: 2f6f 7065 6e73 736c 2f64 746c 7331 2e68  /openssl/dtls1.h
005c050: 2220 3320 340a 7479 7065 6465 6620 7374  " 3 4.typedef st
005c060: 7275 6374 2064 746c 7331 5f62 6974 6d61  ruct dtls1_bitma
005c070: 705f 7374 0a20 7b0a 2075 6e73 6967 6e65  p_st. {. unsigne
005c080: 6420 6c6f 6e67 206d 6170 3b0a 0a20 756e  d long map;.. un
005c090: 7369 676e 6564 2063 6861 7220 6d61 785f  signed char max_
005c0a0: 7365 715f 6e75 6d5b 385d 3b0a 0a0a 207d  seq_num[8];... }
005c0b0: 2044 544c 5331 5f42 4954 4d41 503b 0a0a   DTLS1_BITMAP;..
005c0c0: 7374 7275 6374 2064 746c 7331 5f72 6574  struct dtls1_ret
005c0d0: 7261 6e73 6d69 745f 7374 6174 650a 207b  ransmit_state. {
005c0e0: 0a20 4556 505f 4349 5048 4552 5f43 5458  . EVP_CIPHER_CTX
005c0f0: 202a 656e 635f 7772 6974 655f 6374 783b   *enc_write_ctx;
005c100: 0a20 4556 505f 4d44 5f43 5458 202a 7772  . EVP_MD_CTX *wr
005c110: 6974 655f 6861 7368 3b0a 0a20 434f 4d50  ite_hash;.. COMP
005c120: 5f43 5458 202a 636f 6d70 7265 7373 3b0a  _CTX *compress;.
005c130: 0a0a 0a20 5353 4c5f 5345 5353 494f 4e20  ... SSL_SESSION 
005c140: 2a73 6573 7369 6f6e 3b0a 2075 6e73 6967  *session;. unsig
005c150: 6e65 6420 7368 6f72 7420 6570 6f63 683b  ned short epoch;
005c160: 0a20 7d3b 0a0a 7374 7275 6374 2068 6d5f  . };..struct hm_
005c170: 6865 6164 6572 5f73 740a 207b 0a20 756e  header_st. {. un
005c180: 7369 676e 6564 2063 6861 7220 7479 7065  signed char type
005c190: 3b0a 2075 6e73 6967 6e65 6420 6c6f 6e67  ;. unsigned long
005c1a0: 206d 7367 5f6c 656e 3b0a 2075 6e73 6967   msg_len;. unsig
005c1b0: 6e65 6420 7368 6f72 7420 7365 713b 0a20  ned short seq;. 
005c1c0: 756e 7369 676e 6564 206c 6f6e 6720 6672  unsigned long fr
005c1d0: 6167 5f6f 6666 3b0a 2075 6e73 6967 6e65  ag_off;. unsigne
005c1e0: 6420 6c6f 6e67 2066 7261 675f 6c65 6e3b  d long frag_len;
005c1f0: 0a20 756e 7369 676e 6564 2069 6e74 2069  . unsigned int i
005c200: 735f 6363 733b 0a20 7374 7275 6374 2064  s_ccs;. struct d
005c210: 746c 7331 5f72 6574 7261 6e73 6d69 745f  tls1_retransmit_
005c220: 7374 6174 6520 7361 7665 645f 7265 7472  state saved_retr
005c230: 616e 736d 6974 5f73 7461 7465 3b0a 207d  ansmit_state;. }
005c240: 3b0a 0a73 7472 7563 7420 6363 735f 6865  ;..struct ccs_he
005c250: 6164 6572 5f73 740a 207b 0a20 756e 7369  ader_st. {. unsi
005c260: 676e 6564 2063 6861 7220 7479 7065 3b0a  gned char type;.
005c270: 2075 6e73 6967 6e65 6420 7368 6f72 7420   unsigned short 
005c280: 7365 713b 0a20 7d3b 0a0a 7374 7275 6374  seq;. };..struct
005c290: 2064 746c 7331 5f74 696d 656f 7574 5f73   dtls1_timeout_s
005c2a0: 740a 207b 0a0a 2075 6e73 6967 6e65 6420  t. {.. unsigned 
005c2b0: 696e 7420 7265 6164 5f74 696d 656f 7574  int read_timeout
005c2c0: 733b 0a0a 0a20 756e 7369 676e 6564 2069  s;... unsigned i
005c2d0: 6e74 2077 7269 7465 5f74 696d 656f 7574  nt write_timeout
005c2e0: 733b 0a0a 0a20 756e 7369 676e 6564 2069  s;... unsigned i
005c2f0: 6e74 206e 756d 5f61 6c65 7274 733b 0a20  nt num_alerts;. 
005c300: 7d3b 0a0a 7479 7065 6465 6620 7374 7275  };..typedef stru
005c310: 6374 2072 6563 6f72 645f 7071 7565 7565  ct record_pqueue
005c320: 5f73 740a 207b 0a20 756e 7369 676e 6564  _st. {. unsigned
005c330: 2073 686f 7274 2065 706f 6368 3b0a 2070   short epoch;. p
005c340: 7175 6575 6520 713b 0a20 7d20 7265 636f  queue q;. } reco
005c350: 7264 5f70 7175 6575 653b 0a0a 7479 7065  rd_pqueue;..type
005c360: 6465 6620 7374 7275 6374 2068 6d5f 6672  def struct hm_fr
005c370: 6167 6d65 6e74 5f73 740a 207b 0a20 7374  agment_st. {. st
005c380: 7275 6374 2068 6d5f 6865 6164 6572 5f73  ruct hm_header_s
005c390: 7420 6d73 675f 6865 6164 6572 3b0a 2075  t msg_header;. u
005c3a0: 6e73 6967 6e65 6420 6368 6172 202a 6672  nsigned char *fr
005c3b0: 6167 6d65 6e74 3b0a 2075 6e73 6967 6e65  agment;. unsigne
005c3c0: 6420 6368 6172 202a 7265 6173 7365 6d62  d char *reassemb
005c3d0: 6c79 3b0a 207d 2068 6d5f 6672 6167 6d65  ly;. } hm_fragme
005c3e0: 6e74 3b0a 0a74 7970 6564 6566 2073 7472  nt;..typedef str
005c3f0: 7563 7420 6474 6c73 315f 7374 6174 655f  uct dtls1_state_
005c400: 7374 0a20 7b0a 2075 6e73 6967 6e65 6420  st. {. unsigned 
005c410: 696e 7420 7365 6e64 5f63 6f6f 6b69 653b  int send_cookie;
005c420: 0a20 756e 7369 676e 6564 2063 6861 7220  . unsigned char 
005c430: 636f 6f6b 6965 5b32 3536 5d3b 0a20 756e  cookie[256];. un
005c440: 7369 676e 6564 2063 6861 7220 7263 7664  signed char rcvd
005c450: 5f63 6f6f 6b69 655b 3235 365d 3b0a 2075  _cookie[256];. u
005c460: 6e73 6967 6e65 6420 696e 7420 636f 6f6b  nsigned int cook
005c470: 6965 5f6c 656e 3b0a 0a0a 0a0a 0a0a 2075  ie_len;....... u
005c480: 6e73 6967 6e65 6420 7368 6f72 7420 725f  nsigned short r_
005c490: 6570 6f63 683b 0a20 756e 7369 676e 6564  epoch;. unsigned
005c4a0: 2073 686f 7274 2077 5f65 706f 6368 3b0a   short w_epoch;.
005c4b0: 0a0a 2044 544c 5331 5f42 4954 4d41 5020  .. DTLS1_BITMAP 
005c4c0: 6269 746d 6170 3b0a 0a0a 2044 544c 5331  bitmap;... DTLS1
005c4d0: 5f42 4954 4d41 5020 6e65 7874 5f62 6974  _BITMAP next_bit
005c4e0: 6d61 703b 0a0a 0a20 756e 7369 676e 6564  map;... unsigned
005c4f0: 2073 686f 7274 2068 616e 6473 6861 6b65   short handshake
005c500: 5f77 7269 7465 5f73 6571 3b0a 2075 6e73  _write_seq;. uns
005c510: 6967 6e65 6420 7368 6f72 7420 6e65 7874  igned short next
005c520: 5f68 616e 6473 6861 6b65 5f77 7269 7465  _handshake_write
005c530: 5f73 6571 3b0a 0a20 756e 7369 676e 6564  _seq;.. unsigned
005c540: 2073 686f 7274 2068 616e 6473 6861 6b65   short handshake
005c550: 5f72 6561 645f 7365 713b 0a0a 0a20 756e  _read_seq;... un
005c560: 7369 676e 6564 2063 6861 7220 6c61 7374  signed char last
005c570: 5f77 7269 7465 5f73 6571 7565 6e63 655b  _write_sequence[
005c580: 385d 3b0a 0a0a 2072 6563 6f72 645f 7071  8];... record_pq
005c590: 7565 7565 2075 6e70 726f 6365 7373 6564  ueue unprocessed
005c5a0: 5f72 6364 733b 0a20 7265 636f 7264 5f70  _rcds;. record_p
005c5b0: 7175 6575 6520 7072 6f63 6573 7365 645f  queue processed_
005c5c0: 7263 6473 3b0a 0a0a 2070 7175 6575 6520  rcds;... pqueue 
005c5d0: 6275 6666 6572 6564 5f6d 6573 7361 6765  buffered_message
005c5e0: 733b 0a0a 0a20 7071 7565 7565 2073 656e  s;... pqueue sen
005c5f0: 745f 6d65 7373 6167 6573 3b0a 0a0a 0a0a  t_messages;.....
005c600: 0a0a 2072 6563 6f72 645f 7071 7565 7565  .. record_pqueue
005c610: 2062 7566 6665 7265 645f 6170 705f 6461   buffered_app_da
005c620: 7461 3b0a 0a20 756e 7369 676e 6564 2069  ta;.. unsigned i
005c630: 6e74 206d 7475 3b0a 0a20 7374 7275 6374  nt mtu;.. struct
005c640: 2068 6d5f 6865 6164 6572 5f73 7420 775f   hm_header_st w_
005c650: 6d73 675f 6864 723b 0a20 7374 7275 6374  msg_hdr;. struct
005c660: 2068 6d5f 6865 6164 6572 5f73 7420 725f   hm_header_st r_
005c670: 6d73 675f 6864 723b 0a0a 2073 7472 7563  msg_hdr;.. struc
005c680: 7420 6474 6c73 315f 7469 6d65 6f75 745f  t dtls1_timeout_
005c690: 7374 2074 696d 656f 7574 3b0a 0a0a 2073  st timeout;... s
005c6a0: 7472 7563 7420 7469 6d65 7661 6c20 6e65  truct timeval ne
005c6b0: 7874 5f74 696d 656f 7574 3b0a 0a0a 2075  xt_timeout;... u
005c6c0: 6e73 6967 6e65 6420 7368 6f72 7420 7469  nsigned short ti
005c6d0: 6d65 6f75 745f 6475 7261 7469 6f6e 3b0a  meout_duration;.
005c6e0: 0a0a 0a20 756e 7369 676e 6564 2063 6861  ... unsigned cha
005c6f0: 7220 616c 6572 745f 6672 6167 6d65 6e74  r alert_fragment
005c700: 5b32 5d3b 0a20 756e 7369 676e 6564 2069  [2];. unsigned i
005c710: 6e74 2061 6c65 7274 5f66 7261 676d 656e  nt alert_fragmen
005c720: 745f 6c65 6e3b 0a20 756e 7369 676e 6564  t_len;. unsigned
005c730: 2063 6861 7220 6861 6e64 7368 616b 655f   char handshake_
005c740: 6672 6167 6d65 6e74 5b31 325d 3b0a 2075  fragment[12];. u
005c750: 6e73 6967 6e65 6420 696e 7420 6861 6e64  nsigned int hand
005c760: 7368 616b 655f 6672 6167 6d65 6e74 5f6c  shake_fragment_l
005c770: 656e 3b0a 0a20 756e 7369 676e 6564 2069  en;.. unsigned i
005c780: 6e74 2072 6574 7261 6e73 6d69 7474 696e  nt retransmittin
005c790: 673b 0a20 756e 7369 676e 6564 2069 6e74  g;. unsigned int
005c7a0: 2063 6861 6e67 655f 6369 7068 6572 5f73   change_cipher_s
005c7b0: 7065 635f 6f6b 3b0a 0a0a 2075 6e73 6967  pec_ok;... unsig
005c7c0: 6e65 6420 696e 7420 6c69 7374 656e 3b0a  ned int listen;.
005c7d0: 2320 3236 3420 222f 7573 722f 696e 636c  # 264 "/usr/incl
005c7e0: 7564 652f 6f70 656e 7373 6c2f 6474 6c73  ude/openssl/dtls
005c7f0: 312e 6822 2033 2034 0a20 7d20 4454 4c53  1.h" 3 4. } DTLS
005c800: 315f 5354 4154 453b 0a0a 7479 7065 6465  1_STATE;..typede
005c810: 6620 7374 7275 6374 2064 746c 7331 5f72  f struct dtls1_r
005c820: 6563 6f72 645f 6461 7461 5f73 740a 207b  ecord_data_st. {
005c830: 0a20 756e 7369 676e 6564 2063 6861 7220  . unsigned char 
005c840: 2a70 6163 6b65 743b 0a20 756e 7369 676e  *packet;. unsign
005c850: 6564 2069 6e74 2070 6163 6b65 745f 6c65  ed int packet_le
005c860: 6e67 7468 3b0a 2053 534c 335f 4255 4646  ngth;. SSL3_BUFF
005c870: 4552 2072 6275 663b 0a20 5353 4c33 5f52  ER rbuf;. SSL3_R
005c880: 4543 4f52 4420 7272 6563 3b0a 0a0a 0a20  ECORD rrec;.... 
005c890: 7d20 4454 4c53 315f 5245 434f 5244 5f44  } DTLS1_RECORD_D
005c8a0: 4154 413b 0a23 2031 3332 3420 222f 7573  ATA;.# 1324 "/us
005c8b0: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
005c8c0: 6c2f 7373 6c2e 6822 2032 2033 2034 0a23  l/ssl.h" 2 3 4.#
005c8d0: 2031 2022 2f75 7372 2f69 6e63 6c75 6465   1 "/usr/include
005c8e0: 2f6f 7065 6e73 736c 2f73 736c 3233 2e68  /openssl/ssl23.h
005c8f0: 2220 3120 3320 340a 2320 3133 3235 2022  " 1 3 4.# 1325 "
005c900: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
005c910: 6e73 736c 2f73 736c 2e68 2220 3220 3320  nssl/ssl.h" 2 3 
005c920: 340a 2320 3120 222f 7573 722f 696e 636c  4.# 1 "/usr/incl
005c930: 7564 652f 6f70 656e 7373 6c2f 7372 7470  ude/openssl/srtp
005c940: 2e68 2220 3120 3320 340a 2320 3133 3320  .h" 1 3 4.# 133 
005c950: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
005c960: 656e 7373 6c2f 7372 7470 2e68 2220 3320  enssl/srtp.h" 3 
005c970: 340a 696e 7420 5353 4c5f 4354 585f 7365  4.int SSL_CTX_se
005c980: 745f 746c 7365 7874 5f75 7365 5f73 7274  t_tlsext_use_srt
005c990: 7028 5353 4c5f 4354 5820 2a63 7478 2c20  p(SSL_CTX *ctx, 
005c9a0: 636f 6e73 7420 6368 6172 202a 7072 6f66  const char *prof
005c9b0: 696c 6573 293b 0a69 6e74 2053 534c 5f73  iles);.int SSL_s
005c9c0: 6574 5f74 6c73 6578 745f 7573 655f 7372  et_tlsext_use_sr
005c9d0: 7470 2853 534c 202a 6374 782c 2063 6f6e  tp(SSL *ctx, con
005c9e0: 7374 2063 6861 7220 2a70 726f 6669 6c65  st char *profile
005c9f0: 7329 3b0a 5352 5450 5f50 524f 5445 4354  s);.SRTP_PROTECT
005ca00: 494f 4e5f 5052 4f46 494c 4520 2a53 534c  ION_PROFILE *SSL
005ca10: 5f67 6574 5f73 656c 6563 7465 645f 7372  _get_selected_sr
005ca20: 7470 5f70 726f 6669 6c65 2853 534c 202a  tp_profile(SSL *
005ca30: 7329 3b0a 0a73 7472 7563 7420 7374 6163  s);..struct stac
005ca40: 6b5f 7374 5f53 5254 505f 5052 4f54 4543  k_st_SRTP_PROTEC
005ca50: 5449 4f4e 5f50 524f 4649 4c45 202a 5353  TION_PROFILE *SS
005ca60: 4c5f 6765 745f 7372 7470 5f70 726f 6669  L_get_srtp_profi
005ca70: 6c65 7328 5353 4c20 2a73 736c 293b 0a53  les(SSL *ssl);.S
005ca80: 5254 505f 5052 4f54 4543 5449 4f4e 5f50  RTP_PROTECTION_P
005ca90: 524f 4649 4c45 202a 5353 4c5f 6765 745f  ROFILE *SSL_get_
005caa0: 7365 6c65 6374 6564 5f73 7274 705f 7072  selected_srtp_pr
005cab0: 6f66 696c 6528 5353 4c20 2a73 293b 0a23  ofile(SSL *s);.#
005cac0: 2031 3332 3620 222f 7573 722f 696e 636c   1326 "/usr/incl
005cad0: 7564 652f 6f70 656e 7373 6c2f 7373 6c2e  ude/openssl/ssl.
005cae0: 6822 2032 2033 2034 0a23 2031 3338 3620  h" 2 3 4.# 1386 
005caf0: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
005cb00: 656e 7373 6c2f 7373 6c2e 6822 2033 2034  enssl/ssl.h" 3 4
005cb10: 0a73 697a 655f 7420 5353 4c5f 6765 745f  .size_t SSL_get_
005cb20: 6669 6e69 7368 6564 2863 6f6e 7374 2053  finished(const S
005cb30: 534c 202a 732c 2076 6f69 6420 2a62 7566  SL *s, void *buf
005cb40: 2c20 7369 7a65 5f74 2063 6f75 6e74 293b  , size_t count);
005cb50: 0a73 697a 655f 7420 5353 4c5f 6765 745f  .size_t SSL_get_
005cb60: 7065 6572 5f66 696e 6973 6865 6428 636f  peer_finished(co
005cb70: 6e73 7420 5353 4c20 2a73 2c20 766f 6964  nst SSL *s, void
005cb80: 202a 6275 662c 2073 697a 655f 7420 636f   *buf, size_t co
005cb90: 756e 7429 3b0a 2320 3134 3234 2022 2f75  unt);.# 1424 "/u
005cba0: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
005cbb0: 736c 2f73 736c 2e68 2220 3320 340a 5353  sl/ssl.h" 3 4.SS
005cbc0: 4c5f 5345 5353 494f 4e20 2a50 454d 5f72  L_SESSION *PEM_r
005cbd0: 6561 645f 6269 6f5f 5353 4c5f 5345 5353  ead_bio_SSL_SESS
005cbe0: 494f 4e28 4249 4f20 2a62 702c 2053 534c  ION(BIO *bp, SSL
005cbf0: 5f53 4553 5349 4f4e 202a 2a78 2c20 7065  _SESSION **x, pe
005cc00: 6d5f 7061 7373 776f 7264 5f63 6220 2a63  m_password_cb *c
005cc10: 622c 2076 6f69 6420 2a75 293b 2053 534c  b, void *u); SSL
005cc20: 5f53 4553 5349 4f4e 202a 5045 4d5f 7265  _SESSION *PEM_re
005cc30: 6164 5f53 534c 5f53 4553 5349 4f4e 2846  ad_SSL_SESSION(F
005cc40: 494c 4520 2a66 702c 2053 534c 5f53 4553  ILE *fp, SSL_SES
005cc50: 5349 4f4e 202a 2a78 2c20 7065 6d5f 7061  SION **x, pem_pa
005cc60: 7373 776f 7264 5f63 6220 2a63 622c 2076  ssword_cb *cb, v
005cc70: 6f69 6420 2a75 293b 2069 6e74 2050 454d  oid *u); int PEM
005cc80: 5f77 7269 7465 5f62 696f 5f53 534c 5f53  _write_bio_SSL_S
005cc90: 4553 5349 4f4e 2842 494f 202a 6270 2c20  ESSION(BIO *bp, 
005cca0: 5353 4c5f 5345 5353 494f 4e20 2a78 293b  SSL_SESSION *x);
005ccb0: 2069 6e74 2050 454d 5f77 7269 7465 5f53   int PEM_write_S
005ccc0: 534c 5f53 4553 5349 4f4e 2846 494c 4520  SL_SESSION(FILE 
005ccd0: 2a66 702c 2053 534c 5f53 4553 5349 4f4e  *fp, SSL_SESSION
005cce0: 202a 7829 3b0a 2320 3136 3235 2022 2f75   *x);.# 1625 "/u
005ccf0: 7372 2f69 6e63 6c75 6465 2f6f 7065 6e73  sr/include/opens
005cd00: 736c 2f73 736c 2e68 2220 3320 340a 4249  sl/ssl.h" 3 4.BI
005cd10: 4f5f 4d45 5448 4f44 202a 4249 4f5f 665f  O_METHOD *BIO_f_
005cd20: 7373 6c28 766f 6964 293b 0a42 494f 202a  ssl(void);.BIO *
005cd30: 4249 4f5f 6e65 775f 7373 6c28 5353 4c5f  BIO_new_ssl(SSL_
005cd40: 4354 5820 2a63 7478 2c69 6e74 2063 6c69  CTX *ctx,int cli
005cd50: 656e 7429 3b0a 4249 4f20 2a42 494f 5f6e  ent);.BIO *BIO_n
005cd60: 6577 5f73 736c 5f63 6f6e 6e65 6374 2853  ew_ssl_connect(S
005cd70: 534c 5f43 5458 202a 6374 7829 3b0a 4249  SL_CTX *ctx);.BI
005cd80: 4f20 2a42 494f 5f6e 6577 5f62 7566 6665  O *BIO_new_buffe
005cd90: 725f 7373 6c5f 636f 6e6e 6563 7428 5353  r_ssl_connect(SS
005cda0: 4c5f 4354 5820 2a63 7478 293b 0a69 6e74  L_CTX *ctx);.int
005cdb0: 2042 494f 5f73 736c 5f63 6f70 795f 7365   BIO_ssl_copy_se
005cdc0: 7373 696f 6e5f 6964 2842 494f 202a 746f  ssion_id(BIO *to
005cdd0: 2c42 494f 202a 6672 6f6d 293b 0a76 6f69  ,BIO *from);.voi
005cde0: 6420 4249 4f5f 7373 6c5f 7368 7574 646f  d BIO_ssl_shutdo
005cdf0: 776e 2842 494f 202a 7373 6c5f 6269 6f29  wn(BIO *ssl_bio)
005ce00: 3b0a 0a0a 0a69 6e74 2053 534c 5f43 5458  ;....int SSL_CTX
005ce10: 5f73 6574 5f63 6970 6865 725f 6c69 7374  _set_cipher_list
005ce20: 2853 534c 5f43 5458 202a 2c63 6f6e 7374  (SSL_CTX *,const
005ce30: 2063 6861 7220 2a73 7472 293b 0a53 534c   char *str);.SSL
005ce40: 5f43 5458 202a 5353 4c5f 4354 585f 6e65  _CTX *SSL_CTX_ne
005ce50: 7728 636f 6e73 7420 5353 4c5f 4d45 5448  w(const SSL_METH
005ce60: 4f44 202a 6d65 7468 293b 0a76 6f69 6420  OD *meth);.void 
005ce70: 5353 4c5f 4354 585f 6672 6565 2853 534c  SSL_CTX_free(SSL
005ce80: 5f43 5458 202a 293b 0a6c 6f6e 6720 5353  _CTX *);.long SS
005ce90: 4c5f 4354 585f 7365 745f 7469 6d65 6f75  L_CTX_set_timeou
005cea0: 7428 5353 4c5f 4354 5820 2a63 7478 2c6c  t(SSL_CTX *ctx,l
005ceb0: 6f6e 6720 7429 3b0a 6c6f 6e67 2053 534c  ong t);.long SSL
005cec0: 5f43 5458 5f67 6574 5f74 696d 656f 7574  _CTX_get_timeout
005ced0: 2863 6f6e 7374 2053 534c 5f43 5458 202a  (const SSL_CTX *
005cee0: 6374 7829 3b0a 5835 3039 5f53 544f 5245  ctx);.X509_STORE
005cef0: 202a 5353 4c5f 4354 585f 6765 745f 6365   *SSL_CTX_get_ce
005cf00: 7274 5f73 746f 7265 2863 6f6e 7374 2053  rt_store(const S
005cf10: 534c 5f43 5458 202a 293b 0a76 6f69 6420  SL_CTX *);.void 
005cf20: 5353 4c5f 4354 585f 7365 745f 6365 7274  SSL_CTX_set_cert
005cf30: 5f73 746f 7265 2853 534c 5f43 5458 202a  _store(SSL_CTX *
005cf40: 2c58 3530 395f 5354 4f52 4520 2a29 3b0a  ,X509_STORE *);.
005cf50: 696e 7420 5353 4c5f 7761 6e74 2863 6f6e  int SSL_want(con
005cf60: 7374 2053 534c 202a 7329 3b0a 696e 7420  st SSL *s);.int 
005cf70: 5353 4c5f 636c 6561 7228 5353 4c20 2a73  SSL_clear(SSL *s
005cf80: 293b 0a0a 766f 6964 2053 534c 5f43 5458  );..void SSL_CTX
005cf90: 5f66 6c75 7368 5f73 6573 7369 6f6e 7328  _flush_sessions(
005cfa0: 5353 4c5f 4354 5820 2a63 7478 2c6c 6f6e  SSL_CTX *ctx,lon
005cfb0: 6720 746d 293b 0a0a 636f 6e73 7420 5353  g tm);..const SS
005cfc0: 4c5f 4349 5048 4552 202a 5353 4c5f 6765  L_CIPHER *SSL_ge
005cfd0: 745f 6375 7272 656e 745f 6369 7068 6572  t_current_cipher
005cfe0: 2863 6f6e 7374 2053 534c 202a 7329 3b0a  (const SSL *s);.
005cff0: 696e 7420 5353 4c5f 4349 5048 4552 5f67  int SSL_CIPHER_g
005d000: 6574 5f62 6974 7328 636f 6e73 7420 5353  et_bits(const SS
005d010: 4c5f 4349 5048 4552 202a 632c 696e 7420  L_CIPHER *c,int 
005d020: 2a61 6c67 5f62 6974 7329 3b0a 6368 6172  *alg_bits);.char
005d030: 202a 2053 534c 5f43 4950 4845 525f 6765   * SSL_CIPHER_ge
005d040: 745f 7665 7273 696f 6e28 636f 6e73 7420  t_version(const 
005d050: 5353 4c5f 4349 5048 4552 202a 6329 3b0a  SSL_CIPHER *c);.
005d060: 636f 6e73 7420 6368 6172 202a 2053 534c  const char * SSL
005d070: 5f43 4950 4845 525f 6765 745f 6e61 6d65  _CIPHER_get_name
005d080: 2863 6f6e 7374 2053 534c 5f43 4950 4845  (const SSL_CIPHE
005d090: 5220 2a63 293b 0a75 6e73 6967 6e65 6420  R *c);.unsigned 
005d0a0: 6c6f 6e67 2053 534c 5f43 4950 4845 525f  long SSL_CIPHER_
005d0b0: 6765 745f 6964 2863 6f6e 7374 2053 534c  get_id(const SSL
005d0c0: 5f43 4950 4845 5220 2a63 293b 0a0a 696e  _CIPHER *c);..in
005d0d0: 7420 5353 4c5f 6765 745f 6664 2863 6f6e  t SSL_get_fd(con
005d0e0: 7374 2053 534c 202a 7329 3b0a 696e 7420  st SSL *s);.int 
005d0f0: 5353 4c5f 6765 745f 7266 6428 636f 6e73  SSL_get_rfd(cons
005d100: 7420 5353 4c20 2a73 293b 0a69 6e74 2053  t SSL *s);.int S
005d110: 534c 5f67 6574 5f77 6664 2863 6f6e 7374  SL_get_wfd(const
005d120: 2053 534c 202a 7329 3b0a 636f 6e73 7420   SSL *s);.const 
005d130: 6368 6172 202a 2053 534c 5f67 6574 5f63  char * SSL_get_c
005d140: 6970 6865 725f 6c69 7374 2863 6f6e 7374  ipher_list(const
005d150: 2053 534c 202a 732c 696e 7420 6e29 3b0a   SSL *s,int n);.
005d160: 6368 6172 202a 2053 534c 5f67 6574 5f73  char * SSL_get_s
005d170: 6861 7265 645f 6369 7068 6572 7328 636f  hared_ciphers(co
005d180: 6e73 7420 5353 4c20 2a73 2c20 6368 6172  nst SSL *s, char
005d190: 202a 6275 662c 2069 6e74 206c 656e 293b   *buf, int len);
005d1a0: 0a69 6e74 2053 534c 5f67 6574 5f72 6561  .int SSL_get_rea
005d1b0: 645f 6168 6561 6428 636f 6e73 7420 5353  d_ahead(const SS
005d1c0: 4c20 2a20 7329 3b0a 696e 7420 5353 4c5f  L * s);.int SSL_
005d1d0: 7065 6e64 696e 6728 636f 6e73 7420 5353  pending(const SS
005d1e0: 4c20 2a73 293b 0a0a 696e 7420 5353 4c5f  L *s);..int SSL_
005d1f0: 7365 745f 6664 2853 534c 202a 732c 2069  set_fd(SSL *s, i
005d200: 6e74 2066 6429 3b0a 696e 7420 5353 4c5f  nt fd);.int SSL_
005d210: 7365 745f 7266 6428 5353 4c20 2a73 2c20  set_rfd(SSL *s, 
005d220: 696e 7420 6664 293b 0a69 6e74 2053 534c  int fd);.int SSL
005d230: 5f73 6574 5f77 6664 2853 534c 202a 732c  _set_wfd(SSL *s,
005d240: 2069 6e74 2066 6429 3b0a 0a0a 766f 6964   int fd);...void
005d250: 2053 534c 5f73 6574 5f62 696f 2853 534c   SSL_set_bio(SSL
005d260: 202a 732c 2042 494f 202a 7262 696f 2c42   *s, BIO *rbio,B
005d270: 494f 202a 7762 696f 293b 0a42 494f 202a  IO *wbio);.BIO *
005d280: 2053 534c 5f67 6574 5f72 6269 6f28 636f   SSL_get_rbio(co
005d290: 6e73 7420 5353 4c20 2a73 293b 0a42 494f  nst SSL *s);.BIO
005d2a0: 202a 2053 534c 5f67 6574 5f77 6269 6f28   * SSL_get_wbio(
005d2b0: 636f 6e73 7420 5353 4c20 2a73 293b 0a0a  const SSL *s);..
005d2c0: 696e 7420 5353 4c5f 7365 745f 6369 7068  int SSL_set_ciph
005d2d0: 6572 5f6c 6973 7428 5353 4c20 2a73 2c20  er_list(SSL *s, 
005d2e0: 636f 6e73 7420 6368 6172 202a 7374 7229  const char *str)
005d2f0: 3b0a 766f 6964 2053 534c 5f73 6574 5f72  ;.void SSL_set_r
005d300: 6561 645f 6168 6561 6428 5353 4c20 2a73  ead_ahead(SSL *s
005d310: 2c20 696e 7420 7965 7329 3b0a 696e 7420  , int yes);.int 
005d320: 5353 4c5f 6765 745f 7665 7269 6679 5f6d  SSL_get_verify_m
005d330: 6f64 6528 636f 6e73 7420 5353 4c20 2a73  ode(const SSL *s
005d340: 293b 0a69 6e74 2053 534c 5f67 6574 5f76  );.int SSL_get_v
005d350: 6572 6966 795f 6465 7074 6828 636f 6e73  erify_depth(cons
005d360: 7420 5353 4c20 2a73 293b 0a69 6e74 2028  t SSL *s);.int (
005d370: 2a53 534c 5f67 6574 5f76 6572 6966 795f  *SSL_get_verify_
005d380: 6361 6c6c 6261 636b 2863 6f6e 7374 2053  callback(const S
005d390: 534c 202a 7329 2928 696e 742c 5835 3039  SL *s))(int,X509
005d3a0: 5f53 544f 5245 5f43 5458 202a 293b 0a76  _STORE_CTX *);.v
005d3b0: 6f69 6420 5353 4c5f 7365 745f 7665 7269  oid SSL_set_veri
005d3c0: 6679 2853 534c 202a 732c 2069 6e74 206d  fy(SSL *s, int m
005d3d0: 6f64 652c 0a20 2020 2020 2020 2020 696e  ode,.         in
005d3e0: 7420 282a 6361 6c6c 6261 636b 2928 696e  t (*callback)(in
005d3f0: 7420 6f6b 2c58 3530 395f 5354 4f52 455f  t ok,X509_STORE_
005d400: 4354 5820 2a63 7478 2929 3b0a 766f 6964  CTX *ctx));.void
005d410: 2053 534c 5f73 6574 5f76 6572 6966 795f   SSL_set_verify_
005d420: 6465 7074 6828 5353 4c20 2a73 2c20 696e  depth(SSL *s, in
005d430: 7420 6465 7074 6829 3b0a 0a69 6e74 2053  t depth);..int S
005d440: 534c 5f75 7365 5f52 5341 5072 6976 6174  SL_use_RSAPrivat
005d450: 654b 6579 2853 534c 202a 7373 6c2c 2052  eKey(SSL *ssl, R
005d460: 5341 202a 7273 6129 3b0a 0a69 6e74 2053  SA *rsa);..int S
005d470: 534c 5f75 7365 5f52 5341 5072 6976 6174  SL_use_RSAPrivat
005d480: 654b 6579 5f41 534e 3128 5353 4c20 2a73  eKey_ASN1(SSL *s
005d490: 736c 2c20 756e 7369 676e 6564 2063 6861  sl, unsigned cha
005d4a0: 7220 2a64 2c20 6c6f 6e67 206c 656e 293b  r *d, long len);
005d4b0: 0a69 6e74 2053 534c 5f75 7365 5f50 7269  .int SSL_use_Pri
005d4c0: 7661 7465 4b65 7928 5353 4c20 2a73 736c  vateKey(SSL *ssl
005d4d0: 2c20 4556 505f 504b 4559 202a 706b 6579  , EVP_PKEY *pkey
005d4e0: 293b 0a69 6e74 2053 534c 5f75 7365 5f50  );.int SSL_use_P
005d4f0: 7269 7661 7465 4b65 795f 4153 4e31 2869  rivateKey_ASN1(i
005d500: 6e74 2070 6b2c 5353 4c20 2a73 736c 2c20  nt pk,SSL *ssl, 
005d510: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
005d520: 6861 7220 2a64 2c20 6c6f 6e67 206c 656e  har *d, long len
005d530: 293b 0a69 6e74 2053 534c 5f75 7365 5f63  );.int SSL_use_c
005d540: 6572 7469 6669 6361 7465 2853 534c 202a  ertificate(SSL *
005d550: 7373 6c2c 2058 3530 3920 2a78 293b 0a69  ssl, X509 *x);.i
005d560: 6e74 2053 534c 5f75 7365 5f63 6572 7469  nt SSL_use_certi
005d570: 6669 6361 7465 5f41 534e 3128 5353 4c20  ficate_ASN1(SSL 
005d580: 2a73 736c 2c20 636f 6e73 7420 756e 7369  *ssl, const unsi
005d590: 676e 6564 2063 6861 7220 2a64 2c20 696e  gned char *d, in
005d5a0: 7420 6c65 6e29 3b0a 0a0a 696e 7420 5353  t len);...int SS
005d5b0: 4c5f 7573 655f 5253 4150 7269 7661 7465  L_use_RSAPrivate
005d5c0: 4b65 795f 6669 6c65 2853 534c 202a 7373  Key_file(SSL *ss
005d5d0: 6c2c 2063 6f6e 7374 2063 6861 7220 2a66  l, const char *f
005d5e0: 696c 652c 2069 6e74 2074 7970 6529 3b0a  ile, int type);.
005d5f0: 696e 7420 5353 4c5f 7573 655f 5072 6976  int SSL_use_Priv
005d600: 6174 654b 6579 5f66 696c 6528 5353 4c20  ateKey_file(SSL 
005d610: 2a73 736c 2c20 636f 6e73 7420 6368 6172  *ssl, const char
005d620: 202a 6669 6c65 2c20 696e 7420 7479 7065   *file, int type
005d630: 293b 0a69 6e74 2053 534c 5f75 7365 5f63  );.int SSL_use_c
005d640: 6572 7469 6669 6361 7465 5f66 696c 6528  ertificate_file(
005d650: 5353 4c20 2a73 736c 2c20 636f 6e73 7420  SSL *ssl, const 
005d660: 6368 6172 202a 6669 6c65 2c20 696e 7420  char *file, int 
005d670: 7479 7065 293b 0a69 6e74 2053 534c 5f43  type);.int SSL_C
005d680: 5458 5f75 7365 5f52 5341 5072 6976 6174  TX_use_RSAPrivat
005d690: 654b 6579 5f66 696c 6528 5353 4c5f 4354  eKey_file(SSL_CT
005d6a0: 5820 2a63 7478 2c20 636f 6e73 7420 6368  X *ctx, const ch
005d6b0: 6172 202a 6669 6c65 2c20 696e 7420 7479  ar *file, int ty
005d6c0: 7065 293b 0a69 6e74 2053 534c 5f43 5458  pe);.int SSL_CTX
005d6d0: 5f75 7365 5f50 7269 7661 7465 4b65 795f  _use_PrivateKey_
005d6e0: 6669 6c65 2853 534c 5f43 5458 202a 6374  file(SSL_CTX *ct
005d6f0: 782c 2063 6f6e 7374 2063 6861 7220 2a66  x, const char *f
005d700: 696c 652c 2069 6e74 2074 7970 6529 3b0a  ile, int type);.
005d710: 696e 7420 5353 4c5f 4354 585f 7573 655f  int SSL_CTX_use_
005d720: 6365 7274 6966 6963 6174 655f 6669 6c65  certificate_file
005d730: 2853 534c 5f43 5458 202a 6374 782c 2063  (SSL_CTX *ctx, c
005d740: 6f6e 7374 2063 6861 7220 2a66 696c 652c  onst char *file,
005d750: 2069 6e74 2074 7970 6529 3b0a 696e 7420   int type);.int 
005d760: 5353 4c5f 4354 585f 7573 655f 6365 7274  SSL_CTX_use_cert
005d770: 6966 6963 6174 655f 6368 6169 6e5f 6669  ificate_chain_fi
005d780: 6c65 2853 534c 5f43 5458 202a 6374 782c  le(SSL_CTX *ctx,
005d790: 2063 6f6e 7374 2063 6861 7220 2a66 696c   const char *fil
005d7a0: 6529 3b0a 7374 7275 6374 2073 7461 636b  e);.struct stack
005d7b0: 5f73 745f 5835 3039 5f4e 414d 4520 2a53  _st_X509_NAME *S
005d7c0: 534c 5f6c 6f61 645f 636c 6965 6e74 5f43  SL_load_client_C
005d7d0: 415f 6669 6c65 2863 6f6e 7374 2063 6861  A_file(const cha
005d7e0: 7220 2a66 696c 6529 3b0a 696e 7420 5353  r *file);.int SS
005d7f0: 4c5f 6164 645f 6669 6c65 5f63 6572 745f  L_add_file_cert_
005d800: 7375 626a 6563 7473 5f74 6f5f 7374 6163  subjects_to_stac
005d810: 6b28 7374 7275 6374 2073 7461 636b 5f73  k(struct stack_s
005d820: 745f 5835 3039 5f4e 414d 4520 2a73 7461  t_X509_NAME *sta
005d830: 636b 4341 732c 0a20 2020 2020 2020 2020  ckCAs,.         
005d840: 636f 6e73 7420 6368 6172 202a 6669 6c65  const char *file
005d850: 293b 0a0a 0a69 6e74 2053 534c 5f61 6464  );...int SSL_add
005d860: 5f64 6972 5f63 6572 745f 7375 626a 6563  _dir_cert_subjec
005d870: 7473 5f74 6f5f 7374 6163 6b28 7374 7275  ts_to_stack(stru
005d880: 6374 2073 7461 636b 5f73 745f 5835 3039  ct stack_st_X509
005d890: 5f4e 414d 4520 2a73 7461 636b 4341 732c  _NAME *stackCAs,
005d8a0: 0a20 2020 2020 2020 2063 6f6e 7374 2063  .        const c
005d8b0: 6861 7220 2a64 6972 293b 0a0a 0a0a 0a0a  har *dir);......
005d8c0: 766f 6964 2053 534c 5f6c 6f61 645f 6572  void SSL_load_er
005d8d0: 726f 725f 7374 7269 6e67 7328 766f 6964  ror_strings(void
005d8e0: 2029 3b0a 636f 6e73 7420 6368 6172 202a   );.const char *
005d8f0: 5353 4c5f 7374 6174 655f 7374 7269 6e67  SSL_state_string
005d900: 2863 6f6e 7374 2053 534c 202a 7329 3b0a  (const SSL *s);.
005d910: 636f 6e73 7420 6368 6172 202a 5353 4c5f  const char *SSL_
005d920: 7273 7461 7465 5f73 7472 696e 6728 636f  rstate_string(co
005d930: 6e73 7420 5353 4c20 2a73 293b 0a63 6f6e  nst SSL *s);.con
005d940: 7374 2063 6861 7220 2a53 534c 5f73 7461  st char *SSL_sta
005d950: 7465 5f73 7472 696e 675f 6c6f 6e67 2863  te_string_long(c
005d960: 6f6e 7374 2053 534c 202a 7329 3b0a 636f  onst SSL *s);.co
005d970: 6e73 7420 6368 6172 202a 5353 4c5f 7273  nst char *SSL_rs
005d980: 7461 7465 5f73 7472 696e 675f 6c6f 6e67  tate_string_long
005d990: 2863 6f6e 7374 2053 534c 202a 7329 3b0a  (const SSL *s);.
005d9a0: 6c6f 6e67 2053 534c 5f53 4553 5349 4f4e  long SSL_SESSION
005d9b0: 5f67 6574 5f74 696d 6528 636f 6e73 7420  _get_time(const 
005d9c0: 5353 4c5f 5345 5353 494f 4e20 2a73 293b  SSL_SESSION *s);
005d9d0: 0a6c 6f6e 6720 5353 4c5f 5345 5353 494f  .long SSL_SESSIO
005d9e0: 4e5f 7365 745f 7469 6d65 2853 534c 5f53  N_set_time(SSL_S
005d9f0: 4553 5349 4f4e 202a 732c 206c 6f6e 6720  ESSION *s, long 
005da00: 7429 3b0a 6c6f 6e67 2053 534c 5f53 4553  t);.long SSL_SES
005da10: 5349 4f4e 5f67 6574 5f74 696d 656f 7574  SION_get_timeout
005da20: 2863 6f6e 7374 2053 534c 5f53 4553 5349  (const SSL_SESSI
005da30: 4f4e 202a 7329 3b0a 6c6f 6e67 2053 534c  ON *s);.long SSL
005da40: 5f53 4553 5349 4f4e 5f73 6574 5f74 696d  _SESSION_set_tim
005da50: 656f 7574 2853 534c 5f53 4553 5349 4f4e  eout(SSL_SESSION
005da60: 202a 732c 206c 6f6e 6720 7429 3b0a 766f   *s, long t);.vo
005da70: 6964 2053 534c 5f63 6f70 795f 7365 7373  id SSL_copy_sess
005da80: 696f 6e5f 6964 2853 534c 202a 746f 2c63  ion_id(SSL *to,c
005da90: 6f6e 7374 2053 534c 202a 6672 6f6d 293b  onst SSL *from);
005daa0: 0a58 3530 3920 2a53 534c 5f53 4553 5349  .X509 *SSL_SESSI
005dab0: 4f4e 5f67 6574 305f 7065 6572 2853 534c  ON_get0_peer(SSL
005dac0: 5f53 4553 5349 4f4e 202a 7329 3b0a 696e  _SESSION *s);.in
005dad0: 7420 5353 4c5f 5345 5353 494f 4e5f 7365  t SSL_SESSION_se
005dae0: 7431 5f69 645f 636f 6e74 6578 7428 5353  t1_id_context(SS
005daf0: 4c5f 5345 5353 494f 4e20 2a73 2c63 6f6e  L_SESSION *s,con
005db00: 7374 2075 6e73 6967 6e65 6420 6368 6172  st unsigned char
005db10: 202a 7369 645f 6374 782c 0a20 2020 2020   *sid_ctx,.     
005db20: 2020 2020 2075 6e73 6967 6e65 6420 696e       unsigned in
005db30: 7420 7369 645f 6374 785f 6c65 6e29 3b0a  t sid_ctx_len);.
005db40: 0a53 534c 5f53 4553 5349 4f4e 202a 5353  .SSL_SESSION *SS
005db50: 4c5f 5345 5353 494f 4e5f 6e65 7728 766f  L_SESSION_new(vo
005db60: 6964 293b 0a63 6f6e 7374 2075 6e73 6967  id);.const unsig
005db70: 6e65 6420 6368 6172 202a 5353 4c5f 5345  ned char *SSL_SE
005db80: 5353 494f 4e5f 6765 745f 6964 2863 6f6e  SSION_get_id(con
005db90: 7374 2053 534c 5f53 4553 5349 4f4e 202a  st SSL_SESSION *
005dba0: 732c 0a20 2020 2020 756e 7369 676e 6564  s,.     unsigned
005dbb0: 2069 6e74 202a 6c65 6e29 3b0a 756e 7369   int *len);.unsi
005dbc0: 676e 6564 2069 6e74 2053 534c 5f53 4553  gned int SSL_SES
005dbd0: 5349 4f4e 5f67 6574 5f63 6f6d 7072 6573  SION_get_compres
005dbe0: 735f 6964 2863 6f6e 7374 2053 534c 5f53  s_id(const SSL_S
005dbf0: 4553 5349 4f4e 202a 7329 3b0a 0a69 6e74  ESSION *s);..int
005dc00: 2053 534c 5f53 4553 5349 4f4e 5f70 7269   SSL_SESSION_pri
005dc10: 6e74 5f66 7028 4649 4c45 202a 6670 2c63  nt_fp(FILE *fp,c
005dc20: 6f6e 7374 2053 534c 5f53 4553 5349 4f4e  onst SSL_SESSION
005dc30: 202a 7365 7329 3b0a 0a0a 696e 7420 5353   *ses);...int SS
005dc40: 4c5f 5345 5353 494f 4e5f 7072 696e 7428  L_SESSION_print(
005dc50: 4249 4f20 2a66 702c 636f 6e73 7420 5353  BIO *fp,const SS
005dc60: 4c5f 5345 5353 494f 4e20 2a73 6573 293b  L_SESSION *ses);
005dc70: 0a0a 766f 6964 2053 534c 5f53 4553 5349  ..void SSL_SESSI
005dc80: 4f4e 5f66 7265 6528 5353 4c5f 5345 5353  ON_free(SSL_SESS
005dc90: 494f 4e20 2a73 6573 293b 0a69 6e74 2069  ION *ses);.int i
005dca0: 3264 5f53 534c 5f53 4553 5349 4f4e 2853  2d_SSL_SESSION(S
005dcb0: 534c 5f53 4553 5349 4f4e 202a 696e 2c75  SL_SESSION *in,u
005dcc0: 6e73 6967 6e65 6420 6368 6172 202a 2a70  nsigned char **p
005dcd0: 7029 3b0a 696e 7420 5353 4c5f 7365 745f  p);.int SSL_set_
005dce0: 7365 7373 696f 6e28 5353 4c20 2a74 6f2c  session(SSL *to,
005dcf0: 2053 534c 5f53 4553 5349 4f4e 202a 7365   SSL_SESSION *se
005dd00: 7373 696f 6e29 3b0a 696e 7420 5353 4c5f  ssion);.int SSL_
005dd10: 4354 585f 6164 645f 7365 7373 696f 6e28  CTX_add_session(
005dd20: 5353 4c5f 4354 5820 2a73 2c20 5353 4c5f  SSL_CTX *s, SSL_
005dd30: 5345 5353 494f 4e20 2a63 293b 0a69 6e74  SESSION *c);.int
005dd40: 2053 534c 5f43 5458 5f72 656d 6f76 655f   SSL_CTX_remove_
005dd50: 7365 7373 696f 6e28 5353 4c5f 4354 5820  session(SSL_CTX 
005dd60: 2a2c 5353 4c5f 5345 5353 494f 4e20 2a63  *,SSL_SESSION *c
005dd70: 293b 0a69 6e74 2053 534c 5f43 5458 5f73  );.int SSL_CTX_s
005dd80: 6574 5f67 656e 6572 6174 655f 7365 7373  et_generate_sess
005dd90: 696f 6e5f 6964 2853 534c 5f43 5458 202a  ion_id(SSL_CTX *
005dda0: 2c20 4745 4e5f 5345 5353 494f 4e5f 4342  , GEN_SESSION_CB
005ddb0: 293b 0a69 6e74 2053 534c 5f73 6574 5f67  );.int SSL_set_g
005ddc0: 656e 6572 6174 655f 7365 7373 696f 6e5f  enerate_session_
005ddd0: 6964 2853 534c 202a 2c20 4745 4e5f 5345  id(SSL *, GEN_SE
005dde0: 5353 494f 4e5f 4342 293b 0a69 6e74 2053  SSION_CB);.int S
005ddf0: 534c 5f68 6173 5f6d 6174 6368 696e 675f  SL_has_matching_
005de00: 7365 7373 696f 6e5f 6964 2863 6f6e 7374  session_id(const
005de10: 2053 534c 202a 7373 6c2c 2063 6f6e 7374   SSL *ssl, const
005de20: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
005de30: 6964 2c0a 2020 2020 2075 6e73 6967 6e65  id,.     unsigne
005de40: 6420 696e 7420 6964 5f6c 656e 293b 0a53  d int id_len);.S
005de50: 534c 5f53 4553 5349 4f4e 202a 6432 695f  SL_SESSION *d2i_
005de60: 5353 4c5f 5345 5353 494f 4e28 5353 4c5f  SSL_SESSION(SSL_
005de70: 5345 5353 494f 4e20 2a2a 612c 636f 6e73  SESSION **a,cons
005de80: 7420 756e 7369 676e 6564 2063 6861 7220  t unsigned char 
005de90: 2a2a 7070 2c0a 2020 2020 2020 2020 6c6f  **pp,.        lo
005dea0: 6e67 206c 656e 6774 6829 3b0a 0a0a 5835  ng length);...X5
005deb0: 3039 202a 2053 534c 5f67 6574 5f70 6565  09 * SSL_get_pee
005dec0: 725f 6365 7274 6966 6963 6174 6528 636f  r_certificate(co
005ded0: 6e73 7420 5353 4c20 2a73 293b 0a0a 0a73  nst SSL *s);...s
005dee0: 7472 7563 7420 7374 6163 6b5f 7374 5f58  truct stack_st_X
005def0: 3530 3920 2a53 534c 5f67 6574 5f70 6565  509 *SSL_get_pee
005df00: 725f 6365 7274 5f63 6861 696e 2863 6f6e  r_cert_chain(con
005df10: 7374 2053 534c 202a 7329 3b0a 0a69 6e74  st SSL *s);..int
005df20: 2053 534c 5f43 5458 5f67 6574 5f76 6572   SSL_CTX_get_ver
005df30: 6966 795f 6d6f 6465 2863 6f6e 7374 2053  ify_mode(const S
005df40: 534c 5f43 5458 202a 6374 7829 3b0a 696e  SL_CTX *ctx);.in
005df50: 7420 5353 4c5f 4354 585f 6765 745f 7665  t SSL_CTX_get_ve
005df60: 7269 6679 5f64 6570 7468 2863 6f6e 7374  rify_depth(const
005df70: 2053 534c 5f43 5458 202a 6374 7829 3b0a   SSL_CTX *ctx);.
005df80: 696e 7420 282a 5353 4c5f 4354 585f 6765  int (*SSL_CTX_ge
005df90: 745f 7665 7269 6679 5f63 616c 6c62 6163  t_verify_callbac
005dfa0: 6b28 636f 6e73 7420 5353 4c5f 4354 5820  k(const SSL_CTX 
005dfb0: 2a63 7478 2929 2869 6e74 2c58 3530 395f  *ctx))(int,X509_
005dfc0: 5354 4f52 455f 4354 5820 2a29 3b0a 766f  STORE_CTX *);.vo
005dfd0: 6964 2053 534c 5f43 5458 5f73 6574 5f76  id SSL_CTX_set_v
005dfe0: 6572 6966 7928 5353 4c5f 4354 5820 2a63  erify(SSL_CTX *c
005dff0: 7478 2c69 6e74 206d 6f64 652c 0a20 2020  tx,int mode,.   
005e000: 696e 7420 282a 6361 6c6c 6261 636b 2928  int (*callback)(
005e010: 696e 742c 2058 3530 395f 5354 4f52 455f  int, X509_STORE_
005e020: 4354 5820 2a29 293b 0a76 6f69 6420 5353  CTX *));.void SS
005e030: 4c5f 4354 585f 7365 745f 7665 7269 6679  L_CTX_set_verify
005e040: 5f64 6570 7468 2853 534c 5f43 5458 202a  _depth(SSL_CTX *
005e050: 6374 782c 696e 7420 6465 7074 6829 3b0a  ctx,int depth);.
005e060: 766f 6964 2053 534c 5f43 5458 5f73 6574  void SSL_CTX_set
005e070: 5f63 6572 745f 7665 7269 6679 5f63 616c  _cert_verify_cal
005e080: 6c62 6163 6b28 5353 4c5f 4354 5820 2a63  lback(SSL_CTX *c
005e090: 7478 2c20 696e 7420 282a 6362 2928 5835  tx, int (*cb)(X5
005e0a0: 3039 5f53 544f 5245 5f43 5458 202a 2c76  09_STORE_CTX *,v
005e0b0: 6f69 6420 2a29 2c20 766f 6964 202a 6172  oid *), void *ar
005e0c0: 6729 3b0a 0a69 6e74 2053 534c 5f43 5458  g);..int SSL_CTX
005e0d0: 5f75 7365 5f52 5341 5072 6976 6174 654b  _use_RSAPrivateK
005e0e0: 6579 2853 534c 5f43 5458 202a 6374 782c  ey(SSL_CTX *ctx,
005e0f0: 2052 5341 202a 7273 6129 3b0a 0a69 6e74   RSA *rsa);..int
005e100: 2053 534c 5f43 5458 5f75 7365 5f52 5341   SSL_CTX_use_RSA
005e110: 5072 6976 6174 654b 6579 5f41 534e 3128  PrivateKey_ASN1(
005e120: 5353 4c5f 4354 5820 2a63 7478 2c20 636f  SSL_CTX *ctx, co
005e130: 6e73 7420 756e 7369 676e 6564 2063 6861  nst unsigned cha
005e140: 7220 2a64 2c20 6c6f 6e67 206c 656e 293b  r *d, long len);
005e150: 0a69 6e74 2053 534c 5f43 5458 5f75 7365  .int SSL_CTX_use
005e160: 5f50 7269 7661 7465 4b65 7928 5353 4c5f  _PrivateKey(SSL_
005e170: 4354 5820 2a63 7478 2c20 4556 505f 504b  CTX *ctx, EVP_PK
005e180: 4559 202a 706b 6579 293b 0a69 6e74 2053  EY *pkey);.int S
005e190: 534c 5f43 5458 5f75 7365 5f50 7269 7661  SL_CTX_use_Priva
005e1a0: 7465 4b65 795f 4153 4e31 2869 6e74 2070  teKey_ASN1(int p
005e1b0: 6b2c 5353 4c5f 4354 5820 2a63 7478 2c0a  k,SSL_CTX *ctx,.
005e1c0: 2063 6f6e 7374 2075 6e73 6967 6e65 6420   const unsigned 
005e1d0: 6368 6172 202a 642c 206c 6f6e 6720 6c65  char *d, long le
005e1e0: 6e29 3b0a 696e 7420 5353 4c5f 4354 585f  n);.int SSL_CTX_
005e1f0: 7573 655f 6365 7274 6966 6963 6174 6528  use_certificate(
005e200: 5353 4c5f 4354 5820 2a63 7478 2c20 5835  SSL_CTX *ctx, X5
005e210: 3039 202a 7829 3b0a 696e 7420 5353 4c5f  09 *x);.int SSL_
005e220: 4354 585f 7573 655f 6365 7274 6966 6963  CTX_use_certific
005e230: 6174 655f 4153 4e31 2853 534c 5f43 5458  ate_ASN1(SSL_CTX
005e240: 202a 6374 782c 2069 6e74 206c 656e 2c20   *ctx, int len, 
005e250: 636f 6e73 7420 756e 7369 676e 6564 2063  const unsigned c
005e260: 6861 7220 2a64 293b 0a0a 766f 6964 2053  har *d);..void S
005e270: 534c 5f43 5458 5f73 6574 5f64 6566 6175  SL_CTX_set_defau
005e280: 6c74 5f70 6173 7377 645f 6362 2853 534c  lt_passwd_cb(SSL
005e290: 5f43 5458 202a 6374 782c 2070 656d 5f70  _CTX *ctx, pem_p
005e2a0: 6173 7377 6f72 645f 6362 202a 6362 293b  assword_cb *cb);
005e2b0: 0a76 6f69 6420 5353 4c5f 4354 585f 7365  .void SSL_CTX_se
005e2c0: 745f 6465 6661 756c 745f 7061 7373 7764  t_default_passwd
005e2d0: 5f63 625f 7573 6572 6461 7461 2853 534c  _cb_userdata(SSL
005e2e0: 5f43 5458 202a 6374 782c 2076 6f69 6420  _CTX *ctx, void 
005e2f0: 2a75 293b 0a0a 696e 7420 5353 4c5f 4354  *u);..int SSL_CT
005e300: 585f 6368 6563 6b5f 7072 6976 6174 655f  X_check_private_
005e310: 6b65 7928 636f 6e73 7420 5353 4c5f 4354  key(const SSL_CT
005e320: 5820 2a63 7478 293b 0a69 6e74 2053 534c  X *ctx);.int SSL
005e330: 5f63 6865 636b 5f70 7269 7661 7465 5f6b  _check_private_k
005e340: 6579 2863 6f6e 7374 2053 534c 202a 6374  ey(const SSL *ct
005e350: 7829 3b0a 0a69 6e74 2053 534c 5f43 5458  x);..int SSL_CTX
005e360: 5f73 6574 5f73 6573 7369 6f6e 5f69 645f  _set_session_id_
005e370: 636f 6e74 6578 7428 5353 4c5f 4354 5820  context(SSL_CTX 
005e380: 2a63 7478 2c63 6f6e 7374 2075 6e73 6967  *ctx,const unsig
005e390: 6e65 6420 6368 6172 202a 7369 645f 6374  ned char *sid_ct
005e3a0: 782c 0a20 2020 2020 2020 2020 2020 756e  x,.           un
005e3b0: 7369 676e 6564 2069 6e74 2073 6964 5f63  signed int sid_c
005e3c0: 7478 5f6c 656e 293b 0a0a 5353 4c20 2a20  tx_len);..SSL * 
005e3d0: 5353 4c5f 6e65 7728 5353 4c5f 4354 5820  SSL_new(SSL_CTX 
005e3e0: 2a63 7478 293b 0a69 6e74 2053 534c 5f73  *ctx);.int SSL_s
005e3f0: 6574 5f73 6573 7369 6f6e 5f69 645f 636f  et_session_id_co
005e400: 6e74 6578 7428 5353 4c20 2a73 736c 2c63  ntext(SSL *ssl,c
005e410: 6f6e 7374 2075 6e73 6967 6e65 6420 6368  onst unsigned ch
005e420: 6172 202a 7369 645f 6374 782c 0a20 2020  ar *sid_ctx,.   
005e430: 2020 2020 756e 7369 676e 6564 2069 6e74      unsigned int
005e440: 2073 6964 5f63 7478 5f6c 656e 293b 0a0a   sid_ctx_len);..
005e450: 696e 7420 5353 4c5f 4354 585f 7365 745f  int SSL_CTX_set_
005e460: 7075 7270 6f73 6528 5353 4c5f 4354 5820  purpose(SSL_CTX 
005e470: 2a73 2c20 696e 7420 7075 7270 6f73 6529  *s, int purpose)
005e480: 3b0a 696e 7420 5353 4c5f 7365 745f 7075  ;.int SSL_set_pu
005e490: 7270 6f73 6528 5353 4c20 2a73 2c20 696e  rpose(SSL *s, in
005e4a0: 7420 7075 7270 6f73 6529 3b0a 696e 7420  t purpose);.int 
005e4b0: 5353 4c5f 4354 585f 7365 745f 7472 7573  SSL_CTX_set_trus
005e4c0: 7428 5353 4c5f 4354 5820 2a73 2c20 696e  t(SSL_CTX *s, in
005e4d0: 7420 7472 7573 7429 3b0a 696e 7420 5353  t trust);.int SS
005e4e0: 4c5f 7365 745f 7472 7573 7428 5353 4c20  L_set_trust(SSL 
005e4f0: 2a73 2c20 696e 7420 7472 7573 7429 3b0a  *s, int trust);.
005e500: 0a69 6e74 2053 534c 5f43 5458 5f73 6574  .int SSL_CTX_set
005e510: 315f 7061 7261 6d28 5353 4c5f 4354 5820  1_param(SSL_CTX 
005e520: 2a63 7478 2c20 5835 3039 5f56 4552 4946  *ctx, X509_VERIF
005e530: 595f 5041 5241 4d20 2a76 706d 293b 0a69  Y_PARAM *vpm);.i
005e540: 6e74 2053 534c 5f73 6574 315f 7061 7261  nt SSL_set1_para
005e550: 6d28 5353 4c20 2a73 736c 2c20 5835 3039  m(SSL *ssl, X509
005e560: 5f56 4552 4946 595f 5041 5241 4d20 2a76  _VERIFY_PARAM *v
005e570: 706d 293b 0a0a 0a76 6f69 6420 5353 4c5f  pm);...void SSL_
005e580: 6672 6565 2853 534c 202a 7373 6c29 3b0a  free(SSL *ssl);.
005e590: 696e 7420 5353 4c5f 6163 6365 7074 2853  int SSL_accept(S
005e5a0: 534c 202a 7373 6c29 3b0a 696e 7420 5353  SL *ssl);.int SS
005e5b0: 4c5f 636f 6e6e 6563 7428 5353 4c20 2a73  L_connect(SSL *s
005e5c0: 736c 293b 0a69 6e74 2053 534c 5f72 6561  sl);.int SSL_rea
005e5d0: 6428 5353 4c20 2a73 736c 2c76 6f69 6420  d(SSL *ssl,void 
005e5e0: 2a62 7566 2c69 6e74 206e 756d 293b 0a69  *buf,int num);.i
005e5f0: 6e74 2053 534c 5f70 6565 6b28 5353 4c20  nt SSL_peek(SSL 
005e600: 2a73 736c 2c76 6f69 6420 2a62 7566 2c69  *ssl,void *buf,i
005e610: 6e74 206e 756d 293b 0a69 6e74 2053 534c  nt num);.int SSL
005e620: 5f77 7269 7465 2853 534c 202a 7373 6c2c  _write(SSL *ssl,
005e630: 636f 6e73 7420 766f 6964 202a 6275 662c  const void *buf,
005e640: 696e 7420 6e75 6d29 3b0a 6c6f 6e67 2053  int num);.long S
005e650: 534c 5f63 7472 6c28 5353 4c20 2a73 736c  SL_ctrl(SSL *ssl
005e660: 2c69 6e74 2063 6d64 2c20 6c6f 6e67 206c  ,int cmd, long l
005e670: 6172 672c 2076 6f69 6420 2a70 6172 6729  arg, void *parg)
005e680: 3b0a 6c6f 6e67 2053 534c 5f63 616c 6c62  ;.long SSL_callb
005e690: 6163 6b5f 6374 726c 2853 534c 202a 2c20  ack_ctrl(SSL *, 
005e6a0: 696e 742c 2076 6f69 6420 282a 2928 766f  int, void (*)(vo
005e6b0: 6964 2929 3b0a 6c6f 6e67 2053 534c 5f43  id));.long SSL_C
005e6c0: 5458 5f63 7472 6c28 5353 4c5f 4354 5820  TX_ctrl(SSL_CTX 
005e6d0: 2a63 7478 2c69 6e74 2063 6d64 2c20 6c6f  *ctx,int cmd, lo
005e6e0: 6e67 206c 6172 672c 2076 6f69 6420 2a70  ng larg, void *p
005e6f0: 6172 6729 3b0a 6c6f 6e67 2053 534c 5f43  arg);.long SSL_C
005e700: 5458 5f63 616c 6c62 6163 6b5f 6374 726c  TX_callback_ctrl
005e710: 2853 534c 5f43 5458 202a 2c20 696e 742c  (SSL_CTX *, int,
005e720: 2076 6f69 6420 282a 2928 766f 6964 2929   void (*)(void))
005e730: 3b0a 0a69 6e74 2053 534c 5f67 6574 5f65  ;..int SSL_get_e
005e740: 7272 6f72 2863 6f6e 7374 2053 534c 202a  rror(const SSL *
005e750: 732c 696e 7420 7265 745f 636f 6465 293b  s,int ret_code);
005e760: 0a63 6f6e 7374 2063 6861 7220 2a53 534c  .const char *SSL
005e770: 5f67 6574 5f76 6572 7369 6f6e 2863 6f6e  _get_version(con
005e780: 7374 2053 534c 202a 7329 3b0a 0a0a 696e  st SSL *s);...in
005e790: 7420 5353 4c5f 4354 585f 7365 745f 7373  t SSL_CTX_set_ss
005e7a0: 6c5f 7665 7273 696f 6e28 5353 4c5f 4354  l_version(SSL_CT
005e7b0: 5820 2a63 7478 2c20 636f 6e73 7420 5353  X *ctx, const SS
005e7c0: 4c5f 4d45 5448 4f44 202a 6d65 7468 293b  L_METHOD *meth);
005e7d0: 0a0a 0a63 6f6e 7374 2053 534c 5f4d 4554  ...const SSL_MET
005e7e0: 484f 4420 2a53 534c 7632 5f6d 6574 686f  HOD *SSLv2_metho
005e7f0: 6428 766f 6964 293b 0a63 6f6e 7374 2053  d(void);.const S
005e800: 534c 5f4d 4554 484f 4420 2a53 534c 7632  SL_METHOD *SSLv2
005e810: 5f73 6572 7665 725f 6d65 7468 6f64 2876  _server_method(v
005e820: 6f69 6429 3b0a 636f 6e73 7420 5353 4c5f  oid);.const SSL_
005e830: 4d45 5448 4f44 202a 5353 4c76 325f 636c  METHOD *SSLv2_cl
005e840: 6965 6e74 5f6d 6574 686f 6428 766f 6964  ient_method(void
005e850: 293b 0a0a 0a63 6f6e 7374 2053 534c 5f4d  );...const SSL_M
005e860: 4554 484f 4420 2a53 534c 7633 5f6d 6574  ETHOD *SSLv3_met
005e870: 686f 6428 766f 6964 293b 0a63 6f6e 7374  hod(void);.const
005e880: 2053 534c 5f4d 4554 484f 4420 2a53 534c   SSL_METHOD *SSL
005e890: 7633 5f73 6572 7665 725f 6d65 7468 6f64  v3_server_method
005e8a0: 2876 6f69 6429 3b0a 636f 6e73 7420 5353  (void);.const SS
005e8b0: 4c5f 4d45 5448 4f44 202a 5353 4c76 335f  L_METHOD *SSLv3_
005e8c0: 636c 6965 6e74 5f6d 6574 686f 6428 766f  client_method(vo
005e8d0: 6964 293b 0a0a 636f 6e73 7420 5353 4c5f  id);..const SSL_
005e8e0: 4d45 5448 4f44 202a 5353 4c76 3233 5f6d  METHOD *SSLv23_m
005e8f0: 6574 686f 6428 766f 6964 293b 0a63 6f6e  ethod(void);.con
005e900: 7374 2053 534c 5f4d 4554 484f 4420 2a53  st SSL_METHOD *S
005e910: 534c 7632 335f 7365 7276 6572 5f6d 6574  SLv23_server_met
005e920: 686f 6428 766f 6964 293b 0a63 6f6e 7374  hod(void);.const
005e930: 2053 534c 5f4d 4554 484f 4420 2a53 534c   SSL_METHOD *SSL
005e940: 7632 335f 636c 6965 6e74 5f6d 6574 686f  v23_client_metho
005e950: 6428 766f 6964 293b 0a0a 636f 6e73 7420  d(void);..const 
005e960: 5353 4c5f 4d45 5448 4f44 202a 544c 5376  SSL_METHOD *TLSv
005e970: 315f 6d65 7468 6f64 2876 6f69 6429 3b0a  1_method(void);.
005e980: 636f 6e73 7420 5353 4c5f 4d45 5448 4f44  const SSL_METHOD
005e990: 202a 544c 5376 315f 7365 7276 6572 5f6d   *TLSv1_server_m
005e9a0: 6574 686f 6428 766f 6964 293b 0a63 6f6e  ethod(void);.con
005e9b0: 7374 2053 534c 5f4d 4554 484f 4420 2a54  st SSL_METHOD *T
005e9c0: 4c53 7631 5f63 6c69 656e 745f 6d65 7468  LSv1_client_meth
005e9d0: 6f64 2876 6f69 6429 3b0a 0a63 6f6e 7374  od(void);..const
005e9e0: 2053 534c 5f4d 4554 484f 4420 2a54 4c53   SSL_METHOD *TLS
005e9f0: 7631 5f31 5f6d 6574 686f 6428 766f 6964  v1_1_method(void
005ea00: 293b 0a63 6f6e 7374 2053 534c 5f4d 4554  );.const SSL_MET
005ea10: 484f 4420 2a54 4c53 7631 5f31 5f73 6572  HOD *TLSv1_1_ser
005ea20: 7665 725f 6d65 7468 6f64 2876 6f69 6429  ver_method(void)
005ea30: 3b0a 636f 6e73 7420 5353 4c5f 4d45 5448  ;.const SSL_METH
005ea40: 4f44 202a 544c 5376 315f 315f 636c 6965  OD *TLSv1_1_clie
005ea50: 6e74 5f6d 6574 686f 6428 766f 6964 293b  nt_method(void);
005ea60: 0a0a 636f 6e73 7420 5353 4c5f 4d45 5448  ..const SSL_METH
005ea70: 4f44 202a 544c 5376 315f 325f 6d65 7468  OD *TLSv1_2_meth
005ea80: 6f64 2876 6f69 6429 3b0a 636f 6e73 7420  od(void);.const 
005ea90: 5353 4c5f 4d45 5448 4f44 202a 544c 5376  SSL_METHOD *TLSv
005eaa0: 315f 325f 7365 7276 6572 5f6d 6574 686f  1_2_server_metho
005eab0: 6428 766f 6964 293b 0a63 6f6e 7374 2053  d(void);.const S
005eac0: 534c 5f4d 4554 484f 4420 2a54 4c53 7631  SL_METHOD *TLSv1
005ead0: 5f32 5f63 6c69 656e 745f 6d65 7468 6f64  _2_client_method
005eae0: 2876 6f69 6429 3b0a 0a0a 636f 6e73 7420  (void);...const 
005eaf0: 5353 4c5f 4d45 5448 4f44 202a 4454 4c53  SSL_METHOD *DTLS
005eb00: 7631 5f6d 6574 686f 6428 766f 6964 293b  v1_method(void);
005eb10: 0a63 6f6e 7374 2053 534c 5f4d 4554 484f  .const SSL_METHO
005eb20: 4420 2a44 544c 5376 315f 7365 7276 6572  D *DTLSv1_server
005eb30: 5f6d 6574 686f 6428 766f 6964 293b 0a63  _method(void);.c
005eb40: 6f6e 7374 2053 534c 5f4d 4554 484f 4420  onst SSL_METHOD 
005eb50: 2a44 544c 5376 315f 636c 6965 6e74 5f6d  *DTLSv1_client_m
005eb60: 6574 686f 6428 766f 6964 293b 0a0a 7374  ethod(void);..st
005eb70: 7275 6374 2073 7461 636b 5f73 745f 5353  ruct stack_st_SS
005eb80: 4c5f 4349 5048 4552 202a 5353 4c5f 6765  L_CIPHER *SSL_ge
005eb90: 745f 6369 7068 6572 7328 636f 6e73 7420  t_ciphers(const 
005eba0: 5353 4c20 2a73 293b 0a0a 696e 7420 5353  SSL *s);..int SS
005ebb0: 4c5f 646f 5f68 616e 6473 6861 6b65 2853  L_do_handshake(S
005ebc0: 534c 202a 7329 3b0a 696e 7420 5353 4c5f  SL *s);.int SSL_
005ebd0: 7265 6e65 676f 7469 6174 6528 5353 4c20  renegotiate(SSL 
005ebe0: 2a73 293b 0a69 6e74 2053 534c 5f72 656e  *s);.int SSL_ren
005ebf0: 6567 6f74 6961 7465 5f61 6262 7265 7669  egotiate_abbrevi
005ec00: 6174 6564 2853 534c 202a 7329 3b0a 696e  ated(SSL *s);.in
005ec10: 7420 5353 4c5f 7265 6e65 676f 7469 6174  t SSL_renegotiat
005ec20: 655f 7065 6e64 696e 6728 5353 4c20 2a73  e_pending(SSL *s
005ec30: 293b 0a69 6e74 2053 534c 5f73 6875 7464  );.int SSL_shutd
005ec40: 6f77 6e28 5353 4c20 2a73 293b 0a0a 636f  own(SSL *s);..co
005ec50: 6e73 7420 5353 4c5f 4d45 5448 4f44 202a  nst SSL_METHOD *
005ec60: 5353 4c5f 6765 745f 7373 6c5f 6d65 7468  SSL_get_ssl_meth
005ec70: 6f64 2853 534c 202a 7329 3b0a 696e 7420  od(SSL *s);.int 
005ec80: 5353 4c5f 7365 745f 7373 6c5f 6d65 7468  SSL_set_ssl_meth
005ec90: 6f64 2853 534c 202a 732c 2063 6f6e 7374  od(SSL *s, const
005eca0: 2053 534c 5f4d 4554 484f 4420 2a6d 6574   SSL_METHOD *met
005ecb0: 686f 6429 3b0a 636f 6e73 7420 6368 6172  hod);.const char
005ecc0: 202a 5353 4c5f 616c 6572 745f 7479 7065   *SSL_alert_type
005ecd0: 5f73 7472 696e 675f 6c6f 6e67 2869 6e74  _string_long(int
005ece0: 2076 616c 7565 293b 0a63 6f6e 7374 2063   value);.const c
005ecf0: 6861 7220 2a53 534c 5f61 6c65 7274 5f74  har *SSL_alert_t
005ed00: 7970 655f 7374 7269 6e67 2869 6e74 2076  ype_string(int v
005ed10: 616c 7565 293b 0a63 6f6e 7374 2063 6861  alue);.const cha
005ed20: 7220 2a53 534c 5f61 6c65 7274 5f64 6573  r *SSL_alert_des
005ed30: 635f 7374 7269 6e67 5f6c 6f6e 6728 696e  c_string_long(in
005ed40: 7420 7661 6c75 6529 3b0a 636f 6e73 7420  t value);.const 
005ed50: 6368 6172 202a 5353 4c5f 616c 6572 745f  char *SSL_alert_
005ed60: 6465 7363 5f73 7472 696e 6728 696e 7420  desc_string(int 
005ed70: 7661 6c75 6529 3b0a 0a76 6f69 6420 5353  value);..void SS
005ed80: 4c5f 7365 745f 636c 6965 6e74 5f43 415f  L_set_client_CA_
005ed90: 6c69 7374 2853 534c 202a 732c 2073 7472  list(SSL *s, str
005eda0: 7563 7420 7374 6163 6b5f 7374 5f58 3530  uct stack_st_X50
005edb0: 395f 4e41 4d45 202a 6e61 6d65 5f6c 6973  9_NAME *name_lis
005edc0: 7429 3b0a 766f 6964 2053 534c 5f43 5458  t);.void SSL_CTX
005edd0: 5f73 6574 5f63 6c69 656e 745f 4341 5f6c  _set_client_CA_l
005ede0: 6973 7428 5353 4c5f 4354 5820 2a63 7478  ist(SSL_CTX *ctx
005edf0: 2c20 7374 7275 6374 2073 7461 636b 5f73  , struct stack_s
005ee00: 745f 5835 3039 5f4e 414d 4520 2a6e 616d  t_X509_NAME *nam
005ee10: 655f 6c69 7374 293b 0a73 7472 7563 7420  e_list);.struct 
005ee20: 7374 6163 6b5f 7374 5f58 3530 395f 4e41  stack_st_X509_NA
005ee30: 4d45 202a 5353 4c5f 6765 745f 636c 6965  ME *SSL_get_clie
005ee40: 6e74 5f43 415f 6c69 7374 2863 6f6e 7374  nt_CA_list(const
005ee50: 2053 534c 202a 7329 3b0a 7374 7275 6374   SSL *s);.struct
005ee60: 2073 7461 636b 5f73 745f 5835 3039 5f4e   stack_st_X509_N
005ee70: 414d 4520 2a53 534c 5f43 5458 5f67 6574  AME *SSL_CTX_get
005ee80: 5f63 6c69 656e 745f 4341 5f6c 6973 7428  _client_CA_list(
005ee90: 636f 6e73 7420 5353 4c5f 4354 5820 2a73  const SSL_CTX *s
005eea0: 293b 0a69 6e74 2053 534c 5f61 6464 5f63  );.int SSL_add_c
005eeb0: 6c69 656e 745f 4341 2853 534c 202a 7373  lient_CA(SSL *ss
005eec0: 6c2c 5835 3039 202a 7829 3b0a 696e 7420  l,X509 *x);.int 
005eed0: 5353 4c5f 4354 585f 6164 645f 636c 6965  SSL_CTX_add_clie
005eee0: 6e74 5f43 4128 5353 4c5f 4354 5820 2a63  nt_CA(SSL_CTX *c
005eef0: 7478 2c58 3530 3920 2a78 293b 0a0a 766f  tx,X509 *x);..vo
005ef00: 6964 2053 534c 5f73 6574 5f63 6f6e 6e65  id SSL_set_conne
005ef10: 6374 5f73 7461 7465 2853 534c 202a 7329  ct_state(SSL *s)
005ef20: 3b0a 766f 6964 2053 534c 5f73 6574 5f61  ;.void SSL_set_a
005ef30: 6363 6570 745f 7374 6174 6528 5353 4c20  ccept_state(SSL 
005ef40: 2a73 293b 0a0a 6c6f 6e67 2053 534c 5f67  *s);..long SSL_g
005ef50: 6574 5f64 6566 6175 6c74 5f74 696d 656f  et_default_timeo
005ef60: 7574 2863 6f6e 7374 2053 534c 202a 7329  ut(const SSL *s)
005ef70: 3b0a 0a69 6e74 2053 534c 5f6c 6962 7261  ;..int SSL_libra
005ef80: 7279 5f69 6e69 7428 766f 6964 2029 3b0a  ry_init(void );.
005ef90: 0a63 6861 7220 2a53 534c 5f43 4950 4845  .char *SSL_CIPHE
005efa0: 525f 6465 7363 7269 7074 696f 6e28 636f  R_description(co
005efb0: 6e73 7420 5353 4c5f 4349 5048 4552 202a  nst SSL_CIPHER *
005efc0: 2c63 6861 7220 2a62 7566 2c69 6e74 2073  ,char *buf,int s
005efd0: 697a 6529 3b0a 7374 7275 6374 2073 7461  ize);.struct sta
005efe0: 636b 5f73 745f 5835 3039 5f4e 414d 4520  ck_st_X509_NAME 
005eff0: 2a53 534c 5f64 7570 5f43 415f 6c69 7374  *SSL_dup_CA_list
005f000: 2873 7472 7563 7420 7374 6163 6b5f 7374  (struct stack_st
005f010: 5f58 3530 395f 4e41 4d45 202a 736b 293b  _X509_NAME *sk);
005f020: 0a0a 5353 4c20 2a53 534c 5f64 7570 2853  ..SSL *SSL_dup(S
005f030: 534c 202a 7373 6c29 3b0a 0a58 3530 3920  SL *ssl);..X509 
005f040: 2a53 534c 5f67 6574 5f63 6572 7469 6669  *SSL_get_certifi
005f050: 6361 7465 2863 6f6e 7374 2053 534c 202a  cate(const SSL *
005f060: 7373 6c29 3b0a 2020 2020 2020 2020 2020  ssl);.          
005f070: 2020 2020 2073 7472 7563 7420 6576 705f       struct evp_
005f080: 706b 6579 5f73 7420 2a53 534c 5f67 6574  pkey_st *SSL_get
005f090: 5f70 7269 7661 7465 6b65 7928 5353 4c20  _privatekey(SSL 
005f0a0: 2a73 736c 293b 0a0a 766f 6964 2053 534c  *ssl);..void SSL
005f0b0: 5f43 5458 5f73 6574 5f71 7569 6574 5f73  _CTX_set_quiet_s
005f0c0: 6875 7464 6f77 6e28 5353 4c5f 4354 5820  hutdown(SSL_CTX 
005f0d0: 2a63 7478 2c69 6e74 206d 6f64 6529 3b0a  *ctx,int mode);.
005f0e0: 696e 7420 5353 4c5f 4354 585f 6765 745f  int SSL_CTX_get_
005f0f0: 7175 6965 745f 7368 7574 646f 776e 2863  quiet_shutdown(c
005f100: 6f6e 7374 2053 534c 5f43 5458 202a 6374  onst SSL_CTX *ct
005f110: 7829 3b0a 766f 6964 2053 534c 5f73 6574  x);.void SSL_set
005f120: 5f71 7569 6574 5f73 6875 7464 6f77 6e28  _quiet_shutdown(
005f130: 5353 4c20 2a73 736c 2c69 6e74 206d 6f64  SSL *ssl,int mod
005f140: 6529 3b0a 696e 7420 5353 4c5f 6765 745f  e);.int SSL_get_
005f150: 7175 6965 745f 7368 7574 646f 776e 2863  quiet_shutdown(c
005f160: 6f6e 7374 2053 534c 202a 7373 6c29 3b0a  onst SSL *ssl);.
005f170: 766f 6964 2053 534c 5f73 6574 5f73 6875  void SSL_set_shu
005f180: 7464 6f77 6e28 5353 4c20 2a73 736c 2c69  tdown(SSL *ssl,i
005f190: 6e74 206d 6f64 6529 3b0a 696e 7420 5353  nt mode);.int SS
005f1a0: 4c5f 6765 745f 7368 7574 646f 776e 2863  L_get_shutdown(c
005f1b0: 6f6e 7374 2053 534c 202a 7373 6c29 3b0a  onst SSL *ssl);.
005f1c0: 696e 7420 5353 4c5f 7665 7273 696f 6e28  int SSL_version(
005f1d0: 636f 6e73 7420 5353 4c20 2a73 736c 293b  const SSL *ssl);
005f1e0: 0a69 6e74 2053 534c 5f43 5458 5f73 6574  .int SSL_CTX_set
005f1f0: 5f64 6566 6175 6c74 5f76 6572 6966 795f  _default_verify_
005f200: 7061 7468 7328 5353 4c5f 4354 5820 2a63  paths(SSL_CTX *c
005f210: 7478 293b 0a69 6e74 2053 534c 5f43 5458  tx);.int SSL_CTX
005f220: 5f6c 6f61 645f 7665 7269 6679 5f6c 6f63  _load_verify_loc
005f230: 6174 696f 6e73 2853 534c 5f43 5458 202a  ations(SSL_CTX *
005f240: 6374 782c 2063 6f6e 7374 2063 6861 7220  ctx, const char 
005f250: 2a43 4166 696c 652c 0a20 636f 6e73 7420  *CAfile,. const 
005f260: 6368 6172 202a 4341 7061 7468 293b 0a0a  char *CApath);..
005f270: 5353 4c5f 5345 5353 494f 4e20 2a53 534c  SSL_SESSION *SSL
005f280: 5f67 6574 5f73 6573 7369 6f6e 2863 6f6e  _get_session(con
005f290: 7374 2053 534c 202a 7373 6c29 3b0a 5353  st SSL *ssl);.SS
005f2a0: 4c5f 5345 5353 494f 4e20 2a53 534c 5f67  L_SESSION *SSL_g
005f2b0: 6574 315f 7365 7373 696f 6e28 5353 4c20  et1_session(SSL 
005f2c0: 2a73 736c 293b 0a53 534c 5f43 5458 202a  *ssl);.SSL_CTX *
005f2d0: 5353 4c5f 6765 745f 5353 4c5f 4354 5828  SSL_get_SSL_CTX(
005f2e0: 636f 6e73 7420 5353 4c20 2a73 736c 293b  const SSL *ssl);
005f2f0: 0a53 534c 5f43 5458 202a 5353 4c5f 7365  .SSL_CTX *SSL_se
005f300: 745f 5353 4c5f 4354 5828 5353 4c20 2a73  t_SSL_CTX(SSL *s
005f310: 736c 2c20 5353 4c5f 4354 582a 2063 7478  sl, SSL_CTX* ctx
005f320: 293b 0a76 6f69 6420 5353 4c5f 7365 745f  );.void SSL_set_
005f330: 696e 666f 5f63 616c 6c62 6163 6b28 5353  info_callback(SS
005f340: 4c20 2a73 736c 2c0a 2020 2020 2020 766f  L *ssl,.      vo
005f350: 6964 2028 2a63 6229 2863 6f6e 7374 2053  id (*cb)(const S
005f360: 534c 202a 7373 6c2c 696e 7420 7479 7065  SL *ssl,int type
005f370: 2c69 6e74 2076 616c 2929 3b0a 766f 6964  ,int val));.void
005f380: 2028 2a53 534c 5f67 6574 5f69 6e66 6f5f   (*SSL_get_info_
005f390: 6361 6c6c 6261 636b 2863 6f6e 7374 2053  callback(const S
005f3a0: 534c 202a 7373 6c29 2928 636f 6e73 7420  SL *ssl))(const 
005f3b0: 5353 4c20 2a73 736c 2c69 6e74 2074 7970  SSL *ssl,int typ
005f3c0: 652c 696e 7420 7661 6c29 3b0a 696e 7420  e,int val);.int 
005f3d0: 5353 4c5f 7374 6174 6528 636f 6e73 7420  SSL_state(const 
005f3e0: 5353 4c20 2a73 736c 293b 0a76 6f69 6420  SSL *ssl);.void 
005f3f0: 5353 4c5f 7365 745f 7374 6174 6528 5353  SSL_set_state(SS
005f400: 4c20 2a73 736c 2c20 696e 7420 7374 6174  L *ssl, int stat
005f410: 6529 3b0a 0a76 6f69 6420 5353 4c5f 7365  e);..void SSL_se
005f420: 745f 7665 7269 6679 5f72 6573 756c 7428  t_verify_result(
005f430: 5353 4c20 2a73 736c 2c6c 6f6e 6720 7629  SSL *ssl,long v)
005f440: 3b0a 6c6f 6e67 2053 534c 5f67 6574 5f76  ;.long SSL_get_v
005f450: 6572 6966 795f 7265 7375 6c74 2863 6f6e  erify_result(con
005f460: 7374 2053 534c 202a 7373 6c29 3b0a 0a69  st SSL *ssl);..i
005f470: 6e74 2053 534c 5f73 6574 5f65 785f 6461  nt SSL_set_ex_da
005f480: 7461 2853 534c 202a 7373 6c2c 696e 7420  ta(SSL *ssl,int 
005f490: 6964 782c 766f 6964 202a 6461 7461 293b  idx,void *data);
005f4a0: 0a76 6f69 6420 2a53 534c 5f67 6574 5f65  .void *SSL_get_e
005f4b0: 785f 6461 7461 2863 6f6e 7374 2053 534c  x_data(const SSL
005f4c0: 202a 7373 6c2c 696e 7420 6964 7829 3b0a   *ssl,int idx);.
005f4d0: 696e 7420 5353 4c5f 6765 745f 6578 5f6e  int SSL_get_ex_n
005f4e0: 6577 5f69 6e64 6578 286c 6f6e 6720 6172  ew_index(long ar
005f4f0: 676c 2c20 766f 6964 202a 6172 6770 2c20  gl, void *argp, 
005f500: 4352 5950 544f 5f45 585f 6e65 7720 2a6e  CRYPTO_EX_new *n
005f510: 6577 5f66 756e 632c 0a20 4352 5950 544f  ew_func,. CRYPTO
005f520: 5f45 585f 6475 7020 2a64 7570 5f66 756e  _EX_dup *dup_fun
005f530: 632c 2043 5259 5054 4f5f 4558 5f66 7265  c, CRYPTO_EX_fre
005f540: 6520 2a66 7265 655f 6675 6e63 293b 0a0a  e *free_func);..
005f550: 696e 7420 5353 4c5f 5345 5353 494f 4e5f  int SSL_SESSION_
005f560: 7365 745f 6578 5f64 6174 6128 5353 4c5f  set_ex_data(SSL_
005f570: 5345 5353 494f 4e20 2a73 732c 696e 7420  SESSION *ss,int 
005f580: 6964 782c 766f 6964 202a 6461 7461 293b  idx,void *data);
005f590: 0a76 6f69 6420 2a53 534c 5f53 4553 5349  .void *SSL_SESSI
005f5a0: 4f4e 5f67 6574 5f65 785f 6461 7461 2863  ON_get_ex_data(c
005f5b0: 6f6e 7374 2053 534c 5f53 4553 5349 4f4e  onst SSL_SESSION
005f5c0: 202a 7373 2c69 6e74 2069 6478 293b 0a69   *ss,int idx);.i
005f5d0: 6e74 2053 534c 5f53 4553 5349 4f4e 5f67  nt SSL_SESSION_g
005f5e0: 6574 5f65 785f 6e65 775f 696e 6465 7828  et_ex_new_index(
005f5f0: 6c6f 6e67 2061 7267 6c2c 2076 6f69 6420  long argl, void 
005f600: 2a61 7267 702c 2043 5259 5054 4f5f 4558  *argp, CRYPTO_EX
005f610: 5f6e 6577 202a 6e65 775f 6675 6e63 2c0a  _new *new_func,.
005f620: 2043 5259 5054 4f5f 4558 5f64 7570 202a   CRYPTO_EX_dup *
005f630: 6475 705f 6675 6e63 2c20 4352 5950 544f  dup_func, CRYPTO
005f640: 5f45 585f 6672 6565 202a 6672 6565 5f66  _EX_free *free_f
005f650: 756e 6329 3b0a 0a69 6e74 2053 534c 5f43  unc);..int SSL_C
005f660: 5458 5f73 6574 5f65 785f 6461 7461 2853  TX_set_ex_data(S
005f670: 534c 5f43 5458 202a 7373 6c2c 696e 7420  SL_CTX *ssl,int 
005f680: 6964 782c 766f 6964 202a 6461 7461 293b  idx,void *data);
005f690: 0a76 6f69 6420 2a53 534c 5f43 5458 5f67  .void *SSL_CTX_g
005f6a0: 6574 5f65 785f 6461 7461 2863 6f6e 7374  et_ex_data(const
005f6b0: 2053 534c 5f43 5458 202a 7373 6c2c 696e   SSL_CTX *ssl,in
005f6c0: 7420 6964 7829 3b0a 696e 7420 5353 4c5f  t idx);.int SSL_
005f6d0: 4354 585f 6765 745f 6578 5f6e 6577 5f69  CTX_get_ex_new_i
005f6e0: 6e64 6578 286c 6f6e 6720 6172 676c 2c20  ndex(long argl, 
005f6f0: 766f 6964 202a 6172 6770 2c20 4352 5950  void *argp, CRYP
005f700: 544f 5f45 585f 6e65 7720 2a6e 6577 5f66  TO_EX_new *new_f
005f710: 756e 632c 0a20 4352 5950 544f 5f45 585f  unc,. CRYPTO_EX_
005f720: 6475 7020 2a64 7570 5f66 756e 632c 2043  dup *dup_func, C
005f730: 5259 5054 4f5f 4558 5f66 7265 6520 2a66  RYPTO_EX_free *f
005f740: 7265 655f 6675 6e63 293b 0a0a 696e 7420  ree_func);..int 
005f750: 5353 4c5f 6765 745f 6578 5f64 6174 615f  SSL_get_ex_data_
005f760: 5835 3039 5f53 544f 5245 5f43 5458 5f69  X509_STORE_CTX_i
005f770: 6478 2876 6f69 6420 293b 0a23 2031 3934  dx(void );.# 194
005f780: 3420 222f 7573 722f 696e 636c 7564 652f  4 "/usr/include/
005f790: 6f70 656e 7373 6c2f 7373 6c2e 6822 2033  openssl/ssl.h" 3
005f7a0: 2034 0a76 6f69 6420 5353 4c5f 4354 585f   4.void SSL_CTX_
005f7b0: 7365 745f 746d 705f 7273 615f 6361 6c6c  set_tmp_rsa_call
005f7c0: 6261 636b 2853 534c 5f43 5458 202a 6374  back(SSL_CTX *ct
005f7d0: 782c 0a20 2020 2020 2052 5341 202a 282a  x,.      RSA *(*
005f7e0: 6362 2928 5353 4c20 2a73 736c 2c69 6e74  cb)(SSL *ssl,int
005f7f0: 2069 735f 6578 706f 7274 2c0a 2020 2020   is_export,.    
005f800: 2020 2020 2020 696e 7420 6b65 796c 656e        int keylen
005f810: 6774 6829 293b 0a0a 766f 6964 2053 534c  gth));..void SSL
005f820: 5f73 6574 5f74 6d70 5f72 7361 5f63 616c  _set_tmp_rsa_cal
005f830: 6c62 6163 6b28 5353 4c20 2a73 736c 2c0a  lback(SSL *ssl,.
005f840: 2020 2020 2020 5253 4120 2a28 2a63 6229        RSA *(*cb)
005f850: 2853 534c 202a 7373 6c2c 696e 7420 6973  (SSL *ssl,int is
005f860: 5f65 7870 6f72 742c 0a20 2020 2020 2020  _export,.       
005f870: 2020 2069 6e74 206b 6579 6c65 6e67 7468     int keylength
005f880: 2929 3b0a 0a0a 766f 6964 2053 534c 5f43  ));...void SSL_C
005f890: 5458 5f73 6574 5f74 6d70 5f64 685f 6361  TX_set_tmp_dh_ca
005f8a0: 6c6c 6261 636b 2853 534c 5f43 5458 202a  llback(SSL_CTX *
005f8b0: 6374 782c 0a20 2020 2020 4448 202a 282a  ctx,.     DH *(*
005f8c0: 6468 2928 5353 4c20 2a73 736c 2c69 6e74  dh)(SSL *ssl,int
005f8d0: 2069 735f 6578 706f 7274 2c0a 2020 2020   is_export,.    
005f8e0: 2020 2020 696e 7420 6b65 796c 656e 6774      int keylengt
005f8f0: 6829 293b 0a76 6f69 6420 5353 4c5f 7365  h));.void SSL_se
005f900: 745f 746d 705f 6468 5f63 616c 6c62 6163  t_tmp_dh_callbac
005f910: 6b28 5353 4c20 2a73 736c 2c0a 2020 2020  k(SSL *ssl,.    
005f920: 2044 4820 2a28 2a64 6829 2853 534c 202a   DH *(*dh)(SSL *
005f930: 7373 6c2c 696e 7420 6973 5f65 7870 6f72  ssl,int is_expor
005f940: 742c 0a20 2020 2020 2020 2069 6e74 206b  t,.        int k
005f950: 6579 6c65 6e67 7468 2929 3b0a 0a0a 766f  eylength));...vo
005f960: 6964 2053 534c 5f43 5458 5f73 6574 5f74  id SSL_CTX_set_t
005f970: 6d70 5f65 6364 685f 6361 6c6c 6261 636b  mp_ecdh_callback
005f980: 2853 534c 5f43 5458 202a 6374 782c 0a20  (SSL_CTX *ctx,. 
005f990: 2020 2020 4543 5f4b 4559 202a 282a 6563      EC_KEY *(*ec
005f9a0: 6468 2928 5353 4c20 2a73 736c 2c69 6e74  dh)(SSL *ssl,int
005f9b0: 2069 735f 6578 706f 7274 2c0a 2020 2020   is_export,.    
005f9c0: 2020 2020 696e 7420 6b65 796c 656e 6774      int keylengt
005f9d0: 6829 293b 0a76 6f69 6420 5353 4c5f 7365  h));.void SSL_se
005f9e0: 745f 746d 705f 6563 6468 5f63 616c 6c62  t_tmp_ecdh_callb
005f9f0: 6163 6b28 5353 4c20 2a73 736c 2c0a 2020  ack(SSL *ssl,.  
005fa00: 2020 2045 435f 4b45 5920 2a28 2a65 6364     EC_KEY *(*ecd
005fa10: 6829 2853 534c 202a 7373 6c2c 696e 7420  h)(SSL *ssl,int 
005fa20: 6973 5f65 7870 6f72 742c 0a20 2020 2020  is_export,.     
005fa30: 2020 2069 6e74 206b 6579 6c65 6e67 7468     int keylength
005fa40: 2929 3b0a 0a0a 0a63 6f6e 7374 2043 4f4d  ));....const COM
005fa50: 505f 4d45 5448 4f44 202a 5353 4c5f 6765  P_METHOD *SSL_ge
005fa60: 745f 6375 7272 656e 745f 636f 6d70 7265  t_current_compre
005fa70: 7373 696f 6e28 5353 4c20 2a73 293b 0a63  ssion(SSL *s);.c
005fa80: 6f6e 7374 2043 4f4d 505f 4d45 5448 4f44  onst COMP_METHOD
005fa90: 202a 5353 4c5f 6765 745f 6375 7272 656e   *SSL_get_curren
005faa0: 745f 6578 7061 6e73 696f 6e28 5353 4c20  t_expansion(SSL 
005fab0: 2a73 293b 0a63 6f6e 7374 2063 6861 7220  *s);.const char 
005fac0: 2a53 534c 5f43 4f4d 505f 6765 745f 6e61  *SSL_COMP_get_na
005fad0: 6d65 2863 6f6e 7374 2043 4f4d 505f 4d45  me(const COMP_ME
005fae0: 5448 4f44 202a 636f 6d70 293b 0a73 7472  THOD *comp);.str
005faf0: 7563 7420 7374 6163 6b5f 7374 5f53 534c  uct stack_st_SSL
005fb00: 5f43 4f4d 5020 2a53 534c 5f43 4f4d 505f  _COMP *SSL_COMP_
005fb10: 6765 745f 636f 6d70 7265 7373 696f 6e5f  get_compression_
005fb20: 6d65 7468 6f64 7328 766f 6964 293b 0a69  methods(void);.i
005fb30: 6e74 2053 534c 5f43 4f4d 505f 6164 645f  nt SSL_COMP_add_
005fb40: 636f 6d70 7265 7373 696f 6e5f 6d65 7468  compression_meth
005fb50: 6f64 2869 6e74 2069 642c 434f 4d50 5f4d  od(int id,COMP_M
005fb60: 4554 484f 4420 2a63 6d29 3b0a 2320 3139  ETHOD *cm);.# 19
005fb70: 3834 2022 2f75 7372 2f69 6e63 6c75 6465  84 "/usr/include
005fb80: 2f6f 7065 6e73 736c 2f73 736c 2e68 2220  /openssl/ssl.h" 
005fb90: 3320 340a 696e 7420 5353 4c5f 7365 745f  3 4.int SSL_set_
005fba0: 7365 7373 696f 6e5f 7469 636b 6574 5f65  session_ticket_e
005fbb0: 7874 2853 534c 202a 732c 2076 6f69 6420  xt(SSL *s, void 
005fbc0: 2a65 7874 5f64 6174 612c 2069 6e74 2065  *ext_data, int e
005fbd0: 7874 5f6c 656e 293b 0a0a 696e 7420 5353  xt_len);..int SS
005fbe0: 4c5f 7365 745f 7365 7373 696f 6e5f 7469  L_set_session_ti
005fbf0: 636b 6574 5f65 7874 5f63 6228 5353 4c20  cket_ext_cb(SSL 
005fc00: 2a73 2c20 746c 735f 7365 7373 696f 6e5f  *s, tls_session_
005fc10: 7469 636b 6574 5f65 7874 5f63 625f 666e  ticket_ext_cb_fn
005fc20: 2063 622c 0a20 2020 2020 2076 6f69 6420   cb,.      void 
005fc30: 2a61 7267 293b 0a0a 0a69 6e74 2053 534c  *arg);...int SSL
005fc40: 5f73 6574 5f73 6573 7369 6f6e 5f73 6563  _set_session_sec
005fc50: 7265 745f 6362 2853 534c 202a 732c 2074  ret_cb(SSL *s, t
005fc60: 6c73 5f73 6573 7369 6f6e 5f73 6563 7265  ls_session_secre
005fc70: 745f 6362 5f66 6e20 746c 735f 7365 7373  t_cb_fn tls_sess
005fc80: 696f 6e5f 7365 6372 6574 5f63 622c 2076  ion_secret_cb, v
005fc90: 6f69 6420 2a61 7267 293b 0a0a 766f 6964  oid *arg);..void
005fca0: 2053 534c 5f73 6574 5f64 6562 7567 2853   SSL_set_debug(S
005fcb0: 534c 202a 732c 2069 6e74 2064 6562 7567  SL *s, int debug
005fcc0: 293b 0a69 6e74 2053 534c 5f63 6163 6865  );.int SSL_cache
005fcd0: 5f68 6974 2853 534c 202a 7329 3b0a 0a0a  _hit(SSL *s);...
005fce0: 0a0a 0a76 6f69 6420 4552 525f 6c6f 6164  ...void ERR_load
005fcf0: 5f53 534c 5f73 7472 696e 6773 2876 6f69  _SSL_strings(voi
005fd00: 6429 3b0a 2320 3136 3620 2273 736c 5f6c  d);.# 166 "ssl_l
005fd10: 6f63 6c2e 6822 2032 0a23 2034 3830 2022  ocl.h" 2.# 480 "
005fd20: 7373 6c5f 6c6f 636c 2e68 220a 7479 7065  ssl_locl.h".type
005fd30: 6465 6620 7374 7275 6374 2063 6572 745f  def struct cert_
005fd40: 706b 6579 5f73 740a 207b 0a20 5835 3039  pkey_st. {. X509
005fd50: 202a 7835 3039 3b0a 2045 5650 5f50 4b45   *x509;. EVP_PKE
005fd60: 5920 2a70 7269 7661 7465 6b65 793b 0a0a  Y *privatekey;..
005fd70: 2063 6f6e 7374 2045 5650 5f4d 4420 2a64   const EVP_MD *d
005fd80: 6967 6573 743b 0a20 7d20 4345 5254 5f50  igest;. } CERT_P
005fd90: 4b45 593b 0a0a 7479 7065 6465 6620 7374  KEY;..typedef st
005fda0: 7275 6374 2063 6572 745f 7374 0a20 7b0a  ruct cert_st. {.
005fdb0: 0a20 4345 5254 5f50 4b45 5920 2a6b 6579  . CERT_PKEY *key
005fdc0: 3b0a 0a0a 0a0a 0a20 696e 7420 7661 6c69  ;...... int vali
005fdd0: 643b 0a20 756e 7369 676e 6564 206c 6f6e  d;. unsigned lon
005fde0: 6720 6d61 736b 5f6b 3b0a 2075 6e73 6967  g mask_k;. unsig
005fdf0: 6e65 6420 6c6f 6e67 206d 6173 6b5f 613b  ned long mask_a;
005fe00: 0a20 756e 7369 676e 6564 206c 6f6e 6720  . unsigned long 
005fe10: 6578 706f 7274 5f6d 6173 6b5f 6b3b 0a20  export_mask_k;. 
005fe20: 756e 7369 676e 6564 206c 6f6e 6720 6578  unsigned long ex
005fe30: 706f 7274 5f6d 6173 6b5f 613b 0a0a 2052  port_mask_a;.. R
005fe40: 5341 202a 7273 615f 746d 703b 0a20 5253  SA *rsa_tmp;. RS
005fe50: 4120 2a28 2a72 7361 5f74 6d70 5f63 6229  A *(*rsa_tmp_cb)
005fe60: 2853 534c 202a 7373 6c2c 696e 7420 6973  (SSL *ssl,int is
005fe70: 5f65 7870 6f72 742c 696e 7420 6b65 7973  _export,int keys
005fe80: 697a 6529 3b0a 0a0a 2044 4820 2a64 685f  ize);... DH *dh_
005fe90: 746d 703b 0a20 4448 202a 282a 6468 5f74  tmp;. DH *(*dh_t
005fea0: 6d70 5f63 6229 2853 534c 202a 7373 6c2c  mp_cb)(SSL *ssl,
005feb0: 696e 7420 6973 5f65 7870 6f72 742c 696e  int is_export,in
005fec0: 7420 6b65 7973 697a 6529 3b0a 0a0a 2045  t keysize);... E
005fed0: 435f 4b45 5920 2a65 6364 685f 746d 703b  C_KEY *ecdh_tmp;
005fee0: 0a0a 2045 435f 4b45 5920 2a28 2a65 6364  .. EC_KEY *(*ecd
005fef0: 685f 746d 705f 6362 2928 5353 4c20 2a73  h_tmp_cb)(SSL *s
005ff00: 736c 2c69 6e74 2069 735f 6578 706f 7274  sl,int is_export
005ff10: 2c69 6e74 206b 6579 7369 7a65 293b 0a0a  ,int keysize);..
005ff20: 0a20 4345 5254 5f50 4b45 5920 706b 6579  . CERT_PKEY pkey
005ff30: 735b 385d 3b0a 0a20 696e 7420 7265 6665  s[8];.. int refe
005ff40: 7265 6e63 6573 3b0a 207d 2043 4552 543b  rences;. } CERT;
005ff50: 0a0a 0a74 7970 6564 6566 2073 7472 7563  ...typedef struc
005ff60: 7420 7365 7373 5f63 6572 745f 7374 0a20  t sess_cert_st. 
005ff70: 7b0a 2073 7472 7563 7420 7374 6163 6b5f  {. struct stack_
005ff80: 7374 5f58 3530 3920 2a63 6572 745f 6368  st_X509 *cert_ch
005ff90: 6169 6e3b 0a0a 0a20 696e 7420 7065 6572  ain;... int peer
005ffa0: 5f63 6572 745f 7479 7065 3b0a 0a20 4345  _cert_type;.. CE
005ffb0: 5254 5f50 4b45 5920 2a70 6565 725f 6b65  RT_PKEY *peer_ke
005ffc0: 793b 0a20 4345 5254 5f50 4b45 5920 7065  y;. CERT_PKEY pe
005ffd0: 6572 5f70 6b65 7973 5b38 5d3b 0a0a 0a0a  er_pkeys[8];....
005ffe0: 0a20 5253 4120 2a70 6565 725f 7273 615f  . RSA *peer_rsa_
005fff0: 746d 703b 0a0a 0a20 4448 202a 7065 6572  tmp;... DH *peer
0060000: 5f64 685f 746d 703b 0a0a 0a20 4543 5f4b  _dh_tmp;... EC_K
0060010: 4559 202a 7065 6572 5f65 6364 685f 746d  EY *peer_ecdh_tm
0060020: 703b 0a0a 0a20 696e 7420 7265 6665 7265  p;... int refere
0060030: 6e63 6573 3b0a 207d 2053 4553 535f 4345  nces;. } SESS_CE
0060040: 5254 3b0a 2320 3536 3820 2273 736c 5f6c  RT;.# 568 "ssl_l
0060050: 6f63 6c2e 6822 0a74 7970 6564 6566 2073  ocl.h".typedef s
0060060: 7472 7563 7420 7373 6c33 5f65 6e63 5f6d  truct ssl3_enc_m
0060070: 6574 686f 640a 207b 0a20 696e 7420 282a  ethod. {. int (*
0060080: 656e 6329 2853 534c 202a 2c20 696e 7429  enc)(SSL *, int)
0060090: 3b0a 2069 6e74 2028 2a6d 6163 2928 5353  ;. int (*mac)(SS
00600a0: 4c20 2a2c 2075 6e73 6967 6e65 6420 6368  L *, unsigned ch
00600b0: 6172 202a 2c20 696e 7429 3b0a 2069 6e74  ar *, int);. int
00600c0: 2028 2a73 6574 7570 5f6b 6579 5f62 6c6f   (*setup_key_blo
00600d0: 636b 2928 5353 4c20 2a29 3b0a 2069 6e74  ck)(SSL *);. int
00600e0: 2028 2a67 656e 6572 6174 655f 6d61 7374   (*generate_mast
00600f0: 6572 5f73 6563 7265 7429 2853 534c 202a  er_secret)(SSL *
0060100: 2c20 756e 7369 676e 6564 2063 6861 7220  , unsigned char 
0060110: 2a2c 2075 6e73 6967 6e65 6420 6368 6172  *, unsigned char
0060120: 202a 2c20 696e 7429 3b0a 2069 6e74 2028   *, int);. int (
0060130: 2a63 6861 6e67 655f 6369 7068 6572 5f73  *change_cipher_s
0060140: 7461 7465 2928 5353 4c20 2a2c 2069 6e74  tate)(SSL *, int
0060150: 293b 0a20 696e 7420 282a 6669 6e61 6c5f  );. int (*final_
0060160: 6669 6e69 7368 5f6d 6163 2928 5353 4c20  finish_mac)(SSL 
0060170: 2a2c 2063 6f6e 7374 2063 6861 7220 2a2c  *, const char *,
0060180: 2069 6e74 2c20 756e 7369 676e 6564 2063   int, unsigned c
0060190: 6861 7220 2a29 3b0a 2069 6e74 2066 696e  har *);. int fin
00601a0: 6973 685f 6d61 635f 6c65 6e67 7468 3b0a  ish_mac_length;.
00601b0: 2069 6e74 2028 2a63 6572 745f 7665 7269   int (*cert_veri
00601c0: 6679 5f6d 6163 2928 5353 4c20 2a2c 2069  fy_mac)(SSL *, i
00601d0: 6e74 2c20 756e 7369 676e 6564 2063 6861  nt, unsigned cha
00601e0: 7220 2a29 3b0a 2063 6f6e 7374 2063 6861  r *);. const cha
00601f0: 7220 2a63 6c69 656e 745f 6669 6e69 7368  r *client_finish
0060200: 6564 5f6c 6162 656c 3b0a 2069 6e74 2063  ed_label;. int c
0060210: 6c69 656e 745f 6669 6e69 7368 6564 5f6c  lient_finished_l
0060220: 6162 656c 5f6c 656e 3b0a 2063 6f6e 7374  abel_len;. const
0060230: 2063 6861 7220 2a73 6572 7665 725f 6669   char *server_fi
0060240: 6e69 7368 6564 5f6c 6162 656c 3b0a 2069  nished_label;. i
0060250: 6e74 2073 6572 7665 725f 6669 6e69 7368  nt server_finish
0060260: 6564 5f6c 6162 656c 5f6c 656e 3b0a 2069  ed_label_len;. i
0060270: 6e74 2028 2a61 6c65 7274 5f76 616c 7565  nt (*alert_value
0060280: 2928 696e 7429 3b0a 2069 6e74 2028 2a65  )(int);. int (*e
0060290: 7870 6f72 745f 6b65 7969 6e67 5f6d 6174  xport_keying_mat
00602a0: 6572 6961 6c29 2853 534c 202a 2c20 756e  erial)(SSL *, un
00602b0: 7369 676e 6564 2063 6861 7220 2a2c 2073  signed char *, s
00602c0: 697a 655f 742c 0a20 2020 2020 2020 2020  ize_t,.         
00602d0: 2063 6f6e 7374 2063 6861 7220 2a2c 2073   const char *, s
00602e0: 697a 655f 742c 0a20 2020 2020 2020 2020  ize_t,.         
00602f0: 2063 6f6e 7374 2075 6e73 6967 6e65 6420   const unsigned 
0060300: 6368 6172 202a 2c20 7369 7a65 5f74 2c0a  char *, size_t,.
0060310: 2020 2020 2020 2020 2020 696e 7420 7573            int us
0060320: 655f 636f 6e74 6578 7429 3b0a 207d 2053  e_context);. } S
0060330: 534c 335f 454e 435f 4d45 5448 4f44 3b0a  SL3_ENC_METHOD;.
0060340: 0a0a 0a74 7970 6564 6566 2073 7472 7563  ...typedef struc
0060350: 7420 7373 6c33 5f63 6f6d 705f 7374 0a20  t ssl3_comp_st. 
0060360: 7b0a 2069 6e74 2063 6f6d 705f 6964 3b0a  {. int comp_id;.
0060370: 2063 6861 7220 2a6e 616d 653b 0a20 434f   char *name;. CO
0060380: 4d50 5f4d 4554 484f 4420 2a6d 6574 686f  MP_METHOD *metho
0060390: 643b 0a20 7d20 5353 4c33 5f43 4f4d 503b  d;. } SSL3_COMP;
00603a0: 0a0a 0a0a 7479 7065 6465 6620 7374 7275  ....typedef stru
00603b0: 6374 2073 736c 335f 6275 665f 6672 6565  ct ssl3_buf_free
00603c0: 6c69 7374 5f73 740a 207b 0a20 7369 7a65  list_st. {. size
00603d0: 5f74 2063 6875 6e6b 6c65 6e3b 0a20 756e  _t chunklen;. un
00603e0: 7369 676e 6564 2069 6e74 206c 656e 3b0a  signed int len;.
00603f0: 2073 7472 7563 7420 7373 6c33 5f62 7566   struct ssl3_buf
0060400: 5f66 7265 656c 6973 745f 656e 7472 795f  _freelist_entry_
0060410: 7374 202a 6865 6164 3b0a 207d 2053 534c  st *head;. } SSL
0060420: 335f 4255 465f 4652 4545 4c49 5354 3b0a  3_BUF_FREELIST;.
0060430: 0a74 7970 6564 6566 2073 7472 7563 7420  .typedef struct 
0060440: 7373 6c33 5f62 7566 5f66 7265 656c 6973  ssl3_buf_freelis
0060450: 745f 656e 7472 795f 7374 0a20 7b0a 2073  t_entry_st. {. s
0060460: 7472 7563 7420 7373 6c33 5f62 7566 5f66  truct ssl3_buf_f
0060470: 7265 656c 6973 745f 656e 7472 795f 7374  reelist_entry_st
0060480: 202a 6e65 7874 3b0a 207d 2053 534c 335f   *next;. } SSL3_
0060490: 4255 465f 4652 4545 4c49 5354 5f45 4e54  BUF_FREELIST_ENT
00604a0: 5259 3b0a 0a0a 6578 7465 726e 2053 534c  RY;...extern SSL
00604b0: 335f 454e 435f 4d45 5448 4f44 2073 736c  3_ENC_METHOD ssl
00604c0: 335f 756e 6465 665f 656e 635f 6d65 7468  3_undef_enc_meth
00604d0: 6f64 3b0a 6578 7465 726e 2063 6f6e 7374  od;.extern const
00604e0: 2053 534c 5f43 4950 4845 5220 7373 6c32   SSL_CIPHER ssl2
00604f0: 5f63 6970 6865 7273 5b5d 3b0a 6578 7465  _ciphers[];.exte
0060500: 726e 2053 534c 5f43 4950 4845 5220 7373  rn SSL_CIPHER ss
0060510: 6c33 5f63 6970 6865 7273 5b5d 3b0a 0a0a  l3_ciphers[];...
0060520: 5353 4c5f 4d45 5448 4f44 202a 7373 6c5f  SSL_METHOD *ssl_
0060530: 6261 645f 6d65 7468 6f64 2869 6e74 2076  bad_method(int v
0060540: 6572 293b 0a0a 6578 7465 726e 2053 534c  er);..extern SSL
0060550: 335f 454e 435f 4d45 5448 4f44 2054 4c53  3_ENC_METHOD TLS
0060560: 7631 5f65 6e63 5f64 6174 613b 0a65 7874  v1_enc_data;.ext
0060570: 6572 6e20 5353 4c33 5f45 4e43 5f4d 4554  ern SSL3_ENC_MET
0060580: 484f 4420 5353 4c76 335f 656e 635f 6461  HOD SSLv3_enc_da
0060590: 7461 3b0a 6578 7465 726e 2053 534c 335f  ta;.extern SSL3_
00605a0: 454e 435f 4d45 5448 4f44 2044 544c 5376  ENC_METHOD DTLSv
00605b0: 315f 656e 635f 6461 7461 3b0a 2320 3831  1_enc_data;.# 81
00605c0: 3220 2273 736c 5f6c 6f63 6c2e 6822 0a76  2 "ssl_locl.h".v
00605d0: 6f69 6420 7373 6c5f 636c 6561 725f 6369  oid ssl_clear_ci
00605e0: 7068 6572 5f63 7478 2853 534c 202a 7329  pher_ctx(SSL *s)
00605f0: 3b0a 696e 7420 7373 6c5f 636c 6561 725f  ;.int ssl_clear_
0060600: 6261 645f 7365 7373 696f 6e28 5353 4c20  bad_session(SSL 
0060610: 2a73 293b 0a43 4552 5420 2a73 736c 5f63  *s);.CERT *ssl_c
0060620: 6572 745f 6e65 7728 766f 6964 293b 0a43  ert_new(void);.C
0060630: 4552 5420 2a73 736c 5f63 6572 745f 6475  ERT *ssl_cert_du
0060640: 7028 4345 5254 202a 6365 7274 293b 0a69  p(CERT *cert);.i
0060650: 6e74 2073 736c 5f63 6572 745f 696e 7374  nt ssl_cert_inst
0060660: 2843 4552 5420 2a2a 6f29 3b0a 766f 6964  (CERT **o);.void
0060670: 2073 736c 5f63 6572 745f 6672 6565 2843   ssl_cert_free(C
0060680: 4552 5420 2a63 293b 0a53 4553 535f 4345  ERT *c);.SESS_CE
0060690: 5254 202a 7373 6c5f 7365 7373 5f63 6572  RT *ssl_sess_cer
00606a0: 745f 6e65 7728 766f 6964 293b 0a76 6f69  t_new(void);.voi
00606b0: 6420 7373 6c5f 7365 7373 5f63 6572 745f  d ssl_sess_cert_
00606c0: 6672 6565 2853 4553 535f 4345 5254 202a  free(SESS_CERT *
00606d0: 7363 293b 0a69 6e74 2073 736c 5f73 6574  sc);.int ssl_set
00606e0: 5f70 6565 725f 6365 7274 5f74 7970 6528  _peer_cert_type(
00606f0: 5345 5353 5f43 4552 5420 2a63 2c20 696e  SESS_CERT *c, in
0060700: 7420 7479 7065 293b 0a69 6e74 2073 736c  t type);.int ssl
0060710: 5f67 6574 5f6e 6577 5f73 6573 7369 6f6e  _get_new_session
0060720: 2853 534c 202a 732c 2069 6e74 2073 6573  (SSL *s, int ses
0060730: 7369 6f6e 293b 0a69 6e74 2073 736c 5f67  sion);.int ssl_g
0060740: 6574 5f70 7265 765f 7365 7373 696f 6e28  et_prev_session(
0060750: 5353 4c20 2a73 2c20 756e 7369 676e 6564  SSL *s, unsigned
0060760: 2063 6861 7220 2a73 6573 7369 6f6e 2c69   char *session,i
0060770: 6e74 206c 656e 2c20 636f 6e73 7420 756e  nt len, const un
0060780: 7369 676e 6564 2063 6861 7220 2a6c 696d  signed char *lim
0060790: 6974 293b 0a69 6e74 2073 736c 5f63 6970  it);.int ssl_cip
00607a0: 6865 725f 6964 5f63 6d70 2863 6f6e 7374  her_id_cmp(const
00607b0: 2053 534c 5f43 4950 4845 5220 2a61 2c63   SSL_CIPHER *a,c
00607c0: 6f6e 7374 2053 534c 5f43 4950 4845 5220  onst SSL_CIPHER 
00607d0: 2a62 293b 0a53 534c 5f43 4950 4845 5220  *b);.SSL_CIPHER 
00607e0: 2a20 4f42 4a5f 6273 6561 7263 685f 7373  * OBJ_bsearch_ss
00607f0: 6c5f 6369 7068 6572 5f69 6428 5353 4c5f  l_cipher_id(SSL_
0060800: 4349 5048 4552 202a 6b65 792c 2053 534c  CIPHER *key, SSL
0060810: 5f43 4950 4845 5220 636f 6e73 7420 2a62  _CIPHER const *b
0060820: 6173 652c 2069 6e74 206e 756d 290a 2020  ase, int num).  
0060830: 2020 2020 2020 2020 2020 2020 2020 2020                  
0060840: 2020 3b0a 696e 7420 7373 6c5f 6369 7068    ;.int ssl_ciph
0060850: 6572 5f70 7472 5f69 645f 636d 7028 636f  er_ptr_id_cmp(co
0060860: 6e73 7420 5353 4c5f 4349 5048 4552 202a  nst SSL_CIPHER *
0060870: 2063 6f6e 7374 202a 6170 2c0a 2020 2063   const *ap,.   c
0060880: 6f6e 7374 2053 534c 5f43 4950 4845 5220  onst SSL_CIPHER 
0060890: 2a20 636f 6e73 7420 2a62 7029 3b0a 7374  * const *bp);.st
00608a0: 7275 6374 2073 7461 636b 5f73 745f 5353  ruct stack_st_SS
00608b0: 4c5f 4349 5048 4552 202a 7373 6c5f 6279  L_CIPHER *ssl_by
00608c0: 7465 735f 746f 5f63 6970 6865 725f 6c69  tes_to_cipher_li
00608d0: 7374 2853 534c 202a 732c 756e 7369 676e  st(SSL *s,unsign
00608e0: 6564 2063 6861 7220 2a70 2c69 6e74 206e  ed char *p,int n
00608f0: 756d 2c0a 2020 2020 2020 2020 2020 2020  um,.            
0060900: 7374 7275 6374 2073 7461 636b 5f73 745f  struct stack_st_
0060910: 5353 4c5f 4349 5048 4552 202a 2a73 6b70  SSL_CIPHER **skp
0060920: 293b 0a69 6e74 2073 736c 5f63 6970 6865  );.int ssl_ciphe
0060930: 725f 6c69 7374 5f74 6f5f 6279 7465 7328  r_list_to_bytes(
0060940: 5353 4c20 2a73 2c73 7472 7563 7420 7374  SSL *s,struct st
0060950: 6163 6b5f 7374 5f53 534c 5f43 4950 4845  ack_st_SSL_CIPHE
0060960: 5220 2a73 6b2c 756e 7369 676e 6564 2063  R *sk,unsigned c
0060970: 6861 7220 2a70 2c0a 2020 2020 2020 2020  har *p,.        
0060980: 2020 2020 2020 2020 2020 2020 2020 2020                  
0060990: 2020 2020 2069 6e74 2028 2a70 7574 5f63       int (*put_c
00609a0: 6229 2863 6f6e 7374 2053 534c 5f43 4950  b)(const SSL_CIP
00609b0: 4845 5220 2a2c 2075 6e73 6967 6e65 6420  HER *, unsigned 
00609c0: 6368 6172 202a 2929 3b0a 7374 7275 6374  char *));.struct
00609d0: 2073 7461 636b 5f73 745f 5353 4c5f 4349   stack_st_SSL_CI
00609e0: 5048 4552 202a 7373 6c5f 6372 6561 7465  PHER *ssl_create
00609f0: 5f63 6970 6865 725f 6c69 7374 2863 6f6e  _cipher_list(con
0060a00: 7374 2053 534c 5f4d 4554 484f 4420 2a6d  st SSL_METHOD *m
0060a10: 6574 682c 0a20 2020 2020 2020 2020 2073  eth,.          s
0060a20: 7472 7563 7420 7374 6163 6b5f 7374 5f53  truct stack_st_S
0060a30: 534c 5f43 4950 4845 5220 2a2a 7072 6566  SL_CIPHER **pref
0060a40: 2c0a 2020 2020 2020 2020 2020 7374 7275  ,.          stru
0060a50: 6374 2073 7461 636b 5f73 745f 5353 4c5f  ct stack_st_SSL_
0060a60: 4349 5048 4552 202a 2a73 6f72 7465 642c  CIPHER **sorted,
0060a70: 0a20 2020 2020 2020 2020 2063 6f6e 7374  .          const
0060a80: 2063 6861 7220 2a72 756c 655f 7374 7229   char *rule_str)
0060a90: 3b0a 766f 6964 2073 736c 5f75 7064 6174  ;.void ssl_updat
0060aa0: 655f 6361 6368 6528 5353 4c20 2a73 2c20  e_cache(SSL *s, 
0060ab0: 696e 7420 6d6f 6465 293b 0a69 6e74 2073  int mode);.int s
0060ac0: 736c 5f63 6970 6865 725f 6765 745f 6576  sl_cipher_get_ev
0060ad0: 7028 636f 6e73 7420 5353 4c5f 5345 5353  p(const SSL_SESS
0060ae0: 494f 4e20 2a73 2c63 6f6e 7374 2045 5650  ION *s,const EVP
0060af0: 5f43 4950 4845 5220 2a2a 656e 632c 0a20  _CIPHER **enc,. 
0060b00: 2020 2020 2020 2020 636f 6e73 7420 4556          const EV
0060b10: 505f 4d44 202a 2a6d 642c 696e 7420 2a6d  P_MD **md,int *m
0060b20: 6163 5f70 6b65 795f 7479 7065 2c69 6e74  ac_pkey_type,int
0060b30: 202a 6d61 635f 7365 6372 6574 5f73 697a   *mac_secret_siz
0060b40: 652c 2053 534c 5f43 4f4d 5020 2a2a 636f  e, SSL_COMP **co
0060b50: 6d70 293b 0a69 6e74 2073 736c 5f67 6574  mp);.int ssl_get
0060b60: 5f68 616e 6473 6861 6b65 5f64 6967 6573  _handshake_diges
0060b70: 7428 696e 7420 692c 6c6f 6e67 202a 6d61  t(int i,long *ma
0060b80: 736b 2c63 6f6e 7374 2045 5650 5f4d 4420  sk,const EVP_MD 
0060b90: 2a2a 6d64 293b 0a69 6e74 2073 736c 5f76  **md);.int ssl_v
0060ba0: 6572 6966 795f 6365 7274 5f63 6861 696e  erify_cert_chain
0060bb0: 2853 534c 202a 732c 7374 7275 6374 2073  (SSL *s,struct s
0060bc0: 7461 636b 5f73 745f 5835 3039 202a 736b  tack_st_X509 *sk
0060bd0: 293b 0a69 6e74 2073 736c 5f75 6e64 6566  );.int ssl_undef
0060be0: 696e 6564 5f66 756e 6374 696f 6e28 5353  ined_function(SS
0060bf0: 4c20 2a73 293b 0a69 6e74 2073 736c 5f75  L *s);.int ssl_u
0060c00: 6e64 6566 696e 6564 5f76 6f69 645f 6675  ndefined_void_fu
0060c10: 6e63 7469 6f6e 2876 6f69 6429 3b0a 696e  nction(void);.in
0060c20: 7420 7373 6c5f 756e 6465 6669 6e65 645f  t ssl_undefined_
0060c30: 636f 6e73 745f 6675 6e63 7469 6f6e 2863  const_function(c
0060c40: 6f6e 7374 2053 534c 202a 7329 3b0a 4345  onst SSL *s);.CE
0060c50: 5254 5f50 4b45 5920 2a73 736c 5f67 6574  RT_PKEY *ssl_get
0060c60: 5f73 6572 7665 725f 7365 6e64 5f70 6b65  _server_send_pke
0060c70: 7928 636f 6e73 7420 5353 4c20 2a73 293b  y(const SSL *s);
0060c80: 0a58 3530 3920 2a73 736c 5f67 6574 5f73  .X509 *ssl_get_s
0060c90: 6572 7665 725f 7365 6e64 5f63 6572 7428  erver_send_cert(
0060ca0: 636f 6e73 7420 5353 4c20 2a29 3b0a 4556  const SSL *);.EV
0060cb0: 505f 504b 4559 202a 7373 6c5f 6765 745f  P_PKEY *ssl_get_
0060cc0: 7369 676e 5f70 6b65 7928 5353 4c20 2a73  sign_pkey(SSL *s
0060cd0: 2c63 6f6e 7374 2053 534c 5f43 4950 4845  ,const SSL_CIPHE
0060ce0: 5220 2a63 2c20 636f 6e73 7420 4556 505f  R *c, const EVP_
0060cf0: 4d44 202a 2a70 6d64 293b 0a69 6e74 2073  MD **pmd);.int s
0060d00: 736c 5f63 6572 745f 7479 7065 2858 3530  sl_cert_type(X50
0060d10: 3920 2a78 2c45 5650 5f50 4b45 5920 2a70  9 *x,EVP_PKEY *p
0060d20: 6b65 7929 3b0a 766f 6964 2073 736c 5f73  key);.void ssl_s
0060d30: 6574 5f63 6572 745f 6d61 736b 7328 4345  et_cert_masks(CE
0060d40: 5254 202a 632c 2063 6f6e 7374 2053 534c  RT *c, const SSL
0060d50: 5f43 4950 4845 5220 2a63 6970 6865 7229  _CIPHER *cipher)
0060d60: 3b0a 7374 7275 6374 2073 7461 636b 5f73  ;.struct stack_s
0060d70: 745f 5353 4c5f 4349 5048 4552 202a 7373  t_SSL_CIPHER *ss
0060d80: 6c5f 6765 745f 6369 7068 6572 735f 6279  l_get_ciphers_by
0060d90: 5f69 6428 5353 4c20 2a73 293b 0a69 6e74  _id(SSL *s);.int
0060da0: 2073 736c 5f76 6572 6966 795f 616c 6172   ssl_verify_alar
0060db0: 6d5f 7479 7065 286c 6f6e 6720 7479 7065  m_type(long type
0060dc0: 293b 0a76 6f69 6420 7373 6c5f 6c6f 6164  );.void ssl_load
0060dd0: 5f63 6970 6865 7273 2876 6f69 6429 3b0a  _ciphers(void);.
0060de0: 696e 7420 7373 6c5f 6669 6c6c 5f68 656c  int ssl_fill_hel
0060df0: 6c6f 5f72 616e 646f 6d28 5353 4c20 2a73  lo_random(SSL *s
0060e00: 2c20 696e 7420 7365 7276 6572 2c20 756e  , int server, un
0060e10: 7369 676e 6564 2063 6861 7220 2a66 6965  signed char *fie
0060e20: 6c64 2c20 696e 7420 6c65 6e29 3b0a 0a69  ld, int len);..i
0060e30: 6e74 2073 736c 325f 656e 635f 696e 6974  nt ssl2_enc_init
0060e40: 2853 534c 202a 732c 2069 6e74 2063 6c69  (SSL *s, int cli
0060e50: 656e 7429 3b0a 696e 7420 7373 6c32 5f67  ent);.int ssl2_g
0060e60: 656e 6572 6174 655f 6b65 795f 6d61 7465  enerate_key_mate
0060e70: 7269 616c 2853 534c 202a 7329 3b0a 766f  rial(SSL *s);.vo
0060e80: 6964 2073 736c 325f 656e 6328 5353 4c20  id ssl2_enc(SSL 
0060e90: 2a73 2c69 6e74 2073 656e 645f 6461 7461  *s,int send_data
0060ea0: 293b 0a76 6f69 6420 7373 6c32 5f6d 6163  );.void ssl2_mac
0060eb0: 2853 534c 202a 732c 756e 7369 676e 6564  (SSL *s,unsigned
0060ec0: 2063 6861 7220 2a6d 6163 2c69 6e74 2073   char *mac,int s
0060ed0: 656e 645f 6461 7461 293b 0a63 6f6e 7374  end_data);.const
0060ee0: 2053 534c 5f43 4950 4845 5220 2a73 736c   SSL_CIPHER *ssl
0060ef0: 325f 6765 745f 6369 7068 6572 5f62 795f  2_get_cipher_by_
0060f00: 6368 6172 2863 6f6e 7374 2075 6e73 6967  char(const unsig
0060f10: 6e65 6420 6368 6172 202a 7029 3b0a 696e  ned char *p);.in
0060f20: 7420 7373 6c32 5f70 7574 5f63 6970 6865  t ssl2_put_ciphe
0060f30: 725f 6279 5f63 6861 7228 636f 6e73 7420  r_by_char(const 
0060f40: 5353 4c5f 4349 5048 4552 202a 632c 756e  SSL_CIPHER *c,un
0060f50: 7369 676e 6564 2063 6861 7220 2a70 293b  signed char *p);
0060f60: 0a69 6e74 2073 736c 325f 7061 7274 5f72  .int ssl2_part_r
0060f70: 6561 6428 5353 4c20 2a73 2c20 756e 7369  ead(SSL *s, unsi
0060f80: 676e 6564 206c 6f6e 6720 662c 2069 6e74  gned long f, int
0060f90: 2069 293b 0a69 6e74 2073 736c 325f 646f   i);.int ssl2_do
0060fa0: 5f77 7269 7465 2853 534c 202a 7329 3b0a  _write(SSL *s);.
0060fb0: 696e 7420 7373 6c32 5f73 6574 5f63 6572  int ssl2_set_cer
0060fc0: 7469 6669 6361 7465 2853 534c 202a 732c  tificate(SSL *s,
0060fd0: 2069 6e74 2074 7970 652c 2069 6e74 206c   int type, int l
0060fe0: 656e 2c20 636f 6e73 7420 756e 7369 676e  en, const unsign
0060ff0: 6564 2063 6861 7220 2a64 6174 6129 3b0a  ed char *data);.
0061000: 766f 6964 2073 736c 325f 7265 7475 726e  void ssl2_return
0061010: 5f65 7272 6f72 2853 534c 202a 732c 696e  _error(SSL *s,in
0061020: 7420 7265 6173 6f6e 293b 0a76 6f69 6420  t reason);.void 
0061030: 7373 6c32 5f77 7269 7465 5f65 7272 6f72  ssl2_write_error
0061040: 2853 534c 202a 7329 3b0a 696e 7420 7373  (SSL *s);.int ss
0061050: 6c32 5f6e 756d 5f63 6970 6865 7273 2876  l2_num_ciphers(v
0061060: 6f69 6429 3b0a 636f 6e73 7420 5353 4c5f  oid);.const SSL_
0061070: 4349 5048 4552 202a 7373 6c32 5f67 6574  CIPHER *ssl2_get
0061080: 5f63 6970 6865 7228 756e 7369 676e 6564  _cipher(unsigned
0061090: 2069 6e74 2075 293b 0a69 6e74 2073 736c   int u);.int ssl
00610a0: 325f 6e65 7728 5353 4c20 2a73 293b 0a76  2_new(SSL *s);.v
00610b0: 6f69 6420 7373 6c32 5f66 7265 6528 5353  oid ssl2_free(SS
00610c0: 4c20 2a73 293b 0a69 6e74 2073 736c 325f  L *s);.int ssl2_
00610d0: 6163 6365 7074 2853 534c 202a 7329 3b0a  accept(SSL *s);.
00610e0: 696e 7420 7373 6c32 5f63 6f6e 6e65 6374  int ssl2_connect
00610f0: 2853 534c 202a 7329 3b0a 696e 7420 7373  (SSL *s);.int ss
0061100: 6c32 5f72 6561 6428 5353 4c20 2a73 2c20  l2_read(SSL *s, 
0061110: 766f 6964 202a 6275 662c 2069 6e74 206c  void *buf, int l
0061120: 656e 293b 0a69 6e74 2073 736c 325f 7065  en);.int ssl2_pe
0061130: 656b 2853 534c 202a 732c 2076 6f69 6420  ek(SSL *s, void 
0061140: 2a62 7566 2c20 696e 7420 6c65 6e29 3b0a  *buf, int len);.
0061150: 696e 7420 7373 6c32 5f77 7269 7465 2853  int ssl2_write(S
0061160: 534c 202a 732c 2063 6f6e 7374 2076 6f69  SL *s, const voi
0061170: 6420 2a62 7566 2c20 696e 7420 6c65 6e29  d *buf, int len)
0061180: 3b0a 696e 7420 7373 6c32 5f73 6875 7464  ;.int ssl2_shutd
0061190: 6f77 6e28 5353 4c20 2a73 293b 0a76 6f69  own(SSL *s);.voi
00611a0: 6420 7373 6c32 5f63 6c65 6172 2853 534c  d ssl2_clear(SSL
00611b0: 202a 7329 3b0a 6c6f 6e67 2073 736c 325f   *s);.long ssl2_
00611c0: 6374 726c 2853 534c 202a 732c 696e 7420  ctrl(SSL *s,int 
00611d0: 636d 642c 206c 6f6e 6720 6c61 7267 2c20  cmd, long larg, 
00611e0: 766f 6964 202a 7061 7267 293b 0a6c 6f6e  void *parg);.lon
00611f0: 6720 7373 6c32 5f63 7478 5f63 7472 6c28  g ssl2_ctx_ctrl(
0061200: 5353 4c5f 4354 5820 2a73 2c69 6e74 2063  SSL_CTX *s,int c
0061210: 6d64 2c20 6c6f 6e67 206c 6172 672c 2076  md, long larg, v
0061220: 6f69 6420 2a70 6172 6729 3b0a 6c6f 6e67  oid *parg);.long
0061230: 2073 736c 325f 6361 6c6c 6261 636b 5f63   ssl2_callback_c
0061240: 7472 6c28 5353 4c20 2a73 2c69 6e74 2063  trl(SSL *s,int c
0061250: 6d64 2c20 766f 6964 2028 2a66 7029 2876  md, void (*fp)(v
0061260: 6f69 6429 293b 0a6c 6f6e 6720 7373 6c32  oid));.long ssl2
0061270: 5f63 7478 5f63 616c 6c62 6163 6b5f 6374  _ctx_callback_ct
0061280: 726c 2853 534c 5f43 5458 202a 732c 696e  rl(SSL_CTX *s,in
0061290: 7420 636d 642c 2076 6f69 6420 282a 6670  t cmd, void (*fp
00612a0: 2928 766f 6964 2929 3b0a 696e 7420 7373  )(void));.int ss
00612b0: 6c32 5f70 656e 6469 6e67 2863 6f6e 7374  l2_pending(const
00612c0: 2053 534c 202a 7329 3b0a 6c6f 6e67 2073   SSL *s);.long s
00612d0: 736c 325f 6465 6661 756c 745f 7469 6d65  sl2_default_time
00612e0: 6f75 7428 766f 6964 2029 3b0a 0a63 6f6e  out(void );..con
00612f0: 7374 2053 534c 5f43 4950 4845 5220 2a73  st SSL_CIPHER *s
0061300: 736c 335f 6765 745f 6369 7068 6572 5f62  sl3_get_cipher_b
0061310: 795f 6368 6172 2863 6f6e 7374 2075 6e73  y_char(const uns
0061320: 6967 6e65 6420 6368 6172 202a 7029 3b0a  igned char *p);.
0061330: 696e 7420 7373 6c33 5f70 7574 5f63 6970  int ssl3_put_cip
0061340: 6865 725f 6279 5f63 6861 7228 636f 6e73  her_by_char(cons
0061350: 7420 5353 4c5f 4349 5048 4552 202a 632c  t SSL_CIPHER *c,
0061360: 756e 7369 676e 6564 2063 6861 7220 2a70  unsigned char *p
0061370: 293b 0a76 6f69 6420 7373 6c33 5f69 6e69  );.void ssl3_ini
0061380: 745f 6669 6e69 7368 6564 5f6d 6163 2853  t_finished_mac(S
0061390: 534c 202a 7329 3b0a 696e 7420 7373 6c33  SL *s);.int ssl3
00613a0: 5f73 656e 645f 7365 7276 6572 5f63 6572  _send_server_cer
00613b0: 7469 6669 6361 7465 2853 534c 202a 7329  tificate(SSL *s)
00613c0: 3b0a 696e 7420 7373 6c33 5f73 656e 645f  ;.int ssl3_send_
00613d0: 6e65 7773 6573 7369 6f6e 5f74 6963 6b65  newsession_ticke
00613e0: 7428 5353 4c20 2a73 293b 0a69 6e74 2073  t(SSL *s);.int s
00613f0: 736c 335f 7365 6e64 5f63 6572 745f 7374  sl3_send_cert_st
0061400: 6174 7573 2853 534c 202a 7329 3b0a 696e  atus(SSL *s);.in
0061410: 7420 7373 6c33 5f67 6574 5f66 696e 6973  t ssl3_get_finis
0061420: 6865 6428 5353 4c20 2a73 2c69 6e74 2073  hed(SSL *s,int s
0061430: 7461 7465 5f61 2c69 6e74 2073 7461 7465  tate_a,int state
0061440: 5f62 293b 0a69 6e74 2073 736c 335f 7365  _b);.int ssl3_se
0061450: 7475 705f 6b65 795f 626c 6f63 6b28 5353  tup_key_block(SS
0061460: 4c20 2a73 293b 0a69 6e74 2073 736c 335f  L *s);.int ssl3_
0061470: 7365 6e64 5f63 6861 6e67 655f 6369 7068  send_change_ciph
0061480: 6572 5f73 7065 6328 5353 4c20 2a73 2c69  er_spec(SSL *s,i
0061490: 6e74 2073 7461 7465 5f61 2c69 6e74 2073  nt state_a,int s
00614a0: 7461 7465 5f62 293b 0a69 6e74 2073 736c  tate_b);.int ssl
00614b0: 335f 6368 616e 6765 5f63 6970 6865 725f  3_change_cipher_
00614c0: 7374 6174 6528 5353 4c20 2a73 2c69 6e74  state(SSL *s,int
00614d0: 2077 6869 6368 293b 0a76 6f69 6420 7373   which);.void ss
00614e0: 6c33 5f63 6c65 616e 7570 5f6b 6579 5f62  l3_cleanup_key_b
00614f0: 6c6f 636b 2853 534c 202a 7329 3b0a 696e  lock(SSL *s);.in
0061500: 7420 7373 6c33 5f64 6f5f 7772 6974 6528  t ssl3_do_write(
0061510: 5353 4c20 2a73 2c69 6e74 2074 7970 6529  SSL *s,int type)
0061520: 3b0a 696e 7420 7373 6c33 5f73 656e 645f  ;.int ssl3_send_
0061530: 616c 6572 7428 5353 4c20 2a73 2c69 6e74  alert(SSL *s,int
0061540: 206c 6576 656c 2c20 696e 7420 6465 7363   level, int desc
0061550: 293b 0a69 6e74 2073 736c 335f 6765 6e65  );.int ssl3_gene
0061560: 7261 7465 5f6d 6173 7465 725f 7365 6372  rate_master_secr
0061570: 6574 2853 534c 202a 732c 2075 6e73 6967  et(SSL *s, unsig
0061580: 6e65 6420 6368 6172 202a 6f75 742c 0a20  ned char *out,. 
0061590: 756e 7369 676e 6564 2063 6861 7220 2a70  unsigned char *p
00615a0: 2c20 696e 7420 6c65 6e29 3b0a 696e 7420  , int len);.int 
00615b0: 7373 6c33 5f67 6574 5f72 6571 5f63 6572  ssl3_get_req_cer
00615c0: 745f 7479 7065 2853 534c 202a 732c 756e  t_type(SSL *s,un
00615d0: 7369 676e 6564 2063 6861 7220 2a70 293b  signed char *p);
00615e0: 0a6c 6f6e 6720 7373 6c33 5f67 6574 5f6d  .long ssl3_get_m
00615f0: 6573 7361 6765 2853 534c 202a 732c 2069  essage(SSL *s, i
0061600: 6e74 2073 7431 2c20 696e 7420 7374 6e2c  nt st1, int stn,
0061610: 2069 6e74 206d 742c 206c 6f6e 6720 6d61   int mt, long ma
0061620: 782c 2069 6e74 202a 6f6b 293b 0a69 6e74  x, int *ok);.int
0061630: 2073 736c 335f 7365 6e64 5f66 696e 6973   ssl3_send_finis
0061640: 6865 6428 5353 4c20 2a73 2c20 696e 7420  hed(SSL *s, int 
0061650: 612c 2069 6e74 2062 2c20 636f 6e73 7420  a, int b, const 
0061660: 6368 6172 202a 7365 6e64 6572 2c69 6e74  char *sender,int
0061670: 2073 6c65 6e29 3b0a 696e 7420 7373 6c33   slen);.int ssl3
0061680: 5f6e 756d 5f63 6970 6865 7273 2876 6f69  _num_ciphers(voi
0061690: 6429 3b0a 636f 6e73 7420 5353 4c5f 4349  d);.const SSL_CI
00616a0: 5048 4552 202a 7373 6c33 5f67 6574 5f63  PHER *ssl3_get_c
00616b0: 6970 6865 7228 756e 7369 676e 6564 2069  ipher(unsigned i
00616c0: 6e74 2075 293b 0a69 6e74 2073 736c 335f  nt u);.int ssl3_
00616d0: 7265 6e65 676f 7469 6174 6528 5353 4c20  renegotiate(SSL 
00616e0: 2a73 736c 293b 0a69 6e74 2073 736c 335f  *ssl);.int ssl3_
00616f0: 7265 6e65 676f 7469 6174 655f 6368 6563  renegotiate_chec
0061700: 6b28 5353 4c20 2a73 736c 293b 0a69 6e74  k(SSL *ssl);.int
0061710: 2073 736c 335f 6469 7370 6174 6368 5f61   ssl3_dispatch_a
0061720: 6c65 7274 2853 534c 202a 7329 3b0a 696e  lert(SSL *s);.in
0061730: 7420 7373 6c33 5f72 6561 645f 6279 7465  t ssl3_read_byte
0061740: 7328 5353 4c20 2a73 2c20 696e 7420 7479  s(SSL *s, int ty
0061750: 7065 2c20 756e 7369 676e 6564 2063 6861  pe, unsigned cha
0061760: 7220 2a62 7566 2c20 696e 7420 6c65 6e2c  r *buf, int len,
0061770: 2069 6e74 2070 6565 6b29 3b0a 696e 7420   int peek);.int 
0061780: 7373 6c33 5f77 7269 7465 5f62 7974 6573  ssl3_write_bytes
0061790: 2853 534c 202a 732c 2069 6e74 2074 7970  (SSL *s, int typ
00617a0: 652c 2063 6f6e 7374 2076 6f69 6420 2a62  e, const void *b
00617b0: 7566 2c20 696e 7420 6c65 6e29 3b0a 696e  uf, int len);.in
00617c0: 7420 7373 6c33 5f66 696e 616c 5f66 696e  t ssl3_final_fin
00617d0: 6973 685f 6d61 6328 5353 4c20 2a73 2c20  ish_mac(SSL *s, 
00617e0: 636f 6e73 7420 6368 6172 202a 7365 6e64  const char *send
00617f0: 6572 2c20 696e 7420 736c 656e 2c75 6e73  er, int slen,uns
0061800: 6967 6e65 6420 6368 6172 202a 7029 3b0a  igned char *p);.
0061810: 696e 7420 7373 6c33 5f63 6572 745f 7665  int ssl3_cert_ve
0061820: 7269 6679 5f6d 6163 2853 534c 202a 732c  rify_mac(SSL *s,
0061830: 2069 6e74 206d 645f 6e69 642c 2075 6e73   int md_nid, uns
0061840: 6967 6e65 6420 6368 6172 202a 7029 3b0a  igned char *p);.
0061850: 766f 6964 2073 736c 335f 6669 6e69 7368  void ssl3_finish
0061860: 5f6d 6163 2853 534c 202a 732c 2063 6f6e  _mac(SSL *s, con
0061870: 7374 2075 6e73 6967 6e65 6420 6368 6172  st unsigned char
0061880: 202a 6275 662c 2069 6e74 206c 656e 293b   *buf, int len);
0061890: 0a69 6e74 2073 736c 335f 656e 6328 5353  .int ssl3_enc(SS
00618a0: 4c20 2a73 2c20 696e 7420 7365 6e64 5f64  L *s, int send_d
00618b0: 6174 6129 3b0a 696e 7420 6e5f 7373 6c33  ata);.int n_ssl3
00618c0: 5f6d 6163 2853 534c 202a 7373 6c2c 2075  _mac(SSL *ssl, u
00618d0: 6e73 6967 6e65 6420 6368 6172 202a 6d64  nsigned char *md
00618e0: 2c20 696e 7420 7365 6e64 5f64 6174 6129  , int send_data)
00618f0: 3b0a 766f 6964 2073 736c 335f 6672 6565  ;.void ssl3_free
0061900: 5f64 6967 6573 745f 6c69 7374 2853 534c  _digest_list(SSL
0061910: 202a 7329 3b0a 756e 7369 676e 6564 206c   *s);.unsigned l
0061920: 6f6e 6720 7373 6c33 5f6f 7574 7075 745f  ong ssl3_output_
0061930: 6365 7274 5f63 6861 696e 2853 534c 202a  cert_chain(SSL *
0061940: 732c 2058 3530 3920 2a78 293b 0a53 534c  s, X509 *x);.SSL
0061950: 5f43 4950 4845 5220 2a73 736c 335f 6368  _CIPHER *ssl3_ch
0061960: 6f6f 7365 5f63 6970 6865 7228 5353 4c20  oose_cipher(SSL 
0061970: 2a73 736c 2c73 7472 7563 7420 7374 6163  *ssl,struct stac
0061980: 6b5f 7374 5f53 534c 5f43 4950 4845 5220  k_st_SSL_CIPHER 
0061990: 2a63 6c6e 742c 0a20 2020 2020 2020 2020  *clnt,.         
00619a0: 2073 7472 7563 7420 7374 6163 6b5f 7374   struct stack_st
00619b0: 5f53 534c 5f43 4950 4845 5220 2a73 7276  _SSL_CIPHER *srv
00619c0: 7229 3b0a 696e 7420 7373 6c33 5f73 6574  r);.int ssl3_set
00619d0: 7570 5f62 7566 6665 7273 2853 534c 202a  up_buffers(SSL *
00619e0: 7329 3b0a 696e 7420 7373 6c33 5f73 6574  s);.int ssl3_set
00619f0: 7570 5f72 6561 645f 6275 6666 6572 2853  up_read_buffer(S
0061a00: 534c 202a 7329 3b0a 696e 7420 7373 6c33  SL *s);.int ssl3
0061a10: 5f73 6574 7570 5f77 7269 7465 5f62 7566  _setup_write_buf
0061a20: 6665 7228 5353 4c20 2a73 293b 0a69 6e74  fer(SSL *s);.int
0061a30: 2073 736c 335f 7265 6c65 6173 655f 7265   ssl3_release_re
0061a40: 6164 5f62 7566 6665 7228 5353 4c20 2a73  ad_buffer(SSL *s
0061a50: 293b 0a69 6e74 2073 736c 335f 7265 6c65  );.int ssl3_rele
0061a60: 6173 655f 7772 6974 655f 6275 6666 6572  ase_write_buffer
0061a70: 2853 534c 202a 7329 3b0a 696e 7420 7373  (SSL *s);.int ss
0061a80: 6c33 5f64 6967 6573 745f 6361 6368 6564  l3_digest_cached
0061a90: 5f72 6563 6f72 6473 2853 534c 202a 7329  _records(SSL *s)
0061aa0: 3b0a 696e 7420 7373 6c33 5f6e 6577 2853  ;.int ssl3_new(S
0061ab0: 534c 202a 7329 3b0a 766f 6964 2073 736c  SL *s);.void ssl
0061ac0: 335f 6672 6565 2853 534c 202a 7329 3b0a  3_free(SSL *s);.
0061ad0: 696e 7420 7373 6c33 5f61 6363 6570 7428  int ssl3_accept(
0061ae0: 5353 4c20 2a73 293b 0a69 6e74 2073 736c  SSL *s);.int ssl
0061af0: 335f 636f 6e6e 6563 7428 5353 4c20 2a73  3_connect(SSL *s
0061b00: 293b 0a69 6e74 2073 736c 335f 7265 6164  );.int ssl3_read
0061b10: 2853 534c 202a 732c 2076 6f69 6420 2a62  (SSL *s, void *b
0061b20: 7566 2c20 696e 7420 6c65 6e29 3b0a 696e  uf, int len);.in
0061b30: 7420 7373 6c33 5f70 6565 6b28 5353 4c20  t ssl3_peek(SSL 
0061b40: 2a73 2c20 766f 6964 202a 6275 662c 2069  *s, void *buf, i
0061b50: 6e74 206c 656e 293b 0a69 6e74 2073 736c  nt len);.int ssl
0061b60: 335f 7772 6974 6528 5353 4c20 2a73 2c20  3_write(SSL *s, 
0061b70: 636f 6e73 7420 766f 6964 202a 6275 662c  const void *buf,
0061b80: 2069 6e74 206c 656e 293b 0a69 6e74 2073   int len);.int s
0061b90: 736c 335f 7368 7574 646f 776e 2853 534c  sl3_shutdown(SSL
0061ba0: 202a 7329 3b0a 766f 6964 2073 736c 335f   *s);.void ssl3_
0061bb0: 636c 6561 7228 5353 4c20 2a73 293b 0a6c  clear(SSL *s);.l
0061bc0: 6f6e 6720 7373 6c33 5f63 7472 6c28 5353  ong ssl3_ctrl(SS
0061bd0: 4c20 2a73 2c69 6e74 2063 6d64 2c20 6c6f  L *s,int cmd, lo
0061be0: 6e67 206c 6172 672c 2076 6f69 6420 2a70  ng larg, void *p
0061bf0: 6172 6729 3b0a 6c6f 6e67 2073 736c 335f  arg);.long ssl3_
0061c00: 6374 785f 6374 726c 2853 534c 5f43 5458  ctx_ctrl(SSL_CTX
0061c10: 202a 732c 696e 7420 636d 642c 206c 6f6e   *s,int cmd, lon
0061c20: 6720 6c61 7267 2c20 766f 6964 202a 7061  g larg, void *pa
0061c30: 7267 293b 0a6c 6f6e 6720 7373 6c33 5f63  rg);.long ssl3_c
0061c40: 616c 6c62 6163 6b5f 6374 726c 2853 534c  allback_ctrl(SSL
0061c50: 202a 732c 696e 7420 636d 642c 2076 6f69   *s,int cmd, voi
0061c60: 6420 282a 6670 2928 766f 6964 2929 3b0a  d (*fp)(void));.
0061c70: 6c6f 6e67 2073 736c 335f 6374 785f 6361  long ssl3_ctx_ca
0061c80: 6c6c 6261 636b 5f63 7472 6c28 5353 4c5f  llback_ctrl(SSL_
0061c90: 4354 5820 2a73 2c69 6e74 2063 6d64 2c20  CTX *s,int cmd, 
0061ca0: 766f 6964 2028 2a66 7029 2876 6f69 6429  void (*fp)(void)
0061cb0: 293b 0a69 6e74 2073 736c 335f 7065 6e64  );.int ssl3_pend
0061cc0: 696e 6728 636f 6e73 7420 5353 4c20 2a73  ing(const SSL *s
0061cd0: 293b 0a0a 766f 6964 2073 736c 335f 7265  );..void ssl3_re
0061ce0: 636f 7264 5f73 6571 7565 6e63 655f 7570  cord_sequence_up
0061cf0: 6461 7465 2875 6e73 6967 6e65 6420 6368  date(unsigned ch
0061d00: 6172 202a 7365 7129 3b0a 696e 7420 7373  ar *seq);.int ss
0061d10: 6c33 5f64 6f5f 6368 616e 6765 5f63 6970  l3_do_change_cip
0061d20: 6865 725f 7370 6563 2853 534c 202a 7373  her_spec(SSL *ss
0061d30: 6c29 3b0a 6c6f 6e67 2073 736c 335f 6465  l);.long ssl3_de
0061d40: 6661 756c 745f 7469 6d65 6f75 7428 766f  fault_timeout(vo
0061d50: 6964 2029 3b0a 0a69 6e74 2073 736c 3233  id );..int ssl23
0061d60: 5f6e 756d 5f63 6970 6865 7273 2876 6f69  _num_ciphers(voi
0061d70: 6420 293b 0a63 6f6e 7374 2053 534c 5f43  d );.const SSL_C
0061d80: 4950 4845 5220 2a73 736c 3233 5f67 6574  IPHER *ssl23_get
0061d90: 5f63 6970 6865 7228 756e 7369 676e 6564  _cipher(unsigned
0061da0: 2069 6e74 2075 293b 0a69 6e74 2073 736c   int u);.int ssl
0061db0: 3233 5f72 6561 6428 5353 4c20 2a73 2c20  23_read(SSL *s, 
0061dc0: 766f 6964 202a 6275 662c 2069 6e74 206c  void *buf, int l
0061dd0: 656e 293b 0a69 6e74 2073 736c 3233 5f70  en);.int ssl23_p
0061de0: 6565 6b28 5353 4c20 2a73 2c20 766f 6964  eek(SSL *s, void
0061df0: 202a 6275 662c 2069 6e74 206c 656e 293b   *buf, int len);
0061e00: 0a69 6e74 2073 736c 3233 5f77 7269 7465  .int ssl23_write
0061e10: 2853 534c 202a 732c 2063 6f6e 7374 2076  (SSL *s, const v
0061e20: 6f69 6420 2a62 7566 2c20 696e 7420 6c65  oid *buf, int le
0061e30: 6e29 3b0a 696e 7420 7373 6c32 335f 7075  n);.int ssl23_pu
0061e40: 745f 6369 7068 6572 5f62 795f 6368 6172  t_cipher_by_char
0061e50: 2863 6f6e 7374 2053 534c 5f43 4950 4845  (const SSL_CIPHE
0061e60: 5220 2a63 2c20 756e 7369 676e 6564 2063  R *c, unsigned c
0061e70: 6861 7220 2a70 293b 0a63 6f6e 7374 2053  har *p);.const S
0061e80: 534c 5f43 4950 4845 5220 2a73 736c 3233  SL_CIPHER *ssl23
0061e90: 5f67 6574 5f63 6970 6865 725f 6279 5f63  _get_cipher_by_c
0061ea0: 6861 7228 636f 6e73 7420 756e 7369 676e  har(const unsign
0061eb0: 6564 2063 6861 7220 2a70 293b 0a6c 6f6e  ed char *p);.lon
0061ec0: 6720 7373 6c32 335f 6465 6661 756c 745f  g ssl23_default_
0061ed0: 7469 6d65 6f75 7428 766f 6964 2029 3b0a  timeout(void );.
0061ee0: 0a6c 6f6e 6720 746c 7331 5f64 6566 6175  .long tls1_defau
0061ef0: 6c74 5f74 696d 656f 7574 2876 6f69 6429  lt_timeout(void)
0061f00: 3b0a 696e 7420 6474 6c73 315f 646f 5f77  ;.int dtls1_do_w
0061f10: 7269 7465 2853 534c 202a 732c 696e 7420  rite(SSL *s,int 
0061f20: 7479 7065 293b 0a69 6e74 2073 736c 335f  type);.int ssl3_
0061f30: 7265 6164 5f6e 2853 534c 202a 732c 2069  read_n(SSL *s, i
0061f40: 6e74 206e 2c20 696e 7420 6d61 782c 2069  nt n, int max, i
0061f50: 6e74 2065 7874 656e 6429 3b0a 696e 7420  nt extend);.int 
0061f60: 6474 6c73 315f 7265 6164 5f62 7974 6573  dtls1_read_bytes
0061f70: 2853 534c 202a 732c 2069 6e74 2074 7970  (SSL *s, int typ
0061f80: 652c 2075 6e73 6967 6e65 6420 6368 6172  e, unsigned char
0061f90: 202a 6275 662c 2069 6e74 206c 656e 2c20   *buf, int len, 
0061fa0: 696e 7420 7065 656b 293b 0a69 6e74 2073  int peek);.int s
0061fb0: 736c 335f 646f 5f63 6f6d 7072 6573 7328  sl3_do_compress(
0061fc0: 5353 4c20 2a73 736c 293b 0a69 6e74 2073  SSL *ssl);.int s
0061fd0: 736c 335f 646f 5f75 6e63 6f6d 7072 6573  sl3_do_uncompres
0061fe0: 7328 5353 4c20 2a73 736c 293b 0a69 6e74  s(SSL *ssl);.int
0061ff0: 2073 736c 335f 7772 6974 655f 7065 6e64   ssl3_write_pend
0062000: 696e 6728 5353 4c20 2a73 2c20 696e 7420  ing(SSL *s, int 
0062010: 7479 7065 2c20 636f 6e73 7420 756e 7369  type, const unsi
0062020: 676e 6564 2063 6861 7220 2a62 7566 2c0a  gned char *buf,.
0062030: 2075 6e73 6967 6e65 6420 696e 7420 6c65   unsigned int le
0062040: 6e29 3b0a 756e 7369 676e 6564 2063 6861  n);.unsigned cha
0062050: 7220 2a64 746c 7331 5f73 6574 5f6d 6573  r *dtls1_set_mes
0062060: 7361 6765 5f68 6561 6465 7228 5353 4c20  sage_header(SSL 
0062070: 2a73 2c0a 2075 6e73 6967 6e65 6420 6368  *s,. unsigned ch
0062080: 6172 202a 702c 2075 6e73 6967 6e65 6420  ar *p, unsigned 
0062090: 6368 6172 206d 742c 2075 6e73 6967 6e65  char mt, unsigne
00620a0: 6420 6c6f 6e67 206c 656e 2c0a 2075 6e73  d long len,. uns
00620b0: 6967 6e65 6420 6c6f 6e67 2066 7261 675f  igned long frag_
00620c0: 6f66 662c 2075 6e73 6967 6e65 6420 6c6f  off, unsigned lo
00620d0: 6e67 2066 7261 675f 6c65 6e29 3b0a 0a69  ng frag_len);..i
00620e0: 6e74 2064 746c 7331 5f77 7269 7465 5f61  nt dtls1_write_a
00620f0: 7070 5f64 6174 615f 6279 7465 7328 5353  pp_data_bytes(SS
0062100: 4c20 2a73 2c20 696e 7420 7479 7065 2c20  L *s, int type, 
0062110: 636f 6e73 7420 766f 6964 202a 6275 662c  const void *buf,
0062120: 2069 6e74 206c 656e 293b 0a69 6e74 2064   int len);.int d
0062130: 746c 7331 5f77 7269 7465 5f62 7974 6573  tls1_write_bytes
0062140: 2853 534c 202a 732c 2069 6e74 2074 7970  (SSL *s, int typ
0062150: 652c 2063 6f6e 7374 2076 6f69 6420 2a62  e, const void *b
0062160: 7566 2c20 696e 7420 6c65 6e29 3b0a 0a69  uf, int len);..i
0062170: 6e74 2064 746c 7331 5f73 656e 645f 6368  nt dtls1_send_ch
0062180: 616e 6765 5f63 6970 6865 725f 7370 6563  ange_cipher_spec
0062190: 2853 534c 202a 732c 2069 6e74 2061 2c20  (SSL *s, int a, 
00621a0: 696e 7420 6229 3b0a 696e 7420 6474 6c73  int b);.int dtls
00621b0: 315f 7365 6e64 5f66 696e 6973 6865 6428  1_send_finished(
00621c0: 5353 4c20 2a73 2c20 696e 7420 612c 2069  SSL *s, int a, i
00621d0: 6e74 2062 2c20 636f 6e73 7420 6368 6172  nt b, const char
00621e0: 202a 7365 6e64 6572 2c20 696e 7420 736c   *sender, int sl
00621f0: 656e 293b 0a75 6e73 6967 6e65 6420 6c6f  en);.unsigned lo
0062200: 6e67 2064 746c 7331 5f6f 7574 7075 745f  ng dtls1_output_
0062210: 6365 7274 5f63 6861 696e 2853 534c 202a  cert_chain(SSL *
0062220: 732c 2058 3530 3920 2a78 293b 0a69 6e74  s, X509 *x);.int
0062230: 2064 746c 7331 5f72 6561 645f 6661 696c   dtls1_read_fail
0062240: 6564 2853 534c 202a 732c 2069 6e74 2063  ed(SSL *s, int c
0062250: 6f64 6529 3b0a 696e 7420 6474 6c73 315f  ode);.int dtls1_
0062260: 6275 6666 6572 5f6d 6573 7361 6765 2853  buffer_message(S
0062270: 534c 202a 732c 2069 6e74 2063 6373 293b  SL *s, int ccs);
0062280: 0a69 6e74 2064 746c 7331 5f72 6574 7261  .int dtls1_retra
0062290: 6e73 6d69 745f 6d65 7373 6167 6528 5353  nsmit_message(SS
00622a0: 4c20 2a73 2c20 756e 7369 676e 6564 2073  L *s, unsigned s
00622b0: 686f 7274 2073 6571 2c0a 2075 6e73 6967  hort seq,. unsig
00622c0: 6e65 6420 6c6f 6e67 2066 7261 675f 6f66  ned long frag_of
00622d0: 662c 2069 6e74 202a 666f 756e 6429 3b0a  f, int *found);.
00622e0: 696e 7420 6474 6c73 315f 6765 745f 7175  int dtls1_get_qu
00622f0: 6575 655f 7072 696f 7269 7479 2875 6e73  eue_priority(uns
0062300: 6967 6e65 6420 7368 6f72 7420 7365 712c  igned short seq,
0062310: 2069 6e74 2069 735f 6363 7329 3b0a 696e   int is_ccs);.in
0062320: 7420 6474 6c73 315f 7265 7472 616e 736d  t dtls1_retransm
0062330: 6974 5f62 7566 6665 7265 645f 6d65 7373  it_buffered_mess
0062340: 6167 6573 2853 534c 202a 7329 3b0a 766f  ages(SSL *s);.vo
0062350: 6964 2064 746c 7331 5f63 6c65 6172 5f72  id dtls1_clear_r
0062360: 6563 6f72 645f 6275 6666 6572 2853 534c  ecord_buffer(SSL
0062370: 202a 7329 3b0a 766f 6964 2064 746c 7331   *s);.void dtls1
0062380: 5f67 6574 5f6d 6573 7361 6765 5f68 6561  _get_message_hea
0062390: 6465 7228 756e 7369 676e 6564 2063 6861  der(unsigned cha
00623a0: 7220 2a64 6174 612c 2073 7472 7563 7420  r *data, struct 
00623b0: 686d 5f68 6561 6465 725f 7374 202a 6d73  hm_header_st *ms
00623c0: 675f 6864 7229 3b0a 766f 6964 2064 746c  g_hdr);.void dtl
00623d0: 7331 5f67 6574 5f63 6373 5f68 6561 6465  s1_get_ccs_heade
00623e0: 7228 756e 7369 676e 6564 2063 6861 7220  r(unsigned char 
00623f0: 2a64 6174 612c 2073 7472 7563 7420 6363  *data, struct cc
0062400: 735f 6865 6164 6572 5f73 7420 2a63 6373  s_header_st *ccs
0062410: 5f68 6472 293b 0a76 6f69 6420 6474 6c73  _hdr);.void dtls
0062420: 315f 7265 7365 745f 7365 715f 6e75 6d62  1_reset_seq_numb
0062430: 6572 7328 5353 4c20 2a73 2c20 696e 7420  ers(SSL *s, int 
0062440: 7277 293b 0a6c 6f6e 6720 6474 6c73 315f  rw);.long dtls1_
0062450: 6465 6661 756c 745f 7469 6d65 6f75 7428  default_timeout(
0062460: 766f 6964 293b 0a73 7472 7563 7420 7469  void);.struct ti
0062470: 6d65 7661 6c2a 2064 746c 7331 5f67 6574  meval* dtls1_get
0062480: 5f74 696d 656f 7574 2853 534c 202a 732c  _timeout(SSL *s,
0062490: 2073 7472 7563 7420 7469 6d65 7661 6c2a   struct timeval*
00624a0: 2074 696d 656c 6566 7429 3b0a 696e 7420   timeleft);.int 
00624b0: 6474 6c73 315f 6368 6563 6b5f 7469 6d65  dtls1_check_time
00624c0: 6f75 745f 6e75 6d28 5353 4c20 2a73 293b  out_num(SSL *s);
00624d0: 0a69 6e74 2064 746c 7331 5f68 616e 646c  .int dtls1_handl
00624e0: 655f 7469 6d65 6f75 7428 5353 4c20 2a73  e_timeout(SSL *s
00624f0: 293b 0a63 6f6e 7374 2053 534c 5f43 4950  );.const SSL_CIP
0062500: 4845 5220 2a64 746c 7331 5f67 6574 5f63  HER *dtls1_get_c
0062510: 6970 6865 7228 756e 7369 676e 6564 2069  ipher(unsigned i
0062520: 6e74 2075 293b 0a76 6f69 6420 6474 6c73  nt u);.void dtls
0062530: 315f 7374 6172 745f 7469 6d65 7228 5353  1_start_timer(SS
0062540: 4c20 2a73 293b 0a76 6f69 6420 6474 6c73  L *s);.void dtls
0062550: 315f 7374 6f70 5f74 696d 6572 2853 534c  1_stop_timer(SSL
0062560: 202a 7329 3b0a 696e 7420 6474 6c73 315f   *s);.int dtls1_
0062570: 6973 5f74 696d 6572 5f65 7870 6972 6564  is_timer_expired
0062580: 2853 534c 202a 7329 3b0a 766f 6964 2064  (SSL *s);.void d
0062590: 746c 7331 5f64 6f75 626c 655f 7469 6d65  tls1_double_time
00625a0: 6f75 7428 5353 4c20 2a73 293b 0a69 6e74  out(SSL *s);.int
00625b0: 2064 746c 7331 5f73 656e 645f 6e65 7773   dtls1_send_news
00625c0: 6573 7369 6f6e 5f74 6963 6b65 7428 5353  ession_ticket(SS
00625d0: 4c20 2a73 293b 0a75 6e73 6967 6e65 6420  L *s);.unsigned 
00625e0: 696e 7420 6474 6c73 315f 6d69 6e5f 6d74  int dtls1_min_mt
00625f0: 7528 766f 6964 293b 0a0a 0a69 6e74 2073  u(void);...int s
0062600: 736c 335f 636c 6965 6e74 5f68 656c 6c6f  sl3_client_hello
0062610: 2853 534c 202a 7329 3b0a 696e 7420 7373  (SSL *s);.int ss
0062620: 6c33 5f67 6574 5f73 6572 7665 725f 6865  l3_get_server_he
0062630: 6c6c 6f28 5353 4c20 2a73 293b 0a69 6e74  llo(SSL *s);.int
0062640: 2073 736c 335f 6765 745f 6365 7274 6966   ssl3_get_certif
0062650: 6963 6174 655f 7265 7175 6573 7428 5353  icate_request(SS
0062660: 4c20 2a73 293b 0a69 6e74 2073 736c 335f  L *s);.int ssl3_
0062670: 6765 745f 6e65 775f 7365 7373 696f 6e5f  get_new_session_
0062680: 7469 636b 6574 2853 534c 202a 7329 3b0a  ticket(SSL *s);.
0062690: 696e 7420 7373 6c33 5f67 6574 5f63 6572  int ssl3_get_cer
00626a0: 745f 7374 6174 7573 2853 534c 202a 7329  t_status(SSL *s)
00626b0: 3b0a 696e 7420 7373 6c33 5f67 6574 5f73  ;.int ssl3_get_s
00626c0: 6572 7665 725f 646f 6e65 2853 534c 202a  erver_done(SSL *
00626d0: 7329 3b0a 696e 7420 7373 6c33 5f73 656e  s);.int ssl3_sen
00626e0: 645f 636c 6965 6e74 5f76 6572 6966 7928  d_client_verify(
00626f0: 5353 4c20 2a73 293b 0a69 6e74 2073 736c  SSL *s);.int ssl
0062700: 335f 7365 6e64 5f63 6c69 656e 745f 6365  3_send_client_ce
0062710: 7274 6966 6963 6174 6528 5353 4c20 2a73  rtificate(SSL *s
0062720: 293b 0a69 6e74 2073 736c 5f64 6f5f 636c  );.int ssl_do_cl
0062730: 6965 6e74 5f63 6572 745f 6362 2853 534c  ient_cert_cb(SSL
0062740: 202a 732c 2058 3530 3920 2a2a 7078 3530   *s, X509 **px50
0062750: 392c 2045 5650 5f50 4b45 5920 2a2a 7070  9, EVP_PKEY **pp
0062760: 6b65 7929 3b0a 696e 7420 7373 6c33 5f73  key);.int ssl3_s
0062770: 656e 645f 636c 6965 6e74 5f6b 6579 5f65  end_client_key_e
0062780: 7863 6861 6e67 6528 5353 4c20 2a73 293b  xchange(SSL *s);
0062790: 0a69 6e74 2073 736c 335f 6765 745f 6b65  .int ssl3_get_ke
00627a0: 795f 6578 6368 616e 6765 2853 534c 202a  y_exchange(SSL *
00627b0: 7329 3b0a 696e 7420 7373 6c33 5f67 6574  s);.int ssl3_get
00627c0: 5f73 6572 7665 725f 6365 7274 6966 6963  _server_certific
00627d0: 6174 6528 5353 4c20 2a73 293b 0a69 6e74  ate(SSL *s);.int
00627e0: 2073 736c 335f 6368 6563 6b5f 6365 7274   ssl3_check_cert
00627f0: 5f61 6e64 5f61 6c67 6f72 6974 686d 2853  _and_algorithm(S
0062800: 534c 202a 7329 3b0a 0a69 6e74 2073 736c  SL *s);..int ssl
0062810: 335f 6368 6563 6b5f 6669 6e69 7368 6564  3_check_finished
0062820: 2853 534c 202a 7329 3b0a 0a69 6e74 2073  (SSL *s);..int s
0062830: 736c 335f 7365 6e64 5f6e 6578 745f 7072  sl3_send_next_pr
0062840: 6f74 6f28 5353 4c20 2a73 293b 0a0a 0a0a  oto(SSL *s);....
0062850: 696e 7420 6474 6c73 315f 636c 6965 6e74  int dtls1_client
0062860: 5f68 656c 6c6f 2853 534c 202a 7329 3b0a  _hello(SSL *s);.
0062870: 696e 7420 6474 6c73 315f 7365 6e64 5f63  int dtls1_send_c
0062880: 6c69 656e 745f 6365 7274 6966 6963 6174  lient_certificat
0062890: 6528 5353 4c20 2a73 293b 0a69 6e74 2064  e(SSL *s);.int d
00628a0: 746c 7331 5f73 656e 645f 636c 6965 6e74  tls1_send_client
00628b0: 5f6b 6579 5f65 7863 6861 6e67 6528 5353  _key_exchange(SS
00628c0: 4c20 2a73 293b 0a69 6e74 2064 746c 7331  L *s);.int dtls1
00628d0: 5f73 656e 645f 636c 6965 6e74 5f76 6572  _send_client_ver
00628e0: 6966 7928 5353 4c20 2a73 293b 0a0a 0a69  ify(SSL *s);...i
00628f0: 6e74 2073 736c 335f 6765 745f 636c 6965  nt ssl3_get_clie
0062900: 6e74 5f68 656c 6c6f 2853 534c 202a 7329  nt_hello(SSL *s)
0062910: 3b0a 696e 7420 7373 6c33 5f73 656e 645f  ;.int ssl3_send_
0062920: 7365 7276 6572 5f68 656c 6c6f 2853 534c  server_hello(SSL
0062930: 202a 7329 3b0a 696e 7420 7373 6c33 5f73   *s);.int ssl3_s
0062940: 656e 645f 6865 6c6c 6f5f 7265 7175 6573  end_hello_reques
0062950: 7428 5353 4c20 2a73 293b 0a69 6e74 2073  t(SSL *s);.int s
0062960: 736c 335f 7365 6e64 5f73 6572 7665 725f  sl3_send_server_
0062970: 6b65 795f 6578 6368 616e 6765 2853 534c  key_exchange(SSL
0062980: 202a 7329 3b0a 696e 7420 7373 6c33 5f73   *s);.int ssl3_s
0062990: 656e 645f 6365 7274 6966 6963 6174 655f  end_certificate_
00629a0: 7265 7175 6573 7428 5353 4c20 2a73 293b  request(SSL *s);
00629b0: 0a69 6e74 2073 736c 335f 7365 6e64 5f73  .int ssl3_send_s
00629c0: 6572 7665 725f 646f 6e65 2853 534c 202a  erver_done(SSL *
00629d0: 7329 3b0a 696e 7420 7373 6c33 5f63 6865  s);.int ssl3_che
00629e0: 636b 5f63 6c69 656e 745f 6865 6c6c 6f28  ck_client_hello(
00629f0: 5353 4c20 2a73 293b 0a69 6e74 2073 736c  SSL *s);.int ssl
0062a00: 335f 6765 745f 636c 6965 6e74 5f63 6572  3_get_client_cer
0062a10: 7469 6669 6361 7465 2853 534c 202a 7329  tificate(SSL *s)
0062a20: 3b0a 696e 7420 7373 6c33 5f67 6574 5f63  ;.int ssl3_get_c
0062a30: 6c69 656e 745f 6b65 795f 6578 6368 616e  lient_key_exchan
0062a40: 6765 2853 534c 202a 7329 3b0a 696e 7420  ge(SSL *s);.int 
0062a50: 7373 6c33 5f67 6574 5f63 6572 745f 7665  ssl3_get_cert_ve
0062a60: 7269 6679 2853 534c 202a 7329 3b0a 0a69  rify(SSL *s);..i
0062a70: 6e74 2073 736c 335f 6765 745f 6e65 7874  nt ssl3_get_next
0062a80: 5f70 726f 746f 2853 534c 202a 7329 3b0a  _proto(SSL *s);.
0062a90: 0a0a 696e 7420 6474 6c73 315f 7365 6e64  ..int dtls1_send
0062aa0: 5f68 656c 6c6f 5f72 6571 7565 7374 2853  _hello_request(S
0062ab0: 534c 202a 7329 3b0a 696e 7420 6474 6c73  SL *s);.int dtls
0062ac0: 315f 7365 6e64 5f73 6572 7665 725f 6865  1_send_server_he
0062ad0: 6c6c 6f28 5353 4c20 2a73 293b 0a69 6e74  llo(SSL *s);.int
0062ae0: 2064 746c 7331 5f73 656e 645f 7365 7276   dtls1_send_serv
0062af0: 6572 5f63 6572 7469 6669 6361 7465 2853  er_certificate(S
0062b00: 534c 202a 7329 3b0a 696e 7420 6474 6c73  SL *s);.int dtls
0062b10: 315f 7365 6e64 5f73 6572 7665 725f 6b65  1_send_server_ke
0062b20: 795f 6578 6368 616e 6765 2853 534c 202a  y_exchange(SSL *
0062b30: 7329 3b0a 696e 7420 6474 6c73 315f 7365  s);.int dtls1_se
0062b40: 6e64 5f63 6572 7469 6669 6361 7465 5f72  nd_certificate_r
0062b50: 6571 7565 7374 2853 534c 202a 7329 3b0a  equest(SSL *s);.
0062b60: 696e 7420 6474 6c73 315f 7365 6e64 5f73  int dtls1_send_s
0062b70: 6572 7665 725f 646f 6e65 2853 534c 202a  erver_done(SSL *
0062b80: 7329 3b0a 0a0a 0a69 6e74 2073 736c 3233  s);....int ssl23
0062b90: 5f61 6363 6570 7428 5353 4c20 2a73 293b  _accept(SSL *s);
0062ba0: 0a69 6e74 2073 736c 3233 5f63 6f6e 6e65  .int ssl23_conne
0062bb0: 6374 2853 534c 202a 7329 3b0a 696e 7420  ct(SSL *s);.int 
0062bc0: 7373 6c32 335f 7265 6164 5f62 7974 6573  ssl23_read_bytes
0062bd0: 2853 534c 202a 732c 2069 6e74 206e 293b  (SSL *s, int n);
0062be0: 0a69 6e74 2073 736c 3233 5f77 7269 7465  .int ssl23_write
0062bf0: 5f62 7974 6573 2853 534c 202a 7329 3b0a  _bytes(SSL *s);.
0062c00: 0a69 6e74 2074 6c73 315f 6e65 7728 5353  .int tls1_new(SS
0062c10: 4c20 2a73 293b 0a76 6f69 6420 746c 7331  L *s);.void tls1
0062c20: 5f66 7265 6528 5353 4c20 2a73 293b 0a76  _free(SSL *s);.v
0062c30: 6f69 6420 746c 7331 5f63 6c65 6172 2853  oid tls1_clear(S
0062c40: 534c 202a 7329 3b0a 6c6f 6e67 2074 6c73  SL *s);.long tls
0062c50: 315f 6374 726c 2853 534c 202a 732c 696e  1_ctrl(SSL *s,in
0062c60: 7420 636d 642c 206c 6f6e 6720 6c61 7267  t cmd, long larg
0062c70: 2c20 766f 6964 202a 7061 7267 293b 0a6c  , void *parg);.l
0062c80: 6f6e 6720 746c 7331 5f63 616c 6c62 6163  ong tls1_callbac
0062c90: 6b5f 6374 726c 2853 534c 202a 732c 696e  k_ctrl(SSL *s,in
0062ca0: 7420 636d 642c 2076 6f69 6420 282a 6670  t cmd, void (*fp
0062cb0: 2928 766f 6964 2929 3b0a 0a69 6e74 2064  )(void));..int d
0062cc0: 746c 7331 5f6e 6577 2853 534c 202a 7329  tls1_new(SSL *s)
0062cd0: 3b0a 696e 7420 6474 6c73 315f 6163 6365  ;.int dtls1_acce
0062ce0: 7074 2853 534c 202a 7329 3b0a 696e 7420  pt(SSL *s);.int 
0062cf0: 6474 6c73 315f 636f 6e6e 6563 7428 5353  dtls1_connect(SS
0062d00: 4c20 2a73 293b 0a76 6f69 6420 6474 6c73  L *s);.void dtls
0062d10: 315f 6672 6565 2853 534c 202a 7329 3b0a  1_free(SSL *s);.
0062d20: 766f 6964 2064 746c 7331 5f63 6c65 6172  void dtls1_clear
0062d30: 2853 534c 202a 7329 3b0a 6c6f 6e67 2064  (SSL *s);.long d
0062d40: 746c 7331 5f63 7472 6c28 5353 4c20 2a73  tls1_ctrl(SSL *s
0062d50: 2c69 6e74 2063 6d64 2c20 6c6f 6e67 206c  ,int cmd, long l
0062d60: 6172 672c 2076 6f69 6420 2a70 6172 6729  arg, void *parg)
0062d70: 3b0a 696e 7420 6474 6c73 315f 7368 7574  ;.int dtls1_shut
0062d80: 646f 776e 2853 534c 202a 7329 3b0a 0a6c  down(SSL *s);..l
0062d90: 6f6e 6720 6474 6c73 315f 6765 745f 6d65  ong dtls1_get_me
0062da0: 7373 6167 6528 5353 4c20 2a73 2c20 696e  ssage(SSL *s, in
0062db0: 7420 7374 312c 2069 6e74 2073 746e 2c20  t st1, int stn, 
0062dc0: 696e 7420 6d74 2c20 6c6f 6e67 206d 6178  int mt, long max
0062dd0: 2c20 696e 7420 2a6f 6b29 3b0a 696e 7420  , int *ok);.int 
0062de0: 6474 6c73 315f 6765 745f 7265 636f 7264  dtls1_get_record
0062df0: 2853 534c 202a 7329 3b0a 696e 7420 646f  (SSL *s);.int do
0062e00: 5f64 746c 7331 5f77 7269 7465 2853 534c  _dtls1_write(SSL
0062e10: 202a 732c 2069 6e74 2074 7970 652c 2063   *s, int type, c
0062e20: 6f6e 7374 2075 6e73 6967 6e65 6420 6368  onst unsigned ch
0062e30: 6172 202a 6275 662c 0a20 756e 7369 676e  ar *buf,. unsign
0062e40: 6564 2069 6e74 206c 656e 2c20 696e 7420  ed int len, int 
0062e50: 6372 6561 7465 5f65 6d70 7479 5f66 7261  create_empty_fra
0062e60: 6765 6d65 6e74 293b 0a69 6e74 2064 746c  gement);.int dtl
0062e70: 7331 5f64 6973 7061 7463 685f 616c 6572  s1_dispatch_aler
0062e80: 7428 5353 4c20 2a73 293b 0a69 6e74 2064  t(SSL *s);.int d
0062e90: 746c 7331 5f65 6e63 2853 534c 202a 732c  tls1_enc(SSL *s,
0062ea0: 2069 6e74 2073 6e64 293b 0a0a 696e 7420   int snd);..int 
0062eb0: 7373 6c5f 696e 6974 5f77 6269 6f5f 6275  ssl_init_wbio_bu
0062ec0: 6666 6572 2853 534c 202a 732c 2069 6e74  ffer(SSL *s, int
0062ed0: 2070 7573 6829 3b0a 766f 6964 2073 736c   push);.void ssl
0062ee0: 5f66 7265 655f 7762 696f 5f62 7566 6665  _free_wbio_buffe
0062ef0: 7228 5353 4c20 2a73 293b 0a0a 696e 7420  r(SSL *s);..int 
0062f00: 746c 7331 5f63 6861 6e67 655f 6369 7068  tls1_change_ciph
0062f10: 6572 5f73 7461 7465 2853 534c 202a 732c  er_state(SSL *s,
0062f20: 2069 6e74 2077 6869 6368 293b 0a69 6e74   int which);.int
0062f30: 2074 6c73 315f 7365 7475 705f 6b65 795f   tls1_setup_key_
0062f40: 626c 6f63 6b28 5353 4c20 2a73 293b 0a69  block(SSL *s);.i
0062f50: 6e74 2074 6c73 315f 656e 6328 5353 4c20  nt tls1_enc(SSL 
0062f60: 2a73 2c20 696e 7420 736e 6429 3b0a 696e  *s, int snd);.in
0062f70: 7420 746c 7331 5f66 696e 616c 5f66 696e  t tls1_final_fin
0062f80: 6973 685f 6d61 6328 5353 4c20 2a73 2c0a  ish_mac(SSL *s,.
0062f90: 2063 6f6e 7374 2063 6861 7220 2a73 7472   const char *str
0062fa0: 2c20 696e 7420 736c 656e 2c20 756e 7369  , int slen, unsi
0062fb0: 676e 6564 2063 6861 7220 2a70 293b 0a69  gned char *p);.i
0062fc0: 6e74 2074 6c73 315f 6365 7274 5f76 6572  nt tls1_cert_ver
0062fd0: 6966 795f 6d61 6328 5353 4c20 2a73 2c20  ify_mac(SSL *s, 
0062fe0: 696e 7420 6d64 5f6e 6964 2c20 756e 7369  int md_nid, unsi
0062ff0: 676e 6564 2063 6861 7220 2a70 293b 0a69  gned char *p);.i
0063000: 6e74 2074 6c73 315f 6d61 6328 5353 4c20  nt tls1_mac(SSL 
0063010: 2a73 736c 2c20 756e 7369 676e 6564 2063  *ssl, unsigned c
0063020: 6861 7220 2a6d 642c 2069 6e74 2073 6e64  har *md, int snd
0063030: 293b 0a69 6e74 2074 6c73 315f 6765 6e65  );.int tls1_gene
0063040: 7261 7465 5f6d 6173 7465 725f 7365 6372  rate_master_secr
0063050: 6574 2853 534c 202a 732c 2075 6e73 6967  et(SSL *s, unsig
0063060: 6e65 6420 6368 6172 202a 6f75 742c 0a20  ned char *out,. 
0063070: 756e 7369 676e 6564 2063 6861 7220 2a70  unsigned char *p
0063080: 2c20 696e 7420 6c65 6e29 3b0a 696e 7420  , int len);.int 
0063090: 746c 7331 5f65 7870 6f72 745f 6b65 7969  tls1_export_keyi
00630a0: 6e67 5f6d 6174 6572 6961 6c28 5353 4c20  ng_material(SSL 
00630b0: 2a73 2c20 756e 7369 676e 6564 2063 6861  *s, unsigned cha
00630c0: 7220 2a6f 7574 2c20 7369 7a65 5f74 206f  r *out, size_t o
00630d0: 6c65 6e2c 0a20 636f 6e73 7420 6368 6172  len,. const char
00630e0: 202a 6c61 6265 6c2c 2073 697a 655f 7420   *label, size_t 
00630f0: 6c6c 656e 2c0a 2063 6f6e 7374 2075 6e73  llen,. const uns
0063100: 6967 6e65 6420 6368 6172 202a 702c 2073  igned char *p, s
0063110: 697a 655f 7420 706c 656e 2c20 696e 7420  ize_t plen, int 
0063120: 7573 655f 636f 6e74 6578 7429 3b0a 696e  use_context);.in
0063130: 7420 746c 7331 5f61 6c65 7274 5f63 6f64  t tls1_alert_cod
0063140: 6528 696e 7420 636f 6465 293b 0a69 6e74  e(int code);.int
0063150: 2073 736c 335f 616c 6572 745f 636f 6465   ssl3_alert_code
0063160: 2869 6e74 2063 6f64 6529 3b0a 696e 7420  (int code);.int 
0063170: 7373 6c5f 6f6b 2853 534c 202a 7329 3b0a  ssl_ok(SSL *s);.
0063180: 0a0a 696e 7420 7373 6c5f 6368 6563 6b5f  ..int ssl_check_
0063190: 7372 7672 5f65 6363 5f63 6572 745f 616e  srvr_ecc_cert_an
00631a0: 645f 616c 6728 5835 3039 202a 782c 2053  d_alg(X509 *x, S
00631b0: 534c 202a 7329 3b0a 0a0a 5353 4c5f 434f  SL *s);...SSL_CO
00631c0: 4d50 202a 7373 6c33 5f63 6f6d 705f 6669  MP *ssl3_comp_fi
00631d0: 6e64 2873 7472 7563 7420 7374 6163 6b5f  nd(struct stack_
00631e0: 7374 5f53 534c 5f43 4f4d 5020 2a73 6b2c  st_SSL_COMP *sk,
00631f0: 2069 6e74 206e 293b 0a0a 0a69 6e74 2074   int n);...int t
0063200: 6c73 315f 6563 5f63 7572 7665 5f69 6432  ls1_ec_curve_id2
0063210: 6e69 6428 696e 7420 6375 7276 655f 6964  nid(int curve_id
0063220: 293b 0a69 6e74 2074 6c73 315f 6563 5f6e  );.int tls1_ec_n
0063230: 6964 3263 7572 7665 5f69 6428 696e 7420  id2curve_id(int 
0063240: 6e69 6429 3b0a 0a0a 0a75 6e73 6967 6e65  nid);....unsigne
0063250: 6420 6368 6172 202a 7373 6c5f 6164 645f  d char *ssl_add_
0063260: 636c 6965 6e74 6865 6c6c 6f5f 746c 7365  clienthello_tlse
0063270: 7874 2853 534c 202a 732c 2075 6e73 6967  xt(SSL *s, unsig
0063280: 6e65 6420 6368 6172 202a 702c 2075 6e73  ned char *p, uns
0063290: 6967 6e65 6420 6368 6172 202a 6c69 6d69  igned char *limi
00632a0: 7429 3b0a 756e 7369 676e 6564 2063 6861  t);.unsigned cha
00632b0: 7220 2a73 736c 5f61 6464 5f73 6572 7665  r *ssl_add_serve
00632c0: 7268 656c 6c6f 5f74 6c73 6578 7428 5353  rhello_tlsext(SS
00632d0: 4c20 2a73 2c20 756e 7369 676e 6564 2063  L *s, unsigned c
00632e0: 6861 7220 2a70 2c20 756e 7369 676e 6564  har *p, unsigned
00632f0: 2063 6861 7220 2a6c 696d 6974 293b 0a69   char *limit);.i
0063300: 6e74 2073 736c 5f70 6172 7365 5f63 6c69  nt ssl_parse_cli
0063310: 656e 7468 656c 6c6f 5f74 6c73 6578 7428  enthello_tlsext(
0063320: 5353 4c20 2a73 2c20 756e 7369 676e 6564  SSL *s, unsigned
0063330: 2063 6861 7220 2a2a 6461 7461 2c20 756e   char **data, un
0063340: 7369 676e 6564 2063 6861 7220 2a64 2c20  signed char *d, 
0063350: 696e 7420 6e2c 2069 6e74 202a 616c 293b  int n, int *al);
0063360: 0a69 6e74 2073 736c 5f70 6172 7365 5f73  .int ssl_parse_s
0063370: 6572 7665 7268 656c 6c6f 5f74 6c73 6578  erverhello_tlsex
0063380: 7428 5353 4c20 2a73 2c20 756e 7369 676e  t(SSL *s, unsign
0063390: 6564 2063 6861 7220 2a2a 6461 7461 2c20  ed char **data, 
00633a0: 756e 7369 676e 6564 2063 6861 7220 2a64  unsigned char *d
00633b0: 2c20 696e 7420 6e2c 2069 6e74 202a 616c  , int n, int *al
00633c0: 293b 0a69 6e74 2073 736c 5f70 7265 7061  );.int ssl_prepa
00633d0: 7265 5f63 6c69 656e 7468 656c 6c6f 5f74  re_clienthello_t
00633e0: 6c73 6578 7428 5353 4c20 2a73 293b 0a69  lsext(SSL *s);.i
00633f0: 6e74 2073 736c 5f70 7265 7061 7265 5f73  nt ssl_prepare_s
0063400: 6572 7665 7268 656c 6c6f 5f74 6c73 6578  erverhello_tlsex
0063410: 7428 5353 4c20 2a73 293b 0a69 6e74 2073  t(SSL *s);.int s
0063420: 736c 5f63 6865 636b 5f63 6c69 656e 7468  sl_check_clienth
0063430: 656c 6c6f 5f74 6c73 6578 745f 6561 726c  ello_tlsext_earl
0063440: 7928 5353 4c20 2a73 293b 0a69 6e74 2073  y(SSL *s);.int s
0063450: 736c 5f63 6865 636b 5f63 6c69 656e 7468  sl_check_clienth
0063460: 656c 6c6f 5f74 6c73 6578 745f 6c61 7465  ello_tlsext_late
0063470: 2853 534c 202a 7329 3b0a 696e 7420 7373  (SSL *s);.int ss
0063480: 6c5f 6368 6563 6b5f 7365 7276 6572 6865  l_check_serverhe
0063490: 6c6c 6f5f 746c 7365 7874 2853 534c 202a  llo_tlsext(SSL *
00634a0: 7329 3b0a 0a0a 696e 7420 746c 7331 5f68  s);...int tls1_h
00634b0: 6561 7274 6265 6174 2853 534c 202a 7329  eartbeat(SSL *s)
00634c0: 3b0a 696e 7420 6474 6c73 315f 6865 6172  ;.int dtls1_hear
00634d0: 7462 6561 7428 5353 4c20 2a73 293b 0a69  tbeat(SSL *s);.i
00634e0: 6e74 2074 6c73 315f 7072 6f63 6573 735f  nt tls1_process_
00634f0: 6865 6172 7462 6561 7428 5353 4c20 2a73  heartbeat(SSL *s
0063500: 293b 0a69 6e74 2064 746c 7331 5f70 726f  );.int dtls1_pro
0063510: 6365 7373 5f68 6561 7274 6265 6174 2853  cess_heartbeat(S
0063520: 534c 202a 7329 3b0a 0a0a 0a0a 0a0a 0a69  SL *s);........i
0063530: 6e74 2074 6c73 315f 7072 6f63 6573 735f  nt tls1_process_
0063540: 7469 636b 6574 2853 534c 202a 732c 2075  ticket(SSL *s, u
0063550: 6e73 6967 6e65 6420 6368 6172 202a 7365  nsigned char *se
0063560: 7373 696f 6e5f 6964 2c20 696e 7420 6c65  ssion_id, int le
0063570: 6e2c 0a20 2020 2063 6f6e 7374 2075 6e73  n,.    const uns
0063580: 6967 6e65 6420 6368 6172 202a 6c69 6d69  igned char *limi
0063590: 742c 2053 534c 5f53 4553 5349 4f4e 202a  t, SSL_SESSION *
00635a0: 2a72 6574 293b 0a0a 696e 7420 746c 7331  *ret);..int tls1
00635b0: 325f 6765 745f 7369 6761 6e64 6861 7368  2_get_sigandhash
00635c0: 2875 6e73 6967 6e65 6420 6368 6172 202a  (unsigned char *
00635d0: 702c 2063 6f6e 7374 2045 5650 5f50 4b45  p, const EVP_PKE
00635e0: 5920 2a70 6b2c 0a20 2020 2063 6f6e 7374  Y *pk,.    const
00635f0: 2045 5650 5f4d 4420 2a6d 6429 3b0a 696e   EVP_MD *md);.in
0063600: 7420 746c 7331 325f 6765 745f 7369 6769  t tls12_get_sigi
0063610: 6428 636f 6e73 7420 4556 505f 504b 4559  d(const EVP_PKEY
0063620: 202a 706b 293b 0a63 6f6e 7374 2045 5650   *pk);.const EVP
0063630: 5f4d 4420 2a74 6c73 3132 5f67 6574 5f68  _MD *tls12_get_h
0063640: 6173 6828 756e 7369 676e 6564 2063 6861  ash(unsigned cha
0063650: 7220 6861 7368 5f61 6c67 293b 0a0a 0a45  r hash_alg);...E
0063660: 5650 5f4d 445f 4354 582a 2073 736c 5f72  VP_MD_CTX* ssl_r
0063670: 6570 6c61 6365 5f68 6173 6828 4556 505f  eplace_hash(EVP_
0063680: 4d44 5f43 5458 202a 2a68 6173 682c 636f  MD_CTX **hash,co
0063690: 6e73 7420 4556 505f 4d44 202a 6d64 2920  nst EVP_MD *md) 
00636a0: 3b0a 766f 6964 2073 736c 5f63 6c65 6172  ;.void ssl_clear
00636b0: 5f68 6173 685f 6374 7828 4556 505f 4d44  _hash_ctx(EVP_MD
00636c0: 5f43 5458 202a 2a68 6173 6829 3b0a 696e  _CTX **hash);.in
00636d0: 7420 7373 6c5f 6164 645f 7365 7276 6572  t ssl_add_server
00636e0: 6865 6c6c 6f5f 7265 6e65 676f 7469 6174  hello_renegotiat
00636f0: 655f 6578 7428 5353 4c20 2a73 2c20 756e  e_ext(SSL *s, un
0063700: 7369 676e 6564 2063 6861 7220 2a70 2c20  signed char *p, 
0063710: 696e 7420 2a6c 656e 2c0a 2020 2020 2069  int *len,.     i
0063720: 6e74 206d 6178 6c65 6e29 3b0a 696e 7420  nt maxlen);.int 
0063730: 7373 6c5f 7061 7273 655f 7365 7276 6572  ssl_parse_server
0063740: 6865 6c6c 6f5f 7265 6e65 676f 7469 6174  hello_renegotiat
0063750: 655f 6578 7428 5353 4c20 2a73 2c20 756e  e_ext(SSL *s, un
0063760: 7369 676e 6564 2063 6861 7220 2a64 2c20  signed char *d, 
0063770: 696e 7420 6c65 6e2c 0a20 2020 2020 2020  int len,.       
0063780: 696e 7420 2a61 6c29 3b0a 696e 7420 7373  int *al);.int ss
0063790: 6c5f 6164 645f 636c 6965 6e74 6865 6c6c  l_add_clienthell
00637a0: 6f5f 7265 6e65 676f 7469 6174 655f 6578  o_renegotiate_ex
00637b0: 7428 5353 4c20 2a73 2c20 756e 7369 676e  t(SSL *s, unsign
00637c0: 6564 2063 6861 7220 2a70 2c20 696e 7420  ed char *p, int 
00637d0: 2a6c 656e 2c0a 2020 2020 2069 6e74 206d  *len,.     int m
00637e0: 6178 6c65 6e29 3b0a 696e 7420 7373 6c5f  axlen);.int ssl_
00637f0: 7061 7273 655f 636c 6965 6e74 6865 6c6c  parse_clienthell
0063800: 6f5f 7265 6e65 676f 7469 6174 655f 6578  o_renegotiate_ex
0063810: 7428 5353 4c20 2a73 2c20 756e 7369 676e  t(SSL *s, unsign
0063820: 6564 2063 6861 7220 2a64 2c20 696e 7420  ed char *d, int 
0063830: 6c65 6e2c 0a20 2020 2020 2020 696e 7420  len,.       int 
0063840: 2a61 6c29 3b0a 6c6f 6e67 2073 736c 5f67  *al);.long ssl_g
0063850: 6574 5f61 6c67 6f72 6974 686d 3228 5353  et_algorithm2(SS
0063860: 4c20 2a73 293b 0a69 6e74 2074 6c73 315f  L *s);.int tls1_
0063870: 7072 6f63 6573 735f 7369 6761 6c67 7328  process_sigalgs(
0063880: 5353 4c20 2a73 2c20 636f 6e73 7420 756e  SSL *s, const un
0063890: 7369 676e 6564 2063 6861 7220 2a64 6174  signed char *dat
00638a0: 612c 2069 6e74 2064 7369 7a65 293b 0a69  a, int dsize);.i
00638b0: 6e74 2074 6c73 3132 5f67 6574 5f72 6571  nt tls12_get_req
00638c0: 5f73 6967 5f61 6c67 7328 5353 4c20 2a73  _sig_algs(SSL *s
00638d0: 2c20 756e 7369 676e 6564 2063 6861 7220  , unsigned char 
00638e0: 2a70 293b 0a0a 696e 7420 7373 6c5f 6164  *p);..int ssl_ad
00638f0: 645f 636c 6965 6e74 6865 6c6c 6f5f 7573  d_clienthello_us
0063900: 655f 7372 7470 5f65 7874 2853 534c 202a  e_srtp_ext(SSL *
0063910: 732c 2075 6e73 6967 6e65 6420 6368 6172  s, unsigned char
0063920: 202a 702c 2069 6e74 202a 6c65 6e2c 2069   *p, int *len, i
0063930: 6e74 206d 6178 6c65 6e29 3b0a 696e 7420  nt maxlen);.int 
0063940: 7373 6c5f 7061 7273 655f 636c 6965 6e74  ssl_parse_client
0063950: 6865 6c6c 6f5f 7573 655f 7372 7470 5f65  hello_use_srtp_e
0063960: 7874 2853 534c 202a 732c 2075 6e73 6967  xt(SSL *s, unsig
0063970: 6e65 6420 6368 6172 202a 642c 2069 6e74  ned char *d, int
0063980: 206c 656e 2c69 6e74 202a 616c 293b 0a69   len,int *al);.i
0063990: 6e74 2073 736c 5f61 6464 5f73 6572 7665  nt ssl_add_serve
00639a0: 7268 656c 6c6f 5f75 7365 5f73 7274 705f  rhello_use_srtp_
00639b0: 6578 7428 5353 4c20 2a73 2c20 756e 7369  ext(SSL *s, unsi
00639c0: 676e 6564 2063 6861 7220 2a70 2c20 696e  gned char *p, in
00639d0: 7420 2a6c 656e 2c20 696e 7420 6d61 786c  t *len, int maxl
00639e0: 656e 293b 0a69 6e74 2073 736c 5f70 6172  en);.int ssl_par
00639f0: 7365 5f73 6572 7665 7268 656c 6c6f 5f75  se_serverhello_u
0063a00: 7365 5f73 7274 705f 6578 7428 5353 4c20  se_srtp_ext(SSL 
0063a10: 2a73 2c20 756e 7369 676e 6564 2063 6861  *s, unsigned cha
0063a20: 7220 2a64 2c20 696e 7420 6c65 6e2c 696e  r *d, int len,in
0063a30: 7420 2a61 6c29 3b0a 0a0a 766f 6964 2073  t *al);...void s
0063a40: 736c 335f 6362 635f 636f 7079 5f6d 6163  sl3_cbc_copy_mac
0063a50: 2875 6e73 6967 6e65 6420 6368 6172 2a20  (unsigned char* 
0063a60: 6f75 742c 0a20 2020 2020 2020 2020 636f  out,.         co
0063a70: 6e73 7420 5353 4c33 5f52 4543 4f52 4420  nst SSL3_RECORD 
0063a80: 2a72 6563 2c0a 2020 2020 2020 2020 2075  *rec,.         u
0063a90: 6e73 6967 6e65 6420 6d64 5f73 697a 652c  nsigned md_size,
0063aa0: 756e 7369 676e 6564 206f 7269 675f 6c65  unsigned orig_le
0063ab0: 6e29 3b0a 696e 7420 7373 6c33 5f63 6263  n);.int ssl3_cbc
0063ac0: 5f72 656d 6f76 655f 7061 6464 696e 6728  _remove_padding(
0063ad0: 636f 6e73 7420 5353 4c2a 2073 2c0a 2020  const SSL* s,.  
0063ae0: 2020 2020 2053 534c 335f 5245 434f 5244       SSL3_RECORD
0063af0: 202a 7265 632c 0a20 2020 2020 2020 756e   *rec,.       un
0063b00: 7369 676e 6564 2062 6c6f 636b 5f73 697a  signed block_siz
0063b10: 652c 0a20 2020 2020 2020 756e 7369 676e  e,.       unsign
0063b20: 6564 206d 6163 5f73 697a 6529 3b0a 696e  ed mac_size);.in
0063b30: 7420 746c 7331 5f63 6263 5f72 656d 6f76  t tls1_cbc_remov
0063b40: 655f 7061 6464 696e 6728 636f 6e73 7420  e_padding(const 
0063b50: 5353 4c2a 2073 2c0a 2020 2020 2020 2053  SSL* s,.       S
0063b60: 534c 335f 5245 434f 5244 202a 7265 632c  SL3_RECORD *rec,
0063b70: 0a20 2020 2020 2020 756e 7369 676e 6564  .       unsigned
0063b80: 2062 6c6f 636b 5f73 697a 652c 0a20 2020   block_size,.   
0063b90: 2020 2020 756e 7369 676e 6564 206d 6163      unsigned mac
0063ba0: 5f73 697a 6529 3b0a 6368 6172 2073 736c  _size);.char ssl
0063bb0: 335f 6362 635f 7265 636f 7264 5f64 6967  3_cbc_record_dig
0063bc0: 6573 745f 7375 7070 6f72 7465 6428 636f  est_supported(co
0063bd0: 6e73 7420 4556 505f 4d44 5f43 5458 202a  nst EVP_MD_CTX *
0063be0: 6374 7829 3b0a 766f 6964 2073 736c 335f  ctx);.void ssl3_
0063bf0: 6362 635f 6469 6765 7374 5f72 6563 6f72  cbc_digest_recor
0063c00: 6428 0a20 636f 6e73 7420 4556 505f 4d44  d(. const EVP_MD
0063c10: 5f43 5458 202a 6374 782c 0a20 756e 7369  _CTX *ctx,. unsi
0063c20: 676e 6564 2063 6861 722a 206d 645f 6f75  gned char* md_ou
0063c30: 742c 0a20 7369 7a65 5f74 2a20 6d64 5f6f  t,. size_t* md_o
0063c40: 7574 5f73 697a 652c 0a20 636f 6e73 7420  ut_size,. const 
0063c50: 756e 7369 676e 6564 2063 6861 7220 6865  unsigned char he
0063c60: 6164 6572 5b31 335d 2c0a 2063 6f6e 7374  ader[13],. const
0063c70: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
0063c80: 6461 7461 2c0a 2073 697a 655f 7420 6461  data,. size_t da
0063c90: 7461 5f70 6c75 735f 6d61 635f 7369 7a65  ta_plus_mac_size
0063ca0: 2c0a 2073 697a 655f 7420 6461 7461 5f70  ,. size_t data_p
0063cb0: 6c75 735f 6d61 635f 706c 7573 5f70 6164  lus_mac_plus_pad
0063cc0: 6469 6e67 5f73 697a 652c 0a20 636f 6e73  ding_size,. cons
0063cd0: 7420 756e 7369 676e 6564 2063 6861 7220  t unsigned char 
0063ce0: 2a6d 6163 5f73 6563 7265 742c 0a20 756e  *mac_secret,. un
0063cf0: 7369 676e 6564 206d 6163 5f73 6563 7265  signed mac_secre
0063d00: 745f 6c65 6e67 7468 2c0a 2063 6861 7220  t_length,. char 
0063d10: 6973 5f73 736c 7633 293b 0a0a 766f 6964  is_sslv3);..void
0063d20: 2074 6c73 5f66 6970 735f 6469 6765 7374   tls_fips_digest
0063d30: 5f65 7874 7261 280a 2063 6f6e 7374 2045  _extra(. const E
0063d40: 5650 5f43 4950 4845 525f 4354 5820 2a63  VP_CIPHER_CTX *c
0063d50: 6970 6865 725f 6374 782c 2045 5650 5f4d  ipher_ctx, EVP_M
0063d60: 445f 4354 5820 2a6d 6163 5f63 7478 2c0a  D_CTX *mac_ctx,.
0063d70: 2063 6f6e 7374 2075 6e73 6967 6e65 6420   const unsigned 
0063d80: 6368 6172 202a 6461 7461 2c20 7369 7a65  char *data, size
0063d90: 5f74 2064 6174 615f 6c65 6e2c 2073 697a  _t data_len, siz
0063da0: 655f 7420 6f72 6967 5f6c 656e 293b 0a23  e_t orig_len);.#
0063db0: 2031 3233 2022 6431 5f62 6f74 682e 6322   123 "d1_both.c"
0063dc0: 2032 0a0a 2320 3120 222f 7573 722f 696e   2..# 1 "/usr/in
0063dd0: 636c 7564 652f 6f70 656e 7373 6c2f 7261  clude/openssl/ra
0063de0: 6e64 2e68 2220 3120 3320 340a 2320 3634  nd.h" 1 3 4.# 64
0063df0: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
0063e00: 7065 6e73 736c 2f72 616e 642e 6822 2033  penssl/rand.h" 3
0063e10: 2034 0a23 2031 2022 2f75 7372 2f69 6e63   4.# 1 "/usr/inc
0063e20: 6c75 6465 2f6f 7065 6e73 736c 2f65 5f6f  lude/openssl/e_o
0063e30: 7332 2e68 2220 3120 3320 340a 2320 3536  s2.h" 1 3 4.# 56
0063e40: 2022 2f75 7372 2f69 6e63 6c75 6465 2f6f   "/usr/include/o
0063e50: 7065 6e73 736c 2f65 5f6f 7332 2e68 2220  penssl/e_os2.h" 
0063e60: 3320 340a 2320 3120 222f 7573 722f 696e  3 4.# 1 "/usr/in
0063e70: 636c 7564 652f 6f70 656e 7373 6c2f 6f70  clude/openssl/op
0063e80: 656e 7373 6c63 6f6e 662e 6822 2031 2033  ensslconf.h" 1 3
0063e90: 2034 0a23 2033 3420 222f 7573 722f 696e   4.# 34 "/usr/in
0063ea0: 636c 7564 652f 6f70 656e 7373 6c2f 6f70  clude/openssl/op
0063eb0: 656e 7373 6c63 6f6e 662e 6822 2033 2034  ensslconf.h" 3 4
0063ec0: 0a23 2031 2022 2f75 7372 2f69 6e63 6c75  .# 1 "/usr/inclu
0063ed0: 6465 2f6f 7065 6e73 736c 2f6f 7065 6e73  de/openssl/opens
0063ee0: 736c 636f 6e66 2d78 3836 5f36 342e 6822  slconf-x86_64.h"
0063ef0: 2031 2033 2034 0a23 2033 3520 222f 7573   1 3 4.# 35 "/us
0063f00: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
0063f10: 6c2f 6f70 656e 7373 6c63 6f6e 662e 6822  l/opensslconf.h"
0063f20: 2032 2033 2034 0a23 2035 3720 222f 7573   2 3 4.# 57 "/us
0063f30: 722f 696e 636c 7564 652f 6f70 656e 7373  r/include/openss
0063f40: 6c2f 655f 6f73 322e 6822 2032 2033 2034  l/e_os2.h" 2 3 4
0063f50: 0a23 2036 3520 222f 7573 722f 696e 636c  .# 65 "/usr/incl
0063f60: 7564 652f 6f70 656e 7373 6c2f 7261 6e64  ude/openssl/rand
0063f70: 2e68 2220 3220 3320 340a 2320 3831 2022  .h" 2 3 4.# 81 "
0063f80: 2f75 7372 2f69 6e63 6c75 6465 2f6f 7065  /usr/include/ope
0063f90: 6e73 736c 2f72 616e 642e 6822 2033 2034  nssl/rand.h" 3 4
0063fa0: 0a73 7472 7563 7420 7261 6e64 5f6d 6574  .struct rand_met
0063fb0: 685f 7374 0a20 7b0a 2076 6f69 6420 282a  h_st. {. void (*
0063fc0: 7365 6564 2928 636f 6e73 7420 766f 6964  seed)(const void
0063fd0: 202a 6275 662c 2069 6e74 206e 756d 293b   *buf, int num);
0063fe0: 0a20 696e 7420 282a 6279 7465 7329 2875  . int (*bytes)(u
0063ff0: 6e73 6967 6e65 6420 6368 6172 202a 6275  nsigned char *bu
0064000: 662c 2069 6e74 206e 756d 293b 0a20 766f  f, int num);. vo
0064010: 6964 2028 2a63 6c65 616e 7570 2928 766f  id (*cleanup)(vo
0064020: 6964 293b 0a20 766f 6964 2028 2a61 6464  id);. void (*add
0064030: 2928 636f 6e73 7420 766f 6964 202a 6275  )(const void *bu
0064040: 662c 2069 6e74 206e 756d 2c20 646f 7562  f, int num, doub
0064050: 6c65 2065 6e74 726f 7079 293b 0a20 696e  le entropy);. in
0064060: 7420 282a 7073 6575 646f 7261 6e64 2928  t (*pseudorand)(
0064070: 756e 7369 676e 6564 2063 6861 7220 2a62  unsigned char *b
0064080: 7566 2c20 696e 7420 6e75 6d29 3b0a 2069  uf, int num);. i
0064090: 6e74 2028 2a73 7461 7475 7329 2876 6f69  nt (*status)(voi
00640a0: 6429 3b0a 207d 3b0a 0a0a 0a0a 0a69 6e74  d);. };......int
00640b0: 2052 414e 445f 7365 745f 7261 6e64 5f6d   RAND_set_rand_m
00640c0: 6574 686f 6428 636f 6e73 7420 5241 4e44  ethod(const RAND
00640d0: 5f4d 4554 484f 4420 2a6d 6574 6829 3b0a  _METHOD *meth);.
00640e0: 636f 6e73 7420 5241 4e44 5f4d 4554 484f  const RAND_METHO
00640f0: 4420 2a52 414e 445f 6765 745f 7261 6e64  D *RAND_get_rand
0064100: 5f6d 6574 686f 6428 766f 6964 293b 0a0a  _method(void);..
0064110: 696e 7420 5241 4e44 5f73 6574 5f72 616e  int RAND_set_ran
0064120: 645f 656e 6769 6e65 2845 4e47 494e 4520  d_engine(ENGINE 
0064130: 2a65 6e67 696e 6529 3b0a 0a52 414e 445f  *engine);..RAND_
0064140: 4d45 5448 4f44 202a 5241 4e44 5f53 534c  METHOD *RAND_SSL
0064150: 6561 7928 766f 6964 293b 0a76 6f69 6420  eay(void);.void 
0064160: 5241 4e44 5f63 6c65 616e 7570 2876 6f69  RAND_cleanup(voi
0064170: 6420 293b 0a69 6e74 2052 414e 445f 6279  d );.int RAND_by
0064180: 7465 7328 756e 7369 676e 6564 2063 6861  tes(unsigned cha
0064190: 7220 2a62 7566 2c69 6e74 206e 756d 293b  r *buf,int num);
00641a0: 0a69 6e74 2052 414e 445f 7073 6575 646f  .int RAND_pseudo
00641b0: 5f62 7974 6573 2875 6e73 6967 6e65 6420  _bytes(unsigned 
00641c0: 6368 6172 202a 6275 662c 696e 7420 6e75  char *buf,int nu
00641d0: 6d29 3b0a 766f 6964 2052 414e 445f 7365  m);.void RAND_se
00641e0: 6564 2863 6f6e 7374 2076 6f69 6420 2a62  ed(const void *b
00641f0: 7566 2c69 6e74 206e 756d 293b 0a76 6f69  uf,int num);.voi
0064200: 6420 5241 4e44 5f61 6464 2863 6f6e 7374  d RAND_add(const
0064210: 2076 6f69 6420 2a62 7566 2c69 6e74 206e   void *buf,int n
0064220: 756d 2c64 6f75 626c 6520 656e 7472 6f70  um,double entrop
0064230: 7929 3b0a 696e 7420 5241 4e44 5f6c 6f61  y);.int RAND_loa
0064240: 645f 6669 6c65 2863 6f6e 7374 2063 6861  d_file(const cha
0064250: 7220 2a66 696c 652c 6c6f 6e67 206d 6178  r *file,long max
0064260: 5f62 7974 6573 293b 0a69 6e74 2052 414e  _bytes);.int RAN
0064270: 445f 7772 6974 655f 6669 6c65 2863 6f6e  D_write_file(con
0064280: 7374 2063 6861 7220 2a66 696c 6529 3b0a  st char *file);.
0064290: 636f 6e73 7420 6368 6172 202a 5241 4e44  const char *RAND
00642a0: 5f66 696c 655f 6e61 6d65 2863 6861 7220  _file_name(char 
00642b0: 2a66 696c 652c 7369 7a65 5f74 206e 756d  *file,size_t num
00642c0: 293b 0a69 6e74 2052 414e 445f 7374 6174  );.int RAND_stat
00642d0: 7573 2876 6f69 6429 3b0a 696e 7420 5241  us(void);.int RA
00642e0: 4e44 5f71 7565 7279 5f65 6764 5f62 7974  ND_query_egd_byt
00642f0: 6573 2863 6f6e 7374 2063 6861 7220 2a70  es(const char *p
0064300: 6174 682c 2075 6e73 6967 6e65 6420 6368  ath, unsigned ch
0064310: 6172 202a 6275 662c 2069 6e74 2062 7974  ar *buf, int byt
0064320: 6573 293b 0a69 6e74 2052 414e 445f 6567  es);.int RAND_eg
0064330: 6428 636f 6e73 7420 6368 6172 202a 7061  d(const char *pa
0064340: 7468 293b 0a69 6e74 2052 414e 445f 6567  th);.int RAND_eg
0064350: 645f 6279 7465 7328 636f 6e73 7420 6368  d_bytes(const ch
0064360: 6172 202a 7061 7468 2c69 6e74 2062 7974  ar *path,int byt
0064370: 6573 293b 0a69 6e74 2052 414e 445f 706f  es);.int RAND_po
0064380: 6c6c 2876 6f69 6429 3b0a 2320 3132 3320  ll(void);.# 123 
0064390: 222f 7573 722f 696e 636c 7564 652f 6f70  "/usr/include/op
00643a0: 656e 7373 6c2f 7261 6e64 2e68 2220 3320  enssl/rand.h" 3 
00643b0: 340a 766f 6964 2052 414e 445f 7365 745f  4.void RAND_set_
00643c0: 6669 7073 5f64 7262 675f 7479 7065 2869  fips_drbg_type(i
00643d0: 6e74 2074 7970 652c 2069 6e74 2066 6c61  nt type, int fla
00643e0: 6773 293b 0a69 6e74 2052 414e 445f 696e  gs);.int RAND_in
00643f0: 6974 5f66 6970 7328 766f 6964 293b 0a0a  it_fips(void);..
0064400: 0a69 6e74 2070 7269 7661 7465 5f52 414e  .int private_RAN
0064410: 445f 6c6f 636b 2869 6e74 206c 6f63 6b29  D_lock(int lock)
0064420: 3b0a 0a0a 0a0a 0a76 6f69 6420 4552 525f  ;......void ERR_
0064430: 6c6f 6164 5f52 414e 445f 7374 7269 6e67  load_RAND_string
0064440: 7328 766f 6964 293b 0a23 2031 3235 2022  s(void);.# 125 "
0064450: 6431 5f62 6f74 682e 6322 2032 0a23 2031  d1_both.c" 2.# 1
0064460: 3630 2022 6431 5f62 6f74 682e 6322 0a73  60 "d1_both.c".s
0064470: 7461 7469 6320 756e 7369 676e 6564 2063  tatic unsigned c
0064480: 6861 7220 6269 746d 6173 6b5f 7374 6172  har bitmask_star
0064490: 745f 7661 6c75 6573 5b5d 203d 207b 3078  t_values[] = {0x
00644a0: 6666 2c20 3078 6665 2c20 3078 6663 2c20  ff, 0xfe, 0xfc, 
00644b0: 3078 6638 2c20 3078 6630 2c20 3078 6530  0xf8, 0xf0, 0xe0
00644c0: 2c20 3078 6330 2c20 3078 3830 7d3b 0a73  , 0xc0, 0x80};.s
00644d0: 7461 7469 6320 756e 7369 676e 6564 2063  tatic unsigned c
00644e0: 6861 7220 6269 746d 6173 6b5f 656e 645f  har bitmask_end_
00644f0: 7661 6c75 6573 5b5d 203d 207b 3078 6666  values[] = {0xff
0064500: 2c20 3078 3031 2c20 3078 3033 2c20 3078  , 0x01, 0x03, 0x
0064510: 3037 2c20 3078 3066 2c20 3078 3166 2c20  07, 0x0f, 0x1f, 
0064520: 3078 3366 2c20 3078 3766 7d3b 0a0a 0a73  0x3f, 0x7f};...s
0064530: 7461 7469 6320 756e 7369 676e 6564 2069  tatic unsigned i
0064540: 6e74 2067 5f70 726f 6261 626c 655f 6d74  nt g_probable_mt
0064550: 755b 5d20 3d20 7b31 3530 3020 2d20 3238  u[] = {1500 - 28
0064560: 2c20 3531 3220 2d20 3238 2c20 3235 3620  , 512 - 28, 256 
0064570: 2d20 3238 7d3b 0a0a 7374 6174 6963 2075  - 28};..static u
0064580: 6e73 6967 6e65 6420 696e 7420 6474 6c73  nsigned int dtls
0064590: 315f 6775 6573 735f 6d74 7528 756e 7369  1_guess_mtu(unsi
00645a0: 676e 6564 2069 6e74 2063 7572 725f 6d74  gned int curr_mt
00645b0: 7529 3b0a 7374 6174 6963 2076 6f69 6420  u);.static void 
00645c0: 6474 6c73 315f 6669 785f 6d65 7373 6167  dtls1_fix_messag
00645d0: 655f 6865 6164 6572 2853 534c 202a 732c  e_header(SSL *s,
00645e0: 2075 6e73 6967 6e65 6420 6c6f 6e67 2066   unsigned long f
00645f0: 7261 675f 6f66 662c 0a20 756e 7369 676e  rag_off,. unsign
0064600: 6564 206c 6f6e 6720 6672 6167 5f6c 656e  ed long frag_len
0064610: 293b 0a73 7461 7469 6320 756e 7369 676e  );.static unsign
0064620: 6564 2063 6861 7220 2a64 746c 7331 5f77  ed char *dtls1_w
0064630: 7269 7465 5f6d 6573 7361 6765 5f68 6561  rite_message_hea
0064640: 6465 7228 5353 4c20 2a73 2c0a 2075 6e73  der(SSL *s,. uns
0064650: 6967 6e65 6420 6368 6172 202a 7029 3b0a  igned char *p);.
0064660: 7374 6174 6963 2076 6f69 6420 6474 6c73  static void dtls
0064670: 315f 7365 745f 6d65 7373 6167 655f 6865  1_set_message_he
0064680: 6164 6572 5f69 6e74 2853 534c 202a 732c  ader_int(SSL *s,
0064690: 2075 6e73 6967 6e65 6420 6368 6172 206d   unsigned char m
00646a0: 742c 0a20 756e 7369 676e 6564 206c 6f6e  t,. unsigned lon
00646b0: 6720 6c65 6e2c 2075 6e73 6967 6e65 6420  g len, unsigned 
00646c0: 7368 6f72 7420 7365 715f 6e75 6d2c 2075  short seq_num, u
00646d0: 6e73 6967 6e65 6420 6c6f 6e67 2066 7261  nsigned long fra
00646e0: 675f 6f66 662c 0a20 756e 7369 676e 6564  g_off,. unsigned
00646f0: 206c 6f6e 6720 6672 6167 5f6c 656e 293b   long frag_len);
0064700: 0a73 7461 7469 6320 6c6f 6e67 2064 746c  .static long dtl
0064710: 7331 5f67 6574 5f6d 6573 7361 6765 5f66  s1_get_message_f
0064720: 7261 676d 656e 7428 5353 4c20 2a73 2c20  ragment(SSL *s, 
0064730: 696e 7420 7374 312c 2069 6e74 2073 746e  int st1, int stn
0064740: 2c0a 206c 6f6e 6720 6d61 782c 2069 6e74  ,. long max, int
0064750: 202a 6f6b 293b 0a0a 7374 6174 6963 2068   *ok);..static h
0064760: 6d5f 6672 6167 6d65 6e74 202a 0a64 746c  m_fragment *.dtl
0064770: 7331 5f68 6d5f 6672 6167 6d65 6e74 5f6e  s1_hm_fragment_n
0064780: 6577 2875 6e73 6967 6e65 6420 6c6f 6e67  ew(unsigned long
0064790: 2066 7261 675f 6c65 6e2c 2069 6e74 2072   frag_len, int r
00647a0: 6561 7373 656d 626c 7929 0a20 7b0a 2068  eassembly). {. h
00647b0: 6d5f 6672 6167 6d65 6e74 202a 6672 6167  m_fragment *frag
00647c0: 203d 2028 2876 6f69 6420 2a29 3029 3b0a   = ((void *)0);.
00647d0: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
00647e0: 6275 6620 3d20 2828 766f 6964 202a 2930  buf = ((void *)0
00647f0: 293b 0a20 756e 7369 676e 6564 2063 6861  );. unsigned cha
0064800: 7220 2a62 6974 6d61 736b 203d 2028 2876  r *bitmask = ((v
0064810: 6f69 6420 2a29 3029 3b0a 0a20 6672 6167  oid *)0);.. frag
0064820: 203d 2028 686d 5f66 7261 676d 656e 7420   = (hm_fragment 
0064830: 2a29 4352 5950 544f 5f6d 616c 6c6f 6328  *)CRYPTO_malloc(
0064840: 2869 6e74 2973 697a 656f 6628 686d 5f66  (int)sizeof(hm_f
0064850: 7261 676d 656e 7429 2c22 6431 5f62 6f74  ragment),"d1_bot
0064860: 682e 6322 2c31 3834 293b 0a20 6966 2028  h.c",184);. if (
0064870: 2066 7261 6720 3d3d 2028 2876 6f69 6420   frag == ((void 
0064880: 2a29 3029 290a 2020 7265 7475 726e 2028  *)0)).  return (
0064890: 2876 6f69 6420 2a29 3029 3b0a 0a20 6966  (void *)0);.. if
00648a0: 2028 6672 6167 5f6c 656e 290a 2020 7b0a   (frag_len).  {.
00648b0: 2020 6275 6620 3d20 2875 6e73 6967 6e65    buf = (unsigne
00648c0: 6420 6368 6172 202a 2943 5259 5054 4f5f  d char *)CRYPTO_
00648d0: 6d61 6c6c 6f63 2828 696e 7429 6672 6167  malloc((int)frag
00648e0: 5f6c 656e 2c22 6431 5f62 6f74 682e 6322  _len,"d1_both.c"
00648f0: 2c31 3930 293b 0a20 2069 6620 2820 6275  ,190);.  if ( bu
0064900: 6620 3d3d 2028 2876 6f69 6420 2a29 3029  f == ((void *)0)
0064910: 290a 2020 207b 0a20 2020 4352 5950 544f  ).   {.   CRYPTO
0064920: 5f66 7265 6528 6672 6167 293b 0a20 2020  _free(frag);.   
0064930: 7265 7475 726e 2028 2876 6f69 6420 2a29  return ((void *)
0064940: 3029 3b0a 2020 207d 0a20 207d 0a0a 0a20  0);.   }.  }... 
0064950: 6672 6167 2d3e 6672 6167 6d65 6e74 203d  frag->fragment =
0064960: 2062 7566 3b0a 0a0a 2069 6620 2872 6561   buf;... if (rea
0064970: 7373 656d 626c 7929 0a20 207b 0a20 2062  ssembly).  {.  b
0064980: 6974 6d61 736b 203d 2028 756e 7369 676e  itmask = (unsign
0064990: 6564 2063 6861 7220 2a29 4352 5950 544f  ed char *)CRYPTO
00649a0: 5f6d 616c 6c6f 6328 2869 6e74 2928 2828  _malloc((int)(((
00649b0: 6672 6167 5f6c 656e 2920 2b20 3729 202f  frag_len) + 7) /
00649c0: 2038 292c 2264 315f 626f 7468 2e63 222c   8),"d1_both.c",
00649d0: 3230 3429 3b0a 2020 6966 2028 6269 746d  204);.  if (bitm
00649e0: 6173 6b20 3d3d 2028 2876 6f69 6420 2a29  ask == ((void *)
00649f0: 3029 290a 2020 207b 0a20 2020 6966 2028  0)).   {.   if (
0064a00: 6275 6620 213d 2028 2876 6f69 6420 2a29  buf != ((void *)
0064a10: 3029 2920 4352 5950 544f 5f66 7265 6528  0)) CRYPTO_free(
0064a20: 6275 6629 3b0a 2020 2043 5259 5054 4f5f  buf);.   CRYPTO_
0064a30: 6672 6565 2866 7261 6729 3b0a 2020 2072  free(frag);.   r
0064a40: 6574 7572 6e20 2828 766f 6964 202a 2930  eturn ((void *)0
0064a50: 293b 0a20 2020 7d0a 2020 6d65 6d73 6574  );.   }.  memset
0064a60: 2862 6974 6d61 736b 2c20 302c 2028 2828  (bitmask, 0, (((
0064a70: 6672 6167 5f6c 656e 2920 2b20 3729 202f  frag_len) + 7) /
0064a80: 2038 2929 3b0a 2020 7d0a 0a20 6672 6167   8));.  }.. frag
0064a90: 2d3e 7265 6173 7365 6d62 6c79 203d 2062  ->reassembly = b
0064aa0: 6974 6d61 736b 3b0a 0a20 7265 7475 726e  itmask;.. return
0064ab0: 2066 7261 673b 0a20 7d0a 0a73 7461 7469   frag;. }..stati
0064ac0: 6320 766f 6964 0a64 746c 7331 5f68 6d5f  c void.dtls1_hm_
0064ad0: 6672 6167 6d65 6e74 5f66 7265 6528 686d  fragment_free(hm
0064ae0: 5f66 7261 676d 656e 7420 2a66 7261 6729  _fragment *frag)
0064af0: 0a20 7b0a 0a20 6966 2028 6672 6167 2d3e  . {.. if (frag->
0064b00: 6d73 675f 6865 6164 6572 2e69 735f 6363  msg_header.is_cc
0064b10: 7329 0a20 207b 0a20 2045 5650 5f43 4950  s).  {.  EVP_CIP
0064b20: 4845 525f 4354 585f 6672 6565 2866 7261  HER_CTX_free(fra
0064b30: 672d 3e6d 7367 5f68 6561 6465 722e 7361  g->msg_header.sa
0064b40: 7665 645f 7265 7472 616e 736d 6974 5f73  ved_retransmit_s
0064b50: 7461 7465 2e65 6e63 5f77 7269 7465 5f63  tate.enc_write_c
0064b60: 7478 293b 0a20 2045 5650 5f4d 445f 4354  tx);.  EVP_MD_CT
0064b70: 585f 6465 7374 726f 7928 6672 6167 2d3e  X_destroy(frag->
0064b80: 6d73 675f 6865 6164 6572 2e73 6176 6564  msg_header.saved
0064b90: 5f72 6574 7261 6e73 6d69 745f 7374 6174  _retransmit_stat
0064ba0: 652e 7772 6974 655f 6861 7368 293b 0a20  e.write_hash);. 
0064bb0: 207d 0a20 6966 2028 6672 6167 2d3e 6672   }. if (frag->fr
0064bc0: 6167 6d65 6e74 2920 4352 5950 544f 5f66  agment) CRYPTO_f
0064bd0: 7265 6528 6672 6167 2d3e 6672 6167 6d65  ree(frag->fragme
0064be0: 6e74 293b 0a20 6966 2028 6672 6167 2d3e  nt);. if (frag->
0064bf0: 7265 6173 7365 6d62 6c79 2920 4352 5950  reassembly) CRYP
0064c00: 544f 5f66 7265 6528 6672 6167 2d3e 7265  TO_free(frag->re
0064c10: 6173 7365 6d62 6c79 293b 0a20 4352 5950  assembly);. CRYP
0064c20: 544f 5f66 7265 6528 6672 6167 293b 0a20  TO_free(frag);. 
0064c30: 7d0a 0a0a 696e 7420 6474 6c73 315f 646f  }...int dtls1_do
0064c40: 5f77 7269 7465 2853 534c 202a 732c 2069  _write(SSL *s, i
0064c50: 6e74 2074 7970 6529 0a20 7b0a 2069 6e74  nt type). {. int
0064c60: 2072 6574 3b0a 2069 6e74 2063 7572 725f   ret;. int curr_
0064c70: 6d74 753b 0a20 756e 7369 676e 6564 2069  mtu;. unsigned i
0064c80: 6e74 206c 656e 2c20 6672 6167 5f6f 6666  nt len, frag_off
0064c90: 2c20 6d61 635f 7369 7a65 2c20 626c 6f63  , mac_size, bloc
0064ca0: 6b73 697a 653b 0a0a 0a20 6966 2028 732d  ksize;... if (s-
0064cb0: 3e64 312d 3e6d 7475 203c 2064 746c 7331  >d1->mtu < dtls1
0064cc0: 5f6d 696e 5f6d 7475 2829 2026 2620 2128  _min_mtu() && !(
0064cd0: 5353 4c5f 6374 726c 2828 7329 2c33 322c  SSL_ctrl((s),32,
0064ce0: 302c 2828 766f 6964 202a 2930 2929 2026  0,((void *)0)) &
0064cf0: 2030 7830 3030 3031 3030 304c 2929 0a20   0x00001000L)). 
0064d00: 207b 0a20 2073 2d3e 6431 2d3e 6d74 7520   {.  s->d1->mtu 
0064d10: 3d0a 2020 2042 494f 5f63 7472 6c28 5353  =.   BIO_ctrl(SS
0064d20: 4c5f 6765 745f 7762 696f 2873 292c 2034  L_get_wbio(s), 4
0064d30: 302c 2030 2c20 2828 766f 6964 202a 2930  0, 0, ((void *)0
0064d40: 2929 3b0a 0a0a 0a20 2069 6620 2873 2d3e  ));....  if (s->
0064d50: 6431 2d3e 6d74 7520 3c20 6474 6c73 315f  d1->mtu < dtls1_
0064d60: 6d69 6e5f 6d74 7528 2929 0a20 2020 7b0a  min_mtu()).   {.
0064d70: 2020 2073 2d3e 6431 2d3e 6d74 7520 3d20     s->d1->mtu = 
0064d80: 303b 0a20 2020 732d 3e64 312d 3e6d 7475  0;.   s->d1->mtu
0064d90: 203d 2064 746c 7331 5f67 7565 7373 5f6d   = dtls1_guess_m
0064da0: 7475 2873 2d3e 6431 2d3e 6d74 7529 3b0a  tu(s->d1->mtu);.
0064db0: 2020 2042 494f 5f63 7472 6c28 5353 4c5f     BIO_ctrl(SSL_
0064dc0: 6765 745f 7762 696f 2873 292c 2034 322c  get_wbio(s), 42,
0064dd0: 0a20 2020 2073 2d3e 6431 2d3e 6d74 752c  .    s->d1->mtu,
0064de0: 2028 2876 6f69 6420 2a29 3029 293b 0a20   ((void *)0));. 
0064df0: 2020 7d0a 2020 7d0a 2320 3237 3920 2264    }.  }.# 279 "d
0064e00: 315f 626f 7468 2e63 220a 2028 766f 6964  1_both.c". (void
0064e10: 2928 2873 2d3e 6431 2d3e 6d74 7520 3e3d  )((s->d1->mtu >=
0064e20: 2064 746c 7331 5f6d 696e 5f6d 7475 2829   dtls1_min_mtu()
0064e30: 2920 3f20 3020 3a20 284f 7065 6e53 534c  ) ? 0 : (OpenSSL
0064e40: 4469 6528 2264 315f 626f 7468 2e63 222c  Die("d1_both.c",
0064e50: 2032 3739 2c20 2273 2d3e 6431 2d3e 6d74   279, "s->d1->mt
0064e60: 7520 3e3d 2064 746c 7331 5f6d 696e 5f6d  u >= dtls1_min_m
0064e70: 7475 2829 2229 2c31 2929 3b0a 0a20 6966  tu()"),1));.. if
0064e80: 2028 2073 2d3e 696e 6974 5f6f 6666 203d   ( s->init_off =
0064e90: 3d20 3020 2626 2074 7970 6520 3d3d 2032  = 0 && type == 2
0064ea0: 3229 0a20 2028 766f 6964 2928 2873 2d3e  2).  (void)((s->
0064eb0: 696e 6974 5f6e 756d 203d 3d20 2869 6e74  init_num == (int
0064ec0: 2973 2d3e 6431 2d3e 775f 6d73 675f 6864  )s->d1->w_msg_hd
0064ed0: 722e 6d73 675f 6c65 6e20 2b20 3132 2920  r.msg_len + 12) 
0064ee0: 3f20 3020 3a20 284f 7065 6e53 534c 4469  ? 0 : (OpenSSLDi
0064ef0: 6528 0a20 2264 315f 626f 7468 2e63 220a  e(. "d1_both.c".
0064f00: 2320 3238 3220 2264 315f 626f 7468 2e63  # 282 "d1_both.c
0064f10: 2220 3320 340a 2020 2c0a 2032 3833 0a23  " 3 4.  ,. 283.#
0064f20: 2032 3832 2022 6431 5f62 6f74 682e 6322   282 "d1_both.c"
0064f30: 2033 2034 0a20 202c 2022 732d 3e69 6e69   3 4.  , "s->ini
0064f40: 745f 6e75 6d20 3d3d 2028 696e 7429 732d  t_num == (int)s-
0064f50: 3e64 312d 3e77 5f6d 7367 5f68 6472 2e6d  >d1->w_msg_hdr.m
0064f60: 7367 5f6c 656e 202b 2044 544c 5331 5f48  sg_len + DTLS1_H
0064f70: 4d5f 4845 4144 4552 5f4c 454e 4754 4822  M_HEADER_LENGTH"
0064f80: 292c 3129 290a 2020 2020 2020 2020 2020  ),1)).          
0064f90: 2020 2020 2020 2020 2020 2020 2020 2020                  
0064fa0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0064fb0: 2020 2020 2020 2020 2020 2020 2020 2020                  
0064fc0: 3b0a 0a20 6966 2028 732d 3e77 7269 7465  ;.. if (s->write
0064fd0: 5f68 6173 6829 0a20 206d 6163 5f73 697a  _hash).  mac_siz
0064fe0: 6520 3d20 4556 505f 4d44 5f73 697a 6528  e = EVP_MD_size(
0064ff0: 4556 505f 4d44 5f43 5458 5f6d 6428 732d  EVP_MD_CTX_md(s-
0065000: 3e77 7269 7465 5f68 6173 6829 293b 0a20  >write_hash));. 
0065010: 656c 7365 0a20 206d 6163 5f73 697a 6520  else.  mac_size 
0065020: 3d20 303b 0a0a 2069 6620 2873 2d3e 656e  = 0;.. if (s->en
0065030: 635f 7772 6974 655f 6374 7820 2626 0a20  c_write_ctx &&. 
0065040: 2028 2845 5650 5f43 4950 4845 525f 666c   ((EVP_CIPHER_fl
0065050: 6167 7328 732d 3e65 6e63 5f77 7269 7465  ags(s->enc_write
0065060: 5f63 7478 2d3e 6369 7068 6572 2920 2620  _ctx->cipher) & 
0065070: 3078 4630 3030 3729 2026 2030 7832 2929  0xF0007) & 0x2))
0065080: 0a20 2062 6c6f 636b 7369 7a65 203d 2032  .  blocksize = 2
0065090: 202a 2045 5650 5f43 4950 4845 525f 626c   * EVP_CIPHER_bl
00650a0: 6f63 6b5f 7369 7a65 2873 2d3e 656e 635f  ock_size(s->enc_
00650b0: 7772 6974 655f 6374 782d 3e63 6970 6865  write_ctx->ciphe
00650c0: 7229 3b0a 2065 6c73 650a 2020 626c 6f63  r);. else.  bloc
00650d0: 6b73 697a 6520 3d20 303b 0a0a 2066 7261  ksize = 0;.. fra
00650e0: 675f 6f66 6620 3d20 303b 0a20 7768 696c  g_off = 0;. whil
00650f0: 6528 2073 2d3e 696e 6974 5f6e 756d 290a  e( s->init_num).
0065100: 2020 7b0a 2020 6375 7272 5f6d 7475 203d    {.  curr_mtu =
0065110: 2073 2d3e 6431 2d3e 6d74 7520 2d20 2869   s->d1->mtu - (i
0065120: 6e74 2942 494f 5f63 7472 6c28 5353 4c5f  nt)BIO_ctrl(SSL_
0065130: 6765 745f 7762 696f 2873 292c 3133 2c30  get_wbio(s),13,0
0065140: 2c28 2876 6f69 6420 2a29 3029 2920 2d0a  ,((void *)0)) -.
0065150: 2020 2031 3320 2d20 6d61 635f 7369 7a65     13 - mac_size
0065160: 202d 2062 6c6f 636b 7369 7a65 3b0a 0a20   - blocksize;.. 
0065170: 2069 6620 2820 6375 7272 5f6d 7475 203c   if ( curr_mtu <
0065180: 3d20 3132 290a 2020 207b 0a0a 2020 2072  = 12).   {..   r
0065190: 6574 203d 2028 696e 7429 4249 4f5f 6374  et = (int)BIO_ct
00651a0: 726c 2853 534c 5f67 6574 5f77 6269 6f28  rl(SSL_get_wbio(
00651b0: 7329 2c31 312c 302c 2828 766f 6964 202a  s),11,0,((void *
00651c0: 2930 2929 3b0a 2020 2069 6620 2820 7265  )0));.   if ( re
00651d0: 7420 3c3d 2030 290a 2020 2020 7265 7475  t <= 0).    retu
00651e0: 726e 2072 6574 3b0a 2020 2063 7572 725f  rn ret;.   curr_
00651f0: 6d74 7520 3d20 732d 3e64 312d 3e6d 7475  mtu = s->d1->mtu
0065200: 202d 2031 3320 2d0a 2020 2020 6d61 635f   - 13 -.    mac_
0065210: 7369 7a65 202d 2062 6c6f 636b 7369 7a65  size - blocksize
0065220: 3b0a 2020 207d 0a0a 2020 6966 2028 2073  ;.   }..  if ( s
0065230: 2d3e 696e 6974 5f6e 756d 203e 2063 7572  ->init_num > cur
0065240: 725f 6d74 7529 0a20 2020 6c65 6e20 3d20  r_mtu).   len = 
0065250: 6375 7272 5f6d 7475 3b0a 2020 656c 7365  curr_mtu;.  else
0065260: 0a20 2020 6c65 6e20 3d20 732d 3e69 6e69  .   len = s->ini
0065270: 745f 6e75 6d3b 0a0a 0a0a 2020 6966 2028  t_num;....  if (
0065280: 2074 7970 6520 3d3d 2032 3229 0a20 2020   type == 22).   
0065290: 7b0a 2020 2069 6620 2820 732d 3e69 6e69  {.   if ( s->ini
00652a0: 745f 6f66 6620 213d 2030 290a 2020 2020  t_off != 0).    
00652b0: 7b0a 2020 2020 2876 6f69 6429 2828 732d  {.    (void)((s-
00652c0: 3e69 6e69 745f 6f66 6620 3e20 3132 2920  >init_off > 12) 
00652d0: 3f20 3020 3a20 284f 7065 6e53 534c 4469  ? 0 : (OpenSSLDi
00652e0: 6528 2264 315f 626f 7468 2e63 222c 2033  e("d1_both.c", 3
00652f0: 3233 2c20 2273 2d3e 696e 6974 5f6f 6666  23, "s->init_off
0065300: 203e 2044 544c 5331 5f48 4d5f 4845 4144   > DTLS1_HM_HEAD
0065310: 4552 5f4c 454e 4754 4822 292c 3129 293b  ER_LENGTH"),1));
0065320: 0a20 2020 2073 2d3e 696e 6974 5f6f 6666  .    s->init_off
0065330: 202d 3d20 3132 3b0a 2020 2020 732d 3e69   -= 12;.    s->i
0065340: 6e69 745f 6e75 6d20 2b3d 2031 323b 0a0a  nit_num += 12;..
0065350: 2020 2020 6966 2028 2073 2d3e 696e 6974      if ( s->init
0065360: 5f6e 756d 203e 2063 7572 725f 6d74 7529  _num > curr_mtu)
0065370: 0a20 2020 2020 6c65 6e20 3d20 6375 7272  .     len = curr
0065380: 5f6d 7475 3b0a 2020 2020 656c 7365 0a20  _mtu;.    else. 
0065390: 2020 2020 6c65 6e20 3d20 732d 3e69 6e69      len = s->ini
00653a0: 745f 6e75 6d3b 0a20 2020 207d 0a0a 2020  t_num;.    }..  
00653b0: 2064 746c 7331 5f66 6978 5f6d 6573 7361   dtls1_fix_messa
00653c0: 6765 5f68 6561 6465 7228 732c 2066 7261  ge_header(s, fra
00653d0: 675f 6f66 662c 0a20 2020 206c 656e 202d  g_off,.    len -
00653e0: 2031 3229 3b0a 0a20 2020 6474 6c73 315f   12);..   dtls1_
00653f0: 7772 6974 655f 6d65 7373 6167 655f 6865  write_message_he
0065400: 6164 6572 2873 2c20 2875 6e73 6967 6e65  ader(s, (unsigne
0065410: 6420 6368 6172 202a 2926 732d 3e69 6e69  d char *)&s->ini
0065420: 745f 6275 662d 3e64 6174 615b 732d 3e69  t_buf->data[s->i
0065430: 6e69 745f 6f66 665d 293b 0a0a 2020 2028  nit_off]);..   (
0065440: 766f 6964 2928 286c 656e 203e 3d20 3132  void)((len >= 12
0065450: 2920 3f20 3020 3a20 284f 7065 6e53 534c  ) ? 0 : (OpenSSL
0065460: 4469 6528 2264 315f 626f 7468 2e63 222c  Die("d1_both.c",
0065470: 2033 3338 2c20 226c 656e 203e 3d20 4454   338, "len >= DT
0065480: 4c53 315f 484d 5f48 4541 4445 525f 4c45  LS1_HM_HEADER_LE
0065490: 4e47 5448 2229 2c31 2929 3b0a 2020 207d  NGTH"),1));.   }
00654a0: 0a0a 2020 7265 743d 6474 6c73 315f 7772  ..  ret=dtls1_wr
00654b0: 6974 655f 6279 7465 7328 732c 7479 7065  ite_bytes(s,type
00654c0: 2c26 732d 3e69 6e69 745f 6275 662d 3e64  ,&s->init_buf->d
00654d0: 6174 615b 732d 3e69 6e69 745f 6f66 665d  ata[s->init_off]
00654e0: 2c0a 2020 206c 656e 293b 0a20 2069 6620  ,.   len);.  if 
00654f0: 2872 6574 203c 2030 290a 2020 207b 0a0a  (ret < 0).   {..
0065500: 0a0a 0a0a 0a20 2020 6966 2028 2042 494f  .....   if ( BIO
0065510: 5f63 7472 6c28 5353 4c5f 6765 745f 7762  _ctrl(SSL_get_wb
0065520: 696f 2873 292c 0a20 2020 2034 332c 2030  io(s),.    43, 0
0065530: 2c20 2828 766f 6964 202a 2930 2929 203e  , ((void *)0)) >
0065540: 2030 2029 0a20 2020 2073 2d3e 6431 2d3e   0 ).    s->d1->
0065550: 6d74 7520 3d20 4249 4f5f 6374 726c 2853  mtu = BIO_ctrl(S
0065560: 534c 5f67 6574 5f77 6269 6f28 7329 2c0a  SL_get_wbio(s),.
0065570: 2020 2020 2034 302c 2030 2c20 2828 766f       40, 0, ((vo
0065580: 6964 202a 2930 2929 3b0a 2020 2065 6c73  id *)0));.   els
0065590: 650a 2020 2020 7265 7475 726e 282d 3129  e.    return(-1)
00655a0: 3b0a 2020 207d 0a20 2065 6c73 650a 2020  ;.   }.  else.  
00655b0: 207b 0a0a 0a0a 2020 2028 766f 6964 2928   {....   (void)(
00655c0: 286c 656e 203d 3d20 2875 6e73 6967 6e65  (len == (unsigne
00655d0: 6420 696e 7429 7265 7429 203f 2030 203a  d int)ret) ? 0 :
00655e0: 2028 4f70 656e 5353 4c44 6965 2822 6431   (OpenSSLDie("d1
00655f0: 5f62 6f74 682e 6322 2c20 3336 332c 2022  _both.c", 363, "
0065600: 6c65 6e20 3d3d 2028 756e 7369 676e 6564  len == (unsigned
0065610: 2069 6e74 2972 6574 2229 2c31 2929 3b0a   int)ret"),1));.
0065620: 0a20 2020 6966 2028 7479 7065 203d 3d20  .   if (type == 
0065630: 3232 2026 2620 2120 732d 3e64 312d 3e72  22 && ! s->d1->r
0065640: 6574 7261 6e73 6d69 7474 696e 6729 0a20  etransmitting). 
0065650: 2020 207b 0a0a 0a20 2020 2075 6e73 6967     {...    unsig
0065660: 6e65 6420 6368 6172 202a 7020 3d20 2875  ned char *p = (u
0065670: 6e73 6967 6e65 6420 6368 6172 202a 2926  nsigned char *)&
0065680: 732d 3e69 6e69 745f 6275 662d 3e64 6174  s->init_buf->dat
0065690: 615b 732d 3e69 6e69 745f 6f66 665d 3b0a  a[s->init_off];.
00656a0: 2020 2020 636f 6e73 7420 7374 7275 6374      const struct
00656b0: 2068 6d5f 6865 6164 6572 5f73 7420 2a6d   hm_header_st *m
00656c0: 7367 5f68 6472 203d 2026 732d 3e64 312d  sg_hdr = &s->d1-
00656d0: 3e77 5f6d 7367 5f68 6472 3b0a 2020 2020  >w_msg_hdr;.    
00656e0: 696e 7420 786c 656e 3b0a 0a20 2020 2069  int xlen;..    i
00656f0: 6620 2866 7261 675f 6f66 6620 3d3d 2030  f (frag_off == 0
0065700: 2026 2620 732d 3e76 6572 7369 6f6e 2021   && s->version !
0065710: 3d20 3078 3031 3030 290a 2020 2020 207b  = 0x0100).     {
0065720: 0a0a 0a20 2020 2020 2a70 2b2b 203d 206d  ...     *p++ = m
0065730: 7367 5f68 6472 2d3e 7479 7065 3b0a 2020  sg_hdr->type;.  
0065740: 2020 2028 2870 5b30 5d3d 2875 6e73 6967     ((p[0]=(unsig
0065750: 6e65 6420 6368 6172 2928 2828 6d73 675f  ned char)(((msg_
0065760: 6864 722d 3e6d 7367 5f6c 656e 293e 3e31  hdr->msg_len)>>1
0065770: 3629 2630 7866 6629 2c20 705b 315d 3d28  6)&0xff), p[1]=(
0065780: 756e 7369 676e 6564 2063 6861 7229 2828  unsigned char)((
0065790: 286d 7367 5f68 6472 2d3e 6d73 675f 6c65  (msg_hdr->msg_le
00657a0: 6e29 3e3e 2038 2926 3078 6666 292c 2070  n)>> 8)&0xff), p
00657b0: 5b32 5d3d 2875 6e73 6967 6e65 6420 6368  [2]=(unsigned ch
00657c0: 6172 2928 2828 6d73 675f 6864 722d 3e6d  ar)(((msg_hdr->m
00657d0: 7367 5f6c 656e 2920 2926 3078 6666 2929  sg_len) )&0xff))
00657e0: 2c70 2b3d 3329 3b0a 2020 2020 2028 2870  ,p+=3);.     ((p
00657f0: 5b30 5d3d 2875 6e73 6967 6e65 6420 6368  [0]=(unsigned ch
0065800: 6172 2928 2828 6d73 675f 6864 722d 3e73  ar)(((msg_hdr->s
0065810: 6571 293e 3e20 3829 2630 7866 6629 2c20  eq)>> 8)&0xff), 
0065820: 705b 315d 3d28 756e 7369 676e 6564 2063  p[1]=(unsigned c
0065830: 6861 7229 2828 286d 7367 5f68 6472 2d3e  har)(((msg_hdr->
0065840: 7365 7129 2029 2630 7866 6629 292c 702b  seq) )&0xff)),p+
0065850: 3d32 293b 0a20 2020 2020 2828 705b 305d  =2);.     ((p[0]
0065860: 3d28 756e 7369 676e 6564 2063 6861 7229  =(unsigned char)
0065870: 2828 2830 293e 3e31 3629 2630 7866 6629  (((0)>>16)&0xff)
0065880: 2c20 705b 315d 3d28 756e 7369 676e 6564  , p[1]=(unsigned
0065890: 2063 6861 7229 2828 2830 293e 3e20 3829   char)(((0)>> 8)
00658a0: 2630 7866 6629 2c20 705b 325d 3d28 756e  &0xff), p[2]=(un
00658b0: 7369 676e 6564 2063 6861 7229 2828 2830  signed char)(((0
00658c0: 2920 2926 3078 6666 2929 2c70 2b3d 3329  ) )&0xff)),p+=3)
00658d0: 3b0a 2020 2020 2028 2870 5b30 5d3d 2875  ;.     ((p[0]=(u
00658e0: 6e73 6967 6e65 6420 6368 6172 2928 2828  nsigned char)(((
00658f0: 6d73 675f 6864 722d 3e6d 7367 5f6c 656e  msg_hdr->msg_len
0065900: 293e 3e31 3629 2630 7866 6629 2c20 705b  )>>16)&0xff), p[
0065910: 315d 3d28 756e 7369 676e 6564 2063 6861  1]=(unsigned cha
0065920: 7229 2828 286d 7367 5f68 6472 2d3e 6d73  r)(((msg_hdr->ms
0065930: 675f 6c65 6e29 3e3e 2038 2926 3078 6666  g_len)>> 8)&0xff
0065940: 292c 2070 5b32 5d3d 2875 6e73 6967 6e65  ), p[2]=(unsigne
0065950: 6420 6368 6172 2928 2828 6d73 675f 6864  d char)(((msg_hd
0065960: 722d 3e6d 7367 5f6c 656e 2920 2926 3078  r->msg_len) )&0x
0065970: 6666 2929 2c70 2b3d 3329 3b0a 2020 2020  ff)),p+=3);.    
0065980: 2070 202d 3d20 3132 3b0a 2020 2020 2078   p -= 12;.     x
0065990: 6c65 6e20 3d20 7265 743b 0a20 2020 2020  len = ret;.     
00659a0: 7d0a 2020 2020 656c 7365 0a20 2020 2020  }.    else.     
00659b0: 7b0a 2020 2020 2070 202b 3d20 3132 3b0a  {.     p += 12;.
00659c0: 2020 2020 2078 6c65 6e20 3d20 7265 7420       xlen = ret 
00659d0: 2d20 3132 3b0a 2020 2020 207d 0a0a 2020  - 12;.     }..  
00659e0: 2020 7373 6c33 5f66 696e 6973 685f 6d61    ssl3_finish_ma
00659f0: 6328 732c 2070 2c20 786c 656e 293b 0a20  c(s, p, xlen);. 
0065a00: 2020 207d 0a0a 2020 2069 6620 2872 6574     }..   if (ret
0065a10: 203d 3d20 732d 3e69 6e69 745f 6e75 6d29   == s->init_num)
0065a20: 0a20 2020 207b 0a20 2020 2069 6620 2873  .    {.    if (s
0065a30: 2d3e 6d73 675f 6361 6c6c 6261 636b 290a  ->msg_callback).
0065a40: 2020 2020 2073 2d3e 6d73 675f 6361 6c6c       s->msg_call
0065a50: 6261 636b 2831 2c20 732d 3e76 6572 7369  back(1, s->versi
0065a60: 6f6e 2c20 7479 7065 2c20 732d 3e69 6e69  on, type, s->ini
0065a70: 745f 6275 662d 3e64 6174 612c 0a20 2020  t_buf->data,.   
0065a80: 2020 2028 7369 7a65 5f74 2928 732d 3e69     (size_t)(s->i
0065a90: 6e69 745f 6f66 6620 2b20 732d 3e69 6e69  nit_off + s->ini
0065aa0: 745f 6e75 6d29 2c20 732c 0a20 2020 2020  t_num), s,.     
0065ab0: 2073 2d3e 6d73 675f 6361 6c6c 6261 636b   s->msg_callback
0065ac0: 5f61 7267 293b 0a0a 2020 2020 732d 3e69  _arg);..    s->i
0065ad0: 6e69 745f 6f66 6620 3d20 303b 0a20 2020  nit_off = 0;.   
0065ae0: 2073 2d3e 696e 6974 5f6e 756d 203d 2030   s->init_num = 0
0065af0: 3b0a 0a20 2020 2072 6574 7572 6e28 3129  ;..    return(1)
0065b00: 3b0a 2020 2020 7d0a 2020 2073 2d3e 696e  ;.    }.   s->in
0065b10: 6974 5f6f 6666 2b3d 7265 743b 0a20 2020  it_off+=ret;.   
0065b20: 732d 3e69 6e69 745f 6e75 6d2d 3d72 6574  s->init_num-=ret
0065b30: 3b0a 2020 2066 7261 675f 6f66 6620 2b3d  ;.   frag_off +=
0065b40: 2028 7265 7420 2d3d 2031 3229 3b0a 2020   (ret -= 12);.  
0065b50: 207d 0a20 207d 0a20 7265 7475 726e 2830   }.  }. return(0
0065b60: 293b 0a20 7d0a 0a0a 0a0a 0a0a 0a6c 6f6e  );. }........lon
0065b70: 6720 6474 6c73 315f 6765 745f 6d65 7373  g dtls1_get_mess
0065b80: 6167 6528 5353 4c20 2a73 2c20 696e 7420  age(SSL *s, int 
0065b90: 7374 312c 2069 6e74 2073 746e 2c20 696e  st1, int stn, in
0065ba0: 7420 6d74 2c20 6c6f 6e67 206d 6178 2c20  t mt, long max, 
0065bb0: 696e 7420 2a6f 6b29 0a20 7b0a 2069 6e74  int *ok). {. int
0065bc0: 2069 2c20 616c 3b0a 2073 7472 7563 7420   i, al;. struct 
0065bd0: 686d 5f68 6561 6465 725f 7374 202a 6d73  hm_header_st *ms
0065be0: 675f 6864 723b 0a20 756e 7369 676e 6564  g_hdr;. unsigned
0065bf0: 2063 6861 7220 2a70 3b0a 2075 6e73 6967   char *p;. unsig
0065c00: 6e65 6420 6c6f 6e67 206d 7367 5f6c 656e  ned long msg_len
0065c10: 3b0a 0a0a 0a20 6966 2028 732d 3e73 332d  ;.... if (s->s3-
0065c20: 3e74 6d70 2e72 6575 7365 5f6d 6573 7361  >tmp.reuse_messa
0065c30: 6765 290a 2020 7b0a 2020 732d 3e73 332d  ge).  {.  s->s3-
0065c40: 3e74 6d70 2e72 6575 7365 5f6d 6573 7361  >tmp.reuse_messa
0065c50: 6765 3d30 3b0a 2020 6966 2028 286d 7420  ge=0;.  if ((mt 
0065c60: 3e3d 2030 2920 2626 2028 732d 3e73 332d  >= 0) && (s->s3-
0065c70: 3e74 6d70 2e6d 6573 7361 6765 5f74 7970  >tmp.message_typ
0065c80: 6520 213d 206d 7429 290a 2020 207b 0a20  e != mt)).   {. 
0065c90: 2020 616c 3d31 303b 0a20 2020 4552 525f    al=10;.   ERR_
0065ca0: 7075 745f 6572 726f 7228 3230 2c28 3235  put_error(20,(25
0065cb0: 3229 2c28 3234 3429 2c22 6431 5f62 6f74  2),(244),"d1_bot
0065cc0: 682e 6322 2c34 3335 293b 0a20 2020 676f  h.c",435);.   go
0065cd0: 746f 2066 5f65 7272 3b0a 2020 207d 0a20  to f_err;.   }. 
0065ce0: 202a 6f6b 3d31 3b0a 2020 732d 3e69 6e69   *ok=1;.  s->ini
0065cf0: 745f 6d73 6720 3d20 732d 3e69 6e69 745f  t_msg = s->init_
0065d00: 6275 662d 3e64 6174 6120 2b20 3132 3b0a  buf->data + 12;.
0065d10: 2020 732d 3e69 6e69 745f 6e75 6d20 3d20    s->init_num = 
0065d20: 2869 6e74 2973 2d3e 7333 2d3e 746d 702e  (int)s->s3->tmp.
0065d30: 6d65 7373 6167 655f 7369 7a65 3b0a 2020  message_size;.  
0065d40: 7265 7475 726e 2073 2d3e 696e 6974 5f6e  return s->init_n
0065d50: 756d 3b0a 2020 7d0a 0a20 6d73 675f 6864  um;.  }.. msg_hd
0065d60: 7220 3d20 2673 2d3e 6431 2d3e 725f 6d73  r = &s->d1->r_ms
0065d70: 675f 6864 723b 0a20 6d65 6d73 6574 286d  g_hdr;. memset(m
0065d80: 7367 5f68 6472 2c20 3078 3030 2c20 7369  sg_hdr, 0x00, si
0065d90: 7a65 6f66 2873 7472 7563 7420 686d 5f68  zeof(struct hm_h
0065da0: 6561 6465 725f 7374 2929 3b0a 0a61 6761  eader_st));..aga
0065db0: 696e 3a0a 2069 203d 2064 746c 7331 5f67  in:. i = dtls1_g
0065dc0: 6574 5f6d 6573 7361 6765 5f66 7261 676d  et_message_fragm
0065dd0: 656e 7428 732c 2073 7431 2c20 7374 6e2c  ent(s, st1, stn,
0065de0: 206d 6178 2c20 6f6b 293b 0a20 6966 2028   max, ok);. if (
0065df0: 2069 203d 3d20 2d32 207c 7c0a 2020 6920   i == -2 ||.  i 
0065e00: 3d3d 202d 3329 0a20 2067 6f74 6f20 6167  == -3).  goto ag
0065e10: 6169 6e3b 0a20 656c 7365 2069 6620 2820  ain;. else if ( 
0065e20: 6920 3c3d 2030 2026 2620 212a 6f6b 290a  i <= 0 && !*ok).
0065e30: 2020 7265 7475 726e 2069 3b0a 0a20 7020    return i;.. p 
0065e40: 3d20 2875 6e73 6967 6e65 6420 6368 6172  = (unsigned char
0065e50: 202a 2973 2d3e 696e 6974 5f62 7566 2d3e   *)s->init_buf->
0065e60: 6461 7461 3b0a 206d 7367 5f6c 656e 203d  data;. msg_len =
0065e70: 206d 7367 5f68 6472 2d3e 6d73 675f 6c65   msg_hdr->msg_le
0065e80: 6e3b 0a0a 0a20 2a28 702b 2b29 203d 206d  n;... *(p++) = m
0065e90: 7367 5f68 6472 2d3e 7479 7065 3b0a 2028  sg_hdr->type;. (
0065ea0: 2870 5b30 5d3d 2875 6e73 6967 6e65 6420  (p[0]=(unsigned 
0065eb0: 6368 6172 2928 2828 6d73 675f 6c65 6e29  char)(((msg_len)
0065ec0: 3e3e 3136 2926 3078 6666 292c 2070 5b31  >>16)&0xff), p[1
0065ed0: 5d3d 2875 6e73 6967 6e65 6420 6368 6172  ]=(unsigned char
0065ee0: 2928 2828 6d73 675f 6c65 6e29 3e3e 2038  )(((msg_len)>> 8
0065ef0: 2926 3078 6666 292c 2070 5b32 5d3d 2875  )&0xff), p[2]=(u
0065f00: 6e73 6967 6e65 6420 6368 6172 2928 2828  nsigned char)(((
0065f10: 6d73 675f 6c65 6e29 2029 2630 7866 6629  msg_len) )&0xff)
0065f20: 292c 702b 3d33 293b 0a20 2828 705b 305d  ),p+=3);. ((p[0]
0065f30: 3d28 756e 7369 676e 6564 2063 6861 7229  =(unsigned char)
0065f40: 2828 286d 7367 5f68 6472 2d3e 7365 7129  (((msg_hdr->seq)
0065f50: 3e3e 2038 2926 3078 6666 292c 2070 5b31  >> 8)&0xff), p[1
0065f60: 5d3d 2875 6e73 6967 6e65 6420 6368 6172  ]=(unsigned char
0065f70: 2928 2828 6d73 675f 6864 722d 3e73 6571  )(((msg_hdr->seq
0065f80: 2920 2926 3078 6666 2929 2c70 2b3d 3229  ) )&0xff)),p+=2)
0065f90: 3b0a 2028 2870 5b30 5d3d 2875 6e73 6967  ;. ((p[0]=(unsig
0065fa0: 6e65 6420 6368 6172 2928 2828 3029 3e3e  ned char)(((0)>>
0065fb0: 3136 2926 3078 6666 292c 2070 5b31 5d3d  16)&0xff), p[1]=
0065fc0: 2875 6e73 6967 6e65 6420 6368 6172 2928  (unsigned char)(
0065fd0: 2828 3029 3e3e 2038 2926 3078 6666 292c  ((0)>> 8)&0xff),
0065fe0: 2070 5b32 5d3d 2875 6e73 6967 6e65 6420   p[2]=(unsigned 
0065ff0: 6368 6172 2928 2828 3029 2029 2630 7866  char)(((0) )&0xf
0066000: 6629 292c 702b 3d33 293b 0a20 2828 705b  f)),p+=3);. ((p[
0066010: 305d 3d28 756e 7369 676e 6564 2063 6861  0]=(unsigned cha
0066020: 7229 2828 286d 7367 5f6c 656e 293e 3e31  r)(((msg_len)>>1
0066030: 3629 2630 7866 6629 2c20 705b 315d 3d28  6)&0xff), p[1]=(
0066040: 756e 7369 676e 6564 2063 6861 7229 2828  unsigned char)((
0066050: 286d 7367 5f6c 656e 293e 3e20 3829 2630  (msg_len)>> 8)&0
0066060: 7866 6629 2c20 705b 325d 3d28 756e 7369  xff), p[2]=(unsi
0066070: 676e 6564 2063 6861 7229 2828 286d 7367  gned char)(((msg
0066080: 5f6c 656e 2920 2926 3078 6666 2929 2c70  _len) )&0xff)),p
0066090: 2b3d 3329 3b0a 2069 6620 2873 2d3e 7665  +=3);. if (s->ve
00660a0: 7273 696f 6e20 213d 2030 7830 3130 3029  rsion != 0x0100)
00660b0: 207b 0a20 2070 202d 3d20 3132 3b0a 2020   {.  p -= 12;.  
00660c0: 6d73 675f 6c65 6e20 2b3d 2031 323b 0a20  msg_len += 12;. 
00660d0: 7d0a 0a20 7373 6c33 5f66 696e 6973 685f  }.. ssl3_finish_
00660e0: 6d61 6328 732c 2070 2c20 6d73 675f 6c65  mac(s, p, msg_le
00660f0: 6e29 3b0a 2069 6620 2873 2d3e 6d73 675f  n);. if (s->msg_
0066100: 6361 6c6c 6261 636b 290a 2020 732d 3e6d  callback).  s->m
0066110: 7367 5f63 616c 6c62 6163 6b28 302c 2073  sg_callback(0, s
0066120: 2d3e 7665 7273 696f 6e2c 2032 322c 0a20  ->version, 22,. 
0066130: 2020 702c 206d 7367 5f6c 656e 2c0a 2020    p, msg_len,.  
0066140: 2073 2c20 732d 3e6d 7367 5f63 616c 6c62   s, s->msg_callb
0066150: 6163 6b5f 6172 6729 3b0a 0a20 6d65 6d73  ack_arg);.. mems
0066160: 6574 286d 7367 5f68 6472 2c20 3078 3030  et(msg_hdr, 0x00
0066170: 2c20 7369 7a65 6f66 2873 7472 7563 7420  , sizeof(struct 
0066180: 686d 5f68 6561 6465 725f 7374 2929 3b0a  hm_header_st));.
0066190: 0a0a 2069 6620 2821 732d 3e64 312d 3e6c  .. if (!s->d1->l
00661a0: 6973 7465 6e29 0a20 2073 2d3e 6431 2d3e  isten).  s->d1->
00661b0: 6861 6e64 7368 616b 655f 7265 6164 5f73  handshake_read_s
00661c0: 6571 2b2b 3b0a 0a20 732d 3e69 6e69 745f  eq++;.. s->init_
00661d0: 6d73 6720 3d20 732d 3e69 6e69 745f 6275  msg = s->init_bu
00661e0: 662d 3e64 6174 6120 2b20 3132 3b0a 2072  f->data + 12;. r
00661f0: 6574 7572 6e20 732d 3e69 6e69 745f 6e75  eturn s->init_nu
0066200: 6d3b 0a0a 665f 6572 723a 0a20 7373 6c33  m;..f_err:. ssl3
0066210: 5f73 656e 645f 616c 6572 7428 732c 322c  _send_alert(s,2,
0066220: 616c 293b 0a20 2a6f 6b20 3d20 303b 0a20  al);. *ok = 0;. 
0066230: 7265 7475 726e 202d 313b 0a20 7d0a 0a0a  return -1;. }...
0066240: 7374 6174 6963 2069 6e74 2064 746c 7331  static int dtls1
0066250: 5f70 7265 7072 6f63 6573 735f 6672 6167  _preprocess_frag
0066260: 6d65 6e74 2853 534c 202a 732c 7374 7275  ment(SSL *s,stru
0066270: 6374 2068 6d5f 6865 6164 6572 5f73 7420  ct hm_header_st 
0066280: 2a6d 7367 5f68 6472 2c69 6e74 206d 6178  *msg_hdr,int max
0066290: 290a 207b 0a20 7369 7a65 5f74 2066 7261  ). {. size_t fra
00662a0: 675f 6f66 662c 6672 6167 5f6c 656e 2c6d  g_off,frag_len,m
00662b0: 7367 5f6c 656e 3b0a 0a20 6d73 675f 6c65  sg_len;.. msg_le
00662c0: 6e20 3d20 6d73 675f 6864 722d 3e6d 7367  n = msg_hdr->msg
00662d0: 5f6c 656e 3b0a 2066 7261 675f 6f66 6620  _len;. frag_off 
00662e0: 3d20 6d73 675f 6864 722d 3e66 7261 675f  = msg_hdr->frag_
00662f0: 6f66 663b 0a20 6672 6167 5f6c 656e 203d  off;. frag_len =
0066300: 206d 7367 5f68 6472 2d3e 6672 6167 5f6c   msg_hdr->frag_l
0066310: 656e 3b0a 0a0a 2069 6620 2820 2866 7261  en;... if ( (fra
0066320: 675f 6f66 662b 6672 6167 5f6c 656e 2920  g_off+frag_len) 
0066330: 3e20 6d73 675f 6c65 6e29 0a20 207b 0a20  > msg_len).  {. 
0066340: 2045 5252 5f70 7574 5f65 7272 6f72 2832   ERR_put_error(2
0066350: 302c 2832 3838 292c 2831 3532 292c 2264  0,(288),(152),"d
0066360: 315f 626f 7468 2e63 222c 3530 3229 3b0a  1_both.c",502);.
0066370: 2020 7265 7475 726e 2034 373b 0a20 207d    return 47;.  }
0066380: 0a0a 2069 6620 2820 2866 7261 675f 6f66  .. if ( (frag_of
0066390: 662b 6672 6167 5f6c 656e 2920 3e20 2875  f+frag_len) > (u
00663a0: 6e73 6967 6e65 6420 6c6f 6e67 296d 6178  nsigned long)max
00663b0: 290a 2020 7b0a 2020 4552 525f 7075 745f  ).  {.  ERR_put_
00663c0: 6572 726f 7228 3230 2c28 3238 3829 2c28  error(20,(288),(
00663d0: 3135 3229 2c22 6431 5f62 6f74 682e 6322  152),"d1_both.c"
00663e0: 2c35 3038 293b 0a20 2072 6574 7572 6e20  ,508);.  return 
00663f0: 3437 3b0a 2020 7d0a 0a20 6966 2028 2073  47;.  }.. if ( s
0066400: 2d3e 6431 2d3e 725f 6d73 675f 6864 722e  ->d1->r_msg_hdr.
0066410: 6672 6167 5f6f 6666 203d 3d20 3029 0a20  frag_off == 0). 
0066420: 207b 0a0a 0a20 2069 6620 2821 4255 465f   {...  if (!BUF_
0066430: 4d45 4d5f 6772 6f77 5f63 6c65 616e 2873  MEM_grow_clean(s
0066440: 2d3e 696e 6974 5f62 7566 2c6d 7367 5f6c  ->init_buf,msg_l
0066450: 656e 2b31 3229 290a 2020 207b 0a20 2020  en+12)).   {.   
0066460: 4552 525f 7075 745f 6572 726f 7228 3230  ERR_put_error(20
0066470: 2c28 3238 3829 2c28 3729 2c22 6431 5f62  ,(288),(7),"d1_b
0066480: 6f74 682e 6322 2c35 3138 293b 0a20 2020  oth.c",518);.   
0066490: 7265 7475 726e 2038 303b 0a20 2020 7d0a  return 80;.   }.
00664a0: 0a20 2073 2d3e 7333 2d3e 746d 702e 6d65  .  s->s3->tmp.me
00664b0: 7373 6167 655f 7369 7a65 203d 206d 7367  ssage_size = msg
00664c0: 5f6c 656e 3b0a 2020 732d 3e64 312d 3e72  _len;.  s->d1->r
00664d0: 5f6d 7367 5f68 6472 2e6d 7367 5f6c 656e  _msg_hdr.msg_len
00664e0: 203d 206d 7367 5f6c 656e 3b0a 2020 732d   = msg_len;.  s-
00664f0: 3e73 332d 3e74 6d70 2e6d 6573 7361 6765  >s3->tmp.message
0066500: 5f74 7970 6520 3d20 6d73 675f 6864 722d  _type = msg_hdr-
0066510: 3e74 7970 653b 0a20 2073 2d3e 6431 2d3e  >type;.  s->d1->
0066520: 725f 6d73 675f 6864 722e 7479 7065 203d  r_msg_hdr.type =
0066530: 206d 7367 5f68 6472 2d3e 7479 7065 3b0a   msg_hdr->type;.
0066540: 2020 732d 3e64 312d 3e72 5f6d 7367 5f68    s->d1->r_msg_h
0066550: 6472 2e73 6571 203d 206d 7367 5f68 6472  dr.seq = msg_hdr
0066560: 2d3e 7365 713b 0a20 207d 0a20 656c 7365  ->seq;.  }. else
0066570: 2069 6620 286d 7367 5f6c 656e 2021 3d20   if (msg_len != 
0066580: 732d 3e64 312d 3e72 5f6d 7367 5f68 6472  s->d1->r_msg_hdr
0066590: 2e6d 7367 5f6c 656e 290a 2020 7b0a 0a0a  .msg_len).  {...
00665a0: 2020 4552 525f 7075 745f 6572 726f 7228    ERR_put_error(
00665b0: 3230 2c28 3238 3829 2c28 3135 3229 2c22  20,(288),(152),"
00665c0: 6431 5f62 6f74 682e 6322 2c35 3332 293b  d1_both.c",532);
00665d0: 0a20 2072 6574 7572 6e20 3437 3b0a 2020  .  return 47;.  
00665e0: 7d0a 0a20 7265 7475 726e 2030 3b0a 207d  }.. return 0;. }
00665f0: 0a0a 0a73 7461 7469 6320 696e 740a 6474  ...static int.dt
0066600: 6c73 315f 7265 7472 6965 7665 5f62 7566  ls1_retrieve_buf
0066610: 6665 7265 645f 6672 6167 6d65 6e74 2853  fered_fragment(S
0066620: 534c 202a 732c 206c 6f6e 6720 6d61 782c  SL *s, long max,
0066630: 2069 6e74 202a 6f6b 290a 207b 0a0a 0a0a   int *ok). {....
0066640: 0a0a 2070 6974 656d 202a 6974 656d 3b0a  .. pitem *item;.
0066650: 2068 6d5f 6672 6167 6d65 6e74 202a 6672   hm_fragment *fr
0066660: 6167 3b0a 2069 6e74 2061 6c3b 0a0a 202a  ag;. int al;.. *
0066670: 6f6b 203d 2030 3b0a 2069 7465 6d20 3d20  ok = 0;. item = 
0066680: 7071 7565 7565 5f70 6565 6b28 732d 3e64  pqueue_peek(s->d
0066690: 312d 3e62 7566 6665 7265 645f 6d65 7373  1->buffered_mess
00666a0: 6167 6573 293b 0a20 6966 2028 2069 7465  ages);. if ( ite
00666b0: 6d20 3d3d 2028 2876 6f69 6420 2a29 3029  m == ((void *)0)
00666c0: 290a 2020 7265 7475 726e 2030 3b0a 0a20  ).  return 0;.. 
00666d0: 6672 6167 203d 2028 686d 5f66 7261 676d  frag = (hm_fragm
00666e0: 656e 7420 2a29 6974 656d 2d3e 6461 7461  ent *)item->data
00666f0: 3b0a 0a0a 2069 6620 2866 7261 672d 3e72  ;... if (frag->r
0066700: 6561 7373 656d 626c 7920 213d 2028 2876  eassembly != ((v
0066710: 6f69 6420 2a29 3029 290a 2020 7265 7475  oid *)0)).  retu
0066720: 726e 2030 3b0a 0a20 6966 2028 2073 2d3e  rn 0;.. if ( s->
0066730: 6431 2d3e 6861 6e64 7368 616b 655f 7265  d1->handshake_re
0066740: 6164 5f73 6571 203d 3d20 6672 6167 2d3e  ad_seq == frag->
0066750: 6d73 675f 6865 6164 6572 2e73 6571 290a  msg_header.seq).
0066760: 2020 7b0a 2020 756e 7369 676e 6564 206c    {.  unsigned l
0066770: 6f6e 6720 6672 6167 5f6c 656e 203d 2066  ong frag_len = f
0066780: 7261 672d 3e6d 7367 5f68 6561 6465 722e  rag->msg_header.
0066790: 6672 6167 5f6c 656e 3b0a 2020 7071 7565  frag_len;.  pque
00667a0: 7565 5f70 6f70 2873 2d3e 6431 2d3e 6275  ue_pop(s->d1->bu
00667b0: 6666 6572 6564 5f6d 6573 7361 6765 7329  ffered_messages)
00667c0: 3b0a 0a20 2061 6c3d 6474 6c73 315f 7072  ;..  al=dtls1_pr
00667d0: 6570 726f 6365 7373 5f66 7261 676d 656e  eprocess_fragmen
00667e0: 7428 732c 2666 7261 672d 3e6d 7367 5f68  t(s,&frag->msg_h
00667f0: 6561 6465 722c 6d61 7829 3b0a 0a20 2069  eader,max);..  i
0066800: 6620 2861 6c3d 3d30 290a 2020 207b 0a20  f (al==0).   {. 
0066810: 2020 756e 7369 676e 6564 2063 6861 7220    unsigned char 
0066820: 2a70 203d 2028 756e 7369 676e 6564 2063  *p = (unsigned c
0066830: 6861 7220 2a29 732d 3e69 6e69 745f 6275  har *)s->init_bu
0066840: 662d 3e64 6174 612b 3132 3b0a 2020 206d  f->data+12;.   m
0066850: 656d 6370 7928 2670 5b66 7261 672d 3e6d  emcpy(&p[frag->m
0066860: 7367 5f68 6561 6465 722e 6672 6167 5f6f  sg_header.frag_o
0066870: 6666 5d2c 0a20 2020 2066 7261 672d 3e66  ff],.    frag->f
0066880: 7261 676d 656e 742c 6672 6167 2d3e 6d73  ragment,frag->ms
0066890: 675f 6865 6164 6572 2e66 7261 675f 6c65  g_header.frag_le
00668a0: 6e29 3b0a 2020 207d 0a0a 2020 6474 6c73  n);.   }..  dtls
00668b0: 315f 686d 5f66 7261 676d 656e 745f 6672  1_hm_fragment_fr
00668c0: 6565 2866 7261 6729 3b0a 2020 7069 7465  ee(frag);.  pite
00668d0: 6d5f 6672 6565 2869 7465 6d29 3b0a 0a20  m_free(item);.. 
00668e0: 2069 6620 2861 6c3d 3d30 290a 2020 207b   if (al==0).   {
00668f0: 0a20 2020 2a6f 6b20 3d20 313b 0a20 2020  .   *ok = 1;.   
0066900: 7265 7475 726e 2066 7261 675f 6c65 6e3b  return frag_len;
0066910: 0a20 2020 7d0a 0a20 2073 736c 335f 7365  .   }..  ssl3_se
0066920: 6e64 5f61 6c65 7274 2873 2c32 2c61 6c29  nd_alert(s,2,al)
0066930: 3b0a 2020 732d 3e69 6e69 745f 6e75 6d20  ;.  s->init_num 
0066940: 3d20 303b 0a20 202a 6f6b 203d 2030 3b0a  = 0;.  *ok = 0;.
0066950: 2020 7265 7475 726e 202d 313b 0a20 207d    return -1;.  }
0066960: 0a20 656c 7365 0a20 2072 6574 7572 6e20  . else.  return 
0066970: 303b 0a20 7d0a 0a0a 7374 6174 6963 2069  0;. }...static i
0066980: 6e74 0a64 746c 7331 5f72 6561 7373 656d  nt.dtls1_reassem
0066990: 626c 655f 6672 6167 6d65 6e74 2853 534c  ble_fragment(SSL
00669a0: 202a 732c 2073 7472 7563 7420 686d 5f68   *s, struct hm_h
00669b0: 6561 6465 725f 7374 2a20 6d73 675f 6864  eader_st* msg_hd
00669c0: 722c 2069 6e74 202a 6f6b 290a 207b 0a20  r, int *ok). {. 
00669d0: 686d 5f66 7261 676d 656e 7420 2a66 7261  hm_fragment *fra
00669e0: 6720 3d20 2828 766f 6964 202a 2930 293b  g = ((void *)0);
00669f0: 0a20 7069 7465 6d20 2a69 7465 6d20 3d20  . pitem *item = 
0066a00: 2828 766f 6964 202a 2930 293b 0a20 696e  ((void *)0);. in
0066a10: 7420 6920 3d20 2d31 2c20 6973 5f63 6f6d  t i = -1, is_com
0066a20: 706c 6574 653b 0a20 756e 7369 676e 6564  plete;. unsigned
0066a30: 2063 6861 7220 7365 7136 3462 655b 385d   char seq64be[8]
0066a40: 3b0a 2075 6e73 6967 6e65 6420 6c6f 6e67  ;. unsigned long
0066a50: 2066 7261 675f 6c65 6e20 3d20 6d73 675f   frag_len = msg_
0066a60: 6864 722d 3e66 7261 675f 6c65 6e2c 206d  hdr->frag_len, m
0066a70: 6178 5f6c 656e 3b0a 0a20 6966 2028 286d  ax_len;.. if ((m
0066a80: 7367 5f68 6472 2d3e 6672 6167 5f6f 6666  sg_hdr->frag_off
0066a90: 2b66 7261 675f 6c65 6e29 203e 206d 7367  +frag_len) > msg
0066aa0: 5f68 6472 2d3e 6d73 675f 6c65 6e29 0a20  _hdr->msg_len). 
0066ab0: 2067 6f74 6f20 6572 723b 0a0a 0a0a 0a20   goto err;..... 
0066ac0: 6966 2028 3132 202b 2028 2832 3536 202b  if (12 + ((256 +
0066ad0: 2036 3429 2b28 3136 3338 3420 2b31 3032   64)+(16384 +102
0066ae0: 3429 2920 3c20 732d 3e6d 6178 5f63 6572  4)) < s->max_cer
0066af0: 745f 6c69 7374 290a 2020 6d61 785f 6c65  t_list).  max_le
0066b00: 6e20 3d20 732d 3e6d 6178 5f63 6572 745f  n = s->max_cert_
0066b10: 6c69 7374 3b0a 2065 6c73 650a 2020 6d61  list;. else.  ma
0066b20: 785f 6c65 6e20 3d20 3132 202b 2028 2832  x_len = 12 + ((2
0066b30: 3536 202b 2036 3429 2b28 3136 3338 3420  56 + 64)+(16384 
0066b40: 2b31 3032 3429 293b 0a0a 2069 6620 2828  +1024));.. if ((
0066b50: 6d73 675f 6864 722d 3e66 7261 675f 6f66  msg_hdr->frag_of
0066b60: 662b 6672 6167 5f6c 656e 2920 3e20 6d61  f+frag_len) > ma
0066b70: 785f 6c65 6e29 0a20 2067 6f74 6f20 6572  x_len).  goto er
0066b80: 723b 0a0a 0a20 6d65 6d73 6574 2873 6571  r;... memset(seq
0066b90: 3634 6265 2c30 2c73 697a 656f 6628 7365  64be,0,sizeof(se
0066ba0: 7136 3462 6529 293b 0a20 7365 7136 3462  q64be));. seq64b
0066bb0: 655b 365d 203d 2028 756e 7369 676e 6564  e[6] = (unsigned
0066bc0: 2063 6861 7229 2028 6d73 675f 6864 722d   char) (msg_hdr-
0066bd0: 3e73 6571 3e3e 3829 3b0a 2073 6571 3634  >seq>>8);. seq64
0066be0: 6265 5b37 5d20 3d20 2875 6e73 6967 6e65  be[7] = (unsigne
0066bf0: 6420 6368 6172 2920 6d73 675f 6864 722d  d char) msg_hdr-
0066c00: 3e73 6571 3b0a 2069 7465 6d20 3d20 7071  >seq;. item = pq
0066c10: 7565 7565 5f66 696e 6428 732d 3e64 312d  ueue_find(s->d1-
0066c20: 3e62 7566 6665 7265 645f 6d65 7373 6167  >buffered_messag
0066c30: 6573 2c20 7365 7136 3462 6529 3b0a 0a20  es, seq64be);.. 
0066c40: 6966 2028 6974 656d 203d 3d20 2828 766f  if (item == ((vo
0066c50: 6964 202a 2930 2929 0a20 207b 0a20 2066  id *)0)).  {.  f
0066c60: 7261 6720 3d20 6474 6c73 315f 686d 5f66  rag = dtls1_hm_f
0066c70: 7261 676d 656e 745f 6e65 7728 6d73 675f  ragment_new(msg_
0066c80: 6864 722d 3e6d 7367 5f6c 656e 2c20 3129  hdr->msg_len, 1)
0066c90: 3b0a 2020 6966 2028 2066 7261 6720 3d3d  ;.  if ( frag ==
0066ca0: 2028 2876 6f69 6420 2a29 3029 290a 2020   ((void *)0)).  
0066cb0: 2067 6f74 6f20 6572 723b 0a20 206d 656d   goto err;.  mem
0066cc0: 6370 7928 2628 6672 6167 2d3e 6d73 675f  cpy(&(frag->msg_
0066cd0: 6865 6164 6572 292c 206d 7367 5f68 6472  header), msg_hdr
0066ce0: 2c20 7369 7a65 6f66 282a 6d73 675f 6864  , sizeof(*msg_hd
0066cf0: 7229 293b 0a20 2066 7261 672d 3e6d 7367  r));.  frag->msg
0066d00: 5f68 6561 6465 722e 6672 6167 5f6c 656e  _header.frag_len
0066d10: 203d 2066 7261 672d 3e6d 7367 5f68 6561   = frag->msg_hea
0066d20: 6465 722e 6d73 675f 6c65 6e3b 0a20 2066  der.msg_len;.  f
0066d30: 7261 672d 3e6d 7367 5f68 6561 6465 722e  rag->msg_header.
0066d40: 6672 6167 5f6f 6666 203d 2030 3b0a 2020  frag_off = 0;.  
0066d50: 7d0a 2065 6c73 650a 2020 6672 6167 203d  }. else.  frag =
0066d60: 2028 686d 5f66 7261 676d 656e 742a 2920   (hm_fragment*) 
0066d70: 6974 656d 2d3e 6461 7461 3b0a 0a0a 0a0a  item->data;.....
0066d80: 2069 6620 2866 7261 672d 3e72 6561 7373   if (frag->reass
0066d90: 656d 626c 7920 3d3d 2028 2876 6f69 6420  embly == ((void 
0066da0: 2a29 3029 290a 2020 7b0a 2020 756e 7369  *)0)).  {.  unsi
0066db0: 676e 6564 2063 6861 7220 6465 766e 756c  gned char devnul
0066dc0: 6c20 5b32 3536 5d3b 0a0a 2020 7768 696c  l [256];..  whil
0066dd0: 6520 2866 7261 675f 6c65 6e29 0a20 2020  e (frag_len).   
0066de0: 7b0a 2020 2069 203d 2073 2d3e 6d65 7468  {.   i = s->meth
0066df0: 6f64 2d3e 7373 6c5f 7265 6164 5f62 7974  od->ssl_read_byt
0066e00: 6573 2873 2c32 322c 0a20 2020 2064 6576  es(s,22,.    dev
0066e10: 6e75 6c6c 2c0a 2020 2020 6672 6167 5f6c  null,.    frag_l
0066e20: 656e 3e73 697a 656f 6628 6465 766e 756c  en>sizeof(devnul
0066e30: 6c29 3f73 697a 656f 6628 6465 766e 756c  l)?sizeof(devnul
0066e40: 6c29 3a66 7261 675f 6c65 6e2c 3029 3b0a  l):frag_len,0);.
0066e50: 2020 2069 6620 2869 3c3d 3029 2067 6f74     if (i<=0) got
0066e60: 6f20 6572 723b 0a20 2020 6672 6167 5f6c  o err;.   frag_l
0066e70: 656e 202d 3d20 693b 0a20 2020 7d0a 2020  en -= i;.   }.  
0066e80: 7265 7475 726e 202d 333b 0a20 207d 0a0a  return -3;.  }..
0066e90: 0a20 6920 3d20 732d 3e6d 6574 686f 642d  . i = s->method-
0066ea0: 3e73 736c 5f72 6561 645f 6279 7465 7328  >ssl_read_bytes(
0066eb0: 732c 3232 2c0a 2020 6672 6167 2d3e 6672  s,22,.  frag->fr
0066ec0: 6167 6d65 6e74 202b 206d 7367 5f68 6472  agment + msg_hdr
0066ed0: 2d3e 6672 6167 5f6f 6666 2c66 7261 675f  ->frag_off,frag_
0066ee0: 6c65 6e2c 3029 3b0a 2069 6620 2869 3c3d  len,0);. if (i<=
0066ef0: 3020 7c7c 2028 756e 7369 676e 6564 206c  0 || (unsigned l
0066f00: 6f6e 6729 6921 3d66 7261 675f 6c65 6e29  ong)i!=frag_len)
0066f10: 0a20 2067 6f74 6f20 6572 723b 0a0a 207b  .  goto err;.. {
0066f20: 2069 6620 2828 286c 6f6e 6729 286d 7367   if (((long)(msg
0066f30: 5f68 6472 2d3e 6672 6167 5f6f 6666 202b  _hdr->frag_off +
0066f40: 2066 7261 675f 6c65 6e29 2920 2d20 2828   frag_len)) - ((
0066f50: 6c6f 6e67 296d 7367 5f68 6472 2d3e 6672  long)msg_hdr->fr
0066f60: 6167 5f6f 6666 2920 3c3d 2038 2920 7b20  ag_off) <= 8) { 
0066f70: 6c6f 6e67 2069 693b 2066 6f72 2028 6969  long ii; for (ii
0066f80: 203d 2028 286c 6f6e 6729 6d73 675f 6864   = ((long)msg_hd
0066f90: 722d 3e66 7261 675f 6f66 6629 3b20 6969  r->frag_off); ii
0066fa0: 203c 2028 286c 6f6e 6729 286d 7367 5f68   < ((long)(msg_h
0066fb0: 6472 2d3e 6672 6167 5f6f 6666 202b 2066  dr->frag_off + f
0066fc0: 7261 675f 6c65 6e29 293b 2069 692b 2b29  rag_len)); ii++)
0066fd0: 2066 7261 672d 3e72 6561 7373 656d 626c   frag->reassembl
0066fe0: 795b 2828 6969 2920 3e3e 2033 295d 207c  y[((ii) >> 3)] |
0066ff0: 3d20 2831 203c 3c20 2828 6969 2920 2620  = (1 << ((ii) & 
0067000: 3729 293b 207d 2065 6c73 6520 7b20 6c6f  7)); } else { lo
0067010: 6e67 2069 693b 2066 7261 672d 3e72 6561  ng ii; frag->rea
0067020: 7373 656d 626c 795b 2828 286c 6f6e 6729  ssembly[(((long)
0067030: 6d73 675f 6864 722d 3e66 7261 675f 6f66  msg_hdr->frag_of
0067040: 6629 203e 3e20 3329 5d20 7c3d 2062 6974  f) >> 3)] |= bit
0067050: 6d61 736b 5f73 7461 7274 5f76 616c 7565  mask_start_value
0067060: 735b 2828 286c 6f6e 6729 6d73 675f 6864  s[(((long)msg_hd
0067070: 722d 3e66 7261 675f 6f66 6629 2026 2037  r->frag_off) & 7
0067080: 295d 3b20 666f 7220 2869 6920 3d20 2828  )]; for (ii = ((
0067090: 2828 6c6f 6e67 296d 7367 5f68 6472 2d3e  ((long)msg_hdr->
00670a0: 6672 6167 5f6f 6666 2920 3e3e 2033 2920  frag_off) >> 3) 
00670b0: 2b20 3129 3b20 6969 203c 2028 2828 2828  + 1); ii < (((((
00670c0: 6c6f 6e67 2928 6d73 675f 6864 722d 3e66  long)(msg_hdr->f
00670d0: 7261 675f 6f66 6620 2b20 6672 6167 5f6c  rag_off + frag_l
00670e0: 656e 2929 202d 2031 2929 203e 3e20 3329  en)) - 1)) >> 3)
00670f0: 3b20 6969 2b2b 2920 6672 6167 2d3e 7265  ; ii++) frag->re
0067100: 6173 7365 6d62 6c79 5b69 695d 203d 2030  assembly[ii] = 0
0067110: 7866 663b 2066 7261 672d 3e72 6561 7373  xff; frag->reass
0067120: 656d 626c 795b 2828 2828 6c6f 6e67 2928  embly[((((long)(
0067130: 6d73 675f 6864 722d 3e66 7261 675f 6f66  msg_hdr->frag_of
0067140: 6620 2b20 6672 6167 5f6c 656e 2929 202d  f + frag_len)) -
0067150: 2031 2920 3e3e 2033 295d 207c 3d20 6269   1) >> 3)] |= bi
0067160: 746d 6173 6b5f 656e 645f 7661 6c75 6573  tmask_end_values
0067170: 5b28 2828 6c6f 6e67 2928 6d73 675f 6864  [(((long)(msg_hd
0067180: 722d 3e66 7261 675f 6f66 6620 2b20 6672  r->frag_off + fr
0067190: 6167 5f6c 656e 2929 2026 2037 295d 3b20  ag_len)) & 7)]; 
00671a0: 7d20 7d0a 2020 2020 2020 2020 2020 2020  } }.            
00671b0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00671c0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00671d0: 2020 2020 2020 2020 2020 2020 2020 3b0a                ;.
00671e0: 0a20 7b20 6c6f 6e67 2069 693b 2028 766f  . { long ii; (vo
00671f0: 6964 2928 2828 286c 6f6e 6729 6d73 675f  id)((((long)msg_
0067200: 6864 722d 3e6d 7367 5f6c 656e 2920 3e20  hdr->msg_len) > 
0067210: 3029 203f 2030 203a 2028 4f70 656e 5353  0) ? 0 : (OpenSS
0067220: 4c44 6965 280a 2022 6431 5f62 6f74 682e  LDie(. "d1_both.
0067230: 6322 0a23 2036 3634 2022 6431 5f62 6f74  c".# 664 "d1_bot
0067240: 682e 6322 2033 2034 0a20 2c0a 2036 3635  h.c" 3 4. ,. 665
0067250: 0a23 2036 3634 2022 6431 5f62 6f74 682e  .# 664 "d1_both.
0067260: 6322 2033 2034 0a20 2c20 2228 286c 6f6e  c" 3 4. , "((lon
0067270: 6729 6d73 675f 6864 722d 3e6d 7367 5f6c  g)msg_hdr->msg_l
0067280: 656e 2920 3e20 3022 292c 3129 293b 2069  en) > 0"),1)); i
0067290: 735f 636f 6d70 6c65 7465 203d 2031 3b20  s_complete = 1; 
00672a0: 6966 2028 6672 6167 2d3e 7265 6173 7365  if (frag->reasse
00672b0: 6d62 6c79 5b28 2828 286c 6f6e 6729 6d73  mbly[((((long)ms
00672c0: 675f 6864 722d 3e6d 7367 5f6c 656e 2920  g_hdr->msg_len) 
00672d0: 2d20 3129 203e 3e20 3329 5d20 213d 2062  - 1) >> 3)] != b
00672e0: 6974 6d61 736b 5f65 6e64 5f76 616c 7565  itmask_end_value
00672f0: 735b 2828 286c 6f6e 6729 6d73 675f 6864  s[(((long)msg_hd
0067300: 722d 3e6d 7367 5f6c 656e 2920 2620 3729  r->msg_len) & 7)
0067310: 5d29 2069 735f 636f 6d70 6c65 7465 203d  ]) is_complete =
0067320: 2030 3b20 6966 2028 6973 5f63 6f6d 706c   0; if (is_compl
0067330: 6574 6529 2066 6f72 2028 6969 203d 2028  ete) for (ii = (
0067340: 2828 286c 6f6e 6729 6d73 675f 6864 722d  (((long)msg_hdr-
0067350: 3e6d 7367 5f6c 656e 2920 2d20 3129 203e  >msg_len) - 1) >
0067360: 3e20 3329 202d 2031 3b20 6969 203e 3d20  > 3) - 1; ii >= 
0067370: 3020 3b20 6969 2d2d 2920 6966 2028 6672  0 ; ii--) if (fr
0067380: 6167 2d3e 7265 6173 7365 6d62 6c79 5b69  ag->reassembly[i
0067390: 695d 2021 3d20 3078 6666 2920 7b20 6973  i] != 0xff) { is
00673a0: 5f63 6f6d 706c 6574 6520 3d20 303b 2062  _complete = 0; b
00673b0: 7265 616b 3b20 7d20 7d0a 2020 2020 2020  reak; } }.      
00673c0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00673d0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00673e0: 2020 3b0a 0a20 6966 2028 6973 5f63 6f6d    ;.. if (is_com
00673f0: 706c 6574 6529 0a20 207b 0a20 2043 5259  plete).  {.  CRY
0067400: 5054 4f5f 6672 6565 2866 7261 672d 3e72  PTO_free(frag->r
0067410: 6561 7373 656d 626c 7929 3b0a 2020 6672  eassembly);.  fr
0067420: 6167 2d3e 7265 6173 7365 6d62 6c79 203d  ag->reassembly =
0067430: 2028 2876 6f69 6420 2a29 3029 3b0a 2020   ((void *)0);.  
0067440: 7d0a 0a20 6966 2028 6974 656d 203d 3d20  }.. if (item == 
0067450: 2828 766f 6964 202a 2930 2929 0a20 207b  ((void *)0)).  {
0067460: 0a20 206d 656d 7365 7428 7365 7136 3462  .  memset(seq64b
0067470: 652c 302c 7369 7a65 6f66 2873 6571 3634  e,0,sizeof(seq64
0067480: 6265 2929 3b0a 2020 7365 7136 3462 655b  be));.  seq64be[
0067490: 365d 203d 2028 756e 7369 676e 6564 2063  6] = (unsigned c
00674a0: 6861 7229 286d 7367 5f68 6472 2d3e 7365  har)(msg_hdr->se
00674b0: 713e 3e38 293b 0a20 2073 6571 3634 6265  q>>8);.  seq64be
00674c0: 5b37 5d20 3d20 2875 6e73 6967 6e65 6420  [7] = (unsigned 
00674d0: 6368 6172 2928 6d73 675f 6864 722d 3e73  char)(msg_hdr->s
00674e0: 6571 293b 0a0a 2020 6974 656d 203d 2070  eq);..  item = p
00674f0: 6974 656d 5f6e 6577 2873 6571 3634 6265  item_new(seq64be
0067500: 2c20 6672 6167 293b 0a20 2069 6620 2869  , frag);.  if (i
0067510: 7465 6d20 3d3d 2028 2876 6f69 6420 2a29  tem == ((void *)
0067520: 3029 290a 2020 207b 0a20 2020 676f 746f  0)).   {.   goto
0067530: 2065 7272 3b0a 2020 2069 203d 202d 313b   err;.   i = -1;
0067540: 0a20 2020 7d0a 0a20 2070 7175 6575 655f  .   }..  pqueue_
0067550: 696e 7365 7274 2873 2d3e 6431 2d3e 6275  insert(s->d1->bu
0067560: 6666 6572 6564 5f6d 6573 7361 6765 732c  ffered_messages,
0067570: 2069 7465 6d29 3b0a 2020 7d0a 0a20 7265   item);.  }.. re
0067580: 7475 726e 202d 333b 0a0a 6572 723a 0a20  turn -3;..err:. 
0067590: 6966 2028 6672 6167 2021 3d20 2828 766f  if (frag != ((vo
00675a0: 6964 202a 2930 2929 2064 746c 7331 5f68  id *)0)) dtls1_h
00675b0: 6d5f 6672 6167 6d65 6e74 5f66 7265 6528  m_fragment_free(
00675c0: 6672 6167 293b 0a20 6966 2028 6974 656d  frag);. if (item
00675d0: 2021 3d20 2828 766f 6964 202a 2930 2929   != ((void *)0))
00675e0: 2043 5259 5054 4f5f 6672 6565 2869 7465   CRYPTO_free(ite
00675f0: 6d29 3b0a 202a 6f6b 203d 2030 3b0a 2072  m);. *ok = 0;. r
0067600: 6574 7572 6e20 693b 0a20 7d0a 0a0a 7374  eturn i;. }...st
0067610: 6174 6963 2069 6e74 0a64 746c 7331 5f70  atic int.dtls1_p
0067620: 726f 6365 7373 5f6f 7574 5f6f 665f 7365  rocess_out_of_se
0067630: 715f 6d65 7373 6167 6528 5353 4c20 2a73  q_message(SSL *s
0067640: 2c20 7374 7275 6374 2068 6d5f 6865 6164  , struct hm_head
0067650: 6572 5f73 742a 206d 7367 5f68 6472 2c20  er_st* msg_hdr, 
0067660: 696e 7420 2a6f 6b29 0a7b 0a20 696e 7420  int *ok).{. int 
0067670: 693d 2d31 3b0a 2068 6d5f 6672 6167 6d65  i=-1;. hm_fragme
0067680: 6e74 202a 6672 6167 203d 2028 2876 6f69  nt *frag = ((voi
0067690: 6420 2a29 3029 3b0a 2070 6974 656d 202a  d *)0);. pitem *
00676a0: 6974 656d 203d 2028 2876 6f69 6420 2a29  item = ((void *)
00676b0: 3029 3b0a 2075 6e73 6967 6e65 6420 6368  0);. unsigned ch
00676c0: 6172 2073 6571 3634 6265 5b38 5d3b 0a20  ar seq64be[8];. 
00676d0: 756e 7369 676e 6564 206c 6f6e 6720 6672  unsigned long fr
00676e0: 6167 5f6c 656e 203d 206d 7367 5f68 6472  ag_len = msg_hdr
00676f0: 2d3e 6672 6167 5f6c 656e 3b0a 0a20 6966  ->frag_len;.. if
0067700: 2028 286d 7367 5f68 6472 2d3e 6672 6167   ((msg_hdr->frag
0067710: 5f6f 6666 2b66 7261 675f 6c65 6e29 203e  _off+frag_len) >
0067720: 206d 7367 5f68 6472 2d3e 6d73 675f 6c65   msg_hdr->msg_le
0067730: 6e29 0a20 2067 6f74 6f20 6572 723b 0a0a  n).  goto err;..
0067740: 0a20 6d65 6d73 6574 2873 6571 3634 6265  . memset(seq64be
0067750: 2c30 2c73 697a 656f 6628 7365 7136 3462  ,0,sizeof(seq64b
0067760: 6529 293b 0a20 7365 7136 3462 655b 365d  e));. seq64be[6]
0067770: 203d 2028 756e 7369 676e 6564 2063 6861   = (unsigned cha
0067780: 7229 2028 6d73 675f 6864 722d 3e73 6571  r) (msg_hdr->seq
0067790: 3e3e 3829 3b0a 2073 6571 3634 6265 5b37  >>8);. seq64be[7
00677a0: 5d20 3d20 2875 6e73 6967 6e65 6420 6368  ] = (unsigned ch
00677b0: 6172 2920 6d73 675f 6864 722d 3e73 6571  ar) msg_hdr->seq
00677c0: 3b0a 2069 7465 6d20 3d20 7071 7565 7565  ;. item = pqueue
00677d0: 5f66 696e 6428 732d 3e64 312d 3e62 7566  _find(s->d1->buf
00677e0: 6665 7265 645f 6d65 7373 6167 6573 2c20  fered_messages, 
00677f0: 7365 7136 3462 6529 3b0a 0a0a 0a0a 2069  seq64be);..... i
0067800: 6620 2869 7465 6d20 213d 2028 2876 6f69  f (item != ((voi
0067810: 6420 2a29 3029 2026 2620 6672 6167 5f6c  d *)0) && frag_l
0067820: 656e 203c 206d 7367 5f68 6472 2d3e 6d73  en < msg_hdr->ms
0067830: 675f 6c65 6e29 0a20 2069 7465 6d20 3d20  g_len).  item = 
0067840: 2828 766f 6964 202a 2930 293b 0a0a 0a0a  ((void *)0);....
0067850: 0a0a 0a20 6966 2028 6d73 675f 6864 722d  ... if (msg_hdr-
0067860: 3e73 6571 203c 3d20 732d 3e64 312d 3e68  >seq <= s->d1->h
0067870: 616e 6473 6861 6b65 5f72 6561 645f 7365  andshake_read_se
0067880: 7120 7c7c 0a20 206d 7367 5f68 6472 2d3e  q ||.  msg_hdr->
0067890: 7365 7120 3e20 732d 3e64 312d 3e68 616e  seq > s->d1->han
00678a0: 6473 6861 6b65 5f72 6561 645f 7365 7120  dshake_read_seq 
00678b0: 2b20 3130 207c 7c20 6974 656d 2021 3d20  + 10 || item != 
00678c0: 2828 766f 6964 202a 2930 2920 7c7c 0a20  ((void *)0) ||. 
00678d0: 2028 732d 3e64 312d 3e68 616e 6473 6861   (s->d1->handsha
00678e0: 6b65 5f72 6561 645f 7365 7120 3d3d 2030  ke_read_seq == 0
00678f0: 2026 2620 6d73 675f 6864 722d 3e74 7970   && msg_hdr->typ
0067900: 6520 3d3d 2032 3029 290a 2020 7b0a 2020  e == 20)).  {.  
0067910: 756e 7369 676e 6564 2063 6861 7220 6465  unsigned char de
0067920: 766e 756c 6c20 5b32 3536 5d3b 0a0a 2020  vnull [256];..  
0067930: 7768 696c 6520 2866 7261 675f 6c65 6e29  while (frag_len)
0067940: 0a20 2020 7b0a 2020 2069 203d 2073 2d3e  .   {.   i = s->
0067950: 6d65 7468 6f64 2d3e 7373 6c5f 7265 6164  method->ssl_read
0067960: 5f62 7974 6573 2873 2c32 322c 0a20 2020  _bytes(s,22,.   
0067970: 2064 6576 6e75 6c6c 2c0a 2020 2020 6672   devnull,.    fr
0067980: 6167 5f6c 656e 3e73 697a 656f 6628 6465  ag_len>sizeof(de
0067990: 766e 756c 6c29 3f73 697a 656f 6628 6465  vnull)?sizeof(de
00679a0: 766e 756c 6c29 3a66 7261 675f 6c65 6e2c  vnull):frag_len,
00679b0: 3029 3b0a 2020 2069 6620 2869 3c3d 3029  0);.   if (i<=0)
00679c0: 2067 6f74 6f20 6572 723b 0a20 2020 6672   goto err;.   fr
00679d0: 6167 5f6c 656e 202d 3d20 693b 0a20 2020  ag_len -= i;.   
00679e0: 7d0a 2020 7d0a 2065 6c73 650a 2020 7b0a  }.  }. else.  {.
00679f0: 2020 6966 2028 6672 6167 5f6c 656e 2026    if (frag_len &
0067a00: 2620 6672 6167 5f6c 656e 203c 206d 7367  & frag_len < msg
0067a10: 5f68 6472 2d3e 6d73 675f 6c65 6e29 0a20  _hdr->msg_len). 
0067a20: 2020 7265 7475 726e 2064 746c 7331 5f72    return dtls1_r
0067a30: 6561 7373 656d 626c 655f 6672 6167 6d65  eassemble_fragme
0067a40: 6e74 2873 2c20 6d73 675f 6864 722c 206f  nt(s, msg_hdr, o
0067a50: 6b29 3b0a 0a20 2066 7261 6720 3d20 6474  k);..  frag = dt
0067a60: 6c73 315f 686d 5f66 7261 676d 656e 745f  ls1_hm_fragment_
0067a70: 6e65 7728 6672 6167 5f6c 656e 2c20 3029  new(frag_len, 0)
0067a80: 3b0a 2020 6966 2028 2066 7261 6720 3d3d  ;.  if ( frag ==
0067a90: 2028 2876 6f69 6420 2a29 3029 290a 2020   ((void *)0)).  
0067aa0: 2067 6f74 6f20 6572 723b 0a0a 2020 6d65   goto err;..  me
0067ab0: 6d63 7079 2826 2866 7261 672d 3e6d 7367  mcpy(&(frag->msg
0067ac0: 5f68 6561 6465 7229 2c20 6d73 675f 6864  _header), msg_hd
0067ad0: 722c 2073 697a 656f 6628 2a6d 7367 5f68  r, sizeof(*msg_h
0067ae0: 6472 2929 3b0a 0a20 2069 6620 2866 7261  dr));..  if (fra
0067af0: 675f 6c65 6e29 0a20 2020 7b0a 0a20 2020  g_len).   {..   
0067b00: 6920 3d20 732d 3e6d 6574 686f 642d 3e73  i = s->method->s
0067b10: 736c 5f72 6561 645f 6279 7465 7328 732c  sl_read_bytes(s,
0067b20: 3232 2c0a 2020 2020 6672 6167 2d3e 6672  22,.    frag->fr
0067b30: 6167 6d65 6e74 2c66 7261 675f 6c65 6e2c  agment,frag_len,
0067b40: 3029 3b0a 2020 2069 6620 2869 3c3d 3020  0);.   if (i<=0 
0067b50: 7c7c 2028 756e 7369 676e 6564 206c 6f6e  || (unsigned lon
0067b60: 6729 6921 3d66 7261 675f 6c65 6e29 0a20  g)i!=frag_len). 
0067b70: 2020 2067 6f74 6f20 6572 723b 0a20 2020     goto err;.   
0067b80: 7d0a 0a20 206d 656d 7365 7428 7365 7136  }..  memset(seq6
0067b90: 3462 652c 302c 7369 7a65 6f66 2873 6571  4be,0,sizeof(seq
0067ba0: 3634 6265 2929 3b0a 2020 7365 7136 3462  64be));.  seq64b
0067bb0: 655b 365d 203d 2028 756e 7369 676e 6564  e[6] = (unsigned
0067bc0: 2063 6861 7229 286d 7367 5f68 6472 2d3e   char)(msg_hdr->
0067bd0: 7365 713e 3e38 293b 0a20 2073 6571 3634  seq>>8);.  seq64
0067be0: 6265 5b37 5d20 3d20 2875 6e73 6967 6e65  be[7] = (unsigne
0067bf0: 6420 6368 6172 2928 6d73 675f 6864 722d  d char)(msg_hdr-
0067c00: 3e73 6571 293b 0a0a 2020 6974 656d 203d  >seq);..  item =
0067c10: 2070 6974 656d 5f6e 6577 2873 6571 3634   pitem_new(seq64
0067c20: 6265 2c20 6672 6167 293b 0a20 2069 6620  be, frag);.  if 
0067c30: 2820 6974 656d 203d 3d20 2828 766f 6964  ( item == ((void
0067c40: 202a 2930 2929 0a20 2020 676f 746f 2065   *)0)).   goto e
0067c50: 7272 3b0a 0a20 2070 7175 6575 655f 696e  rr;..  pqueue_in
0067c60: 7365 7274 2873 2d3e 6431 2d3e 6275 6666  sert(s->d1->buff
0067c70: 6572 6564 5f6d 6573 7361 6765 732c 2069  ered_messages, i
0067c80: 7465 6d29 3b0a 2020 7d0a 0a20 7265 7475  tem);.  }.. retu
0067c90: 726e 202d 333b 0a0a 6572 723a 0a20 6966  rn -3;..err:. if
0067ca0: 2028 2066 7261 6720 213d 2028 2876 6f69   ( frag != ((voi
0067cb0: 6420 2a29 3029 2920 6474 6c73 315f 686d  d *)0)) dtls1_hm
0067cc0: 5f66 7261 676d 656e 745f 6672 6565 2866  _fragment_free(f
0067cd0: 7261 6729 3b0a 2069 6620 2820 6974 656d  rag);. if ( item
0067ce0: 2021 3d20 2828 766f 6964 202a 2930 2929   != ((void *)0))
0067cf0: 2043 5259 5054 4f5f 6672 6565 2869 7465   CRYPTO_free(ite
0067d00: 6d29 3b0a 202a 6f6b 203d 2030 3b0a 2072  m);. *ok = 0;. r
0067d10: 6574 7572 6e20 693b 0a20 7d0a 0a0a 7374  eturn i;. }...st
0067d20: 6174 6963 206c 6f6e 670a 6474 6c73 315f  atic long.dtls1_
0067d30: 6765 745f 6d65 7373 6167 655f 6672 6167  get_message_frag
0067d40: 6d65 6e74 2853 534c 202a 732c 2069 6e74  ment(SSL *s, int
0067d50: 2073 7431 2c20 696e 7420 7374 6e2c 206c   st1, int stn, l
0067d60: 6f6e 6720 6d61 782c 2069 6e74 202a 6f6b  ong max, int *ok
0067d70: 290a 207b 0a20 756e 7369 676e 6564 2063  ). {. unsigned c
0067d80: 6861 7220 7769 7265 5b31 325d 3b0a 2075  har wire[12];. u
0067d90: 6e73 6967 6e65 6420 6c6f 6e67 206c 656e  nsigned long len
0067da0: 2c20 6672 6167 5f6f 6666 2c20 6672 6167  , frag_off, frag
0067db0: 5f6c 656e 3b0a 2069 6e74 2069 2c61 6c3b  _len;. int i,al;
0067dc0: 0a20 7374 7275 6374 2068 6d5f 6865 6164  . struct hm_head
0067dd0: 6572 5f73 7420 6d73 675f 6864 723b 0a0a  er_st msg_hdr;..
0067de0: 0a20 6966 2028 2866 7261 675f 6c65 6e20  . if ((frag_len 
0067df0: 3d20 6474 6c73 315f 7265 7472 6965 7665  = dtls1_retrieve
0067e00: 5f62 7566 6665 7265 645f 6672 6167 6d65  _buffered_fragme
0067e10: 6e74 2873 2c6d 6178 2c6f 6b29 2920 7c7c  nt(s,max,ok)) ||
0067e20: 202a 6f6b 290a 2020 7b0a 2020 6966 2028   *ok).  {.  if (
0067e30: 2a6f 6b29 2073 2d3e 696e 6974 5f6e 756d  *ok) s->init_num
0067e40: 203d 2066 7261 675f 6c65 6e3b 0a20 2072   = frag_len;.  r
0067e50: 6574 7572 6e20 6672 6167 5f6c 656e 3b0a  eturn frag_len;.
0067e60: 2020 7d0a 0a0a 2069 3d73 2d3e 6d65 7468    }... i=s->meth
0067e70: 6f64 2d3e 7373 6c5f 7265 6164 5f62 7974  od->ssl_read_byt
0067e80: 6573 2873 2c32 322c 7769 7265 2c0a 2020  es(s,22,wire,.  
0067e90: 3132 2c20 3029 3b0a 2069 6620 2869 203c  12, 0);. if (i <
0067ea0: 3d20 3029 0a20 207b 0a20 2073 2d3e 7277  = 0).  {.  s->rw
0067eb0: 7374 6174 653d 333b 0a20 202a 6f6b 203d  state=3;.  *ok =
0067ec0: 2030 3b0a 2020 7265 7475 726e 2069 3b0a   0;.  return i;.
0067ed0: 2020 7d0a 0a20 6966 2028 6920 213d 2031    }.. if (i != 1
0067ee0: 3229 0a20 207b 0a20 2061 6c3d 3130 3b0a  2).  {.  al=10;.
0067ef0: 2020 4552 525f 7075 745f 6572 726f 7228    ERR_put_error(
0067f00: 3230 2c28 3235 3329 2c28 3234 3429 2c22  20,(253),(244),"
0067f10: 6431 5f62 6f74 682e 6322 2c38 3132 293b  d1_both.c",812);
0067f20: 0a20 2067 6f74 6f20 665f 6572 723b 0a20  .  goto f_err;. 
0067f30: 207d 0a0a 0a20 6474 6c73 315f 6765 745f   }... dtls1_get_
0067f40: 6d65 7373 6167 655f 6865 6164 6572 2877  message_header(w
0067f50: 6972 652c 2026 6d73 675f 6864 7229 3b0a  ire, &msg_hdr);.
0067f60: 0a0a 0a0a 0a0a 0a20 6966 2028 6d73 675f  ....... if (msg_
0067f70: 6864 722e 7365 7120 213d 2073 2d3e 6431  hdr.seq != s->d1
0067f80: 2d3e 6861 6e64 7368 616b 655f 7265 6164  ->handshake_read
0067f90: 5f73 6571 2026 2620 2128 732d 3e64 312d  _seq && !(s->d1-
0067fa0: 3e6c 6973 7465 6e20 2626 206d 7367 5f68  >listen && msg_h
0067fb0: 6472 2e73 6571 203d 3d20 3129 290a 2020  dr.seq == 1)).  
0067fc0: 7265 7475 726e 2064 746c 7331 5f70 726f  return dtls1_pro
0067fd0: 6365 7373 5f6f 7574 5f6f 665f 7365 715f  cess_out_of_seq_
0067fe0: 6d65 7373 6167 6528 732c 2026 6d73 675f  message(s, &msg_
0067ff0: 6864 722c 206f 6b29 3b0a 0a20 6c65 6e20  hdr, ok);.. len 
0068000: 3d20 6d73 675f 6864 722e 6d73 675f 6c65  = msg_hdr.msg_le
0068010: 6e3b 0a20 6672 6167 5f6f 6666 203d 206d  n;. frag_off = m
0068020: 7367 5f68 6472 2e66 7261 675f 6f66 663b  sg_hdr.frag_off;
0068030: 0a20 6672 6167 5f6c 656e 203d 206d 7367  . frag_len = msg
0068040: 5f68 6472 2e66 7261 675f 6c65 6e3b 0a0a  _hdr.frag_len;..
0068050: 2069 6620 2866 7261 675f 6c65 6e20 2626   if (frag_len &&
0068060: 2066 7261 675f 6c65 6e20 3c20 6c65 6e29   frag_len < len)
0068070: 0a20 2072 6574 7572 6e20 6474 6c73 315f  .  return dtls1_
0068080: 7265 6173 7365 6d62 6c65 5f66 7261 676d  reassemble_fragm
0068090: 656e 7428 732c 2026 6d73 675f 6864 722c  ent(s, &msg_hdr,
00680a0: 206f 6b29 3b0a 0a20 6966 2028 2173 2d3e   ok);.. if (!s->
00680b0: 7365 7276 6572 2026 2620 732d 3e64 312d  server && s->d1-
00680c0: 3e72 5f6d 7367 5f68 6472 2e66 7261 675f  >r_msg_hdr.frag_
00680d0: 6f66 6620 3d3d 2030 2026 260a 2020 7769  off == 0 &&.  wi
00680e0: 7265 5b30 5d20 3d3d 2030 290a 2020 7b0a  re[0] == 0).  {.
00680f0: 0a0a 0a0a 2020 6966 2028 7769 7265 5b31  ....  if (wire[1
0068100: 5d20 3d3d 2030 2026 2620 7769 7265 5b32  ] == 0 && wire[2
0068110: 5d20 3d3d 2030 2026 2620 7769 7265 5b33  ] == 0 && wire[3
0068120: 5d20 3d3d 2030 290a 2020 207b 0a20 2020  ] == 0).   {.   
0068130: 6966 2028 732d 3e6d 7367 5f63 616c 6c62  if (s->msg_callb
0068140: 6163 6b29 0a20 2020 2073 2d3e 6d73 675f  ack).    s->msg_
0068150: 6361 6c6c 6261 636b 2830 2c20 732d 3e76  callback(0, s->v
0068160: 6572 7369 6f6e 2c20 3232 2c0a 2020 2020  ersion, 22,.    
0068170: 2077 6972 652c 2031 322c 2073 2c0a 2020   wire, 12, s,.  
0068180: 2020 2073 2d3e 6d73 675f 6361 6c6c 6261     s->msg_callba
0068190: 636b 5f61 7267 293b 0a0a 2020 2073 2d3e  ck_arg);..   s->
00681a0: 696e 6974 5f6e 756d 203d 2030 3b0a 2020  init_num = 0;.  
00681b0: 2072 6574 7572 6e20 6474 6c73 315f 6765   return dtls1_ge
00681c0: 745f 6d65 7373 6167 655f 6672 6167 6d65  t_message_fragme
00681d0: 6e74 2873 2c20 7374 312c 2073 746e 2c0a  nt(s, st1, stn,.
00681e0: 2020 2020 6d61 782c 206f 6b29 3b0a 2020      max, ok);.  
00681f0: 207d 0a20 2065 6c73 650a 2020 207b 0a20   }.  else.   {. 
0068200: 2020 616c 3d31 303b 0a20 2020 4552 525f    al=10;.   ERR_
0068210: 7075 745f 6572 726f 7228 3230 2c28 3235  put_error(20,(25
0068220: 3329 2c28 3234 3429 2c22 6431 5f62 6f74  3),(244),"d1_bot
0068230: 682e 6322 2c38 3536 293b 0a20 2020 676f  h.c",856);.   go
0068240: 746f 2066 5f65 7272 3b0a 2020 207d 0a20  to f_err;.   }. 
0068250: 207d 0a0a 2069 6620 2828 616c 3d64 746c   }.. if ((al=dtl
0068260: 7331 5f70 7265 7072 6f63 6573 735f 6672  s1_preprocess_fr
0068270: 6167 6d65 6e74 2873 2c26 6d73 675f 6864  agment(s,&msg_hd
0068280: 722c 6d61 7829 2929 0a20 2067 6f74 6f20  r,max))).  goto 
0068290: 665f 6572 723b 0a0a 0a20 732d 3e73 7461  f_err;... s->sta
00682a0: 7465 3d73 746e 3b0a 0a20 6966 2028 2066  te=stn;.. if ( f
00682b0: 7261 675f 6c65 6e20 3e20 3029 0a20 207b  rag_len > 0).  {
00682c0: 0a20 2075 6e73 6967 6e65 6420 6368 6172  .  unsigned char
00682d0: 202a 703d 2875 6e73 6967 6e65 6420 6368   *p=(unsigned ch
00682e0: 6172 202a 2973 2d3e 696e 6974 5f62 7566  ar *)s->init_buf
00682f0: 2d3e 6461 7461 2b31 323b 0a0a 2020 693d  ->data+12;..  i=
0068300: 732d 3e6d 6574 686f 642d 3e73 736c 5f72  s->method->ssl_r
0068310: 6561 645f 6279 7465 7328 732c 3232 2c0a  ead_bytes(s,22,.
0068320: 2020 2026 705b 6672 6167 5f6f 6666 5d2c     &p[frag_off],
0068330: 6672 6167 5f6c 656e 2c30 293b 0a0a 2020  frag_len,0);..  
0068340: 6966 2028 6920 3c3d 2030 290a 2020 207b  if (i <= 0).   {
0068350: 0a20 2020 732d 3e72 7773 7461 7465 3d33  .   s->rwstate=3
0068360: 3b0a 2020 202a 6f6b 203d 2030 3b0a 2020  ;.   *ok = 0;.  
0068370: 2072 6574 7572 6e20 693b 0a20 2020 7d0a   return i;.   }.
0068380: 2020 7d0a 2065 6c73 650a 2020 6920 3d20    }. else.  i = 
0068390: 303b 0a0a 0a0a 2069 6620 2869 2021 3d20  0;.... if (i != 
00683a0: 2869 6e74 2966 7261 675f 6c65 6e29 0a20  (int)frag_len). 
00683b0: 207b 0a20 2061 6c3d 3437 3b0a 2020 4552   {.  al=47;.  ER
00683c0: 525f 7075 745f 6572 726f 7228 3230 2c28  R_put_error(20,(
00683d0: 3235 3329 2c28 3437 292c 2264 315f 626f  253),(47),"d1_bo
00683e0: 7468 2e63 222c 3838 3929 3b0a 2020 676f  th.c",889);.  go
00683f0: 746f 2066 5f65 7272 3b0a 2020 7d0a 0a20  to f_err;.  }.. 
0068400: 2a6f 6b20 3d20 313b 0a0a 0a0a 0a0a 2073  *ok = 1;...... s
0068410: 2d3e 696e 6974 5f6e 756d 203d 2066 7261  ->init_num = fra
0068420: 675f 6c65 6e3b 0a20 7265 7475 726e 2066  g_len;. return f
0068430: 7261 675f 6c65 6e3b 0a0a 665f 6572 723a  rag_len;..f_err:
0068440: 0a20 7373 6c33 5f73 656e 645f 616c 6572  . ssl3_send_aler
0068450: 7428 732c 322c 616c 293b 0a20 732d 3e69  t(s,2,al);. s->i
0068460: 6e69 745f 6e75 6d20 3d20 303b 0a0a 202a  nit_num = 0;.. *
0068470: 6f6b 3d30 3b0a 2072 6574 7572 6e28 2d31  ok=0;. return(-1
0068480: 293b 0a20 7d0a 0a69 6e74 2064 746c 7331  );. }..int dtls1
0068490: 5f73 656e 645f 6669 6e69 7368 6564 2853  _send_finished(S
00684a0: 534c 202a 732c 2069 6e74 2061 2c20 696e  SL *s, int a, in
00684b0: 7420 622c 2063 6f6e 7374 2063 6861 7220  t b, const char 
00684c0: 2a73 656e 6465 722c 2069 6e74 2073 6c65  *sender, int sle
00684d0: 6e29 0a20 7b0a 2075 6e73 6967 6e65 6420  n). {. unsigned 
00684e0: 6368 6172 202a 702c 2a64 3b0a 2069 6e74  char *p,*d;. int
00684f0: 2069 3b0a 2075 6e73 6967 6e65 6420 6c6f   i;. unsigned lo
0068500: 6e67 206c 3b0a 0a20 6966 2028 732d 3e73  ng l;.. if (s->s
0068510: 7461 7465 203d 3d20 6129 0a20 207b 0a20  tate == a).  {. 
0068520: 2064 3d28 756e 7369 676e 6564 2063 6861   d=(unsigned cha
0068530: 7220 2a29 732d 3e69 6e69 745f 6275 662d  r *)s->init_buf-
0068540: 3e64 6174 613b 0a20 2070 3d20 2628 645b  >data;.  p= &(d[
0068550: 3132 5d29 3b0a 0a20 2069 3d73 2d3e 6d65  12]);..  i=s->me
0068560: 7468 6f64 2d3e 7373 6c33 5f65 6e63 2d3e  thod->ssl3_enc->
0068570: 6669 6e61 6c5f 6669 6e69 7368 5f6d 6163  final_finish_mac
0068580: 2873 2c0a 2020 2073 656e 6465 722c 736c  (s,.   sender,sl
0068590: 656e 2c73 2d3e 7333 2d3e 746d 702e 6669  en,s->s3->tmp.fi
00685a0: 6e69 7368 5f6d 6429 3b0a 2020 732d 3e73  nish_md);.  s->s
00685b0: 332d 3e74 6d70 2e66 696e 6973 685f 6d64  3->tmp.finish_md
00685c0: 5f6c 656e 203d 2069 3b0a 2020 6d65 6d63  _len = i;.  memc
00685d0: 7079 2870 2c20 732d 3e73 332d 3e74 6d70  py(p, s->s3->tmp
00685e0: 2e66 696e 6973 685f 6d64 2c20 6929 3b0a  .finish_md, i);.
00685f0: 2020 702b 3d69 3b0a 2020 6c3d 693b 0a0a    p+=i;.  l=i;..
0068600: 0a0a 0a20 6966 2873 2d3e 7479 7065 203d  ... if(s->type =
0068610: 3d20 3078 3130 3030 290a 2020 7b0a 2020  = 0x1000).  {.  
0068620: 2876 6f69 6429 2828 6920 3c3d 2036 3429  (void)((i <= 64)
0068630: 203f 2030 203a 2028 4f70 656e 5353 4c44   ? 0 : (OpenSSLD
0068640: 6965 2822 6431 5f62 6f74 682e 6322 2c20  ie("d1_both.c", 
0068650: 3933 332c 2022 6920 3c3d 2045 5650 5f4d  933, "i <= EVP_M
0068660: 4158 5f4d 445f 5349 5a45 2229 2c31 2929  AX_MD_SIZE"),1))
0068670: 3b0a 2020 6d65 6d63 7079 2873 2d3e 7333  ;.  memcpy(s->s3
0068680: 2d3e 7072 6576 696f 7573 5f63 6c69 656e  ->previous_clien
0068690: 745f 6669 6e69 7368 6564 2c0a 2020 2020  t_finished,.    
00686a0: 2020 2020 2073 2d3e 7333 2d3e 746d 702e       s->s3->tmp.
00686b0: 6669 6e69 7368 5f6d 642c 2069 293b 0a20  finish_md, i);. 
00686c0: 2073 2d3e 7333 2d3e 7072 6576 696f 7573   s->s3->previous
00686d0: 5f63 6c69 656e 745f 6669 6e69 7368 6564  _client_finished
00686e0: 5f6c 656e 3d69 3b0a 2020 7d0a 2065 6c73  _len=i;.  }. els
00686f0: 650a 2020 7b0a 2020 2876 6f69 6429 2828  e.  {.  (void)((
0068700: 6920 3c3d 2036 3429 203f 2030 203a 2028  i <= 64) ? 0 : (
0068710: 4f70 656e 5353 4c44 6965 2822 6431 5f62  OpenSSLDie("d1_b
0068720: 6f74 682e 6322 2c20 3934 302c 2022 6920  oth.c", 940, "i 
0068730: 3c3d 2045 5650 5f4d 4158 5f4d 445f 5349  <= EVP_MAX_MD_SI
0068740: 5a45 2229 2c31 2929 3b0a 2020 6d65 6d63  ZE"),1));.  memc
0068750: 7079 2873 2d3e 7333 2d3e 7072 6576 696f  py(s->s3->previo
0068760: 7573 5f73 6572 7665 725f 6669 6e69 7368  us_server_finish
0068770: 6564 2c0a 2020 2020 2020 2020 2073 2d3e  ed,.         s->
0068780: 7333 2d3e 746d 702e 6669 6e69 7368 5f6d  s3->tmp.finish_m
0068790: 642c 2069 293b 0a20 2073 2d3e 7333 2d3e  d, i);.  s->s3->
00687a0: 7072 6576 696f 7573 5f73 6572 7665 725f  previous_server_
00687b0: 6669 6e69 7368 6564 5f6c 656e 3d69 3b0a  finished_len=i;.
00687c0: 2020 7d0a 2320 3935 3320 2264 315f 626f    }.# 953 "d1_bo
00687d0: 7468 2e63 220a 2020 6420 3d20 6474 6c73  th.c".  d = dtls
00687e0: 315f 7365 745f 6d65 7373 6167 655f 6865  1_set_message_he
00687f0: 6164 6572 2873 2c20 642c 2032 302c 206c  ader(s, d, 20, l
0068800: 2c20 302c 206c 293b 0a20 2073 2d3e 696e  , 0, l);.  s->in
0068810: 6974 5f6e 756d 3d28 696e 7429 6c2b 3132  it_num=(int)l+12
0068820: 3b0a 2020 732d 3e69 6e69 745f 6f66 663d  ;.  s->init_off=
0068830: 303b 0a0a 0a20 2064 746c 7331 5f62 7566  0;...  dtls1_buf
0068840: 6665 725f 6d65 7373 6167 6528 732c 2030  fer_message(s, 0
0068850: 293b 0a0a 2020 732d 3e73 7461 7465 3d62  );..  s->state=b
0068860: 3b0a 2020 7d0a 0a0a 2072 6574 7572 6e28  ;.  }... return(
0068870: 6474 6c73 315f 646f 5f77 7269 7465 2873  dtls1_do_write(s
0068880: 2c32 3229 293b 0a20 7d0a 2320 3937 3520  ,22));. }.# 975 
0068890: 2264 315f 626f 7468 2e63 220a 696e 7420  "d1_both.c".int 
00688a0: 6474 6c73 315f 7365 6e64 5f63 6861 6e67  dtls1_send_chang
00688b0: 655f 6369 7068 6572 5f73 7065 6328 5353  e_cipher_spec(SS
00688c0: 4c20 2a73 2c20 696e 7420 612c 2069 6e74  L *s, int a, int
00688d0: 2062 290a 207b 0a20 756e 7369 676e 6564   b). {. unsigned
00688e0: 2063 6861 7220 2a70 3b0a 0a20 6966 2028   char *p;.. if (
00688f0: 732d 3e73 7461 7465 203d 3d20 6129 0a20  s->state == a). 
0068900: 207b 0a20 2070 3d28 756e 7369 676e 6564   {.  p=(unsigned
0068910: 2063 6861 7220 2a29 732d 3e69 6e69 745f   char *)s->init_
0068920: 6275 662d 3e64 6174 613b 0a20 202a 702b  buf->data;.  *p+
0068930: 2b3d 313b 0a20 2073 2d3e 6431 2d3e 6861  +=1;.  s->d1->ha
0068940: 6e64 7368 616b 655f 7772 6974 655f 7365  ndshake_write_se
0068950: 7120 3d20 732d 3e64 312d 3e6e 6578 745f  q = s->d1->next_
0068960: 6861 6e64 7368 616b 655f 7772 6974 655f  handshake_write_
0068970: 7365 713b 0a20 2073 2d3e 696e 6974 5f6e  seq;.  s->init_n
0068980: 756d 3d31 3b0a 0a20 2069 6620 2873 2d3e  um=1;..  if (s->
0068990: 7665 7273 696f 6e20 3d3d 2030 7830 3130  version == 0x010
00689a0: 3029 207b 0a20 2020 732d 3e64 312d 3e6e  0) {.   s->d1->n
00689b0: 6578 745f 6861 6e64 7368 616b 655f 7772  ext_handshake_wr
00689c0: 6974 655f 7365 712b 2b3b 0a20 2020 2828  ite_seq++;.   ((
00689d0: 705b 305d 3d28 756e 7369 676e 6564 2063  p[0]=(unsigned c
00689e0: 6861 7229 2828 2873 2d3e 6431 2d3e 6861  har)(((s->d1->ha
00689f0: 6e64 7368 616b 655f 7772 6974 655f 7365  ndshake_write_se
0068a00: 7129 3e3e 2038 2926 3078 6666 292c 2070  q)>> 8)&0xff), p
0068a10: 5b31 5d3d 2875 6e73 6967 6e65 6420 6368  [1]=(unsigned ch
0068a20: 6172 2928 2828 732d 3e64 312d 3e68 616e  ar)(((s->d1->han
0068a30: 6473 6861 6b65 5f77 7269 7465 5f73 6571  dshake_write_seq
0068a40: 2920 2926 3078 6666 2929 2c70 2b3d 3229  ) )&0xff)),p+=2)
0068a50: 3b0a 2020 2073 2d3e 696e 6974 5f6e 756d  ;.   s->init_num
0068a60: 2b3d 323b 0a20 207d 0a0a 2020 732d 3e69  +=2;.  }..  s->i
0068a70: 6e69 745f 6f66 663d 303b 0a0a 2020 6474  nit_off=0;..  dt
0068a80: 6c73 315f 7365 745f 6d65 7373 6167 655f  ls1_set_message_
0068a90: 6865 6164 6572 5f69 6e74 2873 2c20 312c  header_int(s, 1,
0068aa0: 2030 2c0a 2020 2073 2d3e 6431 2d3e 6861   0,.   s->d1->ha
0068ab0: 6e64 7368 616b 655f 7772 6974 655f 7365  ndshake_write_se
0068ac0: 712c 2030 2c20 3029 3b0a 0a0a 2020 6474  q, 0, 0);...  dt
0068ad0: 6c73 315f 6275 6666 6572 5f6d 6573 7361  ls1_buffer_messa
0068ae0: 6765 2873 2c20 3129 3b0a 0a20 2073 2d3e  ge(s, 1);..  s->
0068af0: 7374 6174 653d 623b 0a20 207d 0a0a 0a20  state=b;.  }... 
0068b00: 7265 7475 726e 2864 746c 7331 5f64 6f5f  return(dtls1_do_
0068b10: 7772 6974 6528 732c 3230 2929 3b0a 207d  write(s,20));. }
0068b20: 0a0a 7374 6174 6963 2069 6e74 2064 746c  ..static int dtl
0068b30: 7331 5f61 6464 5f63 6572 745f 746f 5f62  s1_add_cert_to_b
0068b40: 7566 2842 5546 5f4d 454d 202a 6275 662c  uf(BUF_MEM *buf,
0068b50: 2075 6e73 6967 6e65 6420 6c6f 6e67 202a   unsigned long *
0068b60: 6c2c 2058 3530 3920 2a78 290a 207b 0a20  l, X509 *x). {. 
0068b70: 696e 7420 6e3b 0a20 756e 7369 676e 6564  int n;. unsigned
0068b80: 2063 6861 7220 2a70 3b0a 0a20 6e3d 6932   char *p;.. n=i2
0068b90: 645f 5835 3039 2878 2c28 2876 6f69 6420  d_X509(x,((void 
0068ba0: 2a29 3029 293b 0a20 6966 2028 2142 5546  *)0));. if (!BUF
0068bb0: 5f4d 454d 5f67 726f 775f 636c 6561 6e28  _MEM_grow_clean(
0068bc0: 6275 662c 2869 6e74 2928 6e2b 282a 6c29  buf,(int)(n+(*l)
0068bd0: 2b33 2929 290a 2020 7b0a 2020 4552 525f  +3))).  {.  ERR_
0068be0: 7075 745f 6572 726f 7228 3230 2c28 3239  put_error(20,(29
0068bf0: 3529 2c28 3729 2c22 6431 5f62 6f74 682e  5),(7),"d1_both.
0068c00: 6322 2c31 3031 3529 3b0a 2020 7265 7475  c",1015);.  retu
0068c10: 726e 2030 3b0a 2020 7d0a 2070 3d28 756e  rn 0;.  }. p=(un
0068c20: 7369 676e 6564 2063 6861 7220 2a29 2628  signed char *)&(
0068c30: 6275 662d 3e64 6174 615b 2a6c 5d29 3b0a  buf->data[*l]);.
0068c40: 2028 2870 5b30 5d3d 2875 6e73 6967 6e65   ((p[0]=(unsigne
0068c50: 6420 6368 6172 2928 2828 6e29 3e3e 3136  d char)(((n)>>16
0068c60: 2926 3078 6666 292c 2070 5b31 5d3d 2875  )&0xff), p[1]=(u
0068c70: 6e73 6967 6e65 6420 6368 6172 2928 2828  nsigned char)(((
0068c80: 6e29 3e3e 2038 2926 3078 6666 292c 2070  n)>> 8)&0xff), p
0068c90: 5b32 5d3d 2875 6e73 6967 6e65 6420 6368  [2]=(unsigned ch
0068ca0: 6172 2928 2828 6e29 2029 2630 7866 6629  ar)(((n) )&0xff)
0068cb0: 292c 702b 3d33 293b 0a20 6932 645f 5835  ),p+=3);. i2d_X5
0068cc0: 3039 2878 2c26 7029 3b0a 202a 6c2b 3d6e  09(x,&p);. *l+=n
0068cd0: 2b33 3b0a 0a20 7265 7475 726e 2031 3b0a  +3;.. return 1;.
0068ce0: 207d 0a75 6e73 6967 6e65 6420 6c6f 6e67   }.unsigned long
0068cf0: 2064 746c 7331 5f6f 7574 7075 745f 6365   dtls1_output_ce
0068d00: 7274 5f63 6861 696e 2853 534c 202a 732c  rt_chain(SSL *s,
0068d10: 2058 3530 3920 2a78 290a 207b 0a20 756e   X509 *x). {. un
0068d20: 7369 676e 6564 2063 6861 7220 2a70 3b0a  signed char *p;.
0068d30: 2069 6e74 2069 3b0a 2075 6e73 6967 6e65   int i;. unsigne
0068d40: 6420 6c6f 6e67 206c 3d20 3320 2b20 3132  d long l= 3 + 12
0068d50: 3b0a 2042 5546 5f4d 454d 202a 6275 663b  ;. BUF_MEM *buf;
0068d60: 0a0a 0a20 6275 663d 732d 3e69 6e69 745f  ... buf=s->init_
0068d70: 6275 663b 0a20 6966 2028 2142 5546 5f4d  buf;. if (!BUF_M
0068d80: 454d 5f67 726f 775f 636c 6561 6e28 6275  EM_grow_clean(bu
0068d90: 662c 3130 2929 0a20 207b 0a20 2045 5252  f,10)).  {.  ERR
0068da0: 5f70 7574 5f65 7272 6f72 2832 302c 2832  _put_error(20,(2
0068db0: 3535 292c 2837 292c 2264 315f 626f 7468  55),(7),"d1_both
0068dc0: 2e63 222c 3130 3336 293b 0a20 2072 6574  .c",1036);.  ret
0068dd0: 7572 6e28 3029 3b0a 2020 7d0a 2069 6620  urn(0);.  }. if 
0068de0: 2878 2021 3d20 2828 766f 6964 202a 2930  (x != ((void *)0
0068df0: 2929 0a20 207b 0a20 2058 3530 395f 5354  )).  {.  X509_ST
0068e00: 4f52 455f 4354 5820 7873 5f63 7478 3b0a  ORE_CTX xs_ctx;.
0068e10: 0a20 2069 6620 2821 5835 3039 5f53 544f  .  if (!X509_STO
0068e20: 5245 5f43 5458 5f69 6e69 7428 2678 735f  RE_CTX_init(&xs_
0068e30: 6374 782c 732d 3e63 7478 2d3e 6365 7274  ctx,s->ctx->cert
0068e40: 5f73 746f 7265 2c78 2c28 2876 6f69 6420  _store,x,((void 
0068e50: 2a29 3029 2929 0a20 2020 2020 7b0a 2020  *)0))).     {.  
0068e60: 2020 2045 5252 5f70 7574 5f65 7272 6f72     ERR_put_error
0068e70: 2832 302c 2832 3535 292c 2831 3129 2c22  (20,(255),(11),"
0068e80: 6431 5f62 6f74 682e 6322 2c31 3034 3529  d1_both.c",1045)
0068e90: 3b0a 2020 2020 2072 6574 7572 6e28 3029  ;.     return(0)
0068ea0: 3b0a 2020 2020 207d 0a0a 2020 5835 3039  ;.     }..  X509
0068eb0: 5f76 6572 6966 795f 6365 7274 2826 7873  _verify_cert(&xs
0068ec0: 5f63 7478 293b 0a0a 2020 4552 525f 636c  _ctx);..  ERR_cl
0068ed0: 6561 725f 6572 726f 7228 293b 0a20 2066  ear_error();.  f
0068ee0: 6f72 2028 693d 303b 2069 203c 2073 6b5f  or (i=0; i < sk_
0068ef0: 6e75 6d28 2828 5f53 5441 434b 2a29 2028  num(((_STACK*) (
0068f00: 3120 3f20 2878 735f 6374 782e 6368 6169  1 ? (xs_ctx.chai
0068f10: 6e29 203a 2028 7374 7275 6374 2073 7461  n) : (struct sta
0068f20: 636b 5f73 745f 5835 3039 2a29 3029 2929  ck_st_X509*)0)))
0068f30: 3b20 692b 2b29 0a20 2020 2020 7b0a 2020  ; i++).     {.  
0068f40: 2078 203d 2028 2858 3530 3920 2a29 736b   x = ((X509 *)sk
0068f50: 5f76 616c 7565 2828 285f 5354 4143 4b2a  _value(((_STACK*
0068f60: 2920 2831 203f 2028 7873 5f63 7478 2e63  ) (1 ? (xs_ctx.c
0068f70: 6861 696e 2920 3a20 2873 7472 7563 7420  hain) : (struct 
0068f80: 7374 6163 6b5f 7374 5f58 3530 392a 2930  stack_st_X509*)0
0068f90: 2929 2c20 2869 2929 293b 0a0a 2020 2069  )), (i)));..   i
0068fa0: 6620 2821 6474 6c73 315f 6164 645f 6365  f (!dtls1_add_ce
0068fb0: 7274 5f74 6f5f 6275 6628 6275 662c 2026  rt_to_buf(buf, &
0068fc0: 6c2c 2078 2929 0a20 2020 2020 207b 0a20  l, x)).      {. 
0068fd0: 2020 2058 3530 395f 5354 4f52 455f 4354     X509_STORE_CT
0068fe0: 585f 636c 6561 6e75 7028 2678 735f 6374  X_cleanup(&xs_ct
0068ff0: 7829 3b0a 2020 2020 7265 7475 726e 2030  x);.    return 0
0069000: 3b0a 2020 2020 2020 7d0a 2020 2020 207d  ;.      }.     }
0069010: 0a20 2020 2058 3530 395f 5354 4f52 455f  .    X509_STORE_
0069020: 4354 585f 636c 6561 6e75 7028 2678 735f  CTX_cleanup(&xs_
0069030: 6374 7829 3b0a 2020 2020 7d0a 0a20 666f  ctx);.    }.. fo
0069040: 7220 2869 3d30 3b20 693c 736b 5f6e 756d  r (i=0; i<sk_num
0069050: 2828 285f 5354 4143 4b2a 2920 2831 203f  (((_STACK*) (1 ?
0069060: 2028 732d 3e63 7478 2d3e 6578 7472 615f   (s->ctx->extra_
0069070: 6365 7274 7329 203a 2028 7374 7275 6374  certs) : (struct
0069080: 2073 7461 636b 5f73 745f 5835 3039 2a29   stack_st_X509*)
0069090: 3029 2929 3b20 692b 2b29 0a20 207b 0a20  0))); i++).  {. 
00690a0: 2078 3d28 2858 3530 3920 2a29 736b 5f76   x=((X509 *)sk_v
00690b0: 616c 7565 2828 285f 5354 4143 4b2a 2920  alue(((_STACK*) 
00690c0: 2831 203f 2028 732d 3e63 7478 2d3e 6578  (1 ? (s->ctx->ex
00690d0: 7472 615f 6365 7274 7329 203a 2028 7374  tra_certs) : (st
00690e0: 7275 6374 2073 7461 636b 5f73 745f 5835  ruct stack_st_X5
00690f0: 3039 2a29 3029 292c 2028 6929 2929 3b0a  09*)0)), (i)));.
0069100: 2020 6966 2028 2164 746c 7331 5f61 6464    if (!dtls1_add
0069110: 5f63 6572 745f 746f 5f62 7566 2862 7566  _cert_to_buf(buf
0069120: 2c20 266c 2c20 7829 290a 2020 2072 6574  , &l, x)).   ret
0069130: 7572 6e20 303b 0a20 207d 0a0a 206c 2d3d  urn 0;.  }.. l-=
0069140: 2028 3320 2b20 3132 293b 0a0a 2070 3d28   (3 + 12);.. p=(
0069150: 756e 7369 676e 6564 2063 6861 7220 2a29  unsigned char *)
0069160: 2628 6275 662d 3e64 6174 615b 3132 5d29  &(buf->data[12])
0069170: 3b0a 2028 2870 5b30 5d3d 2875 6e73 6967  ;. ((p[0]=(unsig
0069180: 6e65 6420 6368 6172 2928 2828 6c29 3e3e  ned char)(((l)>>
0069190: 3136 2926 3078 6666 292c 2070 5b31 5d3d  16)&0xff), p[1]=
00691a0: 2875 6e73 6967 6e65 6420 6368 6172 2928  (unsigned char)(
00691b0: 2828 6c29 3e3e 2038 2926 3078 6666 292c  ((l)>> 8)&0xff),
00691c0: 2070 5b32 5d3d 2875 6e73 6967 6e65 6420   p[2]=(unsigned 
00691d0: 6368 6172 2928 2828 6c29 2029 2630 7866  char)(((l) )&0xf
00691e0: 6629 292c 702b 3d33 293b 0a20 6c2b 3d33  f)),p+=3);. l+=3
00691f0: 3b0a 2070 3d28 756e 7369 676e 6564 2063  ;. p=(unsigned c
0069200: 6861 7220 2a29 2628 6275 662d 3e64 6174  har *)&(buf->dat
0069210: 615b 305d 293b 0a20 7020 3d20 6474 6c73  a[0]);. p = dtls
0069220: 315f 7365 745f 6d65 7373 6167 655f 6865  1_set_message_he
0069230: 6164 6572 2873 2c20 702c 2031 312c 206c  ader(s, p, 11, l
0069240: 2c20 302c 206c 293b 0a0a 206c 2b3d 3132  , 0, l);.. l+=12
0069250: 3b0a 2072 6574 7572 6e28 6c29 3b0a 207d  ;. return(l);. }
0069260: 0a0a 696e 7420 6474 6c73 315f 7265 6164  ..int dtls1_read
0069270: 5f66 6169 6c65 6428 5353 4c20 2a73 2c20  _failed(SSL *s, 
0069280: 696e 7420 636f 6465 290a 207b 0a20 6966  int code). {. if
0069290: 2028 2063 6f64 6520 3e20 3029 0a20 207b   ( code > 0).  {
00692a0: 0a20 2066 7072 696e 7466 2820 7374 6465  .  fprintf( stde
00692b0: 7272 2c20 2269 6e76 616c 6964 2073 7461  rr, "invalid sta
00692c0: 7465 2072 6561 6368 6564 2025 733a 2564  te reached %s:%d
00692d0: 222c 2022 6431 5f62 6f74 682e 6322 2c20  ", "d1_both.c", 
00692e0: 3130 3838 293b 0a20 2072 6574 7572 6e20  1088);.  return 
00692f0: 313b 0a20 207d 0a0a 2069 6620 2821 6474  1;.  }.. if (!dt
0069300: 6c73 315f 6973 5f74 696d 6572 5f65 7870  ls1_is_timer_exp
0069310: 6972 6564 2873 2929 0a20 207b 0a0a 0a20  ired(s)).  {... 
0069320: 2072 6574 7572 6e20 636f 6465 3b0a 2020   return code;.  
0069330: 7d0a 0a0a 2069 6620 2821 2853 534c 5f73  }... if (!(SSL_s
0069340: 7461 7465 2873 2926 2830 7831 3030 307c  tate(s)&(0x1000|
0069350: 3078 3230 3030 2929 2026 2620 2173 2d3e  0x2000)) && !s->
0069360: 746c 7365 7874 5f68 625f 7065 6e64 696e  tlsext_hb_pendin
0069370: 6729 0a0a 0a0a 2020 7b0a 2020 4249 4f5f  g)....  {.  BIO_
0069380: 7365 745f 666c 6167 7328 5353 4c5f 6765  set_flags(SSL_ge
0069390: 745f 7262 696f 2873 292c 2030 7830 3129  t_rbio(s), 0x01)
00693a0: 3b0a 2020 7265 7475 726e 2063 6f64 653b  ;.  return code;
00693b0: 0a20 207d 0a23 2031 3132 3420 2264 315f  .  }.# 1124 "d1_
00693c0: 626f 7468 2e63 220a 2072 6574 7572 6e20  both.c". return 
00693d0: 6474 6c73 315f 6861 6e64 6c65 5f74 696d  dtls1_handle_tim
00693e0: 656f 7574 2873 293b 0a20 7d0a 0a69 6e74  eout(s);. }..int
00693f0: 0a64 746c 7331 5f67 6574 5f71 7565 7565  .dtls1_get_queue
0069400: 5f70 7269 6f72 6974 7928 756e 7369 676e  _priority(unsign
0069410: 6564 2073 686f 7274 2073 6571 2c20 696e  ed short seq, in
0069420: 7420 6973 5f63 6373 290a 207b 0a23 2031  t is_ccs). {.# 1
0069430: 3133 3820 2264 315f 626f 7468 2e63 220a  138 "d1_both.c".
0069440: 2072 6574 7572 6e20 7365 7120 2a20 3220   return seq * 2 
0069450: 2d20 6973 5f63 6373 3b0a 207d 0a0a 696e  - is_ccs;. }..in
0069460: 740a 6474 6c73 315f 7265 7472 616e 736d  t.dtls1_retransm
0069470: 6974 5f62 7566 6665 7265 645f 6d65 7373  it_buffered_mess
0069480: 6167 6573 2853 534c 202a 7329 0a20 7b0a  ages(SSL *s). {.
0069490: 2070 7175 6575 6520 7365 6e74 203d 2073   pqueue sent = s
00694a0: 2d3e 6431 2d3e 7365 6e74 5f6d 6573 7361  ->d1->sent_messa
00694b0: 6765 733b 0a20 7069 7465 7261 746f 7220  ges;. piterator 
00694c0: 6974 6572 3b0a 2070 6974 656d 202a 6974  iter;. pitem *it
00694d0: 656d 3b0a 2068 6d5f 6672 6167 6d65 6e74  em;. hm_fragment
00694e0: 202a 6672 6167 3b0a 2069 6e74 2066 6f75   *frag;. int fou
00694f0: 6e64 203d 2030 3b0a 0a20 6974 6572 203d  nd = 0;.. iter =
0069500: 2070 7175 6575 655f 6974 6572 6174 6f72   pqueue_iterator
0069510: 2873 656e 7429 3b0a 0a20 666f 7220 2820  (sent);.. for ( 
0069520: 6974 656d 203d 2070 7175 6575 655f 6e65  item = pqueue_ne
0069530: 7874 2826 6974 6572 293b 2069 7465 6d20  xt(&iter); item 
0069540: 213d 2028 2876 6f69 6420 2a29 3029 3b20  != ((void *)0); 
0069550: 6974 656d 203d 2070 7175 6575 655f 6e65  item = pqueue_ne
0069560: 7874 2826 6974 6572 2929 0a20 207b 0a20  xt(&iter)).  {. 
0069570: 2066 7261 6720 3d20 2868 6d5f 6672 6167   frag = (hm_frag
0069580: 6d65 6e74 202a 2969 7465 6d2d 3e64 6174  ment *)item->dat
0069590: 613b 0a20 2020 6966 2028 2064 746c 7331  a;.   if ( dtls1
00695a0: 5f72 6574 7261 6e73 6d69 745f 6d65 7373  _retransmit_mess
00695b0: 6167 6528 732c 0a20 2020 2028 756e 7369  age(s,.    (unsi
00695c0: 676e 6564 2073 686f 7274 2964 746c 7331  gned short)dtls1
00695d0: 5f67 6574 5f71 7565 7565 5f70 7269 6f72  _get_queue_prior
00695e0: 6974 7928 6672 6167 2d3e 6d73 675f 6865  ity(frag->msg_he
00695f0: 6164 6572 2e73 6571 2c20 6672 6167 2d3e  ader.seq, frag->
0069600: 6d73 675f 6865 6164 6572 2e69 735f 6363  msg_header.is_cc
0069610: 7329 2c0a 2020 2020 302c 2026 666f 756e  s),.    0, &foun
0069620: 6429 203c 3d20 3020 2626 2066 6f75 6e64  d) <= 0 && found
0069630: 290a 2020 207b 0a20 2020 6670 7269 6e74  ).   {.   fprint
0069640: 6628 7374 6465 7272 2c20 2264 746c 7331  f(stderr, "dtls1
0069650: 5f72 6574 7261 6e73 6d69 745f 6d65 7373  _retransmit_mess
0069660: 6167 6528 2920 6661 696c 6564 5c6e 2229  age() failed\n")
0069670: 3b0a 2020 2072 6574 7572 6e20 2d31 3b0a  ;.   return -1;.
0069680: 2020 207d 0a20 207d 0a0a 2072 6574 7572     }.  }.. retur
0069690: 6e20 313b 0a20 7d0a 0a69 6e74 0a64 746c  n 1;. }..int.dtl
00696a0: 7331 5f62 7566 6665 725f 6d65 7373 6167  s1_buffer_messag
00696b0: 6528 5353 4c20 2a73 2c20 696e 7420 6973  e(SSL *s, int is
00696c0: 5f63 6373 290a 207b 0a20 7069 7465 6d20  _ccs). {. pitem 
00696d0: 2a69 7465 6d3b 0a20 686d 5f66 7261 676d  *item;. hm_fragm
00696e0: 656e 7420 2a66 7261 673b 0a20 756e 7369  ent *frag;. unsi
00696f0: 676e 6564 2063 6861 7220 7365 7136 3462  gned char seq64b
0069700: 655b 385d 3b0a 0a0a 0a20 2876 6f69 6429  e[8];.... (void)
0069710: 2828 732d 3e69 6e69 745f 6f66 6620 3d3d  ((s->init_off ==
0069720: 2030 2920 3f20 3020 3a20 284f 7065 6e53   0) ? 0 : (OpenS
0069730: 534c 4469 6528 2264 315f 626f 7468 2e63  SLDie("d1_both.c
0069740: 222c 2031 3137 362c 2022 732d 3e69 6e69  ", 1176, "s->ini
0069750: 745f 6f66 6620 3d3d 2030 2229 2c31 2929  t_off == 0"),1))
0069760: 3b0a 0a20 6672 6167 203d 2064 746c 7331  ;.. frag = dtls1
0069770: 5f68 6d5f 6672 6167 6d65 6e74 5f6e 6577  _hm_fragment_new
0069780: 2873 2d3e 696e 6974 5f6e 756d 2c20 3029  (s->init_num, 0)
0069790: 3b0a 0a20 6d65 6d63 7079 2866 7261 672d  ;.. memcpy(frag-
00697a0: 3e66 7261 676d 656e 742c 2073 2d3e 696e  >fragment, s->in
00697b0: 6974 5f62 7566 2d3e 6461 7461 2c20 732d  it_buf->data, s-
00697c0: 3e69 6e69 745f 6e75 6d29 3b0a 0a20 6966  >init_num);.. if
00697d0: 2028 2069 735f 6363 7329 0a20 207b 0a20   ( is_ccs).  {. 
00697e0: 2028 766f 6964 2928 2873 2d3e 6431 2d3e   (void)((s->d1->
00697f0: 775f 6d73 675f 6864 722e 6d73 675f 6c65  w_msg_hdr.msg_le
0069800: 6e20 2b20 2828 732d 3e76 6572 7369 6f6e  n + ((s->version
0069810: 3d3d 3078 4645 4646 293f 313a 3329 203d  ==0xFEFF)?1:3) =
0069820: 3d20 2875 6e73 6967 6e65 6420 696e 7429  = (unsigned int)
0069830: 732d 3e69 6e69 745f 6e75 6d29 203f 2030  s->init_num) ? 0
0069840: 203a 2028 4f70 656e 5353 4c44 6965 280a   : (OpenSSLDie(.
0069850: 2022 6431 5f62 6f74 682e 6322 0a23 2031   "d1_both.c".# 1
0069860: 3138 3420 2264 315f 626f 7468 2e63 2220  184 "d1_both.c" 
0069870: 3320 340a 2020 2c0a 2031 3138 350a 2320  3 4.  ,. 1185.# 
0069880: 3131 3834 2022 6431 5f62 6f74 682e 6322  1184 "d1_both.c"
0069890: 2033 2034 0a20 202c 2022 732d 3e64 312d   3 4.  , "s->d1-
00698a0: 3e77 5f6d 7367 5f68 6472 2e6d 7367 5f6c  >w_msg_hdr.msg_l
00698b0: 656e 202b 2028 2873 2d3e 7665 7273 696f  en + ((s->versio
00698c0: 6e3d 3d44 544c 5331 5f56 4552 5349 4f4e  n==DTLS1_VERSION
00698d0: 293f 4454 4c53 315f 4343 535f 4845 4144  )?DTLS1_CCS_HEAD
00698e0: 4552 5f4c 454e 4754 483a 3329 203d 3d20  ER_LENGTH:3) == 
00698f0: 2875 6e73 6967 6e65 6420 696e 7429 732d  (unsigned int)s-
0069900: 3e69 6e69 745f 6e75 6d22 292c 3129 290a  >init_num"),1)).
0069910: 2020 2020 2020 2020 2020 2020 2020 2020                  
0069920: 2020 2020 2020 2020 2020 2020 2020 2020                  
0069930: 2020 2020 2020 2020 2020 2020 2020 2020                  
0069940: 2020 2020 2020 2020 2020 2020 2020 2020                  
0069950: 2020 2020 2020 2020 2020 2020 2020 2020                  
0069960: 2020 2020 2020 2020 2020 2020 2020 203b                 ;
0069970: 0a20 207d 0a20 656c 7365 0a20 207b 0a20  .  }. else.  {. 
0069980: 2028 766f 6964 2928 2873 2d3e 6431 2d3e   (void)((s->d1->
0069990: 775f 6d73 675f 6864 722e 6d73 675f 6c65  w_msg_hdr.msg_le
00699a0: 6e20 2b20 3132 203d 3d20 2875 6e73 6967  n + 12 == (unsig
00699b0: 6e65 6420 696e 7429 732d 3e69 6e69 745f  ned int)s->init_
00699c0: 6e75 6d29 203f 2030 203a 2028 4f70 656e  num) ? 0 : (Open
00699d0: 5353 4c44 6965 280a 2022 6431 5f62 6f74  SSLDie(. "d1_bot
00699e0: 682e 6322 0a23 2031 3138 3920 2264 315f  h.c".# 1189 "d1_
00699f0: 626f 7468 2e63 2220 3320 340a 2020 2c0a  both.c" 3 4.  ,.
0069a00: 2031 3139 300a 2320 3131 3839 2022 6431   1190.# 1189 "d1
0069a10: 5f62 6f74 682e 6322 2033 2034 0a20 202c  _both.c" 3 4.  ,
0069a20: 2022 732d 3e64 312d 3e77 5f6d 7367 5f68   "s->d1->w_msg_h
0069a30: 6472 2e6d 7367 5f6c 656e 202b 2044 544c  dr.msg_len + DTL
0069a40: 5331 5f48 4d5f 4845 4144 4552 5f4c 454e  S1_HM_HEADER_LEN
0069a50: 4754 4820 3d3d 2028 756e 7369 676e 6564  GTH == (unsigned
0069a60: 2069 6e74 2973 2d3e 696e 6974 5f6e 756d   int)s->init_num
0069a70: 2229 2c31 2929 0a20 2020 2020 2020 2020  "),1)).         
0069a80: 2020 2020 2020 2020 2020 2020 2020 2020                  
0069a90: 2020 2020 2020 2020 2020 2020 2020 2020                  
0069aa0: 2020 2020 2020 2020 2020 2020 2020 3b0a                ;.
0069ab0: 2020 7d0a 0a20 6672 6167 2d3e 6d73 675f    }.. frag->msg_
0069ac0: 6865 6164 6572 2e6d 7367 5f6c 656e 203d  header.msg_len =
0069ad0: 2073 2d3e 6431 2d3e 775f 6d73 675f 6864   s->d1->w_msg_hd
0069ae0: 722e 6d73 675f 6c65 6e3b 0a20 6672 6167  r.msg_len;. frag
0069af0: 2d3e 6d73 675f 6865 6164 6572 2e73 6571  ->msg_header.seq
0069b00: 203d 2073 2d3e 6431 2d3e 775f 6d73 675f   = s->d1->w_msg_
0069b10: 6864 722e 7365 713b 0a20 6672 6167 2d3e  hdr.seq;. frag->
0069b20: 6d73 675f 6865 6164 6572 2e74 7970 6520  msg_header.type 
0069b30: 3d20 732d 3e64 312d 3e77 5f6d 7367 5f68  = s->d1->w_msg_h
0069b40: 6472 2e74 7970 653b 0a20 6672 6167 2d3e  dr.type;. frag->
0069b50: 6d73 675f 6865 6164 6572 2e66 7261 675f  msg_header.frag_
0069b60: 6f66 6620 3d20 303b 0a20 6672 6167 2d3e  off = 0;. frag->
0069b70: 6d73 675f 6865 6164 6572 2e66 7261 675f  msg_header.frag_
0069b80: 6c65 6e20 3d20 732d 3e64 312d 3e77 5f6d  len = s->d1->w_m
0069b90: 7367 5f68 6472 2e6d 7367 5f6c 656e 3b0a  sg_hdr.msg_len;.
0069ba0: 2066 7261 672d 3e6d 7367 5f68 6561 6465   frag->msg_heade
0069bb0: 722e 6973 5f63 6373 203d 2069 735f 6363  r.is_ccs = is_cc
0069bc0: 733b 0a0a 0a20 6672 6167 2d3e 6d73 675f  s;... frag->msg_
0069bd0: 6865 6164 6572 2e73 6176 6564 5f72 6574  header.saved_ret
0069be0: 7261 6e73 6d69 745f 7374 6174 652e 656e  ransmit_state.en
0069bf0: 635f 7772 6974 655f 6374 7820 3d20 732d  c_write_ctx = s-
0069c00: 3e65 6e63 5f77 7269 7465 5f63 7478 3b0a  >enc_write_ctx;.
0069c10: 2066 7261 672d 3e6d 7367 5f68 6561 6465   frag->msg_heade
0069c20: 722e 7361 7665 645f 7265 7472 616e 736d  r.saved_retransm
0069c30: 6974 5f73 7461 7465 2e77 7269 7465 5f68  it_state.write_h
0069c40: 6173 6820 3d20 732d 3e77 7269 7465 5f68  ash = s->write_h
0069c50: 6173 683b 0a20 6672 6167 2d3e 6d73 675f  ash;. frag->msg_
0069c60: 6865 6164 6572 2e73 6176 6564 5f72 6574  header.saved_ret
0069c70: 7261 6e73 6d69 745f 7374 6174 652e 636f  ransmit_state.co
0069c80: 6d70 7265 7373 203d 2073 2d3e 636f 6d70  mpress = s->comp
0069c90: 7265 7373 3b0a 2066 7261 672d 3e6d 7367  ress;. frag->msg
0069ca0: 5f68 6561 6465 722e 7361 7665 645f 7265  _header.saved_re
0069cb0: 7472 616e 736d 6974 5f73 7461 7465 2e73  transmit_state.s
0069cc0: 6573 7369 6f6e 203d 2073 2d3e 7365 7373  ession = s->sess
0069cd0: 696f 6e3b 0a20 6672 6167 2d3e 6d73 675f  ion;. frag->msg_
0069ce0: 6865 6164 6572 2e73 6176 6564 5f72 6574  header.saved_ret
0069cf0: 7261 6e73 6d69 745f 7374 6174 652e 6570  ransmit_state.ep
0069d00: 6f63 6820 3d20 732d 3e64 312d 3e77 5f65  och = s->d1->w_e
0069d10: 706f 6368 3b0a 0a20 6d65 6d73 6574 2873  poch;.. memset(s
0069d20: 6571 3634 6265 2c30 2c73 697a 656f 6628  eq64be,0,sizeof(
0069d30: 7365 7136 3462 6529 293b 0a20 7365 7136  seq64be));. seq6
0069d40: 3462 655b 365d 203d 2028 756e 7369 676e  4be[6] = (unsign
0069d50: 6564 2063 6861 7229 2864 746c 7331 5f67  ed char)(dtls1_g
0069d60: 6574 5f71 7565 7565 5f70 7269 6f72 6974  et_queue_priorit
0069d70: 7928 6672 6167 2d3e 6d73 675f 6865 6164  y(frag->msg_head
0069d80: 6572 2e73 6571 2c0a 2020 2020 2020 2020  er.seq,.        
0069d90: 2020 2020 2020 2020 6672 6167 2d3e 6d73          frag->ms
0069da0: 675f 6865 6164 6572 2e69 735f 6363 7329  g_header.is_ccs)
0069db0: 3e3e 3829 3b0a 2073 6571 3634 6265 5b37  >>8);. seq64be[7
0069dc0: 5d20 3d20 2875 6e73 6967 6e65 6420 6368  ] = (unsigned ch
0069dd0: 6172 2928 6474 6c73 315f 6765 745f 7175  ar)(dtls1_get_qu
0069de0: 6575 655f 7072 696f 7269 7479 2866 7261  eue_priority(fra
0069df0: 672d 3e6d 7367 5f68 6561 6465 722e 7365  g->msg_header.se
0069e00: 712c 0a20 2020 2020 2020 2020 2020 2020  q,.             
0069e10: 2020 2066 7261 672d 3e6d 7367 5f68 6561     frag->msg_hea
0069e20: 6465 722e 6973 5f63 6373 2929 3b0a 0a20  der.is_ccs));.. 
0069e30: 6974 656d 203d 2070 6974 656d 5f6e 6577  item = pitem_new
0069e40: 2873 6571 3634 6265 2c20 6672 6167 293b  (seq64be, frag);
0069e50: 0a20 6966 2028 2069 7465 6d20 3d3d 2028  . if ( item == (
0069e60: 2876 6f69 6420 2a29 3029 290a 2020 7b0a  (void *)0)).  {.
0069e70: 2020 6474 6c73 315f 686d 5f66 7261 676d    dtls1_hm_fragm
0069e80: 656e 745f 6672 6565 2866 7261 6729 3b0a  ent_free(frag);.
0069e90: 2020 7265 7475 726e 2030 3b0a 2020 7d0a    return 0;.  }.
0069ea0: 0a0a 0a0a 0a0a 0a20 7071 7565 7565 5f69  ....... pqueue_i
0069eb0: 6e73 6572 7428 732d 3e64 312d 3e73 656e  nsert(s->d1->sen
0069ec0: 745f 6d65 7373 6167 6573 2c20 6974 656d  t_messages, item
0069ed0: 293b 0a20 7265 7475 726e 2031 3b0a 207d  );. return 1;. }
0069ee0: 0a0a 696e 740a 6474 6c73 315f 7265 7472  ..int.dtls1_retr
0069ef0: 616e 736d 6974 5f6d 6573 7361 6765 2853  ansmit_message(S
0069f00: 534c 202a 732c 2075 6e73 6967 6e65 6420  SL *s, unsigned 
0069f10: 7368 6f72 7420 7365 712c 2075 6e73 6967  short seq, unsig
0069f20: 6e65 6420 6c6f 6e67 2066 7261 675f 6f66  ned long frag_of
0069f30: 662c 0a20 696e 7420 2a66 6f75 6e64 290a  f,. int *found).
0069f40: 207b 0a20 696e 7420 7265 743b 0a0a 2070   {. int ret;.. p
0069f50: 6974 656d 202a 6974 656d 3b0a 2068 6d5f  item *item;. hm_
0069f60: 6672 6167 6d65 6e74 202a 6672 6167 203b  fragment *frag ;
0069f70: 0a20 756e 7369 676e 6564 206c 6f6e 6720  . unsigned long 
0069f80: 6865 6164 6572 5f6c 656e 6774 683b 0a20  header_length;. 
0069f90: 756e 7369 676e 6564 2063 6861 7220 7365  unsigned char se
0069fa0: 7136 3462 655b 385d 3b0a 2073 7472 7563  q64be[8];. struc
0069fb0: 7420 6474 6c73 315f 7265 7472 616e 736d  t dtls1_retransm
0069fc0: 6974 5f73 7461 7465 2073 6176 6564 5f73  it_state saved_s
0069fd0: 7461 7465 3b0a 2075 6e73 6967 6e65 6420  tate;. unsigned 
0069fe0: 6368 6172 2073 6176 655f 7772 6974 655f  char save_write_
0069ff0: 7365 7175 656e 6365 5b38 5d3b 0a0a 0a0a  sequence[8];....
006a000: 0a0a 0a0a 206d 656d 7365 7428 7365 7136  .... memset(seq6
006a010: 3462 652c 302c 7369 7a65 6f66 2873 6571  4be,0,sizeof(seq
006a020: 3634 6265 2929 3b0a 2073 6571 3634 6265  64be));. seq64be
006a030: 5b36 5d20 3d20 2875 6e73 6967 6e65 6420  [6] = (unsigned 
006a040: 6368 6172 2928 7365 713e 3e38 293b 0a20  char)(seq>>8);. 
006a050: 7365 7136 3462 655b 375d 203d 2028 756e  seq64be[7] = (un
006a060: 7369 676e 6564 2063 6861 7229 7365 713b  signed char)seq;
006a070: 0a0a 2069 7465 6d20 3d20 7071 7565 7565  .. item = pqueue
006a080: 5f66 696e 6428 732d 3e64 312d 3e73 656e  _find(s->d1->sen
006a090: 745f 6d65 7373 6167 6573 2c20 7365 7136  t_messages, seq6
006a0a0: 3462 6529 3b0a 2069 6620 2820 6974 656d  4be);. if ( item
006a0b0: 203d 3d20 2828 766f 6964 202a 2930 2929   == ((void *)0))
006a0c0: 0a20 207b 0a20 2066 7072 696e 7466 2873  .  {.  fprintf(s
006a0d0: 7464 6572 722c 2022 7265 7472 616e 736d  tderr, "retransm
006a0e0: 6974 3a20 206d 6573 7361 6765 2025 6420  it:  message %d 
006a0f0: 6e6f 6e2d 6578 6973 7461 6e74 5c6e 222c  non-existant\n",
006a100: 2073 6571 293b 0a20 202a 666f 756e 6420   seq);.  *found 
006a110: 3d20 303b 0a20 2072 6574 7572 6e20 303b  = 0;.  return 0;
006a120: 0a20 207d 0a0a 202a 666f 756e 6420 3d20  .  }.. *found = 
006a130: 313b 0a20 6672 6167 203d 2028 686d 5f66  1;. frag = (hm_f
006a140: 7261 676d 656e 7420 2a29 6974 656d 2d3e  ragment *)item->
006a150: 6461 7461 3b0a 0a20 6966 2028 2066 7261  data;.. if ( fra
006a160: 672d 3e6d 7367 5f68 6561 6465 722e 6973  g->msg_header.is
006a170: 5f63 6373 290a 2020 6865 6164 6572 5f6c  _ccs).  header_l
006a180: 656e 6774 6820 3d20 313b 0a20 656c 7365  ength = 1;. else
006a190: 0a20 2068 6561 6465 725f 6c65 6e67 7468  .  header_length
006a1a0: 203d 2031 323b 0a0a 206d 656d 6370 7928   = 12;.. memcpy(
006a1b0: 732d 3e69 6e69 745f 6275 662d 3e64 6174  s->init_buf->dat
006a1c0: 612c 2066 7261 672d 3e66 7261 676d 656e  a, frag->fragmen
006a1d0: 742c 0a20 2066 7261 672d 3e6d 7367 5f68  t,.  frag->msg_h
006a1e0: 6561 6465 722e 6d73 675f 6c65 6e20 2b20  eader.msg_len + 
006a1f0: 6865 6164 6572 5f6c 656e 6774 6829 3b0a  header_length);.
006a200: 2020 732d 3e69 6e69 745f 6e75 6d20 3d20    s->init_num = 
006a210: 6672 6167 2d3e 6d73 675f 6865 6164 6572  frag->msg_header
006a220: 2e6d 7367 5f6c 656e 202b 2068 6561 6465  .msg_len + heade
006a230: 725f 6c65 6e67 7468 3b0a 0a20 6474 6c73  r_length;.. dtls
006a240: 315f 7365 745f 6d65 7373 6167 655f 6865  1_set_message_he
006a250: 6164 6572 5f69 6e74 2873 2c20 6672 6167  ader_int(s, frag
006a260: 2d3e 6d73 675f 6865 6164 6572 2e74 7970  ->msg_header.typ
006a270: 652c 0a20 2066 7261 672d 3e6d 7367 5f68  e,.  frag->msg_h
006a280: 6561 6465 722e 6d73 675f 6c65 6e2c 2066  eader.msg_len, f
006a290: 7261 672d 3e6d 7367 5f68 6561 6465 722e  rag->msg_header.
006a2a0: 7365 712c 2030 2c0a 2020 6672 6167 2d3e  seq, 0,.  frag->
006a2b0: 6d73 675f 6865 6164 6572 2e66 7261 675f  msg_header.frag_
006a2c0: 6c65 6e29 3b0a 0a0a 2073 6176 6564 5f73  len);... saved_s
006a2d0: 7461 7465 2e65 6e63 5f77 7269 7465 5f63  tate.enc_write_c
006a2e0: 7478 203d 2073 2d3e 656e 635f 7772 6974  tx = s->enc_writ
006a2f0: 655f 6374 783b 0a20 7361 7665 645f 7374  e_ctx;. saved_st
006a300: 6174 652e 7772 6974 655f 6861 7368 203d  ate.write_hash =
006a310: 2073 2d3e 7772 6974 655f 6861 7368 3b0a   s->write_hash;.
006a320: 2073 6176 6564 5f73 7461 7465 2e63 6f6d   saved_state.com
006a330: 7072 6573 7320 3d20 732d 3e63 6f6d 7072  press = s->compr
006a340: 6573 733b 0a20 7361 7665 645f 7374 6174  ess;. saved_stat
006a350: 652e 7365 7373 696f 6e20 3d20 732d 3e73  e.session = s->s
006a360: 6573 7369 6f6e 3b0a 2073 6176 6564 5f73  ession;. saved_s
006a370: 7461 7465 2e65 706f 6368 203d 2073 2d3e  tate.epoch = s->
006a380: 6431 2d3e 775f 6570 6f63 683b 0a20 7361  d1->w_epoch;. sa
006a390: 7665 645f 7374 6174 652e 6570 6f63 6820  ved_state.epoch 
006a3a0: 3d20 732d 3e64 312d 3e77 5f65 706f 6368  = s->d1->w_epoch
006a3b0: 3b0a 0a20 732d 3e64 312d 3e72 6574 7261  ;.. s->d1->retra
006a3c0: 6e73 6d69 7474 696e 6720 3d20 313b 0a0a  nsmitting = 1;..
006a3d0: 0a20 732d 3e65 6e63 5f77 7269 7465 5f63  . s->enc_write_c
006a3e0: 7478 203d 2066 7261 672d 3e6d 7367 5f68  tx = frag->msg_h
006a3f0: 6561 6465 722e 7361 7665 645f 7265 7472  eader.saved_retr
006a400: 616e 736d 6974 5f73 7461 7465 2e65 6e63  ansmit_state.enc
006a410: 5f77 7269 7465 5f63 7478 3b0a 2073 2d3e  _write_ctx;. s->
006a420: 7772 6974 655f 6861 7368 203d 2066 7261  write_hash = fra
006a430: 672d 3e6d 7367 5f68 6561 6465 722e 7361  g->msg_header.sa
006a440: 7665 645f 7265 7472 616e 736d 6974 5f73  ved_retransmit_s
006a450: 7461 7465 2e77 7269 7465 5f68 6173 683b  tate.write_hash;
006a460: 0a20 732d 3e63 6f6d 7072 6573 7320 3d20  . s->compress = 
006a470: 6672 6167 2d3e 6d73 675f 6865 6164 6572  frag->msg_header
006a480: 2e73 6176 6564 5f72 6574 7261 6e73 6d69  .saved_retransmi
006a490: 745f 7374 6174 652e 636f 6d70 7265 7373  t_state.compress
006a4a0: 3b0a 2073 2d3e 7365 7373 696f 6e20 3d20  ;. s->session = 
006a4b0: 6672 6167 2d3e 6d73 675f 6865 6164 6572  frag->msg_header
006a4c0: 2e73 6176 6564 5f72 6574 7261 6e73 6d69  .saved_retransmi
006a4d0: 745f 7374 6174 652e 7365 7373 696f 6e3b  t_state.session;
006a4e0: 0a20 732d 3e64 312d 3e77 5f65 706f 6368  . s->d1->w_epoch
006a4f0: 203d 2066 7261 672d 3e6d 7367 5f68 6561   = frag->msg_hea
006a500: 6465 722e 7361 7665 645f 7265 7472 616e  der.saved_retran
006a510: 736d 6974 5f73 7461 7465 2e65 706f 6368  smit_state.epoch
006a520: 3b0a 0a20 6966 2028 6672 6167 2d3e 6d73  ;.. if (frag->ms
006a530: 675f 6865 6164 6572 2e73 6176 6564 5f72  g_header.saved_r
006a540: 6574 7261 6e73 6d69 745f 7374 6174 652e  etransmit_state.
006a550: 6570 6f63 6820 3d3d 2073 6176 6564 5f73  epoch == saved_s
006a560: 7461 7465 2e65 706f 6368 202d 2031 290a  tate.epoch - 1).
006a570: 207b 0a20 206d 656d 6370 7928 7361 7665   {.  memcpy(save
006a580: 5f77 7269 7465 5f73 6571 7565 6e63 652c  _write_sequence,
006a590: 2073 2d3e 7333 2d3e 7772 6974 655f 7365   s->s3->write_se
006a5a0: 7175 656e 6365 2c20 7369 7a65 6f66 2873  quence, sizeof(s
006a5b0: 2d3e 7333 2d3e 7772 6974 655f 7365 7175  ->s3->write_sequ
006a5c0: 656e 6365 2929 3b0a 2020 6d65 6d63 7079  ence));.  memcpy
006a5d0: 2873 2d3e 7333 2d3e 7772 6974 655f 7365  (s->s3->write_se
006a5e0: 7175 656e 6365 2c20 732d 3e64 312d 3e6c  quence, s->d1->l
006a5f0: 6173 745f 7772 6974 655f 7365 7175 656e  ast_write_sequen
006a600: 6365 2c20 7369 7a65 6f66 2873 2d3e 7333  ce, sizeof(s->s3
006a610: 2d3e 7772 6974 655f 7365 7175 656e 6365  ->write_sequence
006a620: 2929 3b0a 207d 0a0a 2072 6574 203d 2064  ));. }.. ret = d
006a630: 746c 7331 5f64 6f5f 7772 6974 6528 732c  tls1_do_write(s,
006a640: 2066 7261 672d 3e6d 7367 5f68 6561 6465   frag->msg_heade
006a650: 722e 6973 5f63 6373 203f 0a20 2020 2020  r.is_ccs ?.     
006a660: 2020 3230 203a 2032 3229 3b0a 0a0a 2073    20 : 22);... s
006a670: 2d3e 656e 635f 7772 6974 655f 6374 7820  ->enc_write_ctx 
006a680: 3d20 7361 7665 645f 7374 6174 652e 656e  = saved_state.en
006a690: 635f 7772 6974 655f 6374 783b 0a20 732d  c_write_ctx;. s-
006a6a0: 3e77 7269 7465 5f68 6173 6820 3d20 7361  >write_hash = sa
006a6b0: 7665 645f 7374 6174 652e 7772 6974 655f  ved_state.write_
006a6c0: 6861 7368 3b0a 2073 2d3e 636f 6d70 7265  hash;. s->compre
006a6d0: 7373 203d 2073 6176 6564 5f73 7461 7465  ss = saved_state
006a6e0: 2e63 6f6d 7072 6573 733b 0a20 732d 3e73  .compress;. s->s
006a6f0: 6573 7369 6f6e 203d 2073 6176 6564 5f73  ession = saved_s
006a700: 7461 7465 2e73 6573 7369 6f6e 3b0a 2073  tate.session;. s
006a710: 2d3e 6431 2d3e 775f 6570 6f63 6820 3d20  ->d1->w_epoch = 
006a720: 7361 7665 645f 7374 6174 652e 6570 6f63  saved_state.epoc
006a730: 683b 0a0a 2069 6620 2866 7261 672d 3e6d  h;.. if (frag->m
006a740: 7367 5f68 6561 6465 722e 7361 7665 645f  sg_header.saved_
006a750: 7265 7472 616e 736d 6974 5f73 7461 7465  retransmit_state
006a760: 2e65 706f 6368 203d 3d20 7361 7665 645f  .epoch == saved_
006a770: 7374 6174 652e 6570 6f63 6820 2d20 3129  state.epoch - 1)
006a780: 0a20 7b0a 2020 6d65 6d63 7079 2873 2d3e  . {.  memcpy(s->
006a790: 6431 2d3e 6c61 7374 5f77 7269 7465 5f73  d1->last_write_s
006a7a0: 6571 7565 6e63 652c 2073 2d3e 7333 2d3e  equence, s->s3->
006a7b0: 7772 6974 655f 7365 7175 656e 6365 2c20  write_sequence, 
006a7c0: 7369 7a65 6f66 2873 2d3e 7333 2d3e 7772  sizeof(s->s3->wr
006a7d0: 6974 655f 7365 7175 656e 6365 2929 3b0a  ite_sequence));.
006a7e0: 2020 6d65 6d63 7079 2873 2d3e 7333 2d3e    memcpy(s->s3->
006a7f0: 7772 6974 655f 7365 7175 656e 6365 2c20  write_sequence, 
006a800: 7361 7665 5f77 7269 7465 5f73 6571 7565  save_write_seque
006a810: 6e63 652c 2073 697a 656f 6628 732d 3e73  nce, sizeof(s->s
006a820: 332d 3e77 7269 7465 5f73 6571 7565 6e63  3->write_sequenc
006a830: 6529 293b 0a20 7d0a 0a20 732d 3e64 312d  e));. }.. s->d1-
006a840: 3e72 6574 7261 6e73 6d69 7474 696e 6720  >retransmitting 
006a850: 3d20 303b 0a0a 2028 766f 6964 2928 696e  = 0;.. (void)(in
006a860: 7429 4249 4f5f 6374 726c 2853 534c 5f67  t)BIO_ctrl(SSL_g
006a870: 6574 5f77 6269 6f28 7329 2c31 312c 302c  et_wbio(s),11,0,
006a880: 2828 766f 6964 202a 2930 2929 3b0a 2072  ((void *)0));. r
006a890: 6574 7572 6e20 7265 743b 0a20 7d0a 0a0a  eturn ret;. }...
006a8a0: 766f 6964 0a64 746c 7331 5f63 6c65 6172  void.dtls1_clear
006a8b0: 5f72 6563 6f72 645f 6275 6666 6572 2853  _record_buffer(S
006a8c0: 534c 202a 7329 0a20 7b0a 2070 6974 656d  SL *s). {. pitem
006a8d0: 202a 6974 656d 3b0a 0a20 666f 7228 6974   *item;.. for(it
006a8e0: 656d 203d 2070 7175 6575 655f 706f 7028  em = pqueue_pop(
006a8f0: 732d 3e64 312d 3e73 656e 745f 6d65 7373  s->d1->sent_mess
006a900: 6167 6573 293b 0a20 2069 7465 6d20 213d  ages);.  item !=
006a910: 2028 2876 6f69 6420 2a29 3029 3b20 6974   ((void *)0); it
006a920: 656d 203d 2070 7175 6575 655f 706f 7028  em = pqueue_pop(
006a930: 732d 3e64 312d 3e73 656e 745f 6d65 7373  s->d1->sent_mess
006a940: 6167 6573 2929 0a20 207b 0a20 2064 746c  ages)).  {.  dtl
006a950: 7331 5f68 6d5f 6672 6167 6d65 6e74 5f66  s1_hm_fragment_f
006a960: 7265 6528 2868 6d5f 6672 6167 6d65 6e74  ree((hm_fragment
006a970: 202a 2969 7465 6d2d 3e64 6174 6129 3b0a   *)item->data);.
006a980: 2020 7069 7465 6d5f 6672 6565 2869 7465    pitem_free(ite
006a990: 6d29 3b0a 2020 7d0a 207d 0a0a 0a75 6e73  m);.  }. }...uns
006a9a0: 6967 6e65 6420 6368 6172 202a 0a64 746c  igned char *.dtl
006a9b0: 7331 5f73 6574 5f6d 6573 7361 6765 5f68  s1_set_message_h
006a9c0: 6561 6465 7228 5353 4c20 2a73 2c20 756e  eader(SSL *s, un
006a9d0: 7369 676e 6564 2063 6861 7220 2a70 2c20  signed char *p, 
006a9e0: 756e 7369 676e 6564 2063 6861 7220 6d74  unsigned char mt
006a9f0: 2c0a 2020 2075 6e73 6967 6e65 6420 6c6f  ,.   unsigned lo
006aa00: 6e67 206c 656e 2c20 756e 7369 676e 6564  ng len, unsigned
006aa10: 206c 6f6e 6720 6672 6167 5f6f 6666 2c20   long frag_off, 
006aa20: 756e 7369 676e 6564 206c 6f6e 6720 6672  unsigned long fr
006aa30: 6167 5f6c 656e 290a 207b 0a0a 2069 6620  ag_len). {.. if 
006aa40: 2866 7261 675f 6f66 6620 3d3d 2030 2026  (frag_off == 0 &
006aa50: 2620 2173 2d3e 6431 2d3e 6c69 7374 656e  & !s->d1->listen
006aa60: 290a 2020 7b0a 2020 732d 3e64 312d 3e68  ).  {.  s->d1->h
006aa70: 616e 6473 6861 6b65 5f77 7269 7465 5f73  andshake_write_s
006aa80: 6571 203d 2073 2d3e 6431 2d3e 6e65 7874  eq = s->d1->next
006aa90: 5f68 616e 6473 6861 6b65 5f77 7269 7465  _handshake_write
006aaa0: 5f73 6571 3b0a 2020 732d 3e64 312d 3e6e  _seq;.  s->d1->n
006aab0: 6578 745f 6861 6e64 7368 616b 655f 7772  ext_handshake_wr
006aac0: 6974 655f 7365 712b 2b3b 0a20 207d 0a0a  ite_seq++;.  }..
006aad0: 2064 746c 7331 5f73 6574 5f6d 6573 7361   dtls1_set_messa
006aae0: 6765 5f68 6561 6465 725f 696e 7428 732c  ge_header_int(s,
006aaf0: 206d 742c 206c 656e 2c20 732d 3e64 312d   mt, len, s->d1-
006ab00: 3e68 616e 6473 6861 6b65 5f77 7269 7465  >handshake_write
006ab10: 5f73 6571 2c0a 2020 6672 6167 5f6f 6666  _seq,.  frag_off
006ab20: 2c20 6672 6167 5f6c 656e 293b 0a0a 2072  , frag_len);.. r
006ab30: 6574 7572 6e20 7020 2b3d 2031 323b 0a20  eturn p += 12;. 
006ab40: 7d0a 0a0a 0a73 7461 7469 6320 766f 6964  }....static void
006ab50: 0a64 746c 7331 5f73 6574 5f6d 6573 7361  .dtls1_set_messa
006ab60: 6765 5f68 6561 6465 725f 696e 7428 5353  ge_header_int(SS
006ab70: 4c20 2a73 2c20 756e 7369 676e 6564 2063  L *s, unsigned c
006ab80: 6861 7220 6d74 2c0a 2020 2020 2020 2075  har mt,.       u
006ab90: 6e73 6967 6e65 6420 6c6f 6e67 206c 656e  nsigned long len
006aba0: 2c20 756e 7369 676e 6564 2073 686f 7274  , unsigned short
006abb0: 2073 6571 5f6e 756d 2c20 756e 7369 676e   seq_num, unsign
006abc0: 6564 206c 6f6e 6720 6672 6167 5f6f 6666  ed long frag_off
006abd0: 2c0a 2020 2020 2020 2075 6e73 6967 6e65  ,.       unsigne
006abe0: 6420 6c6f 6e67 2066 7261 675f 6c65 6e29  d long frag_len)
006abf0: 0a20 7b0a 2073 7472 7563 7420 686d 5f68  . {. struct hm_h
006ac00: 6561 6465 725f 7374 202a 6d73 675f 6864  eader_st *msg_hd
006ac10: 7220 3d20 2673 2d3e 6431 2d3e 775f 6d73  r = &s->d1->w_ms
006ac20: 675f 6864 723b 0a0a 206d 7367 5f68 6472  g_hdr;.. msg_hdr
006ac30: 2d3e 7479 7065 203d 206d 743b 0a20 6d73  ->type = mt;. ms
006ac40: 675f 6864 722d 3e6d 7367 5f6c 656e 203d  g_hdr->msg_len =
006ac50: 206c 656e 3b0a 206d 7367 5f68 6472 2d3e   len;. msg_hdr->
006ac60: 7365 7120 3d20 7365 715f 6e75 6d3b 0a20  seq = seq_num;. 
006ac70: 6d73 675f 6864 722d 3e66 7261 675f 6f66  msg_hdr->frag_of
006ac80: 6620 3d20 6672 6167 5f6f 6666 3b0a 206d  f = frag_off;. m
006ac90: 7367 5f68 6472 2d3e 6672 6167 5f6c 656e  sg_hdr->frag_len
006aca0: 203d 2066 7261 675f 6c65 6e3b 0a20 7d0a   = frag_len;. }.
006acb0: 0a73 7461 7469 6320 766f 6964 0a64 746c  .static void.dtl
006acc0: 7331 5f66 6978 5f6d 6573 7361 6765 5f68  s1_fix_message_h
006acd0: 6561 6465 7228 5353 4c20 2a73 2c20 756e  eader(SSL *s, un
006ace0: 7369 676e 6564 206c 6f6e 6720 6672 6167  signed long frag
006acf0: 5f6f 6666 2c0a 2020 2075 6e73 6967 6e65  _off,.   unsigne
006ad00: 6420 6c6f 6e67 2066 7261 675f 6c65 6e29  d long frag_len)
006ad10: 0a20 7b0a 2073 7472 7563 7420 686d 5f68  . {. struct hm_h
006ad20: 6561 6465 725f 7374 202a 6d73 675f 6864  eader_st *msg_hd
006ad30: 7220 3d20 2673 2d3e 6431 2d3e 775f 6d73  r = &s->d1->w_ms
006ad40: 675f 6864 723b 0a0a 206d 7367 5f68 6472  g_hdr;.. msg_hdr
006ad50: 2d3e 6672 6167 5f6f 6666 203d 2066 7261  ->frag_off = fra
006ad60: 675f 6f66 663b 0a20 6d73 675f 6864 722d  g_off;. msg_hdr-
006ad70: 3e66 7261 675f 6c65 6e20 3d20 6672 6167  >frag_len = frag
006ad80: 5f6c 656e 3b0a 207d 0a0a 7374 6174 6963  _len;. }..static
006ad90: 2075 6e73 6967 6e65 6420 6368 6172 202a   unsigned char *
006ada0: 0a64 746c 7331 5f77 7269 7465 5f6d 6573  .dtls1_write_mes
006adb0: 7361 6765 5f68 6561 6465 7228 5353 4c20  sage_header(SSL 
006adc0: 2a73 2c20 756e 7369 676e 6564 2063 6861  *s, unsigned cha
006add0: 7220 2a70 290a 207b 0a20 7374 7275 6374  r *p). {. struct
006ade0: 2068 6d5f 6865 6164 6572 5f73 7420 2a6d   hm_header_st *m
006adf0: 7367 5f68 6472 203d 2026 732d 3e64 312d  sg_hdr = &s->d1-
006ae00: 3e77 5f6d 7367 5f68 6472 3b0a 0a20 2a70  >w_msg_hdr;.. *p
006ae10: 2b2b 203d 206d 7367 5f68 6472 2d3e 7479  ++ = msg_hdr->ty
006ae20: 7065 3b0a 2028 2870 5b30 5d3d 2875 6e73  pe;. ((p[0]=(uns
006ae30: 6967 6e65 6420 6368 6172 2928 2828 6d73  igned char)(((ms
006ae40: 675f 6864 722d 3e6d 7367 5f6c 656e 293e  g_hdr->msg_len)>
006ae50: 3e31 3629 2630 7866 6629 2c20 705b 315d  >16)&0xff), p[1]
006ae60: 3d28 756e 7369 676e 6564 2063 6861 7229  =(unsigned char)
006ae70: 2828 286d 7367 5f68 6472 2d3e 6d73 675f  (((msg_hdr->msg_
006ae80: 6c65 6e29 3e3e 2038 2926 3078 6666 292c  len)>> 8)&0xff),
006ae90: 2070 5b32 5d3d 2875 6e73 6967 6e65 6420   p[2]=(unsigned 
006aea0: 6368 6172 2928 2828 6d73 675f 6864 722d  char)(((msg_hdr-
006aeb0: 3e6d 7367 5f6c 656e 2920 2926 3078 6666  >msg_len) )&0xff
006aec0: 2929 2c70 2b3d 3329 3b0a 0a20 2828 705b  )),p+=3);.. ((p[
006aed0: 305d 3d28 756e 7369 676e 6564 2063 6861  0]=(unsigned cha
006aee0: 7229 2828 286d 7367 5f68 6472 2d3e 7365  r)(((msg_hdr->se
006aef0: 7129 3e3e 2038 2926 3078 6666 292c 2070  q)>> 8)&0xff), p
006af00: 5b31 5d3d 2875 6e73 6967 6e65 6420 6368  [1]=(unsigned ch
006af10: 6172 2928 2828 6d73 675f 6864 722d 3e73  ar)(((msg_hdr->s
006af20: 6571 2920 2926 3078 6666 2929 2c70 2b3d  eq) )&0xff)),p+=
006af30: 3229 3b0a 2028 2870 5b30 5d3d 2875 6e73  2);. ((p[0]=(uns
006af40: 6967 6e65 6420 6368 6172 2928 2828 6d73  igned char)(((ms
006af50: 675f 6864 722d 3e66 7261 675f 6f66 6629  g_hdr->frag_off)
006af60: 3e3e 3136 2926 3078 6666 292c 2070 5b31  >>16)&0xff), p[1
006af70: 5d3d 2875 6e73 6967 6e65 6420 6368 6172  ]=(unsigned char
006af80: 2928 2828 6d73 675f 6864 722d 3e66 7261  )(((msg_hdr->fra
006af90: 675f 6f66 6629 3e3e 2038 2926 3078 6666  g_off)>> 8)&0xff
006afa0: 292c 2070 5b32 5d3d 2875 6e73 6967 6e65  ), p[2]=(unsigne
006afb0: 6420 6368 6172 2928 2828 6d73 675f 6864  d char)(((msg_hd
006afc0: 722d 3e66 7261 675f 6f66 6629 2029 2630  r->frag_off) )&0
006afd0: 7866 6629 292c 702b 3d33 293b 0a20 2828  xff)),p+=3);. ((
006afe0: 705b 305d 3d28 756e 7369 676e 6564 2063  p[0]=(unsigned c
006aff0: 6861 7229 2828 286d 7367 5f68 6472 2d3e  har)(((msg_hdr->
006b000: 6672 6167 5f6c 656e 293e 3e31 3629 2630  frag_len)>>16)&0
006b010: 7866 6629 2c20 705b 315d 3d28 756e 7369  xff), p[1]=(unsi
006b020: 676e 6564 2063 6861 7229 2828 286d 7367  gned char)(((msg
006b030: 5f68 6472 2d3e 6672 6167 5f6c 656e 293e  _hdr->frag_len)>
006b040: 3e20 3829 2630 7866 6629 2c20 705b 325d  > 8)&0xff), p[2]
006b050: 3d28 756e 7369 676e 6564 2063 6861 7229  =(unsigned char)
006b060: 2828 286d 7367 5f68 6472 2d3e 6672 6167  (((msg_hdr->frag
006b070: 5f6c 656e 2920 2926 3078 6666 2929 2c70  _len) )&0xff)),p
006b080: 2b3d 3329 3b0a 0a20 7265 7475 726e 2070  +=3);.. return p
006b090: 3b0a 207d 0a0a 756e 7369 676e 6564 2069  ;. }..unsigned i
006b0a0: 6e74 0a64 746c 7331 5f6d 696e 5f6d 7475  nt.dtls1_min_mtu
006b0b0: 2876 6f69 6429 0a20 7b0a 2072 6574 7572  (void). {. retur
006b0c0: 6e20 2867 5f70 726f 6261 626c 655f 6d74  n (g_probable_mt
006b0d0: 755b 2873 697a 656f 6628 675f 7072 6f62  u[(sizeof(g_prob
006b0e0: 6162 6c65 5f6d 7475 2920 2f0a 2020 7369  able_mtu) /.  si
006b0f0: 7a65 6f66 2867 5f70 726f 6261 626c 655f  zeof(g_probable_
006b100: 6d74 755b 305d 2929 202d 2031 5d29 3b0a  mtu[0])) - 1]);.
006b110: 207d 0a0a 7374 6174 6963 2075 6e73 6967   }..static unsig
006b120: 6e65 6420 696e 740a 6474 6c73 315f 6775  ned int.dtls1_gu
006b130: 6573 735f 6d74 7528 756e 7369 676e 6564  ess_mtu(unsigned
006b140: 2069 6e74 2063 7572 725f 6d74 7529 0a20   int curr_mtu). 
006b150: 7b0a 2075 6e73 6967 6e65 6420 696e 7420  {. unsigned int 
006b160: 693b 0a0a 2069 6620 2820 6375 7272 5f6d  i;.. if ( curr_m
006b170: 7475 203d 3d20 3020 290a 2020 7265 7475  tu == 0 ).  retu
006b180: 726e 2067 5f70 726f 6261 626c 655f 6d74  rn g_probable_mt
006b190: 755b 305d 203b 0a0a 2066 6f72 2028 2069  u[0] ;.. for ( i
006b1a0: 203d 2030 3b20 6920 3c20 7369 7a65 6f66   = 0; i < sizeof
006b1b0: 2867 5f70 726f 6261 626c 655f 6d74 7529  (g_probable_mtu)
006b1c0: 2f73 697a 656f 6628 675f 7072 6f62 6162  /sizeof(g_probab
006b1d0: 6c65 5f6d 7475 5b30 5d29 3b20 692b 2b29  le_mtu[0]); i++)
006b1e0: 0a20 2069 6620 2820 6375 7272 5f6d 7475  .  if ( curr_mtu
006b1f0: 203e 2067 5f70 726f 6261 626c 655f 6d74   > g_probable_mt
006b200: 755b 695d 290a 2020 2072 6574 7572 6e20  u[i]).   return 
006b210: 675f 7072 6f62 6162 6c65 5f6d 7475 5b69  g_probable_mtu[i
006b220: 5d3b 0a0a 2072 6574 7572 6e20 6375 7272  ];.. return curr
006b230: 5f6d 7475 3b0a 207d 0a0a 766f 6964 0a64  _mtu;. }..void.d
006b240: 746c 7331 5f67 6574 5f6d 6573 7361 6765  tls1_get_message
006b250: 5f68 6561 6465 7228 756e 7369 676e 6564  _header(unsigned
006b260: 2063 6861 7220 2a64 6174 612c 2073 7472   char *data, str
006b270: 7563 7420 686d 5f68 6561 6465 725f 7374  uct hm_header_st
006b280: 202a 6d73 675f 6864 7229 0a20 7b0a 206d   *msg_hdr). {. m
006b290: 656d 7365 7428 6d73 675f 6864 722c 2030  emset(msg_hdr, 0
006b2a0: 7830 302c 2073 697a 656f 6628 7374 7275  x00, sizeof(stru
006b2b0: 6374 2068 6d5f 6865 6164 6572 5f73 7429  ct hm_header_st)
006b2c0: 293b 0a20 6d73 675f 6864 722d 3e74 7970  );. msg_hdr->typ
006b2d0: 6520 3d20 2a28 6461 7461 2b2b 293b 0a20  e = *(data++);. 
006b2e0: 2828 6d73 675f 6864 722d 3e6d 7367 5f6c  ((msg_hdr->msg_l
006b2f0: 656e 203d 2828 2875 6e73 6967 6e65 6420  en =(((unsigned 
006b300: 6c6f 6e67 2928 6461 7461 5b30 5d29 293c  long)(data[0]))<
006b310: 3c31 3629 7c20 2828 2875 6e73 6967 6e65  <16)| (((unsigne
006b320: 6420 6c6f 6e67 2928 6461 7461 5b31 5d29  d long)(data[1])
006b330: 293c 3c20 3829 7c20 2828 2875 6e73 6967  )<< 8)| (((unsig
006b340: 6e65 6420 6c6f 6e67 2928 6461 7461 5b32  ned long)(data[2
006b350: 5d29 2920 2929 2c64 6174 612b 3d33 293b  ])) )),data+=3);
006b360: 0a0a 2028 286d 7367 5f68 6472 2d3e 7365  .. ((msg_hdr->se
006b370: 713d 2828 2875 6e73 6967 6e65 6420 696e  q=(((unsigned in
006b380: 7429 2864 6174 615b 305d 2929 3c3c 2038  t)(data[0]))<< 8
006b390: 297c 2028 2828 756e 7369 676e 6564 2069  )| (((unsigned i
006b3a0: 6e74 2928 6461 7461 5b31 5d29 2920 2929  nt)(data[1])) ))
006b3b0: 2c64 6174 612b 3d32 293b 0a20 2828 6d73  ,data+=2);. ((ms
006b3c0: 675f 6864 722d 3e66 7261 675f 6f66 6620  g_hdr->frag_off 
006b3d0: 3d28 2828 756e 7369 676e 6564 206c 6f6e  =(((unsigned lon
006b3e0: 6729 2864 6174 615b 305d 2929 3c3c 3136  g)(data[0]))<<16
006b3f0: 297c 2028 2828 756e 7369 676e 6564 206c  )| (((unsigned l
006b400: 6f6e 6729 2864 6174 615b 315d 2929 3c3c  ong)(data[1]))<<
006b410: 2038 297c 2028 2828 756e 7369 676e 6564   8)| (((unsigned
006b420: 206c 6f6e 6729 2864 6174 615b 325d 2929   long)(data[2]))
006b430: 2029 292c 6461 7461 2b3d 3329 3b0a 2028   )),data+=3);. (
006b440: 286d 7367 5f68 6472 2d3e 6672 6167 5f6c  (msg_hdr->frag_l
006b450: 656e 203d 2828 2875 6e73 6967 6e65 6420  en =(((unsigned 
006b460: 6c6f 6e67 2928 6461 7461 5b30 5d29 293c  long)(data[0]))<
006b470: 3c31 3629 7c20 2828 2875 6e73 6967 6e65  <16)| (((unsigne
006b480: 6420 6c6f 6e67 2928 6461 7461 5b31 5d29  d long)(data[1])
006b490: 293c 3c20 3829 7c20 2828 2875 6e73 6967  )<< 8)| (((unsig
006b4a0: 6e65 6420 6c6f 6e67 2928 6461 7461 5b32  ned long)(data[2
006b4b0: 5d29 2920 2929 2c64 6174 612b 3d33 293b  ])) )),data+=3);
006b4c0: 0a20 7d0a 0a76 6f69 640a 6474 6c73 315f  . }..void.dtls1_
006b4d0: 6765 745f 6363 735f 6865 6164 6572 2875  get_ccs_header(u
006b4e0: 6e73 6967 6e65 6420 6368 6172 202a 6461  nsigned char *da
006b4f0: 7461 2c20 7374 7275 6374 2063 6373 5f68  ta, struct ccs_h
006b500: 6561 6465 725f 7374 202a 6363 735f 6864  eader_st *ccs_hd
006b510: 7229 0a20 7b0a 206d 656d 7365 7428 6363  r). {. memset(cc
006b520: 735f 6864 722c 2030 7830 302c 2073 697a  s_hdr, 0x00, siz
006b530: 656f 6628 7374 7275 6374 2063 6373 5f68  eof(struct ccs_h
006b540: 6561 6465 725f 7374 2929 3b0a 0a20 6363  eader_st));.. cc
006b550: 735f 6864 722d 3e74 7970 6520 3d20 2a28  s_hdr->type = *(
006b560: 6461 7461 2b2b 293b 0a20 7d0a 0a69 6e74  data++);. }..int
006b570: 2064 746c 7331 5f73 6875 7464 6f77 6e28   dtls1_shutdown(
006b580: 5353 4c20 2a73 290a 207b 0a20 696e 7420  SSL *s). {. int 
006b590: 7265 743b 0a23 2031 3435 3120 2264 315f  ret;.# 1451 "d1_
006b5a0: 626f 7468 2e63 220a 2072 6574 203d 2073  both.c". ret = s
006b5b0: 736c 335f 7368 7574 646f 776e 2873 293b  sl3_shutdown(s);
006b5c0: 0a0a 0a0a 2072 6574 7572 6e20 7265 743b  .... return ret;
006b5d0: 0a20 7d0a 0a0a 696e 740a 6474 6c73 315f  . }...int.dtls1_
006b5e0: 7072 6f63 6573 735f 6865 6172 7462 6561  process_heartbea
006b5f0: 7428 5353 4c20 2a73 290a 207b 0a20 756e  t(SSL *s). {. un
006b600: 7369 676e 6564 2063 6861 7220 2a70 203d  signed char *p =
006b610: 2026 732d 3e73 332d 3e72 7265 632e 6461   &s->s3->rrec.da
006b620: 7461 5b30 5d2c 202a 706c 3b0a 2075 6e73  ta[0], *pl;. uns
006b630: 6967 6e65 6420 7368 6f72 7420 6862 7479  igned short hbty
006b640: 7065 3b0a 2075 6e73 6967 6e65 6420 696e  pe;. unsigned in
006b650: 7420 7061 796c 6f61 643b 0a20 756e 7369  t payload;. unsi
006b660: 676e 6564 2069 6e74 2070 6164 6469 6e67  gned int padding
006b670: 203d 2031 363b 0a0a 0a20 696e 7420 693b   = 16;... int i;
006b680: 0a20 7061 7274 5374 6172 7428 293b 0a20  . partStart();. 
006b690: 6862 7479 7065 203d 202a 702b 2b3b 0a20  hbtype = *p++;. 
006b6a0: 2828 7061 796c 6f61 643d 2828 2875 6e73  ((payload=(((uns
006b6b0: 6967 6e65 6420 696e 7429 2870 5b30 5d29  igned int)(p[0])
006b6c0: 293c 3c20 3829 7c20 2828 2875 6e73 6967  )<< 8)| (((unsig
006b6d0: 6e65 6420 696e 7429 2870 5b31 5d29 2920  ned int)(p[1])) 
006b6e0: 2929 2c70 2b3d 3229 3b0a 2070 6c20 3d20  )),p+=2);. pl = 
006b6f0: 703b 0a20 7061 7274 456e 6428 293b 0a0a  p;. partEnd();..
006b700: 0a20 6966 2028 732d 3e6d 7367 5f63 616c  . if (s->msg_cal
006b710: 6c62 6163 6b29 0a20 2073 2d3e 6d73 675f  lback).  s->msg_
006b720: 6361 6c6c 6261 636b 2830 2c20 732d 3e76  callback(0, s->v
006b730: 6572 7369 6f6e 2c20 3234 2c0a 2020 2026  ersion, 24,.   &
006b740: 732d 3e73 332d 3e72 7265 632e 6461 7461  s->s3->rrec.data
006b750: 5b30 5d2c 2073 2d3e 7333 2d3e 7272 6563  [0], s->s3->rrec
006b760: 2e6c 656e 6774 682c 0a20 2020 732c 2073  .length,.   s, s
006b770: 2d3e 6d73 675f 6361 6c6c 6261 636b 5f61  ->msg_callback_a
006b780: 7267 293b 0a0a 2069 6620 2868 6274 7970  rg);.. if (hbtyp
006b790: 6520 3d3d 2031 290a 2020 7b0a 2020 756e  e == 1).  {.  un
006b7a0: 7369 676e 6564 2063 6861 7220 2a62 7566  signed char *buf
006b7b0: 6665 722c 202a 6270 3b0a 2020 696e 7420  fer, *bp;.  int 
006b7c0: 723b 0a0a 0a0a 0a0a 2020 6275 6666 6572  r;......  buffer
006b7d0: 203d 2043 5259 5054 4f5f 6d61 6c6c 6f63   = CRYPTO_malloc
006b7e0: 2828 696e 7429 3120 2b20 3220 2b20 7061  ((int)1 + 2 + pa
006b7f0: 796c 6f61 6420 2b20 7061 6464 696e 672c  yload + padding,
006b800: 2264 315f 626f 7468 2e63 222c 3134 3930  "d1_both.c",1490
006b810: 293b 0a20 2062 7020 3d20 6275 6666 6572  );.  bp = buffer
006b820: 3b0a 0a0a 2020 2a62 702b 2b20 3d20 323b  ;...  *bp++ = 2;
006b830: 0a20 2028 2862 705b 305d 3d28 756e 7369  .  ((bp[0]=(unsi
006b840: 676e 6564 2063 6861 7229 2828 2870 6179  gned char)(((pay
006b850: 6c6f 6164 293e 3e20 3829 2630 7866 6629  load)>> 8)&0xff)
006b860: 2c20 6270 5b31 5d3d 2875 6e73 6967 6e65  , bp[1]=(unsigne
006b870: 6420 6368 6172 2928 2828 7061 796c 6f61  d char)(((payloa
006b880: 6429 2029 2630 7866 6629 292c 6270 2b3d  d) )&0xff)),bp+=
006b890: 3229 3b0a 2020 6d65 6d63 7079 2862 702c  2);.  memcpy(bp,
006b8a0: 2070 6c2c 2070 6179 6c6f 6164 293b 0a20   pl, payload);. 
006b8b0: 2062 7020 2b3d 2070 6179 6c6f 6164 3b0a   bp += payload;.
006b8c0: 0a20 2052 414e 445f 7073 6575 646f 5f62  .  RAND_pseudo_b
006b8d0: 7974 6573 2862 702c 2070 6164 6469 6e67  ytes(bp, padding
006b8e0: 293b 0a0a 2020 7220 3d20 6474 6c73 315f  );..  r = dtls1_
006b8f0: 7772 6974 655f 6279 7465 7328 732c 2032  write_bytes(s, 2
006b900: 342c 2062 7566 6665 722c 2033 202b 2070  4, buffer, 3 + p
006b910: 6179 6c6f 6164 202b 2070 6164 6469 6e67  ayload + padding
006b920: 293b 0a0a 2020 6966 2028 7220 3e3d 2030  );..  if (r >= 0
006b930: 2026 2620 732d 3e6d 7367 5f63 616c 6c62   && s->msg_callb
006b940: 6163 6b29 0a20 2020 732d 3e6d 7367 5f63  ack).   s->msg_c
006b950: 616c 6c62 6163 6b28 312c 2073 2d3e 7665  allback(1, s->ve
006b960: 7273 696f 6e2c 2032 342c 0a20 2020 2062  rsion, 24,.    b
006b970: 7566 6665 722c 2033 202b 2070 6179 6c6f  uffer, 3 + paylo
006b980: 6164 202b 2070 6164 6469 6e67 2c0a 2020  ad + padding,.  
006b990: 2020 732c 2073 2d3e 6d73 675f 6361 6c6c    s, s->msg_call
006b9a0: 6261 636b 5f61 7267 293b 0a0a 2020 4352  back_arg);..  CR
006b9b0: 5950 544f 5f66 7265 6528 6275 6666 6572  YPTO_free(buffer
006b9c0: 293b 0a0a 2020 6966 2028 7220 3c20 3029  );..  if (r < 0)
006b9d0: 0a20 2020 7265 7475 726e 2072 3b0a 2020  .   return r;.  
006b9e0: 7d0a 2065 6c73 6520 6966 2028 6862 7479  }. else if (hbty
006b9f0: 7065 203d 3d20 3229 0a20 207b 0a20 2075  pe == 2).  {.  u
006ba00: 6e73 6967 6e65 6420 696e 7420 7365 713b  nsigned int seq;
006ba10: 0a0a 0a0a 0a20 2028 2873 6571 3d28 2828  .....  ((seq=(((
006ba20: 756e 7369 676e 6564 2069 6e74 2928 706c  unsigned int)(pl
006ba30: 5b30 5d29 293c 3c20 3829 7c20 2828 2875  [0]))<< 8)| (((u
006ba40: 6e73 6967 6e65 6420 696e 7429 2870 6c5b  nsigned int)(pl[
006ba50: 315d 2929 2029 292c 706c 2b3d 3229 3b0a  1])) )),pl+=2);.
006ba60: 0a20 2069 6620 2870 6179 6c6f 6164 203d  .  if (payload =
006ba70: 3d20 3138 2026 2620 7365 7120 3d3d 2073  = 18 && seq == s
006ba80: 2d3e 746c 7365 7874 5f68 625f 7365 7129  ->tlsext_hb_seq)
006ba90: 0a20 2020 7b0a 2020 2064 746c 7331 5f73  .   {.   dtls1_s
006baa0: 746f 705f 7469 6d65 7228 7329 3b0a 2020  top_timer(s);.  
006bab0: 2073 2d3e 746c 7365 7874 5f68 625f 7365   s->tlsext_hb_se
006bac0: 712b 2b3b 0a20 2020 732d 3e74 6c73 6578  q++;.   s->tlsex
006bad0: 745f 6862 5f70 656e 6469 6e67 203d 2030  t_hb_pending = 0
006bae0: 3b0a 2020 207d 0a20 207d 0a0a 2072 6574  ;.   }.  }.. ret
006baf0: 7572 6e20 303b 0a20 7d0a 0a69 6e74 0a64  urn 0;. }..int.d
006bb00: 746c 7331 5f68 6561 7274 6265 6174 2853  tls1_heartbeat(S
006bb10: 534c 202a 7329 0a20 7b0a 2075 6e73 6967  SL *s). {. unsig
006bb20: 6e65 6420 6368 6172 202a 6275 662c 202a  ned char *buf, *
006bb30: 703b 0a20 696e 7420 7265 743b 0a20 756e  p;. int ret;. un
006bb40: 7369 676e 6564 2069 6e74 2070 6179 6c6f  signed int paylo
006bb50: 6164 203d 2031 383b 0a20 756e 7369 676e  ad = 18;. unsign
006bb60: 6564 2069 6e74 2070 6164 6469 6e67 203d  ed int padding =
006bb70: 2031 363b 0a0a 0a20 6966 2028 2128 732d   16;... if (!(s-
006bb80: 3e74 6c73 6578 745f 6865 6172 7462 6561  >tlsext_heartbea
006bb90: 7420 2620 3078 3031 2920 7c7c 0a20 2020  t & 0x01) ||.   
006bba0: 2020 732d 3e74 6c73 6578 745f 6865 6172    s->tlsext_hear
006bbb0: 7462 6561 7420 2620 3078 3032 290a 2020  tbeat & 0x02).  
006bbc0: 7b0a 2020 4552 525f 7075 745f 6572 726f  {.  ERR_put_erro
006bbd0: 7228 3230 2c28 3330 3529 2c28 3336 3529  r(20,(305),(365)
006bbe0: 2c22 6431 5f62 6f74 682e 6322 2c31 3534  ,"d1_both.c",154
006bbf0: 3529 3b0a 2020 7265 7475 726e 202d 313b  5);.  return -1;
006bc00: 0a20 207d 0a0a 0a20 6966 2028 732d 3e74  .  }... if (s->t
006bc10: 6c73 6578 745f 6862 5f70 656e 6469 6e67  lsext_hb_pending
006bc20: 290a 2020 7b0a 2020 4552 525f 7075 745f  ).  {.  ERR_put_
006bc30: 6572 726f 7228 3230 2c28 3330 3529 2c28  error(20,(305),(
006bc40: 3336 3629 2c22 6431 5f62 6f74 682e 6322  366),"d1_both.c"
006bc50: 2c31 3535 3229 3b0a 2020 7265 7475 726e  ,1552);.  return
006bc60: 202d 313b 0a20 207d 0a0a 0a20 6966 2028   -1;.  }... if (
006bc70: 2853 534c 5f73 7461 7465 2873 2926 2830  (SSL_state(s)&(0
006bc80: 7831 3030 307c 3078 3230 3030 2929 207c  x1000|0x2000)) |
006bc90: 7c20 732d 3e69 6e5f 6861 6e64 7368 616b  | s->in_handshak
006bca0: 6529 0a20 207b 0a20 2045 5252 5f70 7574  e).  {.  ERR_put
006bcb0: 5f65 7272 6f72 2832 302c 2833 3035 292c  _error(20,(305),
006bcc0: 2832 3434 292c 2264 315f 626f 7468 2e63  (244),"d1_both.c
006bcd0: 222c 3135 3539 293b 0a20 2072 6574 7572  ",1559);.  retur
006bce0: 6e20 2d31 3b0a 2020 7d0a 0a0a 0a0a 2028  n -1;.  }..... (
006bcf0: 766f 6964 2928 2870 6179 6c6f 6164 202b  void)((payload +
006bd00: 2070 6164 6469 6e67 203c 3d20 3136 3338   padding <= 1638
006bd10: 3129 203f 2030 203a 2028 4f70 656e 5353  1) ? 0 : (OpenSS
006bd20: 4c44 6965 2822 6431 5f62 6f74 682e 6322  LDie("d1_both.c"
006bd30: 2c20 3135 3636 2c20 2270 6179 6c6f 6164  , 1566, "payload
006bd40: 202b 2070 6164 6469 6e67 203c 3d20 3136   + padding <= 16
006bd50: 3338 3122 292c 3129 293b 0a23 2031 3537  381"),1));.# 157
006bd60: 3720 2264 315f 626f 7468 2e63 220a 2062  7 "d1_both.c". b
006bd70: 7566 203d 2043 5259 5054 4f5f 6d61 6c6c  uf = CRYPTO_mall
006bd80: 6f63 2828 696e 7429 3120 2b20 3220 2b20  oc((int)1 + 2 + 
006bd90: 7061 796c 6f61 6420 2b20 7061 6464 696e  payload + paddin
006bda0: 672c 2264 315f 626f 7468 2e63 222c 3135  g,"d1_both.c",15
006bdb0: 3737 293b 0a20 7020 3d20 6275 663b 0a0a  77);. p = buf;..
006bdc0: 202a 702b 2b20 3d20 313b 0a0a 2028 2870   *p++ = 1;.. ((p
006bdd0: 5b30 5d3d 2875 6e73 6967 6e65 6420 6368  [0]=(unsigned ch
006bde0: 6172 2928 2828 7061 796c 6f61 6429 3e3e  ar)(((payload)>>
006bdf0: 2038 2926 3078 6666 292c 2070 5b31 5d3d   8)&0xff), p[1]=
006be00: 2875 6e73 6967 6e65 6420 6368 6172 2928  (unsigned char)(
006be10: 2828 7061 796c 6f61 6429 2029 2630 7866  ((payload) )&0xf
006be20: 6629 292c 702b 3d32 293b 0a0a 2028 2870  f)),p+=2);.. ((p
006be30: 5b30 5d3d 2875 6e73 6967 6e65 6420 6368  [0]=(unsigned ch
006be40: 6172 2928 2828 732d 3e74 6c73 6578 745f  ar)(((s->tlsext_
006be50: 6862 5f73 6571 293e 3e20 3829 2630 7866  hb_seq)>> 8)&0xf
006be60: 6629 2c20 705b 315d 3d28 756e 7369 676e  f), p[1]=(unsign
006be70: 6564 2063 6861 7229 2828 2873 2d3e 746c  ed char)(((s->tl
006be80: 7365 7874 5f68 625f 7365 7129 2029 2630  sext_hb_seq) )&0
006be90: 7866 6629 292c 702b 3d32 293b 0a0a 2052  xff)),p+=2);.. R
006bea0: 414e 445f 7073 6575 646f 5f62 7974 6573  AND_pseudo_bytes
006beb0: 2870 2c20 3136 293b 0a20 7020 2b3d 2031  (p, 16);. p += 1
006bec0: 363b 0a0a 2052 414e 445f 7073 6575 646f  6;.. RAND_pseudo
006bed0: 5f62 7974 6573 2870 2c20 7061 6464 696e  _bytes(p, paddin
006bee0: 6729 3b0a 0a20 7265 7420 3d20 6474 6c73  g);.. ret = dtls
006bef0: 315f 7772 6974 655f 6279 7465 7328 732c  1_write_bytes(s,
006bf00: 2032 342c 2062 7566 2c20 3320 2b20 7061   24, buf, 3 + pa
006bf10: 796c 6f61 6420 2b20 7061 6464 696e 6729  yload + padding)
006bf20: 3b0a 2069 6620 2872 6574 203e 3d20 3029  ;. if (ret >= 0)
006bf30: 0a20 207b 0a20 2069 6620 2873 2d3e 6d73  .  {.  if (s->ms
006bf40: 675f 6361 6c6c 6261 636b 290a 2020 2073  g_callback).   s
006bf50: 2d3e 6d73 675f 6361 6c6c 6261 636b 2831  ->msg_callback(1
006bf60: 2c20 732d 3e76 6572 7369 6f6e 2c20 3234  , s->version, 24
006bf70: 2c0a 2020 2020 6275 662c 2033 202b 2070  ,.    buf, 3 + p
006bf80: 6179 6c6f 6164 202b 2070 6164 6469 6e67  ayload + padding
006bf90: 2c0a 2020 2020 732c 2073 2d3e 6d73 675f  ,.    s, s->msg_
006bfa0: 6361 6c6c 6261 636b 5f61 7267 293b 0a0a  callback_arg);..
006bfb0: 2020 6474 6c73 315f 7374 6172 745f 7469    dtls1_start_ti
006bfc0: 6d65 7228 7329 3b0a 2020 732d 3e74 6c73  mer(s);.  s->tls
006bfd0: 6578 745f 6862 5f70 656e 6469 6e67 203d  ext_hb_pending =
006bfe0: 2031 3b0a 2020 7d0a 0a20 4352 5950 544f   1;.  }.. CRYPTO
006bff0: 5f66 7265 6528 6275 6629 3b0a 0a20 7265  _free(buf);.. re
006c000: 7475 726e 2072 6574 3b0a 207d 0a23 2031  turn ret;. }.# 1
006c010: 3220 226d 6169 6e2e 6322 2032 0a0a 696e  2 "main.c" 2..in
006c020: 7420 6d61 696e 2829 7b0a 0a20 7265 7475  t main(){.. retu
006c030: 726e 2030 3b0a 7d0a                      rn 0;.}.
